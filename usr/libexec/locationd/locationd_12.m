void sub_10049802C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  void *v18;
  __cxa_free_exception(v18);
  if (a17) {
    (*(void (**)(uint64_t))(*(void *)a17 + 8LL))(a17);
  }
  sub_1011F8850((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_1004980A0(std::runtime_error *this)
{
  this->__vftable = (std::runtime_error_vtbl *)off_10183C138;
  if (SHIBYTE(this[4].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }
  if (SHIBYTE(this[2].__vftable) < 0) {
    operator delete(this[1].__vftable);
  }
  std::runtime_error::~runtime_error(this);
}

void sub_1004980F0(uint64_t a1, unint64_t a2)
{
  if (sub_100400B64(a1))
  {
    if ((a2 & 0x8000000000000000LL) != 0) {
      return;
    }
    unsigned int v4 = sub_100498AD4(a1);
    p_vtable = (void *)(v4 - a2);
    if (v4 <= a2) {
      return;
    }
    __p = 0LL;
    v70 = 0LL;
    v71 = 0LL;
    v61.__r_.__value_.__s.__size_ = 18;
    strcpy((char *)&v61, "SELECT ROWID FROM ");
    v6 = (const std::string::value_type *)(a1 + 272);
    v7 = std::string::append(&v61, v6);
    __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v62.__r_.__value_.__l.__cap_ = v7->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v62.__r_.__value_.__l.__data_ = v8;
    v7->__r_.__value_.__l.__size_ = 0LL;
    v7->__r_.__value_.__l.__cap_ = 0LL;
    v7->__r_.__value_.__r.__words[0] = 0LL;
    v9 = std::string::append(&v62, " WHERE ");
    __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v63.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    v9->__r_.__value_.__r.__words[0] = 0LL;
    v11 = std::string::append(&v63, "FenceForeignKey");
    __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v64.__r_.__value_.__l.__cap_ = v11->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v64.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    v11->__r_.__value_.__r.__words[0] = 0LL;
    v13 = std::string::append(&v64, " =");
    __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v65.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v65.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0LL;
    v13->__r_.__value_.__l.__cap_ = 0LL;
    v13->__r_.__value_.__r.__words[0] = 0LL;
    std::to_string(&v60, -1);
    if ((v60.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v15 = &v60;
    }
    else {
      v15 = (std::string *)v60.__r_.__value_.__r.__words[0];
    }
    if ((v60.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = v60.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = v60.__r_.__value_.__l.__size_;
    }
    v17 = std::string::append(&v65, (const std::string::value_type *)v15, size);
    __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v66.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0LL;
    v17->__r_.__value_.__l.__cap_ = 0LL;
    v17->__r_.__value_.__r.__words[0] = 0LL;
    v19 = std::string::append(&v66, " ORDER BY ");
    __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v67.__r_.__value_.__l.__cap_ = v19->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v67.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0LL;
    v19->__r_.__value_.__l.__cap_ = 0LL;
    v19->__r_.__value_.__r.__words[0] = 0LL;
    v21 = std::string::append(&v67, "Timestamp");
    __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v68.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v68.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0LL;
    v21->__r_.__value_.__l.__cap_ = 0LL;
    v21->__r_.__value_.__r.__words[0] = 0LL;
    v23 = std::string::append(&v68, " ASC LIMIT ?");
    __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    buf[0].__r_.__value_.__l.__cap_ = v23->__r_.__value_.__l.__cap_;
    *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0LL;
    v23->__r_.__value_.__l.__cap_ = 0LL;
    v23->__r_.__value_.__r.__words[0] = 0LL;
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v25 = buf;
    }
    else {
      v25 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v25, &v68);
    uint64_t v26 = v68.__r_.__value_.__r.__words[0];
    v27 = (sqlite3_stmt *)sub_100019240((uint64_t)v68.__r_.__value_.__l.__data_);
    if (sub_1003C2D24(v27, 1, (sqlite3_int64)p_vtable))
    {
      sub_1000A7198(&__p, (unint64_t)p_vtable);
      v28 = (sqlite3_stmt *)sub_100019240(v26);
      while (j__sqlite3_step(v28) == 100)
      {
        sqlite3_int64 v29 = sqlite3_column_int64(v28, 0);
        sqlite3_int64 v30 = v29;
        v31 = v70;
        if (v70 >= v71)
        {
          v33 = (char *)__p;
          uint64_t v34 = (v70 - (_BYTE *)__p) >> 3;
          unint64_t v35 = v34 + 1;
          uint64_t v36 = v71 - (_BYTE *)__p;
          if ((v71 - (_BYTE *)__p) >> 2 > v35) {
            unint64_t v35 = v36 >> 2;
          }
          else {
            unint64_t v37 = v35;
          }
          if (v37)
          {
            v38 = (char *)sub_1000071BC((uint64_t)&v71, v37);
            v33 = (char *)__p;
            v31 = v70;
          }

          else
          {
            v38 = 0LL;
          }

          v39 = (sqlite3_int64 *)&v38[8 * v34];
          sqlite3_int64 *v39 = v30;
          v32 = (char *)(v39 + 1);
          while (v31 != v33)
          {
            sqlite3_int64 v40 = *((void *)v31 - 1);
            v31 -= 8;
            *--v39 = v40;
          }

          __p = v39;
          v70 = v32;
          v71 = &v38[8 * v37];
          if (v33) {
            operator delete(v33);
          }
        }

        else
        {
          *(void *)v70 = v29;
          v32 = v31 + 8;
        }

        v70 = v32;
      }

      if (v26) {
        (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
      }
      v67.__r_.__value_.__s.__size_ = 12;
      strcpy((char *)&v67, "DELETE FROM ");
      v42 = (const std::string::value_type *)(a1 + 272);
      v43 = std::string::append(&v67, v42);
      __int128 v44 = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
      buf[0].__r_.__value_.__l.__cap_ = v43->__r_.__value_.__l.__cap_;
      *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v44;
      v43->__r_.__value_.__l.__size_ = 0LL;
      v43->__r_.__value_.__l.__cap_ = 0LL;
      v43->__r_.__value_.__r.__words[0] = 0LL;
      v45 = std::string::append(buf, " WHERE ROWID=?");
      __int128 v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      v68.__r_.__value_.__l.__cap_ = v45->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v68.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0LL;
      v45->__r_.__value_.__l.__cap_ = 0LL;
      v45->__r_.__value_.__r.__words[0] = 0LL;
      if ((v68.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        v47 = &v68;
      }
      else {
        v47 = (std::string *)v68.__r_.__value_.__r.__words[0];
      }
      sub_1003C0D54(a1 + 64, (char *)v47, buf);
      uint64_t v48 = buf[0].__r_.__value_.__r.__words[0];
      uint64_t v49 = sub_100019240((uint64_t)buf[0].__r_.__value_.__l.__data_);
      v50 = (sqlite3_int64 *)__p;
      v51 = (sqlite3_int64 *)v70;
      if (__p == v70)
      {
LABEL_87:
        if (v48) {
          (*(void (**)(uint64_t))(*(void *)v48 + 8LL))(v48);
        }
        if (__p)
        {
          v70 = (char *)__p;
          operator delete(__p);
        }

        return;
      }

      v52 = (sqlite3_stmt *)v49;
      p_vtable = &_mh_execute_header;
      while (1)
      {
        sqlite3_int64 v53 = *v50;
        v54 = (sqlite3_stmt *)sub_100019240(v48);
        if (!sub_1003C2D24(v54, 1, v53)) {
          break;
        }
        if (!j__sqlite3_step(v52))
        {
          if (qword_101934A20 != -1) {
            dispatch_once(&qword_101934A20, &stru_10183C108);
          }
          v55 = (os_log_s *)off_101934A28;
          if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_ERROR))
          {
            LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_ERROR,  "failed to execute statement properly",  (uint8_t *)buf,  2u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934A20 != -1) {
              dispatch_once(&qword_101934A20, &stru_10183C108);
            }
            LOWORD(v67.__r_.__value_.__l.__data_) = 0;
            LODWORD(v59) = 2;
            v56 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  16LL,  "failed to execute statement properly",  &v67,  v59);
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiLocationDatabase::truncatePastLimit(int64_t)",  "%s\n",  (const char *)v56);
            if (v56 != buf) {
              free(v56);
            }
          }
        }

        sqlite3_clear_bindings(v52);
        sqlite3_reset(v52);
        if (++v50 == v51) {
          goto LABEL_87;
        }
      }

      sub_10123AA9C();
      abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Network/CLWifiLocationDatabase.mm",  219,  "truncatePastLimit");
    }

    else
    {
      sub_10123ABE0();
      abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Network/CLWifiLocationDatabase.mm",  201,  "truncatePastLimit");
    }

    __break(1u);
LABEL_100:
    dispatch_once(&qword_101934A20, &stru_10183C108);
LABEL_94:
    uint64_t v57 = p_vtable[325];
    LOWORD(__p) = 0;
    LODWORD(v59) = 2;
    v58 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v57,  2LL,  "#Warning Attempt to call truncatePastLimit() without a backing database in CLWifiLocationDatabase!",  &__p,  v59);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationDatabase::truncatePastLimit(int64_t)",  "%s\n",  (const char *)v58);
    if (v58 != buf) {
      free(v58);
    }
    return;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_10183C108);
  }
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  v41 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call truncatePastLimit() without a backing database in CLWifiLocationDatabase!",  (uint8_t *)buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A20 == -1) {
      goto LABEL_94;
    }
    goto LABEL_100;
  }

void sub_100498938( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21, uint64_t a22, uint64_t a23, uint64_t a24, void *a25, uint64_t a26, uint64_t a27, uint64_t a28, void *a29, uint64_t a30, uint64_t a31, uint64_t a32, void *a33, uint64_t a34, uint64_t a35, uint64_t a36, void *a37, uint64_t a38, uint64_t a39, uint64_t a40, void *a41, uint64_t a42, uint64_t a43, uint64_t a44, void *__p, uint64_t a46, int a47, __int16 a48, char a49, char a50,uint64_t a51,void *a52)
{
  if (v52) {
    (*(void (**)(uint64_t))(*(void *)v52 + 8LL))(v52);
  }
  if (a50 < 0) {
    operator delete(__p);
  }
  if (a52) {
    operator delete(a52);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100498AD4(uint64_t a1)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)v18);
    v2 = sub_10000CF44(&v19, (uint64_t)"SELECT COUNT(*) FROM ", 21LL);
    v3 = (const char *)(a1 + 272);
    size_t v4 = strlen(v3);
    v5 = sub_10000CF44(v2, (uint64_t)v3, v4);
    sub_10000CF44(v5, (uint64_t)";", 1LL);
    std::stringbuf::str(&v22, &v20);
    if ((v22.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v6 = &v22;
    }
    else {
      v6 = (std::stringbuf::string_type *)v22.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v6, v17);
    uint64_t v7 = v17[0];
    v17[0] = 0LL;
    __int128 v8 = (sqlite3_stmt *)sub_100019240(v7);
    if (j__sqlite3_step(v8) == 100)
    {
      v9 = (sqlite3_stmt *)sub_100019240(v7);
      uint64_t v10 = sqlite3_column_int(v9, 0);
      if (!v7) {
        goto LABEL_25;
      }
    }

    else
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183C170);
      }
      __int128 v12 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
      {
        LOWORD(v22.__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "invalid return value getting size of WifiLocation table",  (uint8_t *)&v22,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&v22, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10183C170);
        }
        LOWORD(v17[0]) = 0;
        v16 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v22,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "invalid return value getting size of WifiLocation table",  v17,  2);
        sub_10029211C("Generic", 1LL, 0, 0LL, "uint32_t CLWifiLocationDatabase::count()", "%s\n", (const char *)v16);
        if (v16 != &v22) {
          free(v16);
        }
      }

      uint64_t v10 = 0LL;
      if (!v7) {
        goto LABEL_25;
      }
    }

    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
LABEL_25:
    *(void *)((char *)v18
    uint64_t v19 = v13;
    std::streambuf::~streambuf(&v20);
    std::ios::~ios(&v21);
    return v10;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_10183C108);
  }
  v11 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v22.__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call count() without a backing database in CLWifiLocationDatabase!",  (uint8_t *)&v22,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v22, 0x65CuLL);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_10183C108);
    }
    LOWORD(v18[0]) = 0;
    v15 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v22,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call count() without a backing database in CLWifiLocationDatabase!",  v18,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "uint32_t CLWifiLocationDatabase::count()", "%s\n", (const char *)v15);
    if (v15 != &v22) {
      free(v15);
    }
  }

  return 0LL;
}

void sub_100498EF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, void *__p, uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8LL))(v54);
  }
  sub_1011F8850((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_100498F50(uint64_t a1, sqlite3_int64 a2, uint64_t a3)
{
  if (sub_100400B64(a1))
  {
    v29.__r_.__value_.__s.__size_ = 7;
    strcpy((char *)&v29, "SELECT ");
    sub_1004993F0(&__p);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = __p.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    __int128 v8 = std::string::append(&v29, (const std::string::value_type *)p_p, size);
    __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__l.__cap_ = v8->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0LL;
    v8->__r_.__value_.__l.__cap_ = 0LL;
    v8->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v10 = std::string::append(&v30, " FROM ");
    __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__l.__cap_ = v10->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0LL;
    v10->__r_.__value_.__l.__cap_ = 0LL;
    v10->__r_.__value_.__r.__words[0] = 0LL;
    int v12 = *(char *)(a1 + 295);
    if (v12 >= 0) {
      uint64_t v13 = (const std::string::value_type *)(a1 + 272);
    }
    else {
      uint64_t v13 = *(const std::string::value_type **)(a1 + 272);
    }
    if (v12 >= 0) {
      std::string::size_type v14 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      std::string::size_type v14 = *(void *)(a1 + 280);
    }
    v15 = std::string::append(&v31, v13, v14);
    __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__l.__cap_ = v15->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0LL;
    v15->__r_.__value_.__l.__cap_ = 0LL;
    v15->__r_.__value_.__r.__words[0] = 0LL;
    v17 = std::string::append(&v32, " WHERE ROWID=?");
    __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    int64_t cap = v17->__r_.__value_.__l.__cap_;
    *(_OWORD *)buf = v18;
    v17->__r_.__value_.__l.__size_ = 0LL;
    v17->__r_.__value_.__l.__cap_ = 0LL;
    v17->__r_.__value_.__r.__words[0] = 0LL;
    if (cap >= 0) {
      uint64_t v19 = (char *)buf;
    }
    else {
      uint64_t v19 = *(char **)buf;
    }
    sub_1003C0D54(a1 + 64, v19, &v32);
    std::stringbuf v20 = (sqlite3_stmt *)sub_100019240((uint64_t)v32.__r_.__value_.__l.__data_);
    if (sub_1003C2D24(v20, 1, a2) && j__sqlite3_step(v20) == 100)
    {
      sqlite3_int64 v21 = sqlite3_column_int64(v20, 0);
      nullsub_10(v21);
      *(void *)a3 = v22;
      *(_DWORD *)(a3 + 12) = sqlite3_column_int(v20, 1);
      *(_DWORD *)(a3 + 20) = sqlite3_column_int(v20, 2);
      *(_DWORD *)(a3 + 8) = sqlite3_column_int(v20, 3);
      *(_DWORD *)(a3 + 16) = sqlite3_column_int(v20, 4);
      *(_DWORD *)(a3 + 24) = sqlite3_column_int(v20, 5);
      *(_DWORD *)(a3 + 28) = sqlite3_column_int(v20, 6);
      uint64_t v23 = 1LL;
    }

    else
    {
      uint64_t v23 = 0LL;
    }

    std::string::size_type v25 = v32.__r_.__value_.__r.__words[0];
    v32.__r_.__value_.__r.__words[0] = 0LL;
    if (v25) {
      (*(void (**)(std::string::size_type))(*(void *)v25 + 8LL))(v25);
    }
    if (SHIBYTE(cap) < 0) {
      operator delete(*(void **)buf);
    }
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_10183C108);
    }
    __int128 v24 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call getLocation() without a backing database in CLWifiLocationDatabase!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_10183C108);
      }
      LOWORD(v32.__r_.__value_.__l.__data_) = 0;
      v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call getLocation() without a backing database in CLWifiLocationDatabase!",  &v32,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiLocationDatabase::getLocation(sqlite3_int64, WifiData &) const",  "%s\n",  v27);
    }

    return 0LL;
  }

  return v23;
}

void sub_100499334( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, void *a30, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, void *a37, uint64_t a38, int a39, __int16 a40, char a41, char a42, uint64_t a43, void *__p, uint64_t a45, int a46, __int16 a47, char a48, char a49)
{
  if (a37) {
    (*(void (**)(void *))(*(void *)a37 + 8LL))(a37);
  }
  if (a49 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004993F0(std::string *a1@<X8>)
{
  uint64_t v2 = 0LL;
  v11[0] = "MAC";
  v11[1] = "Channel";
  v11[2] = "InfoMask";
  v11[3] = "Score";
  v11[4] = "Reach";
  v11[5] = "FenceForeignKey";
  v11[6] = "ZaxisHarvestTraces";
  a1->__r_.__value_.__l.__size_ = 0LL;
  a1->__r_.__value_.__l.__cap_ = 0LL;
  a1->__r_.__value_.__r.__words[0] = 0LL;
  do
  {
    std::string::size_type size = a1->__r_.__value_.__s.__size_;
    if ((size & 0x80u) != 0LL) {
      std::string::size_type size = a1->__r_.__value_.__l.__size_;
    }
    if (size)
    {
      v8.__r_.__value_.__s.__size_ = 2;
      strcpy((char *)&v8, ", ");
      size_t v4 = std::string::append(&v8, (const std::string::value_type *)v11[v2]);
      __int128 v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      int64_t cap = v4->__r_.__value_.__l.__cap_;
      *(_OWORD *)std::string __p = v5;
      v4->__r_.__value_.__l.__size_ = 0LL;
      v4->__r_.__value_.__l.__cap_ = 0LL;
      v4->__r_.__value_.__r.__words[0] = 0LL;
      if (cap >= 0) {
        v6 = __p;
      }
      else {
        v6 = (void **)__p[0];
      }
      if (cap >= 0) {
        std::string::size_type v7 = HIBYTE(cap);
      }
      else {
        std::string::size_type v7 = (std::string::size_type)__p[1];
      }
      std::string::append(a1, (const std::string::value_type *)v6, v7);
      if (SHIBYTE(cap) < 0) {
        operator delete(__p[0]);
      }
    }

    else
    {
      std::string::append(a1, (const std::string::value_type *)v11[v2]);
    }

    ++v2;
  }

  while (v2 != 7);
}

void sub_100499564( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
}

uint64_t sub_1004995B0(uint64_t a1, int *a2, uint64_t a3)
{
  if (sub_100400B64(a1))
  {
    v38.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
    *(_OWORD *)&v38.__r_.__value_.__r.__words[1] = xmmword_1012C8520;
    strcpy(v38.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
    int v6 = *(char *)(a1 + 295);
    if (v6 >= 0) {
      std::string::size_type v7 = (const std::string::value_type *)(a1 + 272);
    }
    else {
      std::string::size_type v7 = *(const std::string::value_type **)(a1 + 272);
    }
    if (v6 >= 0) {
      std::string::size_type v8 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      std::string::size_type v8 = *(void *)(a1 + 280);
    }
    __int128 v9 = std::string::append(&v38, v7, v8);
    __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    v9->__r_.__value_.__r.__words[0] = 0LL;
    char v37 = 2;
    strcpy(__s, " (");
    __int128 v11 = std::string::append(&v39, __s, 2uLL);
    __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__l.__cap_ = v11->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    v11->__r_.__value_.__r.__words[0] = 0LL;
    sub_1004993F0(&__p);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = __p.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    v15 = std::string::append(&v40, (const std::string::value_type *)p_p, size);
    __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__l.__cap_ = v15->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0LL;
    v15->__r_.__value_.__l.__cap_ = 0LL;
    v15->__r_.__value_.__r.__words[0] = 0LL;
    v17 = (char *)operator new(0x20uLL);
    strcpy(v17, ") VALUES (?,?,?,?,?,?,?)");
    __int128 v18 = std::string::append(&v41, v17, 0x18uLL);
    __int128 v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    int64_t cap = v18->__r_.__value_.__l.__cap_;
    __int128 buf = v19;
    v18->__r_.__value_.__l.__size_ = 0LL;
    v18->__r_.__value_.__l.__cap_ = 0LL;
    v18->__r_.__value_.__r.__words[0] = 0LL;
    operator delete(v17);
    if (v37 < 0) {
      operator delete(*(void **)__s);
    }
    if (cap >= 0) {
      p___int128 buf = (char *)&buf;
    }
    else {
      p___int128 buf = (char *)buf;
    }
    sub_1003C0D54(a1 + 64, p_buf, &v41);
    uint64_t v21 = v41.__r_.__value_.__r.__words[0];
    uint64_t v22 = (sqlite3_stmt *)sub_100019240((uint64_t)v41.__r_.__value_.__l.__data_);
    sqlite3_int64 v23 = sub_1005B46E8((uint64_t)a2);
    if (sub_1003C2D24(v22, 1, v23)
      && (__int128 v24 = (sqlite3_stmt *)sub_100019240(v21), sub_1003C28BC(v24, 2, a2[3]))
      && (std::string::size_type v25 = (sqlite3_stmt *)sub_100019240(v21), sub_1003C28BC(v25, 3, a2[5]))
      && (uint64_t v26 = (sqlite3_stmt *)sub_100019240(v21), sub_1003C28BC(v26, 4, a2[2]))
      && (v27 = (sqlite3_stmt *)sub_100019240(v21), sub_1003C28BC(v27, 5, a2[4]))
      && (v28 = (sqlite3_stmt *)sub_100019240(v21), sub_1003C28BC(v28, 6, a2[6]))
      && (std::string v29 = (sqlite3_stmt *)sub_100019240(v21), sub_1003C28BC(v29, 7, a2[7])))
    {
      std::string v30 = (sqlite3_stmt *)sub_100019240(v21);
      sub_1003BB2BC(a1 + 64, v30);
      v41.__r_.__value_.__r.__words[0] = sub_1003C1068(a1 + 64);
      uint64_t v31 = sub_100401CE8((uint64_t *)a1, (sqlite3_int64 *)&v41, a3);
    }

    else
    {
      uint64_t v31 = 0LL;
    }

    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
    }
    if (SHIBYTE(cap) < 0) {
      operator delete((void *)buf);
    }
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_10183C108);
    }
    std::string v32 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call setLocation() without a backing database in CLWifiLocationDatabase!",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_10183C108);
      }
      LOWORD(v41.__r_.__value_.__l.__data_) = 0;
      uint64_t v34 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call setLocation() without a backing database in CLWifiLocationDatabase!",  &v41,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiLocationDatabase::setLocation(const WifiData &, const CLDaemonLocation &)",  "%s\n",  v34);
    }

    return 0LL;
  }

  return v31;
}

void sub_100499A50( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, void *a30, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, void *a37, uint64_t a38, int a39, __int16 a40, char a41, char a42, uint64_t a43, void *a44, uint64_t a45, int a46, __int16 a47, char a48, char a49, uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8LL))(v56);
  }
  if (a56 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100499B28(uint64_t a1, uint64_t a2)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)buf);
    size_t v4 = sub_10000CF44(&v31, (uint64_t)"UPDATE OR IGNORE ", 17LL);
    __int128 v5 = (const char *)(a1 + 272);
    size_t v6 = strlen(v5);
    std::string::size_type v7 = sub_10000CF44(v4, (uint64_t)v5, v6);
    std::string::size_type v8 = sub_10000CF44(v7, (uint64_t)" SET ", 5LL);
    size_t v9 = strlen("Score");
    __int128 v10 = sub_10000CF44(v8, (uint64_t)"Score", v9);
    __int128 v11 = sub_10000CF44(v10, (uint64_t)" = ", 3LL);
    size_t v12 = strlen("Score");
    uint64_t v13 = sub_10000CF44(v11, (uint64_t)"Score", v12);
    std::string::size_type v14 = sub_10000CF44(v13, (uint64_t)" / 2.0 ", 7LL);
    v15 = sub_10000CF44(v14, (uint64_t)" WHERE ", 7LL);
    __int128 v16 = sub_10000CF44(v15, (uint64_t)"MAC", 3LL);
    sub_10000CF44(v16, (uint64_t)" = ? ", 5LL);
    std::stringbuf::str(&v28, &v32);
    if ((v28.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v17 = &v28;
    }
    else {
      v17 = (std::stringbuf::string_type *)v28.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v17, &v29);
    uint64_t v18 = v29;
    uint64_t v29 = 0LL;
    __int128 v19 = (sqlite3_stmt *)sub_100019240(v18);
    sqlite3_int64 v20 = sub_1005B46E8(a2);
    if (sub_1003C2D24(v19, 1, v20))
    {
      uint64_t v21 = (sqlite3_stmt *)sub_100019240(v18);
      BOOL v22 = j__sqlite3_step(v21) == 101;
      if (!v18) {
        goto LABEL_20;
      }
    }

    else
    {
      BOOL v22 = 0LL;
      if (!v18)
      {
LABEL_20:
        uint64_t v31 = v24;
        std::streambuf::~streambuf(&v32);
        std::ios::~ios(&v33);
        return v22;
      }
    }

    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    goto LABEL_20;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_10183C108);
  }
  sqlite3_int64 v23 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call downgradeAPByScore() without a backing database in CLWifiLocationDatabase!",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_10183C108);
    }
    LOWORD(v28.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call downgradeAPByScore() without a backing database in CLWifiLocationDatabase!",  &v28,  2);
    v27 = (uint8_t *)v26;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiLocationDatabase::downgradeAPByScore(const CLMacAddress &)",  "%s\n",  v26);
    if (v27 != buf) {
      free(v27);
    }
  }

  return 0LL;
}

void sub_100499EC4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_100499F18( uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, char **a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)v139);
    uint64_t v13 = sub_10000CF44(&v140, (uint64_t)"SELECT ", 7LL);
    std::string::size_type v14 = sub_10000CF44(v13, (uint64_t)"MAC", 3LL);
    v15 = sub_10000CF44(v14, (uint64_t)" , ", 3LL);
    size_t v16 = strlen("Latitude");
    v17 = sub_10000CF44(v15, (uint64_t)"Latitude", v16);
    uint64_t v18 = sub_10000CF44(v17, (uint64_t)" , ", 3LL);
    size_t v19 = strlen("Longitude");
    sqlite3_int64 v20 = sub_10000CF44(v18, (uint64_t)"Longitude", v19);
    uint64_t v21 = sub_10000CF44(v20, (uint64_t)" , ", 3LL);
    size_t v22 = strlen("Altitude");
    sqlite3_int64 v23 = sub_10000CF44(v21, (uint64_t)"Altitude", v22);
    uint64_t v24 = sub_10000CF44(v23, (uint64_t)" , ", 3LL);
    size_t v25 = strlen("HorizontalAccuracy");
    uint64_t v26 = sub_10000CF44(v24, (uint64_t)"HorizontalAccuracy", v25);
    v27 = sub_10000CF44(v26, (uint64_t)" , ", 3LL);
    size_t v28 = strlen("VerticalAccuracy");
    uint64_t v29 = sub_10000CF44(v27, (uint64_t)"VerticalAccuracy", v28);
    std::string v30 = sub_10000CF44(v29, (uint64_t)" , ", 3LL);
    size_t v31 = strlen("Score");
    std::stringbuf v32 = sub_10000CF44(v30, (uint64_t)"Score", v31);
    uint64_t v33 = sub_10000CF44(v32, (uint64_t)" , ", 3LL);
    size_t v34 = strlen("Reach");
    unint64_t v35 = sub_10000CF44(v33, (uint64_t)"Reach", v34);
    uint64_t v36 = sub_10000CF44(v35, (uint64_t)" , ", 3LL);
    char v37 = sub_10000CF44(v36, (uint64_t)"Channel", 7LL);
    std::string v38 = sub_10000CF44(v37, (uint64_t)" , ", 3LL);
    std::string v39 = sub_10000CF44(v38, (uint64_t)"InfoMask", 8LL);
    std::string v40 = sub_10000CF44(v39, (uint64_t)" , ", 3LL);
    size_t v41 = strlen("Timestamp");
    v42 = sub_10000CF44(v40, (uint64_t)"Timestamp", v41);
    v43 = sub_10000CF44(v42, (uint64_t)" FROM ", 6LL);
    int v44 = *(char *)(a1 + 295);
    if (v44 >= 0) {
      uint64_t v45 = a1 + 272;
    }
    else {
      uint64_t v45 = *(void *)(a1 + 272);
    }
    if (v44 >= 0) {
      uint64_t v46 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      uint64_t v46 = *(void *)(a1 + 280);
    }
    v47 = sub_10000CF44(v43, v45, v46);
    uint64_t v48 = sub_10000CF44(v47, (uint64_t)" WHERE ", 7LL);
    uint64_t v49 = sub_10000CF44(v48, (uint64_t)"FenceForeignKey", 15LL);
    v50 = sub_10000CF44(v49, (uint64_t)" =?", 3LL);
    v51 = sub_10000CF44(v50, (uint64_t)" ORDER BY Score DESC LIMIT ", 27LL);
    uint64_t v52 = (void *)std::ostream::operator<<(v51, 400LL);
    sub_10000CF44(v52, (uint64_t)";", 1LL);
    std::stringbuf::str(&v151, &v141);
    if ((v151.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      sqlite3_int64 v53 = &v151;
    }
    else {
      sqlite3_int64 v53 = (std::stringbuf::string_type *)v151.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v53, v146);
    uint64_t v54 = *(void *)v146;
    *(void *)v146 = 0LL;
    v55 = (sqlite3_stmt *)sub_100019240(v54);
    BOOL v56 = sub_1003C28BC(v55, 1, a2);
    *a5 = 0LL;
    a5[1] = 0LL;
    a5[2] = 0LL;
    if (v56)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v57 = (sqlite3_stmt *)sub_100019240(v54);
          if (j__sqlite3_step(v57) != 100)
          {
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_10183C150);
            }
            v124 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
            {
              unint64_t v125 = 0xAAAAAAAAAAAAAAABLL * ((a5[1] - *a5) >> 5);
              LODWORD(v151.__r_.__value_.__l.__data_) = 67109376;
              HIDWORD(v151.__r_.__value_.__r.__words[0]) = a2;
              LOWORD(v151.__r_.__value_.__r.__words[1]) = 2048;
              *(std::string::size_type *)((char *)&v151.__r_.__value_.__r.__words[1] + 2) = v125;
              _os_log_impl( (void *)&_mh_execute_header,  v124,  OS_LOG_TYPE_DEBUG,  "Coarse wifi query fence key, %d, aps, %ld",  (uint8_t *)&v151,  0x12u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(&v151, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_10183C150);
              }
              unint64_t v129 = 0xAAAAAAAAAAAAAAABLL * ((a5[1] - *a5) >> 5);
              *(_DWORD *)v146 = 67109376;
              *(_DWORD *)&v146[4] = a2;
              *(_WORD *)&v146[8] = 2048;
              *(void *)&v146[10] = v129;
              LODWORD(v132) = 18;
              _os_log_send_and_compose_impl( 2LL,  0LL,  &v151,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Coarse wifi query fence key, %d, aps, %ld",  v146,  v132);
              v131 = (std::stringbuf::string_type *)v130;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::vector<CLWifiAPLocation> CLWifiLocationDatabase::getNearbyWifisForFence(double, double, double, int , int, BOOL, double)",  "%s\n",  v130);
              if (v131 != &v151) {
                free(v131);
              }
            }

            sub_10049AD68((uint64_t)a5);
            goto LABEL_97;
          }

          v58 = (sqlite3_stmt *)sub_100019240(v54);
          sqlite3_int64 v59 = sqlite3_column_int64(v58, 0);
          nullsub_10(v59);
          uint64_t v61 = v60;
          std::string v62 = (sqlite3_stmt *)sub_100019240(v54);
          double v138 = sqlite3_column_double(v62, 1);
          std::string v63 = (sqlite3_stmt *)sub_100019240(v54);
          double v64 = sqlite3_column_double(v63, 2);
          std::string v65 = (sqlite3_stmt *)sub_100019240(v54);
          double v66 = sqlite3_column_double(v65, 3);
          std::string v67 = (sqlite3_stmt *)sub_100019240(v54);
          double v68 = sqlite3_column_double(v67, 4);
          v69 = (sqlite3_stmt *)sub_100019240(v54);
          double v70 = sqlite3_column_double(v69, 5);
          v71 = (sqlite3_stmt *)sub_100019240(v54);
          double v72 = sqlite3_column_double(v71, 6);
          v73 = (sqlite3_stmt *)sub_100019240(v54);
          double v74 = sqlite3_column_double(v73, 7);
          v75 = (sqlite3_stmt *)sub_100019240(v54);
          double v76 = sqlite3_column_double(v75, 8);
          v77 = (sqlite3_stmt *)sub_100019240(v54);
          double v78 = sqlite3_column_double(v77, 9);
          v79 = (sqlite3_stmt *)sub_100019240(v54);
          double v80 = sqlite3_column_double(v79, 10);
          sub_100C39CB0( (uint64_t)v146,  v61,  (int)v74,  (int)v76,  v78,  (int)v72,  -1,  v138,  v64,  v66,  v68,  v70,  v80);
          if (sub_100C3A418((double *)v146))
          {
            if (SDWORD1(v148) > 0) {
              int v81 = 1;
            }
            else {
              int v81 = a4;
            }
            if (a9 >= 0.0 && v81 && *(double *)&v147 > a9)
            {
              LOBYTE(v81) = 0;
            }

            else
            {
              char v97 = v81 ^ 1;
              if (a3 < 0) {
                char v97 = 1;
              }
              if ((v97 & 1) == 0) {
                LOBYTE(v81) = (int)sub_100C3A4FC((uint64_t)v146) > a3;
              }
            }

            else {
              char v98 = 0;
            }
            if ((v98 & 1) != 0)
            {
              v100 = a5[1];
              unint64_t v99 = (unint64_t)a5[2];
              if ((unint64_t)v100 >= v99)
              {
                v106 = *a5;
                unint64_t v107 = 0xAAAAAAAAAAAAAAABLL * ((v100 - *a5) >> 5);
                unint64_t v108 = v107 + 1;
                if (v107 + 1 > 0x2AAAAAAAAAAAAAALL) {
                  sub_100007008();
                }
                unint64_t v109 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v99 - (void)v106) >> 5);
                if (2 * v109 > v108) {
                  unint64_t v108 = 2 * v109;
                }
                if (v109 >= 0x155555555555555LL) {
                  unint64_t v110 = 0x2AAAAAAAAAAAAAALL;
                }
                else {
                  unint64_t v110 = v108;
                }
                if (v110)
                {
                  v111 = (char *)sub_1003F6AEC((uint64_t)(a5 + 2), v110);
                  v106 = *a5;
                  v100 = a5[1];
                }

                else
                {
                  v111 = 0LL;
                }

                v112 = &v111[96 * v107];
                __int128 v113 = *(_OWORD *)&v146[16];
                *(_OWORD *)v112 = *(_OWORD *)v146;
                *((_OWORD *)v112 + 1) = v113;
                __int128 v114 = v147;
                __int128 v115 = v148;
                __int128 v116 = v150;
                *((_OWORD *)v112 + 4) = v149;
                *((_OWORD *)v112 + 5) = v116;
                *((_OWORD *)v112 + 2) = v114;
                *((_OWORD *)v112 + 3) = v115;
                if (v100 == v106)
                {
                  v122 = &v111[96 * v107];
                }

                else
                {
                  v117 = &v111[96 * v107];
                  do
                  {
                    __int128 v118 = *((_OWORD *)v100 - 5);
                    *((_OWORD *)v117 - 6) = *((_OWORD *)v100 - 6);
                    *((_OWORD *)v117 - 5) = v118;
                    __int128 v119 = *((_OWORD *)v100 - 4);
                    __int128 v120 = *((_OWORD *)v100 - 3);
                    __int128 v121 = *((_OWORD *)v100 - 1);
                    v122 = v117 - 96;
                    *((_OWORD *)v117 - 2) = *((_OWORD *)v100 - 2);
                    *((_OWORD *)v117 - 1) = v121;
                    *((_OWORD *)v117 - 4) = v119;
                    *((_OWORD *)v117 - 3) = v120;
                    v100 -= 96;
                    v117 -= 96;
                  }

                  while (v100 != v106);
                }

                v105 = v112 + 96;
                *a5 = v122;
                a5[1] = v112 + 96;
                a5[2] = &v111[96 * v110];
                if (v106) {
                  operator delete(v106);
                }
              }

              else
              {
                __int128 v101 = *(_OWORD *)&v146[16];
                *(_OWORD *)v100 = *(_OWORD *)v146;
                *((_OWORD *)v100 + 1) = v101;
                __int128 v102 = v147;
                __int128 v103 = v148;
                __int128 v104 = v150;
                *((_OWORD *)v100 + 4) = v149;
                *((_OWORD *)v100 + 5) = v104;
                *((_OWORD *)v100 + 2) = v102;
                *((_OWORD *)v100 + 3) = v103;
                v105 = v100 + 96;
              }

              a5[1] = v105;
            }
          }

          else
          {
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_10183C150);
            }
            v90 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
            {
              double Current = CFAbsoluteTimeGetCurrent();
              sub_100C39CE0((uint64_t)v146, &v151, Current);
              v92 = (v151.__r_.__value_.__s.__size_ & 0x80u) == 0
                  ? &v151
                  : (std::stringbuf::string_type *)v151.__r_.__value_.__r.__words[0];
              LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v92;
              _os_log_impl( (void *)&_mh_execute_header,  v90,  OS_LOG_TYPE_DEBUG,  "No valid WiFi AP location. %s",  (uint8_t *)&buf,  0xCu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(&v151, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_10183C150);
              }
              uint64_t v93 = qword_101934878;
              double v94 = CFAbsoluteTimeGetCurrent();
              sub_100C39CE0((uint64_t)v146, &buf, v94);
              p_std::stringbuf::string_type buf = &buf;
              if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
              }
              int v144 = 136315138;
              v145 = p_buf;
              _os_log_send_and_compose_impl( 2LL,  0LL,  &v151,  1628LL,  &_mh_execute_header,  v93,  2LL,  "No valid WiFi AP location. %s",  (const char *)&v144);
              v89 = v96;
              goto LABEL_40;
            }
          }
        }

        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_10183C150);
        }
        v82 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          double v83 = CFAbsoluteTimeGetCurrent();
          sub_100C39CE0((uint64_t)v146, &v151, v83);
          v84 = (v151.__r_.__value_.__s.__size_ & 0x80u) == 0
              ? &v151
              : (std::stringbuf::string_type *)v151.__r_.__value_.__r.__words[0];
          LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v84;
          _os_log_impl( (void *)&_mh_execute_header,  v82,  OS_LOG_TYPE_DEBUG,  "Unknown WiFi AP. %s",  (uint8_t *)&buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&v151, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_10183C150);
          }
          uint64_t v85 = qword_101934878;
          double v86 = CFAbsoluteTimeGetCurrent();
          sub_100C39CE0((uint64_t)v146, &buf, v86);
          v87 = &buf;
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            v87 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          }
          int v144 = 136315138;
          v145 = v87;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &v151,  1628LL,  &_mh_execute_header,  v85,  2LL,  "Unknown WiFi AP. %s",  (const char *)&v144);
          v89 = v88;
LABEL_40:
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::vector<CLWifiAPLocation> CLWifiLocationDatabase::getNearbyWifisForFence(double, double, double, int, in t, BOOL, double)",  "%s\n",  (const char *)v89);
          if (v89 != &v151) {
            free(v89);
          }
        }
      }
    }

void sub_10049ACA0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  sqlite3_int64 v20 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v20;
    operator delete(v20);
  }

  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
  }
  sub_1011F8850((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10049AD68(uint64_t a1)
{
  uint64_t v2 = *(char **)a1;
  int64x2_t v3 = *(int64x2_t *)(a1 + 8);
  int64x2_t v4 = vshrq_n_s64(vsubq_s64(v3, vdupq_n_s64((unint64_t)v2)), 5uLL);
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * v4.i64[0];
  unint64_t v6 = v5;
  if (0xAAAAAAAAAAAAAAABLL * v4.i64[1] > v5)
  {
    if ((char *)v3.i64[0] == v2)
    {
      __int128 v11 = 0LL;
      uint64_t v9 = 96 * v5;
    }

    else
    {
      std::string::size_type v7 = (char *)sub_1003F6AEC(a1 + 16, v5);
      uint64_t v2 = *(char **)a1;
      std::string::size_type v8 = *(char **)(a1 + 8);
      uint64_t v9 = (uint64_t)&v7[96 * v6];
      __int128 v11 = &v7[96 * v10];
      if (v8 != *(char **)a1)
      {
        uint64_t v12 = v9;
        do
        {
          __int128 v13 = *((_OWORD *)v8 - 5);
          *(_OWORD *)(v12 - 96) = *((_OWORD *)v8 - 6);
          *(_OWORD *)(v12 - 80) = v13;
          __int128 v14 = *((_OWORD *)v8 - 4);
          __int128 v15 = *((_OWORD *)v8 - 3);
          __int128 v16 = *((_OWORD *)v8 - 1);
          *(_OWORD *)(v12 - 32) = *((_OWORD *)v8 - 2);
          *(_OWORD *)(v12 - 16) = v16;
          *(_OWORD *)(v12 - 64) = v14;
          *(_OWORD *)(v12 - 48) = v15;
          v12 -= 96LL;
          v8 -= 96;
        }

        while (v8 != v2);
        uint64_t v2 = *(char **)a1;
        goto LABEL_9;
      }
    }

    uint64_t v12 = v9;
LABEL_9:
    *(void *)a1 = v12;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v11;
    if (v2) {
      operator delete(v2);
    }
  }

void sub_10049AE64(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  *a3 = 0;
  a3[192] = 0;
  if (sub_100400B64(a1))
  {
    double v74 = a3;
    sub_10000CE18((uint64_t)buf);
    unint64_t v6 = sub_10000CF44(&v89, (uint64_t)"SELECT ", 7LL);
    std::string::size_type v7 = sub_10000CF44(v6, (uint64_t)"MAC", 3LL);
    std::string::size_type v8 = sub_10000CF44(v7, (uint64_t)" , ", 3LL);
    size_t v9 = strlen("Latitude");
    uint64_t v10 = sub_10000CF44(v8, (uint64_t)"Latitude", v9);
    __int128 v11 = sub_10000CF44(v10, (uint64_t)" , ", 3LL);
    size_t v12 = strlen("Longitude");
    __int128 v13 = sub_10000CF44(v11, (uint64_t)"Longitude", v12);
    __int128 v14 = sub_10000CF44(v13, (uint64_t)" , ", 3LL);
    size_t v15 = strlen("Altitude");
    __int128 v16 = sub_10000CF44(v14, (uint64_t)"Altitude", v15);
    uint64_t v17 = sub_10000CF44(v16, (uint64_t)" , ", 3LL);
    size_t v18 = strlen("HorizontalAccuracy");
    size_t v19 = sub_10000CF44(v17, (uint64_t)"HorizontalAccuracy", v18);
    sqlite3_int64 v20 = sub_10000CF44(v19, (uint64_t)" , ", 3LL);
    size_t v21 = strlen("VerticalAccuracy");
    size_t v22 = sub_10000CF44(v20, (uint64_t)"VerticalAccuracy", v21);
    sqlite3_int64 v23 = sub_10000CF44(v22, (uint64_t)" , ", 3LL);
    size_t v24 = strlen("Score");
    size_t v25 = sub_10000CF44(v23, (uint64_t)"Score", v24);
    uint64_t v26 = sub_10000CF44(v25, (uint64_t)" , ", 3LL);
    size_t v27 = strlen("Reach");
    size_t v28 = sub_10000CF44(v26, (uint64_t)"Reach", v27);
    uint64_t v29 = sub_10000CF44(v28, (uint64_t)" , ", 3LL);
    std::string v30 = sub_10000CF44(v29, (uint64_t)"Channel", 7LL);
    size_t v31 = sub_10000CF44(v30, (uint64_t)" , ", 3LL);
    std::stringbuf v32 = sub_10000CF44(v31, (uint64_t)"InfoMask", 8LL);
    uint64_t v33 = sub_10000CF44(v32, (uint64_t)" , ", 3LL);
    size_t v34 = strlen("Timestamp");
    sub_10000CF44(v33, (uint64_t)"Timestamp", v34);
    if (!*(_BYTE *)(a1 + 16))
    {
      unint64_t v35 = sub_10000CF44(&v89, (uint64_t)" , ", 3LL);
      size_t v36 = strlen("ZaxisHarvestTraces");
      sub_10000CF44(v35, (uint64_t)"ZaxisHarvestTraces", v36);
    }

    char v37 = sub_10000CF44(&v89, (uint64_t)" FROM ", 6LL);
    int v38 = *(char *)(a1 + 295);
    if (v38 >= 0) {
      uint64_t v39 = a1 + 272;
    }
    else {
      uint64_t v39 = *(void *)(a1 + 272);
    }
    if (v38 >= 0) {
      uint64_t v40 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      uint64_t v40 = *(void *)(a1 + 280);
    }
    size_t v41 = sub_10000CF44(v37, v39, v40);
    v42 = sub_10000CF44(v41, (uint64_t)" WHERE ", 7LL);
    v43 = sub_10000CF44(v42, (uint64_t)"MAC", 3LL);
    sub_10000CF44(v43, (uint64_t)" = ? ", 5LL);
    int v44 = v85;
    std::stringbuf::str((std::stringbuf::string_type *)v85, &v90);
    if (v85[23] >= 0) {
      uint64_t v45 = v85;
    }
    else {
      uint64_t v45 = *(char **)v85;
    }
    sub_1003C0D54(a1 + 64, v45, &v87);
    if ((v85[23] & 0x80000000) != 0) {
      operator delete(*(void **)v85);
    }
    uint64_t v46 = (sqlite3_stmt *)sub_100019240(v87);
    sqlite3_int64 v47 = sub_1005B46E8(a2);
    if (sub_1003C2D24(v46, 1, v47) && j__sqlite3_step(v46) == 100)
    {
      __int128 v86 = 0uLL;
      memset(v85, 0, sizeof(v85));
      sub_1010DDBC0(__p, "ff:ff:ff:ff:ff:ff");
      uint64_t v81 = sub_1007EBE44((uint64_t *)__p);
      if (v84 < 0) {
        operator delete(__p[0]);
      }
      int v82 = 0;
      int v48 = 0;
      double v80 = 0.0;
      double v78 = -1.0;
      double v79 = -1.0;
      double v49 = -1.0;
      double v77 = 0.0;
      double v50 = 0.0;
      do
      {
        sqlite3_int64 v51 = sqlite3_column_int64(v46, 0);
        uint64_t v52 = nullsub_10(v51);
        double v53 = sqlite3_column_double(v46, 1);
        double v54 = sqlite3_column_double(v46, 2);
        double v55 = sqlite3_column_double(v46, 3);
        double v56 = sqlite3_column_double(v46, 4);
        double v57 = sqlite3_column_double(v46, 5);
        int v58 = sqlite3_column_int(v46, 6);
        int v59 = sqlite3_column_int(v46, 7);
        int v60 = sqlite3_column_int(v46, 8);
        int v61 = sqlite3_column_int(v46, 9);
        double v62 = sqlite3_column_double(v46, 10);
        if (*(_BYTE *)(a1 + 16)) {
          int v63 = 0;
        }
        else {
          int v63 = sqlite3_column_int(v46, 11);
        }
        if (v62 >= v49)
        {
          if (!*(_BYTE *)(a1 + 16)) {
            int v48 = v63;
          }
          __int128 v86 = 0uLL;
          int v82 = 4;
          uint64_t v81 = v52;
          double v79 = v56;
          double v80 = v55;
          double v77 = v54;
          double v78 = v57;
          double v49 = v62;
          double v50 = v53;
          memset(v85, 0, sizeof(v85));
          LODWORD(v44) = v58;
          int v75 = v59;
          int v76 = v61;
          LODWORD(a2) = v60;
        }
      }

      while (sqlite3_step(v46) == 100);
      int v64 = v74[192];
      *(void *)double v74 = v81;
      *((_DWORD *)v74 + 2) = 0xFFFF;
      *(double *)(v74 + 12) = v50;
      *(double *)(v74 + 20) = v77;
      *(double *)(v74 + 28) = v79;
      *(double *)(v74 + 36) = v80;
      *(double *)(v74 + 44) = v78;
      __asm { FMOV            V0.2D, #-1.0 }

      *(_OWORD *)(v74 + 52) = _Q0;
      *(_OWORD *)(v74 + 68) = _Q0;
      *(double *)(v74 + 84) = v49;
      *((_DWORD *)v74 + 23) = 0;
      *((void *)v74 + 12) = 0xBFF0000000000000LL;
      *((_DWORD *)v74 + 26) = v82;
      *(_OWORD *)(v74 + 108) = v86;
      *(void *)(v74 + 124) = 0xBFF0000000000000LL;
      *((_DWORD *)v74 + 33) = 0x7FFFFFFF;
      *(_OWORD *)(v74 + 136) = *(_OWORD *)v85;
      *(_OWORD *)(v74 + 145) = *(_OWORD *)&v85[9];
      *((_DWORD *)v74 + 41) = (_DWORD)v44;
      *((_DWORD *)v74 + 42) = a2;
      *((_DWORD *)v74 + 43) = v75;
      *((_DWORD *)v74 + 44) = -1;
      if (!v64) {
        v74[192] = 1;
      }
      *((_DWORD *)v74 + 45) = v76;
      *((_DWORD *)v74 + 46) = v48;
    }

    uint64_t v70 = v87;
    uint64_t v87 = 0LL;
    if (v70) {
      (*(void (**)(uint64_t))(*(void *)v70 + 8LL))(v70);
    }
    uint64_t v89 = v71;
    std::streambuf::~streambuf(&v90);
    std::ios::~ios(&v91);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_10183C108);
    }
    double v72 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call findByMacAddress() without a backing database in CLWifiLocationDatabase!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_10183C108);
      }
      *(_WORD *)uint64_t v85 = 0;
      v73 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call findByMacAddress() without a backing database in CLWifiLocationDatabase!",  v85,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::optional<CLWifiLocationDatabaseEntry> CLWifiLocationDatabase::findByMacAddress(const CLMacAddress &)",  "%s\n",  v73);
    }
  }

void sub_10049B658( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a36) {
    (*(void (**)(uint64_t))(*(void *)a36 + 8LL))(a36);
  }
  sub_1011F8850((uint64_t)&a37);
  _Unwind_Resume(a1);
}

void sub_10049B6E8(uint64_t a1@<X0>, void **a2@<X8>)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)buf);
    int64x2_t v3 = sub_10000CF44(&v89, (uint64_t)"SELECT ", 7LL);
    int64x2_t v4 = sub_10000CF44(v3, (uint64_t)"MAC", 3LL);
    unint64_t v5 = sub_10000CF44(v4, (uint64_t)" , ", 3LL);
    size_t v6 = strlen("Latitude");
    std::string::size_type v7 = sub_10000CF44(v5, (uint64_t)"Latitude", v6);
    std::string::size_type v8 = sub_10000CF44(v7, (uint64_t)" , ", 3LL);
    size_t v9 = strlen("Longitude");
    uint64_t v10 = sub_10000CF44(v8, (uint64_t)"Longitude", v9);
    __int128 v11 = sub_10000CF44(v10, (uint64_t)" , ", 3LL);
    size_t v12 = strlen("Altitude");
    __int128 v13 = sub_10000CF44(v11, (uint64_t)"Altitude", v12);
    __int128 v14 = sub_10000CF44(v13, (uint64_t)" , ", 3LL);
    size_t v15 = strlen("HorizontalAccuracy");
    __int128 v16 = sub_10000CF44(v14, (uint64_t)"HorizontalAccuracy", v15);
    uint64_t v17 = sub_10000CF44(v16, (uint64_t)" , ", 3LL);
    size_t v18 = strlen("VerticalAccuracy");
    size_t v19 = sub_10000CF44(v17, (uint64_t)"VerticalAccuracy", v18);
    sqlite3_int64 v20 = sub_10000CF44(v19, (uint64_t)" , ", 3LL);
    size_t v21 = strlen("Score");
    size_t v22 = sub_10000CF44(v20, (uint64_t)"Score", v21);
    sqlite3_int64 v23 = sub_10000CF44(v22, (uint64_t)" , ", 3LL);
    size_t v24 = strlen("Reach");
    size_t v25 = sub_10000CF44(v23, (uint64_t)"Reach", v24);
    uint64_t v26 = sub_10000CF44(v25, (uint64_t)" , ", 3LL);
    size_t v27 = sub_10000CF44(v26, (uint64_t)"Channel", 7LL);
    size_t v28 = sub_10000CF44(v27, (uint64_t)" , ", 3LL);
    uint64_t v29 = sub_10000CF44(v28, (uint64_t)"InfoMask", 8LL);
    std::string v30 = sub_10000CF44(v29, (uint64_t)" , ", 3LL);
    size_t v31 = strlen("Timestamp");
    sub_10000CF44(v30, (uint64_t)"Timestamp", v31);
    if (!*(_BYTE *)(a1 + 16))
    {
      std::stringbuf v32 = sub_10000CF44(&v89, (uint64_t)" , ", 3LL);
      size_t v33 = strlen("ZaxisHarvestTraces");
      sub_10000CF44(v32, (uint64_t)"ZaxisHarvestTraces", v33);
    }

    size_t v34 = sub_10000CF44(&v89, (uint64_t)" FROM ", 6LL);
    int v35 = *(char *)(a1 + 295);
    if (v35 >= 0) {
      uint64_t v36 = a1 + 272;
    }
    else {
      uint64_t v36 = *(void *)(a1 + 272);
    }
    if (v35 >= 0) {
      uint64_t v37 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      uint64_t v37 = *(void *)(a1 + 280);
    }
    sub_10000CF44(v34, v36, v37);
    std::stringbuf::str(&v86, &v90);
    if ((v86.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v38 = &v86;
    }
    else {
      int v38 = (std::stringbuf::string_type *)v86.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v38, &v87);
    uint64_t v39 = (sqlite3_stmt *)sub_100019240(v87);
    int v40 = j__sqlite3_step(v39);
    *a2 = 0LL;
    a2[1] = 0LL;
    a2[2] = 0LL;
    if (v40 == 100)
    {
      __asm { FMOV            V0.2D, #-1.0 }

      __int128 v84 = _Q0;
      do
      {
        sqlite3_int64 v46 = sqlite3_column_int64(v39, 0);
        uint64_t v47 = nullsub_10(v46);
        double v48 = sqlite3_column_double(v39, 1);
        double v49 = sqlite3_column_double(v39, 2);
        double v50 = sqlite3_column_double(v39, 3);
        double v51 = sqlite3_column_double(v39, 4);
        double v52 = sqlite3_column_double(v39, 5);
        int v53 = sqlite3_column_int(v39, 6);
        int v54 = sqlite3_column_int(v39, 7);
        int v55 = sqlite3_column_int(v39, 8);
        int v56 = sqlite3_column_int(v39, 9);
        double v57 = sqlite3_column_double(v39, 10);
        if (*(_BYTE *)(a1 + 16)) {
          int v58 = 0;
        }
        else {
          int v58 = sqlite3_column_int(v39, 11);
        }
        int v59 = (char *)a2[1];
        int v60 = (char *)a2[2];
        if (v59 >= v60)
        {
          unint64_t v62 = 0xAAAAAAAAAAAAAAABLL * ((v59 - (_BYTE *)*a2) >> 6);
          unint64_t v63 = v62 + 1;
          if (v62 + 1 > 0x155555555555555LL) {
            sub_100007008();
          }
          unint64_t v64 = 0xAAAAAAAAAAAAAAABLL * ((v60 - (_BYTE *)*a2) >> 6);
          if (2 * v64 > v63) {
            unint64_t v63 = 2 * v64;
          }
          if (v64 >= 0xAAAAAAAAAAAAAALL) {
            unint64_t v65 = 0x155555555555555LL;
          }
          else {
            unint64_t v65 = v63;
          }
          if (v65) {
            double v66 = (char *)sub_10001DF10((uint64_t)(a2 + 2), v65);
          }
          else {
            double v66 = 0LL;
          }
          std::string v67 = &v66[192 * v62];
          *(void *)std::string v67 = v47;
          *((_DWORD *)v67 + 2) = 0xFFFF;
          *(double *)(v67 + 12) = v48;
          *(double *)(v67 + 20) = v49;
          *(double *)(v67 + 28) = v51;
          *(double *)(v67 + 36) = v50;
          *(double *)(v67 + 44) = v52;
          *(_OWORD *)(v67 + 52) = v84;
          *(_OWORD *)(v67 + 68) = v84;
          *(double *)(v67 + 84) = v57;
          *((_DWORD *)v67 + 23) = 0;
          *((void *)v67 + 12) = 0xBFF0000000000000LL;
          *((_DWORD *)v67 + 26) = 4;
          *(void *)(v67 + 116) = 0LL;
          *(void *)(v67 + 108) = 0LL;
          *(void *)(v67 + 124) = 0xBFF0000000000000LL;
          *((_DWORD *)v67 + 33) = 0x7FFFFFFF;
          *((void *)v67 + 18) = 0LL;
          *((void *)v67 + 19) = 0LL;
          *((void *)v67 + 17) = 0LL;
          v67[160] = 0;
          *((_DWORD *)v67 + 41) = v53;
          *((_DWORD *)v67 + 42) = v55;
          *((_DWORD *)v67 + 43) = v54;
          *((_DWORD *)v67 + 44) = -1;
          *((_DWORD *)v67 + 45) = v56;
          *((_DWORD *)v67 + 46) = v58;
          v69 = (char *)*a2;
          double v68 = (char *)a2[1];
          uint64_t v70 = v67;
          if (v68 != *a2)
          {
            do
            {
              __int128 v71 = *((_OWORD *)v68 - 12);
              __int128 v72 = *((_OWORD *)v68 - 11);
              __int128 v73 = *((_OWORD *)v68 - 9);
              *((_OWORD *)v70 - 10) = *((_OWORD *)v68 - 10);
              *((_OWORD *)v70 - 9) = v73;
              *((_OWORD *)v70 - 12) = v71;
              *((_OWORD *)v70 - 11) = v72;
              __int128 v74 = *((_OWORD *)v68 - 8);
              __int128 v75 = *((_OWORD *)v68 - 7);
              __int128 v76 = *((_OWORD *)v68 - 5);
              *((_OWORD *)v70 - 6) = *((_OWORD *)v68 - 6);
              *((_OWORD *)v70 - 5) = v76;
              *((_OWORD *)v70 - 8) = v74;
              *((_OWORD *)v70 - 7) = v75;
              __int128 v77 = *((_OWORD *)v68 - 4);
              __int128 v78 = *((_OWORD *)v68 - 3);
              __int128 v79 = *((_OWORD *)v68 - 2);
              *(_OWORD *)(v70 - 20) = *(_OWORD *)(v68 - 20);
              *((_OWORD *)v70 - 3) = v78;
              *((_OWORD *)v70 - 2) = v79;
              *((_OWORD *)v70 - 4) = v77;
              v70 -= 192;
              v68 -= 192;
            }

            while (v68 != v69);
            double v68 = v69;
          }

          int v61 = v67 + 192;
          *a2 = v70;
          a2[1] = v67 + 192;
          a2[2] = &v66[192 * v65];
          if (v68) {
            operator delete(v68);
          }
        }

        else
        {
          *(void *)int v59 = v47;
          *((_DWORD *)v59 + 2) = 0xFFFF;
          *(double *)(v59 + 12) = v48;
          *(double *)(v59 + 20) = v49;
          *(double *)(v59 + 28) = v51;
          *(double *)(v59 + 36) = v50;
          *(double *)(v59 + 44) = v52;
          *(_OWORD *)(v59 + 52) = v84;
          *(_OWORD *)(v59 + 68) = v84;
          *(double *)(v59 + 84) = v57;
          *((_DWORD *)v59 + 23) = 0;
          *((void *)v59 + 12) = 0xBFF0000000000000LL;
          *((_DWORD *)v59 + 26) = 4;
          *(void *)(v59 + 116) = 0LL;
          *(void *)(v59 + 108) = 0LL;
          *(void *)(v59 + 124) = 0xBFF0000000000000LL;
          *((_DWORD *)v59 + 33) = 0x7FFFFFFF;
          *((void *)v59 + 18) = 0LL;
          *((void *)v59 + 19) = 0LL;
          *((void *)v59 + 17) = 0LL;
          v59[160] = 0;
          *((_DWORD *)v59 + 41) = v53;
          *((_DWORD *)v59 + 42) = v55;
          *((_DWORD *)v59 + 43) = v54;
          *((_DWORD *)v59 + 44) = -1;
          int v61 = v59 + 192;
          *((_DWORD *)v59 + 45) = v56;
          *((_DWORD *)v59 + 46) = v58;
        }

        a2[1] = v61;
      }

      while (sqlite3_step(v39) == 100);
    }

    uint64_t v80 = v87;
    uint64_t v87 = 0LL;
    if (v80) {
      (*(void (**)(uint64_t))(*(void *)v80 + 8LL))(v80);
    }
    uint64_t v89 = v81;
    std::streambuf::~streambuf(&v90);
    std::ios::~ios(&v91);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_10183C108);
    }
    int v82 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v82,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call getAllEntries() without a backing database in CLWifiLocationDatabase!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_10183C108);
      }
      LOWORD(v86.__r_.__value_.__l.__data_) = 0;
      double v83 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call getAllEntries() without a backing database in CLWifiLocationDatabase!",  &v86,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::vector<CLWifiLocationDatabaseEntry> CLWifiLocationDatabase::getAllEntries()",  "%s\n",  v83);
    }

    *a2 = 0LL;
    a2[1] = 0LL;
    a2[2] = 0LL;
  }

void sub_10049BF44( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, char a24)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_10049BFD4(uint64_t a1)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)buf);
    uint64_t v2 = sub_10000CF44(&v22, (uint64_t)"DELETE FROM ", 12LL);
    int v3 = *(char *)(a1 + 295);
    if (v3 >= 0) {
      uint64_t v4 = a1 + 272;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 272);
    }
    if (v3 >= 0) {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      uint64_t v5 = *(void *)(a1 + 280);
    }
    size_t v6 = sub_10000CF44(v2, v4, v5);
    std::string::size_type v7 = sub_10000CF44(v6, (uint64_t)" WHERE ", 7LL);
    std::string::size_type v8 = sub_10000CF44(v7, (uint64_t)"MAC", 3LL);
    size_t v9 = sub_10000CF44(v8, (uint64_t)" IS NULL OR ", 12LL);
    uint64_t v10 = sub_10000CF44(v9, (uint64_t)"MAC", 3LL);
    sub_10000CF44(v10, (uint64_t)" = '' ", 6LL);
    std::stringbuf::str(&v19, &v23);
    uint64_t v11 = a1 + 64;
    if ((v19.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t v12 = &v19;
    }
    else {
      size_t v12 = (std::stringbuf::string_type *)v19.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v11, (char *)v12, &v20);
    uint64_t v13 = v20;
    uint64_t v20 = 0LL;
    __int128 v14 = (sqlite3_stmt *)sub_100019240(v13);
    sub_1003BB2BC(v11, v14);
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    }
    uint64_t v22 = v15;
    std::streambuf::~streambuf(&v23);
    std::ios::~ios(&v24);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_10183C108);
    }
    __int128 v16 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call deleteWhereMacAddressIsEmpty() without a backing database in CLWifiLocationDatabase!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_10183C108);
      }
      LOWORD(v19.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call deleteWhereMacAddressIsEmpty() without a backing database in CLWifiLocationDatabase!",  &v19,  2);
      size_t v18 = (uint8_t *)v17;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiLocationDatabase::deleteWhereMacAddressIsEmpty()", "%s\n", v17);
      if (v18 != buf) {
        free(v18);
      }
    }
  }

void sub_10049C2CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_10049C320(uint64_t a1, uint64_t a2)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)buf);
    uint64_t v4 = sub_10000CF44(&v25, (uint64_t)"DELETE FROM ", 12LL);
    int v5 = *(char *)(a1 + 295);
    if (v5 >= 0) {
      uint64_t v6 = a1 + 272;
    }
    else {
      uint64_t v6 = *(void *)(a1 + 272);
    }
    if (v5 >= 0) {
      uint64_t v7 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      uint64_t v7 = *(void *)(a1 + 280);
    }
    std::string::size_type v8 = sub_10000CF44(v4, v6, v7);
    size_t v9 = sub_10000CF44(v8, (uint64_t)" WHERE ", 7LL);
    uint64_t v10 = sub_10000CF44(v9, (uint64_t)"MAC", 3LL);
    sub_10000CF44(v10, (uint64_t)" = ? ", 5LL);
    std::stringbuf::str(&v22, &v26);
    uint64_t v11 = a1 + 64;
    if ((v22.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t v12 = &v22;
    }
    else {
      size_t v12 = (std::stringbuf::string_type *)v22.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v12, &v23);
    p_vtable = v23;
    std::stringbuf v23 = 0LL;
    __int128 v14 = (sqlite3_stmt *)sub_100019240((uint64_t)p_vtable);
    sqlite3_int64 v15 = sub_1005B46E8(a2);
    if (sub_1003C2D24(v14, 1, v15))
    {
      __int128 v16 = (sqlite3_stmt *)sub_100019240((uint64_t)p_vtable);
      sub_1003BB2BC(v11, v16);
      if (p_vtable) {
        (*((void (**)(void **))*p_vtable + 1))(p_vtable);
      }
      uint64_t v25 = v17;
      std::streambuf::~streambuf(&v26);
      std::ios::~ios(&v27);
      return;
    }

    sub_10123AD24();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Network/CLWifiLocationDatabase.mm",  728,  "deleteByMac");
    __break(1u);
LABEL_29:
    dispatch_once(&qword_101934A20, &stru_10183C108);
LABEL_26:
    std::stringbuf::string_type v19 = p_vtable[325];
    LOWORD(v22.__r_.__value_.__l.__data_) = 0;
    LODWORD(v21) = 2;
    uint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v19,  2LL,  "#Warning Attempt to call deleteByMac() without a backing database in CLWifiLocationDatabase!",  &v22,  v21);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiLocationDatabase::deleteByMac(const CLMacAddress &)", "%s\n", v20);
    return;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_10183C108);
  }
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  size_t v18 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call deleteByMac() without a backing database in CLWifiLocationDatabase!",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A20 == -1) {
      goto LABEL_26;
    }
    goto LABEL_29;
  }

void sub_10049C65C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_10049C6B0(uint64_t a1)
{
  *(void *)a1 = off_10183C0A8;
  return sub_10040063C(a1);
}

void sub_10049C6EC(uint64_t a1)
{
  *(void *)a1 = off_10183C0A8;
  uint64_t v2 = (void *)sub_10040063C(a1);
  operator delete(v2);
}

void sub_10049C72C(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_10049C758(id a1)
{
  off_101934A28 = os_log_create("com.apple.locationd.Utility", "Database");
}

void sub_10049C784(std::runtime_error *this)
{
  this->__vftable = (std::runtime_error_vtbl *)off_10183C138;
  if (SHIBYTE(this[4].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }
  if (SHIBYTE(this[2].__vftable) < 0) {
    operator delete(this[1].__vftable);
  }
  std::runtime_error::~runtime_error(this);
  operator delete(v2);
}

void sub_10049C7D8(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_10049C804(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

BOOL sub_10049C830()
{
  return os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT);
}

  ;
}

BOOL sub_10049C850()
{
  return os_log_type_enabled(*(os_log_t *)(v0 + 2600), OS_LOG_TYPE_INFO);
}

void sub_10049C860()
{
  qword_101995D30 = (uint64_t)"MAC";
  dword_101995D38 = 1;
  word_101995D3C = 1;
  byte_101995D40 = 0;
  byte_101995D58 = 0;
  qword_101995D60 = (uint64_t)"Channel";
  dword_101995D68 = 1;
  word_101995D6C = 0;
  byte_101995D70 = 0;
  byte_101995D88 = 0;
  qword_101995D90 = (uint64_t)"InfoMask";
  dword_101995D98 = 1;
  word_101995D9C = 0;
  byte_101995DA0 = 0;
  byte_101995DB8 = 0;
  qword_101995DC0 = (uint64_t)"Timestamp";
  dword_101995DC8 = 2;
  word_101995DCC = 0;
  byte_101995DD0 = 0;
  byte_101995DE8 = 0;
  qword_101995DF0 = (uint64_t)"Latitude";
  dword_101995DF8 = 2;
  word_101995DFC = 0;
  byte_101995E00 = 0;
  byte_101995E18 = 0;
  qword_101995E20 = (uint64_t)"Longitude";
  dword_101995E28 = 2;
  word_101995E2C = 0;
  byte_101995E30 = 0;
  byte_101995E48 = 0;
  qword_101995E50 = (uint64_t)"HorizontalAccuracy";
  dword_101995E58 = 2;
  word_101995E5C = 0;
  byte_101995E60 = 0;
  byte_101995E78 = 0;
  qword_101995E80 = (uint64_t)"Altitude";
  dword_101995E88 = 2;
  word_101995E8C = 0;
  byte_101995E90 = 0;
  byte_101995EA8 = 0;
  qword_101995EB0 = (uint64_t)"VerticalAccuracy";
  dword_101995EB8 = 2;
  word_101995EBC = 0;
  byte_101995EC0 = 0;
  byte_101995ED8 = 0;
  qword_101995EE0 = (uint64_t)"Speed";
  dword_101995EE8 = 2;
  word_101995EEC = 0;
  byte_101995EF0 = 0;
  byte_101995F08 = 0;
  qword_101995F10 = (uint64_t)"Course";
  dword_101995F18 = 2;
  word_101995F1C = 0;
  byte_101995F20 = 0;
  byte_101995F38 = 0;
  qword_101995F40 = (uint64_t)"Confidence";
  dword_101995F48 = 1;
  word_101995F4C = 0;
  byte_101995F50 = 0;
  byte_101995F68 = 0;
  qword_101995F70 = (uint64_t)"Score";
  dword_101995F78 = 1;
  word_101995F7C = 0;
  byte_101995F80 = 0;
  byte_101995F98 = 0;
  qword_101995FA0 = (uint64_t)"Reach";
  dword_101995FA8 = 1;
  word_101995FAC = 0;
  byte_101995FB0 = 0;
  byte_101995FC8 = 0;
  qword_101995FD0 = (uint64_t)"FenceForeignKey";
  dword_101995FD8 = 1;
  word_101995FDC = 1;
  byte_101995FE0 = 0;
  byte_101995FF8 = 0;
  qword_101996000 = (uint64_t)"ZaxisHarvestTraces";
  dword_101996008 = 1;
  word_10199600C = 0;
  byte_101996010 = 0;
  byte_101996028 = 0;
  qword_101996030 = 0LL;
  dword_101996038 = 5;
  word_10199603C = 0;
  byte_101996040 = 0;
  byte_101996058 = 0;
}

id sub_10049CA7C(void *a1, uint64_t a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_10049CAEC;
  v3[3] = &unk_10183C198;
  v3[4] = a2;
  return objc_msgSend( a1,  "filteredArrayUsingPredicate:",  +[NSPredicate predicateWithBlock:](NSPredicate, "predicateWithBlock:", v3));
}

BOOL sub_10049CAEC(uint64_t a1, void *a2)
{
  return objc_msgSend(objc_msgSend(a2, "timestamp"), "compare:", *(void *)(a1 + 32)) != (id)-1;
}

uint64_t sub_10049CB20(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

void **sub_10049CB50(void **a1)
{
  int v3 = a1;
  sub_1003EE02C(&v3);
  return a1;
}

uint64_t sub_10049CB84(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_10049CBB4(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_10049CBE4(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_10049CC14(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_10049CCE8(id a1)
{
  qword_101996060 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLNetworkLocationProviderSilo");
}

uint64_t sub_10049CD9C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1004A1120;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101996070 != -1) {
    dispatch_once(&qword_101996070, block);
  }
  return qword_1019A10B8;
}

uint64_t sub_10049CFC0(uint64_t a1, int *a2, uint64_t a3)
{
  int v50 = 0xFFFF;
  __int128 v51 = 0uLL;
  __int128 v52 = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v53 = _Q0;
  __int128 v54 = _Q0;
  __int128 v55 = _Q0;
  int v56 = 0;
  uint64_t v59 = 0LL;
  unint64_t v57 = 0xBFF0000000000000LL;
  uint64_t v58 = 0LL;
  int v60 = 0;
  unint64_t v61 = 0xBFF0000000000000LL;
  int v62 = 0x7FFFFFFF;
  uint64_t v65 = 0LL;
  uint64_t v63 = 0LL;
  uint64_t v64 = 0LL;
  char v66 = 0;
  uint64_t v11 = sub_1004A177C(a1);
  if (sub_10047E7E4(*(void *)(v11 + 32), (uint64_t)a2, (uint64_t)&v50))
  {
    if (*(double *)&v52 > 0.0)
    {
      sub_100D2DCA4((double *)(a1 + 624), a3, (uint64_t)&v50);
      double v13 = v12;
      if (v12 < *(double *)&v52 * 3.0)
      {
        uint64_t v26 = sub_1004A17E0(a1);
        sub_10047F664(*(_BYTE **)(v26 + 32), (uint64_t)a2);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v27 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          int v28 = *a2;
          int v29 = a2[1];
          int v30 = a2[2];
          int v31 = a2[3];
          uint64_t v32 = *(void *)(a3 + 4);
          uint64_t v33 = *(void *)(a3 + 12);
          *(_DWORD *)std::stringbuf::string_type buf = 67111168;
          int v86 = v28;
          __int16 v87 = 1024;
          int v88 = v29;
          __int16 v89 = 1024;
          int v90 = v30;
          __int16 v91 = 1024;
          int v92 = v31;
          __int16 v93 = 2048;
          uint64_t v94 = v32;
          __int16 v95 = 2048;
          uint64_t v96 = v33;
          __int16 v97 = 2048;
          uint64_t v98 = v51;
          __int16 v99 = 2048;
          uint64_t v100 = *((void *)&v51 + 1);
          __int16 v101 = 2048;
          double v102 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "cell %03d %03d 0x%x 0x%x is local <%+.8f,%+.8f> remote <%+.8f,%+.8f> only %.2fm apart - not storing locally",  buf,  0x4Cu);
        }

        if (!sub_1002921D0(115, 2)) {
          return 1LL;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        int v41 = *a2;
        int v42 = a2[1];
        int v43 = a2[2];
        int v44 = a2[3];
        uint64_t v45 = *(void *)(a3 + 4);
        uint64_t v46 = *(void *)(a3 + 12);
        int v67 = 67111168;
        int v68 = v41;
        __int16 v69 = 1024;
        int v70 = v42;
        __int16 v71 = 1024;
        int v72 = v43;
        __int16 v73 = 1024;
        int v74 = v44;
        __int16 v75 = 2048;
        uint64_t v76 = v45;
        __int16 v77 = 2048;
        uint64_t v78 = v46;
        __int16 v79 = 2048;
        uint64_t v80 = v51;
        __int16 v81 = 2048;
        uint64_t v82 = *((void *)&v51 + 1);
        __int16 v83 = 2048;
        double v84 = v13;
        uint64_t v25 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "cell %03d %03d 0x%x 0x%x is local <%+.8f,%+.8f> remote <%+.8f,%+.8f> only %.2fm apart - no t storing locally",  &v67,  76);
        goto LABEL_32;
      }
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  __int128 v14 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v15 = *a2;
    int v16 = a2[1];
    int v17 = a2[2];
    int v18 = a2[3];
    uint64_t v19 = *(void *)(a3 + 4);
    uint64_t v20 = *(void *)(a3 + 12);
    *(_DWORD *)std::stringbuf::string_type buf = 67110400;
    int v86 = v15;
    __int16 v87 = 1024;
    int v88 = v16;
    __int16 v89 = 1024;
    int v90 = v17;
    __int16 v91 = 1024;
    int v92 = v18;
    __int16 v93 = 2048;
    uint64_t v94 = v19;
    __int16 v95 = 2048;
    uint64_t v96 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "cell %03d %03d 0x%x 0x%x is local at <%+.8f,%+.8f>",  buf,  0x2Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v34 = *a2;
    int v35 = a2[1];
    int v36 = a2[2];
    int v37 = a2[3];
    uint64_t v38 = *(void *)(a3 + 4);
    uint64_t v39 = *(void *)(a3 + 12);
    int v67 = 67110400;
    int v68 = v34;
    __int16 v69 = 1024;
    int v70 = v35;
    __int16 v71 = 1024;
    int v72 = v36;
    __int16 v73 = 1024;
    int v74 = v37;
    __int16 v75 = 2048;
    uint64_t v76 = v38;
    __int16 v77 = 2048;
    uint64_t v78 = v39;
    int v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "cell %03d %03d 0x%x 0x%x is local at <%+.8f,%+.8f>",  &v67,  46,  v49,  (_DWORD)v51,  *((double *)&v51 + 1),  *(double *)&v52);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_GSM(const CLTelephonyService_Type::Cell &, const CLDaemonLocation &)",  "%s\n",  v40);
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    __int128 v51 = *(_OWORD *)(a3 + 4);
    int v21 = *(_DWORD *)(a3 + 84);
    HIDWORD(v63) = *(_DWORD *)(a3 + 132);
    int v56 = v21;
    *(void *)&__int128 v52 = 0x40B38D0000000000LL;
    *((void *)&v55 + 1) = *(void *)(a3 + 76);
    uint64_t v22 = sub_1004A17E0(a1);
    return sub_10047EDB8(*(void *)(v22 + 32), (uint64_t)a2, (uint64_t)&v50);
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v24 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    LOWORD(v67) = 0;
    LODWORD(v48) = 2;
    uint64_t v25 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  &v67,  v48);
LABEL_32:
    uint64_t v47 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_GSM(const CLTelephonyService_Type::Cell &, const CLDaemonLocation &)",  "%s\n",  v25);
    if (v47 != buf) {
      free(v47);
    }
  }

  return 1LL;
}

uint64_t sub_10049D6DC(uint64_t a1, int *a2, uint64_t a3)
{
  int v50 = 0xFFFF;
  __int128 v51 = 0uLL;
  __int128 v52 = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v53 = _Q0;
  __int128 v54 = _Q0;
  __int128 v55 = _Q0;
  int v56 = 0;
  uint64_t v59 = 0LL;
  unint64_t v57 = 0xBFF0000000000000LL;
  uint64_t v58 = 0LL;
  int v60 = 0;
  unint64_t v61 = 0xBFF0000000000000LL;
  int v62 = 0x7FFFFFFF;
  uint64_t v65 = 0LL;
  uint64_t v63 = 0LL;
  uint64_t v64 = 0LL;
  char v66 = 0;
  uint64_t v11 = sub_1004A16B4(a1);
  if (sub_10047E7E4(*(void *)(v11 + 32), (uint64_t)a2, (uint64_t)&v50))
  {
    if (*(double *)&v52 > 0.0)
    {
      sub_100D2DCA4((double *)(a1 + 624), a3, (uint64_t)&v50);
      double v13 = v12;
      if (v12 < *(double *)&v52 * 3.0)
      {
        uint64_t v26 = sub_1004A1718(a1);
        sub_10047F664(*(_BYTE **)(v26 + 32), (uint64_t)a2);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v27 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          int v28 = *a2;
          int v29 = a2[1];
          int v30 = a2[2];
          int v31 = a2[3];
          uint64_t v32 = *(void *)(a3 + 4);
          uint64_t v33 = *(void *)(a3 + 12);
          *(_DWORD *)std::stringbuf::string_type buf = 67111168;
          int v86 = v28;
          __int16 v87 = 1024;
          int v88 = v29;
          __int16 v89 = 1024;
          int v90 = v30;
          __int16 v91 = 1024;
          int v92 = v31;
          __int16 v93 = 2048;
          uint64_t v94 = v32;
          __int16 v95 = 2048;
          uint64_t v96 = v33;
          __int16 v97 = 2048;
          uint64_t v98 = v51;
          __int16 v99 = 2048;
          uint64_t v100 = *((void *)&v51 + 1);
          __int16 v101 = 2048;
          double v102 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "scdma cell %03d %03d 0x%x 0x%x is local <%+.8f,%+.8f> remote <%+.8f,%+.8f> only %.2fm apart - not storing locally",  buf,  0x4Cu);
        }

        if (!sub_1002921D0(115, 2)) {
          return 1LL;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        int v41 = *a2;
        int v42 = a2[1];
        int v43 = a2[2];
        int v44 = a2[3];
        uint64_t v45 = *(void *)(a3 + 4);
        uint64_t v46 = *(void *)(a3 + 12);
        int v67 = 67111168;
        int v68 = v41;
        __int16 v69 = 1024;
        int v70 = v42;
        __int16 v71 = 1024;
        int v72 = v43;
        __int16 v73 = 1024;
        int v74 = v44;
        __int16 v75 = 2048;
        uint64_t v76 = v45;
        __int16 v77 = 2048;
        uint64_t v78 = v46;
        __int16 v79 = 2048;
        uint64_t v80 = v51;
        __int16 v81 = 2048;
        uint64_t v82 = *((void *)&v51 + 1);
        __int16 v83 = 2048;
        double v84 = v13;
        uint64_t v25 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "scdma cell %03d %03d 0x%x 0x%x is local <%+.8f,%+.8f> remote <%+.8f,%+.8f> only %.2fm apar t - not storing locally",  &v67,  76);
        goto LABEL_32;
      }
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  __int128 v14 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v15 = *a2;
    int v16 = a2[1];
    int v17 = a2[2];
    int v18 = a2[3];
    uint64_t v19 = *(void *)(a3 + 4);
    uint64_t v20 = *(void *)(a3 + 12);
    *(_DWORD *)std::stringbuf::string_type buf = 67110400;
    int v86 = v15;
    __int16 v87 = 1024;
    int v88 = v16;
    __int16 v89 = 1024;
    int v90 = v17;
    __int16 v91 = 1024;
    int v92 = v18;
    __int16 v93 = 2048;
    uint64_t v94 = v19;
    __int16 v95 = 2048;
    uint64_t v96 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "scdma cell %03d %03d 0x%x 0x%x is local at <%+.8f,%+.8f>",  buf,  0x2Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v34 = *a2;
    int v35 = a2[1];
    int v36 = a2[2];
    int v37 = a2[3];
    uint64_t v38 = *(void *)(a3 + 4);
    uint64_t v39 = *(void *)(a3 + 12);
    int v67 = 67110400;
    int v68 = v34;
    __int16 v69 = 1024;
    int v70 = v35;
    __int16 v71 = 1024;
    int v72 = v36;
    __int16 v73 = 1024;
    int v74 = v37;
    __int16 v75 = 2048;
    uint64_t v76 = v38;
    __int16 v77 = 2048;
    uint64_t v78 = v39;
    int v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "scdma cell %03d %03d 0x%x 0x%x is local at <%+.8f,%+.8f>",  &v67,  46,  v49,  (_DWORD)v51,  *((double *)&v51 + 1),  *(double *)&v52);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_SCDMA(const CLTelephonyService_Type::ScdmaCell &, const CLDaemonLocation &)",  "%s\n",  v40);
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    __int128 v51 = *(_OWORD *)(a3 + 4);
    int v21 = *(_DWORD *)(a3 + 84);
    HIDWORD(v63) = *(_DWORD *)(a3 + 132);
    int v56 = v21;
    *(void *)&__int128 v52 = 0x40B38D0000000000LL;
    *((void *)&v55 + 1) = *(void *)(a3 + 76);
    uint64_t v22 = sub_1004A1718(a1);
    return sub_10047EDB8(*(void *)(v22 + 32), (uint64_t)a2, (uint64_t)&v50);
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v24 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    LOWORD(v67) = 0;
    LODWORD(v48) = 2;
    uint64_t v25 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  &v67,  v48);
LABEL_32:
    uint64_t v47 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_SCDMA(const CLTelephonyService_Type::ScdmaCell &, const CLDaemonLocation &)",  "%s\n",  v25);
    if (v47 != buf) {
      free(v47);
    }
  }

  return 1LL;
}

void sub_10049DE14( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10049DE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v87 = 0uLL;
  __int128 v88 = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v89 = _Q0;
  __int128 v90 = _Q0;
  __int128 v91 = _Q0;
  int v86 = 0xFFFF;
  int v92 = 0;
  uint64_t v94 = 0LL;
  uint64_t v95 = 0LL;
  unint64_t v93 = 0xBFF0000000000000LL;
  unint64_t v97 = 0xBFF0000000000000LL;
  int v96 = 0;
  int v98 = 0x7FFFFFFF;
  uint64_t v100 = 0LL;
  uint64_t v101 = 0LL;
  uint64_t v99 = 0LL;
  char v102 = 0;
  int v57 = *(_DWORD *)a2;
  uint64_t v59 = 0LL;
  uint64_t v60 = 0LL;
  uint64_t v11 = *(const void **)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v58 = 0LL;
  sub_10001B72C(&v58, v11, v12, (v12 - (uint64_t)v11) >> 2);
  __int128 v13 = *(_OWORD *)(a2 + 192);
  __int128 v14 = *(_OWORD *)(a2 + 208);
  __int128 v15 = *(_OWORD *)(a2 + 160);
  __int128 v70 = *(_OWORD *)(a2 + 176);
  __int128 v71 = v13;
  v72[0] = v14;
  *(_OWORD *)((char *)v72 + 12) = *(_OWORD *)(a2 + 220);
  __int128 v16 = *(_OWORD *)(a2 + 128);
  __int128 v17 = *(_OWORD *)(a2 + 144);
  __int128 v18 = *(_OWORD *)(a2 + 96);
  __int128 v66 = *(_OWORD *)(a2 + 112);
  __int128 v67 = v16;
  __int128 v68 = v17;
  __int128 v69 = v15;
  __int128 v19 = *(_OWORD *)(a2 + 80);
  __int128 v63 = *(_OWORD *)(a2 + 64);
  __int128 v64 = v19;
  __int128 v65 = v18;
  __int128 v20 = *(_OWORD *)(a2 + 48);
  __int128 v61 = *(_OWORD *)(a2 + 32);
  __int128 v62 = v20;
  if (*(char *)(a2 + 263) < 0)
  {
    sub_1010DD48C(&v73, *(void **)(a2 + 240), *(void *)(a2 + 248));
  }

  else
  {
    __int128 v73 = *(_OWORD *)(a2 + 240);
    uint64_t v74 = *(void *)(a2 + 256);
  }

  __int128 v21 = *(_OWORD *)(a2 + 408);
  __int128 v83 = *(_OWORD *)(a2 + 392);
  __int128 v84 = v21;
  __int128 v22 = *(_OWORD *)(a2 + 344);
  __int128 v79 = *(_OWORD *)(a2 + 328);
  __int128 v80 = v22;
  __int128 v23 = *(_OWORD *)(a2 + 376);
  __int128 v81 = *(_OWORD *)(a2 + 360);
  __int128 v82 = v23;
  __int128 v24 = *(_OWORD *)(a2 + 280);
  __int128 v75 = *(_OWORD *)(a2 + 264);
  __int128 v76 = v24;
  __int128 v25 = *(_OWORD *)(a2 + 312);
  __int128 v77 = *(_OWORD *)(a2 + 296);
  __int128 v78 = v25;
  int v85 = *(_DWORD *)(a2 + 424);
  sub_1004AE280((uint64_t)&v57);
  sub_1003D13B8((unsigned int *)&v57, __p);
  uint64_t v26 = sub_1004A1844(a1);
  BOOL v27 = sub_1006CE8BC(*(void *)(v26 + 32), &v57, (uint64_t)&v86);
  if (*(double *)&v88 > 0.0 && v27)
  {
    sub_100D2DCA4((double *)(a1 + 624), a3, (uint64_t)&v86);
    double v30 = v29;
    if (v29 < *(double *)&v88 * 3.0)
    {
      uint64_t v40 = sub_1004A18A8(a1);
      sub_1006CF70C(*(_BYTE **)(v40 + 32), &v57);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      int v41 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        int v42 = __p;
        if (v56 < 0.0) {
          int v42 = (void **)__p[0];
        }
        uint64_t v43 = *(void *)(a3 + 4);
        uint64_t v44 = *(void *)(a3 + 12);
        *(_DWORD *)std::stringbuf::string_type buf = 136316418;
        __int128 v116 = v42;
        __int16 v117 = 2048;
        uint64_t v118 = v43;
        __int16 v119 = 2048;
        uint64_t v120 = v44;
        __int16 v121 = 2048;
        uint64_t v122 = v87;
        __int16 v123 = 2048;
        uint64_t v124 = *((void *)&v87 + 1);
        __int16 v125 = 2048;
        double v126 = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cell (%s) is local <%+.8f,%+.8f> remote <%+.8f,%+.8f> only %.2fm apart - not storing locally",  buf,  0x3Eu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_33;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      int v50 = __p;
      if (v56 < 0.0) {
        int v50 = (void **)__p[0];
      }
      uint64_t v51 = *(void *)(a3 + 4);
      uint64_t v52 = *(void *)(a3 + 12);
      int v103 = 136316418;
      __int128 v104 = v50;
      __int16 v105 = 2048;
      uint64_t v106 = v51;
      __int16 v107 = 2048;
      uint64_t v108 = v52;
      __int16 v109 = 2048;
      uint64_t v110 = v87;
      __int16 v111 = 2048;
      uint64_t v112 = *((void *)&v87 + 1);
      __int16 v113 = 2048;
      double v114 = v30;
      LODWORD(v53) = 62;
      uint64_t v39 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: cell (%s) is local <%+.8f,%+.8f> remote <%+.8f,%+.8f> only %.2fm apart - not storing locally",  (const char *)&v103,  v53,  v54,  *(double *)__p,  *(double *)&__p[1],  v56);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_CDMA(const CLTelephonyService_Type::CdmaCell &, const CLDaemonLocation &)",  "%s\n",  v39);
      goto LABEL_52;
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  int v31 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v32 = __p;
    if (v56 < 0.0) {
      uint64_t v32 = (void **)__p[0];
    }
    uint64_t v33 = *(void *)(a3 + 4);
    uint64_t v34 = *(void *)(a3 + 12);
    *(_DWORD *)std::stringbuf::string_type buf = 136315650;
    __int128 v116 = v32;
    __int16 v117 = 2048;
    uint64_t v118 = v33;
    __int16 v119 = 2048;
    uint64_t v120 = v34;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cell (%s) is local at <%+.8f,%+.8f>",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v46 = __p;
    if (v56 < 0.0) {
      uint64_t v46 = (void **)__p[0];
    }
    uint64_t v47 = *(void *)(a3 + 4);
    uint64_t v48 = *(void *)(a3 + 12);
    int v103 = 136315650;
    __int128 v104 = v46;
    __int16 v105 = 2048;
    uint64_t v106 = v47;
    __int16 v107 = 2048;
    uint64_t v108 = v48;
    LODWORD(v53) = 32;
    int v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: cell (%s) is local at <%+.8f,%+.8f>",  (const char *)&v103,  v53,  v54);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_CDMA(const CLTelephonyService_Type::CdmaCell &, const CLDaemonLocation &)",  "%s\n",  v49);
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    __int128 v87 = *(_OWORD *)(a3 + 4);
    int v35 = *(_DWORD *)(a3 + 84);
    HIDWORD(v99) = *(_DWORD *)(a3 + 132);
    int v92 = v35;
    *(void *)&__int128 v88 = 0x40B38D0000000000LL;
    *((void *)&v91 + 1) = *(void *)(a3 + 76);
    uint64_t v36 = sub_1004A18A8(a1);
    uint64_t v37 = sub_1006CEF5C(*(void *)(v36 + 32), &v57, (uint64_t)&v86);
    goto LABEL_34;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v38 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    LOWORD(v103) = 0;
    LODWORD(v53) = 2;
    uint64_t v39 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  &v103,  *(void *)&v53);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_CDMA(const CLTelephonyService_Type::CdmaCell &, const CLDaemonLocation &)",  "%s\n",  v39);
LABEL_52:
  }

void sub_10049E594( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, void *a19, uint64_t a20)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_1003E426C((uint64_t)&a18);
  _Unwind_Resume(a1);
}

uint64_t sub_10049E6B8(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  int v46 = 0xFFFF;
  __int128 v47 = 0uLL;
  __int128 v48 = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v49 = _Q0;
  __int128 v50 = _Q0;
  __int128 v51 = _Q0;
  uint64_t v54 = 0LL;
  uint64_t v55 = 0LL;
  unint64_t v53 = 0xBFF0000000000000LL;
  int v52 = 0;
  int v56 = 0;
  unint64_t v57 = 0xBFF0000000000000LL;
  int v58 = 0x7FFFFFFF;
  uint64_t v60 = 0LL;
  uint64_t v61 = 0LL;
  uint64_t v59 = 0LL;
  char v62 = 0;
  uint64_t v11 = sub_1004A190C(a1);
  BOOL v12 = sub_100A333D0(*(void *)(v11 + 32), (uint64_t)a2, (uint64_t)&v46);
  BOOL v13 = *(double *)&v48 > 0.0 && v12;
  double v14 = -1.0;
  if (v13)
  {
    sub_100D2DCA4((double *)(a1 + 624), a3, (uint64_t)&v46);
    double v14 = v15;
    if (v15 < *(double *)&v48 * 3.0)
    {
      uint64_t v16 = sub_1004A1974(a1);
      sub_100A343D4(*(_BYTE **)(v16 + 32), (uint64_t)a2);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      __int128 v17 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D2324(a2, v63);
        int v18 = SHIBYTE(v66);
        __int128 v19 = *(_BYTE **)v63;
        sub_100832C64(a3, &__p);
        __int128 v20 = v63;
        if (v18 < 0) {
          __int128 v20 = v19;
        }
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)std::stringbuf::string_type buf = 134218498;
        double v69 = v14;
        __int16 v70 = 2080;
        __int128 v71 = v20;
        __int16 v72 = 2080;
        __int128 v73 = p_p;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: distance, %.1lf, not storing locally, %s, location, %s",  buf,  0x20u);
        if (SHIBYTE(v66) < 0) {
          operator delete(*(void **)v63);
        }
      }

      if (!sub_1002921D0(115, 2)) {
        return 1LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v22 = qword_101934A78;
      sub_1003D2324(a2, &__p);
      int size = (char)__p.__r_.__value_.__s.__size_;
      std::string::size_type v24 = __p.__r_.__value_.__r.__words[0];
      sub_100832C64(a3, &v44);
      __int128 v25 = &__p;
      if (size < 0) {
        __int128 v25 = (std::stringbuf::string_type *)v24;
      }
      if ((v44.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v26 = &v44;
      }
      else {
        uint64_t v26 = (std::stringbuf::string_type *)v44.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)__int128 v63 = 134218498;
      *(double *)&v63[4] = v14;
      __int16 v64 = 2080;
      __int128 v65 = v25;
      __int16 v66 = 2080;
      __int128 v67 = v26;
      BOOL v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "CELL_LOC: distance, %.1lf, not storing locally, %s, location, %s",  COERCE_DOUBLE(v63),  32,  v44.__r_.__value_.__l.__data_);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_LTE(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)",  "%s\n",  v27);
      goto LABEL_69;
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  int v28 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_1003D2324(a2, v63);
    int v29 = SHIBYTE(v66);
    double v30 = *(_BYTE **)v63;
    sub_100832C64(a3, &__p);
    int v31 = v63;
    if (v29 < 0) {
      int v31 = v30;
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v32 = &__p;
    }
    else {
      uint64_t v32 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 134218498;
    double v69 = v14;
    __int16 v70 = 2080;
    __int128 v71 = v31;
    __int16 v72 = 2080;
    __int128 v73 = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: distance, %.1lf, override local location, %s, location, %s",  buf,  0x20u);
    if (SHIBYTE(v66) < 0) {
      operator delete(*(void **)v63);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v37 = qword_101934A78;
    sub_1003D2324(a2, &__p);
    int v38 = (char)__p.__r_.__value_.__s.__size_;
    std::string::size_type v39 = __p.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &v44);
    uint64_t v40 = &__p;
    if (v38 < 0) {
      uint64_t v40 = (std::stringbuf::string_type *)v39;
    }
    if ((v44.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v41 = &v44;
    }
    else {
      int v41 = (std::stringbuf::string_type *)v44.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 v63 = 134218498;
    *(double *)&v63[4] = v14;
    __int16 v64 = 2080;
    __int128 v65 = v40;
    __int16 v66 = 2080;
    __int128 v67 = v41;
    int v42 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v37,  2LL,  "CELL_LOC: distance, %.1lf, override local location, %s, location, %s",  COERCE_DOUBLE(v63),  32,  v44.__r_.__value_.__l.__data_);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_LTE(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)",  "%s\n",  v42);
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    __int128 v47 = *(_OWORD *)(a3 + 4);
    int v33 = *(_DWORD *)(a3 + 84);
    HIDWORD(v59) = *(_DWORD *)(a3 + 132);
    int v52 = v33;
    *(void *)&__int128 v48 = 0x40B38D0000000000LL;
    *((void *)&v51 + 1) = *(void *)(a3 + 76);
    uint64_t v34 = sub_1004A1974(a1);
    return sub_100A33950(*(void *)(v34 + 32), (uint64_t)a2, (uint64_t)&v46);
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v36 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    *(_WORD *)__int128 v63 = 0;
    LODWORD(v43) = 2;
    BOOL v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  v63,  v43);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_LTE(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)",  "%s\n",  v27);
    if (v27 != (char *)buf) {
LABEL_69:
    }
      free(v27);
  }

  return 1LL;
}

void sub_10049EDEC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, int a42, __int16 a43, char a44, char a45)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10049EEF0(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  int v46 = 0xFFFF;
  __int128 v47 = 0uLL;
  __int128 v48 = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v49 = _Q0;
  __int128 v50 = _Q0;
  __int128 v51 = _Q0;
  uint64_t v54 = 0LL;
  uint64_t v55 = 0LL;
  unint64_t v53 = 0xBFF0000000000000LL;
  int v52 = 0;
  int v56 = 0;
  unint64_t v57 = 0xBFF0000000000000LL;
  int v58 = 0x7FFFFFFF;
  uint64_t v60 = 0LL;
  uint64_t v61 = 0LL;
  uint64_t v59 = 0LL;
  char v62 = 0;
  uint64_t v11 = sub_1004A19DC(a1);
  BOOL v12 = sub_1005B2EBC(*(void *)(v11 + 32), (uint64_t)a2, (uint64_t)&v46);
  BOOL v13 = *(double *)&v48 > 0.0 && v12;
  double v14 = -1.0;
  if (v13)
  {
    sub_100D2DCA4((double *)(a1 + 624), a3, (uint64_t)&v46);
    double v14 = v15;
    if (v15 < *(double *)&v48 * 3.0)
    {
      uint64_t v16 = sub_1004A1A44(a1);
      sub_1005B3EC0(*(_BYTE **)(v16 + 32), (uint64_t)a2);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      __int128 v17 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D2C58(a2, v63);
        int v18 = SHIBYTE(v66);
        __int128 v19 = *(_BYTE **)v63;
        sub_100832C64(a3, &__p);
        __int128 v20 = v63;
        if (v18 < 0) {
          __int128 v20 = v19;
        }
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)std::stringbuf::string_type buf = 134218498;
        double v69 = v14;
        __int16 v70 = 2080;
        __int128 v71 = v20;
        __int16 v72 = 2080;
        __int128 v73 = p_p;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: distance, %.1lf, not storing locally, %s, location, %s",  buf,  0x20u);
        if (SHIBYTE(v66) < 0) {
          operator delete(*(void **)v63);
        }
      }

      if (!sub_1002921D0(115, 2)) {
        return 1LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v22 = qword_101934A78;
      sub_1003D2C58(a2, &__p);
      int size = (char)__p.__r_.__value_.__s.__size_;
      std::string::size_type v24 = __p.__r_.__value_.__r.__words[0];
      sub_100832C64(a3, &v44);
      __int128 v25 = &__p;
      if (size < 0) {
        __int128 v25 = (std::stringbuf::string_type *)v24;
      }
      if ((v44.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v26 = &v44;
      }
      else {
        uint64_t v26 = (std::stringbuf::string_type *)v44.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)__int128 v63 = 134218498;
      *(double *)&v63[4] = v14;
      __int16 v64 = 2080;
      __int128 v65 = v25;
      __int16 v66 = 2080;
      __int128 v67 = v26;
      BOOL v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "CELL_LOC: distance, %.1lf, not storing locally, %s, location, %s",  COERCE_DOUBLE(v63),  32,  v44.__r_.__value_.__l.__data_);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_NR(const CLTelephonyService_Type::NrCell &, const CLDaemonLocation &)",  "%s\n",  v27);
      goto LABEL_69;
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  int v28 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_1003D2C58(a2, v63);
    int v29 = SHIBYTE(v66);
    double v30 = *(_BYTE **)v63;
    sub_100832C64(a3, &__p);
    int v31 = v63;
    if (v29 < 0) {
      int v31 = v30;
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v32 = &__p;
    }
    else {
      uint64_t v32 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 134218498;
    double v69 = v14;
    __int16 v70 = 2080;
    __int128 v71 = v31;
    __int16 v72 = 2080;
    __int128 v73 = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: distance, %.1lf, override local location, %s, location, %s",  buf,  0x20u);
    if (SHIBYTE(v66) < 0) {
      operator delete(*(void **)v63);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v37 = qword_101934A78;
    sub_1003D2C58(a2, &__p);
    int v38 = (char)__p.__r_.__value_.__s.__size_;
    std::string::size_type v39 = __p.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &v44);
    uint64_t v40 = &__p;
    if (v38 < 0) {
      uint64_t v40 = (std::stringbuf::string_type *)v39;
    }
    if ((v44.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v41 = &v44;
    }
    else {
      int v41 = (std::stringbuf::string_type *)v44.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 v63 = 134218498;
    *(double *)&v63[4] = v14;
    __int16 v64 = 2080;
    __int128 v65 = v40;
    __int16 v66 = 2080;
    __int128 v67 = v41;
    int v42 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v37,  2LL,  "CELL_LOC: distance, %.1lf, override local location, %s, location, %s",  COERCE_DOUBLE(v63),  32,  v44.__r_.__value_.__l.__data_);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_NR(const CLTelephonyService_Type::NrCell &, const CLDaemonLocation &)",  "%s\n",  v42);
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    __int128 v47 = *(_OWORD *)(a3 + 4);
    int v33 = *(_DWORD *)(a3 + 84);
    HIDWORD(v59) = *(_DWORD *)(a3 + 132);
    int v52 = v33;
    *(void *)&__int128 v48 = 0x40B38D0000000000LL;
    *((void *)&v51 + 1) = *(void *)(a3 + 76);
    uint64_t v34 = sub_1004A1A44(a1);
    return sub_1005B343C(*(void *)(v34 + 32), (uint64_t)a2, (uint64_t)&v46);
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v36 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    *(_WORD *)__int128 v63 = 0;
    LODWORD(v43) = 2;
    BOOL v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  v63,  v43);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::setLocation_NR(const CLTelephonyService_Type::NrCell &, const CLDaemonLocation &)",  "%s\n",  v27);
    if (v27 != (char *)buf) {
LABEL_69:
    }
      free(v27);
  }

  return 1LL;
}

void sub_10049F624( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, int a42, __int16 a43, char a44, char a45)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_10049F678(_DWORD *a1)
{
  int v2 = a1[152];
  BOOL v3 = v2 == 2 || v2 == 1 && ((int)a1[153] > 2 || (int)a1[154] >= 3);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    int v5 = a1[152];
    uint64_t v6 = (int)a1[153];
    uint64_t v7 = (int)a1[154];
    *(_DWORD *)std::stringbuf::string_type buf = 67240960;
    BOOL v21 = v3;
    __int16 v22 = 1026;
    int v23 = v5;
    __int16 v24 = 2050;
    uint64_t v25 = v6;
    __int16 v26 = 2050;
    uint64_t v27 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Nlp, isBroadConnection, %{public}d, reachability, %{public}d, dataAccessTech, %{public}ld, %{public}ld",  buf,  0x22u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    int v9 = a1[152];
    uint64_t v10 = (int)a1[153];
    uint64_t v11 = (int)a1[154];
    v13[0] = 67240960;
    v13[1] = v3;
    __int16 v14 = 1026;
    int v15 = v9;
    __int16 v16 = 2050;
    uint64_t v17 = v10;
    __int16 v18 = 2050;
    uint64_t v19 = v11;
    BOOL v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "Nlp, isBroadConnection, %{public}d, reachability, %{public}d, dataAccessTech, %{public}ld, %{public}ld",  v13,  34);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLNetworkLocationProvider::isBroadConnection()", "%s\n", v12);
  }

  return v3;
}

void sub_10049F904(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 560);
  *(_DWORD *)(a2 + 56) = *(_DWORD *)(a1 + 576);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v4 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(_DWORD *)(a2 + 40);
    int v6 = *(_DWORD *)(a2 + 44);
    int v7 = *(_DWORD *)(a2 + 48);
    int v8 = *(_DWORD *)(a2 + 52);
    int v9 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)std::stringbuf::string_type buf = 67110144;
    int v22 = v5;
    __int16 v23 = 1024;
    int v24 = v6;
    __int16 v25 = 1024;
    int v26 = v7;
    __int16 v27 = 1024;
    int v28 = v8;
    __int16 v29 = 1024;
    int v30 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "NETWORK: stats: cellsQueried, %d, wifisQueried, %d, locationsQueried, %d, totalRequests, %d, totalRequestsSuccessful, %d",  buf,  0x20u);
  }

  uint64_t v10 = a1 + 560;
  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v11 = *(_DWORD *)(a2 + 44);
    int v12 = *(_DWORD *)(a2 + 48);
    int v13 = *(_DWORD *)(a2 + 52);
    int v14 = *(_DWORD *)(a2 + 56);
    LOWORD(v17) = 1024;
    HIWORD(v17) = v11;
    HIWORD(v18) = HIWORD(v13);
    __int16 v19 = 1024;
    int v20 = v14;
    int v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: stats: cellsQueried, %d, wifisQueried, %d, locationsQueried, %d, totalRequests, %d, totalRe questsSuccessful, %d",  &v16,  32,  67110144,  v17,  v12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::getMetric(CLDaemonStats_Type::LocationNetworkQueries &)",  "%s\n",  v15);
  }

  *(void *)uint64_t v10 = 0LL;
  *(void *)(v10 + 8) = 0LL;
  *(_DWORD *)(v10 + 16) = 0;
}

uint64_t sub_10049FB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_BYTE *)(a1 + 456))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    BOOL v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#Warning in private location mode; not querying for unknown cells or unknown wifis",
        buf,
        2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    LOWORD(v12[0]) = 0;
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning in private location mode; not querying for unknown cells or unknown wifis",
                   v12,
                   2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryNearbys(const CLDaemonLocation &, const std::vector<int> &)",  "%s\n",  v4);
LABEL_35:
    return 0xFFFFFFFFLL;
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) != 1)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not querying location",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    LOWORD(v12[0]) = 0;
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not querying location",  v12,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryNearbys(const CLDaemonLocation &, const std::vector<int> &)",  "%s\n",  v4);
    goto LABEL_35;
  }

  if (!*(_DWORD *)(a1 + 608) && !*(_BYTE *)(a1 + 440))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    int v11 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "@AlsFlow, querynearby, skip, connectivity",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    LOWORD(v12[0]) = 0;
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@AlsFlow, querynearby, skip, connectivity",  v12,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryNearbys(const CLDaemonLocation &, const std::vector<int> &)",  "%s\n",  v4);
    goto LABEL_35;
  }

  *(int32x2_t *)(a1 + 568) = vadd_s32(*(int32x2_t *)(a1 + 568), (int32x2_t)0x100000001LL);
  sub_1010DDBC0(__p, "queryNearbys");
  sub_100AD5668(a1 + 464, (uint64_t *)__p);
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  v12[0] = (*(uint64_t (**)(void, uint64_t, uint64_t))(**(void **)(a1 + 448) + 40LL))( *(void *)(a1 + 448),  a2,  0xFFFFFFFFLL);
  *(void *)std::stringbuf::string_type buf = v12;
  int v8 = (char *)(sub_1004C2E20((uint64_t **)(a1 + 392), v12, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
  return v12[0];
}

void sub_10049FFFC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A00F8(uint64_t a1, uint64_t a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  double v5 = vabdd_f64(Current, *(double *)(a1 + 376));
  if (v5 >= 60.0)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v8 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = *(void *)(a1 + 512);
      int v10 = *(_DWORD *)(a1 + 352);
      uint64_t v11 = *(void *)(a1 + 432);
      uint64_t v12 = *(void *)(a1 + 184);
      uint64_t v13 = *(void *)(a1 + 264);
      uint64_t v14 = *(void *)(a1 + 304);
      uint64_t v15 = *(void *)(a1 + 344);
      *(_DWORD *)std::stringbuf::string_type buf = 136317186;
      double v43 = *(double *)&a2;
      __int16 v44 = 2048;
      uint64_t v45 = v9;
      __int16 v46 = 1024;
      int v47 = v10;
      __int16 v48 = 2048;
      uint64_t v49 = v11;
      __int16 v50 = 2048;
      uint64_t v51 = v12;
      __int16 v52 = 2048;
      uint64_t v53 = v13;
      __int16 v54 = 2048;
      uint64_t v55 = v14;
      __int16 v56 = 2048;
      uint64_t v57 = v15;
      __int16 v58 = 2048;
      double v59 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "NETWORK: resetRetryCounters, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, sinceLastReset, %.1lf",  buf,  0x58u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v16 = *(void *)(a1 + 512);
      int v17 = *(_DWORD *)(a1 + 352);
      uint64_t v18 = *(void *)(a1 + 432);
      uint64_t v19 = *(void *)(a1 + 184);
      uint64_t v20 = *(void *)(a1 + 264);
      uint64_t v21 = *(void *)(a1 + 304);
      uint64_t v22 = *(void *)(a1 + 344);
      int v24 = 136317186;
      double v25 = *(double *)&a2;
      __int16 v26 = 2048;
      uint64_t v27 = v16;
      __int16 v28 = 1024;
      int v29 = v17;
      __int16 v30 = 2048;
      uint64_t v31 = v18;
      __int16 v32 = 2048;
      uint64_t v33 = v19;
      __int16 v34 = 2048;
      uint64_t v35 = v20;
      __int16 v36 = 2048;
      uint64_t v37 = v21;
      __int16 v38 = 2048;
      uint64_t v39 = v22;
      __int16 v40 = 2048;
      double v41 = v5;
      __int16 v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: resetRetryCounters, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, sinceLastReset, %.1lf",  (const char *)&v24,  88);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::resetRetryCounters(const char *)",  "%s\n",  v23);
    }

    *(_DWORD *)(a1 + 352) = 0;
    *(double *)(a1 + 360) = Current;
    *(double *)(a1 + 376) = Current;
    sub_1004A5694(a1, (uint64_t)"resetRetryCounters");
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v6 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      double v43 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "NETWORK: resetRetryCounters, sinceLastReset, %.1lf",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      int v24 = 134217984;
      double v25 = v5;
      int v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: resetRetryCounters, sinceLastReset, %.1lf",  COERCE_DOUBLE(&v24));
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::resetRetryCounters(const char *)",  "%s\n",  v7);
    }
  }

uint64_t sub_1004A0520(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  *(void *)(a3 + 96) = 0LL;
  *(void *)(a3 + 104) = 0LL;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0LL;
  *(void *)(a3 + 144) = 0LL;
  *(void *)(a3 + 128) = 0LL;
  *(_BYTE *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 12) = 0LL;
  *(void *)(a3 + 4) = 0LL;
  *(_OWORD *)(a3 + 20) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000LL;
  *(void *)(a3 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  if (*(_BYTE *)a2)
  {
    unsigned int v11 = a2[2];
    if (v11 - 3 > 2)
    {
      uint64_t v14 = 0LL;
      switch(v11)
      {
        case 0u:
        case 1u:
        case 2u:
        case 7u:
          uint64_t v15 = (__int128 *)sub_1004A932C((uint64_t)a2);
          uint64_t v13 = sub_1004A85A0(a1, v15, a3);
          goto LABEL_7;
        case 6u:
          uint64_t v19 = (__int128 *)sub_100450CD0((uint64_t)a2);
          uint64_t v13 = sub_1004AA104(a1, v19, a3);
          goto LABEL_7;
        case 9u:
          uint64_t v20 = (__int128 *)sub_1004AA0E0((uint64_t)a2);
          uint64_t v13 = sub_1004A9354(a1, v20, a3);
          goto LABEL_7;
        case 0xAu:
          uint64_t v21 = (__int128 *)sub_1004ABD0C((uint64_t)a2);
          uint64_t v13 = sub_1004AAF0C(a1, v21, a3);
          goto LABEL_7;
        default:
          break;
      }
    }

    else
    {
      uint64_t v12 = sub_1004A8578((uint64_t)a2);
      uint64_t v13 = sub_1004A7018(a1, v12, a3);
LABEL_7:
      uint64_t v14 = v13;
    }
  }

  else
  {
    uint64_t v14 = 0LL;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v16 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_100F57510(a2, __p);
    int v17 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
        ? __p
        : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: best match cell, %s, bestMatch, %d",  (uint8_t *)&buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v22 = qword_101934A78;
    sub_100F57510(a2, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v26 = 136315394;
    uint64_t v27 = p_buf;
    __int16 v28 = 1024;
    int v29 = v14;
    int v24 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v22,  2LL,  "CELL_LOC: best match cell, %s, bestMatch, %d",  (const char *)&v26,  18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation(const CLCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v24);
    if (v24 != __p) {
      free(v24);
    }
  }

  return v14;
}

uint64_t sub_1004A08DC(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v108 = 0LL;
  __int16 v109 = 0LL;
  uint64_t v110 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  uint64_t v106 = 0LL;
  __int16 v107 = 0LL;
  uint64_t v102 = 0LL;
  unint64_t v103 = 0LL;
  unint64_t v104 = 0LL;
  uint64_t v99 = 0LL;
  uint64_t v100 = 0LL;
  uint64_t v101 = 0LL;
  int v96 = 0LL;
  unint64_t v97 = 0LL;
  int v98 = 0LL;
  uint64_t v4 = *a2;
  if (a2[1] != *a2)
  {
    for (unint64_t i = 0LL; i < 0x66FD0EB66FD0EB67LL * ((a2[1] - *a2) >> 3); ++i)
    {
      uint64_t v7 = v4 + 696 * i;
      unsigned int v8 = *(_DWORD *)(v7 + 8);
      if (v8 < 3) {
        goto LABEL_6;
      }
      if (v8 == 9)
      {
        uint64_t v20 = (_OWORD *)sub_1004AA0E0(v7);
        uint64_t v21 = v20;
        uint64_t v22 = v106;
        if (v106 >= v107)
        {
          double v41 = (char *)__p;
          uint64_t v42 = (v106 - (_BYTE *)__p) >> 5;
          unint64_t v43 = v42 + 1;
          uint64_t v44 = v107 - (_BYTE *)__p;
          if ((v107 - (_BYTE *)__p) >> 4 > v43) {
            unint64_t v43 = v44 >> 4;
          }
          else {
            unint64_t v45 = v43;
          }
          if (v45)
          {
            __int16 v46 = (char *)sub_10000835C((uint64_t)&v107, v45);
            double v41 = (char *)__p;
            uint64_t v22 = v106;
          }

          else
          {
            __int16 v46 = 0LL;
          }

          __int128 v47 = v21[1];
          __int16 v48 = &v46[32 * v42];
          *(_OWORD *)__int16 v48 = *v21;
          *((_OWORD *)v48 + 1) = v47;
          if (v22 == v41)
          {
            uint64_t v51 = &v46[32 * v42];
          }

          else
          {
            uint64_t v49 = &v46[32 * v42];
            do
            {
              __int128 v50 = *((_OWORD *)v22 - 1);
              uint64_t v51 = v49 - 32;
              *((_OWORD *)v49 - 2) = *((_OWORD *)v22 - 2);
              *((_OWORD *)v49 - 1) = v50;
              v22 -= 32;
              v49 -= 32;
            }

            while (v22 != v41);
          }

          int v24 = v48 + 32;
          std::stringbuf::string_type __p = v51;
          uint64_t v106 = v48 + 32;
          __int16 v107 = &v46[32 * v45];
          if (v41) {
            operator delete(v41);
          }
        }

        else
        {
          __int128 v23 = v20[1];
          *(_OWORD *)uint64_t v106 = *v20;
          *((_OWORD *)v22 + 1) = v23;
          int v24 = v22 + 32;
        }

        uint64_t v106 = v24;
        goto LABEL_30;
      }

      if (v8 == 7)
      {
LABEL_6:
        uint64_t v9 = (_OWORD *)sub_1004A932C(v7);
        int v10 = v9;
        unsigned int v11 = v109;
        if (v109 >= v110)
        {
          uint64_t v14 = v108;
          uint64_t v15 = (v109 - v108) >> 5;
          unint64_t v16 = v15 + 1;
          uint64_t v17 = v110 - v108;
          if ((v110 - v108) >> 4 > v16) {
            unint64_t v16 = v17 >> 4;
          }
          else {
            unint64_t v18 = v16;
          }
          if (v18)
          {
            uint64_t v19 = (char *)sub_10000835C((uint64_t)&v110, v18);
            uint64_t v14 = v108;
            unsigned int v11 = v109;
          }

          else
          {
            uint64_t v19 = 0LL;
          }

          __int128 v28 = v10[1];
          int v29 = &v19[32 * v15];
          *(_OWORD *)int v29 = *v10;
          *((_OWORD *)v29 + 1) = v28;
          if (v11 == v14)
          {
            __int16 v32 = &v19[32 * v15];
          }

          else
          {
            __int16 v30 = &v19[32 * v15];
            do
            {
              __int128 v31 = *((_OWORD *)v11 - 1);
              __int16 v32 = v30 - 32;
              *((_OWORD *)v30 - 2) = *((_OWORD *)v11 - 2);
              *((_OWORD *)v30 - 1) = v31;
              v11 -= 32;
              v30 -= 32;
            }

            while (v11 != v14);
          }

          uint64_t v13 = v29 + 32;
          uint64_t v108 = v32;
          __int16 v109 = v29 + 32;
          uint64_t v110 = &v19[32 * v18];
          if (v14) {
            operator delete(v14);
          }
        }

        else
        {
          __int128 v12 = v9[1];
          *(_OWORD *)__int16 v109 = *v9;
          *((_OWORD *)v11 + 1) = v12;
          uint64_t v13 = v11 + 32;
        }

        __int16 v109 = v13;
      }

      else if (v8 - 3 > 2)
      {
        if (v8 == 10)
        {
          __int16 v52 = (_OWORD *)sub_1004ABD0C(v7);
          uint64_t v53 = v52;
          __int16 v54 = v97;
          if (v97 >= v98)
          {
            __int128 v65 = v96;
            unint64_t v66 = 0xAAAAAAAAAAAAAAABLL * ((v97 - (_BYTE *)v96) >> 5);
            unint64_t v67 = v66 + 1;
            if (v66 + 1 > 0x2AAAAAAAAAAAAAALL) {
              sub_100007008();
            }
            if (0x5555555555555556LL * ((v98 - (_BYTE *)v96) >> 5) > v67) {
              unint64_t v67 = 0x5555555555555556LL * ((v98 - (_BYTE *)v96) >> 5);
            }
            if (0xAAAAAAAAAAAAAAABLL * ((v98 - (_BYTE *)v96) >> 5) >= 0x155555555555555LL) {
              unint64_t v68 = 0x2AAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v68 = v67;
            }
            if (v68)
            {
              double v69 = (char *)sub_1003F6AEC((uint64_t)&v98, v68);
              __int128 v65 = v96;
              __int16 v54 = v97;
            }

            else
            {
              double v69 = 0LL;
            }

            __int128 v81 = &v69[32 * ((v97 - (_BYTE *)v96) >> 5)];
            __int128 v82 = v53[1];
            *(_OWORD *)__int128 v81 = *v53;
            *((_OWORD *)v81 + 1) = v82;
            __int128 v83 = v53[2];
            __int128 v84 = v53[3];
            __int128 v85 = v53[5];
            *((_OWORD *)v81 + 4) = v53[4];
            *((_OWORD *)v81 + 5) = v85;
            *((_OWORD *)v81 + 2) = v83;
            *((_OWORD *)v81 + 3) = v84;
            if (v54 == v65)
            {
              __int128 v91 = &v69[96 * v66];
            }

            else
            {
              int v86 = &v69[96 * v66];
              do
              {
                __int128 v87 = *(v54 - 5);
                *((_OWORD *)v86 - 6) = *(v54 - 6);
                *((_OWORD *)v86 - 5) = v87;
                __int128 v88 = *(v54 - 4);
                __int128 v89 = *(v54 - 3);
                __int128 v90 = *(v54 - 2);
                __int128 v91 = v86 - 96;
                *(_OWORD *)(v86 - 20) = *(_OWORD *)((char *)v54 - 20);
                *((_OWORD *)v86 - 3) = v89;
                *((_OWORD *)v86 - 2) = v90;
                *((_OWORD *)v86 - 4) = v88;
                v54 -= 6;
                v86 -= 96;
              }

              while (v54 != v65);
            }

            double v59 = v81 + 96;
            int v96 = v91;
            unint64_t v97 = v81 + 96;
            int v98 = &v69[96 * v68];
            if (v65) {
              operator delete(v65);
            }
          }

          else
          {
            __int128 v55 = v52[1];
            *(_OWORD *)unint64_t v97 = *v52;
            v54[1] = v55;
            __int128 v56 = v52[2];
            __int128 v57 = v52[3];
            __int128 v58 = v52[5];
            v54[4] = v52[4];
            v54[5] = v58;
            v54[2] = v56;
            v54[3] = v57;
            double v59 = (char *)(v54 + 6);
          }

          unint64_t v97 = v59;
        }

        else if (v8 == 6)
        {
          uint64_t v33 = sub_100450CD0(v7);
          uint64_t v34 = v33;
          uint64_t v35 = v100;
          if (v100 >= v101)
          {
            uint64_t v60 = v99;
            uint64_t v61 = 0x2E8BA2E8BA2E8BA3LL * ((v100 - (_BYTE *)v99) >> 3);
            unint64_t v62 = v61 + 1;
            if (0x5D1745D1745D1746LL * ((v101 - (_BYTE *)v99) >> 3) > v62) {
              unint64_t v62 = 0x5D1745D1745D1746LL * ((v101 - (_BYTE *)v99) >> 3);
            }
            else {
              unint64_t v63 = v62;
            }
            if (v63)
            {
              __int16 v64 = (char *)sub_100023598((uint64_t)&v101, v63);
              uint64_t v60 = v99;
              uint64_t v35 = v100;
            }

            else
            {
              __int16 v64 = 0LL;
            }

            __int16 v70 = &v64[88 * v61];
            __int128 v71 = *(_OWORD *)(v34 + 16);
            *(_OWORD *)__int16 v70 = *(_OWORD *)v34;
            *((_OWORD *)v70 + 1) = v71;
            __int128 v72 = *(_OWORD *)(v34 + 32);
            __int128 v73 = *(_OWORD *)(v34 + 48);
            __int128 v74 = *(_OWORD *)(v34 + 64);
            *((void *)v70 + 10) = *(void *)(v34 + 80);
            *((_OWORD *)v70 + 3) = v73;
            *((_OWORD *)v70 + 4) = v74;
            *((_OWORD *)v70 + 2) = v72;
            if (v35 == v60)
            {
              __int128 v80 = &v64[88 * v61];
            }

            else
            {
              __int128 v75 = &v64[88 * v61];
              do
              {
                __int128 v76 = *(_OWORD *)((char *)v35 - 88);
                *(_OWORD *)(v75 - 72) = *(_OWORD *)((char *)v35 - 72);
                *(_OWORD *)(v75 - 88) = v76;
                __int128 v77 = *(_OWORD *)((char *)v35 - 56);
                __int128 v78 = *(_OWORD *)((char *)v35 - 40);
                __int128 v79 = *(_OWORD *)((char *)v35 - 24);
                __int128 v80 = v75 - 88;
                *((_DWORD *)v75 - 2) = *((_DWORD *)v35 - 2);
                *(_OWORD *)(v75 - 24) = v79;
                *(_OWORD *)(v75 - 40) = v78;
                *(_OWORD *)(v75 - 56) = v77;
                uint64_t v35 = (_OWORD *)((char *)v35 - 88);
                v75 -= 88;
              }

              while (v35 != v60);
            }

            __int16 v40 = v70 + 88;
            uint64_t v99 = v80;
            uint64_t v100 = v70 + 88;
            uint64_t v101 = &v64[88 * v63];
            if (v60) {
              operator delete(v60);
            }
          }

          else
          {
            __int128 v36 = *(_OWORD *)(v33 + 16);
            *(_OWORD *)uint64_t v100 = *(_OWORD *)v33;
            v35[1] = v36;
            __int128 v37 = *(_OWORD *)(v33 + 32);
            __int128 v38 = *(_OWORD *)(v33 + 48);
            __int128 v39 = *(_OWORD *)(v33 + 64);
            *((void *)v35 + 10) = *(void *)(v33 + 80);
            v35[3] = v38;
            v35[4] = v39;
            v35[2] = v37;
            __int16 v40 = (char *)v35 + 88;
          }

          uint64_t v100 = v40;
        }
      }

      else
      {
        uint64_t v25 = sub_1004A8578(v7);
        unint64_t v26 = v103;
        if (v103 >= v104)
        {
          uint64_t v27 = sub_1004C2760(&v102, v25);
        }

        else
        {
          sub_1004C2884((uint64_t)&v104, v103, v25);
          uint64_t v27 = v26 + 432;
        }

        unint64_t v103 = v27;
      }

void sub_1004A0F4C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, char *a19, char *a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, void *a25, uint64_t a26)
{
  if (__p) {
    operator delete(__p);
  }
  if (a19)
  {
    a20 = a19;
    operator delete(a19);
  }

  a19 = &a22;
  sub_1003EE02C((void ***)&a19);
  if (a25)
  {
    a26 = (uint64_t)a25;
    operator delete(a25);
  }

  __int128 v28 = *(void **)(v26 - 120);
  if (v28)
  {
    *(void *)(v26 - 112) = v28;
    operator delete(v28);
  }

  _Unwind_Resume(a1);
}

void sub_1004A1104( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004A1120(uint64_t a1)
{
  int v2 = operator new(0x2B0uLL);
  uint64_t result = sub_1004A116C((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A10B8 = (uint64_t)v2;
  return result;
}

void sub_1004A1158(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A116C(uint64_t a1, void *a2)
{
  uint64_t v4 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  uint64_t v7 = v11;
  uint64_t v11 = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  return a1;
}

void sub_1004A1214( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = a12;
  a12 = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1004A1248@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::stringbuf::string_type *a4@<X8>)
{
  double v10 = v9;
  sub_10000CE18((uint64_t)v30);
  uint64_t v11 = sub_10000CF44(&v31, (uint64_t)"cell ", 5LL);
  int v12 = *(char *)(a1 + 23);
  if (v12 >= 0) {
    uint64_t v13 = a1;
  }
  else {
    uint64_t v13 = *(void *)a1;
  }
  if (v12 >= 0) {
    uint64_t v14 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v14 = *(void *)(a1 + 8);
  }
  uint64_t v15 = sub_10000CF44(v11, v13, v14);
  unint64_t v16 = sub_10000CF44(v15, (uint64_t)", local ", 8LL);
  sub_1008698F8(a2, &v29);
  if ((v29.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v17 = &v29;
  }
  else {
    uint64_t v17 = (std::stringbuf::string_type *)v29.__r_.__value_.__r.__words[0];
  }
  if ((v29.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = v29.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = v29.__r_.__value_.__l.__size_;
  }
  uint64_t v19 = sub_10000CF44(v16, (uint64_t)v17, size);
  uint64_t v20 = sub_10000CF44(v19, (uint64_t)", remote ", 9LL);
  sub_1008698F8(a3, &__p);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v22 = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t v22 = __p.__r_.__value_.__l.__size_;
  }
  sub_10000CF44(v20, (uint64_t)p_p, v22);
  __int128 v23 = sub_10000CF44(&v31, (uint64_t)", ", 2LL);
  uint64_t v24 = *v23;
  *(uint64_t *)((char *)v23 + *(void *)(*v23 - 24) + 16) = 1LL;
  *(_DWORD *)((char *)v23 + *(void *)(v24 - 24) + 8) = *(_DWORD *)((_BYTE *)v23 + *(void *)(v24 - 24) + 8) & 0xFFFFFEFB | 4;
  uint64_t v25 = (void *)std::ostream::operator<<(v10);
  sub_10000CF44(v25, (uint64_t)"m apart", 7LL);
  std::stringbuf::str(a4, &v32);
  *(void *)((char *)v30
  uint64_t v31 = v26;
  std::streambuf::~streambuf(&v32);
  return std::ios::~ios(&v33);
}

void sub_1004A1460( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  sub_1011F8850((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void sub_1004A14B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  BOOL v3 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    p_p = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136380675;
    uint64_t v11 = p_p;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "CELL_LOC: %{private}s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    double v5 = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      double v5 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    int v8 = 136380675;
    double v9 = v5;
    unint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CELL_LOC: %{private}s",  &v8,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLNetworkLocationProvider::logCellLocationsWhenLocalAndRemoteDiffer(const std::string &, const CLDaemo nLocation &, const CLDaemonLocation &)",  "%s\n",  v6);
  }

void sub_1004A168C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004A16B4(uint64_t a1)
{
  int v2 = (uint64_t *)(a1 + 200);
  uint64_t result = *(void *)(a1 + 200);
  if (!result)
  {
    BOOL v3 = operator new(0x68uLL);
    sub_100A9F4B0(v3, off_1019382B0, 1LL);
    sub_1004C1B8C(v2, (uint64_t)v3);
    return *v2;
  }

  return result;
}

void sub_1004A1704(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A1718(uint64_t a1)
{
  int v2 = (uint64_t *)(a1 + 192);
  uint64_t result = *(void *)(a1 + 192);
  if (!result)
  {
    BOOL v3 = operator new(0x68uLL);
    sub_100A9F4B0(v3, off_1019382A8, 1LL);
    sub_1004C1B8C(v2, (uint64_t)v3);
    return *v2;
  }

  return result;
}

void sub_1004A1768(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A177C(uint64_t a1)
{
  int v2 = (uint64_t *)(a1 + 160);
  uint64_t result = *(void *)(a1 + 160);
  if (!result)
  {
    BOOL v3 = operator new(0x68uLL);
    sub_100A9F4B0(v3, off_1019382A0, 1LL);
    sub_1004C1B8C(v2, (uint64_t)v3);
    return *v2;
  }

  return result;
}

void sub_1004A17CC(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A17E0(uint64_t a1)
{
  int v2 = (uint64_t *)(a1 + 152);
  uint64_t result = *(void *)(a1 + 152);
  if (!result)
  {
    BOOL v3 = operator new(0x68uLL);
    sub_100A9F4B0(v3, off_101938298, 1LL);
    sub_1004C1B8C(v2, (uint64_t)v3);
    return *v2;
  }

  return result;
}

void sub_1004A1830(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A1844(uint64_t a1)
{
  int v2 = (uint64_t *)(a1 + 240);
  uint64_t result = *(void *)(a1 + 240);
  if (!result)
  {
    BOOL v3 = operator new(0x68uLL);
    sub_100AA0894(v3, off_1019382C0, 1LL);
    sub_1004C1B8C(v2, (uint64_t)v3);
    return *v2;
  }

  return result;
}

void sub_1004A1894(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A18A8(uint64_t a1)
{
  int v2 = (uint64_t *)(a1 + 232);
  uint64_t result = *(void *)(a1 + 232);
  if (!result)
  {
    BOOL v3 = operator new(0x68uLL);
    sub_100AA0894(v3, off_1019382B8, 1LL);
    sub_1004C1B8C(v2, (uint64_t)v3);
    return *v2;
  }

  return result;
}

void sub_1004A18F8(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A190C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 280);
  if (!result)
  {
    BOOL v3 = operator new(0x68uLL);
    sub_100AC44C0(v3, off_1019382D0, 1LL);
    uint64_t v4 = (uint64_t *)(a1 + 280);
    sub_1004C1B8C(v4, (uint64_t)v3);
    return *v4;
  }

  return result;
}

void sub_1004A1960(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A1974(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 272);
  if (!result)
  {
    BOOL v3 = operator new(0x68uLL);
    sub_100AC44C0(v3, off_1019382C8, 1LL);
    uint64_t v4 = (uint64_t *)(a1 + 272);
    sub_1004C1B8C(v4, (uint64_t)v3);
    return *v4;
  }

  return result;
}

void sub_1004A19C8(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A19DC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 320);
  if (!result)
  {
    BOOL v3 = operator new(0x68uLL);
    sub_100363804((uint64_t)v3, off_1019382E0, 1);
    uint64_t v4 = (uint64_t *)(a1 + 320);
    sub_1004C1B8C(v4, (uint64_t)v3);
    return *v4;
  }

  return result;
}

void sub_1004A1A30(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A1A44(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 312);
  if (!result)
  {
    BOOL v3 = operator new(0x68uLL);
    sub_100363804((uint64_t)v3, off_1019382D8, 1);
    uint64_t v4 = (uint64_t *)(a1 + 312);
    sub_1004C1B8C(v4, (uint64_t)v3);
    return *v4;
  }

  return result;
}

void sub_1004A1A98(_Unwind_Exception *a1)
{
}

uint64_t sub_1004A1AAC(uint64_t a1, void *a2, uint64_t *a3, void *a4)
{
  uint64_t v8 = sub_1004A298C(a1, "CLNetworkLocationProvider", a2);
  *(void *)uint64_t v8 = off_10183C1E8;
  uint64_t v9 = *a3;
  *a3 = 0LL;
  *(void *)(v8 + 112) = v9;
  *(_BYTE *)(v8 + 120) = 0;
  *(_OWORD *)(v8 + 128) = 0u;
  *(void *)(v8 + 160) = 0LL;
  *(void *)(v8 + 176) = 0LL;
  *(void *)(v8 + 168) = v8 + 176;
  *(void *)(v8 + 184) = 0LL;
  *(void *)(v8 + 192) = 0LL;
  *(void *)(v8 + 200) = 0LL;
  *(void *)(v8 + 216) = 0LL;
  *(void *)(v8 + 208) = v8 + 216;
  *(_OWORD *)(v8 + 144) = 0u;
  *(void *)(v8 + 224) = 0LL;
  *(void *)(v8 + 232) = 0LL;
  *(void *)(v8 + 240) = 0LL;
  *(void *)(v8 + 248) = v8 + 256;
  *(void *)(v8 + 256) = 0LL;
  *(void *)(v8 + 264) = 0LL;
  *(void *)(v8 + 272) = 0LL;
  *(void *)(v8 + 280) = 0LL;
  *(void *)(v8 + 288) = v8 + 296;
  *(void *)(v8 + 296) = 0LL;
  *(void *)(v8 + 336) = 0LL;
  *(void *)(v8 + 344) = 0LL;
  *(void *)(v8 + 304) = 0LL;
  *(void *)(v8 + 312) = 0LL;
  *(void *)(v8 + 320) = 0LL;
  *(void *)(v8 + 328) = v8 + 336;
  *(_DWORD *)(v8 + 352) = 0;
  *(_OWORD *)(v8 + 360) = 0u;
  *(_OWORD *)(v8 + 376) = 0u;
  *(void *)(v8 + 392) = v8 + 400;
  *(void *)(v8 + 400) = 0LL;
  *(void *)(v8 + 424) = 0LL;
  *(void *)(v8 + 432) = 0LL;
  *(void *)(v8 + 408) = 0LL;
  *(void *)(v8 + 416) = v8 + 424;
  *(_BYTE *)(v8 + 440) = 0;
  *(void *)(v8 + 448) = 0LL;
  *(_WORD *)(a1 + 456) = 0;
  sub_100AD558C(v8 + 464, (uint64_t)"NetworkProvider", a1, 300.0);
  *(void *)(a1 + 512) = 0LL;
  *(_DWORD *)(a1 + 520) = -1;
  *(_BYTE *)(a1 + 524) = 1;
  *(void *)(a1 + 528) = 0LL;
  *(_OWORD *)(a1 + 536) = xmmword_1012EDD30;
  *(void *)(a1 + 552) = 0x40DC200000000000LL;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_DWORD *)(a1 + 576) = 0;
  *(void *)(a1 + 584) = a1 + 592;
  *(void *)(a1 + 608) = 0LL;
  *(_DWORD *)(a1 + 616) = 0;
  sub_100D2D9A4(a1 + 624);
  *(_WORD *)(a1 + 664) = 1;
  *(void *)(a1 + 672) = *a4;
  uint64_t v10 = a4[1];
  *(void *)(a1 + 680) = v10;
  if (v10)
  {
    uint64_t v11 = (unint64_t *)(v10 + 8);
    do
      unint64_t v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }

  uint64_t v13 = *(void *)(a1 + 40);
  *(void *)&__int128 v78 = a1;
  *((void *)&v78 + 1) = v13;
  __int128 v79 = sub_1004A2A28;
  __int128 v80 = sub_1004A2BF8;
  __int128 v85 = sub_1004A31A0;
  int v86 = sub_1004A3378;
  __int128 v87 = sub_1004A3550;
  __int128 v88 = sub_1004A3728;
  __int128 v89 = sub_1004A3900;
  __int128 v90 = sub_1004A3AD8;
  __int128 v91 = sub_1004A3CA8;
  uint64_t v92 = sub_1004A3E80;
  unint64_t v93 = sub_1004A4050;
  uint64_t v94 = sub_1004A4228;
  __int128 v81 = sub_1004A2DD0;
  __int128 v82 = sub_1004A43F8;
  __int128 v83 = sub_1004A45D0;
  __int128 v84 = sub_1004A2FA0;
  uint64_t v14 = operator new(0x1E0uLL);
  sub_1003E92F8((uint64_t)v14, &v78, (uint64_t)a2);
  *(void *)(a1 + 448) = v14;
  sub_1002F0B04(buf);
  uint64_t v15 = (unsigned __int8 *)(a1 + 457);
  sub_1002A6F64(*(uint64_t *)buf, "UseEVDOTransmittedLocations", (BOOL *)(a1 + 457));
  unint64_t v16 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v17 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v19 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v20 = *v15;
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "NETWORK: fIsUseEVDOTransmittedLocations = %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v64 = *v15;
    int v95 = 67109120;
    LODWORD(v96) = v64;
    __int128 v65 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: fIsUseEVDOTransmittedLocations = %d",  &v95);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::CLNetworkLocationProvider(id<CLIntersiloUniverse>, std::unique_ptr<CLINetworkLocationPr oviderExternal>, std::shared_ptr<CLWifiAccessPointLocationService>)",  "%s\n",  v65);
    if (v65 != buf) {
      free(v65);
    }
  }

  sub_1002F0B04(buf);
  uint64_t v21 = (unsigned __int8 *)(a1 + 524);
  sub_1002A6F64(*(uint64_t *)buf, "IsExponentialRetryTimer", (BOOL *)(a1 + 524));
  uint64_t v22 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    __int128 v23 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v25 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v26 = *v21;
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v26;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "NETWORK: fIsExponentialRetryTimer, %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v66 = *v21;
    int v95 = 67109120;
    LODWORD(v96) = v66;
    unint64_t v67 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: fIsExponentialRetryTimer, %d",  &v95);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::CLNetworkLocationProvider(id<CLIntersiloUniverse>, std::unique_ptr<CLINetworkLocationPr oviderExternal>, std::shared_ptr<CLWifiAccessPointLocationService>)",  "%s\n",  v67);
    if (v67 != buf) {
      free(v67);
    }
  }

  sub_1002F0B04(buf);
  sub_1002A6F64(*(uint64_t *)buf, "fIsUseNetworkLocationProvider", (BOOL *)(a1 + 664));
  uint64_t v27 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    __int128 v28 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }

  *(_BYTE *)(a1 + 120) = (*(uint64_t (**)(void))(**(void **)(a1 + 112) + 24LL))(*(void *)(a1 + 112));
  *(_DWORD *)(a1 + 608) = (*(uint64_t (**)(void))(**(void **)(a1 + 112) + 16LL))(*(void *)(a1 + 112));
  if (!*(_BYTE *)(a1 + 120))
  {
    sub_1004BE774(a1);
    nullsub_10(*(void *)(a1 + 672));
  }

  double v77 = 0.0;
  sub_1002F0B04(buf);
  int v30 = sub_1002A82BC(*(uint64_t *)buf, "NetworkLocationPurgeThreshold", &v77);
  int v31 = v30;
  std::stringbuf v32 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v33 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
      if (!v31) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
  }

  if (v30) {
LABEL_36:
  }
    *(double *)(a1 + 536) = v77;
LABEL_37:
  sub_1002F0B04(buf);
  int v35 = sub_1002A82BC(*(uint64_t *)buf, "NetworkLocationPurgeInterval", &v77);
  int v36 = v35;
  __int128 v37 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    __int128 v38 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
      if (!v36) {
        goto LABEL_43;
      }
      goto LABEL_42;
    }
  }

  if (v35) {
LABEL_42:
  }
    *(double *)(a1 + 544) = v77;
LABEL_43:
  sub_1002F0B04(buf);
  int v40 = sub_1002A82BC(*(uint64_t *)buf, "NetworkLocationFirstPurge", &v77);
  double v41 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v42 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v43 = __ldaxr(v42);
    while (__stlxr(v43 - 1, v42));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
      std::__shared_weak_count::__release_weak(v41);
    }
  }

  if (v40) {
    double v44 = v77;
  }
  else {
    double v44 = 180.0;
  }
  sub_1002F0B04(buf);
  int v45 = sub_1002A82BC(*(uint64_t *)buf, "NetworkLocationServerRefreshInterval", &v77);
  int v46 = v45;
  __int128 v47 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_55;
  }
  __int16 v48 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    unint64_t v49 = __ldaxr(v48);
  while (__stlxr(v49 - 1, v48));
  if (v49)
  {
LABEL_55:
    if (!v45) {
      goto LABEL_57;
    }
    goto LABEL_56;
  }

  ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
  std::__shared_weak_count::__release_weak(v47);
  if (v46) {
LABEL_56:
  }
    *(double *)(a1 + 552) = v77;
LABEL_57:
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  __int128 v50 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v51 = *(void *)(a1 + 552);
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    *(void *)&uint8_t buf[4] = v51;
    _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEBUG, "fServerRefreshInterval, %.1lf", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    double v68 = *(double *)(a1 + 552);
    int v95 = 134217984;
    double v96 = v68;
    double v69 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "fServerRefreshInterval, %.1lf",  COERCE_DOUBLE(&v95));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::CLNetworkLocationProvider(id<CLIntersiloUniverse>, std::unique_ptr<CLINetworkLocationPr oviderExternal>, std::shared_ptr<CLWifiAccessPointLocationService>)",  "%s\n",  v69);
    if (v69 != buf) {
      free(v69);
    }
  }

  sub_1002F0B04(buf);
  int v52 = sub_1002A6F64(*(uint64_t *)buf, "NetworkLocationDebugSQLQueries", (BOOL *)&v95);
  uint64_t v53 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    __int16 v54 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v55 = __ldaxr(v54);
    while (__stlxr(v55 - 1, v54));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
      std::__shared_weak_count::__release_weak(v53);
    }
  }

  if (v52)
  {
    sub_10123AFE0();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Network/CLNetworkLocationProvider.mm",  417,  "CLNetworkLocationProvider");
    __break(1u);
  }

  else if (qword_101934A70 == -1)
  {
    goto LABEL_69;
  }

  dispatch_once(&qword_101934A70, &stru_10183C380);
LABEL_69:
  __int128 v56 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    uint64_t v58 = *(void *)(a1 + 544);
    uint64_t v59 = *(void *)(a1 + 536);
    *(_DWORD *)std::stringbuf::string_type buf = 134218496;
    *(double *)&uint8_t buf[4] = v44 + Current;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v58;
    __int16 v102 = 2048;
    uint64_t v103 = v59;
    _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEBUG,  "Scheduling purge for %.3f and checking every %.3fs for older than %.3fs",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v70 = qword_101934A78;
    CFAbsoluteTime v71 = CFAbsoluteTimeGetCurrent();
    uint64_t v72 = *(void *)(a1 + 544);
    uint64_t v73 = *(void *)(a1 + 536);
    int v95 = 134218496;
    double v96 = v44 + v71;
    __int16 v97 = 2048;
    uint64_t v98 = v72;
    __int16 v99 = 2048;
    uint64_t v100 = v73;
    LODWORD(v75) = 32;
    __int128 v74 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v70,  2LL,  "Scheduling purge for %.3f and checking every %.3fs for older than %.3fs",  COERCE_DOUBLE(&v95),  v75,  v76);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::CLNetworkLocationProvider(id<CLIntersiloUniverse>, std::unique_ptr<CLINetworkLocationPr oviderExternal>, std::shared_ptr<CLWifiAccessPointLocationService>)",  "%s\n",  v74);
    if (v74 != buf) {
      free(v74);
    }
  }

  uint64_t v60 = operator new(0x38uLL);
  sub_1010DDBC0(buf, "NetworkLocationPurgeTimer");
  uint64_t v61 = *(void *)(a1 + 40);
  CFAbsoluteTime v62 = CFAbsoluteTimeGetCurrent();
  sub_1006B5FBC(v60, buf, sub_1004A47A0, a1, v61, 0LL, v44 + v62, *(double *)(a1 + 544), 0.9);
  *(void *)(a1 + 528) = v60;
  if (SHIBYTE(v102) < 0) {
    operator delete(*(void **)buf);
  }
  sub_1004A4964(a1, *(double *)(a1 + 536));
  sub_1004A4CC8(a1);
  return a1;
}

void sub_1004A2738( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, _Unwind_Exception *exception_object, uint64_t a13, uint64_t a14, uint64_t a15, void **a16, uint64_t a17, uint64_t *a18, uint64_t *a19, uint64_t a20, uint64_t *a21, uint64_t *a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, void *__p, uint64_t a48, int a49, __int16 a50,char a51,char a52)
{
  uint64_t v57 = *(void *)(v52 + 144);
  *(void *)(v52 + 144) = 0LL;
  if (v57) {
    (*(void (**)(uint64_t))(*(void *)v57 + 8LL))(v57);
  }
  uint64_t v58 = *(void *)(v52 + 136);
  *(void *)(v52 + 136) = 0LL;
  if (v58) {
    (*(void (**)(uint64_t))(*(void *)v58 + 8LL))(v58);
  }
  uint64_t v59 = *a22;
  *a22 = 0LL;
  if (v59) {
    (*(void (**)(uint64_t))(*(void *)v59 + 8LL))(v59);
  }
  uint64_t v60 = *(void *)(v52 + 112);
  *(void *)(v52 + 112) = 0LL;
  if (v60) {
    (*(void (**)(uint64_t))(*(void *)v60 + 8LL))(v60);
  }
  sub_1004A4DC0(v52);
  _Unwind_Resume(a1);
}

uint64_t sub_1004A298C(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_10183C430;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_1004A2A0C(_Unwind_Exception *exception_object)
{
}

void sub_1004A2A28(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterCellLocationSeries",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterCellLocationSeries, event:%{public, l ocation:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004B4E9C((void *)a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A2BD8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A2BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterCellLocation",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      uint64_t v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterCellLocation, event:%{public, locatio n:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v13 = 0;
  }

  sub_1004B5D88(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A2DB0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A2DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterCellLocationUnknown",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterCellLocationUnknown, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004B6298(a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A2F80( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A2FA0(uint64_t a1, uint64_t a2, __int128 **a3, int a4, int a5, int a6, uint64_t a7)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v17 = 1;
    __int16 v14 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterWifiLocationSeriesComplete",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v14, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    int v15 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v19 = 0;
      __int16 v20 = 2082;
      uint64_t v21 = "";
      __int16 v22 = 2082;
      __int128 v23 = "activity";
      __int16 v24 = 2050;
      uint64_t v25 = a7;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterWifiLocationSeriesComplete, event:%{p ublic, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v17 = 0;
  }

  sub_1004B99F0(a7, v13, a2, a3, a4, a5, a6);
  if (v17) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A3180( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A31A0(uint64_t a1, double *a2, const __CFDictionary *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterResponse",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      char v17 = "";
      __int16 v18 = 2082;
      int v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterResponse, event:%{public, location:es cape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v13 = 0;
  }

  sub_1004BA9C4(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A3358( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A3378(uint64_t a1, int a2, int a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterLocationError",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterLocationError, event:%{public, locati on:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004BABBC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A3530( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A3550(uint64_t a1, int a2, int a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterNearbyError",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterNearbyError, event:%{public, location :escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004BBB34((void *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A3708( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A3728(uint64_t a1, int a2, int a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterFinished",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterFinished, event:%{public, location:es cape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004BBD24((_DWORD *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A38E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A3900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterCdmaCellLocation",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      char v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterCdmaCellLocation, event:%{public, loc ation:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v13 = 0;
  }

  sub_1004B675C(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A3AB8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A3AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterCdmaCellLocationUnknown",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterCdmaCellLocationUnknown, event:%{publ ic, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004B6E6C(a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A3C88( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A3CA8(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterLteCellLocation",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      char v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterLteCellLocation, event:%{public, loca tion:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v13 = 0;
  }

  sub_1004B7350(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A3E60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A3E80(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown, event:%{publi c, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004B7E28(a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A4030( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A4050(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterNrCellLocation",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      char v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterNrCellLocation, event:%{public, locat ion:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v13 = 0;
  }

  sub_1004B8698(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A4208( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A4228(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown, event:%{public , location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004B9178(a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A43D8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A43F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterScdmaCellLocation",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      char v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterScdmaCellLocation, event:%{public, lo cation:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v13 = 0;
  }

  sub_1004B53B4(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A45B0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A45D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationRequesterScdmaCellLocationUnknown",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationRequesterScdmaCellLocationUnknown, event:%{pub lic, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004B58C4(a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A4780( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A47A0(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v6 = 1;
    BOOL v3 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onPurgeTimer",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v4 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v8 = 0;
      __int16 v9 = 2082;
      uint64_t v10 = "";
      __int16 v11 = 2082;
      unint64_t v12 = "activity";
      __int16 v13 = 2050;
      uint64_t v14 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onPurgeTimer, event:%{public, location:escape_only}s,  this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v6 = 0;
  }

  sub_1004A4964(a2, *(double *)(a2 + 536));
  if (v6) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A4944( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A4964(uint64_t a1, double a2)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v4 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    *(double *)&uint8_t buf[4] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Purging entries older than %.2fs.", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v18 = 134217984;
    double v19 = a2;
    char v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Purging entries older than %.2fs.",  COERCE_DOUBLE(&v18));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::clearDatabaseEntriesByAge(CFTimeInterval)",  "%s\n",  v17);
    if (v17 != buf) {
      free(v17);
    }
  }

  sub_1004F2598();
  int v5 = sub_1004F64FC();
  if ((v5 & 0x400) != 0)
  {
    uint64_t v9 = sub_1004A177C(a1);
    *(double *)std::stringbuf::string_type buf = a2;
    sub_100400BE0(*(void *)(v9 + 32), (double *)buf);
    uint64_t v10 = sub_1004A17E0(a1);
    *(double *)std::stringbuf::string_type buf = a2;
    sub_100400BE0(*(void *)(v10 + 32), (double *)buf);
    if ((v5 & 0x800000) == 0)
    {
LABEL_8:
      if ((v5 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }

  else if ((v5 & 0x800000) == 0)
  {
    goto LABEL_8;
  }

  uint64_t v11 = sub_1004A16B4(a1);
  *(double *)std::stringbuf::string_type buf = a2;
  sub_100400BE0(*(void *)(v11 + 32), (double *)buf);
  uint64_t v12 = sub_1004A1718(a1);
  *(double *)std::stringbuf::string_type buf = a2;
  sub_100400BE0(*(void *)(v12 + 32), (double *)buf);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_10;
    }
LABEL_16:
    uint64_t v15 = sub_1004A190C(a1);
    *(double *)std::stringbuf::string_type buf = a2;
    sub_100400BE0(*(void *)(v15 + 32), (double *)buf);
    uint64_t v16 = sub_1004A1974(a1);
    *(double *)std::stringbuf::string_type buf = a2;
    sub_100400BE0(*(void *)(v16 + 32), (double *)buf);
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

id sub_1004A4CC8(uint64_t a1)
{
  id result = (id)sub_100F7EF8C(*(void *)(a1 + 672));
  if ((_DWORD)result)
  {
    sub_10043AC3C((uint64_t)sub_1004A503C, a1, *(void **)(a1 + 32), &v9);
    uint64_t v3 = v9;
    uint64_t v9 = 0LL;
    uint64_t v4 = *(void *)(a1 + 128);
    *(void *)(a1 + 128) = v3;
    if (v4)
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
      uint64_t v5 = v9;
      uint64_t v9 = 0LL;
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
      }
    }

    [*(id *)(*(void *)(a1 + 128) + 16) register:*(void *)(*(void *)(a1 + 128) + 8) forNotification:33 registrationInfo:0];
    sub_10036B3B4((uint64_t)sub_1004A5214, a1, *(void **)(a1 + 32), &v9);
    uint64_t v6 = v9;
    uint64_t v9 = 0LL;
    uint64_t v7 = *(void *)(a1 + 136);
    *(void *)(a1 + 136) = v6;
    if (v7)
    {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
      uint64_t v8 = v9;
      uint64_t v9 = 0LL;
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
      }
    }

    return [*(id *)(*(void *)(a1 + 136) + 16) register:*(void *)(*(void *)(a1 + 136) + 8) forNotification:1 registrationInfo:0];
  }

  return result;
}

uint64_t sub_1004A4DC0(uint64_t a1)
{
  *(void *)a1 = off_10183C430;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_1004A4E34(uint64_t a1)
{
  *(void *)a1 = off_10183C1E8;
  uint64_t v2 = *(void *)(a1 + 528);
  if (v2)
  {
    sub_1006B6294(v2);
    uint64_t v3 = *(void *)(a1 + 528);
    if (v3)
    {
      uint64_t v4 = (void *)sub_1006B6010(v3);
      operator delete(v4);
    }

    *(void *)(a1 + 528) = 0LL;
  }

  sub_1004A4FD4((void *)a1);
  sub_10000AE14(a1 + 672);
  sub_100008390(a1 + 584, *(void **)(a1 + 592));
  sub_100AD5650(a1 + 464);
  sub_100008390(a1 + 416, *(void **)(a1 + 424));
  sub_1004C1CC0(a1 + 392, *(void **)(a1 + 400));
  sub_100008390(a1 + 328, *(void **)(a1 + 336));
  sub_1004C1B8C((uint64_t *)(a1 + 320), 0LL);
  sub_1004C1B8C((uint64_t *)(a1 + 312), 0LL);
  sub_100008390(a1 + 288, *(void **)(a1 + 296));
  sub_1004C1B8C((uint64_t *)(a1 + 280), 0LL);
  sub_1004C1B8C((uint64_t *)(a1 + 272), 0LL);
  sub_1004C1C34(a1 + 248, *(void **)(a1 + 256));
  sub_1004C1B8C((uint64_t *)(a1 + 240), 0LL);
  sub_1004C1B8C((uint64_t *)(a1 + 232), 0LL);
  sub_100008390(a1 + 208, *(void **)(a1 + 216));
  sub_1004C1B8C((uint64_t *)(a1 + 200), 0LL);
  sub_1004C1B8C((uint64_t *)(a1 + 192), 0LL);
  sub_100008390(a1 + 168, *(void **)(a1 + 176));
  sub_1004C1B8C((uint64_t *)(a1 + 160), 0LL);
  sub_1004C1B8C((uint64_t *)(a1 + 152), 0LL);
  uint64_t v5 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  return sub_1004A4DC0(a1);
}

id sub_1004A4FD4(void *a1)
{
  id result = (id)sub_100F7EF8C(a1[84]);
  if ((_DWORD)result)
  {
    [*(id *)(a1[16] + 16) unregister:*(void *)(a1[16] + 8) forNotification:33];
    return [*(id *)(a1[17] + 16) unregister:*(void *)(a1[17] + 8) forNotification:1];
  }

  return result;
}

void sub_1004A5028(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1004A4E34(a1);
  operator delete(v1);
}

void sub_1004A503C(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onLocationNotification, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004BC3BC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A51F4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004A5214(uint64_t a1, _DWORD *a2, _DWORD *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLNetworkLocationProvider::onMotionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLNetworkLocationProvider::onMotionNotification, event:%{public, location:escape_on ly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  if (*a2 == 1) {
    sub_100F7EF7C(*(void *)(a4 + 672), a3);
  }
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004A53D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1004A53F4@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_1004A546C()
{
  return 1LL;
}

uint64_t sub_1004A5474()
{
  return 1LL;
}

void sub_1004A547C(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  double v3 = *(double *)(a1 + 368);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  double v4 = vabdd_f64(Current, v3);
  uint64_t v5 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *(_DWORD *)(a1 + 352);
    *(_DWORD *)std::stringbuf::string_type buf = 67109376;
    int v14 = v6;
    __int16 v15 = 2048;
    double v16 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "NETWORK: check reschedule, fQueryRetries, %d, sinceLastRetry, %.1lf",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v7 = *(_DWORD *)(a1 + 352);
    v10[0] = 67109376;
    v10[1] = v7;
    __int16 v11 = 2048;
    double v12 = v4;
    LODWORD(v9) = 18;
    uint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: check reschedule, fQueryRetries, %d, sinceLastRetry, %.1lf",  v10,  v9);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNetworkLocationProvider::rescheduleOnReachability()", "%s\n", v8);
  }

  if (v4 >= 900.0)
  {
    *(_DWORD *)(a1 + 352) = 0;
    *(double *)(a1 + 360) = Current;
    goto LABEL_10;
  }

  if (*(int *)(a1 + 352) <= 4) {
LABEL_10:
  }
    sub_1004A5694(a1, (uint64_t)"rescheduleOnReachability");
}

void sub_1004A5694(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 512))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v2 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "NETWORK: scheduleRetryTimer, retry timer already scheduled",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v28) = 0;
      double v3 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: scheduleRetryTimer, retry timer already scheduled",  &v28,  2);
LABEL_25:
      int v26 = (uint8_t *)v3;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::scheduleRetryTimer(const char *)",  "%s\n",  v3);
      if (v26 != buf) {
        free(v26);
      }
    }
  }

  else
  {
    int v6 = sub_1004BE470(a1);
    if (v6)
    {
      if (*(_BYTE *)(a1 + 524)) {
        double v7 = sub_1002974D8(*(_DWORD *)(a1 + 352), 8, 5);
      }
      else {
        double v7 = 10.0;
      }
      id v8 = [*(id *)(a1 + 40) newTimer];
      *(void *)(a1 + 512) = v8;
      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472LL;
      v27[2] = sub_1004BE76C;
      v27[3] = &unk_10181D3D0;
      v27[4] = a1;
      [v8 setHandler:v27];
      [*(id *)(a1 + 512) setNextFireDelay:v7];
    }

    else
    {
      sub_1004BB770(a1, (uint64_t)"scheduleRetryTimer");
      double v7 = -1.0;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    double v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = *(void *)(a1 + 512);
      int v11 = *(_DWORD *)(a1 + 352);
      uint64_t v12 = *(void *)(a1 + 432);
      uint64_t v13 = *(void *)(a1 + 184);
      uint64_t v14 = *(void *)(a1 + 224);
      uint64_t v15 = *(void *)(a1 + 264);
      uint64_t v16 = *(void *)(a1 + 304);
      uint64_t v17 = *(void *)(a1 + 344);
      *(_DWORD *)std::stringbuf::string_type buf = 136317698;
      uint64_t v51 = a2;
      __int16 v52 = 2048;
      uint64_t v53 = v10;
      __int16 v54 = 1024;
      int v55 = v11;
      __int16 v56 = 2048;
      uint64_t v57 = v12;
      __int16 v58 = 2048;
      uint64_t v59 = v13;
      __int16 v60 = 2048;
      uint64_t v61 = v14;
      __int16 v62 = 2048;
      uint64_t v63 = v15;
      __int16 v64 = 2048;
      uint64_t v65 = v16;
      __int16 v66 = 2048;
      uint64_t v67 = v17;
      __int16 v68 = 2048;
      double v69 = v7;
      __int16 v70 = 1024;
      int v71 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "NETWORK: scheduleRetryTimer, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu, timerInterval, %. 1lf, isTimerNeeded, %d",  buf,  0x68u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v18 = *(void *)(a1 + 512);
      int v19 = *(_DWORD *)(a1 + 352);
      uint64_t v20 = *(void *)(a1 + 432);
      uint64_t v21 = *(void *)(a1 + 184);
      uint64_t v22 = *(void *)(a1 + 224);
      uint64_t v23 = *(void *)(a1 + 264);
      uint64_t v24 = *(void *)(a1 + 304);
      uint64_t v25 = *(void *)(a1 + 344);
      int v28 = 136317698;
      uint64_t v29 = a2;
      __int16 v30 = 2048;
      uint64_t v31 = v18;
      __int16 v32 = 1024;
      int v33 = v19;
      __int16 v34 = 2048;
      uint64_t v35 = v20;
      __int16 v36 = 2048;
      uint64_t v37 = v21;
      __int16 v38 = 2048;
      uint64_t v39 = v22;
      __int16 v40 = 2048;
      uint64_t v41 = v23;
      __int16 v42 = 2048;
      uint64_t v43 = v24;
      __int16 v44 = 2048;
      uint64_t v45 = v25;
      __int16 v46 = 2048;
      double v47 = v7;
      __int16 v48 = 1024;
      int v49 = v6;
      double v3 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: scheduleRetryTimer, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu , timerInterval, %.1lf, isTimerNeeded, %d",  &v28,  104);
      goto LABEL_25;
    }
  }

NSDictionary *sub_1004A5AB8(uint64_t a1)
{
  uint64_t v2 = @"outcome";
  double v3 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", *(void *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v3,  &v2,  1LL);
}

uint64_t sub_1004A5B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  double v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CELL_LOC: ignoring cell since local and network locations disagree.",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    v12[0] = 0;
    int v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CELL_LOC: ignoring cell since local and network locations disagree.",  v12,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL getCellLocationWhenLocalAndRemoteDiffer(const std::string &, CLDaemonLocation &, const CLDaemonLocation &)",  "%s\n",  v11);
  }

  *(void *)(a2 + 96) = 0LL;
  *(void *)(a2 + 104) = 0LL;
  *(_DWORD *)(a2 + 112) = 0;
  *(void *)(a2 + 136) = 0LL;
  *(void *)(a2 + 144) = 0LL;
  *(void *)(a2 + 128) = 0LL;
  *(_BYTE *)(a2 + 152) = 0;
  *(_DWORD *)a2 = 0xFFFF;
  *(void *)(a2 + 12) = 0LL;
  *(void *)(a2 + 4) = 0LL;
  *(_OWORD *)(a2 + 20) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a2 + 36) = _Q0;
  *(_OWORD *)(a2 + 52) = _Q0;
  *(_OWORD *)(a2 + 68) = _Q0;
  *(_DWORD *)(a2 + 84) = 0;
  *(void *)(a2 + 88) = 0xBFF0000000000000LL;
  *(void *)(a2 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a2 + 124) = 0x7FFFFFFF;
  *(void *)std::stringbuf::string_type buf = _NSConcreteStackBlock;
  uint64_t v14 = 3221225472LL;
  uint64_t v15 = sub_1004A5AB8;
  uint64_t v16 = &unk_101820718;
  uint64_t v17 = off_1019382F0;
  AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", buf);
  return 0LL;
}

BOOL sub_1004A5D70(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  *(void *)(a3 + 104) = 0LL;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0LL;
  *(void *)(a3 + 144) = 0LL;
  *(void *)(a3 + 128) = 0LL;
  *(_BYTE *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 12) = 0LL;
  *(void *)(a3 + 4) = 0LL;
  *(_OWORD *)(a3 + 20) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  __int128 v50 = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000LL;
  *(void *)(a3 + 96) = 0LL;
  *(void *)(a3 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  uint64_t v11 = sub_1004A17E0(a1);
  if (sub_10047E7E4(*(void *)(v11 + 32), (uint64_t)a2, a3) && *(double *)(a3 + 20) > 0.0)
  {
    *(_OWORD *)&__p[4] = 0uLL;
    *(_OWORD *)&__p[20] = xmmword_1012E0070;
    *(_OWORD *)&__p[36] = v50;
    *(_OWORD *)&__p[52] = v50;
    *(_OWORD *)&std::stringbuf::string_type __p[68] = v50;
    *(_DWORD *)std::stringbuf::string_type __p = 0xFFFF;
    *(_DWORD *)&__p[84] = 0;
    *(void *)&__p[88] = 0xBFF0000000000000LL;
    __int128 v56 = 0uLL;
    *(void *)((char *)&v57 + 4) = 0xBFF0000000000000LL;
    LODWORD(v57) = 0;
    HIDWORD(v57) = 0x7FFFFFFF;
    memset(v58, 0, 25);
    uint64_t v12 = sub_1004A177C(a1);
    int v13 = sub_10047E7E4(*(void *)(v12 + 32), (uint64_t)a2, (uint64_t)__p);
    else {
      int v14 = 0;
    }
    if (v14 == 1)
    {
      sub_100D2DCA4((double *)(a1 + 624), a3, (uint64_t)__p);
      if (v15 >= *(double *)&__p[20] * 3.0 && CFAbsoluteTimeGetCurrent() - *(double *)(a3 + 76) <= 259200.0)
      {
        sub_1003E4C04(a2, &buf);
        sub_1004A5B38((uint64_t)&buf, a3, (uint64_t)__p);
        int v21 = 0;
      }

      else
      {
        uint64_t v16 = sub_1004A17E0(a1);
        sub_10047F664(*(_BYTE **)(v16 + 32), (uint64_t)a2);
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
        buf.__r_.__value_.__l.__size_ = 3221225472LL;
        buf.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_1004A5AB8;
        *(void *)&__int128 v54 = &unk_101820718;
        *((void *)&v54 + 1) = off_1019382E8;
        AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", &buf);
        __int128 v17 = v57;
        *(_OWORD *)(a3 + 96) = v56;
        *(_OWORD *)(a3 + 112) = v17;
        *(_OWORD *)(a3 + 128) = *(_OWORD *)v58;
        *(_OWORD *)(a3 + 140) = *(_OWORD *)&v58[12];
        __int128 v18 = *(_OWORD *)&__p[48];
        *(_OWORD *)(a3 + 32) = *(_OWORD *)&__p[32];
        *(_OWORD *)(a3 + 48) = v18;
        __int128 v19 = *(_OWORD *)&__p[80];
        *(_OWORD *)(a3 + 64) = *(_OWORD *)&__p[64];
        *(_OWORD *)(a3 + 80) = v19;
        __int128 v20 = *(_OWORD *)&__p[16];
        int v21 = 1;
        *(_OWORD *)a3 = *(_OWORD *)__p;
        *(_OWORD *)(a3 + 16) = v20;
      }
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      int v28 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D1A48(a2, &buf);
        uint64_t v29 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &buf
            : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        LODWORD(v52.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v52.__r_.__value_.__r.__words + 4) = (std::string::size_type)v29;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cell, %s, has local, but no remote - querying",  (uint8_t *)&v52,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v43 = qword_101934A78;
        sub_1003D1A48(a2, &v52);
        if ((v52.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int16 v44 = &v52;
        }
        else {
          __int16 v44 = (std::stringbuf::string_type *)v52.__r_.__value_.__r.__words[0];
        }
        LODWORD(v51.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v51.__r_.__value_.__r.__words + 4) = (std::string::size_type)v44;
        uint64_t v45 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v43,  2LL,  "CELL_LOC: cell, %s, has local, but no remote - querying",  (const char *)&v51);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_GSM(const CLTelephonyService_Type::Cell &, CLDaemonLocation &)",  "%s\n",  (const char *)v45);
        if (v45 != &buf) {
          free(v45);
        }
      }

      double Current = CFAbsoluteTimeGetCurrent();
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      int v21 = 0;
      *((double *)sub_1004C1D10((uint64_t **)(a1 + 168), a2, (uint64_t)&unk_1012CF090, &buf) + 8) = Current - 3600.0;
    }

    BOOL v23 = 1LL;
  }

  else
  {
    buf.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
    buf.__r_.__value_.__l.__size_ = 3221225472LL;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_1004A5AB8;
    *(void *)&__int128 v54 = &unk_101820718;
    *((void *)&v54 + 1) = off_1019382F8;
    AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", &buf);
    uint64_t v22 = sub_1004A177C(a1);
    if (sub_10047E7E4(*(void *)(v22 + 32), (uint64_t)a2, a3))
    {
      BOOL v23 = *(double *)(a3 + 20) > 0.0;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v24 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        std::string::size_type v25 = *(void *)(a3 + 4);
        std::string::size_type v26 = *(void *)(a3 + 12);
        uint64_t v27 = *(void *)(a3 + 20);
        LODWORD(buf.__r_.__value_.__l.__data_) = 134284033;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v25;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v26;
        HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
        *(void *)&__int128 v54 = v27;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: using nw loc (%{private}.6lf %{private}.6lf) acc (%.1lf)",  (uint8_t *)&buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v46 = *(void *)(a3 + 4);
        uint64_t v47 = *(void *)(a3 + 12);
        uint64_t v48 = *(void *)(a3 + 20);
        *(_DWORD *)std::stringbuf::string_type __p = 134284033;
        *(void *)&__p[4] = v46;
        *(_WORD *)&__p[12] = 2049;
        *(void *)&__p[14] = v47;
        *(_WORD *)&__p[22] = 2048;
        *(void *)&__p[24] = v48;
        int v49 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: using nw loc (%{private}.6lf %{private}.6lf) acc (%.1lf)",  __p,  32);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_GSM(const CLTelephonyService_Type::Cell &, CLDaemonLocation &)",  "%s\n",  (const char *)v49);
        if (v49 != &buf) {
          free(v49);
        }
      }

      int v21 = 1;
    }

    else
    {
      int v21 = 0;
      BOOL v23 = 0LL;
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v31 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    sub_1003D1A48(a2, __p);
    int v32 = __p[23];
    int v33 = *(_BYTE **)__p;
    sub_100832C64(a3, &v52);
    __int16 v34 = __p;
    if (v32 < 0) {
      __int16 v34 = v33;
    }
    if ((v52.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v35 = &v52;
    }
    else {
      uint64_t v35 = (std::stringbuf::string_type *)v52.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 67109890;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v23;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = v21;
    HIWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)v34;
    LOWORD(v54) = 2080;
    *(void *)((char *)&v54 + 2) = v35;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "CELL_LOC: found, %d, server, %d, cell, %s, location, %s",  (uint8_t *)&buf,  0x22u);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v37 = qword_101934A78;
    sub_1003D1A48(a2, &v52);
    int size = (char)v52.__r_.__value_.__s.__size_;
    std::string::size_type v39 = v52.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &v51);
    __int16 v40 = &v52;
    if (size < 0) {
      __int16 v40 = (std::stringbuf::string_type *)v39;
    }
    if ((v51.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v41 = &v51;
    }
    else {
      uint64_t v41 = (std::stringbuf::string_type *)v51.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type __p = 67109890;
    *(_DWORD *)&__p[4] = v23;
    *(_WORD *)&__p[8] = 1024;
    *(_DWORD *)&__p[10] = v21;
    *(_WORD *)&__p[14] = 2080;
    *(void *)&__p[16] = v40;
    *(_WORD *)&__p[24] = 2080;
    *(void *)&__p[26] = v41;
    __int16 v42 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v37,  0LL,  "CELL_LOC: found, %d, server, %d, cell, %s, location, %s",  __p,  34,  (const char *)0xBFF0000000000000LL,  0LL);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_GSM(const CLTelephonyService_Type::Cell &, CLDaemonLocation &)",  "%s\n",  (const char *)v42);
    if (v42 != &buf) {
      free(v42);
    }
  }

  return v23;
}

void sub_1004A6678( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1004A66C4(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  *(void *)(a3 + 104) = 0LL;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0LL;
  *(void *)(a3 + 144) = 0LL;
  *(void *)(a3 + 128) = 0LL;
  *(_BYTE *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 12) = 0LL;
  *(void *)(a3 + 4) = 0LL;
  *(_OWORD *)(a3 + 20) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  __int128 v50 = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000LL;
  *(void *)(a3 + 96) = 0LL;
  *(void *)(a3 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  uint64_t v11 = sub_1004A1718(a1);
  if (sub_10047E7E4(*(void *)(v11 + 32), (uint64_t)a2, a3) && *(double *)(a3 + 20) > 0.0)
  {
    *(_OWORD *)&__p[4] = 0uLL;
    *(_OWORD *)&__p[20] = xmmword_1012E0070;
    *(_OWORD *)&__p[36] = v50;
    *(_OWORD *)&__p[52] = v50;
    *(_OWORD *)&std::stringbuf::string_type __p[68] = v50;
    *(_DWORD *)std::stringbuf::string_type __p = 0xFFFF;
    *(_DWORD *)&__p[84] = 0;
    *(void *)&__p[88] = 0xBFF0000000000000LL;
    __int128 v56 = 0uLL;
    *(void *)((char *)&v57 + 4) = 0xBFF0000000000000LL;
    LODWORD(v57) = 0;
    HIDWORD(v57) = 0x7FFFFFFF;
    memset(v58, 0, 25);
    uint64_t v12 = sub_1004A16B4(a1);
    int v13 = sub_10047E7E4(*(void *)(v12 + 32), (uint64_t)a2, (uint64_t)__p);
    else {
      int v14 = 0;
    }
    if (v14 == 1)
    {
      sub_100D2DCA4((double *)(a1 + 624), a3, (uint64_t)__p);
      if (v15 >= *(double *)&__p[20] * 3.0 && CFAbsoluteTimeGetCurrent() - *(double *)(a3 + 76) <= 259200.0)
      {
        sub_1003E4C04(a2, &buf);
        sub_1004A5B38((uint64_t)&buf, a3, (uint64_t)__p);
        int v21 = 0;
      }

      else
      {
        uint64_t v16 = sub_1004A1718(a1);
        sub_10047F664(*(_BYTE **)(v16 + 32), (uint64_t)a2);
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
        buf.__r_.__value_.__l.__size_ = 3221225472LL;
        buf.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_1004A5AB8;
        *(void *)&__int128 v54 = &unk_101820718;
        *((void *)&v54 + 1) = off_1019382E8;
        AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", &buf);
        __int128 v17 = v57;
        *(_OWORD *)(a3 + 96) = v56;
        *(_OWORD *)(a3 + 112) = v17;
        *(_OWORD *)(a3 + 128) = *(_OWORD *)v58;
        *(_OWORD *)(a3 + 140) = *(_OWORD *)&v58[12];
        __int128 v18 = *(_OWORD *)&__p[48];
        *(_OWORD *)(a3 + 32) = *(_OWORD *)&__p[32];
        *(_OWORD *)(a3 + 48) = v18;
        __int128 v19 = *(_OWORD *)&__p[80];
        *(_OWORD *)(a3 + 64) = *(_OWORD *)&__p[64];
        *(_OWORD *)(a3 + 80) = v19;
        __int128 v20 = *(_OWORD *)&__p[16];
        int v21 = 1;
        *(_OWORD *)a3 = *(_OWORD *)__p;
        *(_OWORD *)(a3 + 16) = v20;
      }
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      int v28 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D1A48(a2, &buf);
        uint64_t v29 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &buf
            : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        LODWORD(v52.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v52.__r_.__value_.__r.__words + 4) = (std::string::size_type)v29;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cell, %s, has local, but no remote - querying",  (uint8_t *)&v52,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v43 = qword_101934A78;
        sub_1003D1A48(a2, &v52);
        if ((v52.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int16 v44 = &v52;
        }
        else {
          __int16 v44 = (std::stringbuf::string_type *)v52.__r_.__value_.__r.__words[0];
        }
        LODWORD(v51.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v51.__r_.__value_.__r.__words + 4) = (std::string::size_type)v44;
        uint64_t v45 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v43,  2LL,  "CELL_LOC: cell, %s, has local, but no remote - querying",  (const char *)&v51);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_SCDMA(const CLTelephonyService_Type::ScdmaCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v45);
        if (v45 != &buf) {
          free(v45);
        }
      }

      double Current = CFAbsoluteTimeGetCurrent();
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      int v21 = 0;
      *((double *)sub_1004C1D10((uint64_t **)(a1 + 208), a2, (uint64_t)&unk_1012CF090, &buf) + 8) = Current - 3600.0;
    }

    BOOL v23 = 1LL;
  }

  else
  {
    buf.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
    buf.__r_.__value_.__l.__size_ = 3221225472LL;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_1004A5AB8;
    *(void *)&__int128 v54 = &unk_101820718;
    *((void *)&v54 + 1) = off_1019382F8;
    AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", &buf);
    uint64_t v22 = sub_1004A16B4(a1);
    if (sub_10047E7E4(*(void *)(v22 + 32), (uint64_t)a2, a3))
    {
      BOOL v23 = *(double *)(a3 + 20) > 0.0;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v24 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        std::string::size_type v25 = *(void *)(a3 + 4);
        std::string::size_type v26 = *(void *)(a3 + 12);
        uint64_t v27 = *(void *)(a3 + 20);
        LODWORD(buf.__r_.__value_.__l.__data_) = 134284033;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v25;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v26;
        HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
        *(void *)&__int128 v54 = v27;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: using nw loc (%{private}.6lf %{private}.6lf) acc (%.1lf)",  (uint8_t *)&buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v46 = *(void *)(a3 + 4);
        uint64_t v47 = *(void *)(a3 + 12);
        uint64_t v48 = *(void *)(a3 + 20);
        *(_DWORD *)std::stringbuf::string_type __p = 134284033;
        *(void *)&__p[4] = v46;
        *(_WORD *)&__p[12] = 2049;
        *(void *)&__p[14] = v47;
        *(_WORD *)&__p[22] = 2048;
        *(void *)&__p[24] = v48;
        int v49 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: using nw loc (%{private}.6lf %{private}.6lf) acc (%.1lf)",  __p,  32);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_SCDMA(const CLTelephonyService_Type::ScdmaCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v49);
        if (v49 != &buf) {
          free(v49);
        }
      }

      int v21 = 1;
    }

    else
    {
      int v21 = 0;
      BOOL v23 = 0LL;
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v31 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    sub_1003D1A48(a2, __p);
    int v32 = __p[23];
    int v33 = *(_BYTE **)__p;
    sub_100832C64(a3, &v52);
    __int16 v34 = __p;
    if (v32 < 0) {
      __int16 v34 = v33;
    }
    if ((v52.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v35 = &v52;
    }
    else {
      uint64_t v35 = (std::stringbuf::string_type *)v52.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 67109890;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v23;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = v21;
    HIWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)v34;
    LOWORD(v54) = 2080;
    *(void *)((char *)&v54 + 2) = v35;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "CELL_LOC: scdma, found, %d, server, %d, cell, %s, location, %s",  (uint8_t *)&buf,  0x22u);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v37 = qword_101934A78;
    sub_1003D1A48(a2, &v52);
    int size = (char)v52.__r_.__value_.__s.__size_;
    std::string::size_type v39 = v52.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &v51);
    __int16 v40 = &v52;
    if (size < 0) {
      __int16 v40 = (std::stringbuf::string_type *)v39;
    }
    if ((v51.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v41 = &v51;
    }
    else {
      uint64_t v41 = (std::stringbuf::string_type *)v51.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type __p = 67109890;
    *(_DWORD *)&__p[4] = v23;
    *(_WORD *)&__p[8] = 1024;
    *(_DWORD *)&__p[10] = v21;
    *(_WORD *)&__p[14] = 2080;
    *(void *)&__p[16] = v40;
    *(_WORD *)&__p[24] = 2080;
    *(void *)&__p[26] = v41;
    __int16 v42 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v37,  0LL,  "CELL_LOC: scdma, found, %d, server, %d, cell, %s, location, %s",  __p,  34,  (const char *)0xBFF0000000000000LL,  0LL);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_SCDMA(const CLTelephonyService_Type::ScdmaCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v42);
    if (v42 != &buf) {
      free(v42);
    }
  }

  return v23;
}

void sub_1004A6FCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1004A7018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v70 = *(_DWORD *)a2;
  uint64_t v72 = 0LL;
  uint64_t v73 = 0LL;
  int v71 = 0LL;
  sub_10001B72C( &v71,  *(const void **)(a2 + 8),  *(void *)(a2 + 16),  (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  __int128 v6 = *(_OWORD *)(a2 + 208);
  __int128 v84 = *(_OWORD *)(a2 + 192);
  v85[0] = v6;
  *(_OWORD *)((char *)v85 + 12) = *(_OWORD *)(a2 + 220);
  __int128 v7 = *(_OWORD *)(a2 + 144);
  __int128 v80 = *(_OWORD *)(a2 + 128);
  __int128 v81 = v7;
  __int128 v8 = *(_OWORD *)(a2 + 176);
  __int128 v82 = *(_OWORD *)(a2 + 160);
  __int128 v83 = v8;
  __int128 v9 = *(_OWORD *)(a2 + 80);
  __int128 v76 = *(_OWORD *)(a2 + 64);
  __int128 v77 = v9;
  __int128 v10 = *(_OWORD *)(a2 + 112);
  __int128 v78 = *(_OWORD *)(a2 + 96);
  __int128 v79 = v10;
  __int128 v11 = *(_OWORD *)(a2 + 48);
  __int128 v74 = *(_OWORD *)(a2 + 32);
  __int128 v75 = v11;
  if (*(char *)(a2 + 263) < 0)
  {
    sub_1010DD48C(&v86, *(void **)(a2 + 240), *(void *)(a2 + 248));
  }

  else
  {
    __int128 v86 = *(_OWORD *)(a2 + 240);
    uint64_t v87 = *(void *)(a2 + 256);
  }

  __int128 v12 = *(_OWORD *)(a2 + 408);
  __int128 v96 = *(_OWORD *)(a2 + 392);
  __int128 v97 = v12;
  __int128 v13 = *(_OWORD *)(a2 + 344);
  __int128 v92 = *(_OWORD *)(a2 + 328);
  __int128 v93 = v13;
  __int128 v14 = *(_OWORD *)(a2 + 376);
  __int128 v94 = *(_OWORD *)(a2 + 360);
  __int128 v95 = v14;
  __int128 v15 = *(_OWORD *)(a2 + 280);
  __int128 v88 = *(_OWORD *)(a2 + 264);
  __int128 v89 = v15;
  __int128 v16 = *(_OWORD *)(a2 + 312);
  __int128 v90 = *(_OWORD *)(a2 + 296);
  __int128 v91 = v16;
  int v98 = *(_DWORD *)(a2 + 424);
  sub_1004AE280((uint64_t)&v70);
  if (sub_1004AD428(a1, (uint64_t)&v70, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v17 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D13B8(&v70, __p);
      __int128 v18 = v106 >= 0 ? __p : (void **)__p[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "CELL_LOC: match 8 (%s)", (uint8_t *)&buf, 0xCu);
      if (v106 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_68;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v19 = qword_101934A78;
    sub_1003D13B8(&v70, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    LODWORD(v99.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v99.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_buf;
    int v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v19,  2LL,  "CELL_LOC: match 8 (%s)",  (const char *)&v99);
LABEL_184:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_CDMA(const CLTelephonySe rvice_Type::CdmaCell &, CLDaemonLocation &)",  "%s\n",  v21);
LABEL_68:
    uint64_t v32 = 3LL;
    goto LABEL_69;
  }

  *(void *)&__int128 v75 = -1LL;
  if (sub_1004AD428(a1, (uint64_t)&v70, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v22 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D13B8(&v70, __p);
      BOOL v23 = v106 >= 0 ? __p : (void **)__p[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v23;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: match 5.1 (%s)",  (uint8_t *)&buf,  0xCu);
      if (v106 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_68;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v24 = qword_101934A78;
    sub_1003D13B8(&v70, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v25 = &buf;
    }
    else {
      std::string::size_type v25 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    LODWORD(v99.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v99.__r_.__value_.__r.__words + 4) = (std::string::size_type)v25;
    int v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v24,  2LL,  "CELL_LOC: match 5.1 (%s)",  (const char *)&v99);
    goto LABEL_184;
  }

  DWORD2(v75) = -1;
  if (sub_1004AD428(a1, (uint64_t)&v70, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    std::string::size_type v26 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D13B8(&v70, __p);
      uint64_t v27 = v106 >= 0 ? __p : (void **)__p[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v27;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "CELL_LOC: match 7 (%s)", (uint8_t *)&buf, 0xCu);
      if (v106 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_68;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v28 = qword_101934A78;
    sub_1003D13B8(&v70, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v29 = &buf;
    }
    else {
      uint64_t v29 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    LODWORD(v99.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v99.__r_.__value_.__r.__words + 4) = (std::string::size_type)v29;
    int v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v28,  2LL,  "CELL_LOC: match 7 (%s)",  (const char *)&v99);
    goto LABEL_184;
  }

  DWORD2(v74) = -1;
  if (sub_1004AD428(a1, (uint64_t)&v70, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int16 v30 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D13B8(&v70, __p);
      uint64_t v31 = v106 >= 0 ? __p : (void **)__p[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v31;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: match 4.1 (%s)",  (uint8_t *)&buf,  0xCu);
      if (v106 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_68;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v59 = qword_101934A78;
    sub_1003D13B8(&v70, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v60 = &buf;
    }
    else {
      __int16 v60 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    LODWORD(v99.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v99.__r_.__value_.__r.__words + 4) = (std::string::size_type)v60;
    int v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v59,  2LL,  "CELL_LOC: match 4.1 (%s)",  (const char *)&v99);
    goto LABEL_184;
  }

  DWORD2(v74) = *(_DWORD *)(a2 + 40);
  HIDWORD(v74) = -1;
  if (sub_1004AD428(a1, (uint64_t)&v70, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int16 v34 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D13B8(&v70, __p);
      uint64_t v35 = v106 >= 0 ? __p : (void **)__p[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v35;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: match 4.2 (%s)",  (uint8_t *)&buf,  0xCu);
      if (v106 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_161;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v36 = qword_101934A78;
    sub_1003D13B8(&v70, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v37 = &buf;
    }
    else {
      uint64_t v37 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    LODWORD(v99.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v99.__r_.__value_.__r.__words + 4) = (std::string::size_type)v37;
    __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v36,  2LL,  "CELL_LOC: match 4.2 (%s)",  (const char *)&v99);
LABEL_210:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_CDMA(const CLTelephonySe rvice_Type::CdmaCell &, CLDaemonLocation &)",  "%s\n",  v38);
LABEL_161:
    uint64_t v32 = 1LL;
    goto LABEL_69;
  }

  DWORD2(v74) = -1;
  if (sub_1004AD428(a1, (uint64_t)&v70, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    std::string::size_type v39 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D13B8(&v70, __p);
      __int16 v40 = v106 >= 0 ? __p : (void **)__p[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v40;
      _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEBUG, "CELL_LOC: match 3 (%s)", (uint8_t *)&buf, 0xCu);
      if (v106 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_161;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v41 = qword_101934A78;
    sub_1003D13B8(&v70, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v42 = &buf;
    }
    else {
      __int16 v42 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    LODWORD(v99.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v99.__r_.__value_.__r.__words + 4) = (std::string::size_type)v42;
    __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v41,  2LL,  "CELL_LOC: match 3 (%s)",  (const char *)&v99);
    goto LABEL_210;
  }

  DWORD1(v74) = -1;
  if (sub_1004AD428(a1, (uint64_t)&v70, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v43 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D13B8(&v70, __p);
      __int16 v44 = v106 >= 0 ? __p : (void **)__p[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v44;
      _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEBUG, "CELL_LOC: match 2 (%s)", (uint8_t *)&buf, 0xCu);
      if (v106 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_161;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v45 = qword_101934A78;
    sub_1003D13B8(&v70, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v46 = &buf;
    }
    else {
      uint64_t v46 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    LODWORD(v99.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v99.__r_.__value_.__r.__words + 4) = (std::string::size_type)v46;
    __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v45,  2LL,  "CELL_LOC: match 2 (%s)",  (const char *)&v99);
    goto LABEL_210;
  }

  LODWORD(v74) = -1;
  if (sub_1004AD428(a1, (uint64_t)&v70, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v47 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D13B8(&v70, __p);
      uint64_t v48 = v106 >= 0 ? __p : (void **)__p[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v48;
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEBUG, "CELL_LOC: match 1 (%s)", (uint8_t *)&buf, 0xCu);
      if (v106 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_161;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v49 = qword_101934A78;
    sub_1003D13B8(&v70, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int128 v50 = &buf;
    }
    else {
      __int128 v50 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    LODWORD(v99.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v99.__r_.__value_.__r.__words + 4) = (std::string::size_type)v50;
    __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v49,  2LL,  "CELL_LOC: match 1 (%s)",  (const char *)&v99);
    goto LABEL_210;
  }

  if (*(_BYTE *)(a1 + 457))
  {
    if (*(double *)(a2 + 284) > 0.0)
    {
      *(CFAbsoluteTime *)(a3 + 76) = CFAbsoluteTimeGetCurrent();
      *(void *)(a3 + 20) = 0x40E869E000000000LL;
      *(_DWORD *)(a3 + 84) = 60;
      *(_DWORD *)(a3 + 96) = 7;
      *(_OWORD *)(a3 + 4) = *(_OWORD *)(a2 + 268);
      *(_DWORD *)(a3 + 132) = 1;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      std::stringbuf::string_type v51 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D13B8((unsigned int *)a2, __p);
        int v52 = v106;
        uint64_t v53 = (void **)__p[0];
        sub_100832C64(a3, &buf);
        __int128 v54 = __p;
        if (v52 < 0) {
          __int128 v54 = v53;
        }
        if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          int v55 = &buf;
        }
        else {
          int v55 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        }
        LODWORD(v99.__r_.__value_.__l.__data_) = 136315394;
        *(std::string::size_type *)((char *)v99.__r_.__value_.__r.__words + 4) = (std::string::size_type)v54;
        WORD2(v99.__r_.__value_.__r.__words[1]) = 2080;
        *(std::string::size_type *)((char *)&v99.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v55;
        _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: match sector location, %s, location, %s",  (uint8_t *)&v99,  0x16u);
        if (v106 < 0) {
          operator delete(__p[0]);
        }
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_161;
      }
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v65 = qword_101934A78;
      sub_1003D13B8((unsigned int *)a2, &buf);
      int size = (char)buf.__r_.__value_.__s.__size_;
      std::string::size_type v67 = buf.__r_.__value_.__r.__words[0];
      sub_100832C64(a3, &v99);
      __int16 v68 = &buf;
      if (size < 0) {
        __int16 v68 = (std::stringbuf::string_type *)v67;
      }
      if ((v99.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v69 = &v99;
      }
      else {
        double v69 = (std::stringbuf::string_type *)v99.__r_.__value_.__r.__words[0];
      }
      int v100 = 136315394;
      uint64_t v101 = v68;
      __int16 v102 = 2080;
      uint64_t v103 = v69;
      __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v65,  2LL,  "CELL_LOC: match sector location, %s, location, %s",  (const char *)&v100,  22);
      goto LABEL_210;
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v56 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(__p[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: avoid using transmitted locations",  (uint8_t *)__p,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      __int16 v64 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: avoid using transmitted locations",  &buf,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_CDMA(const CLTelephony Service_Type::CdmaCell &, CLDaemonLocation &)",  "%s\n",  v64);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  __int128 v57 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_1003D13B8(&v70, __p);
    __int16 v58 = v106 >= 0 ? __p : (void **)__p[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v58;
    _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_DEBUG, "CELL_LOC: NO MATCH (%s)", (uint8_t *)&buf, 0xCu);
    if (v106 < 0) {
      operator delete(__p[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v61 = qword_101934A78;
    sub_1003D13B8(&v70, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v62 = &buf;
    }
    else {
      __int16 v62 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    LODWORD(v99.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v99.__r_.__value_.__r.__words + 4) = (std::string::size_type)v62;
    uint64_t v63 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v61,  2LL,  "CELL_LOC: NO MATCH (%s)",  (const char *)&v99);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_CDMA(const CLTelephonySe rvice_Type::CdmaCell &, CLDaemonLocation &)",  "%s\n",  v63);
  }

  uint64_t v32 = 0LL;
LABEL_69:
  if (SHIBYTE(v87) < 0) {
    operator delete((void *)v86);
  }
  if (v71)
  {
    uint64_t v72 = v71;
    operator delete(v71);
  }

  return v32;
}

void sub_1004A849C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1004A8578(uint64_t a1)
{
  uint64_t v2 = sub_10123B140();
  return sub_1004A85A0(v2);
}

uint64_t sub_1004A85A0(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v5 = a2[1];
  __int128 v65 = *a2;
  __int128 v66 = v5;
  if (sub_1004A5D70(a1, (unsigned int *)&v65, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v6 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)&v65, __p);
      int v7 = v73;
      __int128 v8 = (void **)__p[0];
      sub_100832C64(a3, &v74);
      __int128 v9 = __p;
      if (v7 < 0) {
        __int128 v9 = v8;
      }
      if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v10 = &v74;
      }
      else {
        __int128 v10 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v9;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v10;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: GSM full match 0, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v73 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 3LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v11 = qword_101934A78;
    sub_1003D1A48((unsigned int *)&v65, &v74);
    int size = (char)v74.__r_.__value_.__s.__size_;
    std::string::size_type v13 = v74.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    __int128 v14 = &v74;
    if (size < 0) {
      __int128 v14 = (std::stringbuf::string_type *)v13;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v68 = 136315394;
    double v69 = v14;
    __int16 v70 = 2080;
    int v71 = p_buf;
    __int128 v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v11,  2LL,  "CELL_LOC: GSM full match 0, %s, %s",  (const char *)&v68,  22);
LABEL_129:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_GSM(const CLTelephonySer vice_Type::Cell &, CLDaemonLocation &)",  "%s\n",  v16);
    return 3LL;
  }

  *(void *)&__int128 v66 = -1LL;
  if (sub_1004A5D70(a1, (unsigned int *)&v65, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v17 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)&v65, __p);
      int v18 = v73;
      uint64_t v19 = (void **)__p[0];
      sub_100832C64(a3, &v74);
      __int128 v20 = __p;
      if (v18 < 0) {
        __int128 v20 = v19;
      }
      if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v21 = &v74;
      }
      else {
        int v21 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v20;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v21;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: GSM match 1, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v73 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 3LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v49 = qword_101934A78;
    sub_1003D1A48((unsigned int *)&v65, &v74);
    int v50 = (char)v74.__r_.__value_.__s.__size_;
    std::string::size_type v51 = v74.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    int v52 = &v74;
    if (v50 < 0) {
      int v52 = (std::stringbuf::string_type *)v51;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v53 = &buf;
    }
    else {
      uint64_t v53 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v68 = 136315394;
    double v69 = v52;
    __int16 v70 = 2080;
    int v71 = v53;
    __int128 v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v49,  2LL,  "CELL_LOC: GSM match 1, %s, %s",  (const char *)&v68,  22);
    goto LABEL_129;
  }

  HIDWORD(v65) = -1;
  if (sub_1004A5D70(a1, (unsigned int *)&v65, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    BOOL v23 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)&v65, __p);
      int v24 = v73;
      std::string::size_type v25 = (void **)__p[0];
      sub_100832C64(a3, &v74);
      std::string::size_type v26 = __p;
      if (v24 < 0) {
        std::string::size_type v26 = v25;
      }
      if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v27 = &v74;
      }
      else {
        uint64_t v27 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v26;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v27;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: GSM match 2, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v73 < 0) {
        operator delete(__p[0]);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v54 = qword_101934A78;
      sub_1003D1A48((unsigned int *)&v65, &v74);
      int v55 = (char)v74.__r_.__value_.__s.__size_;
      std::string::size_type v56 = v74.__r_.__value_.__r.__words[0];
      sub_100832C64(a3, &buf);
      __int128 v57 = &v74;
      if (v55 < 0) {
        __int128 v57 = (std::stringbuf::string_type *)v56;
      }
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v58 = &buf;
      }
      else {
        __int16 v58 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v68 = 136315394;
      double v69 = v57;
      __int16 v70 = 2080;
      int v71 = v58;
      uint64_t v59 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v54,  2LL,  "CELL_LOC: GSM match 2, %s, %s",  (const char *)&v68,  22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_GSM(const CLTelephonyS ervice_Type::Cell &, CLDaemonLocation &)",  "%s\n",  v59);
    }

    return 2LL;
  }

  DWORD2(v65) = -1;
  if (sub_1004A5D70(a1, (unsigned int *)&v65, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v28 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)&v65, __p);
      int v29 = v73;
      __int16 v30 = (void **)__p[0];
      sub_100832C64(a3, &v74);
      uint64_t v31 = __p;
      if (v29 < 0) {
        uint64_t v31 = v30;
      }
      if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v32 = &v74;
      }
      else {
        uint64_t v32 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v31;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v32;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: GSM match 3, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v73 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v33 = qword_101934A78;
    sub_1003D1A48((unsigned int *)&v65, &v74);
    int v34 = (char)v74.__r_.__value_.__s.__size_;
    std::string::size_type v35 = v74.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    uint64_t v36 = &v74;
    if (v34 < 0) {
      uint64_t v36 = (std::stringbuf::string_type *)v35;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v37 = &buf;
    }
    else {
      uint64_t v37 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v68 = 136315394;
    double v69 = v36;
    __int16 v70 = 2080;
    int v71 = v37;
    __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v33,  2LL,  "CELL_LOC: GSM match 3, %s, %s",  (const char *)&v68,  22);
LABEL_155:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_GSM(const CLTelephonySer vice_Type::Cell &, CLDaemonLocation &)",  "%s\n",  v38);
    return 1LL;
  }

  DWORD1(v65) = -1;
  if (sub_1004A5D70(a1, (unsigned int *)&v65, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    std::string::size_type v39 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)&v65, __p);
      int v40 = v73;
      uint64_t v41 = (void **)__p[0];
      sub_100832C64(a3, &v74);
      __int16 v42 = __p;
      if (v40 < 0) {
        __int16 v42 = v41;
      }
      if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v43 = &v74;
      }
      else {
        uint64_t v43 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v42;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v43;
      _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: GSM match 4, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v73 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v60 = qword_101934A78;
    sub_1003D1A48((unsigned int *)&v65, &v74);
    int v61 = (char)v74.__r_.__value_.__s.__size_;
    std::string::size_type v62 = v74.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    uint64_t v63 = &v74;
    if (v61 < 0) {
      uint64_t v63 = (std::stringbuf::string_type *)v62;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v64 = &buf;
    }
    else {
      __int16 v64 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v68 = 136315394;
    double v69 = v63;
    __int16 v70 = 2080;
    int v71 = v64;
    __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v60,  2LL,  "CELL_LOC: GSM match 4, %s, %s",  (const char *)&v68,  22);
    goto LABEL_155;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  __int16 v44 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_1003D1A48((unsigned int *)&v65, __p);
    uint64_t v45 = v73 >= 0 ? __p : (void **)__p[0];
    LODWORD(v74.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v74.__r_.__value_.__r.__words + 4) = (std::string::size_type)v45;
    _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: GSM NO MATCH, %s",  (uint8_t *)&v74,  0xCu);
    if (v73 < 0) {
      operator delete(__p[0]);
    }
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v46 = qword_101934A78;
    sub_1003D1A48((unsigned int *)&v65, &v74);
    if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v47 = &v74;
    }
    else {
      uint64_t v47 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v47;
    uint64_t v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v46,  2LL,  "CELL_LOC: GSM NO MATCH, %s",  (const char *)&buf);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_GSM(const CLTelephonySer vice_Type::Cell &, CLDaemonLocation &)",  "%s\n",  v48);
    return 0LL;
  }

  return result;
}

void sub_1004A92D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
}

uint64_t sub_1004A932C(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 < 3 || v1 == 7) {
    return a1 + 12;
  }
  uint64_t v3 = sub_10123B2AC();
  return sub_1004A9354(v3);
}

uint64_t sub_1004A9354(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v5 = a2[1];
  __int128 v65 = *a2;
  __int128 v66 = v5;
  if (sub_1004A66C4(a1, (unsigned int *)&v65, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v6 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)&v65, __p);
      int v7 = v73;
      __int128 v8 = (void **)__p[0];
      sub_100832C64(a3, &v74);
      __int128 v9 = __p;
      if (v7 < 0) {
        __int128 v9 = v8;
      }
      if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v10 = &v74;
      }
      else {
        __int128 v10 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v9;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v10;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: SCDMA full match 0, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v73 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 3LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v11 = qword_101934A78;
    sub_1003D1A48((unsigned int *)&v65, &v74);
    int size = (char)v74.__r_.__value_.__s.__size_;
    std::string::size_type v13 = v74.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    __int128 v14 = &v74;
    if (size < 0) {
      __int128 v14 = (std::stringbuf::string_type *)v13;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v68 = 136315394;
    double v69 = v14;
    __int16 v70 = 2080;
    int v71 = p_buf;
    __int128 v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v11,  2LL,  "CELL_LOC: SCDMA full match 0, %s, %s",  (const char *)&v68,  22);
LABEL_129:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_SCDMA(const CLTelephonyS ervice_Type::ScdmaCell &, CLDaemonLocation &)",  "%s\n",  v16);
    return 3LL;
  }

  *(void *)&__int128 v66 = -1LL;
  if (sub_1004A66C4(a1, (unsigned int *)&v65, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v17 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)&v65, __p);
      int v18 = v73;
      uint64_t v19 = (void **)__p[0];
      sub_100832C64(a3, &v74);
      __int128 v20 = __p;
      if (v18 < 0) {
        __int128 v20 = v19;
      }
      if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v21 = &v74;
      }
      else {
        int v21 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v20;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v21;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: SCDMA match 1, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v73 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 3LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v49 = qword_101934A78;
    sub_1003D1A48((unsigned int *)&v65, &v74);
    int v50 = (char)v74.__r_.__value_.__s.__size_;
    std::string::size_type v51 = v74.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    int v52 = &v74;
    if (v50 < 0) {
      int v52 = (std::stringbuf::string_type *)v51;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v53 = &buf;
    }
    else {
      uint64_t v53 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v68 = 136315394;
    double v69 = v52;
    __int16 v70 = 2080;
    int v71 = v53;
    __int128 v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v49,  2LL,  "CELL_LOC: SCDMA match 1, %s, %s",  (const char *)&v68,  22);
    goto LABEL_129;
  }

  HIDWORD(v65) = -1;
  if (sub_1004A66C4(a1, (unsigned int *)&v65, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    BOOL v23 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)&v65, __p);
      int v24 = v73;
      std::string::size_type v25 = (void **)__p[0];
      sub_100832C64(a3, &v74);
      std::string::size_type v26 = __p;
      if (v24 < 0) {
        std::string::size_type v26 = v25;
      }
      if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v27 = &v74;
      }
      else {
        uint64_t v27 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v26;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v27;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: SCDMA match 2, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v73 < 0) {
        operator delete(__p[0]);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v54 = qword_101934A78;
      sub_1003D1A48((unsigned int *)&v65, &v74);
      int v55 = (char)v74.__r_.__value_.__s.__size_;
      std::string::size_type v56 = v74.__r_.__value_.__r.__words[0];
      sub_100832C64(a3, &buf);
      __int128 v57 = &v74;
      if (v55 < 0) {
        __int128 v57 = (std::stringbuf::string_type *)v56;
      }
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v58 = &buf;
      }
      else {
        __int16 v58 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v68 = 136315394;
      double v69 = v57;
      __int16 v70 = 2080;
      int v71 = v58;
      uint64_t v59 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v54,  2LL,  "CELL_LOC: SCDMA match 2, %s, %s",  (const char *)&v68,  22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_SCDMA(const CLTelephon yService_Type::ScdmaCell &, CLDaemonLocation &)",  "%s\n",  v59);
    }

    return 2LL;
  }

  DWORD2(v65) = -1;
  if (sub_1004A66C4(a1, (unsigned int *)&v65, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v28 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)&v65, __p);
      int v29 = v73;
      __int16 v30 = (void **)__p[0];
      sub_100832C64(a3, &v74);
      uint64_t v31 = __p;
      if (v29 < 0) {
        uint64_t v31 = v30;
      }
      if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v32 = &v74;
      }
      else {
        uint64_t v32 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v31;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v32;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: SCDMA match 3, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v73 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v33 = qword_101934A78;
    sub_1003D1A48((unsigned int *)&v65, &v74);
    int v34 = (char)v74.__r_.__value_.__s.__size_;
    std::string::size_type v35 = v74.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    uint64_t v36 = &v74;
    if (v34 < 0) {
      uint64_t v36 = (std::stringbuf::string_type *)v35;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v37 = &buf;
    }
    else {
      uint64_t v37 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v68 = 136315394;
    double v69 = v36;
    __int16 v70 = 2080;
    int v71 = v37;
    __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v33,  2LL,  "CELL_LOC: SCDMA match 3, %s, %s",  (const char *)&v68,  22);
LABEL_155:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_SCDMA(const CLTelephonyS ervice_Type::ScdmaCell &, CLDaemonLocation &)",  "%s\n",  v38);
    return 1LL;
  }

  DWORD1(v65) = -1;
  if (sub_1004A66C4(a1, (unsigned int *)&v65, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    std::string::size_type v39 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)&v65, __p);
      int v40 = v73;
      uint64_t v41 = (void **)__p[0];
      sub_100832C64(a3, &v74);
      __int16 v42 = __p;
      if (v40 < 0) {
        __int16 v42 = v41;
      }
      if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v43 = &v74;
      }
      else {
        uint64_t v43 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v42;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v43;
      _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: SCDMA match 4, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v73 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v60 = qword_101934A78;
    sub_1003D1A48((unsigned int *)&v65, &v74);
    int v61 = (char)v74.__r_.__value_.__s.__size_;
    std::string::size_type v62 = v74.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    uint64_t v63 = &v74;
    if (v61 < 0) {
      uint64_t v63 = (std::stringbuf::string_type *)v62;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v64 = &buf;
    }
    else {
      __int16 v64 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v68 = 136315394;
    double v69 = v63;
    __int16 v70 = 2080;
    int v71 = v64;
    __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v60,  2LL,  "CELL_LOC: SCDMA match 4, %s, %s",  (const char *)&v68,  22);
    goto LABEL_155;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  __int16 v44 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_1003D1A48((unsigned int *)&v65, __p);
    uint64_t v45 = v73 >= 0 ? __p : (void **)__p[0];
    LODWORD(v74.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v74.__r_.__value_.__r.__words + 4) = (std::string::size_type)v45;
    _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: SCDMA NO MATCH, %s",  (uint8_t *)&v74,  0xCu);
    if (v73 < 0) {
      operator delete(__p[0]);
    }
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v46 = qword_101934A78;
    sub_1003D1A48((unsigned int *)&v65, &v74);
    if ((v74.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v47 = &v74;
    }
    else {
      uint64_t v47 = (std::stringbuf::string_type *)v74.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v47;
    uint64_t v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v46,  2LL,  "CELL_LOC: SCDMA NO MATCH, %s",  (const char *)&buf);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_SCDMA(const CLTelephonyS ervice_Type::ScdmaCell &, CLDaemonLocation &)",  "%s\n",  v48);
    return 0LL;
  }

  return result;
}

void sub_1004AA088( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
}

uint64_t sub_1004AA0E0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 8) == 9) {
    return a1 + 44;
  }
  uint64_t v2 = sub_10123B418();
  return sub_1004AA104(v2);
}

uint64_t sub_1004AA104(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v5 = a2[3];
  __int128 v73 = a2[2];
  __int128 v74 = v5;
  __int128 v75 = a2[4];
  uint64_t v76 = *((void *)a2 + 10);
  __int128 v6 = a2[1];
  __int128 v71 = *a2;
  __int128 v72 = v6;
  *(void *)(a3 + 96) = 0LL;
  *(void *)(a3 + 104) = 0LL;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0LL;
  *(void *)(a3 + 144) = 0LL;
  *(void *)(a3 + 128) = 0LL;
  *(_BYTE *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 12) = 0LL;
  *(void *)(a3 + 4) = 0LL;
  *(_OWORD *)(a3 + 20) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000LL;
  *(void *)(a3 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  if (sub_1004ABD30(a1, (uint64_t)&v71, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v12 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2324((unsigned int *)&v71, __p);
      int v13 = v83;
      __int128 v14 = (void **)__p[0];
      sub_100832C64(a3, &v84);
      __int128 v15 = __p;
      if (v13 < 0) {
        __int128 v15 = v14;
      }
      if ((v84.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v16 = &v84;
      }
      else {
        __int128 v16 = (std::stringbuf::string_type *)v84.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v15;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v16;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: LTE full match 0, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v83 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 3LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v17 = qword_101934A78;
    sub_1003D2324((unsigned int *)&v71, &v84);
    int size = (char)v84.__r_.__value_.__s.__size_;
    std::string::size_type v19 = v84.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    __int128 v20 = &v84;
    if (size < 0) {
      __int128 v20 = (std::stringbuf::string_type *)v19;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v78 = 136315394;
    __int128 v79 = v20;
    __int16 v80 = 2080;
    __int128 v81 = p_buf;
    uint64_t v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v17,  2LL,  "CELL_LOC: LTE full match 0, %s, %s",  (const char *)&v78,  22);
LABEL_129:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_LTE(const CLTelephonySer vice_Type::LteCell &, CLDaemonLocation &)",  "%s\n",  v22);
    return 3LL;
  }

  *(void *)&__int128 v72 = -1LL;
  if (sub_1004ABD30(a1, (uint64_t)&v71, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    BOOL v23 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2324((unsigned int *)&v71, __p);
      int v24 = v83;
      std::string::size_type v25 = (void **)__p[0];
      sub_100832C64(a3, &v84);
      std::string::size_type v26 = __p;
      if (v24 < 0) {
        std::string::size_type v26 = v25;
      }
      if ((v84.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v27 = &v84;
      }
      else {
        uint64_t v27 = (std::stringbuf::string_type *)v84.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v26;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v27;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: LTE match 1, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v83 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 3LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v55 = qword_101934A78;
    sub_1003D2324((unsigned int *)&v71, &v84);
    int v56 = (char)v84.__r_.__value_.__s.__size_;
    std::string::size_type v57 = v84.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    __int16 v58 = &v84;
    if (v56 < 0) {
      __int16 v58 = (std::stringbuf::string_type *)v57;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v59 = &buf;
    }
    else {
      uint64_t v59 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v78 = 136315394;
    __int128 v79 = v58;
    __int16 v80 = 2080;
    __int128 v81 = v59;
    uint64_t v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v55,  2LL,  "CELL_LOC: LTE match 1, %s, %s",  (const char *)&v78,  22);
    goto LABEL_129;
  }

  HIDWORD(v71) = -1;
  if (sub_1004ABD30(a1, (uint64_t)&v71, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v29 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2324((unsigned int *)&v71, __p);
      int v30 = v83;
      uint64_t v31 = (void **)__p[0];
      sub_100832C64(a3, &v84);
      uint64_t v32 = __p;
      if (v30 < 0) {
        uint64_t v32 = v31;
      }
      if ((v84.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v33 = &v84;
      }
      else {
        uint64_t v33 = (std::stringbuf::string_type *)v84.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v32;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v33;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: LTE match 2, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v83 < 0) {
        operator delete(__p[0]);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v60 = qword_101934A78;
      sub_1003D2324((unsigned int *)&v71, &v84);
      int v61 = (char)v84.__r_.__value_.__s.__size_;
      std::string::size_type v62 = v84.__r_.__value_.__r.__words[0];
      sub_100832C64(a3, &buf);
      uint64_t v63 = &v84;
      if (v61 < 0) {
        uint64_t v63 = (std::stringbuf::string_type *)v62;
      }
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v64 = &buf;
      }
      else {
        __int16 v64 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v78 = 136315394;
      __int128 v79 = v63;
      __int16 v80 = 2080;
      __int128 v81 = v64;
      __int128 v65 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v60,  2LL,  "CELL_LOC: LTE match 2, %s, %s",  (const char *)&v78,  22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_LTE(const CLTelephonyS ervice_Type::LteCell &, CLDaemonLocation &)",  "%s\n",  v65);
    }

    return 2LL;
  }

  DWORD2(v71) = -1;
  if (sub_1004ABD30(a1, (uint64_t)&v71, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v34 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2324((unsigned int *)&v71, __p);
      int v35 = v83;
      uint64_t v36 = (void **)__p[0];
      sub_100832C64(a3, &v84);
      uint64_t v37 = __p;
      if (v35 < 0) {
        uint64_t v37 = v36;
      }
      if ((v84.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v38 = &v84;
      }
      else {
        __int16 v38 = (std::stringbuf::string_type *)v84.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v37;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v38;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: LTE match 3, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v83 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v39 = qword_101934A78;
    sub_1003D2324((unsigned int *)&v71, &v84);
    int v40 = (char)v84.__r_.__value_.__s.__size_;
    std::string::size_type v41 = v84.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    __int16 v42 = &v84;
    if (v40 < 0) {
      __int16 v42 = (std::stringbuf::string_type *)v41;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v43 = &buf;
    }
    else {
      uint64_t v43 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v78 = 136315394;
    __int128 v79 = v42;
    __int16 v80 = 2080;
    __int128 v81 = v43;
    __int16 v44 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v39,  2LL,  "CELL_LOC: LTE match 3, %s, %s",  (const char *)&v78,  22);
LABEL_155:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_LTE(const CLTelephonySer vice_Type::LteCell &, CLDaemonLocation &)",  "%s\n",  v44);
    return 1LL;
  }

  DWORD1(v71) = -1;
  if (sub_1004ABD30(a1, (uint64_t)&v71, a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v45 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2324((unsigned int *)&v71, __p);
      int v46 = v83;
      uint64_t v47 = (void **)__p[0];
      sub_100832C64(a3, &v84);
      uint64_t v48 = __p;
      if (v46 < 0) {
        uint64_t v48 = v47;
      }
      if ((v84.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v49 = &v84;
      }
      else {
        uint64_t v49 = (std::stringbuf::string_type *)v84.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v48;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v49;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: LTE match 4, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v83 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v66 = qword_101934A78;
    sub_1003D2324((unsigned int *)&v71, &v84);
    int v67 = (char)v84.__r_.__value_.__s.__size_;
    std::string::size_type v68 = v84.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    double v69 = &v84;
    if (v67 < 0) {
      double v69 = (std::stringbuf::string_type *)v68;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v70 = &buf;
    }
    else {
      __int16 v70 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v78 = 136315394;
    __int128 v79 = v69;
    __int16 v80 = 2080;
    __int128 v81 = v70;
    __int16 v44 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v66,  2LL,  "CELL_LOC: LTE match 4, %s, %s",  (const char *)&v78,  22);
    goto LABEL_155;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  int v50 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    sub_1003D2324((unsigned int *)&v71, __p);
    std::string::size_type v51 = v83 >= 0 ? __p : (void **)__p[0];
    LODWORD(v84.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v84.__r_.__value_.__r.__words + 4) = (std::string::size_type)v51;
    _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEFAULT,  "CELL_LOC: LTE NO MATCH, %s",  (uint8_t *)&v84,  0xCu);
    if (v83 < 0) {
      operator delete(__p[0]);
    }
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v52 = qword_101934A78;
    sub_1003D2324((unsigned int *)&v71, &v84);
    if ((v84.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v53 = &v84;
    }
    else {
      uint64_t v53 = (std::stringbuf::string_type *)v84.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v53;
    uint64_t v54 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v52,  0LL,  "CELL_LOC: LTE NO MATCH, %s",  (const char *)&buf);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_LTE(const CLTelephonySer vice_Type::LteCell &, CLDaemonLocation &)",  "%s\n",  v54);
    return 0LL;
  }

  return result;
}

void sub_1004AAEB4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, void *__p, uint64_t a32, int a33, __int16 a34, char a35, char a36)
{
}

uint64_t sub_1004AAF0C(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v5 = a2[3];
  __int128 v74 = a2[2];
  __int128 v75 = v5;
  __int128 v6 = a2[5];
  __int128 v76 = a2[4];
  __int128 v77 = v6;
  __int128 v7 = a2[1];
  __int128 v72 = *a2;
  __int128 v73 = v7;
  *(void *)(a3 + 96) = 0LL;
  *(void *)(a3 + 104) = 0LL;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0LL;
  *(void *)(a3 + 144) = 0LL;
  *(void *)(a3 + 128) = 0LL;
  *(_BYTE *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 12) = 0LL;
  *(void *)(a3 + 4) = 0LL;
  *(_OWORD *)(a3 + 20) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000LL;
  *(void *)(a3 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  if (sub_1004AC8AC(a1, &v72, a3))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    int v13 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2C58((unsigned int *)&v72, __p);
      int v14 = v84;
      __int128 v15 = (void **)__p[0];
      sub_100832C64(a3, &v85);
      __int128 v16 = __p;
      if (v14 < 0) {
        __int128 v16 = v15;
      }
      if ((v85.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v17 = &v85;
      }
      else {
        uint64_t v17 = (std::stringbuf::string_type *)v85.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v16;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v17;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: NR full match 0, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v84 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 3LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v18 = qword_101934858;
    sub_1003D2C58((unsigned int *)&v72, &v85);
    int size = (char)v85.__r_.__value_.__s.__size_;
    std::string::size_type v20 = v85.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    int v21 = &v85;
    if (size < 0) {
      int v21 = (std::stringbuf::string_type *)v20;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v79 = 136315394;
    __int16 v80 = v21;
    __int16 v81 = 2080;
    __int128 v82 = p_buf;
    BOOL v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v18,  2LL,  "CELL_LOC: NR full match 0, %s, %s",  (const char *)&v79,  22);
LABEL_129:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_NR(const CLTelephonyServ ice_Type::NrCell &, CLDaemonLocation &)",  "%s\n",  v23);
    return 3LL;
  }

  *((void *)&v73 + 1) = -1LL;
  if (sub_1004AC8AC(a1, &v72, a3))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    int v24 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2C58((unsigned int *)&v72, __p);
      int v25 = v84;
      std::string::size_type v26 = (void **)__p[0];
      sub_100832C64(a3, &v85);
      uint64_t v27 = __p;
      if (v25 < 0) {
        uint64_t v27 = v26;
      }
      if ((v85.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v28 = &v85;
      }
      else {
        uint64_t v28 = (std::stringbuf::string_type *)v85.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v27;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v28;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: NR match 1, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v84 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 3LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v56 = qword_101934858;
    sub_1003D2C58((unsigned int *)&v72, &v85);
    int v57 = (char)v85.__r_.__value_.__s.__size_;
    std::string::size_type v58 = v85.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    uint64_t v59 = &v85;
    if (v57 < 0) {
      uint64_t v59 = (std::stringbuf::string_type *)v58;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v60 = &buf;
    }
    else {
      uint64_t v60 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v79 = 136315394;
    __int16 v80 = v59;
    __int16 v81 = 2080;
    __int128 v82 = v60;
    BOOL v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v56,  2LL,  "CELL_LOC: NR match 1, %s, %s",  (const char *)&v79,  22);
    goto LABEL_129;
  }

  *(void *)&__int128 v73 = -1LL;
  if (sub_1004AC8AC(a1, &v72, a3))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    int v30 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2C58((unsigned int *)&v72, __p);
      int v31 = v84;
      uint64_t v32 = (void **)__p[0];
      sub_100832C64(a3, &v85);
      uint64_t v33 = __p;
      if (v31 < 0) {
        uint64_t v33 = v32;
      }
      if ((v85.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v34 = &v85;
      }
      else {
        int v34 = (std::stringbuf::string_type *)v85.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v33;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v34;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: NR match 2, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v84 < 0) {
        operator delete(__p[0]);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10183C360);
      }
      uint64_t v61 = qword_101934858;
      sub_1003D2C58((unsigned int *)&v72, &v85);
      int v62 = (char)v85.__r_.__value_.__s.__size_;
      std::string::size_type v63 = v85.__r_.__value_.__r.__words[0];
      sub_100832C64(a3, &buf);
      __int16 v64 = &v85;
      if (v62 < 0) {
        __int16 v64 = (std::stringbuf::string_type *)v63;
      }
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v65 = &buf;
      }
      else {
        __int128 v65 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v79 = 136315394;
      __int16 v80 = v64;
      __int16 v81 = 2080;
      __int128 v82 = v65;
      uint64_t v66 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v61,  2LL,  "CELL_LOC: NR match 2, %s, %s",  (const char *)&v79,  22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_NR(const CLTelephonySe rvice_Type::NrCell &, CLDaemonLocation &)",  "%s\n",  v66);
    }

    return 2LL;
  }

  DWORD2(v72) = -1;
  if (sub_1004AC8AC(a1, &v72, a3))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    int v35 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2C58((unsigned int *)&v72, __p);
      int v36 = v84;
      uint64_t v37 = (void **)__p[0];
      sub_100832C64(a3, &v85);
      __int16 v38 = __p;
      if (v36 < 0) {
        __int16 v38 = v37;
      }
      if ((v85.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v39 = &v85;
      }
      else {
        uint64_t v39 = (std::stringbuf::string_type *)v85.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v38;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v39;
      _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: NR match 3, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v84 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v40 = qword_101934858;
    sub_1003D2C58((unsigned int *)&v72, &v85);
    int v41 = (char)v85.__r_.__value_.__s.__size_;
    std::string::size_type v42 = v85.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    uint64_t v43 = &v85;
    if (v41 < 0) {
      uint64_t v43 = (std::stringbuf::string_type *)v42;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v44 = &buf;
    }
    else {
      __int16 v44 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v79 = 136315394;
    __int16 v80 = v43;
    __int16 v81 = 2080;
    __int128 v82 = v44;
    uint64_t v45 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v40,  2LL,  "CELL_LOC: NR match 3, %s, %s",  (const char *)&v79,  22);
LABEL_155:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_NR(const CLTelephonyServ ice_Type::NrCell &, CLDaemonLocation &)",  "%s\n",  v45);
    return 1LL;
  }

  DWORD1(v72) = -1;
  if (sub_1004AC8AC(a1, &v72, a3))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    int v46 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2C58((unsigned int *)&v72, __p);
      int v47 = v84;
      uint64_t v48 = (void **)__p[0];
      sub_100832C64(a3, &v85);
      uint64_t v49 = __p;
      if (v47 < 0) {
        uint64_t v49 = v48;
      }
      if ((v85.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v50 = &v85;
      }
      else {
        int v50 = (std::stringbuf::string_type *)v85.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v49;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v50;
      _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: NR match 4, %s, %s",  (uint8_t *)&buf,  0x16u);
      if (v84 < 0) {
        operator delete(__p[0]);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v67 = qword_101934858;
    sub_1003D2C58((unsigned int *)&v72, &v85);
    int v68 = (char)v85.__r_.__value_.__s.__size_;
    std::string::size_type v69 = v85.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &buf);
    __int16 v70 = &v85;
    if (v68 < 0) {
      __int16 v70 = (std::stringbuf::string_type *)v69;
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int128 v71 = &buf;
    }
    else {
      __int128 v71 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v79 = 136315394;
    __int16 v80 = v70;
    __int16 v81 = 2080;
    __int128 v82 = v71;
    uint64_t v45 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v67,  2LL,  "CELL_LOC: NR match 4, %s, %s",  (const char *)&v79,  22);
    goto LABEL_155;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  std::string::size_type v51 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    sub_1003D2C58((unsigned int *)&v72, __p);
    uint64_t v52 = v84 >= 0 ? __p : (void **)__p[0];
    LODWORD(v85.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v85.__r_.__value_.__r.__words + 4) = (std::string::size_type)v52;
    _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "CELL_LOC: NR NO MATCH, %s",  (uint8_t *)&v85,  0xCu);
    if (v84 < 0) {
      operator delete(__p[0]);
    }
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v53 = qword_101934858;
    sub_1003D2C58((unsigned int *)&v72, &v85);
    if ((v85.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v54 = &v85;
    }
    else {
      uint64_t v54 = (std::stringbuf::string_type *)v85.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v54;
    uint64_t v55 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v53,  0LL,  "CELL_LOC: NR NO MATCH, %s",  (const char *)&buf);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLNetworkLocationProvider::BestMatchLevel CLNetworkLocationProvider::getBestMatchLocation_NR(const CLTelephonyServ ice_Type::NrCell &, CLDaemonLocation &)",  "%s\n",  v55);
    return 0LL;
  }

  return result;
}

void sub_1004ABCB4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, void *__p, uint64_t a32, int a33, __int16 a34, char a35, char a36)
{
}

uint64_t sub_1004ABD0C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 8) == 10) {
    return a1 + 600;
  }
  uint64_t v2 = sub_10123B584();
  return sub_1004ABD30(v2);
}

BOOL sub_1004ABD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5 = *(_OWORD *)(a2 + 48);
  v70[2] = *(_OWORD *)(a2 + 32);
  v70[3] = v5;
  v70[4] = *(_OWORD *)(a2 + 64);
  uint64_t v71 = *(void *)(a2 + 80);
  __int128 v6 = *(_OWORD *)(a2 + 16);
  v70[0] = *(_OWORD *)a2;
  v70[1] = v6;
  sub_1003D2324((unsigned int *)v70, v68);
  *(void *)(a3 + 104) = 0LL;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0LL;
  *(void *)(a3 + 144) = 0LL;
  *(void *)(a3 + 128) = 0LL;
  *(_BYTE *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 12) = 0LL;
  *(void *)(a3 + 4) = 0LL;
  __int128 v66 = xmmword_1012E0070;
  *(_OWORD *)(a3 + 20) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  __int128 v67 = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000LL;
  *(void *)(a3 + 96) = 0LL;
  *(void *)(a3 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  uint64_t v12 = sub_1004A1974(a1);
  BOOL v13 = sub_100A333D0(*(void *)(v12 + 32), (uint64_t)v70, a3);
  if (*(double *)(a3 + 20) > 0.0 && v13)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v15 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      __int128 v16 = v68;
      if (v69 < 0) {
        __int128 v16 = (void **)v68[0];
      }
      std::string::size_type v17 = *(void *)(a3 + 4);
      uint64_t v18 = *(void *)(a3 + 12);
      uint64_t v19 = *(void *)(a3 + 20);
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315906;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v16;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v17;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
      *(void *)int v79 = v18;
      *(_WORD *)&v79[8] = 2048;
      *(void *)&v79[10] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: found in DB (%s) loc (%lf %lf) acc (%lf)",  (uint8_t *)&buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v52 = v68;
      if (v69 < 0) {
        uint64_t v52 = (void **)v68[0];
      }
      uint64_t v53 = *(void *)(a3 + 4);
      uint64_t v54 = *(void *)(a3 + 12);
      uint64_t v55 = *(void *)(a3 + 20);
      *(_DWORD *)std::stringbuf::string_type __p = 136315906;
      *(void *)&__p[4] = v52;
      *(_WORD *)&__p[12] = 2048;
      *(void *)&__p[14] = v53;
      *(_WORD *)&__p[22] = 2048;
      *(void *)&__p[24] = v54;
      *(_WORD *)&__p[32] = 2048;
      *(void *)&__p[34] = v55;
      LODWORD(v65) = 42;
      uint64_t v56 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: found in DB (%s) loc (%lf %lf) acc (%lf)",  __p,  v65,  -1.0,  0.0);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_LTE(const CLTelephonyService_Type::LteCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v56);
      if (v56 != &buf) {
        free(v56);
      }
    }

    *(void *)&__p[12] = 0LL;
    *(void *)&__p[4] = 0LL;
    *(_OWORD *)&__p[20] = v66;
    *(_OWORD *)&__p[36] = v67;
    *(_OWORD *)&__p[52] = v67;
    *(_OWORD *)&std::stringbuf::string_type __p[68] = v67;
    *(_DWORD *)std::stringbuf::string_type __p = 0xFFFF;
    *(_DWORD *)&__p[84] = 0;
    __int128 v75 = 0uLL;
    *(void *)&__p[88] = 0xBFF0000000000000LL;
    *(void *)((char *)&v76 + 4) = 0xBFF0000000000000LL;
    LODWORD(v76) = 0;
    HIDWORD(v76) = 0x7FFFFFFF;
    memset(v77, 0, 25);
    uint64_t v20 = sub_1004A190C(a1);
    BOOL v21 = sub_100A333D0(*(void *)(v20 + 32), (uint64_t)v70, (uint64_t)__p);
    if (*(double *)&__p[20] > 0.0 && v21)
    {
      sub_100D2DCA4((double *)(a1 + 624), a3, (uint64_t)__p);
      if (v23 >= *(double *)&__p[20] * 3.0)
      {
        sub_1003E4C04((unsigned int *)v70, &buf);
        sub_1004A5B38((uint64_t)&buf, a3, (uint64_t)__p);
        int v29 = 0;
      }

      else
      {
        uint64_t v24 = sub_1004A1974(a1);
        sub_100A343D4(*(_BYTE **)(v24 + 32), (uint64_t)v70);
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
        buf.__r_.__value_.__l.__size_ = 3221225472LL;
        buf.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_1004A5AB8;
        *(void *)int v79 = &unk_101820718;
        *(void *)&v79[8] = off_1019382E8;
        AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", &buf);
        __int128 v25 = v76;
        *(_OWORD *)(a3 + 96) = v75;
        *(_OWORD *)(a3 + 112) = v25;
        *(_OWORD *)(a3 + 128) = *(_OWORD *)v77;
        *(_OWORD *)(a3 + 140) = *(_OWORD *)&v77[12];
        __int128 v26 = *(_OWORD *)&__p[48];
        *(_OWORD *)(a3 + 32) = *(_OWORD *)&__p[32];
        *(_OWORD *)(a3 + 48) = v26;
        __int128 v27 = *(_OWORD *)&__p[80];
        *(_OWORD *)(a3 + 64) = *(_OWORD *)&__p[64];
        *(_OWORD *)(a3 + 80) = v27;
        __int128 v28 = *(_OWORD *)&__p[16];
        int v29 = 1;
        *(_OWORD *)a3 = *(_OWORD *)__p;
        *(_OWORD *)(a3 + 16) = v28;
      }
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v37 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D2324((unsigned int *)v70, &buf);
        __int16 v38 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &buf
            : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        LODWORD(v73.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v73.__r_.__value_.__r.__words + 4) = (std::string::size_type)v38;
        _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cell, %s, has local, but no remote -  querying",  (uint8_t *)&v73,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v62 = qword_101934A78;
        sub_1003D2324((unsigned int *)v70, &v73);
        if ((v73.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          std::string::size_type v63 = &v73;
        }
        else {
          std::string::size_type v63 = (std::stringbuf::string_type *)v73.__r_.__value_.__r.__words[0];
        }
        LODWORD(v72.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v72.__r_.__value_.__r.__words + 4) = (std::string::size_type)v63;
        __int16 v64 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v62,  2LL,  "CELL_LOC: cell, %s, has local, but no remote -  querying",  (const char *)&v72);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_LTE(const CLTelephonyService_Type::LteCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v64);
        if (v64 != &buf) {
          free(v64);
        }
      }

      double Current = CFAbsoluteTimeGetCurrent();
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v70;
      int v29 = 0;
      *((double *)sub_1004C24B8((uint64_t **)(a1 + 288), v70, (uint64_t)&unk_1012CF090, &buf) + 15) = Current - 3600.0;
    }

    BOOL v31 = 1LL;
  }

  else
  {
    buf.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
    buf.__r_.__value_.__l.__size_ = 3221225472LL;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_1004A5AB8;
    *(void *)int v79 = &unk_101820718;
    *(void *)&v79[8] = off_1019382F8;
    AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", &buf);
    uint64_t v30 = sub_1004A190C(a1);
    if (sub_100A333D0(*(void *)(v30 + 32), (uint64_t)v70, a3))
    {
      BOOL v31 = *(double *)(a3 + 20) > 0.0;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v32 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v33 = v68;
        if (v69 < 0) {
          uint64_t v33 = (void **)v68[0];
        }
        std::string::size_type v34 = *(void *)(a3 + 4);
        uint64_t v35 = *(void *)(a3 + 12);
        uint64_t v36 = *(void *)(a3 + 20);
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315907;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v33;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v34;
        HIWORD(buf.__r_.__value_.__r.__words[2]) = 2049;
        *(void *)int v79 = v35;
        *(_WORD *)&v79[8] = 2048;
        *(void *)&v79[10] = v36;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: using nw (%s) loc (%{private}.6lf %{private}.6lf) acc (%.1lf)",  (uint8_t *)&buf,  0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        int v57 = v68;
        if (v69 < 0) {
          int v57 = (void **)v68[0];
        }
        uint64_t v58 = *(void *)(a3 + 4);
        uint64_t v59 = *(void *)(a3 + 12);
        uint64_t v60 = *(void *)(a3 + 20);
        *(_DWORD *)std::stringbuf::string_type __p = 136315907;
        *(void *)&__p[4] = v57;
        *(_WORD *)&__p[12] = 2049;
        *(void *)&__p[14] = v58;
        *(_WORD *)&__p[22] = 2049;
        *(void *)&__p[24] = v59;
        *(_WORD *)&__p[32] = 2048;
        *(void *)&__p[34] = v60;
        uint64_t v61 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: using nw (%s) loc (%{private}.6lf %{private}.6lf) acc (%.1lf)",  __p,  42);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_LTE(const CLTelephonyService_Type::LteCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v61);
        if (v61 != &buf) {
          free(v61);
        }
      }

      int v29 = 1;
    }

    else
    {
      int v29 = 0;
      BOOL v31 = 0LL;
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v40 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    sub_1003D2324((unsigned int *)v70, __p);
    int v41 = __p[23];
    std::string::size_type v42 = *(_BYTE **)__p;
    sub_100832C64(a3, &v73);
    uint64_t v43 = __p;
    if (v41 < 0) {
      uint64_t v43 = v42;
    }
    if ((v73.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v44 = &v73;
    }
    else {
      __int16 v44 = (std::stringbuf::string_type *)v73.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 67109890;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v31;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = v29;
    HIWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)v43;
    *(_WORD *)int v79 = 2080;
    *(void *)&v79[2] = v44;
    _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "CELL_LOC: found, %d, server, %d, cell, %s, location, %s",  (uint8_t *)&buf,  0x22u);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v46 = qword_101934A78;
    sub_1003D2324((unsigned int *)v70, &v73);
    int size = (char)v73.__r_.__value_.__s.__size_;
    std::string::size_type v48 = v73.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &v72);
    uint64_t v49 = &v73;
    if (size < 0) {
      uint64_t v49 = (std::stringbuf::string_type *)v48;
    }
    if ((v72.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v50 = &v72;
    }
    else {
      int v50 = (std::stringbuf::string_type *)v72.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type __p = 67109890;
    *(_DWORD *)&__p[4] = v31;
    *(_WORD *)&__p[8] = 1024;
    *(_DWORD *)&__p[10] = v29;
    *(_WORD *)&__p[14] = 2080;
    *(void *)&__p[16] = v49;
    *(_WORD *)&__p[24] = 2080;
    *(void *)&__p[26] = v50;
    std::string::size_type v51 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v46,  0LL,  "CELL_LOC: found, %d, server, %d, cell, %s, location, %s",  __p,  34,  (const char *)v66,  *((const char **)&v66 + 1));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_LTE(const CLTelephonyService_Type::LteCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v51);
    if (v51 != &buf) {
      free(v51);
    }
  }

  if (v69 < 0) {
    operator delete(v68[0]);
  }
  return v31;
}

void sub_1004AC81C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1004AC8AC(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  __int128 v5 = a2[3];
  v71[2] = a2[2];
  v71[3] = v5;
  __int128 v6 = a2[5];
  v71[4] = a2[4];
  v71[5] = v6;
  __int128 v7 = a2[1];
  v71[0] = *a2;
  v71[1] = v7;
  sub_1003D2C58((unsigned int *)v71, v69);
  *(void *)(a3 + 104) = 0LL;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0LL;
  *(void *)(a3 + 144) = 0LL;
  *(void *)(a3 + 128) = 0LL;
  *(_BYTE *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 12) = 0LL;
  *(void *)(a3 + 4) = 0LL;
  __int128 v67 = xmmword_1012E0070;
  *(_OWORD *)(a3 + 20) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  __int128 v68 = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000LL;
  *(void *)(a3 + 96) = 0LL;
  *(void *)(a3 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  uint64_t v13 = sub_1004A1A44(a1);
  BOOL v14 = sub_1005B2EBC(*(void *)(v13 + 32), (uint64_t)v71, a3);
  if (*(double *)(a3 + 20) > 0.0 && v14)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    __int128 v16 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      std::string::size_type v17 = v69;
      if (v70 < 0) {
        std::string::size_type v17 = (void **)v69[0];
      }
      std::string::size_type v18 = *(void *)(a3 + 4);
      uint64_t v19 = *(void *)(a3 + 12);
      uint64_t v20 = *(void *)(a3 + 20);
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315906;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v18;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
      *(void *)int v79 = v19;
      *(_WORD *)&v79[8] = 2048;
      *(void *)&v79[10] = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: found in DB (%s) loc (%lf %lf) acc (%lf)",  (uint8_t *)&buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10183C360);
      }
      uint64_t v53 = v69;
      if (v70 < 0) {
        uint64_t v53 = (void **)v69[0];
      }
      uint64_t v54 = *(void *)(a3 + 4);
      uint64_t v55 = *(void *)(a3 + 12);
      uint64_t v56 = *(void *)(a3 + 20);
      *(_DWORD *)std::stringbuf::string_type __p = 136315906;
      *(void *)&__p[4] = v53;
      *(_WORD *)&__p[12] = 2048;
      *(void *)&__p[14] = v54;
      *(_WORD *)&__p[22] = 2048;
      *(void *)&__p[24] = v55;
      *(_WORD *)&__p[32] = 2048;
      *(void *)&__p[34] = v56;
      LODWORD(v66) = 42;
      int v57 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "CELL_LOC: found in DB (%s) loc (%lf %lf) acc (%lf)",  __p,  v66,  -1.0,  0.0);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_NR(const CLTelephonyService_Type::NrCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v57);
      if (v57 != &buf) {
        free(v57);
      }
    }

    *(void *)&__p[12] = 0LL;
    *(void *)&__p[4] = 0LL;
    *(_OWORD *)&__p[20] = v67;
    *(_OWORD *)&__p[36] = v68;
    *(_OWORD *)&__p[52] = v68;
    *(_OWORD *)&std::stringbuf::string_type __p[68] = v68;
    *(_DWORD *)std::stringbuf::string_type __p = 0xFFFF;
    *(_DWORD *)&__p[84] = 0;
    __int128 v75 = 0uLL;
    *(void *)&__p[88] = 0xBFF0000000000000LL;
    *(void *)((char *)&v76 + 4) = 0xBFF0000000000000LL;
    LODWORD(v76) = 0;
    HIDWORD(v76) = 0x7FFFFFFF;
    memset(v77, 0, 25);
    uint64_t v21 = sub_1004A19DC(a1);
    BOOL v22 = sub_1005B2EBC(*(void *)(v21 + 32), (uint64_t)v71, (uint64_t)__p);
    if (*(double *)&__p[20] > 0.0 && v22)
    {
      sub_100D2DCA4((double *)(a1 + 624), a3, (uint64_t)__p);
      if (v24 >= *(double *)&__p[20] * 3.0)
      {
        sub_1003E56CC((unsigned int *)v71, &buf);
        sub_1004A5B38((uint64_t)&buf, a3, (uint64_t)__p);
        int v30 = 0;
      }

      else
      {
        uint64_t v25 = sub_1004A1A44(a1);
        sub_1005B3EC0(*(_BYTE **)(v25 + 32), (uint64_t)v71);
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
        buf.__r_.__value_.__l.__size_ = 3221225472LL;
        buf.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_1004A5AB8;
        *(void *)int v79 = &unk_101820718;
        *(void *)&v79[8] = off_1019382E8;
        AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", &buf);
        __int128 v26 = v76;
        *(_OWORD *)(a3 + 96) = v75;
        *(_OWORD *)(a3 + 112) = v26;
        *(_OWORD *)(a3 + 128) = *(_OWORD *)v77;
        *(_OWORD *)(a3 + 140) = *(_OWORD *)&v77[12];
        __int128 v27 = *(_OWORD *)&__p[48];
        *(_OWORD *)(a3 + 32) = *(_OWORD *)&__p[32];
        *(_OWORD *)(a3 + 48) = v27;
        __int128 v28 = *(_OWORD *)&__p[80];
        *(_OWORD *)(a3 + 64) = *(_OWORD *)&__p[64];
        *(_OWORD *)(a3 + 80) = v28;
        __int128 v29 = *(_OWORD *)&__p[16];
        int v30 = 1;
        *(_OWORD *)a3 = *(_OWORD *)__p;
        *(_OWORD *)(a3 + 16) = v29;
      }
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10183C360);
      }
      __int16 v38 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D2C58((unsigned int *)v71, &buf);
        uint64_t v39 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &buf
            : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        LODWORD(v73.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v73.__r_.__value_.__r.__words + 4) = (std::string::size_type)v39;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cell, %s, has local, but no remote - querying",  (uint8_t *)&v73,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10183C360);
        }
        uint64_t v63 = qword_101934858;
        sub_1003D2C58((unsigned int *)v71, &v73);
        if ((v73.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int16 v64 = &v73;
        }
        else {
          __int16 v64 = (std::stringbuf::string_type *)v73.__r_.__value_.__r.__words[0];
        }
        LODWORD(v72.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v72.__r_.__value_.__r.__words + 4) = (std::string::size_type)v64;
        double v65 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v63,  2LL,  "CELL_LOC: cell, %s, has local, but no remote - querying",  (const char *)&v72);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_NR(const CLTelephonyService_Type::NrCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v65);
        if (v65 != &buf) {
          free(v65);
        }
      }

      double Current = CFAbsoluteTimeGetCurrent();
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v71;
      int v30 = 0;
      *((double *)sub_1004C2554((uint64_t **)(a1 + 328), (uint64_t)v71, (uint64_t)&unk_1012CF090, &buf) + 16) = Current - 3600.0;
    }

    BOOL v32 = 1LL;
  }

  else
  {
    buf.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
    buf.__r_.__value_.__l.__size_ = 3221225472LL;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_1004A5AB8;
    *(void *)int v79 = &unk_101820718;
    *(void *)&v79[8] = off_1019382F8;
    AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", &buf);
    uint64_t v31 = sub_1004A19DC(a1);
    if (sub_1005B2EBC(*(void *)(v31 + 32), (uint64_t)v71, a3))
    {
      BOOL v32 = *(double *)(a3 + 20) > 0.0;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v33 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        std::string::size_type v34 = v69;
        if (v70 < 0) {
          std::string::size_type v34 = (void **)v69[0];
        }
        std::string::size_type v35 = *(void *)(a3 + 4);
        uint64_t v36 = *(void *)(a3 + 12);
        uint64_t v37 = *(void *)(a3 + 20);
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315907;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v34;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v35;
        HIWORD(buf.__r_.__value_.__r.__words[2]) = 2049;
        *(void *)int v79 = v36;
        *(_WORD *)&v79[8] = 2048;
        *(void *)&v79[10] = v37;
        _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: using nw (%s) loc (%{private}.6lf %{private}.6lf) acc (%.1lf)",  (uint8_t *)&buf,  0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v58 = v69;
        if (v70 < 0) {
          uint64_t v58 = (void **)v69[0];
        }
        uint64_t v59 = *(void *)(a3 + 4);
        uint64_t v60 = *(void *)(a3 + 12);
        uint64_t v61 = *(void *)(a3 + 20);
        *(_DWORD *)std::stringbuf::string_type __p = 136315907;
        *(void *)&__p[4] = v58;
        *(_WORD *)&__p[12] = 2049;
        *(void *)&__p[14] = v59;
        *(_WORD *)&__p[22] = 2049;
        *(void *)&__p[24] = v60;
        *(_WORD *)&__p[32] = 2048;
        *(void *)&__p[34] = v61;
        uint64_t v62 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: using nw (%s) loc (%{private}.6lf %{private}.6lf) acc (%.1lf)",  __p,  42);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_NR(const CLTelephonyService_Type::NrCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v62);
        if (v62 != &buf) {
          free(v62);
        }
      }

      int v30 = 1;
    }

    else
    {
      int v30 = 0;
      BOOL v32 = 0LL;
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  int v41 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    sub_1003D2C58((unsigned int *)v71, __p);
    int v42 = __p[23];
    uint64_t v43 = *(_BYTE **)__p;
    sub_100832C64(a3, &v73);
    __int16 v44 = __p;
    if (v42 < 0) {
      __int16 v44 = v43;
    }
    if ((v73.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v45 = &v73;
    }
    else {
      uint64_t v45 = (std::stringbuf::string_type *)v73.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 67109890;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v32;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 1024;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = v30;
    HIWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
    buf.__r_.__value_.__l.__cap_ = (std::string::size_type)v44;
    *(_WORD *)int v79 = 2080;
    *(void *)&v79[2] = v45;
    _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "CELL_LOC: found, %d, server, %d, cell, %s, location, %s",  (uint8_t *)&buf,  0x22u);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v47 = qword_101934858;
    sub_1003D2C58((unsigned int *)v71, &v73);
    int size = (char)v73.__r_.__value_.__s.__size_;
    std::string::size_type v49 = v73.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &v72);
    int v50 = &v73;
    if (size < 0) {
      int v50 = (std::stringbuf::string_type *)v49;
    }
    if ((v72.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v51 = &v72;
    }
    else {
      std::string::size_type v51 = (std::stringbuf::string_type *)v72.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type __p = 67109890;
    *(_DWORD *)&__p[4] = v32;
    *(_WORD *)&__p[8] = 1024;
    *(_DWORD *)&__p[10] = v30;
    *(_WORD *)&__p[14] = 2080;
    *(void *)&__p[16] = v50;
    *(_WORD *)&__p[24] = 2080;
    *(void *)&__p[26] = v51;
    uint64_t v52 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v47,  0LL,  "CELL_LOC: found, %d, server, %d, cell, %s, location, %s",  __p,  34,  (const char *)v67,  *((const char **)&v67 + 1));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_NR(const CLTelephonyService_Type::NrCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v52);
    if (v52 != &buf) {
      free(v52);
    }
  }

  if (v70 < 0) {
    operator delete(v69[0]);
  }
  return v32;
}

void sub_1004AD398( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1004AD428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v87 = *(_DWORD *)a2;
  __int128 v89 = 0LL;
  uint64_t v90 = 0LL;
  __int128 v88 = 0LL;
  sub_10001B72C( &v88,  *(const void **)(a2 + 8),  *(void *)(a2 + 16),  (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  __int128 v6 = *(_OWORD *)(a2 + 192);
  __int128 v7 = *(_OWORD *)(a2 + 208);
  __int128 v8 = *(_OWORD *)(a2 + 160);
  __int128 v100 = *(_OWORD *)(a2 + 176);
  __int128 v101 = v6;
  v102[0] = v7;
  *(_OWORD *)((char *)v102 + 12) = *(_OWORD *)(a2 + 220);
  __int128 v9 = *(_OWORD *)(a2 + 128);
  __int128 v10 = *(_OWORD *)(a2 + 144);
  __int128 v11 = *(_OWORD *)(a2 + 96);
  __int128 v96 = *(_OWORD *)(a2 + 112);
  __int128 v97 = v9;
  __int128 v98 = v10;
  __int128 v99 = v8;
  __int128 v12 = *(_OWORD *)(a2 + 80);
  __int128 v93 = *(_OWORD *)(a2 + 64);
  __int128 v94 = v12;
  __int128 v95 = v11;
  __int128 v13 = *(_OWORD *)(a2 + 48);
  __int128 v91 = *(_OWORD *)(a2 + 32);
  __int128 v92 = v13;
  if (*(char *)(a2 + 263) < 0)
  {
    sub_1010DD48C(&v103, *(void **)(a2 + 240), *(void *)(a2 + 248));
  }

  else
  {
    __int128 v103 = *(_OWORD *)(a2 + 240);
    uint64_t v104 = *(void *)(a2 + 256);
  }

  __int128 v14 = *(_OWORD *)(a2 + 408);
  __int128 v113 = *(_OWORD *)(a2 + 392);
  __int128 v114 = v14;
  __int128 v15 = *(_OWORD *)(a2 + 344);
  __int128 v109 = *(_OWORD *)(a2 + 328);
  __int128 v110 = v15;
  __int128 v16 = *(_OWORD *)(a2 + 376);
  __int128 v111 = *(_OWORD *)(a2 + 360);
  __int128 v112 = v16;
  __int128 v17 = *(_OWORD *)(a2 + 280);
  __int128 v105 = *(_OWORD *)(a2 + 264);
  __int128 v106 = v17;
  __int128 v18 = *(_OWORD *)(a2 + 312);
  __int128 v107 = *(_OWORD *)(a2 + 296);
  __int128 v108 = v18;
  int v115 = *(_DWORD *)(a2 + 424);
  sub_1004AE280((uint64_t)&v87);
  sub_1003D13B8((unsigned int *)&v87, v85);
  *(void *)(a3 + 104) = 0LL;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0LL;
  *(void *)(a3 + 144) = 0LL;
  *(void *)(a3 + 128) = 0LL;
  *(_BYTE *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 12) = 0LL;
  *(void *)(a3 + 4) = 0LL;
  __int128 v83 = xmmword_1012E0070;
  *(_OWORD *)(a3 + 20) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  __int128 v84 = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000LL;
  *(void *)(a3 + 96) = 0LL;
  *(void *)(a3 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  uint64_t v24 = sub_1004A18A8(a1);
  BOOL v25 = sub_1006CE8BC(*(void *)(v24 + 32), &v87, a3);
  if (*(double *)(a3 + 20) > 0.0 && v25)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v27 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      __int128 v28 = v85;
      if (v86 < 0) {
        __int128 v28 = (void **)v85[0];
      }
      std::string::size_type v29 = *(void *)(a3 + 4);
      uint64_t v30 = *(void *)(a3 + 12);
      uint64_t v31 = *(void *)(a3 + 20);
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315906;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v28;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v29;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
      *(void *)__int16 v123 = v30;
      *(_WORD *)&v123[8] = 2048;
      *(void *)&v123[10] = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: found in DB (%s) loc (%lf %lf) acc (%lf)",  (uint8_t *)&buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      char v69 = v85;
      if (v86 < 0) {
        char v69 = (void **)v85[0];
      }
      uint64_t v70 = *(void *)(a3 + 4);
      uint64_t v71 = *(void *)(a3 + 12);
      uint64_t v72 = *(void *)(a3 + 20);
      *(_DWORD *)std::stringbuf::string_type __p = 136315906;
      *(void *)&__p[4] = v69;
      *(_WORD *)&__p[12] = 2048;
      *(void *)&__p[14] = v70;
      *(_WORD *)&__p[22] = 2048;
      *(void *)&__p[24] = v71;
      *(_WORD *)&__p[32] = 2048;
      *(void *)&__p[34] = v72;
      LODWORD(v82) = 42;
      std::stringbuf::string_type v73 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: found in DB (%s) loc (%lf %lf) acc (%lf)",  __p,  v82,  -1.0,  0.0);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_CDMA(const CLTelephonyService_Type::CdmaCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v73);
      if (v73 != &buf) {
        free(v73);
      }
    }

    *(void *)&__p[12] = 0LL;
    *(void *)&__p[4] = 0LL;
    *(_OWORD *)&__p[20] = v83;
    *(_OWORD *)&__p[36] = v84;
    *(_OWORD *)&__p[52] = v84;
    *(_OWORD *)&std::stringbuf::string_type __p[68] = v84;
    *(_DWORD *)std::stringbuf::string_type __p = 0xFFFF;
    *(_DWORD *)&__p[84] = 0;
    *(void *)&__p[88] = 0xBFF0000000000000LL;
    __int128 v119 = 0uLL;
    *(void *)((char *)&v120 + 4) = 0xBFF0000000000000LL;
    LODWORD(v120) = 0;
    HIDWORD(v120) = 0x7FFFFFFF;
    memset(v121, 0, 25);
    uint64_t v32 = sub_1004A1844(a1);
    BOOL v33 = sub_1006CE8BC(*(void *)(v32 + 32), &v87, (uint64_t)__p);
    if (*(double *)&__p[20] > 0.0 && v33)
    {
      sub_100D2DCA4((double *)(a1 + 624), a3, (uint64_t)__p);
      if (v35 < *(double *)&__p[20] * 3.0)
      {
        uint64_t v36 = sub_1004A18A8(a1);
        sub_1006CF70C(*(_BYTE **)(v36 + 32), &v87);
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
        buf.__r_.__value_.__l.__size_ = 3221225472LL;
        buf.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_1004A5AB8;
        *(void *)__int16 v123 = &unk_101820718;
        *(void *)&v123[8] = off_1019382E8;
        AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", &buf);
        __int128 v37 = v120;
        *(_OWORD *)(a3 + 96) = v119;
        *(_OWORD *)(a3 + 112) = v37;
        *(_OWORD *)(a3 + 128) = *(_OWORD *)v121;
        *(_OWORD *)(a3 + 140) = *(_OWORD *)&v121[12];
        __int128 v38 = *(_OWORD *)&__p[48];
        *(_OWORD *)(a3 + 32) = *(_OWORD *)&__p[32];
        *(_OWORD *)(a3 + 48) = v38;
        __int128 v39 = *(_OWORD *)&__p[80];
        *(_OWORD *)(a3 + 64) = *(_OWORD *)&__p[64];
        *(_OWORD *)(a3 + 80) = v39;
        __int128 v40 = *(_OWORD *)&__p[16];
        int v41 = 1;
        *(_OWORD *)a3 = *(_OWORD *)__p;
        *(_OWORD *)(a3 + 16) = v40;
LABEL_64:
        BOOL v43 = 1LL;
        goto LABEL_65;
      }

      sub_1003E411C((uint64_t)&v87, &buf);
      sub_1004A5B38((uint64_t)&buf, a3, (uint64_t)__p);
    }

    else
    {
      if ((v92 & 0x80000000) != 0 && (DWORD1(v92) & 0x80000000) != 0)
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        std::string::size_type v49 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          sub_1003D13B8((unsigned int *)&v87, &buf);
          int v50 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
              ? &buf
              : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          LODWORD(v117.__r_.__value_.__l.__data_) = 136315138;
          *(std::string::size_type *)((char *)v117.__r_.__value_.__r.__words + 4) = (std::string::size_type)v50;
          _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cell, %s, has local, but no remote -  pending query",  (uint8_t *)&v117,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_10183C380);
          }
          uint64_t v79 = qword_101934A78;
          sub_1003D13B8((unsigned int *)&v87, &v117);
          if ((v117.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            __int16 v80 = &v117;
          }
          else {
            __int16 v80 = (std::stringbuf::string_type *)v117.__r_.__value_.__r.__words[0];
          }
          LODWORD(v116.__r_.__value_.__l.__data_) = 136315138;
          *(std::string::size_type *)((char *)v116.__r_.__value_.__r.__words + 4) = (std::string::size_type)v80;
          __int16 v81 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v79,  2LL,  "CELL_LOC: cell, %s, has local, but no remote -  pending query",  (const char *)&v116);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_CDMA(const CLTelephonyService_Type::CdmaCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v81);
          if (v81 != &buf) {
            free(v81);
          }
        }

        double Current = CFAbsoluteTimeGetCurrent();
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v87;
        int v41 = 0;
        *((double *)sub_1004C1E94((uint64_t **)(a1 + 248), (uint64_t)&v87, (uint64_t)&unk_1012CF090, (uint64_t *)&buf) + 58) = Current - 3600.0;
        goto LABEL_64;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v52 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D13B8((unsigned int *)&v87, &buf);
        uint64_t v53 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &buf
            : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        LODWORD(v117.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v117.__r_.__value_.__r.__words + 4) = (std::string::size_type)v53;
        _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cell, %s, has local, but no remote - not querying, server doesn't server these",  (uint8_t *)&v117,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v54 = qword_101934A78;
        sub_1003D13B8((unsigned int *)&v87, &v117);
        if ((v117.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v55 = &v117;
        }
        else {
          uint64_t v55 = (std::stringbuf::string_type *)v117.__r_.__value_.__r.__words[0];
        }
        LODWORD(v116.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)v116.__r_.__value_.__r.__words + 4) = (std::string::size_type)v55;
        uint64_t v56 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v54,  2LL,  "CELL_LOC: cell, %s, has local, but no remote - not querying, server doesn't server these",  (const char *)&v116);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_CDMA(const CLTelephonyService_Type::CdmaCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v56);
        if (v56 != &buf) {
          free(v56);
        }
      }
    }

    int v41 = 0;
    goto LABEL_64;
  }

  buf.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
  buf.__r_.__value_.__l.__size_ = 3221225472LL;
  buf.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_1004A5AB8;
  *(void *)__int16 v123 = &unk_101820718;
  *(void *)&v123[8] = off_1019382F8;
  AnalyticsSendEventLazy(@"com.apple.clx.cellloc.integrityCrosscheck", &buf);
  uint64_t v42 = sub_1004A1844(a1);
  if (sub_1006CE8BC(*(void *)(v42 + 32), &v87, a3))
  {
    BOOL v43 = *(double *)(a3 + 20) > 0.0;
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int16 v44 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v45 = v85;
      if (v86 < 0) {
        uint64_t v45 = (void **)v85[0];
      }
      std::string::size_type v46 = *(void *)(a3 + 4);
      uint64_t v47 = *(void *)(a3 + 12);
      uint64_t v48 = *(void *)(a3 + 20);
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315907;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v45;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v46;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2049;
      *(void *)__int16 v123 = v47;
      *(_WORD *)&v123[8] = 2048;
      *(void *)&v123[10] = v48;
      _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: using nw (%s) loc (%{private}.6lf %{private}.6lf) acc (%.1lf)",  (uint8_t *)&buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      __int128 v74 = v85;
      if (v86 < 0) {
        __int128 v74 = (void **)v85[0];
      }
      uint64_t v75 = *(void *)(a3 + 4);
      uint64_t v76 = *(void *)(a3 + 12);
      uint64_t v77 = *(void *)(a3 + 20);
      *(_DWORD *)std::stringbuf::string_type __p = 136315907;
      *(void *)&__p[4] = v74;
      *(_WORD *)&__p[12] = 2049;
      *(void *)&__p[14] = v75;
      *(_WORD *)&__p[22] = 2049;
      *(void *)&__p[24] = v76;
      *(_WORD *)&__p[32] = 2048;
      *(void *)&__p[34] = v77;
      int v78 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: using nw (%s) loc (%{private}.6lf %{private}.6lf) acc (%.1lf)",  __p,  42);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLNetworkLocationProvider::getLocation_CDMA(const CLTelephonyService_Type::CdmaCell &, CLDaemonLocation &)",  "%s\n",  (const char *)v78);
      if (v78 != &buf) {
        free(v78);
      }
    }

    int v41 = 1;
  }

  else
  {
    int v41 = 0;
    BOOL v43 = 0LL;
  }

void sub_1004AE1B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, ...)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1003E426C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1004AE280(uint64_t a1)
{
  unsigned int v1 = *(_DWORD **)(a1 + 8);
  unint64_t v2 = *(void *)(a1 + 16) - (void)v1;
  if (v2)
  {
    *(_DWORD *)a1 = *v1;
    if (v2 >= 5)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      double v4 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        __int128 v5 = *(int **)(a1 + 8);
        int v6 = *v5;
        LODWORD(v5) = v5[1];
        *(_DWORD *)std::stringbuf::string_type buf = 67109376;
        int v14 = v6;
        __int16 v15 = 1024;
        int v16 = (int)v5;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#Warning ignoring second MCC %d %d",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        __int128 v7 = *(int **)(a1 + 8);
        int v8 = *v7;
        LODWORD(v7) = v7[1];
        v10[0] = 67109376;
        v10[1] = v8;
        __int16 v11 = 1024;
        int v12 = (int)v7;
        __int128 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning ignoring second MCC %d %d",  v10,  14);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTelephonyService_Type::CdmaCell::applyDerivedMcc()", "%s\n", v9);
      }
    }
  }

uint64_t sub_1004AE46C( uint64_t a1, void *a2, void *a3, uint64_t *a4, void *a5, void *a6, uint64_t **a7, int a8, unsigned __int8 a9, uint64_t a10)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  __int16 v15 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v16 = (uint64_t)(a2[1] - *a2) >> 5;
    uint64_t v17 = (uint64_t)(a3[1] - *a3) >> 5;
    unint64_t v18 = 0x84BDA12F684BDA13LL * ((a4[1] - *a4) >> 4);
    uint64_t v19 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(a5[1] - *a5) >> 3);
    unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5);
    uint64_t v21 = a7[1] - *a7;
    *(_DWORD *)std::stringbuf::string_type buf = 134350848;
    *(void *)&uint8_t buf[4] = v16;
    *(_WORD *)&buf[12] = 2050;
    *(void *)&buf[14] = v17;
    *(_WORD *)&_BYTE buf[22] = 2050;
    *(void *)&buf[24] = v18;
    *(_WORD *)&buf[32] = 2050;
    *(void *)&buf[34] = v19;
    *(_WORD *)&buf[42] = 2050;
    *(void *)&buf[44] = v20;
    *(_WORD *)&buf[52] = 2050;
    *(void *)&buf[54] = v21;
    *(_WORD *)&buf[62] = 1026;
    *(_DWORD *)&buf[64] = a8;
    __int16 v483 = 1026;
    int v484 = a9;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "@AlsFlow, query, in, cells, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, wifi, %{public}lu, ca che, %{public}d, piggyback, %{public}d\n",  buf,  0x4Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v394 = (uint64_t)(a2[1] - *a2) >> 5;
    uint64_t v395 = (uint64_t)(a3[1] - *a3) >> 5;
    unint64_t v396 = 0x84BDA12F684BDA13LL * ((a4[1] - *a4) >> 4);
    uint64_t v397 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(a5[1] - *a5) >> 3);
    unint64_t v398 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5);
    uint64_t v399 = a7[1] - *a7;
    *(_DWORD *)v459 = 134350848;
    *(void *)&v459[4] = v394;
    *(_WORD *)&v459[12] = 2050;
    *(void *)&v459[14] = v395;
    *(_WORD *)&v459[22] = 2050;
    *(void *)&v459[24] = v396;
    *(_WORD *)&v459[32] = 2050;
    *(void *)&v459[34] = v397;
    *(_WORD *)&v459[42] = 2050;
    *(void *)&v459[44] = v398;
    *(_WORD *)&v459[52] = 2050;
    *(void *)&v459[54] = v399;
    *(_WORD *)&v459[62] = 1026;
    *(_DWORD *)&v459[64] = a8;
    *(_WORD *)&v459[68] = 1026;
    *(_DWORD *)&v459[70] = a9;
    v400 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@AlsFlow, query, in, cells, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, wifi, %{public}lu, cache, %{public}d, piggyback, %{public}d\n",  v459,  74);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vecto r<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector <CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMa cAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v400);
    if (v400 != buf) {
      free(v400);
    }
  }

  if (*(_BYTE *)(a1 + 456))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    BOOL v22 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "@AlsFlow, query, skip, private", buf, 2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    *(_WORD *)v459 = 0;
    LODWORD(v416) = 2;
    double v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@AlsFlow, query, skip, private",  v459,  v416);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vecto r<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector <CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMa cAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v23);
LABEL_662:
    if (v23 != buf) {
      free(v23);
    }
    return 0xFFFFFFFFLL;
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) != 1)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    std::stringbuf::string_type v73 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v73, OS_LOG_TYPE_DEFAULT, "@AlsFlow, query, skip, bigswitch", buf, 2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    *(_WORD *)v459 = 0;
    LODWORD(v416) = 2;
    double v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@AlsFlow, query, skip, bigswitch",  v459,  v416);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vecto r<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector <CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMa cAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v23);
    goto LABEL_662;
  }

  if (!*(_DWORD *)(a1 + 608) && !*(_BYTE *)(a1 + 440))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    v393 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v393,  OS_LOG_TYPE_DEFAULT,  "@AlsFlow, query, skip, connectivity",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    *(_WORD *)v459 = 0;
    LODWORD(v416) = 2;
    double v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@AlsFlow, query, skip, connectivity",  v459,  v416);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vecto r<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector <CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMa cAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v23);
    goto LABEL_662;
  }

  int v431 = 0xFFFF;
  uint64_t v432 = 0LL;
  uint64_t v433 = 0LL;
  __int128 v434 = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v435 = _Q0;
  __int128 v436 = _Q0;
  __int128 v437 = _Q0;
  uint64_t v440 = 0LL;
  uint64_t v441 = 0LL;
  unint64_t v439 = 0xBFF0000000000000LL;
  int v438 = 0;
  int v442 = 0;
  unint64_t v443 = 0xBFF0000000000000LL;
  int v444 = 0x7FFFFFFF;
  uint64_t v446 = 0LL;
  uint64_t v447 = 0LL;
  uint64_t v445 = 0LL;
  char v448 = 0;
  double Current = CFAbsoluteTimeGetCurrent();
  double v418 = *(double *)&a3;
  v419 = a7;
  HIDWORD(v417) = a9;
  uint64_t v421 = a1;
  uint64_t v428 = 0LL;
  unint64_t v429 = 0LL;
  unint64_t v430 = 0LL;
  uint64_t v30 = *a4;
  if (a4[1] != *a4)
  {
    uint64_t v31 = 0LL;
    v420 = (uint64_t **)(a1 + 248);
    unsigned int v32 = 1;
    while (1)
    {
      uint64_t v33 = v30 + 432 * v31;
      *(_DWORD *)v459 = *(_DWORD *)v33;
      memset(&v459[8], 0, 24);
      sub_10001B72C( &v459[8],  *(const void **)(v33 + 8),  *(void *)(v33 + 16),  (uint64_t)(*(void *)(v33 + 16) - *(void *)(v33 + 8)) >> 2);
      *(_OWORD *)&v459[32] = *(_OWORD *)(v33 + 32);
      __int128 v34 = *(_OWORD *)(v33 + 48);
      __int128 v35 = *(_OWORD *)(v33 + 64);
      __int128 v36 = *(_OWORD *)(v33 + 96);
      __int128 v460 = *(_OWORD *)(v33 + 80);
      __int128 v461 = v36;
      *(_OWORD *)&v459[48] = v34;
      *(_OWORD *)&v459[64] = v35;
      __int128 v37 = *(_OWORD *)(v33 + 112);
      __int128 v38 = *(_OWORD *)(v33 + 128);
      __int128 v39 = *(_OWORD *)(v33 + 160);
      __int128 v464 = *(_OWORD *)(v33 + 144);
      __int128 v465 = v39;
      __int128 v462 = v37;
      __int128 v463 = v38;
      __int128 v40 = *(_OWORD *)(v33 + 176);
      __int128 v41 = *(_OWORD *)(v33 + 192);
      __int128 v42 = *(_OWORD *)(v33 + 208);
      *(_OWORD *)((char *)v468 + 12) = *(_OWORD *)(v33 + 220);
      __int128 v467 = v41;
      v468[0] = v42;
      __int128 v466 = v40;
      BOOL v43 = (void **)(v33 + 240);
      if (*(char *)(v33 + 263) < 0)
      {
        sub_1010DD48C(&v469, *v43, *(void *)(v30 + 432 * v31 + 248));
      }

      else
      {
        __int128 v44 = *(_OWORD *)v43;
        uint64_t v470 = *(void *)(v33 + 256);
        __int128 v469 = v44;
      }

      uint64_t v45 = v30 + 432 * v31;
      __int128 v46 = *(_OWORD *)(v45 + 264);
      __int128 v47 = *(_OWORD *)(v45 + 296);
      __int128 v472 = *(_OWORD *)(v45 + 280);
      __int128 v473 = v47;
      __int128 v471 = v46;
      __int128 v48 = *(_OWORD *)(v45 + 312);
      __int128 v49 = *(_OWORD *)(v45 + 328);
      __int128 v50 = *(_OWORD *)(v45 + 360);
      __int128 v476 = *(_OWORD *)(v45 + 344);
      __int128 v477 = v50;
      __int128 v474 = v48;
      __int128 v475 = v49;
      __int128 v51 = *(_OWORD *)(v45 + 376);
      __int128 v52 = *(_OWORD *)(v45 + 392);
      __int128 v53 = *(_OWORD *)(v45 + 408);
      int v481 = *(_DWORD *)(v45 + 424);
      __int128 v479 = v52;
      __int128 v480 = v53;
      __int128 v478 = v51;
      sub_1004AE280((uint64_t)v459);
      sub_1003D13B8((unsigned int *)v459, &__p);
      if (!a8)
      {
LABEL_54:
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        double v66 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          p_p = &__p;
          if (SHIBYTE(v458) < 0) {
            p_p = (__int128 *)__p;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315138;
          *(void *)&uint8_t buf[4] = p_p;
          _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cdma cell, %s, re-querying",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_10183C380);
          }
          uint64_t v71 = &__p;
          if (SHIBYTE(v458) < 0) {
            uint64_t v71 = (__int128 *)__p;
          }
          LODWORD(v455[0]) = 136315138;
          *(void **)((char *)v455 + 4) = v71;
          uint64_t v72 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: cdma cell, %s, re-querying",  (const char *)v455);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std: :vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, cons t std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v72);
          if (v72 != buf) {
            free(v72);
          }
        }

        v455[0] = v459;
        *((double *)sub_1004C1E94(v420, (uint64_t)v459, (uint64_t)&unk_1012CF090, (uint64_t *)v455) + 58) = Current;
        unint64_t v68 = v429;
        if (v429 >= v430)
        {
          uint64_t v69 = sub_1004C2760(&v428, (uint64_t)v459);
        }

        else
        {
          sub_1004C2884((uint64_t)&v430, v429, (uint64_t)v459);
          uint64_t v69 = v68 + 432;
        }

        unint64_t v429 = v69;
        goto LABEL_65;
      }

      uint64_t v54 = sub_1004A1844(a1);
      if (sub_1006CE8BC(*(void *)(v54 + 32), (int *)v459, (uint64_t)&v431)
        && Current - *((double *)&v437 + 1) < 28800.0)
      {
        break;
      }

      uint64_t v59 = (double *)sub_1004C26E8((uint64_t)v420, (uint64_t)v459);
      uint64_t v60 = v59;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v61 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v62 = &__p;
        if (SHIBYTE(v458) < 0) {
          uint64_t v62 = (__int128 *)__p;
        }
        double v63 = Current - v60[58];
        *(_DWORD *)std::stringbuf::string_type buf = 136315650;
        *(void *)&uint8_t buf[4] = v62;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v63;
        *(_WORD *)&_BYTE buf[22] = 2048;
        *(void *)&buf[24] = 0x40AC200000000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: cdma cell, %s, last queried %.3f ago (%.3fs minimum), not re-querying",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        __int16 v64 = &__p;
        if (SHIBYTE(v458) < 0) {
          __int16 v64 = (__int128 *)__p;
        }
        double v65 = Current - v60[58];
        LODWORD(v455[0]) = 136315650;
        *(void **)((char *)v455 + 4) = v64;
        WORD2(v455[1]) = 2048;
        *(void **)((char *)&v455[1] + 6) = *(void **)&v65;
        HIWORD(v455[2]) = 2048;
        uint64_t v456 = 0x40AC200000000000LL;
        LODWORD(v417) = 32;
        int v58 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: cdma cell, %s, last queried %.3f ago (%.3fs minimum), not re-querying",  (const char *)v455,  v417,  v418);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::v ector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std ::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std: :vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v58);
LABEL_52:
        if (v58 != buf) {
          free(v58);
        }
      }

LABEL_161:
  __int128 __p = 0uLL;
  v458 = 0LL;
  if (*(void *)(*(void *)&v76 + 8LL) != **(void **)&v76)
  {
    uint64_t v113 = 0LL;
    unsigned int v114 = 0;
    while (1)
    {
      if (!a8)
      {
LABEL_199:
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        unint64_t v129 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          sub_1003D1A48((unsigned int *)(**(void **)&v76 + 32 * v113), buf);
          v130 = buf;
          if (buf[23] < 0) {
            v130 = *(_BYTE **)buf;
          }
          *(_DWORD *)v459 = 136315138;
          *(void *)&v459[4] = v130;
          _os_log_impl( (void *)&_mh_execute_header,  v129,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: scdma cell, %s, re-querying",  v459,  0xCu);
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_10183C380);
          }
          uint64_t v146 = qword_101934A78;
          sub_1003D1A48((unsigned int *)(**(void **)&v76 + 32 * v113), v459);
          __int128 v147 = v459;
          if (v459[23] < 0) {
            __int128 v147 = *(_BYTE **)v459;
          }
          LODWORD(v453) = 136315138;
          *(void *)((char *)&v453 + 4) = v147;
          __int128 v148 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v146,  2LL,  "CELL_LOC: scdma cell, %s, re-querying",  (const char *)&v453);
          if ((v459[23] & 0x80000000) != 0) {
            operator delete(*(void **)v459);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std: :vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, cons t std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v148);
          if (v148 != buf) {
            free(v148);
          }
        }

        *(void *)v459 = **(void **)&v76 + 32 * v113;
        v131 = (_OWORD *)(**(void **)&v76 + 32 * v113);
        uint64_t v132 = (_OWORD *)*((void *)&__p + 1);
        if (*((void *)&__p + 1) >= (unint64_t)v458)
        {
          v135 = (_OWORD *)__p;
          uint64_t v136 = (uint64_t)(*((void *)&__p + 1) - __p) >> 5;
          unint64_t v137 = v136 + 1;
          uint64_t v138 = (uint64_t)&v458[-__p];
          else {
            unint64_t v139 = v137;
          }
          if (v139)
          {
            uint64_t v140 = (char *)sub_10000835C((uint64_t)&v458, v139);
            uint64_t v132 = (_OWORD *)*((void *)&__p + 1);
            v135 = (_OWORD *)__p;
          }

          else
          {
            uint64_t v140 = 0LL;
          }

          __int128 v141 = v131[1];
          uint64_t v142 = &v140[32 * v136];
          *(_OWORD *)uint64_t v142 = *v131;
          *((_OWORD *)v142 + 1) = v141;
          if (v132 == v135)
          {
            v145 = &v140[32 * v136];
          }

          else
          {
            v143 = &v140[32 * v136];
            do
            {
              __int128 v144 = *(v132 - 1);
              v145 = v143 - 32;
              *((_OWORD *)v143 - 2) = *(v132 - 2);
              *((_OWORD *)v143 - 1) = v144;
              v132 -= 2;
              v143 -= 32;
            }

            while (v132 != v135);
          }

          v134 = v142 + 32;
          *(void *)&__int128 __p = v145;
          *((void *)&__p + 1) = v142 + 32;
          v458 = &v140[32 * v139];
          if (v135) {
            operator delete(v135);
          }
        }

        else
        {
          __int128 v133 = v131[1];
          **((_OWORD **)&__p + 1) = *v131;
          v132[1] = v133;
          v134 = v132 + 2;
        }

        *((void *)&__p + 1) = v134;
        goto LABEL_226;
      }

      uint64_t v115 = sub_1004A16B4(v421);
      if (sub_10047E7E4(*(void *)(v115 + 32), **(void **)&v76 + 32 * v113, (uint64_t)&v431))
      {
      }

      uint64_t v121 = sub_1004C2CAC(v421 + 208, (_DWORD *)(**(void **)&v76 + 32 * v113));
      uint64_t v122 = v121;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      __int16 v123 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D1A48((unsigned int *)(**(void **)&v76 + 32 * v113), v459);
        uint64_t v124 = v459;
        if (v459[23] < 0) {
          uint64_t v124 = *(_BYTE **)v459;
        }
        double v125 = Current - *(double *)(v122 + 64);
        *(_DWORD *)std::stringbuf::string_type buf = 136315650;
        *(void *)&uint8_t buf[4] = v124;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v125;
        *(_WORD *)&_BYTE buf[22] = 2048;
        *(void *)&buf[24] = 0x40AC200000000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v123,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: scdma cell, %s, last queried %.3f ago (%.3fs minimum), not re-querying",  buf,  0x20u);
        if ((v459[23] & 0x80000000) != 0) {
          operator delete(*(void **)v459);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v126 = qword_101934A78;
        sub_1003D1A48((unsigned int *)(**(void **)&v76 + 32 * v113), &v453);
        v127 = &v453;
        if (SHIBYTE(v454) < 0) {
          v127 = (__int128 *)v453;
        }
        double v128 = Current - *(double *)(v122 + 64);
        *(_DWORD *)v459 = 136315650;
        *(void *)&v459[4] = v127;
        *(_WORD *)&v459[12] = 2048;
        *(double *)&v459[14] = v128;
        *(_WORD *)&v459[22] = 2048;
        *(void *)&v459[24] = 0x40AC200000000000LL;
        LODWORD(v417) = 32;
        __int128 v120 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v126,  2LL,  "CELL_LOC: scdma cell, %s, last queried %.3f ago (%.3fs minimum), not re-querying",  v459,  v417,  v418);
        if (SHIBYTE(v454) < 0) {
          operator delete((void *)v453);
        }
LABEL_197:
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::v ector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std ::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std: :vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v120);
        if (v120 != buf) {
          free(v120);
        }
      }

  if (!HIBYTE(v3)) {
    goto LABEL_205;
  }
  if ((v3 & 0x1000000) != 0)
  {
    __int128 v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 104);
    if (v53 >= 0x80)
    {
      uint64_t v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53, a2);
      uint64_t v3 = *(_DWORD *)(a1 + 148);
    }

    else
    {
      uint64_t v54 = 1;
    }

    double v4 = (v4 + v54 + 2);
    if ((v3 & 0x2000000) == 0)
    {
LABEL_164:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_165;
      }
      goto LABEL_179;
    }
  }

  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_164;
  }

  uint64_t v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 108);
  if (v55 >= 0x80)
  {
    uint64_t v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 148);
  }

  else
  {
    uint64_t v56 = 1;
  }

  double v4 = (v4 + v56 + 2);
  if ((v3 & 0x4000000) == 0)
  {
LABEL_165:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_166;
    }
    goto LABEL_183;
  }

          dispatch_once(&qword_101934A70, &stru_101884558);
          goto LABEL_107;
        }

        if (*(void *)(a1 + 208) == a2)
        {
          uint64_t v110 = a1 + 184;
          __int128 v109 = 1;
          goto LABEL_23;
        }

        sub_101271D10();
      }

      __break(1u);
      goto LABEL_161;
    }

    uint64_t v17 = (uint64_t)(v10 + 4);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101884578);
    }
    unint64_t v18 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_FAULT, "Null pointer in fTilesToDownload", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101884578);
      }
      *(_WORD *)__int128 __p = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  17LL,  "Null pointer in fTilesToDownload",  __p,  2);
      __int16 v80 = (char *)v79;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWifiTilesManager::tileDecompressionCompleted(CLFileDownload *, BOOL, void *, CFAbsoluteTime)",  "%s\n",  v79);
      if (v80 != buf) {
        free(v80);
      }
    }

    sub_1000087E8((uint64_t **)(a1 + 128), v11);
    sub_1006035CC(v17);
    operator delete(v11);
    sub_100DF1154(a1, 1u, a4);
  }

  uint64_t result = *(float *)(a2 + 216);
  v5 |= 0x8000000000000uLL;
  CFStringRef v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 216) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  double v4 = *v3;
  if ((*v3 & 0x100000000000000LL) == 0)
  {
LABEL_81:
    if ((v4 & 0x80000000000000LL) == 0) {
      goto LABEL_82;
    }
    goto LABEL_163;
  }

  PB::TextFormatter::format(this, "shortAudioMaxPulseThreshold", *(float *)(a1 + 276));
  __int128 v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  int v6 = *v5;
  if ((v7 & 0x40000) == 0)
  {
LABEL_80:
    if ((v7 & 8) == 0) {
      goto LABEL_81;
    }
    goto LABEL_163;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 216), 0x10Fu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  __int128 v5 = *v4;
  if ((*v4 & 0x100000000000000LL) == 0)
  {
LABEL_81:
    if ((v5 & 0x80000000000000LL) == 0) {
      goto LABEL_82;
    }
    goto LABEL_163;
  }

  __int128 v50 = *(_BYTE *)(a2 + 351);
  v6 |= 0x10000000000uLL;
  CFStringRef v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_BYTE *)(a1 + 351) = v50;
  double v4 = *v3;
  __int128 v7 = *(void *)(a2 + 364);
  if ((v7 & 0x20000000000LL) == 0)
  {
LABEL_56:
    if ((v7 & 0x100000000LL) == 0) {
      goto LABEL_57;
    }
    goto LABEL_163;
  }

  PB::TextFormatter::format(this, "numDeescalationMAP", *(_DWORD *)(a1 + 172));
  __int128 v7 = *v5;
  int v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x400000000LL) == 0)
  {
LABEL_60:
    if ((v7 & 0x800000000LL) == 0) {
      goto LABEL_61;
    }
    goto LABEL_163;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 351), 0x13Fu);
  __int128 v5 = *v4;
  int v6 = v4[1];
  if ((v6 & 0x20000000000LL) == 0)
  {
LABEL_56:
    if ((v6 & 0x100000000LL) == 0) {
      goto LABEL_57;
    }
    goto LABEL_163;
  }

  __int128 v97 = *(_BYTE *)(a2 + 172);
  v3 |= 0x2000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_BYTE *)(result + 172) = v97;
  unint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x20) == 0)
  {
LABEL_83:
    if ((v2 & 0x20000000000000LL) == 0) {
      goto LABEL_84;
    }
    goto LABEL_163;
  }

  PB::TextFormatter::format(this, "saturationMet2", *(_BYTE *)(a1 + 203));
  __int128 v5 = *(void *)(a1 + 204);
  if ((v5 & 1) == 0)
  {
LABEL_82:
    if ((v5 & 2) == 0) {
      goto LABEL_83;
    }
    goto LABEL_163;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 195), 0x4C3u);
  LOWORD(v5) = *(_WORD *)(v3 + 212);
  double v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000000000000LL) == 0)
  {
LABEL_83:
    if ((v4 & 0x1000000000000000LL) == 0) {
      goto LABEL_84;
    }
    goto LABEL_163;
  }

LABEL_226:
      uint64_t v113 = ++v114;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    std::stringbuf::string_type v116 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D1A48((unsigned int *)(**(void **)&v76 + 32 * v113), v459);
      std::stringbuf::string_type v117 = v459;
      if (v459[23] < 0) {
        std::stringbuf::string_type v117 = *(_BYTE **)v459;
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136315650;
      *(void *)&uint8_t buf[4] = v117;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = Current - *((double *)&v437 + 1);
      *(_WORD *)&_BYTE buf[22] = 2048;
      *(void *)&buf[24] = 0x40DC200000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v116,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: scdma cell, %s, last updated %.3f ago (%.3fs minimum), not re-querying",  buf,  0x20u);
      if ((v459[23] & 0x80000000) != 0) {
        operator delete(*(void **)v459);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_226;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v118 = qword_101934A78;
    sub_1003D1A48((unsigned int *)(**(void **)&v76 + 32 * v113), &v453);
    __int128 v119 = &v453;
    if (SHIBYTE(v454) < 0) {
      __int128 v119 = (__int128 *)v453;
    }
    *(_DWORD *)v459 = 136315650;
    *(void *)&v459[4] = v119;
    *(_WORD *)&v459[12] = 2048;
    *(double *)&v459[14] = Current - *((double *)&v437 + 1);
    *(_WORD *)&v459[22] = 2048;
    *(void *)&v459[24] = 0x40DC200000000000LL;
    LODWORD(v417) = 32;
    __int128 v120 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v118,  2LL,  "CELL_LOC: scdma cell, %s, last updated %.3f ago (%.3fs minimum), not re-querying",  v459,  v417,  v418);
    if (SHIBYTE(v454) < 0) {
      operator delete((void *)v453);
    }
    goto LABEL_197;
  }

  uint64_t v62 = *(void *)(v5 + 440);
  if (!v62) {
    uint64_t v62 = *(void *)(qword_1019A11B8 + 440);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7DB,  v62,  a2,  a4);
  __int128 v39 = *(_DWORD *)(v5 + 492);
  if ((v39 & 0x1000000) == 0)
  {
LABEL_155:
    if ((v39 & 0x2000000) == 0) {
      goto LABEL_156;
    }
    goto LABEL_232;
  }

          *(_DWORD *)(a1 + 104) = v48;
          goto LABEL_258;
        case 0xBu:
          *(_DWORD *)(a1 + 144) |= 0x4000u;
          __int128 v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v51);
          goto LABEL_257;
        case 0xCu:
          *(_DWORD *)(a1 + 144) |= 0x8000u;
          __int128 v52 = *((void *)this + 1);
          if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v52);
          goto LABEL_257;
        case 0xDu:
          *(_DWORD *)(a1 + 144) |= 0x10000u;
          __int128 v53 = *((void *)this + 1);
          if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v53);
          goto LABEL_257;
        case 0xEu:
          *(_DWORD *)(a1 + 144) |= 0x2000u;
          uint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v54);
          goto LABEL_257;
        case 0xFu:
          *(_DWORD *)(a1 + 144) |= 0x20000u;
          uint64_t v55 = *((void *)this + 1);
          uint64_t v56 = *((void *)this + 2);
          int v57 = *(void *)this;
          if (v55 <= 0xFFFFFFFFFFFFFFF5LL && v55 + 10 <= v56)
          {
            int v58 = 0;
            uint64_t v59 = 0;
            uint64_t v60 = 0LL;
            do
            {
              uint64_t v61 = v55 + 1;
              *((void *)this + 1) = v55 + 1;
              uint64_t v62 = *(_BYTE *)(v57 + v55);
              v60 |= (unint64_t)(v62 & 0x7F) << v58;
              if ((v62 & 0x80) == 0) {
                goto LABEL_229;
              }
              v58 += 7;
              uint64_t v55 = v61;
              unint64_t v20 = v59++ > 8;
            }

            while (!v20);
LABEL_171:
            LODWORD(v60) = 0;
            goto LABEL_229;
          }

          __int16 v123 = 0;
          uint64_t v124 = 0;
          uint64_t v60 = 0LL;
          if (v56 <= v55) {
            uint64_t v56 = *((void *)this + 1);
          }
          while (2)
          {
            if (v56 == v55)
            {
              LODWORD(v60) = 0;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              double v125 = v55 + 1;
              uint64_t v126 = *(_BYTE *)(v57 + v55);
              *((void *)this + 1) = v125;
              v60 |= (unint64_t)(v126 & 0x7F) << v123;
              if (v126 < 0)
              {
                v123 += 7;
                uint64_t v55 = v125;
                unint64_t v20 = v124++ > 8;
                if (v20) {
                  goto LABEL_171;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v60) = 0;
              }
            }

            break;
          }

        *(_DWORD *)(a1 + 176) = v69;
        goto LABEL_202;
      case 0x17u:
        *(_DWORD *)(a1 + 180) |= 0x400000u;
        uint64_t v72 = *((void *)this + 1);
        std::stringbuf::string_type v73 = *((void *)this + 2);
        uint64_t v74 = *(void *)this;
        if (v72 <= 0xFFFFFFFFFFFFFFF5LL && v72 + 10 <= v73)
        {
          uint64_t v75 = 0;
          double v76 = 0;
          uint64_t v77 = 0LL;
          do
          {
            unsigned int v78 = v72 + 1;
            *((void *)this + 1) = v72 + 1;
            uint64_t v79 = *(_BYTE *)(v74 + v72);
            v77 |= (unint64_t)(v79 & 0x7F) << v75;
            if ((v79 & 0x80) == 0) {
              goto LABEL_229;
            }
            v75 += 7;
            uint64_t v72 = v78;
            int v14 = v76++ > 8;
          }

          while (!v14);
LABEL_177:
          LODWORD(v77) = 0;
          goto LABEL_229;
        }

        double v125 = 0;
        uint64_t v126 = 0;
        uint64_t v77 = 0LL;
        if (v73 <= v72) {
          std::stringbuf::string_type v73 = *((void *)this + 1);
        }
        while (2)
        {
          if (v73 == v72)
          {
            LODWORD(v77) = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            v127 = v72 + 1;
            double v128 = *(_BYTE *)(v74 + v72);
            *((void *)this + 1) = v127;
            v77 |= (unint64_t)(v128 & 0x7F) << v125;
            if (v128 < 0)
            {
              v125 += 7;
              uint64_t v72 = v127;
              int v14 = v126++ > 8;
              if (v14) {
                goto LABEL_177;
              }
              continue;
            }

            if (*((_BYTE *)this + 24)) {
              LODWORD(v77) = 0;
            }
          }

          break;
        }

LABEL_236:
  __int128 v453 = 0uLL;
  v454 = 0LL;
  if (a5[1] != *a5)
  {
    uint64_t v149 = 0LL;
    unsigned int v150 = 0;
    while (1)
    {
      if (!a8)
      {
LABEL_274:
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        v165 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          sub_1003D2324((unsigned int *)(*a5 + 88 * v149), buf);
          v166 = buf;
          if (buf[23] < 0) {
            v166 = *(_BYTE **)buf;
          }
          *(_DWORD *)v459 = 136315138;
          *(void *)&v459[4] = v166;
          _os_log_impl( (void *)&_mh_execute_header,  v165,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: lte cell, %s, re-querying",  v459,  0xCu);
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_10183C380);
          }
          uint64_t v190 = qword_101934A78;
          sub_1003D2324((unsigned int *)(*a5 + 88 * v149), v459);
          v191 = v459;
          if (v459[23] < 0) {
            v191 = *(_BYTE **)v459;
          }
          LODWORD(v451) = 136315138;
          *(void *)((char *)&v451 + 4) = v191;
          v192 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v190,  2LL,  "CELL_LOC: lte cell, %s, re-querying",  (const char *)&v451);
          if ((v459[23] & 0x80000000) != 0) {
            operator delete(*(void **)v459);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std: :vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, cons t std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v192);
          if (v192 != buf) {
            free(v192);
          }
        }

        *(void *)v459 = *a5 + 88 * v149;
        uint64_t v167 = *a5 + 88 * v149;
        uint64_t v168 = *((void *)&v453 + 1);
        if (*((void *)&v453 + 1) >= (unint64_t)v454)
        {
          v174 = (void *)v453;
          uint64_t v175 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)&v453 + 1) - v453) >> 3);
          unint64_t v176 = v175 + 1;
          else {
            unint64_t v177 = v176;
          }
          if (v177)
          {
            v178 = (char *)sub_100023598((uint64_t)&v454, v177);
            uint64_t v168 = *((void *)&v453 + 1);
            v174 = (void *)v453;
          }

          else
          {
            v178 = 0LL;
          }

          v179 = &v178[88 * v175];
          __int128 v180 = *(_OWORD *)(v167 + 16);
          *(_OWORD *)v179 = *(_OWORD *)v167;
          *((_OWORD *)v179 + 1) = v180;
          __int128 v181 = *(_OWORD *)(v167 + 32);
          __int128 v182 = *(_OWORD *)(v167 + 48);
          __int128 v183 = *(_OWORD *)(v167 + 64);
          *((void *)v179 + 10) = *(void *)(v167 + 80);
          *((_OWORD *)v179 + 3) = v182;
          *((_OWORD *)v179 + 4) = v183;
          *((_OWORD *)v179 + 2) = v181;
          if ((void *)v168 == v174)
          {
            v189 = &v178[88 * v175];
          }

          else
          {
            v184 = &v178[88 * v175];
            do
            {
              __int128 v185 = *(_OWORD *)(v168 - 88);
              *(_OWORD *)(v184 - 72) = *(_OWORD *)(v168 - 72);
              *(_OWORD *)(v184 - 88) = v185;
              __int128 v186 = *(_OWORD *)(v168 - 56);
              __int128 v187 = *(_OWORD *)(v168 - 40);
              __int128 v188 = *(_OWORD *)(v168 - 24);
              v189 = v184 - 88;
              *((_DWORD *)v184 - 2) = *(_DWORD *)(v168 - 8);
              *(_OWORD *)(v184 - 24) = v188;
              *(_OWORD *)(v184 - 40) = v187;
              *(_OWORD *)(v184 - 56) = v186;
              v168 -= 88LL;
              v184 -= 88;
            }

            while ((void *)v168 != v174);
          }

          v173 = v179 + 88;
          *(void *)&__int128 v453 = v189;
          *((void *)&v453 + 1) = v179 + 88;
          v454 = &v178[88 * v177];
          if (v174) {
            operator delete(v174);
          }
        }

        else
        {
          __int128 v169 = *(_OWORD *)(v167 + 16);
          **((_OWORD **)&v453 + 1) = *(_OWORD *)v167;
          *(_OWORD *)(v168 + 16) = v169;
          __int128 v170 = *(_OWORD *)(v167 + 32);
          __int128 v171 = *(_OWORD *)(v167 + 48);
          __int128 v172 = *(_OWORD *)(v167 + 64);
          *(void *)(v168 + 80) = *(void *)(v167 + 80);
          *(_OWORD *)(v168 + 48) = v171;
          *(_OWORD *)(v168 + 64) = v172;
          *(_OWORD *)(v168 + 32) = v170;
          v173 = (char *)(v168 + 88);
        }

        *((void *)&v453 + 1) = v173;
        goto LABEL_301;
      }

      uint64_t v151 = sub_1004A190C(v421);
      if (sub_100A333D0(*(void *)(v151 + 32), *a5 + 88 * v149, (uint64_t)&v431)
        && Current - *((double *)&v437 + 1) < 28800.0)
      {
        break;
      }

      uint64_t v157 = sub_1004C2CAC(v421 + 288, (_DWORD *)(*a5 + 88 * v149));
      uint64_t v158 = v157;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      v159 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D2324((unsigned int *)(*a5 + 88 * v149), v459);
        v160 = v459;
        if (v459[23] < 0) {
          v160 = *(_BYTE **)v459;
        }
        double v161 = Current - *(double *)(v158 + 120);
        *(_DWORD *)std::stringbuf::string_type buf = 136315650;
        *(void *)&uint8_t buf[4] = v160;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v161;
        *(_WORD *)&_BYTE buf[22] = 2048;
        *(void *)&buf[24] = 0x40AC200000000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v159,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: lte cell, %s, last queried %.3f ago (%.3fs minimum), not re-querying",  buf,  0x20u);
        if ((v459[23] & 0x80000000) != 0) {
          operator delete(*(void **)v459);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        uint64_t v162 = qword_101934A78;
        sub_1003D2324((unsigned int *)(*a5 + 88 * v149), &v451);
        v163 = &v451;
        if (SHIBYTE(v452) < 0) {
          v163 = (__int128 *)v451;
        }
        double v164 = Current - *(double *)(v158 + 120);
        *(_DWORD *)v459 = 136315650;
        *(void *)&v459[4] = v163;
        *(_WORD *)&v459[12] = 2048;
        *(double *)&v459[14] = v164;
        *(_WORD *)&v459[22] = 2048;
        *(void *)&v459[24] = 0x40AC200000000000LL;
        LODWORD(v417) = 32;
        v156 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v162,  2LL,  "CELL_LOC: lte cell, %s, last queried %.3f ago (%.3fs minimum), not re-querying",  v459,  v417,  v418);
        if (SHIBYTE(v452) < 0) {
          operator delete((void *)v451);
        }
LABEL_272:
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::v ector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std ::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std: :vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v156);
        if (v156 != buf) {
          free(v156);
        }
      }

LABEL_311:
  __int128 v451 = 0uLL;
  v452 = 0LL;
  if (a6[1] != *a6)
  {
    uint64_t v193 = 0LL;
    unsigned int v194 = 0;
    v195 = (uint64_t **)(v421 + 328);
    while (1)
    {
      if (!a8)
      {
LABEL_349:
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10183C360);
        }
        v210 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1003D2C58((unsigned int *)(*a6 + 96 * v193), buf);
          v211 = buf;
          if (buf[23] < 0) {
            v211 = *(_BYTE **)buf;
          }
          *(_DWORD *)v459 = 136315138;
          *(void *)&v459[4] = v211;
          _os_log_impl( (void *)&_mh_execute_header,  v210,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: nr cell, %s, re-querying",  v459,  0xCu);
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_10183C360);
          }
          uint64_t v235 = qword_101934858;
          sub_1003D2C58((unsigned int *)(*a6 + 96 * v193), v459);
          v236 = v459;
          if (v459[23] < 0) {
            v236 = *(_BYTE **)v459;
          }
          LODWORD(v449) = 136315138;
          *(void *)((char *)&v449 + 4) = v236;
          v237 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v235,  2LL,  "CELL_LOC: nr cell, %s, re-querying",  (const char *)&v449);
          if ((v459[23] & 0x80000000) != 0) {
            operator delete(*(void **)v459);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std: :vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, cons t std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v237);
          if (v237 != buf) {
            free(v237);
          }
        }

        *(void *)v459 = *a6 + 96 * v193;
        *((double *)sub_1004C2554(v195, *(uint64_t *)v459, (uint64_t)&unk_1012CF090, (_OWORD **)v459) + 16) = Current;
        v212 = (_OWORD *)(*a6 + 96 * v193);
        v213 = (_OWORD *)*((void *)&v451 + 1);
        if (*((void *)&v451 + 1) >= (unint64_t)v452)
        {
          v219 = (_OWORD *)v451;
          unint64_t v220 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v451 + 1) - v451) >> 5);
          unint64_t v221 = v220 + 1;
          if (v220 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          else {
            unint64_t v222 = v221;
          }
          if (v222)
          {
            v223 = (char *)sub_1003F6AEC((uint64_t)&v452, v222);
            v213 = (_OWORD *)*((void *)&v451 + 1);
            v219 = (_OWORD *)v451;
          }

          else
          {
            v223 = 0LL;
          }

          v224 = &v223[96 * v220];
          __int128 v225 = v212[1];
          *(_OWORD *)v224 = *v212;
          *((_OWORD *)v224 + 1) = v225;
          __int128 v226 = v212[2];
          __int128 v227 = v212[3];
          __int128 v228 = v212[5];
          *((_OWORD *)v224 + 4) = v212[4];
          *((_OWORD *)v224 + 5) = v228;
          *((_OWORD *)v224 + 2) = v226;
          *((_OWORD *)v224 + 3) = v227;
          if (v213 == v219)
          {
            v234 = &v223[96 * v220];
          }

          else
          {
            v229 = &v223[96 * v220];
            do
            {
              __int128 v230 = *(v213 - 5);
              *((_OWORD *)v229 - 6) = *(v213 - 6);
              *((_OWORD *)v229 - 5) = v230;
              __int128 v231 = *(v213 - 4);
              __int128 v232 = *(v213 - 3);
              __int128 v233 = *(v213 - 2);
              v234 = v229 - 96;
              *(_OWORD *)(v229 - 20) = *(_OWORD *)((char *)v213 - 20);
              *((_OWORD *)v229 - 3) = v232;
              *((_OWORD *)v229 - 2) = v233;
              *((_OWORD *)v229 - 4) = v231;
              v213 -= 6;
              v229 -= 96;
            }

            while (v213 != v219);
          }

          v218 = v224 + 96;
          *(void *)&__int128 v451 = v234;
          *((void *)&v451 + 1) = v224 + 96;
          v452 = &v223[96 * v222];
          if (v219) {
            operator delete(v219);
          }
        }

        else
        {
          __int128 v214 = v212[1];
          **((_OWORD **)&v451 + 1) = *v212;
          v213[1] = v214;
          __int128 v215 = v212[2];
          __int128 v216 = v212[3];
          __int128 v217 = v212[5];
          v213[4] = v212[4];
          v213[5] = v217;
          v213[2] = v215;
          v213[3] = v216;
          v218 = v213 + 6;
        }

        *((void *)&v451 + 1) = v218;
        goto LABEL_376;
      }

      uint64_t v196 = sub_1004A19DC(v421);
      if (sub_1005B2EBC(*(void *)(v196 + 32), *a6 + 96 * v193, (uint64_t)&v431)
        && Current - *((double *)&v437 + 1) < 28800.0)
      {
        break;
      }

      v202 = (double *)sub_1004C2D24((uint64_t)v195, *a6 + 96 * v193);
      v203 = v202;
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10183C360);
      }
      v204 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D2C58((unsigned int *)(*a6 + 96 * v193), v459);
        v205 = v459;
        if (v459[23] < 0) {
          v205 = *(_BYTE **)v459;
        }
        double v206 = Current - v203[16];
        *(_DWORD *)std::stringbuf::string_type buf = 136315650;
        *(void *)&uint8_t buf[4] = v205;
        *(_WORD *)&buf[12] = 2048;
        *(double *)&buf[14] = v206;
        *(_WORD *)&_BYTE buf[22] = 2048;
        *(void *)&buf[24] = 0x40AC200000000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v204,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: nr cell, %s, last queried %.3f ago (%.3fs minimum), not re-querying",  buf,  0x20u);
        if ((v459[23] & 0x80000000) != 0) {
          operator delete(*(void **)v459);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10183C360);
        }
        uint64_t v207 = qword_101934858;
        sub_1003D2C58((unsigned int *)(*a6 + 96 * v193), &v449);
        v208 = &v449;
        if (SHIBYTE(v450) < 0) {
          v208 = (__int128 *)v449;
        }
        double v209 = Current - v203[16];
        *(_DWORD *)v459 = 136315650;
        *(void *)&v459[4] = v208;
        *(_WORD *)&v459[12] = 2048;
        *(double *)&v459[14] = v209;
        *(_WORD *)&v459[22] = 2048;
        *(void *)&v459[24] = 0x40AC200000000000LL;
        LODWORD(v417) = 32;
        v201 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v207,  2LL,  "CELL_LOC: nr cell, %s, last queried %.3f ago (%.3fs minimum), not re-querying",  v459,  v417,  v418);
        if (SHIBYTE(v450) < 0) {
          operator delete((void *)v449);
        }
LABEL_347:
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::v ector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std ::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std: :vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v201);
        if (v201 != buf) {
          free(v201);
        }
      }

                                              unint64_t v139 = (unsigned __int8 *)*((void *)this + 1);
                                              BOOL v22 = *((void *)this + 2);
                                              uint64_t v140 = *v139;
                                              if (v140 == 104)
                                              {
                                                double v23 = v139 + 1;
                                                *((void *)this + 1) = v23;
LABEL_316:
                                                if ((unint64_t)v23 >= v22 || (char)*v23 < 0)
                                                {
                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback( this,  v210);
                                                  if (!(_DWORD)result) {
                                                    return result;
                                                  }
                                                  __int128 v39 = (unsigned __int8 *)*((void *)this + 1);
                                                  BOOL v22 = *((void *)this + 2);
                                                }

                                                else
                                                {
                                                  os_log_s *v210 = *v23;
                                                  __int128 v39 = v23 + 1;
                                                  *((void *)this + 1) = v39;
                                                }

                                                *(_DWORD *)(a1 + 276) |= 0x1000u;
                                                if ((unint64_t)v39 < v22)
                                                {
                                                  __int128 v40 = *v39;
                                                  while (v40 == 112)
                                                  {
                                                    uint64_t v24 = (char *)(v39 + 1);
                                                    *((void *)this + 1) = v24;
LABEL_107:
                                                    if ((unint64_t)v24 >= v22 || *v24 < 0)
                                                    {
                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v224);
                                                      if (!(_DWORD)result) {
                                                        return result;
                                                      }
                                                      __int128 v28 = v224[0];
                                                    }

                                                    else
                                                    {
                                                      __int128 v28 = *v24;
                                                      *((void *)this + 1) = v24 + 1;
                                                    }

                                                    std::string::size_type v29 = *(_DWORD *)(a1 + 184);
                                                    if (v29 == *(_DWORD *)(a1 + 188))
                                                    {
                                                      sub_10004AAFC(v214, v29 + 1);
                                                      std::string::size_type v29 = *(_DWORD *)(a1 + 184);
                                                    }

                                                    uint64_t v30 = *(void *)(a1 + 176);
                                                    *(_DWORD *)(a1 + 184) = v29 + 1;
                                                    *(_DWORD *)(v30 + 4LL * v29) = v28;
                                                    uint64_t v31 = *(_DWORD *)(a1 + 188) - *(_DWORD *)(a1 + 184);
                                                    if (v31 >= 1)
                                                    {
                                                      unsigned int v32 = v31 + 1;
                                                      do
                                                      {
                                                        uint64_t v33 = (_BYTE *)*((void *)this + 1);
                                                        __int128 v34 = *((void *)this + 2);
                                                        *((void *)this + 1) = v33 + 1;
                                                        if ((unint64_t)(v33 + 1) >= v34 || (char)v33[1] < 0)
                                                        {
                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v224);
                                                          if (!(_DWORD)result) {
                                                            return result;
                                                          }
                                                          __int128 v35 = v224[0];
                                                        }

                                                        else
                                                        {
                                                          __int128 v35 = v33[1];
                                                          *((void *)this + 1) = v33 + 2;
                                                        }

                                                        __int128 v36 = *(_DWORD *)(a1 + 184);
                                                        if (v36 >= *(_DWORD *)(a1 + 188))
                                                        {
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v224,  3LL,  "/AppleInternal/Library/BuildRoots/9fd3fc02-a7db-11ef-98ff-a6 e88e557b55/Applications/Xcode.app/Contents/Developer/Platfor ms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal. sdk/usr/local/include/google/protobuf/repeated_field.h",  602LL);
                                                          __int128 v37 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v224,  "CHECK failed: (size()) < (Capacity()): ");
                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=( &v223,  v37);
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v224);
                                                          __int128 v36 = *(_DWORD *)(a1 + 184);
                                                        }

                                                        __int128 v38 = *(void *)(a1 + 176);
                                                        *(_DWORD *)(a1 + 184) = v36 + 1;
                                                        *(_DWORD *)(v38 + 4LL * v36) = v35;
                                                        --v32;
                                                      }

                                                      while (v32 > 1);
                                                    }

              *(void *)(a1 + 32) = v143;
              goto LABEL_279;
            case 205:
              *(void *)(a1 + 172) |= 0x10uLL;
              uint64_t v146 = *((void *)this + 1);
              if (v146 > 0xFFFFFFFFFFFFFFFBLL || v146 + 4 > *((void *)this + 2)) {
                goto LABEL_187;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v146);
              goto LABEL_278;
            case 206:
              *(void *)(a1 + 172) |= 0x20uLL;
              __int128 v147 = *((void *)this + 1);
              if (v147 > 0xFFFFFFFFFFFFFFFBLL || v147 + 4 > *((void *)this + 2)) {
                goto LABEL_187;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v147);
              goto LABEL_278;
            case 207:
              *(void *)(a1 + 172) |= 0x40uLL;
              __int128 v148 = *((void *)this + 1);
              if (v148 > 0xFFFFFFFFFFFFFFFBLL || v148 + 4 > *((void *)this + 2)) {
                goto LABEL_187;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v148);
              goto LABEL_278;
            case 208:
              *(void *)(a1 + 172) |= 0x80uLL;
              uint64_t v149 = *((void *)this + 1);
              if (v149 > 0xFFFFFFFFFFFFFFFBLL || v149 + 4 > *((void *)this + 2)) {
                goto LABEL_187;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v149);
              goto LABEL_278;
            case 209:
              *(void *)(a1 + 172) |= 1uLL;
              unsigned int v150 = *((void *)this + 1);
              uint64_t v151 = *((void *)this + 2);
              v152 = *(void *)this;
              if (v150 <= 0xFFFFFFFFFFFFFFF5LL && v150 + 10 <= v151)
              {
                v153 = 0;
                uint64_t v154 = 0;
                v155 = 0LL;
                do
                {
                  v156 = v150 + 1;
                  *((void *)this + 1) = v150 + 1;
                  uint64_t v157 = *(_BYTE *)(v152 + v150);
                  v155 |= (unint64_t)(v157 & 0x7F) << v153;
                  if ((v157 & 0x80) == 0) {
                    goto LABEL_315;
                  }
                  v153 += 7;
                  unsigned int v150 = v156;
                  int v14 = v154++ > 8;
                }

                while (!v14);
LABEL_269:
                v155 = 0LL;
                goto LABEL_315;
              }

              v198 = 0;
              uint64_t v199 = 0;
              v155 = 0LL;
              if (v151 <= v150) {
                uint64_t v151 = *((void *)this + 1);
              }
              while (2)
              {
                if (v151 == v150)
                {
                  v155 = 0LL;
                  *((_BYTE *)this + 24) = 1;
                }

                else
                {
                  v200 = v150 + 1;
                  v201 = *(_BYTE *)(v152 + v150);
                  *((void *)this + 1) = v200;
                  v155 |= (unint64_t)(v201 & 0x7F) << v198;
                  if (v201 < 0)
                  {
                    v198 += 7;
                    unsigned int v150 = v200;
                    int v14 = v199++ > 8;
                    if (v14) {
                      goto LABEL_269;
                    }
                    continue;
                  }

                  if (*((_BYTE *)this + 24)) {
                    v155 = 0LL;
                  }
                }

                break;
              }

LABEL_376:
      uint64_t v193 = ++v194;
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    v197 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_1003D2C58((unsigned int *)(*a6 + 96 * v193), v459);
      v198 = v459;
      if (v459[23] < 0) {
        v198 = *(_BYTE **)v459;
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136315650;
      *(void *)&uint8_t buf[4] = v198;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = Current - *((double *)&v437 + 1);
      *(_WORD *)&_BYTE buf[22] = 2048;
      *(void *)&buf[24] = 0x40DC200000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v197,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: nr cell, %s, last updated %.3f ago (%.3fs minimum), not re-querying",  buf,  0x20u);
      if ((v459[23] & 0x80000000) != 0) {
        operator delete(*(void **)v459);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_376;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v199 = qword_101934858;
    sub_1003D2C58((unsigned int *)(*a6 + 96 * v193), &v449);
    v200 = &v449;
    if (SHIBYTE(v450) < 0) {
      v200 = (__int128 *)v449;
    }
    *(_DWORD *)v459 = 136315650;
    *(void *)&v459[4] = v200;
    *(_WORD *)&v459[12] = 2048;
    *(double *)&v459[14] = Current - *((double *)&v437 + 1);
    *(_WORD *)&v459[22] = 2048;
    *(void *)&v459[24] = 0x40DC200000000000LL;
    LODWORD(v417) = 32;
    v201 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v199,  2LL,  "CELL_LOC: nr cell, %s, last updated %.3f ago (%.3fs minimum), not re-querying",  v459,  v417,  v418);
    if (SHIBYTE(v450) < 0) {
      operator delete((void *)v449);
    }
    goto LABEL_347;
  }

          *(_DWORD *)(a1 + 68) = v46;
          goto LABEL_210;
        case 8u:
          *(void *)(a1 + 156) |= 0x80000000uLL;
          __int128 v49 = *((void *)this + 1);
          __int128 v50 = *((void *)this + 2);
          __int128 v51 = *(void *)this;
          if (v49 <= 0xFFFFFFFFFFFFFFF5LL && v49 + 10 <= v50)
          {
            __int128 v52 = 0;
            __int128 v53 = 0;
            uint64_t v54 = 0LL;
            do
            {
              uint64_t v55 = v49 + 1;
              *((void *)this + 1) = v49 + 1;
              uint64_t v56 = *(_BYTE *)(v51 + v49);
              v54 |= (unint64_t)(v56 & 0x7F) << v52;
              if ((v56 & 0x80) == 0) {
                goto LABEL_380;
              }
              v52 += 7;
              __int128 v49 = v55;
              int v14 = v53++ > 8;
            }

            while (!v14);
LABEL_242:
            LODWORD(v54) = 0;
            goto LABEL_380;
          }

          v223 = 0;
          v224 = 0;
          uint64_t v54 = 0LL;
          if (v50 <= v49) {
            __int128 v50 = *((void *)this + 1);
          }
          while (2)
          {
            if (v50 == v49)
            {
              LODWORD(v54) = 0;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              __int128 v225 = v49 + 1;
              __int128 v226 = *(_BYTE *)(v51 + v49);
              *((void *)this + 1) = v225;
              v54 |= (unint64_t)(v226 & 0x7F) << v223;
              if (v226 < 0)
              {
                v223 += 7;
                __int128 v49 = v225;
                int v14 = v224++ > 8;
                if (v14) {
                  goto LABEL_242;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v54) = 0;
              }
            }

            break;
          }

            *(void *)(a1 + 24) = v153;
            break;
          case 0x12D:
            *(void *)v8 |= 0x400000000000uLL;
            __int128 v26 = *((void *)this + 1);
            if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *((void *)this + 2))
            {
              *(_DWORD *)(a1 + 228) = *(_DWORD *)(*(void *)this + v26);
LABEL_335:
              *((void *)this + 1) += 4LL;
            }

            else
            {
              *((_BYTE *)this + 24) = 1;
            }

            break;
          default:
LABEL_266:
            uint64_t result = PB::Reader::skip(this, v21, v12 & 7, 0);
            if (!(_DWORD)result) {
              return result;
            }
            break;
        }
      }

      else
      {
        switch((int)v21)
        {
          case 1:
            *(_BYTE *)(v8 + 8) |= 8u;
            BOOL v22 = *((void *)this + 1);
            if (v22 >= *((void *)this + 2))
            {
              BOOL v25 = 0;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              double v23 = v22 + 1;
              uint64_t v24 = *(unsigned __int8 *)(*(void *)this + v22);
              *((void *)this + 1) = v23;
              BOOL v25 = v24 != 0;
            }

            *(_BYTE *)(a1 + 312) = v25;
            goto LABEL_336;
          case 2:
            *(_BYTE *)(v8 + 8) |= 2u;
            __int128 v27 = *((void *)this + 1);
            if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 304) = *(_DWORD *)(*(void *)this + v27);
            goto LABEL_335;
          case 3:
            *(_BYTE *)(v8 + 8) |= 4u;
            __int128 v28 = *((void *)this + 1);
            if (v28 > 0xFFFFFFFFFFFFFFFBLL || v28 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 308) = *(_DWORD *)(*(void *)this + v28);
            goto LABEL_335;
          case 4:
            *(void *)v8 |= 0x20uLL;
            std::string::size_type v29 = *((void *)this + 1);
            uint64_t v30 = *((void *)this + 2);
            uint64_t v31 = *(void *)this;
            if (v29 <= 0xFFFFFFFFFFFFFFF5LL && v29 + 10 <= v30)
            {
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              __int128 v34 = 0LL;
              do
              {
                __int128 v35 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                __int128 v36 = *(_BYTE *)(v31 + v29);
                v34 |= (unint64_t)(v36 & 0x7F) << v32;
                if ((v36 & 0x80) == 0) {
                  goto LABEL_344;
                }
                v32 += 7;
                std::string::size_type v29 = v35;
                __int16 v15 = v33++ > 8;
              }

              while (!v15);
LABEL_276:
              __int128 v34 = 0LL;
              goto LABEL_344;
            }

            uint64_t v157 = 0;
            uint64_t v158 = 0;
            __int128 v34 = 0LL;
            if (v30 <= v29) {
              uint64_t v30 = *((void *)this + 1);
            }
            while (2)
            {
              if (v30 == v29)
              {
                __int128 v34 = 0LL;
                *((_BYTE *)this + 24) = 1;
              }

              else
              {
                v159 = v29 + 1;
                v160 = *(_BYTE *)(v31 + v29);
                *((void *)this + 1) = v159;
                v34 |= (unint64_t)(v160 & 0x7F) << v157;
                if (v160 < 0)
                {
                  v157 += 7;
                  std::string::size_type v29 = v159;
                  __int16 v15 = v158++ > 8;
                  if (v15) {
                    goto LABEL_276;
                  }
                  continue;
                }

                if (*((_BYTE *)this + 24)) {
                  __int128 v34 = 0LL;
                }
              }

              break;
            }

          *(_DWORD *)(a1 + 152) = v74;
          goto LABEL_356;
        case 0x10u:
          *(void *)(a1 + 184) |= 0x4000000000uLL;
          uint64_t v77 = *((void *)this + 1);
          unsigned int v78 = *((void *)this + 2);
          uint64_t v79 = *(void *)this;
          if (v77 <= 0xFFFFFFFFFFFFFFF5LL && v77 + 10 <= v78)
          {
            __int16 v80 = 0;
            __int16 v81 = 0;
            uint64_t v82 = 0LL;
            do
            {
              __int128 v83 = v77 + 1;
              *((void *)this + 1) = v77 + 1;
              __int128 v84 = *(_BYTE *)(v79 + v77);
              v82 |= (unint64_t)(v84 & 0x7F) << v80;
              if ((v84 & 0x80) == 0) {
                goto LABEL_380;
              }
              v80 += 7;
              uint64_t v77 = v83;
              int v14 = v81++ > 8;
            }

            while (!v14);
LABEL_264:
            LODWORD(v82) = 0;
            goto LABEL_380;
          }

          unint64_t v220 = 0;
          unint64_t v221 = 0;
          uint64_t v82 = 0LL;
          if (v78 <= v77) {
            unsigned int v78 = *((void *)this + 1);
          }
          while (2)
          {
            if (v78 == v77)
            {
              LODWORD(v82) = 0;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              unint64_t v222 = v77 + 1;
              v223 = *(_BYTE *)(v79 + v77);
              *((void *)this + 1) = v222;
              v82 |= (unint64_t)(v223 & 0x7F) << v220;
              if (v223 < 0)
              {
                v220 += 7;
                uint64_t v77 = v222;
                int v14 = v221++ > 8;
                if (v14) {
                  goto LABEL_264;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v82) = 0;
              }
            }

            break;
          }

LABEL_386:
  __int128 v449 = 0uLL;
  v450 = 0LL;
  v238 = *v419;
  v239 = v419[1];
  if (*v419 == v239)
  {
    int v241 = 0;
    int v425 = 0;
    int v240 = 0;
    uint64_t v242 = v421;
  }

  else
  {
    int v240 = 0;
    int v425 = 0;
    int v241 = 0;
    uint64_t v242 = v421;
    v243 = (uint64_t **)(v421 + 416);
    do
    {
      uint64_t v244 = *(void *)(v242 + 672);
      uint64_t v245 = *v238;
      v246 = operator new(8uLL);
      *(void *)v459 = v246;
      void *v246 = v245;
      *(void *)&v459[16] = v246 + 1;
      *(void *)&v459[8] = v246 + 1;
      (*(void (**)(_BYTE *__return_ptr, uint64_t, _BYTE *))(*(void *)v244 + 32LL))(buf, v244, v459);
      uint64_t v242 = v421;
      if (*(void *)v459)
      {
        *(void *)&v459[8] = *(void *)v459;
        operator delete(*(void **)v459);
      }

      v247 = (double *)sub_1002FB09C((uint64_t)buf, v238);
      if (&buf[8] == (_BYTE *)v247 || !a8 || Current - v247[13] >= 28800.0)
      {
        if (!a8
          || (v248 = (double *)sub_1002FB09C((uint64_t)v243, v238), (double *)(v421 + 424) == v248)
          || Current - v248[5] >= 3600.0)
        {
          *(void *)v459 = v238;
          *((double *)sub_1004C2D9C(v243, v238, (uint64_t)&unk_1012CF090, (uint64_t **)v459) + 5) = Current;
          v249 = (char *)*((void *)&v449 + 1);
          if (*((void *)&v449 + 1) >= (unint64_t)v450)
          {
            v251 = (char *)v449;
            uint64_t v252 = (uint64_t)(*((void *)&v449 + 1) - v449) >> 3;
            unint64_t v253 = v252 + 1;
            uint64_t v254 = (uint64_t)&v450[-v449];
            else {
              unint64_t v255 = v253;
            }
            if (v255)
            {
              v256 = (char *)sub_1000071BC((uint64_t)&v450, v255);
              v249 = (char *)*((void *)&v449 + 1);
              v251 = (char *)v449;
            }

            else
            {
              v256 = 0LL;
            }

            v257 = &v256[8 * v252];
            *(void *)v257 = *v238;
            v250 = v257 + 8;
            while (v249 != v251)
            {
              uint64_t v258 = *((void *)v249 - 1);
              v249 -= 8;
              *((void *)v257 - 1) = v258;
              v257 -= 8;
            }

            *(void *)&__int128 v449 = v257;
            *((void *)&v449 + 1) = v250;
            v450 = &v256[8 * v255];
            if (v251) {
              operator delete(v251);
            }
          }

          else
          {
            **((void **)&v449 + 1) = *v238;
            v250 = v249 + 8;
          }

          *((void *)&v449 + 1) = v250;
          ++v241;
        }

        else
        {
          ++v425;
        }
      }

      else
      {
        ++v240;
      }

      sub_100008390((uint64_t)buf, *(void **)&buf[8]);
      ++v238;
    }

    while (v238 != v239);
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  v259 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    uint64_t v260 = v419[1] - *v419;
    *(_DWORD *)std::stringbuf::string_type buf = 134350080;
    *(void *)&uint8_t buf[4] = v260;
    *(_WORD *)&buf[12] = 1026;
    *(_DWORD *)&buf[14] = v241;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v240;
    *(_WORD *)&buf[24] = 1026;
    *(_DWORD *)&buf[26] = v425;
    *(_WORD *)&buf[30] = 2050;
    *(void *)&buf[32] = (uint64_t)(*((void *)&v449 + 1) - v449) >> 3;
    _os_log_impl( (void *)&_mh_execute_header,  v259,  OS_LOG_TYPE_INFO,  "AlsWifi, query, in, %{public}lu, paths, %{public}d, %{public}d, %{public}d, out, %{public}lu",  buf,  0x28u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v401 = v419[1] - *v419;
    *(_DWORD *)v459 = 134350080;
    *(void *)&v459[4] = v401;
    *(_WORD *)&v459[12] = 1026;
    *(_DWORD *)&v459[14] = v241;
    *(_WORD *)&v459[18] = 1026;
    *(_DWORD *)&v459[20] = v240;
    *(_WORD *)&v459[24] = 1026;
    *(_DWORD *)&v459[26] = v425;
    *(_WORD *)&v459[30] = 2050;
    *(void *)&v459[32] = (uint64_t)(*((void *)&v449 + 1) - v449) >> 3;
    LODWORD(v417) = 40;
    v402 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "AlsWifi, query, in, %{public}lu, paths, %{public}d, %{public}d, %{public}d, out, %{public}lu",  v459,  *(void *)&v417);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vecto r<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector <CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMa cAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v402);
    if (v402 != buf) {
      free(v402);
    }
    uint64_t v242 = v421;
  }

  if (v455[0] != v455[1])
  {
    uint64_t v262 = *((void *)&__p + 1);
    uint64_t v261 = __p;
    uint64_t v263 = v428;
LABEL_430:
    *(_DWORD *)(v242 + 560) = ((unint64_t)(v262 - v261) >> 5)
                            + ((unint64_t)((char *)v455[1] - (char *)v455[0]) >> 5)
                            + 1749801491 * ((v429 - v263) >> 4)
                            + *(_DWORD *)(v242 + 560)
                            - 1171354717 * ((*((void *)&v453 + 1) - (void)v453) >> 3)
                            - 1431655765 * ((*((void *)&v451 + 1) - (void)v451) >> 5);
    *(_DWORD *)(v242 + 564) += (*((void *)&v449 + 1) - (void)v449) >> 3;
    if (HIDWORD(v417)) {
      int v264 = 100;
    }
    else {
      int v264 = 1;
    }
    uint64_t v265 = *(void *)(v242 + 448);
    *(_DWORD *)(v265 + 296) = 0;
    *(_DWORD *)(v265 + 300) = v264;
    unsigned int v423 = sub_1004B35C4(v242, v455, &__p, &v428, &v453, &v451, &v449, a10);
    *(void *)(*(void *)(v242 + 448) + 296LL) = &_mh_execute_header;
    goto LABEL_434;
  }

  uint64_t v262 = *((void *)&__p + 1);
  uint64_t v261 = __p;
  uint64_t v263 = v428;
  if ((void)__p != *((void *)&__p + 1)) {
    goto LABEL_430;
  }
  if (v428 != v429 || (void)v453 != *((void *)&v453 + 1) || (void)v451 != *((void *)&v451 + 1))
  {
    uint64_t v262 = __p;
    goto LABEL_430;
  }

  uint64_t v262 = __p;
  if ((void)v449 != *((void *)&v449 + 1)) {
    goto LABEL_430;
  }
  int v264 = 0;
  unsigned int v423 = -1;
LABEL_434:
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  v266 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67241984;
    *(_DWORD *)&uint8_t buf[4] = v423;
    *(_WORD *)&uint8_t buf[8] = 2050;
    *(void *)&buf[10] = ((char *)v455[1] - (char *)v455[0]) >> 5;
    *(_WORD *)&buf[18] = 2050;
    *(void *)&buf[20] = (uint64_t)(*((void *)&__p + 1) - __p) >> 5;
    *(_WORD *)&buf[28] = 2050;
    *(void *)&buf[30] = 0x84BDA12F684BDA13LL * ((uint64_t)(v429 - v428) >> 4);
    *(_WORD *)&buf[38] = 2050;
    *(void *)&buf[40] = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)&v453 + 1) - v453) >> 3);
    *(_WORD *)&buf[48] = 2050;
    *(void *)&buf[50] = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v451 + 1) - v451) >> 5);
    *(_WORD *)&buf[58] = 2050;
    *(void *)&buf[60] = (uint64_t)(*((void *)&v449 + 1) - v449) >> 3;
    __int16 v483 = 1026;
    int v484 = v264;
    _os_log_impl( (void *)&_mh_execute_header,  v266,  OS_LOG_TYPE_DEFAULT,  "@AlsFlow, query, made, %{public}d, cells, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, wifi, % {public}lu, nearby, %{public}d\n",  buf,  0x4Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    *(_DWORD *)v459 = 67241984;
    *(_DWORD *)&v459[4] = v423;
    *(_WORD *)&v459[8] = 2050;
    *(void *)&v459[10] = ((char *)v455[1] - (char *)v455[0]) >> 5;
    *(_WORD *)&v459[18] = 2050;
    *(void *)&v459[20] = (uint64_t)(*((void *)&__p + 1) - __p) >> 5;
    *(_WORD *)&v459[28] = 2050;
    *(void *)&v459[30] = 0x84BDA12F684BDA13LL * ((uint64_t)(v429 - v428) >> 4);
    *(_WORD *)&v459[38] = 2050;
    *(void *)&v459[40] = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)&v453 + 1) - v453) >> 3);
    *(_WORD *)&v459[48] = 2050;
    *(void *)&v459[50] = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v451 + 1) - v451) >> 5);
    *(_WORD *)&v459[58] = 2050;
    *(void *)&v459[60] = (uint64_t)(*((void *)&v449 + 1) - v449) >> 3;
    *(_WORD *)&v459[68] = 1026;
    *(_DWORD *)&v459[70] = v264;
    LODWORD(v417) = 74;
    v403 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@AlsFlow, query, made, %{public}d, cells, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{pub lic}lu, wifi, %{public}lu, nearby, %{public}d\n",  v459,  *(void *)&v417);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vecto r<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector <CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMa cAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v403);
    if (v403 != buf) {
      free(v403);
    }
    uint64_t v242 = v421;
  }

  if (*(void *)(v242 + 432) > 0x258uLL)
  {
    v267 = *(double **)(v242 + 416);
    v268 = (double *)(v242 + 424);
    if (v267 != (double *)(v242 + 424))
    {
      do
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10183C360);
        }
        v269 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1007EC454((std::string *)v459);
          int v270 = v459[23];
          v271 = *(_BYTE **)v459;
          uint64_t v272 = *((void *)v267 + 5);
          double v273 = CFAbsoluteTimeGetCurrent();
          v274 = v459;
          if (v270 < 0) {
            v274 = v271;
          }
          double v275 = v273 - v267[5];
          *(_DWORD *)std::stringbuf::string_type buf = 136381187;
          *(void *)&uint8_t buf[4] = v274;
          *(_WORD *)&buf[12] = 2050;
          *(void *)&buf[14] = v272;
          *(_WORD *)&_BYTE buf[22] = 2050;
          *(double *)&buf[24] = v275;
          _os_log_impl( (void *)&_mh_execute_header,  v269,  OS_LOG_TYPE_DEBUG,  "AlsWifi, pending, %{private}s, from, %{public}.3f, %{public}.3fs",  buf,  0x20u);
          if ((v459[23] & 0x80000000) != 0) {
            operator delete(*(void **)v459);
          }
        }

        uint64_t v242 = v421;
        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_10183C360);
          }
          uint64_t v278 = qword_101934858;
          sub_1007EC454(&v427);
          int size = (char)v427.__r_.__value_.__s.__size_;
          std::string::size_type v280 = v427.__r_.__value_.__r.__words[0];
          uint64_t v281 = *((void *)v267 + 5);
          double v282 = CFAbsoluteTimeGetCurrent();
          v283 = &v427;
          if (size < 0) {
            v283 = (std::string *)v280;
          }
          double v284 = v282 - v267[5];
          *(_DWORD *)v459 = 136381187;
          *(void *)&v459[4] = v283;
          *(_WORD *)&v459[12] = 2050;
          *(void *)&v459[14] = v281;
          *(_WORD *)&v459[22] = 2050;
          *(double *)&v459[24] = v284;
          LODWORD(v417) = 32;
          v285 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v278,  2LL,  "AlsWifi, pending, %{private}s, from, %{public}.3f, %{public}.3fs",  v459,  *(void *)&v417);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std: :vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, cons t std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v285);
          uint64_t v242 = v421;
          if (v285 != buf) {
            free(v285);
          }
        }

        v276 = (double *)*((void *)v267 + 1);
        if (v276)
        {
          do
          {
            v277 = v276;
            v276 = *(double **)v276;
          }

          while (v276);
        }

        else
        {
          do
          {
            v277 = (double *)*((void *)v267 + 2);
            _ZF = *(void *)v277 == (void)v267;
            v267 = v277;
          }

          while (!_ZF);
        }

        v267 = v277;
      }

      while (v277 != v268);
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    v286 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v287 = *(void *)(v242 + 432);
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      *(void *)&uint8_t buf[4] = v287;
      _os_log_impl( (void *)&_mh_execute_header,  v286,  OS_LOG_TYPE_DEFAULT,  "AlsWifi, clearpending, %{public}ld, #CloneMe",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10183C360);
      }
      uint64_t v406 = *(void *)(v421 + 432);
      *(_DWORD *)v459 = 134349056;
      *(void *)&v459[4] = v406;
      LODWORD(v417) = 12;
      v407 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "AlsWifi, clearpending, %{public}ld, #CloneMe",  v459,  *(void *)&v417);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vec tor<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::ve ctor<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vecto r<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v407);
      if (v407 != buf) {
        free(v407);
      }
      uint64_t v242 = v421;
    }

    sub_100008390(v242 + 416, *(void **)(v242 + 424));
    *(void *)(v242 + 424) = 0LL;
    *(void *)(v242 + 432) = 0LL;
    *(void *)(v242 + 416) = v268;
  }

  if (*(void *)(v242 + 184) > 0x12CuLL)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    v288 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v289 = *(void *)(v242 + 184);
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      *(void *)&uint8_t buf[4] = v289;
      _os_log_impl( (void *)&_mh_execute_header,  v288,  OS_LOG_TYPE_DEFAULT,  "#Warning CELL_LOC: %ld pending gsm cells, clearing",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v404 = *(void *)(v421 + 184);
      *(_DWORD *)v459 = 134217984;
      *(void *)&v459[4] = v404;
      v405 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning CELL_LOC: %ld pending gsm cells, clearing",  v459);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vec tor<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::ve ctor<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vecto r<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v405);
      if (v405 != buf) {
        free(v405);
      }
      uint64_t v242 = v421;
    }

    v290 = *(unsigned int **)(v242 + 168);
    v291 = (unsigned int *)(v242 + 176);
    if (v290 != (unsigned int *)(v242 + 176))
    {
      do
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        v292 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          sub_1003D1A48(v290 + 8, v459);
          int v293 = v459[23];
          v294 = *(_BYTE **)v459;
          uint64_t v295 = *((void *)v290 + 8);
          double v296 = CFAbsoluteTimeGetCurrent();
          if (v293 >= 0) {
            v297 = v459;
          }
          else {
            v297 = v294;
          }
          double v298 = v296 - *((double *)v290 + 8);
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)&uint8_t buf[4] = v297;
          *(_WORD *)&buf[12] = 2048;
          *(void *)&buf[14] = v295;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(double *)&buf[24] = v298;
          _os_log_impl( (void *)&_mh_execute_header,  v292,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: pending gsm cell, %s, from, %.3f, %.3f, ago)",  buf,  0x20u);
          if ((v459[23] & 0x80000000) != 0) {
            operator delete(*(void **)v459);
          }
          uint64_t v242 = v421;
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_10183C380);
          }
          uint64_t v301 = qword_101934A78;
          sub_1003D1A48(v290 + 8, &v427);
          int v302 = (char)v427.__r_.__value_.__s.__size_;
          std::string::size_type v303 = v427.__r_.__value_.__r.__words[0];
          uint64_t v304 = *((void *)v290 + 8);
          double v305 = CFAbsoluteTimeGetCurrent();
          v306 = &v427;
          if (v302 < 0) {
            v306 = (std::string *)v303;
          }
          double v307 = v305 - *((double *)v290 + 8);
          *(_DWORD *)v459 = 136315650;
          *(void *)&v459[4] = v306;
          *(_WORD *)&v459[12] = 2048;
          *(void *)&v459[14] = v304;
          *(_WORD *)&v459[22] = 2048;
          *(double *)&v459[24] = v307;
          LODWORD(v417) = 32;
          v308 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v301,  2LL,  "CELL_LOC: pending gsm cell, %s, from, %.3f, %.3f, ago)",  v459,  v417,  v418);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std: :vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, cons t std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v308);
          uint64_t v242 = v421;
          if (v308 != buf) {
            free(v308);
          }
        }

        v299 = (unsigned int *)*((void *)v290 + 1);
        if (v299)
        {
          do
          {
            v300 = v299;
            v299 = *(unsigned int **)v299;
          }

          while (v299);
        }

        else
        {
          do
          {
            v300 = (unsigned int *)*((void *)v290 + 2);
            _ZF = *(void *)v300 == (void)v290;
            v290 = v300;
          }

          while (!_ZF);
        }

        v290 = v300;
      }

      while (v300 != v291);
    }

    sub_100008390(v242 + 168, *(void **)(v242 + 176));
    *(void *)(v242 + 176) = 0LL;
    *(void *)(v242 + 184) = 0LL;
    *(void *)(v242 + 168) = v291;
  }

  if (*(void *)(v242 + 224) > 0x12CuLL)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    v309 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v310 = *(void *)(v242 + 224);
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      *(void *)&uint8_t buf[4] = v310;
      _os_log_impl( (void *)&_mh_execute_header,  v309,  OS_LOG_TYPE_DEFAULT,  "#Warning CELL_LOC: %ld pending scdma cells, clearing",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v408 = *(void *)(v421 + 224);
      *(_DWORD *)v459 = 134217984;
      *(void *)&v459[4] = v408;
      v409 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning CELL_LOC: %ld pending scdma cells, clearing",  v459);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vec tor<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::ve ctor<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vecto r<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v409);
      if (v409 != buf) {
        free(v409);
      }
      uint64_t v242 = v421;
    }

    v311 = *(unsigned int **)(v242 + 208);
    v312 = (unsigned int *)(v242 + 216);
    if (v311 != (unsigned int *)(v242 + 216))
    {
      do
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        v313 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          sub_1003D1A48(v311 + 8, v459);
          int v314 = v459[23];
          v315 = *(_BYTE **)v459;
          uint64_t v316 = *((void *)v311 + 8);
          double v317 = CFAbsoluteTimeGetCurrent();
          if (v314 >= 0) {
            v318 = v459;
          }
          else {
            v318 = v315;
          }
          double v319 = v317 - *((double *)v311 + 8);
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)&uint8_t buf[4] = v318;
          *(_WORD *)&buf[12] = 2048;
          *(void *)&buf[14] = v316;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(double *)&buf[24] = v319;
          _os_log_impl( (void *)&_mh_execute_header,  v313,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: pending scdma cell, %s, from, %.3f, %.3f, ago)",  buf,  0x20u);
          if ((v459[23] & 0x80000000) != 0) {
            operator delete(*(void **)v459);
          }
          uint64_t v242 = v421;
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_10183C380);
          }
          uint64_t v322 = qword_101934A78;
          sub_1003D1A48(v311 + 8, &v427);
          int v323 = (char)v427.__r_.__value_.__s.__size_;
          std::string::size_type v324 = v427.__r_.__value_.__r.__words[0];
          uint64_t v325 = *((void *)v311 + 8);
          double v326 = CFAbsoluteTimeGetCurrent();
          v327 = &v427;
          if (v323 < 0) {
            v327 = (std::string *)v324;
          }
          double v328 = v326 - *((double *)v311 + 8);
          *(_DWORD *)v459 = 136315650;
          *(void *)&v459[4] = v327;
          *(_WORD *)&v459[12] = 2048;
          *(void *)&v459[14] = v325;
          *(_WORD *)&v459[22] = 2048;
          *(double *)&v459[24] = v328;
          LODWORD(v417) = 32;
          v329 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v322,  2LL,  "CELL_LOC: pending scdma cell, %s, from, %.3f, %.3f, ago)",  v459,  v417,  v418);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std: :vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, cons t std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v329);
          uint64_t v242 = v421;
          if (v329 != buf) {
            free(v329);
          }
        }

        v320 = (unsigned int *)*((void *)v311 + 1);
        if (v320)
        {
          do
          {
            v321 = v320;
            v320 = *(unsigned int **)v320;
          }

          while (v320);
        }

        else
        {
          do
          {
            v321 = (unsigned int *)*((void *)v311 + 2);
            _ZF = *(void *)v321 == (void)v311;
            v311 = v321;
          }

          while (!_ZF);
        }

        v311 = v321;
      }

      while (v321 != v312);
    }

    sub_100008390(v242 + 208, *(void **)(v242 + 216));
    *(void *)(v242 + 216) = 0LL;
    *(void *)(v242 + 224) = 0LL;
    *(void *)(v242 + 208) = v312;
  }

  if (*(void *)(v242 + 264) > 0x12CuLL)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    v330 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v331 = *(void *)(v242 + 264);
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      *(void *)&uint8_t buf[4] = v331;
      _os_log_impl( (void *)&_mh_execute_header,  v330,  OS_LOG_TYPE_DEFAULT,  "#Warning CELL_LOC: %ld pending cdma cells, clearing",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v410 = *(void *)(v421 + 264);
      *(_DWORD *)v459 = 134217984;
      *(void *)&v459[4] = v410;
      v411 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning CELL_LOC: %ld pending cdma cells, clearing",  v459);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vec tor<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::ve ctor<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vecto r<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v411);
      if (v411 != buf) {
        free(v411);
      }
      uint64_t v242 = v421;
    }

    v332 = *(unsigned int **)(v242 + 248);
    v333 = (unsigned int *)(v242 + 256);
    if (v332 != (unsigned int *)(v242 + 256))
    {
      do
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        v334 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          sub_1003D13B8(v332 + 8, v459);
          int v335 = v459[23];
          v336 = *(_BYTE **)v459;
          uint64_t v337 = *((void *)v332 + 58);
          double v338 = CFAbsoluteTimeGetCurrent();
          if (v335 >= 0) {
            v339 = v459;
          }
          else {
            v339 = v336;
          }
          double v340 = v338 - *((double *)v332 + 58);
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)&uint8_t buf[4] = v339;
          *(_WORD *)&buf[12] = 2048;
          *(void *)&buf[14] = v337;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(double *)&buf[24] = v340;
          _os_log_impl( (void *)&_mh_execute_header,  v334,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: pending cdma cell, %s, from, %.3f, %.3f, ago)",  buf,  0x20u);
          if ((v459[23] & 0x80000000) != 0) {
            operator delete(*(void **)v459);
          }
          uint64_t v242 = v421;
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_10183C380);
          }
          uint64_t v343 = qword_101934A78;
          sub_1003D13B8(v332 + 8, &v427);
          int v344 = (char)v427.__r_.__value_.__s.__size_;
          std::string::size_type v345 = v427.__r_.__value_.__r.__words[0];
          uint64_t v346 = *((void *)v332 + 58);
          double v347 = CFAbsoluteTimeGetCurrent();
          v348 = &v427;
          if (v344 < 0) {
            v348 = (std::string *)v345;
          }
          double v349 = v347 - *((double *)v332 + 58);
          *(_DWORD *)v459 = 136315650;
          *(void *)&v459[4] = v348;
          *(_WORD *)&v459[12] = 2048;
          *(void *)&v459[14] = v346;
          *(_WORD *)&v459[22] = 2048;
          *(double *)&v459[24] = v349;
          LODWORD(v417) = 32;
          v350 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v343,  2LL,  "CELL_LOC: pending cdma cell, %s, from, %.3f, %.3f, ago)",  v459,  v417,  v418);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std: :vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, cons t std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v350);
          uint64_t v242 = v421;
          if (v350 != buf) {
            free(v350);
          }
        }

        v341 = (unsigned int *)*((void *)v332 + 1);
        if (v341)
        {
          do
          {
            v342 = v341;
            v341 = *(unsigned int **)v341;
          }

          while (v341);
        }

        else
        {
          do
          {
            v342 = (unsigned int *)*((void *)v332 + 2);
            _ZF = *(void *)v342 == (void)v332;
            v332 = v342;
          }

          while (!_ZF);
        }

        v332 = v342;
      }

      while (v342 != v333);
    }

    sub_1004C1C34(v242 + 248, *(void **)(v242 + 256));
    *(void *)(v242 + 256) = 0LL;
    *(void *)(v242 + 264) = 0LL;
    *(void *)(v242 + 248) = v333;
  }

  if (*(void *)(v242 + 304) > 0x12CuLL)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    v351 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v352 = *(void *)(v242 + 304);
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      *(void *)&uint8_t buf[4] = v352;
      _os_log_impl( (void *)&_mh_execute_header,  v351,  OS_LOG_TYPE_DEFAULT,  "#Warning CELL_LOC: %ld pending lte cells, clearing",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v412 = *(void *)(v421 + 304);
      *(_DWORD *)v459 = 134217984;
      *(void *)&v459[4] = v412;
      v413 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning CELL_LOC: %ld pending lte cells, clearing",  v459);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vec tor<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::ve ctor<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vecto r<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v413);
      if (v413 != buf) {
        free(v413);
      }
      uint64_t v242 = v421;
    }

    v353 = *(unsigned int **)(v242 + 288);
    v354 = (unsigned int *)(v242 + 296);
    if (v353 != (unsigned int *)(v242 + 296))
    {
      do
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        v355 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          sub_1003D2324(v353 + 8, v459);
          int v356 = v459[23];
          v357 = *(_BYTE **)v459;
          uint64_t v358 = *((void *)v353 + 15);
          double v359 = CFAbsoluteTimeGetCurrent();
          if (v356 >= 0) {
            v360 = v459;
          }
          else {
            v360 = v357;
          }
          double v361 = v359 - *((double *)v353 + 15);
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)&uint8_t buf[4] = v360;
          *(_WORD *)&buf[12] = 2048;
          *(void *)&buf[14] = v358;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(double *)&buf[24] = v361;
          _os_log_impl( (void *)&_mh_execute_header,  v355,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: pending lte cell, %s, from, %.3f, %.3f, ago)",  buf,  0x20u);
          if ((v459[23] & 0x80000000) != 0) {
            operator delete(*(void **)v459);
          }
          uint64_t v242 = v421;
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_10183C380);
          }
          uint64_t v364 = qword_101934A78;
          sub_1003D2324(v353 + 8, &v427);
          int v365 = (char)v427.__r_.__value_.__s.__size_;
          std::string::size_type v366 = v427.__r_.__value_.__r.__words[0];
          uint64_t v367 = *((void *)v353 + 15);
          double v368 = CFAbsoluteTimeGetCurrent();
          v369 = &v427;
          if (v365 < 0) {
            v369 = (std::string *)v366;
          }
          double v370 = v368 - *((double *)v353 + 15);
          *(_DWORD *)v459 = 136315650;
          *(void *)&v459[4] = v369;
          *(_WORD *)&v459[12] = 2048;
          *(void *)&v459[14] = v367;
          *(_WORD *)&v459[22] = 2048;
          *(double *)&v459[24] = v370;
          LODWORD(v417) = 32;
          v371 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v364,  2LL,  "CELL_LOC: pending lte cell, %s, from, %.3f, %.3f, ago)",  v459,  v417,  v418);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std: :vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, cons t std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v371);
          uint64_t v242 = v421;
          if (v371 != buf) {
            free(v371);
          }
        }

        v362 = (unsigned int *)*((void *)v353 + 1);
        if (v362)
        {
          do
          {
            v363 = v362;
            v362 = *(unsigned int **)v362;
          }

          while (v362);
        }

        else
        {
          do
          {
            v363 = (unsigned int *)*((void *)v353 + 2);
            _ZF = *(void *)v363 == (void)v353;
            v353 = v363;
          }

          while (!_ZF);
        }

        v353 = v363;
      }

      while (v363 != v354);
    }

    sub_100008390(v242 + 288, *(void **)(v242 + 296));
    *(void *)(v242 + 296) = 0LL;
    *(void *)(v242 + 304) = 0LL;
    *(void *)(v242 + 288) = v354;
  }

  if (*(void *)(v242 + 344) > 0x12CuLL)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    v372 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v373 = *(void *)(v242 + 344);
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      *(void *)&uint8_t buf[4] = v373;
      _os_log_impl( (void *)&_mh_execute_header,  v372,  OS_LOG_TYPE_DEFAULT,  "#Warning CELL_LOC: %ld pending nr cells, clearing",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v414 = *(void *)(v421 + 344);
      *(_DWORD *)v459 = 134217984;
      *(void *)&v459[4] = v414;
      v415 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning CELL_LOC: %ld pending nr cells, clearing",  v459);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vec tor<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::ve ctor<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vecto r<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v415);
      if (v415 != buf) {
        free(v415);
      }
      uint64_t v242 = v421;
    }

    v374 = *(unsigned int **)(v242 + 328);
    v375 = (unsigned int *)(v242 + 336);
    if (v374 != v375)
    {
      do
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        v376 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          sub_1003D2C58(v374 + 8, v459);
          int v377 = v459[23];
          v378 = *(_BYTE **)v459;
          uint64_t v379 = *((void *)v374 + 16);
          double v380 = CFAbsoluteTimeGetCurrent();
          v381 = v377 >= 0 ? v459 : v378;
          double v382 = v380 - *((double *)v374 + 16);
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)&uint8_t buf[4] = v381;
          *(_WORD *)&buf[12] = 2048;
          *(void *)&buf[14] = v379;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(double *)&buf[24] = v382;
          _os_log_impl( (void *)&_mh_execute_header,  v376,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: pending nr cell, %s, from, %.3f, %.3f, ago)",  buf,  0x20u);
          if ((v459[23] & 0x80000000) != 0) {
            operator delete(*(void **)v459);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_10183C380);
          }
          uint64_t v385 = qword_101934A78;
          sub_1003D2C58(v374 + 8, &v427);
          int v386 = (char)v427.__r_.__value_.__s.__size_;
          std::string::size_type v387 = v427.__r_.__value_.__r.__words[0];
          uint64_t v388 = *((void *)v374 + 16);
          double v389 = CFAbsoluteTimeGetCurrent();
          v390 = &v427;
          if (v386 < 0) {
            v390 = (std::string *)v387;
          }
          double v391 = v389 - *((double *)v374 + 16);
          *(_DWORD *)v459 = 136315650;
          *(void *)&v459[4] = v390;
          *(_WORD *)&v459[12] = 2048;
          *(void *)&v459[14] = v388;
          *(_WORD *)&v459[22] = 2048;
          *(double *)&v459[24] = v391;
          LODWORD(v417) = 32;
          v392 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v385,  2LL,  "CELL_LOC: pending nr cell, %s, from, %.3f, %.3f, ago)",  v459,  v417,  v418);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std: :vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, cons t std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v392);
          if (v392 != buf) {
            free(v392);
          }
        }

        v383 = (unsigned int *)*((void *)v374 + 1);
        if (v383)
        {
          do
          {
            v384 = v383;
            v383 = *(unsigned int **)v383;
          }

          while (v383);
        }

        else
        {
          do
          {
            v384 = (unsigned int *)*((void *)v374 + 2);
            _ZF = *(void *)v384 == (void)v374;
            v374 = v384;
          }

          while (!_ZF);
        }

        v374 = v384;
      }

      while (v384 != v375);
    }

    sub_100008390(v421 + 328, *(void **)(v421 + 336));
    *(void *)(v421 + 336) = 0LL;
    *(void *)(v421 + 344) = 0LL;
    *(void *)(v421 + 328) = v375;
  }

  if ((void)v449)
  {
    *((void *)&v449 + 1) = v449;
    operator delete((void *)v449);
  }

  uint64_t v74 = v423;
  if ((void)v451)
  {
    *((void *)&v451 + 1) = v451;
    operator delete((void *)v451);
  }

  if ((void)v453)
  {
    *((void *)&v453 + 1) = v453;
    operator delete((void *)v453);
  }

  if ((void)__p)
  {
    *((void *)&__p + 1) = __p;
    operator delete((void *)__p);
  }

  if (v455[0])
  {
    v455[1] = v455[0];
    operator delete(v455[0]);
  }

  *(void *)std::stringbuf::string_type buf = &v428;
  sub_1003EE02C((void ***)buf);
  return v74;
}

            *(void *)(a1 + 8) = v27;
            goto LABEL_378;
          case 'f':
            *(void *)v8 |= 0x10uLL;
            uint64_t v54 = *((void *)this + 1);
            uint64_t v55 = *((void *)this + 2);
            uint64_t v56 = *(void *)this;
            if (v54 <= 0xFFFFFFFFFFFFFFF5LL && v54 + 10 <= v55)
            {
              int v57 = 0;
              int v58 = 0;
              uint64_t v59 = 0LL;
              do
              {
                uint64_t v60 = v54 + 1;
                *((void *)this + 1) = v54 + 1;
                uint64_t v61 = *(_BYTE *)(v56 + v54);
                v59 |= (unint64_t)(v61 & 0x7F) << v57;
                if ((v61 & 0x80) == 0) {
                  goto LABEL_402;
                }
                v57 += 7;
                uint64_t v54 = v60;
                __int16 v15 = v58++ > 8;
              }

              while (!v15);
LABEL_279:
              LODWORD(v59) = 0;
              goto LABEL_402;
            }

            double v317 = 0;
            v318 = 0;
            uint64_t v59 = 0LL;
            if (v55 <= v54) {
              uint64_t v55 = *((void *)this + 1);
            }
            while (2)
            {
              if (v55 == v54)
              {
                LODWORD(v59) = 0;
                *((_BYTE *)this + 24) = 1;
              }

              else
              {
                double v319 = v54 + 1;
                v320 = *(_BYTE *)(v56 + v54);
                *((void *)this + 1) = v319;
                v59 |= (unint64_t)(v320 & 0x7F) << v317;
                if (v320 < 0)
                {
                  v317 += 7;
                  uint64_t v54 = v319;
                  __int16 v15 = v318++ > 8;
                  if (v15) {
                    goto LABEL_279;
                  }
                  continue;
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v59) = 0;
                }
              }

              break;
            }

void sub_1004B330C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, void *a29, uint64_t a30, uint64_t a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,uint64_t a61,uint64_t a62,void *a63)
{
  if (__p)
  {
    a56 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a59)
  {
    a60 = (uint64_t)a59;
    operator delete(a59);
  }

  if (a63)
  {
    a64 = (uint64_t)a63;
    operator delete(a63);
  }

  if (a71)
  {
    a72 = (uint64_t)a71;
    operator delete(a71);
  }

  if (a67)
  {
    a68 = (uint64_t)a67;
    operator delete(a67);
  }

  STACK[0x3C0] = (unint64_t)&a32;
  sub_1003EE02C((void ***)&STACK[0x3C0]);
  _Unwind_Resume(a1);
}

uint64_t sub_1004B35C4( uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  __int128 v13 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = (uint64_t)(a2[1] - *a2) >> 5;
    uint64_t v15 = (uint64_t)(a3[1] - *a3) >> 5;
    unint64_t v16 = 0x84BDA12F684BDA13LL * ((uint64_t)(a4[1] - *a4) >> 4);
    uint64_t v17 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(a5[1] - *a5) >> 3);
    unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5);
    uint64_t v19 = (uint64_t)(a7[1] - *a7) >> 3;
    int v20 = *(unsigned __int8 *)(a1 + 120);
    *(_DWORD *)std::stringbuf::string_type buf = 134350592;
    *(void *)uint64_t v54 = v14;
    *(_WORD *)&v54[8] = 2050;
    uint64_t v55 = v15;
    __int16 v56 = 2050;
    unint64_t v57 = v16;
    __int16 v58 = 2050;
    uint64_t v59 = v17;
    __int16 v60 = 2050;
    unint64_t v61 = v18;
    __int16 v62 = 2050;
    uint64_t v63 = v19;
    __int16 v64 = 1026;
    int v65 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "@AlsFlow, query, internal, cells, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, wifi, %{public} lu, skipnearby, %{public}d\n",  buf,  0x44u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v26 = (uint64_t)(a2[1] - *a2) >> 5;
    uint64_t v27 = (uint64_t)(a3[1] - *a3) >> 5;
    unint64_t v28 = 0x84BDA12F684BDA13LL * ((uint64_t)(a4[1] - *a4) >> 4);
    uint64_t v29 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(a5[1] - *a5) >> 3);
    unint64_t v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5);
    uint64_t v31 = (uint64_t)(a7[1] - *a7) >> 3;
    int v32 = *(unsigned __int8 *)(a1 + 120);
    int v40 = 134350592;
    *(void *)__int128 v41 = v26;
    *(_WORD *)&v41[8] = 2050;
    uint64_t v42 = v27;
    __int16 v43 = 2050;
    unint64_t v44 = v28;
    __int16 v45 = 2050;
    uint64_t v46 = v29;
    __int16 v47 = 2050;
    unint64_t v48 = v30;
    __int16 v49 = 2050;
    uint64_t v50 = v31;
    __int16 v51 = 1026;
    int v52 = v32;
    uint64_t v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@AlsFlow, query, internal, cells, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, w ifi, %{public}lu, skipnearby, %{public}d\n",  &v40,  68);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::query(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelep honyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTeleph onyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v33);
  }

  sub_1010DDBC0(__p, "query");
  sub_100AD5668(a1 + 464, (uint64_t *)__p);
  if (v39 < 0) {
    operator delete(__p[0]);
  }
  if (*(_BYTE *)(a1 + 120)) {
    *(void *)(*(void *)(a1 + 448) + 296LL) = &_mh_execute_header;
  }
  BOOL v21 = sub_10049F678((_DWORD *)a1);
  if (v21) {
    int v22 = 16;
  }
  else {
    int v22 = 40;
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  double v23 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109376;
    *(_DWORD *)uint64_t v54 = v21;
    *(_WORD *)&v54[4] = 1024;
    *(_DWORD *)&v54[6] = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "query, broadDataConnection, %d, timeout, %d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v40 = 67109376;
    *(_DWORD *)__int128 v41 = v21;
    *(_WORD *)&v41[4] = 1024;
    *(_DWORD *)&v41[6] = v22;
    __int128 v34 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "query, broadDataConnection, %d, timeout, %d",  &v40,  14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "int CLNetworkLocationProvider::query(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelep honyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTeleph onyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)",  "%s\n",  v34);
  }

  ++*(_DWORD *)(a1 + 572);
  uint64_t v24 = (*(uint64_t (**)(void, void *, void *, void *, void *, void *, void *, uint64_t, int))(**(void **)(a1 + 448) + 24LL))( *(void *)(a1 + 448),  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v22);
  if (sub_100E575B0())
  {
    sub_1002A5370(buf);
    int v40 = *(_DWORD *)(a1 + 352);
    sub_1002AC220((uint64_t)buf, "queryLoc", &v40);
    int v40 = v24;
    sub_1002AC220((uint64_t)buf, "tag", &v40);
    int v40 = (a2[1] - *a2) >> 5;
    sub_1002AC220((uint64_t)buf, "p1", &v40);
    int v40 = 1749801491 * ((a4[1] - *a4) >> 4);
    sub_1002AC220((uint64_t)buf, "p2", &v40);
    int v40 = -1171354717 * ((a5[1] - *a5) >> 3);
    sub_1002AC220((uint64_t)buf, "p3", &v40);
    int v40 = (a7[1] - *a7) >> 3;
    sub_1002AC220((uint64_t)buf, "p4", &v40);
    int v40 = (a3[1] - *a3) >> 5;
    sub_1002AC220((uint64_t)buf, "p5", &v40);
    int v40 = -1431655765 * ((a6[1] - *a6) >> 5);
    sub_1002AC220((uint64_t)buf, "p6", &v40);
    sub_100E57614((uint64_t)buf, (uint64_t)"locationd");
    sub_1002A5590(buf);
  }

  return v24;
}

void sub_1004B3C78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30)
{
}

void sub_1004B3CCC(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  unint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 184);
    uint64_t v4 = *(void *)(a1 + 224);
    unint64_t v5 = *(void *)(a1 + 264);
    uint64_t v6 = *(void *)(a1 + 304);
    unint64_t v7 = *(void *)(a1 + 432);
    uint64_t v8 = *(void *)(a1 + 344);
    int v9 = *(_DWORD *)(a1 + 352);
    uint64_t v10 = *(void *)(a1 + 368);
    *(_DWORD *)std::stringbuf::string_type buf = 134350848;
    *(void *)&uint8_t buf[4] = v3;
    __int16 v165 = 2050;
    uint64_t v166 = v4;
    __int16 v167 = 2050;
    unint64_t v168 = v5;
    __int16 v169 = 2050;
    uint64_t v170 = v6;
    __int16 v171 = 2050;
    unint64_t v172 = v7;
    __int16 v173 = 2050;
    uint64_t v174 = v8;
    __int16 v175 = 1026;
    int v176 = v9;
    __int16 v177 = 2050;
    uint64_t v178 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "@AlsFlow, requery, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, items, fQueryRetr ies, %{public}d, fLastRetryTimestamp, %{public}.1lf",  buf,  0x4Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v118 = *(void *)(a1 + 184);
    uint64_t v119 = *(void *)(a1 + 224);
    unint64_t v120 = *(void *)(a1 + 264);
    uint64_t v121 = *(void *)(a1 + 304);
    unint64_t v122 = *(void *)(a1 + 432);
    uint64_t v123 = *(void *)(a1 + 344);
    int v124 = *(_DWORD *)(a1 + 352);
    uint64_t v125 = *(void *)(a1 + 368);
    int v148 = 134350848;
    uint64_t v149 = v118;
    __int16 v150 = 2050;
    uint64_t v151 = v119;
    __int16 v152 = 2050;
    unint64_t v153 = v120;
    __int16 v154 = 2050;
    uint64_t v155 = v121;
    __int16 v156 = 2050;
    unint64_t v157 = v122;
    __int16 v158 = 2050;
    uint64_t v159 = v123;
    __int16 v160 = 1026;
    int v161 = v124;
    __int16 v162 = 2050;
    uint64_t v163 = v125;
    uint64_t v126 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@AlsFlow, requery, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, it ems, fQueryRetries, %{public}d, fLastRetryTimestamp, %{public}.1lf",  &v148,  78);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNetworkLocationProvider::requeryLocations()", "%s\n", v126);
    if (v126 != buf) {
      free(v126);
    }
  }

  if (*(_BYTE *)(a1 + 456))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int16 v11 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning NETWORK: in private location mode; not querying for unknown cells or unknown wifis",
        buf,
        2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v148) = 0;
      LODWORD(v129) = 2;
      int v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning NETWORK: in private location mode; not querying for unknown cells or unknown wifis",
                      &v148,
                      v129);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNetworkLocationProvider::requeryLocations()", "%s\n", v12);
LABEL_193:
      if (v12 != buf) {
        free(v12);
      }
    }
  }

  else if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    if (sub_100E575B0())
    {
      sub_1002A5370(buf);
      int v148 = *(_DWORD *)(a1 + 352);
      sub_1002AC220((uint64_t)buf, "requeryLocations", &v148);
      int v148 = *(void *)(a1 + 184);
      sub_1002AC220((uint64_t)buf, "p1", &v148);
      int v148 = *(void *)(a1 + 264);
      sub_1002AC220((uint64_t)buf, "p2", &v148);
      int v148 = *(void *)(a1 + 304);
      sub_1002AC220((uint64_t)buf, "p3", &v148);
      int v148 = *(void *)(a1 + 432);
      sub_1002AC220((uint64_t)buf, "p4", &v148);
      int v148 = *(void *)(a1 + 224);
      sub_1002AC220((uint64_t)buf, "p5", &v148);
      int v148 = *(void *)(a1 + 344);
      sub_1002AC220((uint64_t)buf, "p6", &v148);
      sub_100E57614((uint64_t)buf, (uint64_t)"locationd");
      sub_1002A5590(buf);
    }

    __int128 __p = 0LL;
    uint64_t v146 = 0LL;
    __int128 v147 = 0LL;
    uint64_t v142 = 0LL;
    v143 = 0LL;
    __int128 v144 = 0LL;
    uint64_t v139 = 0LL;
    unint64_t v140 = 0LL;
    unint64_t v141 = 0LL;
    uint64_t v136 = 0LL;
    unint64_t v137 = 0LL;
    uint64_t v138 = 0LL;
    __int128 v133 = 0LL;
    v134 = 0LL;
    v135 = 0LL;
    v130 = 0LL;
    v131 = 0LL;
    uint64_t v132 = 0LL;
    __int128 v13 = *(void **)(a1 + 168);
    if (v13 != (void *)(a1 + 176))
    {
      uint64_t v14 = 0LL;
      do
      {
        uint64_t v15 = v13 + 4;
        if (v14 >= v147)
        {
          uint64_t v17 = (char *)__p;
          uint64_t v18 = (v14 - (_BYTE *)__p) >> 5;
          unint64_t v19 = v18 + 1;
          uint64_t v20 = v147 - (_BYTE *)__p;
          if ((v147 - (_BYTE *)__p) >> 4 > v19) {
            unint64_t v19 = v20 >> 4;
          }
          else {
            unint64_t v21 = v19;
          }
          if (v21)
          {
            int v22 = (char *)sub_10000835C((uint64_t)&v147, v21);
            uint64_t v17 = (char *)__p;
            uint64_t v14 = v146;
          }

          else
          {
            int v22 = 0LL;
          }

          __int128 v23 = *((_OWORD *)v13 + 3);
          uint64_t v24 = &v22[32 * v18];
          *(_OWORD *)uint64_t v24 = *v15;
          *((_OWORD *)v24 + 1) = v23;
          if (v14 == v17)
          {
            uint64_t v27 = &v22[32 * v18];
          }

          else
          {
            BOOL v25 = &v22[32 * v18];
            do
            {
              __int128 v26 = *((_OWORD *)v14 - 1);
              uint64_t v27 = v25 - 32;
              *((_OWORD *)v25 - 2) = *((_OWORD *)v14 - 2);
              *((_OWORD *)v25 - 1) = v26;
              v14 -= 32;
              v25 -= 32;
            }

            while (v14 != v17);
          }

          uint64_t v14 = v24 + 32;
          __int128 __p = v27;
          uint64_t v146 = v24 + 32;
          __int128 v147 = &v22[32 * v21];
          if (v17) {
            operator delete(v17);
          }
        }

        else
        {
          __int128 v16 = *((_OWORD *)v13 + 3);
          *(_OWORD *)uint64_t v14 = *v15;
          *((_OWORD *)v14 + 1) = v16;
          v14 += 32;
        }

        uint64_t v146 = v14;
        unint64_t v28 = (void *)v13[1];
        if (v28)
        {
          do
          {
            uint64_t v29 = v28;
            unint64_t v28 = (void *)*v28;
          }

          while (v28);
        }

        else
        {
          do
          {
            uint64_t v29 = (void *)v13[2];
            BOOL v30 = *v29 == (void)v13;
            __int128 v13 = v29;
          }

          while (!v30);
        }

        __int128 v13 = v29;
      }

      while (v29 != (void *)(a1 + 176));
    }

    uint64_t v31 = *(void **)(a1 + 208);
    if (v31 != (void *)(a1 + 216))
    {
      int v32 = v143;
      do
      {
        uint64_t v33 = v31 + 4;
        if (v32 >= v144)
        {
          __int128 v35 = (char *)v142;
          uint64_t v36 = (v32 - (_BYTE *)v142) >> 5;
          unint64_t v37 = v36 + 1;
          uint64_t v38 = v144 - (_BYTE *)v142;
          if ((v144 - (_BYTE *)v142) >> 4 > v37) {
            unint64_t v37 = v38 >> 4;
          }
          else {
            unint64_t v39 = v37;
          }
          if (v39)
          {
            int v40 = (char *)sub_10000835C((uint64_t)&v144, v39);
            __int128 v35 = (char *)v142;
            int v32 = v143;
          }

          else
          {
            int v40 = 0LL;
          }

          __int128 v41 = *((_OWORD *)v31 + 3);
          uint64_t v42 = &v40[32 * v36];
          *(_OWORD *)uint64_t v42 = *v33;
          *((_OWORD *)v42 + 1) = v41;
          if (v32 == v35)
          {
            __int16 v45 = &v40[32 * v36];
          }

          else
          {
            __int16 v43 = &v40[32 * v36];
            do
            {
              __int128 v44 = *((_OWORD *)v32 - 1);
              __int16 v45 = v43 - 32;
              *((_OWORD *)v43 - 2) = *((_OWORD *)v32 - 2);
              *((_OWORD *)v43 - 1) = v44;
              v32 -= 32;
              v43 -= 32;
            }

            while (v32 != v35);
          }

          int v32 = v42 + 32;
          uint64_t v142 = v45;
          v143 = v42 + 32;
          __int128 v144 = &v40[32 * v39];
          if (v35) {
            operator delete(v35);
          }
        }

        else
        {
          __int128 v34 = *((_OWORD *)v31 + 3);
          *(_OWORD *)int v32 = *v33;
          *((_OWORD *)v32 + 1) = v34;
          v32 += 32;
        }

        v143 = v32;
        uint64_t v46 = (void *)v31[1];
        if (v46)
        {
          do
          {
            __int16 v47 = v46;
            uint64_t v46 = (void *)*v46;
          }

          while (v46);
        }

        else
        {
          do
          {
            __int16 v47 = (void *)v31[2];
            BOOL v30 = *v47 == (void)v31;
            uint64_t v31 = v47;
          }

          while (!v30);
        }

        uint64_t v31 = v47;
      }

      while (v47 != (void *)(a1 + 216));
    }

    unint64_t v48 = *(void **)(a1 + 248);
    if (v48 != (void *)(a1 + 256))
    {
      unint64_t v49 = v140;
      do
      {
        if (v49 >= v141)
        {
          unint64_t v49 = sub_1004C2760(&v139, (uint64_t)(v48 + 4));
        }

        else
        {
          sub_1004C2884((uint64_t)&v141, v49, (uint64_t)(v48 + 4));
          v49 += 432LL;
        }

        unint64_t v140 = v49;
        uint64_t v50 = (void *)v48[1];
        if (v50)
        {
          do
          {
            __int16 v51 = v50;
            uint64_t v50 = (void *)*v50;
          }

          while (v50);
        }

        else
        {
          do
          {
            __int16 v51 = (void *)v48[2];
            BOOL v30 = *v51 == (void)v48;
            unint64_t v48 = v51;
          }

          while (!v30);
        }

        unint64_t v48 = v51;
      }

      while (v51 != (void *)(a1 + 256));
    }

    int v52 = *(void **)(a1 + 288);
    if (v52 != (void *)(a1 + 296))
    {
      __int128 v53 = v137;
      do
      {
        uint64_t v54 = v52 + 4;
        if (v53 >= (_OWORD *)v138)
        {
          uint64_t v59 = v136;
          uint64_t v60 = 0x2E8BA2E8BA2E8BA3LL * (((char *)v53 - (_BYTE *)v136) >> 3);
          unint64_t v61 = v60 + 1;
          if (0x5D1745D1745D1746LL * ((v138 - (_BYTE *)v136) >> 3) > v61) {
            unint64_t v61 = 0x5D1745D1745D1746LL * ((v138 - (_BYTE *)v136) >> 3);
          }
          else {
            unint64_t v62 = v61;
          }
          if (v62)
          {
            uint64_t v63 = (char *)sub_100023598((uint64_t)&v138, v62);
            uint64_t v59 = v136;
            __int128 v53 = v137;
          }

          else
          {
            uint64_t v63 = 0LL;
          }

          __int16 v64 = &v63[88 * v60];
          __int128 v65 = *((_OWORD *)v52 + 3);
          *(_OWORD *)__int16 v64 = *v54;
          *((_OWORD *)v64 + 1) = v65;
          __int128 v66 = *((_OWORD *)v52 + 4);
          __int128 v67 = *((_OWORD *)v52 + 5);
          __int128 v68 = *((_OWORD *)v52 + 6);
          *((void *)v64 + 10) = v52[14];
          *((_OWORD *)v64 + 3) = v67;
          *((_OWORD *)v64 + 4) = v68;
          *((_OWORD *)v64 + 2) = v66;
          if (v53 == v59)
          {
            uint64_t v74 = &v63[88 * v60];
          }

          else
          {
            uint64_t v69 = &v63[88 * v60];
            do
            {
              __int128 v70 = *(_OWORD *)((char *)v53 - 88);
              *(_OWORD *)(v69 - 72) = *(_OWORD *)((char *)v53 - 72);
              *(_OWORD *)(v69 - 88) = v70;
              __int128 v71 = *(_OWORD *)((char *)v53 - 56);
              __int128 v72 = *(_OWORD *)((char *)v53 - 40);
              __int128 v73 = *(_OWORD *)((char *)v53 - 24);
              uint64_t v74 = v69 - 88;
              *((_DWORD *)v69 - 2) = *((_DWORD *)v53 - 2);
              *(_OWORD *)(v69 - 24) = v73;
              *(_OWORD *)(v69 - 40) = v72;
              *(_OWORD *)(v69 - 56) = v71;
              __int128 v53 = (_OWORD *)((char *)v53 - 88);
              v69 -= 88;
            }

            while (v53 != v59);
          }

          __int128 v53 = v64 + 88;
          uint64_t v136 = v74;
          unint64_t v137 = v64 + 88;
          uint64_t v138 = &v63[88 * v62];
          if (v59) {
            operator delete(v59);
          }
        }

        else
        {
          __int128 v55 = *((_OWORD *)v52 + 3);
          *__int128 v53 = *v54;
          v53[1] = v55;
          __int128 v56 = *((_OWORD *)v52 + 4);
          __int128 v57 = *((_OWORD *)v52 + 5);
          __int128 v58 = *((_OWORD *)v52 + 6);
          *((void *)v53 + 10) = v52[14];
          v53[3] = v57;
          v53[4] = v58;
          v53[2] = v56;
          __int128 v53 = (_OWORD *)((char *)v53 + 88);
        }

        unint64_t v137 = v53;
        uint64_t v75 = (void *)v52[1];
        if (v75)
        {
          do
          {
            double v76 = v75;
            uint64_t v75 = (void *)*v75;
          }

          while (v75);
        }

        else
        {
          do
          {
            double v76 = (void *)v52[2];
            BOOL v30 = *v76 == (void)v52;
            int v52 = v76;
          }

          while (!v30);
        }

        int v52 = v76;
      }

      while (v76 != (void *)(a1 + 296));
    }

    uint64_t v77 = *(void **)(a1 + 416);
    if (v77 != (void *)(a1 + 424))
    {
      unsigned int v78 = v131;
      do
      {
        if (v78 >= v132)
        {
          uint64_t v79 = (char *)v130;
          uint64_t v80 = (v78 - (_BYTE *)v130) >> 3;
          unint64_t v81 = v80 + 1;
          uint64_t v82 = v132 - (_BYTE *)v130;
          if ((v132 - (_BYTE *)v130) >> 2 > v81) {
            unint64_t v81 = v82 >> 2;
          }
          else {
            unint64_t v83 = v81;
          }
          if (v83)
          {
            __int128 v84 = (char *)sub_1000071BC((uint64_t)&v132, v83);
            uint64_t v79 = (char *)v130;
            unsigned int v78 = v131;
          }

          else
          {
            __int128 v84 = 0LL;
          }

          uint64_t v85 = &v84[8 * v80];
          *(void *)uint64_t v85 = v77[4];
          uint64_t v86 = v85 + 8;
          while (v78 != v79)
          {
            uint64_t v87 = *((void *)v78 - 1);
            v78 -= 8;
            *((void *)v85 - 1) = v87;
            v85 -= 8;
          }

          v130 = v85;
          v131 = v86;
          uint64_t v132 = &v84[8 * v83];
          if (v79) {
            operator delete(v79);
          }
          unsigned int v78 = v86;
        }

        else
        {
          *(void *)unsigned int v78 = v77[4];
          v78 += 8;
        }

        v131 = v78;
        __int128 v88 = (void *)v77[1];
        if (v88)
        {
          do
          {
            double v89 = v88;
            __int128 v88 = (void *)*v88;
          }

          while (v88);
        }

        else
        {
          do
          {
            double v89 = (void *)v77[2];
            BOOL v30 = *v89 == (void)v77;
            uint64_t v77 = v89;
          }

          while (!v30);
        }

        uint64_t v77 = v89;
      }

      while (v89 != (void *)(a1 + 424));
    }

    uint64_t v90 = *(void **)(a1 + 328);
    if (v90 != (void *)(a1 + 336))
    {
      __int128 v91 = v134;
      do
      {
        double v92 = v90 + 4;
        if (v91 >= v135)
        {
          __int128 v97 = (char *)v133;
          unint64_t v98 = 0xAAAAAAAAAAAAAAABLL * ((v91 - (_BYTE *)v133) >> 5);
          unint64_t v99 = v98 + 1;
          if (v98 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          if (0x5555555555555556LL * ((v135 - (_BYTE *)v133) >> 5) > v99) {
            unint64_t v99 = 0x5555555555555556LL * ((v135 - (_BYTE *)v133) >> 5);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((v135 - (_BYTE *)v133) >> 5) >= 0x155555555555555LL) {
            unint64_t v100 = 0x2AAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v100 = v99;
          }
          if (v100)
          {
            unint64_t v101 = (char *)sub_1003F6AEC((uint64_t)&v135, v100);
            __int128 v97 = (char *)v133;
            __int128 v91 = v134;
          }

          else
          {
            unint64_t v101 = 0LL;
          }

          int64_t v102 = &v101[96 * v98];
          __int128 v103 = *((_OWORD *)v90 + 3);
          *(_OWORD *)int64_t v102 = *v92;
          *((_OWORD *)v102 + 1) = v103;
          __int128 v104 = *((_OWORD *)v90 + 4);
          __int128 v105 = *((_OWORD *)v90 + 5);
          __int128 v106 = *((_OWORD *)v90 + 7);
          *((_OWORD *)v102 + 4) = *((_OWORD *)v90 + 6);
          *((_OWORD *)v102 + 5) = v106;
          *((_OWORD *)v102 + 2) = v104;
          *((_OWORD *)v102 + 3) = v105;
          if (v91 == v97)
          {
            __int128 v112 = &v101[96 * v98];
          }

          else
          {
            __int128 v107 = &v101[96 * v98];
            do
            {
              __int128 v108 = *((_OWORD *)v91 - 5);
              *((_OWORD *)v107 - 6) = *((_OWORD *)v91 - 6);
              *((_OWORD *)v107 - 5) = v108;
              __int128 v109 = *((_OWORD *)v91 - 4);
              __int128 v110 = *((_OWORD *)v91 - 3);
              __int128 v111 = *((_OWORD *)v91 - 2);
              __int128 v112 = v107 - 96;
              *(_OWORD *)(v107 - 20) = *(_OWORD *)(v91 - 20);
              *((_OWORD *)v107 - 3) = v110;
              *((_OWORD *)v107 - 2) = v111;
              *((_OWORD *)v107 - 4) = v109;
              v91 -= 96;
              v107 -= 96;
            }

            while (v91 != v97);
          }

          __int128 v91 = v102 + 96;
          __int128 v133 = v112;
          v134 = v102 + 96;
          v135 = &v101[96 * v100];
          if (v97) {
            operator delete(v97);
          }
        }

        else
        {
          __int128 v93 = *((_OWORD *)v90 + 3);
          *(_OWORD *)__int128 v91 = *v92;
          *((_OWORD *)v91 + 1) = v93;
          __int128 v94 = *((_OWORD *)v90 + 4);
          __int128 v95 = *((_OWORD *)v90 + 5);
          __int128 v96 = *((_OWORD *)v90 + 7);
          *((_OWORD *)v91 + 4) = *((_OWORD *)v90 + 6);
          *((_OWORD *)v91 + 5) = v96;
          *((_OWORD *)v91 + 2) = v94;
          *((_OWORD *)v91 + 3) = v95;
          v91 += 96;
        }

        v134 = v91;
        uint64_t v113 = (void *)v90[1];
        if (v113)
        {
          do
          {
            unsigned int v114 = v113;
            uint64_t v113 = (void *)*v113;
          }

          while (v113);
        }

        else
        {
          do
          {
            unsigned int v114 = (void *)v90[2];
            BOOL v30 = *v114 == (void)v90;
            uint64_t v90 = v114;
          }

          while (!v30);
        }

        uint64_t v90 = v114;
      }

      while (v114 != (void *)(a1 + 336));
    }

    if (__p != v146 || v142 != v143 || v130 != v131 || v136 != v137 || v139 != v140 || v133 != v134)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v115 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        int v116 = *(_DWORD *)(a1 + 352);
        *(_DWORD *)std::stringbuf::string_type buf = 134219520;
        *(void *)&uint8_t buf[4] = (v146 - (_BYTE *)__p) >> 5;
        __int16 v165 = 2048;
        uint64_t v166 = (v143 - (_BYTE *)v142) >> 5;
        __int16 v167 = 2048;
        unint64_t v168 = 0x84BDA12F684BDA13LL * ((uint64_t)(v140 - v139) >> 4);
        __int16 v169 = 2048;
        uint64_t v170 = 0x2E8BA2E8BA2E8BA3LL * ((v137 - (_BYTE *)v136) >> 3);
        __int16 v171 = 2048;
        unint64_t v172 = 0xAAAAAAAAAAAAAAABLL * ((v134 - (_BYTE *)v133) >> 5);
        __int16 v173 = 2048;
        uint64_t v174 = (v131 - (_BYTE *)v130) >> 3;
        __int16 v175 = 1024;
        int v176 = v116;
        _os_log_impl( (void *)&_mh_execute_header,  v115,  OS_LOG_TYPE_DEBUG,  "NETWORK: re-querying cells, %lu, %lu, %lu, %lu, %lu, wifis, %lu, retry count, %d",  buf,  0x44u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        int v127 = *(_DWORD *)(a1 + 352);
        int v148 = 134219520;
        uint64_t v149 = (v146 - (_BYTE *)__p) >> 5;
        __int16 v150 = 2048;
        uint64_t v151 = (v143 - (_BYTE *)v142) >> 5;
        __int16 v152 = 2048;
        unint64_t v153 = 0x84BDA12F684BDA13LL * ((uint64_t)(v140 - v139) >> 4);
        __int16 v154 = 2048;
        uint64_t v155 = 0x2E8BA2E8BA2E8BA3LL * ((v137 - (_BYTE *)v136) >> 3);
        __int16 v156 = 2048;
        unint64_t v157 = 0xAAAAAAAAAAAAAAABLL * ((v134 - (_BYTE *)v133) >> 5);
        __int16 v158 = 2048;
        uint64_t v159 = (v131 - (_BYTE *)v130) >> 3;
        __int16 v160 = 1024;
        int v161 = v127;
        LODWORD(v129) = 68;
        double v128 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: re-querying cells, %lu, %lu, %lu, %lu, %lu, wifis, %lu, retry count, %d",  &v148,  v129,  v130,  v131,  v132,  v133,  (_DWORD)v134);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNetworkLocationProvider::requeryLocations()", "%s\n", v128);
        if (v128 != buf) {
          free(v128);
        }
      }

      sub_10074FD4C(&v148, 1);
      *(_DWORD *)std::stringbuf::string_type buf = v148;
      *(_DWORD *)(a1 + 520) = sub_1004B35C4(a1, &__p, &v142, &v139, &v136, &v133, &v130, (uint64_t)buf);
    }

    *(CFAbsoluteTime *)(a1 + 368) = CFAbsoluteTimeGetCurrent();
    if (v130)
    {
      v131 = (char *)v130;
      operator delete(v130);
    }

    if (v133)
    {
      v134 = (char *)v133;
      operator delete(v133);
    }

    if (v136)
    {
      unint64_t v137 = v136;
      operator delete(v136);
    }

    *(void *)std::stringbuf::string_type buf = &v139;
    sub_1003EE02C((void ***)buf);
    if (v142)
    {
      v143 = (char *)v142;
      operator delete(v142);
    }

    if (__p)
    {
      uint64_t v146 = (char *)__p;
      operator delete(__p);
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    std::stringbuf::string_type v117 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v117,  OS_LOG_TYPE_DEFAULT,  "#Warning NETWORK: Location Services disabled, not querying location",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v148) = 0;
      LODWORD(v129) = 2;
      int v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning NETWORK: Location Services disabled, not querying location",  &v148,  v129);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNetworkLocationProvider::requeryLocations()", "%s\n", v12);
      goto LABEL_193;
    }
  }

void sub_1004B4DBC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, void *a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, char *a39)
{
  if (__p) {
    operator delete(__p);
  }
  if (a14) {
    operator delete(a14);
  }
  if (a17) {
    operator delete(a17);
  }
  a39 = &a20;
  sub_1003EE02C((void ***)&a39);
  if (a23)
  {
    a24 = (uint64_t)a23;
    operator delete(a23);
  }

  if (a26)
  {
    a27 = (uint64_t)a26;
    operator delete(a26);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1004B4E9C(void *a1, uint64_t a2, int a3)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  unint64_t v5 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    uint64_t v27 = a1;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "CELL_LOC: start sequence, This, %p", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v24 = 134217984;
    BOOL v25 = a1;
    uint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: start sequence, This, %p",  &v24);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCellLocationSeries(CLNetworkLocationRequester *, BOOL, CLNetwor kLocationRequester::RequestType, int)",  "%s\n",  v20);
  }

  if (a3)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v6 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "CELL_LOC: beginning cell database", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v24) = 0;
      unint64_t v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: beginning cell database",  &v24,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCellLocationSeries(CLNetworkLocationRequester *, BOOL, CLNetw orkLocationRequester::RequestType, int)",  "%s\n",  v21);
    }

    uint64_t v7 = sub_1004A177C((uint64_t)a1);
    uint64_t v8 = sub_1004A16B4((uint64_t)a1);
    uint64_t v9 = sub_1004A1844((uint64_t)a1);
    uint64_t v10 = sub_1004A190C((uint64_t)a1);
    uint64_t v11 = sub_1004A19DC((uint64_t)a1);
    sub_100400C64(*(void *)(v7 + 32));
    sub_100400C64(*(void *)(v8 + 32));
    sub_100400C64(*(void *)(v9 + 32));
    sub_100400C64(*(void *)(v10 + 32));
    return sub_100400C64(*(void *)(v11 + 32));
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v13 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v14 = (void *)(a1[28] + a1[23] + a1[33] + a1[38] + a1[43]);
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      uint64_t v27 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: ending cell database (%lu cells still pending)",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      int v22 = (void *)(a1[28] + a1[23] + a1[33] + a1[38] + a1[43]);
      int v24 = 134217984;
      BOOL v25 = v22;
      __int128 v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: ending cell database (%lu cells still pending)",  &v24);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCellLocationSeries(CLNetworkLocationRequester *, BOOL, CLNetw orkLocationRequester::RequestType, int)",  "%s\n",  v23);
    }

    uint64_t v15 = sub_1004A177C((uint64_t)a1);
    sub_100400C6C(*(void *)(v15 + 32));
    uint64_t v16 = sub_1004A16B4((uint64_t)a1);
    sub_100400C6C(*(void *)(v16 + 32));
    uint64_t v17 = sub_1004A1844((uint64_t)a1);
    sub_100400C6C(*(void *)(v17 + 32));
    uint64_t v18 = sub_1004A190C((uint64_t)a1);
    sub_100400C6C(*(void *)(v18 + 32));
    uint64_t v19 = sub_1004A19DC((uint64_t)a1);
    return sub_100400C6C(*(void *)(v19 + 32));
  }

void sub_1004B53B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (int *)sub_1004AA0E0((uint64_t)v34);
  uint64_t v7 = sub_1004A16B4(a1);
  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_10183C3A0);
  }
  uint64_t v8 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v9 = *(void *)(a4 + 4);
    uint64_t v10 = *(void *)(a4 + 12);
    uint64_t v11 = *(void *)(a4 + 20);
    int v12 = *v6;
    int v13 = v6[1];
    int v14 = v6[2];
    int v15 = v6[3];
    int v16 = *(_DWORD *)(a4 + 84);
    int v17 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)std::stringbuf::string_type buf = 136317954;
    __int128 v71 = "Network-Cell";
    __int16 v72 = 1024;
    int v73 = 1;
    __int16 v74 = 2048;
    uint64_t v75 = v9;
    __int16 v76 = 2048;
    uint64_t v77 = v10;
    __int16 v78 = 2048;
    uint64_t v79 = v11;
    __int16 v80 = 1024;
    int v81 = v12;
    __int16 v82 = 1024;
    int v83 = v13;
    __int16 v84 = 1024;
    int v85 = v14;
    __int16 v86 = 1024;
    int v87 = v15;
    __int16 v88 = 1024;
    int v89 = v16;
    __int16 v90 = 1024;
    int v91 = v17;
    __int16 v92 = 1024;
    int v93 = -1;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,Confidence,%d,Count,%d,lock,%d",  buf,  0x5Au);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183C3A0);
    }
    uint64_t v21 = *(void *)(a4 + 4);
    uint64_t v22 = *(void *)(a4 + 12);
    uint64_t v23 = *(void *)(a4 + 20);
    int v24 = *v6;
    int v25 = v6[1];
    int v26 = v6[2];
    int v27 = v6[3];
    int v28 = *(_DWORD *)(a4 + 84);
    int v29 = *(_DWORD *)(a1 + 384);
    int v46 = 136317954;
    __int16 v47 = "Network-Cell";
    __int16 v48 = 1024;
    int v49 = 1;
    __int16 v50 = 2048;
    uint64_t v51 = v21;
    __int16 v52 = 2048;
    uint64_t v53 = v22;
    __int16 v54 = 2048;
    uint64_t v55 = v23;
    __int16 v56 = 1024;
    int v57 = v24;
    __int16 v58 = 1024;
    int v59 = v25;
    __int16 v60 = 1024;
    int v61 = v26;
    __int16 v62 = 1024;
    int v63 = v27;
    __int16 v64 = 1024;
    int v65 = v28;
    __int16 v66 = 1024;
    int v67 = v29;
    __int16 v68 = 1024;
    int v69 = -1;
    BOOL v30 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,Confidence,%d,Count,%d,lock,%d",  (const char *)&v46,  90,  v33,  v34[0],  v34[1],  v35,  v36,  v37,  v38,  v39,  v40,  v41);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterScdmaCellLocation(CLNetworkLocationRequester *, const CLTelepho nyService_Type::ScdmaCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v30);
  }

  uint64_t v18 = (uint64_t *)sub_1004C2CAC(a1 + 208, v6);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v19 = sub_1004AA0E0((uint64_t)v34);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v20 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v46) = 0;
      LODWORD(v32) = 2;
      uint64_t v31 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  &v46,  v32);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterScdmaCellLocation(CLNetworkLocationRequester *, const CLTelep honyService_Type::ScdmaCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v31);
    }
  }

  if ((uint64_t *)(a1 + 216) != v18)
  {
    sub_1000087E8((uint64_t **)(a1 + 208), v18);
    operator delete(v18);
  }

  if (v45 < 0) {
    operator delete(__p);
  }
  if (v42)
  {
    __int16 v43 = v42;
    operator delete(v42);
  }

void sub_1004B5894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1004B58C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (int *)sub_1004AA0E0((uint64_t)v25);
  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_10183C3A0);
  }
  unint64_t v5 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *v4;
    int v7 = v4[1];
    int v8 = v4[2];
    int v9 = v4[3];
    *(_DWORD *)std::stringbuf::string_type buf = 136317186;
    uint64_t v53 = "Network-Cell";
    uint64_t v54 = 0x800000000000400LL;
    *(void *)uint64_t v55 = 0LL;
    *(_WORD *)&v55[8] = 2048;
    *(void *)&v55[10] = 0LL;
    *(_WORD *)&v55[18] = 2048;
    *(void *)&v55[20] = 0xBFF0000000000000LL;
    *(_WORD *)&v55[28] = 1024;
    *(_DWORD *)&v55[30] = v6;
    *(_WORD *)&v55[34] = 1024;
    *(_DWORD *)&v55[36] = v7;
    *(_WORD *)&v55[40] = 1024;
    *(_DWORD *)&v55[42] = v8;
    *(_WORD *)&v55[46] = 1024;
    LODWORD(v56) = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,",  buf,  0x48u);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183C3A0);
    }
    int v17 = *v4;
    int v18 = v4[1];
    int v19 = v4[2];
    int v20 = v4[3];
    int v34 = 136317186;
    int v35 = "Network-Cell";
    __int16 v36 = 1024;
    int v37 = 0;
    __int16 v38 = 2048;
    uint64_t v39 = 0LL;
    __int16 v40 = 2048;
    uint64_t v41 = 0LL;
    __int16 v42 = 2048;
    unint64_t v43 = 0xBFF0000000000000LL;
    __int16 v44 = 1024;
    int v45 = v17;
    __int16 v46 = 1024;
    int v47 = v18;
    __int16 v48 = 1024;
    int v49 = v19;
    __int16 v50 = 1024;
    int v51 = v20;
    uint64_t v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,",  (const char *)&v34,  72,  v24,  v25[0],  v25[1],  v26,  v27,  v28,  v29);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterScdmaCellLocationUnknown(CLNetworkLocationRequester *, const CL TelephonyService_Type::ScdmaCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v21);
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v54 = 0LL;
    uint64_t v53 = 0LL;
    *(_OWORD *)uint64_t v55 = xmmword_1012E0070;
    __asm { FMOV            V0.2D, #-1.0 }

    *(_OWORD *)&v55[16] = _Q0;
    *(_OWORD *)&v55[32] = _Q0;
    unint64_t v56 = 0xBFF0000000000000LL;
    *(_DWORD *)std::stringbuf::string_type buf = 0xFFFF;
    int v58 = 0;
    uint64_t v61 = 0LL;
    unint64_t v59 = 0xBFF0000000000000LL;
    uint64_t v60 = 0LL;
    unint64_t v63 = 0xBFF0000000000000LL;
    int v62 = 0;
    int v64 = 0x7FFFFFFF;
    uint64_t v67 = 0LL;
    uint64_t v65 = 0LL;
    uint64_t v66 = 0LL;
    char v68 = 0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    uint64_t v15 = sub_1004A16B4(a1);
    sub_10047EDB8(*(void *)(v15 + 32), (uint64_t)v4, (uint64_t)buf);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v16 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v34) = 0;
      LODWORD(v23) = 2;
      uint64_t v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  &v34,  v23);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterScdmaCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::ScdmaCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v22);
    }
  }

  sub_1004C2EE4((uint64_t **)(a1 + 208), v4);
  if (v33 < 0) {
    operator delete(__p);
  }
  if (v30)
  {
    uint64_t v31 = v30;
    operator delete(v30);
  }

void sub_1004B5D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1004B5D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = (int *)sub_1004A932C((uint64_t)v34);
  uint64_t v7 = sub_1004A177C(a1);
  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_10183C3A0);
  }
  int v8 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v9 = *(void *)(a4 + 4);
    uint64_t v10 = *(void *)(a4 + 12);
    uint64_t v11 = *(void *)(a4 + 20);
    int v12 = *v6;
    int v13 = v6[1];
    int v14 = v6[2];
    int v15 = v6[3];
    int v16 = *(_DWORD *)(a4 + 84);
    int v17 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)std::stringbuf::string_type buf = 136317954;
    __int128 v71 = "Network-Cell";
    __int16 v72 = 1024;
    int v73 = 1;
    __int16 v74 = 2048;
    uint64_t v75 = v9;
    __int16 v76 = 2048;
    uint64_t v77 = v10;
    __int16 v78 = 2048;
    uint64_t v79 = v11;
    __int16 v80 = 1024;
    int v81 = v12;
    __int16 v82 = 1024;
    int v83 = v13;
    __int16 v84 = 1024;
    int v85 = v14;
    __int16 v86 = 1024;
    int v87 = v15;
    __int16 v88 = 1024;
    int v89 = v16;
    __int16 v90 = 1024;
    int v91 = v17;
    __int16 v92 = 1024;
    int v93 = -1;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,Confidence,%d,Count,%d,lock,%d",  buf,  0x5Au);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183C3A0);
    }
    uint64_t v21 = *(void *)(a4 + 4);
    uint64_t v22 = *(void *)(a4 + 12);
    uint64_t v23 = *(void *)(a4 + 20);
    int v24 = *v6;
    int v25 = v6[1];
    int v26 = v6[2];
    int v27 = v6[3];
    int v28 = *(_DWORD *)(a4 + 84);
    int v29 = *(_DWORD *)(a1 + 384);
    int v46 = 136317954;
    int v47 = "Network-Cell";
    __int16 v48 = 1024;
    int v49 = 1;
    __int16 v50 = 2048;
    uint64_t v51 = v21;
    __int16 v52 = 2048;
    uint64_t v53 = v22;
    __int16 v54 = 2048;
    uint64_t v55 = v23;
    __int16 v56 = 1024;
    int v57 = v24;
    __int16 v58 = 1024;
    int v59 = v25;
    __int16 v60 = 1024;
    int v61 = v26;
    __int16 v62 = 1024;
    int v63 = v27;
    __int16 v64 = 1024;
    int v65 = v28;
    __int16 v66 = 1024;
    int v67 = v29;
    __int16 v68 = 1024;
    int v69 = -1;
    BOOL v30 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,Confidence,%d,Count,%d,lock,%d",  (const char *)&v46,  90,  v33,  v34[0],  v34[1],  v35,  v36,  v37,  v38,  v39,  v40,  v41);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCellLocation(CLNetworkLocationRequester *, const CLTelephonySer vice_Type::Cell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v30);
  }

  int v18 = (uint64_t *)sub_1004C2CAC(a1 + 168, v6);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v19 = sub_1004A932C((uint64_t)v34);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v20 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v46) = 0;
      LODWORD(v32) = 2;
      uint64_t v31 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  &v46,  v32);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCellLocation(CLNetworkLocationRequester *, const CLTelephonyS ervice_Type::Cell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v31);
    }
  }

  if ((uint64_t *)(a1 + 176) != v18)
  {
    sub_1000087E8((uint64_t **)(a1 + 168), v18);
    operator delete(v18);
  }

  if (v45 < 0) {
    operator delete(__p);
  }
  if (v42)
  {
    unint64_t v43 = v42;
    operator delete(v42);
  }

void sub_1004B6268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1004B6298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (int *)sub_1004A932C((uint64_t)v25);
  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_10183C3A0);
  }
  unint64_t v5 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *v4;
    int v7 = v4[1];
    int v8 = v4[2];
    int v9 = v4[3];
    *(_DWORD *)std::stringbuf::string_type buf = 136317186;
    uint64_t v53 = "Network-Cell";
    uint64_t v54 = 0x800000000000400LL;
    *(void *)uint64_t v55 = 0LL;
    *(_WORD *)&v55[8] = 2048;
    *(void *)&v55[10] = 0LL;
    *(_WORD *)&v55[18] = 2048;
    *(void *)&v55[20] = 0xBFF0000000000000LL;
    *(_WORD *)&v55[28] = 1024;
    *(_DWORD *)&v55[30] = v6;
    *(_WORD *)&v55[34] = 1024;
    *(_DWORD *)&v55[36] = v7;
    *(_WORD *)&v55[40] = 1024;
    *(_DWORD *)&v55[42] = v8;
    *(_WORD *)&v55[46] = 1024;
    LODWORD(v56) = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,",  buf,  0x48u);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183C3A0);
    }
    int v17 = *v4;
    int v18 = v4[1];
    int v19 = v4[2];
    int v20 = v4[3];
    int v34 = 136317186;
    int v35 = "Network-Cell";
    __int16 v36 = 1024;
    int v37 = 0;
    __int16 v38 = 2048;
    uint64_t v39 = 0LL;
    __int16 v40 = 2048;
    uint64_t v41 = 0LL;
    __int16 v42 = 2048;
    unint64_t v43 = 0xBFF0000000000000LL;
    __int16 v44 = 1024;
    int v45 = v17;
    __int16 v46 = 1024;
    int v47 = v18;
    __int16 v48 = 1024;
    int v49 = v19;
    __int16 v50 = 1024;
    int v51 = v20;
    uint64_t v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,",  (const char *)&v34,  72,  v24,  v25[0],  v25[1],  v26,  v27,  v28,  v29);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCellLocationUnknown(CLNetworkLocationRequester *, const CLTelep honyService_Type::Cell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v21);
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v54 = 0LL;
    uint64_t v53 = 0LL;
    *(_OWORD *)uint64_t v55 = xmmword_1012E0070;
    __asm { FMOV            V0.2D, #-1.0 }

    *(_OWORD *)&v55[16] = _Q0;
    *(_OWORD *)&v55[32] = _Q0;
    unint64_t v56 = 0xBFF0000000000000LL;
    *(_DWORD *)std::stringbuf::string_type buf = 0xFFFF;
    int v58 = 0;
    uint64_t v61 = 0LL;
    unint64_t v59 = 0xBFF0000000000000LL;
    uint64_t v60 = 0LL;
    unint64_t v63 = 0xBFF0000000000000LL;
    int v62 = 0;
    int v64 = 0x7FFFFFFF;
    uint64_t v67 = 0LL;
    uint64_t v65 = 0LL;
    uint64_t v66 = 0LL;
    char v68 = 0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    uint64_t v15 = sub_1004A177C(a1);
    sub_10047EDB8(*(void *)(v15 + 32), (uint64_t)v4, (uint64_t)buf);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v16 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v34) = 0;
      LODWORD(v23) = 2;
      uint64_t v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  &v34,  v23);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCellLocationUnknown(CLNetworkLocationRequester *, const CLTel ephonyService_Type::Cell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v22);
    }
  }

  sub_1004C2EE4((uint64_t **)(a1 + 168), v4);
  if (v33 < 0) {
    operator delete(__p);
  }
  if (v30)
  {
    uint64_t v31 = v30;
    operator delete(v30);
  }

void sub_1004B6730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1004B675C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = (unsigned int *)sub_1004A8578((uint64_t)v47);
  sub_1003D13B8(v6, &__p);
  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_10183C3A0);
  }
  int v7 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *(void *)(a4 + 4);
    uint64_t v9 = *(void *)(a4 + 12);
    uint64_t v10 = *(void *)(a4 + 20);
    unsigned int v11 = *v6;
    unsigned int v12 = v6[58];
    unsigned int v13 = v6[8];
    unsigned int v14 = v6[9];
    unsigned int v15 = v6[11];
    int v16 = *(_DWORD *)(a4 + 84);
    int v17 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)std::stringbuf::string_type buf = 136318210;
    int v73 = "Network-Cell";
    __int16 v74 = 1024;
    *(_DWORD *)uint64_t v75 = 1;
    *(_WORD *)&v75[4] = 2048;
    *(void *)&v75[6] = v8;
    *(_WORD *)&v75[14] = 2048;
    *(void *)&v75[16] = v9;
    *(_WORD *)&v75[24] = 2048;
    *(void *)&v75[26] = v10;
    __int16 v76 = 1024;
    unsigned int v77 = v11;
    __int16 v78 = 1024;
    unsigned int v79 = v12;
    __int16 v80 = 1024;
    unsigned int v81 = v13;
    __int16 v82 = 1024;
    unsigned int v83 = v14;
    __int16 v84 = 1024;
    unsigned int v85 = v15;
    __int16 v86 = 1024;
    int v87 = v16;
    __int16 v88 = 1024;
    int v89 = v17;
    __int16 v90 = 1024;
    int v91 = -1;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,SID,%03d,NID,%03d,BSID,%03d,Confidence,%d,Count,%d,lock,%d",  buf,  0x60u);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183C3A0);
    }
    uint64_t v26 = *(void *)(a4 + 4);
    uint64_t v27 = *(void *)(a4 + 12);
    uint64_t v28 = *(void *)(a4 + 20);
    unsigned int v29 = *v6;
    unsigned int v30 = v6[58];
    unsigned int v31 = v6[8];
    unsigned int v32 = v6[9];
    unsigned int v33 = v6[11];
    int v34 = *(_DWORD *)(a4 + 84);
    int v35 = *(_DWORD *)(a1 + 384);
    int v52 = 136318210;
    uint64_t v53 = "Network-Cell";
    __int16 v54 = 1024;
    *(_DWORD *)uint64_t v55 = 1;
    *(_WORD *)&v55[4] = 2048;
    *(void *)&v55[6] = v26;
    *(_WORD *)&v55[14] = 2048;
    *(void *)&v55[16] = v27;
    *(_WORD *)&v55[24] = 2048;
    *(void *)&v55[26] = v28;
    __int16 v56 = 1024;
    unsigned int v57 = v29;
    __int16 v58 = 1024;
    unsigned int v59 = v30;
    __int16 v60 = 1024;
    unsigned int v61 = v31;
    __int16 v62 = 1024;
    unsigned int v63 = v32;
    __int16 v64 = 1024;
    unsigned int v65 = v33;
    __int16 v66 = 1024;
    int v67 = v34;
    __int16 v68 = 1024;
    int v69 = v35;
    __int16 v70 = 1024;
    int v71 = -1;
    __int16 v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,SID,%03d,NID,%03d,BSID,%03d,Confidence, %d,Count,%d,lock,%d",  (const char *)&v52,  96,  *(double *)&__p,  v45,  v46,  v47[0],  v47[2],  v47[4],  v47[6],  v47[8],  v47[10],  v47[12],  v47[14]);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCdmaCellLocation(CLNetworkLocationRequester *, const CLTelephon yService_Type::CdmaCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v36);
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  int v18 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    p_p = (const char *)&__p;
    if (v46 < 0.0) {
      p_p = (const char *)__p;
    }
    uint64_t v20 = *(void *)(a4 + 4);
    uint64_t v21 = *(void *)(a4 + 12);
    uint64_t v22 = *(void *)(a4 + 20);
    *(_DWORD *)std::stringbuf::string_type buf = 136315906;
    int v73 = p_p;
    __int16 v74 = 2048;
    *(void *)uint64_t v75 = v20;
    *(_WORD *)&v75[8] = 2048;
    *(void *)&v75[10] = v21;
    *(_WORD *)&v75[18] = 2048;
    *(void *)&v75[20] = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: server response cell(%s) loc (%lf %lf) acc(%lf)",  buf,  0x2Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v37 = (const char *)&__p;
    if (v46 < 0.0) {
      int v37 = (const char *)__p;
    }
    uint64_t v38 = *(void *)(a4 + 4);
    uint64_t v39 = *(void *)(a4 + 12);
    uint64_t v40 = *(void *)(a4 + 20);
    int v52 = 136315906;
    uint64_t v53 = v37;
    __int16 v54 = 2048;
    *(void *)uint64_t v55 = v38;
    *(_WORD *)&v55[8] = 2048;
    *(void *)&v55[10] = v39;
    *(_WORD *)&v55[18] = 2048;
    *(void *)&v55[20] = v40;
    LODWORD(v43) = 42;
    uint64_t v41 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CELL_LOC: server response cell(%s) loc (%lf %lf) acc(%lf)",  (const char *)&v52,  v43,  *(double *)&__p,  v45);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCdmaCellLocation(CLNetworkLocationRequester *, const CLTelephon yService_Type::CdmaCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v41);
  }

  uint64_t v23 = sub_1004C26E8(a1 + 248, (uint64_t)v6);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v24 = sub_1004A1844(a1);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v25 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v52) = 0;
      LODWORD(v43) = 2;
      __int16 v42 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  &v52,  *(void *)&v43);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCdmaCellLocation(CLNetworkLocationRequester *, const CLTeleph onyService_Type::CdmaCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v42);
    }
  }

  if ((uint64_t *)(a1 + 256) != v23)
  {
    sub_1000087E8((uint64_t **)(a1 + 248), v23);
    sub_1004C1C7C((uint64_t)(v23 + 4));
    operator delete(v23);
  }

  if (SHIBYTE(v46) < 0) {
    operator delete(__p);
  }
  if (v51 < 0) {
    operator delete(v50);
  }
  if (v48)
  {
    int v49 = v48;
    operator delete(v48);
  }

void sub_1004B6E20( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1003284E4((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1004B6E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (int *)sub_1004A8578((uint64_t)v27);
  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_10183C3A0);
  }
  unint64_t v5 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *v4;
    int v7 = v4[58];
    int v8 = v4[8];
    int v9 = v4[9];
    int v10 = v4[11];
    *(_DWORD *)std::stringbuf::string_type buf = 136317442;
    __int16 v58 = "Network-Cell";
    uint64_t v59 = 0x800000000000400LL;
    *(void *)__int16 v60 = 0LL;
    *(_WORD *)&v60[8] = 2048;
    *(void *)&v60[10] = 0LL;
    *(_WORD *)&v60[18] = 2048;
    *(void *)&v60[20] = 0xBFF0000000000000LL;
    *(_WORD *)&v60[28] = 1024;
    *(_DWORD *)&v60[30] = v6;
    *(_WORD *)&v60[34] = 1024;
    *(_DWORD *)&v60[36] = v7;
    *(_WORD *)&v60[40] = 1024;
    *(_DWORD *)&v60[42] = v8;
    *(_WORD *)&v60[46] = 1024;
    LODWORD(v61) = v9;
    WORD2(v61) = 1024;
    *(_DWORD *)((char *)&v61 + 6) = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,SID,%03d,NID,%03d,BSID,%03d",  buf,  0x4Eu);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183C3A0);
    }
    int v18 = *v4;
    int v19 = v4[58];
    int v20 = v4[8];
    int v21 = v4[9];
    int v22 = v4[11];
    int v37 = 136317442;
    uint64_t v38 = "Network-Cell";
    __int16 v39 = 1024;
    int v40 = 0;
    __int16 v41 = 2048;
    uint64_t v42 = 0LL;
    __int16 v43 = 2048;
    uint64_t v44 = 0LL;
    __int16 v45 = 2048;
    unint64_t v46 = 0xBFF0000000000000LL;
    __int16 v47 = 1024;
    int v48 = v18;
    __int16 v49 = 1024;
    int v50 = v19;
    __int16 v51 = 1024;
    int v52 = v20;
    __int16 v53 = 1024;
    int v54 = v21;
    __int16 v55 = 1024;
    int v56 = v22;
    uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,SID,%03d,NID,%03d,BSID,%03d",  (const char *)&v37,  78,  v26,  v27[0],  v27[1],  v28,  v29,  v30,  v31,  v32);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCdmaCellLocationUnknown(CLNetworkLocationRequester *, const CLT elephonyService_Type::CdmaCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v23);
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v59 = 0LL;
    __int16 v58 = 0LL;
    *(_OWORD *)__int16 v60 = xmmword_1012E0070;
    __asm { FMOV            V0.2D, #-1.0 }

    *(_OWORD *)&v60[16] = _Q0;
    *(_OWORD *)&v60[32] = _Q0;
    *(void *)&__int128 v61 = 0xBFF0000000000000LL;
    *(_DWORD *)std::stringbuf::string_type buf = 0xFFFF;
    int v62 = 0;
    uint64_t v65 = 0LL;
    unint64_t v63 = 0xBFF0000000000000LL;
    uint64_t v64 = 0LL;
    unint64_t v67 = 0xBFF0000000000000LL;
    int v66 = 0;
    int v68 = 0x7FFFFFFF;
    uint64_t v71 = 0LL;
    uint64_t v69 = 0LL;
    uint64_t v70 = 0LL;
    char v72 = 0;
    *((void *)&v61 + 1) = CFAbsoluteTimeGetCurrent();
    uint64_t v16 = sub_1004A1844(a1);
    sub_1006CEF5C(*(void *)(v16 + 32), v4, (uint64_t)buf);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v17 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v37) = 0;
      LODWORD(v25) = 2;
      uint64_t v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  &v37,  v25);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterCdmaCellLocationUnknown(CLNetworkLocationRequester *, const C LTelephonyService_Type::CdmaCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v24);
    }
  }

  sub_1004C2F34((uint64_t **)(a1 + 248), (uint64_t)v4);
  if (v36 < 0) {
    operator delete(__p);
  }
  if (v33)
  {
    int v34 = v33;
    operator delete(v33);
  }

void sub_1004B7324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1004B7350(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4)
{
  int v7 = (unsigned int *)sub_100450CD0((uint64_t)v61);
  sub_1003D2324(v7, v59);
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  int v9 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v10 = SHIBYTE(v60);
    unsigned int v11 = (void **)v59[0];
    sub_100832C64(a4, (std::stringbuf::string_type *)__p);
    unsigned int v12 = v59;
    if (v10 < 0) {
      unsigned int v12 = v11;
    }
    if ((v95 & 0x80000000LL) == 0) {
      unsigned int v13 = __p;
    }
    else {
      unsigned int v13 = *(_BYTE **)__p;
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136315394;
    *(void *)&uint8_t buf[4] = v12;
    __int16 v67 = 2080;
    *(void *)int v68 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: server response lte cell, %s, location, %s",  buf,  0x16u);
    if (SBYTE3(v95) < 0) {
      operator delete(*(void **)__p);
    }
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v33 = qword_101934A78;
    int v34 = SHIBYTE(v60);
    int v35 = (void **)v59[0];
    sub_100832C64(a4, (std::stringbuf::string_type *)buf);
    char v36 = v59;
    if (v34 < 0) {
      char v36 = v35;
    }
    if (v68[9] >= 0) {
      int v37 = buf;
    }
    else {
      int v37 = *(_BYTE **)buf;
    }
    int v87 = 136315394;
    __int16 v88 = v36;
    __int16 v89 = 2080;
    __int16 v90 = v37;
    uint64_t v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v33,  2LL,  "CELL_LOC: server response lte cell, %s, location, %s",  (const char *)&v87,  22);
    if ((v68[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLteCellLocation(CLNetworkLocationRequester *, const CLTelephony Service_Type::LteCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v38);
    p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    if (v38 != __p) {
      free(v38);
    }
  }

  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_10183C3A0);
  }
  unsigned int v14 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v15 = *(void *)(a4 + 4);
    uint64_t v16 = *(void *)(a4 + 12);
    uint64_t v17 = *(void *)(a4 + 20);
    unsigned int v18 = *v7;
    unsigned int v19 = v7[1];
    unsigned int v20 = v7[2];
    unsigned int v21 = v7[3];
    int v22 = *(_DWORD *)(a4 + 84);
    int v23 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)__int128 __p = 136317954;
    *(void *)&__p[4] = "Network-Cell";
    __int16 v92 = 1024;
    int v93 = 1;
    __int16 v94 = 2048;
    uint64_t v95 = v15;
    __int16 v96 = 2048;
    uint64_t v97 = v16;
    __int16 v98 = 2048;
    uint64_t v99 = v17;
    __int16 v100 = 1024;
    unsigned int v101 = v18;
    __int16 v102 = 1024;
    unsigned int v103 = v19;
    __int16 v104 = 1024;
    unsigned int v105 = v20;
    __int16 v106 = 1024;
    unsigned int v107 = v21;
    __int16 v108 = 1024;
    int v109 = v22;
    __int16 v110 = 1024;
    int v111 = v23;
    __int16 v112 = 1024;
    int v113 = -1;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%x,Confidence,%d,Count,%d,lock,%d",  __p,  0x5Au);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183C3A0);
    }
    uint64_t v39 = *(void *)(a4 + 4);
    uint64_t v40 = *(void *)(a4 + 12);
    uint64_t v41 = *(void *)(a4 + 20);
    unsigned int v42 = *v7;
    unsigned int v43 = v7[1];
    unsigned int v44 = v7[2];
    unsigned int v45 = v7[3];
    int v46 = *(_DWORD *)(a4 + 84);
    int v47 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)std::stringbuf::string_type buf = 136317954;
    *(void *)&uint8_t buf[4] = "Network-Cell";
    __int16 v67 = 1024;
    *(_DWORD *)int v68 = 1;
    *(_WORD *)&v68[4] = 2048;
    *(void *)&v68[6] = v39;
    __int16 v69 = 2048;
    uint64_t v70 = v40;
    __int16 v71 = 2048;
    uint64_t v72 = v41;
    __int16 v73 = 1024;
    unsigned int v74 = v42;
    __int16 v75 = 1024;
    unsigned int v76 = v43;
    __int16 v77 = 1024;
    unsigned int v78 = v44;
    __int16 v79 = 1024;
    unsigned int v80 = v45;
    __int16 v81 = 1024;
    int v82 = v46;
    __int16 v83 = 1024;
    int v84 = v47;
    __int16 v85 = 1024;
    int v86 = -1;
    int v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%x,Confidence,%d,Count,%d,lock,%d",  buf,  90,  *(double *)v59,  *(double *)&v59[1],  v60,  v61[0],  v61[2],  v61[4],  v61[6],  v61[8],  v61[10],  v61[12]);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLteCellLocation(CLNetworkLocationRequester *, const CLTelephony Service_Type::LteCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v48);
    if (v48 != __p) {
      free(v48);
    }
  }

  uint64_t v24 = (uint64_t *)sub_1004C2CAC(a1 + 288, v7);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v25 = sub_1004A190C(a1);
  }

  else
  {
    double v26 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 __p = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  __p,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      *(_WORD *)std::stringbuf::string_type buf = 0;
      LODWORD(v58) = 2;
      unsigned int v57 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  buf,  v58);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLteCellLocation(CLNetworkLocationRequester *, const CLTelepho nyService_Type::LteCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v57);
      if (v57 != __p) {
        free(v57);
      }
    }
  }

  uint64_t v27 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v28 = *(void *)(a1 + 304);
    sub_1003D2324(a3, __p);
    if ((v95 & 0x80000000LL) == 0) {
      int v29 = __p;
    }
    else {
      int v29 = *(_BYTE **)__p;
    }
    *(_DWORD *)std::stringbuf::string_type buf = 134218242;
    *(void *)&uint8_t buf[4] = v28;
    __int16 v67 = 2080;
    *(void *)int v68 = v29;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "NETWORK: pending, known, before, %lu, cell, %s",  buf,  0x16u);
    if (SBYTE3(v95) < 0) {
      operator delete(*(void **)__p);
    }
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    uint64_t v49 = qword_101934A78;
    int v50 = *(void ***)(a1 + 304);
    sub_1003D2324(a3, buf);
    if (v68[9] >= 0) {
      __int16 v51 = buf;
    }
    else {
      __int16 v51 = *(_BYTE **)buf;
    }
    int v87 = 134218242;
    __int16 v88 = v50;
    __int16 v89 = 2080;
    __int16 v90 = v51;
    LODWORD(v58) = 22;
    int v52 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v49,  2LL,  "NETWORK: pending, known, before, %lu, cell, %s",  &v87,  v58);
    if ((v68[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLteCellLocation(CLNetworkLocationRequester *, const CLTelephony Service_Type::LteCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v52);
    p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    if (v52 != __p) {
      free(v52);
    }
  }

  if ((uint64_t *)(a1 + 296) != v24)
  {
    sub_1000087E8((uint64_t **)(a1 + 288), v24);
    operator delete(v24);
  }

  int v30 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v31 = *(void *)(a1 + 304);
    sub_1003D2324(v7, __p);
    int v32 = (v95 & 0x80000000LL) == 0 ? __p : *(_BYTE **)__p;
    *(_DWORD *)std::stringbuf::string_type buf = 134218242;
    *(void *)&uint8_t buf[4] = v31;
    __int16 v67 = 2080;
    *(void *)int v68 = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "NETWORK: pending, known, after, %lu, cell, %s",  buf,  0x16u);
    if (SBYTE3(v95) < 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    uint64_t v53 = qword_101934A78;
    int v54 = *(void ***)(a1 + 304);
    sub_1003D2324(v7, buf);
    if (v68[9] >= 0) {
      __int16 v55 = buf;
    }
    else {
      __int16 v55 = *(_BYTE **)buf;
    }
    int v87 = 134218242;
    __int16 v88 = v54;
    __int16 v89 = 2080;
    __int16 v90 = v55;
    LODWORD(v58) = 22;
    int v56 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v53,  2LL,  "NETWORK: pending, known, after, %lu, cell, %s",  &v87,  v58);
    if ((v68[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLteCellLocation(CLNetworkLocationRequester *, const CLTelephony Service_Type::LteCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v56);
    if (v56 != __p) {
      free(v56);
    }
  }

  if (SHIBYTE(v60) < 0) {
    operator delete(v59[0]);
  }
  if (v65 < 0) {
    operator delete(v64);
  }
  if (v62)
  {
    unint64_t v63 = v62;
    operator delete(v62);
  }

void sub_1004B7DBC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1003284E4((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1004B7E28(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  unint64_t v5 = (unsigned int *)sub_100450CD0((uint64_t)v40);
  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_10183C3A0);
  }
  int v6 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v7 = *v5;
    unsigned int v8 = v5[1];
    unsigned int v9 = v5[2];
    unsigned int v10 = v5[3];
    *(_DWORD *)std::stringbuf::string_type buf = 136317186;
    *(void *)&uint8_t buf[4] = "Network-Cell";
    uint64_t v69 = 0x800000000000400LL;
    *(void *)uint64_t v70 = 0LL;
    *(_WORD *)&v70[8] = 2048;
    *(void *)&v70[10] = 0LL;
    *(_WORD *)&v70[18] = 2048;
    *(void *)&v70[20] = 0xBFF0000000000000LL;
    *(_WORD *)&v70[28] = 1024;
    *(_DWORD *)&v70[30] = v7;
    *(_WORD *)&v70[34] = 1024;
    *(_DWORD *)&v70[36] = v8;
    *(_WORD *)&v70[40] = 1024;
    *(_DWORD *)&v70[42] = v9;
    *(_WORD *)&v70[46] = 1024;
    LODWORD(v71) = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%x,",  buf,  0x48u);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183C3A0);
    }
    unsigned int v24 = *v5;
    unsigned int v25 = v5[1];
    unsigned int v26 = v5[2];
    unsigned int v27 = v5[3];
    *(_DWORD *)uint64_t v53 = 136317186;
    *(void *)&v53[4] = "Network-Cell";
    __int16 v54 = 1024;
    *(_DWORD *)__int16 v55 = 0;
    *(_WORD *)&v55[4] = 2048;
    *(void *)&v55[6] = 0LL;
    __int16 v56 = 2048;
    uint64_t v57 = 0LL;
    __int16 v58 = 2048;
    unint64_t v59 = 0xBFF0000000000000LL;
    __int16 v60 = 1024;
    unsigned int v61 = v24;
    __int16 v62 = 1024;
    unsigned int v63 = v25;
    __int16 v64 = 1024;
    unsigned int v65 = v26;
    __int16 v66 = 1024;
    unsigned int v67 = v27;
    uint64_t v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%x,",  v53,  72,  v39,  v40[0],  v40[1],  v41,  v42,  v43,  v44);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown(CLNetworkLocationRequester *, const CLTe lephonyService_Type::LteCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v28);
    if (v28 != buf) {
      free(v28);
    }
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v69 = 0LL;
    *(void *)&uint8_t buf[4] = 0LL;
    *(_OWORD *)uint64_t v70 = xmmword_1012E0070;
    __asm { FMOV            V0.2D, #-1.0 }

    *(_OWORD *)&v70[16] = _Q0;
    *(_OWORD *)&v70[32] = _Q0;
    __int128 v71 = _Q0;
    *(_DWORD *)std::stringbuf::string_type buf = 0xFFFF;
    int v72 = 0;
    uint64_t v75 = 0LL;
    unint64_t v73 = 0xBFF0000000000000LL;
    uint64_t v74 = 0LL;
    unint64_t v77 = 0xBFF0000000000000LL;
    int v76 = 0;
    int v78 = 0x7FFFFFFF;
    uint64_t v81 = 0LL;
    uint64_t v79 = 0LL;
    uint64_t v80 = 0LL;
    char v82 = 0;
    *((void *)&v71 + 1) = CFAbsoluteTimeGetCurrent();
    uint64_t v16 = sub_1004A190C(a1);
    sub_100A33950(*(void *)(v16 + 32), (uint64_t)v5, (uint64_t)buf);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v17 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      *(_WORD *)uint64_t v53 = 0;
      LODWORD(v38) = 2;
      int v37 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  v53,  v38);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown(CLNetworkLocationRequester *, const CL TelephonyService_Type::LteCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v37);
      if (v37 != buf) {
        free(v37);
      }
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  unsigned int v18 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v19 = *(void *)(a1 + 304);
    sub_1003D2324(a3, buf);
    unsigned int v20 = v70[3] >= 0 ? buf : *(_BYTE **)buf;
    *(_DWORD *)uint64_t v53 = 134218242;
    *(void *)&v53[4] = v19;
    __int16 v54 = 2080;
    *(void *)__int16 v55 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "NETWORK: pending, unknown, before, %lu, cell, %s",  v53,  0x16u);
    if ((v70[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v29 = qword_101934A78;
    uint64_t v30 = *(void *)(a1 + 304);
    sub_1003D2324(a3, v53);
    if (v55[9] >= 0) {
      uint64_t v31 = v53;
    }
    else {
      uint64_t v31 = *(_BYTE **)v53;
    }
    int v49 = 134218242;
    uint64_t v50 = v30;
    __int16 v51 = 2080;
    int v52 = v31;
    LODWORD(v38) = 22;
    int v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v29,  2LL,  "NETWORK: pending, unknown, before, %lu, cell, %s",  &v49,  v38);
    if ((v55[9] & 0x80000000) != 0) {
      operator delete(*(void **)v53);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown(CLNetworkLocationRequester *, const CLTe lephonyService_Type::LteCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v32);
    if (v32 != buf) {
      free(v32);
    }
  }

  sub_1004C2EE4((uint64_t **)(a1 + 288), v5);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  unsigned int v21 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v22 = *(void *)(a1 + 304);
    sub_1003D2324(v5, buf);
    int v23 = v70[3] >= 0 ? buf : *(_BYTE **)buf;
    *(_DWORD *)uint64_t v53 = 134218242;
    *(void *)&v53[4] = v22;
    __int16 v54 = 2080;
    *(void *)__int16 v55 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "NETWORK: pending, unknown, after, %lu, cell, %s",  v53,  0x16u);
    if ((v70[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v33 = qword_101934A78;
    uint64_t v34 = *(void *)(a1 + 304);
    sub_1003D2324(v5, v53);
    if (v55[9] >= 0) {
      int v35 = v53;
    }
    else {
      int v35 = *(_BYTE **)v53;
    }
    int v49 = 134218242;
    uint64_t v50 = v34;
    __int16 v51 = 2080;
    int v52 = v35;
    LODWORD(v38) = 22;
    char v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v33,  2LL,  "NETWORK: pending, unknown, after, %lu, cell, %s",  &v49,  v38);
    if ((v55[9] & 0x80000000) != 0) {
      operator delete(*(void **)v53);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown(CLNetworkLocationRequester *, const CLTe lephonyService_Type::LteCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v36);
    if (v36 != buf) {
      free(v36);
    }
  }

  if (v48 < 0) {
    operator delete(__p);
  }
  if (v45)
  {
    int v46 = v45;
    operator delete(v45);
  }

void sub_1004B8654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1004B8698(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4)
{
  uint64_t v7 = sub_1004ABD0C((uint64_t)v61);
  sub_1003D2C58((unsigned int *)v7, v59);
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  unsigned int v9 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v10 = SHIBYTE(v60);
    unsigned int v11 = (void **)v59[0];
    sub_100832C64(a4, (std::stringbuf::string_type *)__p);
    unsigned int v12 = v59;
    if (v10 < 0) {
      unsigned int v12 = v11;
    }
    if ((v99 & 0x80000000LL) == 0) {
      unsigned int v13 = __p;
    }
    else {
      unsigned int v13 = *(_BYTE **)__p;
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136315394;
    *(void *)&uint8_t buf[4] = v12;
    __int16 v71 = 2080;
    *(void *)int v72 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: server response nr cell, %s, location, %s",  buf,  0x16u);
    if (SBYTE3(v99) < 0) {
      operator delete(*(void **)__p);
    }
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v33 = qword_101934A78;
    int v34 = SHIBYTE(v60);
    int v35 = (void **)v59[0];
    sub_100832C64(a4, (std::stringbuf::string_type *)buf);
    char v36 = v59;
    if (v34 < 0) {
      char v36 = v35;
    }
    if (v72[9] >= 0) {
      int v37 = buf;
    }
    else {
      int v37 = *(_BYTE **)buf;
    }
    int v91 = 136315394;
    __int16 v92 = v36;
    __int16 v93 = 2080;
    __int16 v94 = v37;
    uint64_t v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v33,  2LL,  "CELL_LOC: server response nr cell, %s, location, %s",  (const char *)&v91,  22);
    if ((v72[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterNrCellLocation(CLNetworkLocationRequester *, const CLTelephonyS ervice_Type::NrCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v38);
    p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    if (v38 != __p) {
      free(v38);
    }
  }

  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_10183C3A0);
  }
  unsigned int v14 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v15 = *(void *)(a4 + 4);
    uint64_t v16 = *(void *)(a4 + 12);
    uint64_t v17 = *(void *)(a4 + 20);
    unsigned int v18 = *(_DWORD *)v7;
    int v19 = *(_DWORD *)(v7 + 4);
    int v20 = *(_DWORD *)(v7 + 8);
    uint64_t v21 = *(void *)(v7 + 16);
    int v22 = *(_DWORD *)(a4 + 84);
    int v23 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)__int128 __p = 136317954;
    *(void *)&__p[4] = "Network-Cell";
    __int16 v96 = 1024;
    int v97 = 1;
    __int16 v98 = 2048;
    uint64_t v99 = v15;
    __int16 v100 = 2048;
    uint64_t v101 = v16;
    __int16 v102 = 2048;
    uint64_t v103 = v17;
    __int16 v104 = 1024;
    unsigned int v105 = v18;
    __int16 v106 = 1024;
    int v107 = v19;
    __int16 v108 = 1024;
    int v109 = v20;
    __int16 v110 = 2048;
    uint64_t v111 = v21;
    __int16 v112 = 1024;
    int v113 = v22;
    __int16 v114 = 1024;
    int v115 = v23;
    __int16 v116 = 1024;
    int v117 = -1;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%llx,Confidence,%d,Count,%d,lock,%d",  __p,  0x5Eu);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183C3A0);
    }
    uint64_t v39 = *(void *)(a4 + 4);
    uint64_t v40 = *(void *)(a4 + 12);
    uint64_t v41 = *(void *)(a4 + 20);
    unsigned int v42 = *(_DWORD *)v7;
    int v43 = *(_DWORD *)(v7 + 4);
    int v44 = *(_DWORD *)(v7 + 8);
    uint64_t v45 = *(void *)(v7 + 16);
    int v46 = *(_DWORD *)(a4 + 84);
    int v47 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)std::stringbuf::string_type buf = 136317954;
    *(void *)&uint8_t buf[4] = "Network-Cell";
    __int16 v71 = 1024;
    *(_DWORD *)int v72 = 1;
    *(_WORD *)&v72[4] = 2048;
    *(void *)&v72[6] = v39;
    __int16 v73 = 2048;
    uint64_t v74 = v40;
    __int16 v75 = 2048;
    uint64_t v76 = v41;
    __int16 v77 = 1024;
    unsigned int v78 = v42;
    __int16 v79 = 1024;
    int v80 = v43;
    __int16 v81 = 1024;
    int v82 = v44;
    __int16 v83 = 2048;
    uint64_t v84 = v45;
    __int16 v85 = 1024;
    int v86 = v46;
    __int16 v87 = 1024;
    int v88 = v47;
    __int16 v89 = 1024;
    int v90 = -1;
    char v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%llx,Confidence,%d,Count,%d,lock,%d",  buf,  94,  *(double *)v59,  *(double *)&v59[1],  v60,  v61[0],  v61[2],  v61[4],  v62,  v63,  v64,  v65);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterNrCellLocation(CLNetworkLocationRequester *, const CLTelephonyS ervice_Type::NrCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v48);
    if (v48 != __p) {
      free(v48);
    }
  }

  unsigned int v24 = sub_1004C2D24(a1 + 328, v7);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v25 = sub_1004A19DC(a1);
  }

  else
  {
    unsigned int v26 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 __p = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  __p,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      *(_WORD *)std::stringbuf::string_type buf = 0;
      LODWORD(v58) = 2;
      uint64_t v57 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  buf,  v58);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterNrCellLocation(CLNetworkLocationRequester *, const CLTelephon yService_Type::NrCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v57);
      if (v57 != __p) {
        free(v57);
      }
    }
  }

  unsigned int v27 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v28 = *(void *)(a1 + 344);
    sub_1003D2C58(a3, __p);
    if ((v99 & 0x80000000LL) == 0) {
      uint64_t v29 = __p;
    }
    else {
      uint64_t v29 = *(_BYTE **)__p;
    }
    *(_DWORD *)std::stringbuf::string_type buf = 134218242;
    *(void *)&uint8_t buf[4] = v28;
    __int16 v71 = 2080;
    *(void *)int v72 = v29;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "NETWORK: pending, known, before, %lu, cell, %s",  buf,  0x16u);
    if (SBYTE3(v99) < 0) {
      operator delete(*(void **)__p);
    }
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    uint64_t v49 = qword_101934A78;
    uint64_t v50 = *(void ***)(a1 + 344);
    sub_1003D2C58(a3, buf);
    if (v72[9] >= 0) {
      __int16 v51 = buf;
    }
    else {
      __int16 v51 = *(_BYTE **)buf;
    }
    int v91 = 134218242;
    __int16 v92 = v50;
    __int16 v93 = 2080;
    __int16 v94 = v51;
    LODWORD(v58) = 22;
    int v52 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v49,  2LL,  "NETWORK: pending, known, before, %lu, cell, %s",  &v91,  v58);
    if ((v72[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterNrCellLocation(CLNetworkLocationRequester *, const CLTelephonyS ervice_Type::NrCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v52);
    p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    if (v52 != __p) {
      free(v52);
    }
  }

  if ((uint64_t *)(a1 + 336) != v24)
  {
    sub_1000087E8((uint64_t **)(a1 + 328), v24);
    operator delete(v24);
  }

  uint64_t v30 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v31 = *(void *)(a1 + 344);
    sub_1003D2C58((unsigned int *)v7, __p);
    int v32 = (v99 & 0x80000000LL) == 0 ? __p : *(_BYTE **)__p;
    *(_DWORD *)std::stringbuf::string_type buf = 134218242;
    *(void *)&uint8_t buf[4] = v31;
    __int16 v71 = 2080;
    *(void *)int v72 = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "NETWORK: pending, known, after, %lu, cell, %s",  buf,  0x16u);
    if (SBYTE3(v99) < 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    uint64_t v53 = qword_101934A78;
    __int16 v54 = *(void ***)(a1 + 344);
    sub_1003D2C58((unsigned int *)v7, buf);
    if (v72[9] >= 0) {
      __int16 v55 = buf;
    }
    else {
      __int16 v55 = *(_BYTE **)buf;
    }
    int v91 = 134218242;
    __int16 v92 = v54;
    __int16 v93 = 2080;
    __int16 v94 = v55;
    LODWORD(v58) = 22;
    __int16 v56 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v53,  2LL,  "NETWORK: pending, known, after, %lu, cell, %s",  &v91,  v58);
    if ((v72[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterNrCellLocation(CLNetworkLocationRequester *, const CLTelephonyS ervice_Type::NrCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v56);
    if (v56 != __p) {
      free(v56);
    }
  }

  if (SHIBYTE(v60) < 0) {
    operator delete(v59[0]);
  }
  if (v69 < 0) {
    operator delete(v68);
  }
  if (v66)
  {
    unsigned int v67 = v66;
    operator delete(v66);
  }

void sub_1004B910C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1003284E4((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1004B9178(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = sub_1004ABD0C((uint64_t)v40);
  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_10183C3A0);
  }
  int v6 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v7 = *(_DWORD *)v5;
    int v8 = *(_DWORD *)(v5 + 4);
    int v9 = *(_DWORD *)(v5 + 8);
    uint64_t v10 = *(void *)(v5 + 16);
    *(_DWORD *)std::stringbuf::string_type buf = 136317186;
    *(void *)&uint8_t buf[4] = "Network-Cell";
    uint64_t v69 = 0x800000000000400LL;
    *(void *)uint64_t v70 = 0LL;
    *(_WORD *)&v70[8] = 2048;
    *(void *)&v70[10] = 0LL;
    *(_WORD *)&v70[18] = 2048;
    *(void *)&v70[20] = 0xBFF0000000000000LL;
    *(_WORD *)&v70[28] = 1024;
    *(_DWORD *)&v70[30] = v7;
    *(_WORD *)&v70[34] = 1024;
    *(_DWORD *)&v70[36] = v8;
    *(_WORD *)&v70[40] = 1024;
    *(_DWORD *)&v70[42] = v9;
    *(_WORD *)&v70[46] = 2048;
    *(void *)&__int128 v71 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%llx,",  buf,  0x4Cu);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183C3A0);
    }
    unsigned int v24 = *(_DWORD *)v5;
    int v25 = *(_DWORD *)(v5 + 4);
    int v26 = *(_DWORD *)(v5 + 8);
    uint64_t v27 = *(void *)(v5 + 16);
    *(_DWORD *)uint64_t v53 = 136317186;
    *(void *)&v53[4] = "Network-Cell";
    __int16 v54 = 1024;
    *(_DWORD *)__int16 v55 = 0;
    *(_WORD *)&v55[4] = 2048;
    *(void *)&v55[6] = 0LL;
    __int16 v56 = 2048;
    uint64_t v57 = 0LL;
    __int16 v58 = 2048;
    unint64_t v59 = 0xBFF0000000000000LL;
    __int16 v60 = 1024;
    unsigned int v61 = v24;
    __int16 v62 = 1024;
    int v63 = v25;
    __int16 v64 = 1024;
    int v65 = v26;
    __int16 v66 = 2048;
    uint64_t v67 = v27;
    uint64_t v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%llx,",  v53,  76,  v39,  v40[0],  v40[1],  v41,  v42,  v43,  v44);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown(CLNetworkLocationRequester *, const CLTel ephonyService_Type::NrCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v28);
    if (v28 != buf) {
      free(v28);
    }
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v69 = 0LL;
    *(void *)&uint8_t buf[4] = 0LL;
    *(_OWORD *)uint64_t v70 = xmmword_1012E0070;
    __asm { FMOV            V0.2D, #-1.0 }

    *(_OWORD *)&v70[16] = _Q0;
    *(_OWORD *)&v70[32] = _Q0;
    __int128 v71 = _Q0;
    *(_DWORD *)std::stringbuf::string_type buf = 0xFFFF;
    int v72 = 0;
    uint64_t v75 = 0LL;
    unint64_t v73 = 0xBFF0000000000000LL;
    uint64_t v74 = 0LL;
    unint64_t v77 = 0xBFF0000000000000LL;
    int v76 = 0;
    int v78 = 0x7FFFFFFF;
    uint64_t v81 = 0LL;
    uint64_t v79 = 0LL;
    uint64_t v80 = 0LL;
    char v82 = 0;
    *((void *)&v71 + 1) = CFAbsoluteTimeGetCurrent();
    uint64_t v16 = sub_1004A19DC(a1);
    sub_1005B343C(*(void *)(v16 + 32), v5, (uint64_t)buf);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v17 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, not storing location entry",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      *(_WORD *)uint64_t v53 = 0;
      LODWORD(v38) = 2;
      int v37 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, not storing location entry",  v53,  v38);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown(CLNetworkLocationRequester *, const CLT elephonyService_Type::NrCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v37);
      if (v37 != buf) {
        free(v37);
      }
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  unsigned int v18 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v19 = *(void *)(a1 + 344);
    sub_1003D2C58(a3, buf);
    int v20 = v70[3] >= 0 ? buf : *(_BYTE **)buf;
    *(_DWORD *)uint64_t v53 = 134218242;
    *(void *)&v53[4] = v19;
    __int16 v54 = 2080;
    *(void *)__int16 v55 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "NETWORK: pending, unknown, before, %lu, cell, %s",  v53,  0x16u);
    if ((v70[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v29 = qword_101934A78;
    uint64_t v30 = *(void *)(a1 + 344);
    sub_1003D2C58(a3, v53);
    if (v55[9] >= 0) {
      uint64_t v31 = v53;
    }
    else {
      uint64_t v31 = *(_BYTE **)v53;
    }
    int v49 = 134218242;
    uint64_t v50 = v30;
    __int16 v51 = 2080;
    int v52 = v31;
    LODWORD(v38) = 22;
    int v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v29,  2LL,  "NETWORK: pending, unknown, before, %lu, cell, %s",  &v49,  v38);
    if ((v55[9] & 0x80000000) != 0) {
      operator delete(*(void **)v53);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown(CLNetworkLocationRequester *, const CLTel ephonyService_Type::NrCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v32);
    if (v32 != buf) {
      free(v32);
    }
  }

  sub_1004C2F8C((uint64_t **)(a1 + 328), v5);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v21 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v22 = *(void *)(a1 + 344);
    sub_1003D2C58((unsigned int *)v5, buf);
    int v23 = v70[3] >= 0 ? buf : *(_BYTE **)buf;
    *(_DWORD *)uint64_t v53 = 134218242;
    *(void *)&v53[4] = v22;
    __int16 v54 = 2080;
    *(void *)__int16 v55 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "NETWORK: pending, unknown, after, %lu, cell, %s",  v53,  0x16u);
    if ((v70[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v33 = qword_101934A78;
    uint64_t v34 = *(void *)(a1 + 344);
    sub_1003D2C58((unsigned int *)v5, v53);
    if (v55[9] >= 0) {
      int v35 = v53;
    }
    else {
      int v35 = *(_BYTE **)v53;
    }
    int v49 = 134218242;
    uint64_t v50 = v34;
    __int16 v51 = 2080;
    int v52 = v35;
    LODWORD(v38) = 22;
    char v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v33,  2LL,  "NETWORK: pending, unknown, after, %lu, cell, %s",  &v49,  v38);
    if ((v55[9] & 0x80000000) != 0) {
      operator delete(*(void **)v53);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown(CLNetworkLocationRequester *, const CLTel ephonyService_Type::NrCell &, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v36);
    if (v36 != buf) {
      free(v36);
    }
  }

  if (v48 < 0) {
    operator delete(__p);
  }
  if (v45)
  {
    int v46 = v45;
    operator delete(v45);
  }

void sub_1004B99AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1004B99F0(uint64_t a1, uint64_t a2, uint64_t a3, __int128 **a4, int a5, int a6, int a7)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  unsigned int v12 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v13 = 0xD37A6F4DE9BD37A7LL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3);
    unint64_t v14 = 0xD37A6F4DE9BD37A7LL * (((char *)a4[1] - (char *)*a4) >> 3);
    *(_DWORD *)std::stringbuf::string_type buf = 134349312;
    *(void *)int v117 = v13;
    *(_WORD *)&v117[8] = 2050;
    *(void *)&v117[10] = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "AlsWifi, seriesComplete, known, %{public}lu, unknown, %{public}lu",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    unint64_t v87 = 0xD37A6F4DE9BD37A7LL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3);
    unint64_t v88 = 0xD37A6F4DE9BD37A7LL * (((char *)a4[1] - (char *)*a4) >> 3);
    LODWORD(v113.__r_.__value_.__l.__data_) = 134349312;
    *(std::string::size_type *)((char *)v113.__r_.__value_.__r.__words + 4) = v87;
    WORD2(v113.__r_.__value_.__r.__words[1]) = 2050;
    *(std::string::size_type *)((char *)&v113.__r_.__value_.__r.__words[1] + 6) = v88;
    __int16 v89 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "AlsWifi, seriesComplete, known, %{public}lu, unknown, %{public}lu",  &v113,  22);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterWifiLocationSeriesComplete(CLNetworkLocationRequester *, const std::vector<CLAlsWifiAccessPoint> &, const std::vector<CLAlsWifiAccessPoint> &, CLNetworkLocationRequester::Reques tType, int, CLNetworkLocationRequest_Type::CLAlsWifiBand)",  "%s\n",  v89);
  }

  int v15 = (*(uint64_t (**)(void))(**(void **)(a1 + 112) + 32LL))(*(void *)(a1 + 112));
  __int16 v110 = 0LL;
  uint64_t v111 = 0LL;
  uint64_t v112 = 0LL;
  uint64_t v16 = *(void *)(a1 + 400);
  __int16 v100 = a4;
  if (!v16) {
    goto LABEL_16;
  }
  uint64_t v17 = a1 + 400;
  do
  {
    int v18 = *(_DWORD *)(v16 + 32);
    BOOL v19 = v18 < a6;
    if (v18 >= a6) {
      int v20 = (uint64_t *)v16;
    }
    else {
      int v20 = (uint64_t *)(v16 + 8);
    }
    if (!v19) {
      uint64_t v17 = v16;
    }
    uint64_t v16 = *v20;
  }

  while (*v20);
  if (v17 == a1 + 400 || *(_DWORD *)(v17 + 32) > a6)
  {
LABEL_16:
    if (a5 != 1)
    {
      *(_DWORD *)std::stringbuf::string_type buf = -1;
      sub_10004C5F8((char *)&v110, (char *)buf, (uint64_t)v117, 1uLL);
      goto LABEL_18;
    }

    sub_10123B6F0(buf);
    int v90 = *(_DWORD *)buf;
LABEL_122:
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/Network/CLNetworkLocationProvider.mm",  v90,  "onLocationRequesterWifiLocationSeriesComplete");
    goto LABEL_124;
  }

  if (&v110 != (void **)(v17 + 40)) {
    sub_10004C5F8( (char *)&v110,  *(char **)(v17 + 40),  *(void *)(v17 + 48),  (uint64_t)(*(void *)(v17 + 48) - *(void *)(v17 + 40)) >> 2);
  }
  sub_1004C2FDC((uint64_t **)(a1 + 392), (uint64_t *)v17);
  if (v111 == v110)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_10183C3C0);
    }
    __int16 v92 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      *(_DWORD *)int v117 = 0;
      *(_WORD *)&v117[4] = 2082;
      *(void *)&v117[6] = "";
      *(_WORD *)&v117[14] = 2082;
      *(void *)&v117[16] = "assert";
      *(_WORD *)&v117[24] = 2081;
      uint64_t v118 = "fenceKeys.size() > 0";
      _os_log_impl( (void *)&_mh_execute_header,  v92,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:At least one fence key required, event:%{public, location:escape_only}s, conditio n:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_10183C3C0);
      }
    }

    __int16 v93 = (os_log_s *)qword_101934878;
    if (os_signpost_enabled((os_log_t)qword_101934878))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      *(_DWORD *)int v117 = 0;
      *(_WORD *)&v117[4] = 2082;
      *(void *)&v117[6] = "";
      *(_WORD *)&v117[14] = 2082;
      *(void *)&v117[16] = "assert";
      *(_WORD *)&v117[24] = 2081;
      uint64_t v118 = "fenceKeys.size() > 0";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v93,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "At least one fence key required",  "{msg%{public}.0s:At least one fence key required, event:%{public, location:escape_only}s, conditio n:%{private, location:escape_only}s}",  buf,  0x26u);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_10183C3C0);
      }
    }

    __int16 v94 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      *(_DWORD *)int v117 = 0;
      *(_WORD *)&v117[4] = 2082;
      *(void *)&v117[6] = "";
      *(_WORD *)&v117[14] = 2082;
      *(void *)&v117[16] = "assert";
      *(_WORD *)&v117[24] = 2081;
      uint64_t v118 = "fenceKeys.size() > 0";
      _os_log_impl( (void *)&_mh_execute_header,  v94,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:At least one fence key required, event:%{public, location:escape_only}s, conditio n:%{private, location:escape_only}s}",  buf,  0x26u);
    }

    int v90 = 2258;
    goto LABEL_122;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_10183C3C0);
  }
  __int16 v83 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v84 = *(void *)(a1 + 408);
    *(_DWORD *)std::stringbuf::string_type buf = 134283777;
    *(void *)int v117 = v84;
    *(_WORD *)&v117[8] = 2049;
    *(void *)&v117[10] = (v111 - (_BYTE *)v110) >> 2;
    _os_log_impl( (void *)&_mh_execute_header,  v83,  OS_LOG_TYPE_DEBUG,  "AlsWifi, seriesComplete, tags remain, %{private}zu, keys, %{private}zu",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_10183C3C0);
    }
    std::string::size_type v85 = *(void *)(a1 + 408);
    LODWORD(v113.__r_.__value_.__l.__data_) = 134283777;
    *(std::string::size_type *)((char *)v113.__r_.__value_.__r.__words + 4) = v85;
    WORD2(v113.__r_.__value_.__r.__words[1]) = 2049;
    *(std::string::size_type *)((char *)&v113.__r_.__value_.__r.__words[1] + 6) = (v111 - (_BYTE *)v110) >> 2;
    LODWORD(v95) = 22;
    int v86 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "AlsWifi, seriesComplete, tags remain, %{private}zu, keys, %{private}zu",  &v113,  v95);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterWifiLocationSeriesComplete(CLNetworkLocationRequester *, const std::vector<CLAlsWifiAccessPoint> &, const std::vector<CLAlsWifiAccessPoint> &, CLNetworkLocationRequester::Reques tType, int, CLNetworkLocationRequest_Type::CLAlsWifiBand)",  "%s\n",  v86);
  }

void sub_1004BA7F8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, void *a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, void *__p, uint64_t a31)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004BA878(uint64_t a1)
{
  unint64_t v2 = *(char **)a1;
  int64x2_t v3 = *(int64x2_t *)(a1 + 8);
  int64x2_t v4 = vshrq_n_s64(vsubq_s64(v3, vdupq_n_s64((unint64_t)v2)), 3uLL);
  unint64_t v5 = 0xD37A6F4DE9BD37A7LL * v4.i64[0];
  unint64_t v6 = v5;
  if (0xD37A6F4DE9BD37A7LL * v4.i64[1] > v5)
  {
    if ((char *)v3.i64[0] == v2)
    {
      unsigned int v11 = 0LL;
      uint64_t v9 = 184 * v5;
    }

    else
    {
      unsigned int v7 = (char *)sub_1002DF6FC(a1 + 16, v5);
      unint64_t v2 = *(char **)a1;
      int v8 = *(char **)(a1 + 8);
      uint64_t v9 = (uint64_t)&v7[184 * v6];
      unsigned int v11 = &v7[184 * v10];
      if (v8 != *(char **)a1)
      {
        uint64_t v12 = v9;
        do
        {
          __int128 v13 = *(_OWORD *)(v8 - 184);
          __int128 v14 = *(_OWORD *)(v8 - 168);
          __int128 v15 = *(_OWORD *)(v8 - 152);
          *(_OWORD *)(v12 - 136) = *(_OWORD *)(v8 - 136);
          *(_OWORD *)(v12 - 152) = v15;
          *(_OWORD *)(v12 - 168) = v14;
          *(_OWORD *)(v12 - 184) = v13;
          __int128 v16 = *(_OWORD *)(v8 - 120);
          __int128 v17 = *(_OWORD *)(v8 - 104);
          __int128 v18 = *(_OWORD *)(v8 - 88);
          *(_OWORD *)(v12 - 72) = *(_OWORD *)(v8 - 72);
          *(_OWORD *)(v12 - 88) = v18;
          *(_OWORD *)(v12 - 104) = v17;
          *(_OWORD *)(v12 - 120) = v16;
          __int128 v19 = *(_OWORD *)(v8 - 56);
          __int128 v20 = *(_OWORD *)(v8 - 40);
          __int128 v21 = *(_OWORD *)(v8 - 24);
          *(void *)(v12 - 8) = *((void *)v8 - 1);
          *(_OWORD *)(v12 - 24) = v21;
          *(_OWORD *)(v12 - 40) = v20;
          *(_OWORD *)(v12 - 56) = v19;
          v12 -= 184LL;
          v8 -= 184;
        }

        while (v8 != v2);
        unint64_t v2 = *(char **)a1;
        goto LABEL_9;
      }
    }

    uint64_t v12 = v9;
LABEL_9:
    *(void *)a1 = v12;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v11;
    if (v2) {
      operator delete(v2);
    }
  }

uint64_t sub_1004BA9C4(uint64_t a1, uint64_t a2, double *a3, const __CFDictionary *a4)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  unsigned int v7 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *(_DWORD *)(a1 + 576);
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "NETWORK: stats: onLocationRequesterResponse, %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v10 = *(_DWORD *)(a1 + 576);
    v12[0] = 67109120;
    v12[1] = v10;
    unsigned int v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: stats: onLocationRequesterResponse, %d",  v12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterResponse(CLNetworkLocationRequester *, const CFTimeInterval &, CFDictionaryRef, CLNetworkLocationRequester::RequestType, int)",  "%s\n",  v11);
  }

  ++*(_DWORD *)(a1 + 576);
  uint64_t result = sub_100294EE0(a4, a3, (double *)buf);
  if ((_DWORD)result) {
    return TMSetSourceTime(type metadata for , *(double *)buf, 15.0);
  }
  return result;
}

void sub_1004BABBC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v24 = a3;
  int v25 = a4;
  HIDWORD(v23[0]) = a4;
  int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 112) + 16LL))(*(void *)(a1 + 112));
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  unint64_t v6 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = *(_DWORD *)(a1 + 352);
    LODWORD(buf) = 67240448;
    HIDWORD(buf) = v5;
    __int16 v31 = 1026;
    int v32 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Notice NETWORK: no response from server, reachability, %{public}d, queryRetries, %{public}d",  (uint8_t *)&buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v16 = *(_DWORD *)(a1 + 352);
    int v26 = 67240448;
    int v27 = v5;
    __int16 v28 = 1026;
    int v29 = v16;
    LODWORD(v23[0]) = 14;
    __int128 v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Notice NETWORK: no response from server, reachability, %{public}d, queryRetries, %{public}d",  &v26,  v23[0]);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLocationError(CLNetworkLocationRequester *, CLNetworkLocationRe quester::RequestType, int)",  "%s\n",  v17);
  }

  if (sub_100E575B0())
  {
    sub_1002A5370(&buf);
    sub_1002AC220((uint64_t)&buf, "queryFailed", &v25);
    int v26 = *(void *)(a1 + 184);
    sub_1002AC220((uint64_t)&buf, "p1", &v26);
    int v26 = *(void *)(a1 + 264);
    sub_1002AC220((uint64_t)&buf, "p2", &v26);
    int v26 = *(void *)(a1 + 304);
    sub_1002AC220((uint64_t)&buf, "p3", &v26);
    int v26 = *(void *)(a1 + 432);
    sub_1002AC220((uint64_t)&buf, "p4", &v26);
    int v26 = *(void *)(a1 + 344);
    sub_1002AC220((uint64_t)&buf, "p5", &v26);
    sub_100E57614((uint64_t)&buf, (uint64_t)"locationd");
    sub_1002A5590(&buf);
  }

  if (v25 == *(_DWORD *)(a1 + 520)) {
    *(_DWORD *)(a1 + 520) = -1;
  }
  sub_100AD5D38(a1 + 464);
  double Current = CFAbsoluteTimeGetCurrent();
  if (*(int *)(a1 + 352) > 4)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v13 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v14 = *(_DWORD *)(a1 + 352);
      LODWORD(buf) = 67109376;
      HIDWORD(buf) = v14;
      __int16 v31 = 1024;
      int v32 = 5;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "NETWORK: retry count %d exceeded %d - not retrying",  (uint8_t *)&buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      int v18 = *(_DWORD *)(a1 + 352);
      int v26 = 67109376;
      int v27 = v18;
      __int16 v28 = 1024;
      int v29 = 5;
      __int128 v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: retry count %d exceeded %d - not retrying",  &v26,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLocationError(CLNetworkLocationRequester *, CLNetworkLocation Requester::RequestType, int)",  "%s\n",  v19);
    }

    sub_1004BB394(a1);
    sub_1004BB770(a1, (uint64_t)"max.retries");
    LODWORD(buf) = 3;
    (*(void (**)(uint64_t, uint64_t *, char *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &buf,  (char *)v23 + 4,  0LL,  0xFFFFFFFFLL,  0LL);
  }

  else if (v5)
  {
    double v9 = Current;
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v11 = *(_DWORD *)(a1 + 352);
      LODWORD(buf) = 67109376;
      HIDWORD(buf) = v11;
      __int16 v31 = 1024;
      int v32 = 5;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "NETWORK: retry query, %d, %d",  (uint8_t *)&buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      int v20 = *(_DWORD *)(a1 + 352);
      int v26 = 67109376;
      int v27 = v20;
      __int16 v28 = 1024;
      int v29 = 5;
      __int128 v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: retry query, %d, %d",  &v26,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLocationError(CLNetworkLocationRequester *, CLNetworkLocation Requester::RequestType, int)",  "%s\n",  v21);
    }

    int v12 = *(_DWORD *)(a1 + 352);
    if (!v12) {
      *(double *)(a1 + 360) = v9;
    }
    *(_DWORD *)(a1 + 352) = v12 + 1;
    sub_1004A5694(a1, (uint64_t)"retry.query");
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    __int128 v15 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "NETWORK: data reachability is not available - not retrying",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v26) = 0;
      LODWORD(v23[0]) = 2;
      uint64_t v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: data reachability is not available - not retrying",  &v26,  v23[0]);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterLocationError(CLNetworkLocationRequester *, CLNetworkLocation Requester::RequestType, int)",  "%s\n",  v22);
    }

    sub_1004BB394(a1);
    *(_DWORD *)(a1 + 352) = 5;
    sub_1004BB770(a1, (uint64_t)"no.data.reachability");
    LODWORD(buf) = 3;
    (*(void (**)(uint64_t, uint64_t *, char *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &buf,  (char *)v23 + 4,  0LL,  0xFFFFFFFFLL,  0LL);
  }

  *(void *)(a1 + 384) = 0LL;
}

void sub_1004BB364( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1004BB394(uint64_t a1)
{
  if (*(void *)(a1 + 184) > 0x3BuLL
    || *(void *)(a1 + 224) > 0x3BuLL
    || *(void *)(a1 + 264) > 0x3BuLL
    || *(void *)(a1 + 304) > 0x3BuLL
    || *(void *)(a1 + 432) > 0x3BuLL
    || *(void *)(a1 + 344) >= 0x3CuLL)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    unint64_t v2 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = *(void *)(a1 + 184);
      uint64_t v4 = *(void *)(a1 + 224);
      uint64_t v5 = *(void *)(a1 + 264);
      uint64_t v6 = *(void *)(a1 + 304);
      uint64_t v7 = *(void *)(a1 + 432);
      uint64_t v8 = *(void *)(a1 + 344);
      *(_DWORD *)uint64_t buf = 134219520;
      uint64_t v37 = v3;
      __int16 v38 = 2048;
      uint64_t v39 = v4;
      __int16 v40 = 2048;
      uint64_t v41 = v5;
      __int16 v42 = 2048;
      uint64_t v43 = v6;
      __int16 v44 = 2048;
      uint64_t v45 = v7;
      __int16 v46 = 2048;
      uint64_t v47 = v8;
      __int16 v48 = 1024;
      int v49 = 60;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "trimming pending gsm, %lu, scdma, %lu, cdma, %lu, lte, %lu, wifis, %lu, nr, %lu, to, %d",  buf,  0x44u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v15 = *(void *)(a1 + 184);
      uint64_t v16 = *(void *)(a1 + 224);
      uint64_t v17 = *(void *)(a1 + 264);
      uint64_t v18 = *(void *)(a1 + 304);
      uint64_t v19 = *(void *)(a1 + 432);
      uint64_t v20 = *(void *)(a1 + 344);
      int v22 = 134219520;
      uint64_t v23 = v15;
      __int16 v24 = 2048;
      uint64_t v25 = v16;
      __int16 v26 = 2048;
      uint64_t v27 = v17;
      __int16 v28 = 2048;
      uint64_t v29 = v18;
      __int16 v30 = 2048;
      uint64_t v31 = v19;
      __int16 v32 = 2048;
      uint64_t v33 = v20;
      __int16 v34 = 1024;
      int v35 = 60;
      __int128 v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "trimming pending gsm, %lu, scdma, %lu, cdma, %lu, lte, %lu, wifis, %lu, nr, %lu, to, %d",  &v22,  68);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNetworkLocationProvider::trimPendingQueries()", "%s\n", v21);
    }

    if (*(void *)(a1 + 184) >= 0x3DuLL)
    {
      do
      {
        double v9 = *(uint64_t **)(a1 + 168);
        sub_1000087E8((uint64_t **)(a1 + 168), v9);
        operator delete(v9);
      }

      while (*(void *)(a1 + 184) > 0x3CuLL);
    }

    if (*(void *)(a1 + 224) >= 0x3DuLL)
    {
      do
      {
        int v10 = *(uint64_t **)(a1 + 208);
        sub_1000087E8((uint64_t **)(a1 + 208), v10);
        operator delete(v10);
      }

      while (*(void *)(a1 + 224) > 0x3CuLL);
    }

    if (*(void *)(a1 + 264) >= 0x3DuLL)
    {
      do
      {
        int v11 = *(uint64_t **)(a1 + 248);
        sub_1000087E8((uint64_t **)(a1 + 248), v11);
        sub_1004C1C7C((uint64_t)(v11 + 4));
        operator delete(v11);
      }

      while (*(void *)(a1 + 264) > 0x3CuLL);
    }

    if (*(void *)(a1 + 304) >= 0x3DuLL)
    {
      do
      {
        int v12 = *(uint64_t **)(a1 + 288);
        sub_1000087E8((uint64_t **)(a1 + 288), v12);
        operator delete(v12);
      }

      while (*(void *)(a1 + 304) > 0x3CuLL);
    }

    if (*(void *)(a1 + 432) >= 0x3DuLL)
    {
      do
      {
        __int128 v13 = *(uint64_t **)(a1 + 416);
        sub_1000087E8((uint64_t **)(a1 + 416), v13);
        operator delete(v13);
      }

      while (*(void *)(a1 + 432) > 0x3CuLL);
    }

    if (*(void *)(a1 + 344) >= 0x3DuLL)
    {
      do
      {
        int v14 = *(uint64_t **)(a1 + 328);
        sub_1000087E8((uint64_t **)(a1 + 328), v14);
        operator delete(v14);
      }

      while (*(void *)(a1 + 344) > 0x3CuLL);
    }
  }

void sub_1004BB770(uint64_t a1, uint64_t a2)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v4 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 512);
    int v6 = *(_DWORD *)(a1 + 352);
    uint64_t v7 = *(void *)(a1 + 432);
    uint64_t v8 = *(void *)(a1 + 184);
    uint64_t v9 = *(void *)(a1 + 224);
    uint64_t v10 = *(void *)(a1 + 264);
    uint64_t v11 = *(void *)(a1 + 304);
    uint64_t v12 = *(void *)(a1 + 344);
    *(_DWORD *)uint64_t buf = 136317186;
    uint64_t v45 = a2;
    __int16 v46 = 2048;
    uint64_t v47 = v5;
    __int16 v48 = 1024;
    int v49 = v6;
    __int16 v50 = 2048;
    uint64_t v51 = v7;
    __int16 v52 = 2048;
    uint64_t v53 = v8;
    __int16 v54 = 2048;
    uint64_t v55 = v9;
    __int16 v56 = 2048;
    uint64_t v57 = v10;
    __int16 v58 = 2048;
    uint64_t v59 = v11;
    __int16 v60 = 2048;
    uint64_t v61 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "NETWORK: cancelRetryTimer, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu",  buf,  0x58u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v15 = *(void *)(a1 + 512);
    int v16 = *(_DWORD *)(a1 + 352);
    uint64_t v17 = *(void *)(a1 + 432);
    uint64_t v18 = *(void *)(a1 + 184);
    uint64_t v19 = *(void *)(a1 + 224);
    uint64_t v20 = *(void *)(a1 + 264);
    uint64_t v21 = *(void *)(a1 + 304);
    uint64_t v22 = *(void *)(a1 + 344);
    int v26 = 136317186;
    uint64_t v27 = a2;
    __int16 v28 = 2048;
    uint64_t v29 = v15;
    __int16 v30 = 1024;
    int v31 = v16;
    __int16 v32 = 2048;
    uint64_t v33 = v17;
    __int16 v34 = 2048;
    uint64_t v35 = v18;
    __int16 v36 = 2048;
    uint64_t v37 = v19;
    __int16 v38 = 2048;
    uint64_t v39 = v20;
    __int16 v40 = 2048;
    uint64_t v41 = v21;
    __int16 v42 = 2048;
    uint64_t v43 = v22;
    uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: cancelRetryTimer, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu",  (const char *)&v26,  88);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNetworkLocationProvider::cancelRetryTimer(const char *)", "%s\n", v23);
  }

  __int128 v13 = *(void **)(a1 + 512);
  if (v13)
  {
    [v13 invalidate];

    *(void *)(a1 + 512) = 0LL;
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v14 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "NETWORK: cancelRetryTimer, no retry timer",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      LOWORD(v26) = 0;
      LODWORD(v25) = 2;
      __int16 v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: cancelRetryTimer, no retry timer",  &v26,  v25);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::cancelRetryTimer(const char *)",  "%s\n",  v24);
    }
  }

BOOL sub_1004BBB34(void *a1, uint64_t a2, int a3, int a4)
{
  int v11 = a4;
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v7 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "NETWORK: query failed for nearbys - not retrying",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    LOWORD(v10[0]) = 0;
    uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: query failed for nearbys - not retrying",  v10,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterNearbyError(CLNetworkLocationRequester *, CLNetworkLocationRequ ester::RequestType, int)",  "%s\n",  v9);
  }

  a1[48] = 0LL;
  *(_DWORD *)uint64_t buf = a4;
  int v13 = a3;
  sub_1004C4080((uint64_t)(a1 + 49), &v11);
  v10[0] = 3;
  (*(void (**)(void *, _DWORD *, uint8_t *, void, uint64_t, void))(*a1 + 152LL))( a1,  v10,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
  return sub_100AD5D38((uint64_t)(a1 + 58));
}

void sub_1004BBD24(_DWORD *a1, uint64_t a2, int a3, int a4)
{
  int v6 = a1[97];
  v10[0] = a4;
  v10[1] = v6;
  int v7 = a1[96];
  _DWORD v10[2] = v7;
  _DWORD v10[3] = a3;
  if (a1[130] == a4) {
    a1[130] = -1;
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v8 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 67109632;
    int v17 = a4;
    __int16 v18 = 1024;
    int v19 = v7;
    __int16 v20 = 1024;
    int v21 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "NETWORK: query: finished, tag, %d, cells, %d, wifis, %d",  buf,  0x14u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    v11[0] = 67109632;
    v11[1] = a4;
    __int16 v12 = 1024;
    int v13 = v7;
    __int16 v14 = 1024;
    int v15 = v6;
    uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: query: finished, tag, %d, cells, %d, wifis, %d",  v11,  20,  v10[0]);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onLocationRequesterFinished(CLNetworkLocationRequester *, CLNetworkLocationRequest er::RequestType, int)",  "%s\n",  v9);
  }

  a1[88] = 0;
  if ((int)a1[96] >= 1)
  {
    *(_DWORD *)uint64_t buf = 0;
    (*(void (**)(_DWORD *, uint8_t *, _DWORD *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  v10,  0LL,  0xFFFFFFFFLL,  0LL);
    a1[96] = 0;
  }

  if ((int)a1[97] >= 1)
  {
    *(_DWORD *)uint64_t buf = 1;
    (*(void (**)(_DWORD *, uint8_t *, _DWORD *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  v10,  0LL,  0xFFFFFFFFLL,  0LL);
    a1[97] = 0;
  }

  *(_DWORD *)uint64_t buf = 2;
  (*(void (**)(_DWORD *, uint8_t *, _DWORD *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  v10,  0LL,  0xFFFFFFFFLL,  0LL);
  sub_100AD5D38((uint64_t)(a1 + 116));
  sub_1004A00F8((uint64_t)a1, (uint64_t)"onLocationRequesterFinished");
}

void sub_1004BBFE0(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  if (*a3 == 16)
  {
    (*(void (**)(void))(**(void **)(a1 + 448) + 48LL))(*(void *)(a1 + 448));
    (*(void (**)(void))(**(void **)(a1 + 448) + 56LL))(*(void *)(a1 + 448));
    sub_100F7D368(*(void *)(a1 + 672));
  }

  else if (*a3 == 6)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v6 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *a4;
      int v8 = a4[1];
      *(_DWORD *)uint64_t buf = 67109376;
      int v28 = v7;
      __int16 v29 = 1024;
      int v30 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "NETWORK: onStatusNotification, kNotificationReachability, from, %d, to, %d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      int v13 = *a4;
      int v14 = a4[1];
      int v21 = 67109376;
      int v22 = v13;
      __int16 v23 = 1024;
      int v24 = v14;
      int v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: onStatusNotification, kNotificationReachability, from, %d, to, %d",  &v21,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDae monStatus_Type::NotificationData &)",  "%s\n",  v15);
    }

    *(_DWORD *)(a1 + 608) = a4[1];
    if (a4[1] && !*a4) {
      sub_1004A547C(a1);
    }
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v9 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = *(_DWORD *)(a1 + 608);
      int v11 = *a4;
      int v12 = *(_DWORD *)(a1 + 352);
      *(_DWORD *)uint64_t buf = 67240704;
      int v28 = v10;
      __int16 v29 = 1026;
      int v30 = v11;
      __int16 v31 = 1026;
      int v32 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "@ClxLink, reach, %{public}d, last, %{public}d, retries, %{public}d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10183C360);
      }
      int v16 = *(_DWORD *)(a1 + 608);
      int v17 = *a4;
      int v18 = *(_DWORD *)(a1 + 352);
      int v21 = 67240704;
      int v22 = v16;
      __int16 v23 = 1026;
      int v24 = v17;
      __int16 v25 = 1026;
      int v26 = v18;
      LODWORD(v20) = 20;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@ClxLink, reach, %{public}d, last, %{public}d, retries, %{public}d",  &v21,  v20);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDae monStatus_Type::NotificationData &)",  "%s\n",  v19);
    }
  }

void sub_1004BC3BC(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 33 && *(_BYTE *)(a4 + 672) == 0)
  {
    sub_100246C40((uint64_t)v15, a4);
    sub_100F7EF6C(*(void *)(a1 + 672), (uint64_t)v15);

    int v6 = v20;
    if (v20)
    {
      p_shared_owners = (unint64_t *)&v20->__shared_owners_;
      do
        unint64_t v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }

    if (v19 < 0) {
      operator delete(__p);
    }
    uint64_t v9 = v17;
    if (v17)
    {
      int v10 = (unint64_t *)&v17->__shared_owners_;
      do
        unint64_t v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }

    int v12 = v16;
    if (v16)
    {
      int v13 = (unint64_t *)&v16->__shared_owners_;
      do
        unint64_t v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }

void sub_1004BC4D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

id *sub_1004BC4E4(id *result, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v4 = (uint64_t)result;
  if (*a3 == 4)
  {
    if (*(_DWORD *)(a4 + 188) != 1)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      int v6 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services disabled, clearing all local cache",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        v9[0] = 0;
        unint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services disabled, clearing all local cache",  v9,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onManagerNotification(int, const CLClientManager_Type::Notification &, const C LClientManager_Type::NotificationData &)",  "%s\n",  v8);
      }

      return sub_1004BC7E4(v4);
    }
  }

  else if (!*a3)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    uint64_t v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning Location Services reset, clearing all local cache",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      v9[0] = 0;
      int v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Location Services reset, clearing all local cache",  v9,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onManagerNotification(int, const CLClientManager_Type::Notification &, const CLC lientManager_Type::NotificationData &)",  "%s\n",  v7);
    }

    sub_1004BC7E4(v4);
    return (id *)(*(uint64_t (**)(void))(**(void **)(v4 + 112) + 40LL))(*(void *)(v4 + 112));
  }

  return result;
}

id *sub_1004BC7E4(uint64_t a1)
{
  int v2 = sub_1004F64FC();
  if ((v2 & 0x400) != 0)
  {
    uint64_t v3 = sub_1004A177C(a1);
    sub_1004031F8(*(void *)(v3 + 32));
    uint64_t v4 = sub_1004A17E0(a1);
    sub_1004031F8(*(void *)(v4 + 32));
  }

  if ((v2 & 0x800000) != 0)
  {
    uint64_t v5 = sub_1004A16B4(a1);
    sub_1004031F8(*(void *)(v5 + 32));
    uint64_t v6 = sub_1004A1718(a1);
    sub_1004031F8(*(void *)(v6 + 32));
  }

  if ((v2 & 0x800) != 0)
  {
    uint64_t v7 = sub_1004A1844(a1);
    sub_1004031F8(*(void *)(v7 + 32));
    uint64_t v8 = sub_1004A18A8(a1);
    sub_1004031F8(*(void *)(v8 + 32));
  }

  if ((v2 & 0x40000) != 0)
  {
    uint64_t v9 = sub_1004A190C(a1);
    sub_1004031F8(*(void *)(v9 + 32));
    uint64_t v10 = sub_1004A1974(a1);
    sub_1004031F8(*(void *)(v10 + 32));
  }

  if ((v2 & 0x4000000) != 0)
  {
    uint64_t v11 = sub_1004A19DC(a1);
    sub_1004031F8(*(void *)(v11 + 32));
    uint64_t v12 = sub_1004A1A44(a1);
    sub_1004031F8(*(void *)(v12 + 32));
  }

  sub_100F7CF18(*(void *)(a1 + 672));
  sub_100F7CF88(*(void *)(a1 + 672));
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  int v13 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "Clearing associated AP centroids in WifiAssociatedApCentroidStore",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    v18[0] = 0;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "Clearing associated AP centroids in WifiAssociatedApCentroidStore",  v18,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNetworkLocationProvider::clearDatabaseEntries()", "%s\n", v17);
  }

  sub_100986194();
  sub_100008390(a1 + 168, *(void **)(a1 + 176));
  *(void *)(a1 + 168) = a1 + 176;
  *(void *)(a1 + 176) = 0LL;
  int v15 = *(void **)(a1 + 216);
  uint64_t v14 = a1 + 216;
  *(void *)(v14 - 32) = 0LL;
  sub_100008390(v14 - 8, v15);
  *(void *)(v14 - 8) = v14;
  *(void *)uint64_t v14 = 0LL;
  *(void *)(v14 + 8) = 0LL;
  sub_1004C1C34(v14 + 32, *(void **)(v14 + 40));
  *(void *)(v14 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(v14 + 48) = 0LL;
  *(void *)(v14 + 32) = v14 + 40;
  sub_100008390(v14 + 72, *(void **)(v14 + 80));
  *(void *)(v14 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(v14 + 88) = 0LL;
  *(void *)(v14 + 72) = v14 + 80;
  sub_100008390(v14 + 112, *(void **)(v14 + 120));
  *(void *)(v14 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(v14 + 128) = 0LL;
  *(void *)(v14 + 112) = v14 + 120;
  sub_100008390(v14 + 200, *(void **)(v14 + 208));
  *(void *)(v14 + 208) = 0LL;
  *(void *)(v14 + 216) = 0LL;
  *(void *)(v14 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v14 + 208;
  return sub_1001BA1BC(v19);
}

void sub_1004BCAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_1004BCB18(uint64_t a1, uint64_t a2, int *a3, unsigned __int8 *a4)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v7 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *a3;
    *(_DWORD *)uint64_t buf = 67109120;
    int v19 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "onCompanionNotification, notification, %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v12 = *a3;
    int v16 = 67109120;
    int v17 = v12;
    int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "onCompanionNotification, notification, %d",  &v16);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v13);
  }

  if (*a3 == 5)
  {
    sub_1004F2598();
    if (sub_1001B9A1C())
    {
      int v9 = *a4;
      *(_BYTE *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v9;
      if (v9) {
        sub_1004A547C(a1);
      }
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v10 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = *a4;
      *(_DWORD *)uint64_t buf = 67240192;
      int v19 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "@ClxLink, Nearby, %{public}d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10183C360);
      }
      int v14 = *a4;
      int v16 = 67240192;
      int v17 = v14;
      int v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@ClxLink, Nearby, %{public}d",  &v16,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, con st CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v15);
    }
  }

double sub_1004BCE54(uint64_t a1, int a2)
{
  *(_BYTE *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = a2 != 1;
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v3 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    if (*(_BYTE *)(a1 + 120)) {
      uint64_t v4 = "enabled";
    }
    else {
      uint64_t v4 = "disabled";
    }
    *(_DWORD *)uint64_t buf = 136315138;
    int v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Data protection is now %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    if (*(_BYTE *)(a1 + 120)) {
      uint64_t v6 = "enabled";
    }
    else {
      uint64_t v6 = "disabled";
    }
    int v8 = 136315138;
    int v9 = v6;
    uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Data protection is now %s",  (const char *)&v8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::handleDataProtectionStatusChanged(CLDataProtectionManager_Type::DataAvailability)",  "%s\n",  v7);
  }

  if (!*(_BYTE *)(a1 + 120))
  {
    sub_1004BD060((void *)a1);
    sub_1004BE774(a1);
    *(void *)&double result = nullsub_10(*(void *)(a1 + 672)).n128_u64[0];
  }

  return result;
}

uint64_t sub_1004BD060(void *a1)
{
  int v2 = (uint64_t *)a1[20];
  if (v2) {
    sub_1004BEA30(v2);
  }
  uint64_t v3 = (uint64_t *)a1[19];
  if (v3) {
    sub_1004BEA30(v3);
  }
  uint64_t v4 = (uint64_t *)a1[25];
  if (v4) {
    sub_1004BEA30(v4);
  }
  uint64_t v5 = (uint64_t *)a1[24];
  if (v5) {
    sub_1004BEA30(v5);
  }
  uint64_t v6 = a1[30];
  if (v6) {
    sub_1004BEF14(v6);
  }
  uint64_t v7 = a1[29];
  if (v7) {
    sub_1004BEF14(v7);
  }
  uint64_t v8 = a1[35];
  if (v8) {
    sub_1004BF3F8(v8);
  }
  uint64_t v9 = a1[34];
  if (v9) {
    sub_1004BF3F8(v9);
  }
  uint64_t v10 = a1[40];
  if (v10) {
    sub_1004BF8DC(v10);
  }
  uint64_t result = a1[39];
  if (result) {
    return sub_1004BF8DC(result);
  }
  return result;
}

double sub_1004BD104(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  if (!*a3) {
    return sub_1004BCE54(a1, *a4);
  }
  return result;
}

void sub_1004BD158(uint64_t a1, uint64_t a2, int *a3)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183C360);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = (const __CFString *)sub_100320878(a3);
    sub_1002A6C50(v5, __p);
    uint64_t v6 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0 ? __p : (std::string *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Nlp, received %{public}s",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183C360);
    }
    uint64_t v7 = qword_101934858;
    uint64_t v8 = (const __CFString *)sub_100320878(a3);
    sub_1002A6C50(v8, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::string buf = &buf;
    }
    else {
      p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    int v12 = 136446210;
    int v13 = p_buf;
    uint64_t v10 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v7,  0LL,  "Nlp, received %{public}s",  &v12,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)",  "%s\n",  (const char *)v10);
    if (v10 != __p) {
      free(v10);
    }
  }

void sub_1004BD370(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      uint64_t v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          uint64_t v9 = (uint64_t *)*v9;
        }

        while (v9);
      }

      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }

        while (!v12);
      }

      double v13 = *((double *)v5 + 8);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      double v14 = vabdd_f64(a2, v13);
      int v15 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134218240;
        double v23 = v14;
        __int16 v24 = 2048;
        double v25 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        int v18 = 134218240;
        double v19 = v14;
        __int16 v20 = 2048;
        double v21 = a1;
        LODWORD(v17) = 22;
        int v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  COERCE_DOUBLE(&v18),  v17);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLTelephonyService_Type::Cell, double>]",  "%s\n",  v16);
      }

      if (v14 >= a1)
      {
        sub_1000087E8(a4, v5);
        operator delete(v5);
      }

      uint64_t v5 = v11;
    }

    while (v11 != (uint64_t *)v4);
  }

void sub_1004BD5D4(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      uint64_t v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          uint64_t v9 = (uint64_t *)*v9;
        }

        while (v9);
      }

      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }

        while (!v12);
      }

      double v13 = *((double *)v5 + 8);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      double v14 = vabdd_f64(a2, v13);
      int v15 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134218240;
        double v23 = v14;
        __int16 v24 = 2048;
        double v25 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        int v18 = 134218240;
        double v19 = v14;
        __int16 v20 = 2048;
        double v21 = a1;
        LODWORD(v17) = 22;
        int v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  COERCE_DOUBLE(&v18),  v17);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLTelephonyService_Type::ScdmaCell, double>]",  "%s\n",  v16);
      }

      if (v14 >= a1)
      {
        sub_1000087E8(a4, v5);
        operator delete(v5);
      }

      uint64_t v5 = v11;
    }

    while (v11 != (uint64_t *)v4);
  }

void sub_1004BD838(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      uint64_t v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          uint64_t v9 = (uint64_t *)*v9;
        }

        while (v9);
      }

      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }

        while (!v12);
      }

      double v13 = *((double *)v5 + 58);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      double v14 = vabdd_f64(a2, v13);
      int v15 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134218240;
        double v23 = v14;
        __int16 v24 = 2048;
        double v25 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        int v18 = 134218240;
        double v19 = v14;
        __int16 v20 = 2048;
        double v21 = a1;
        LODWORD(v17) = 22;
        int v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  COERCE_DOUBLE(&v18),  v17);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLTelephonyService_Type::CdmaCell, double>]",  "%s\n",  v16);
      }

      if (v14 >= a1)
      {
        sub_1000087E8(a4, v5);
        sub_1004C1C7C((uint64_t)(v5 + 4));
        operator delete(v5);
      }

      uint64_t v5 = v11;
    }

    while (v11 != (uint64_t *)v4);
  }

void sub_1004BDAA8(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      uint64_t v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          uint64_t v9 = (uint64_t *)*v9;
        }

        while (v9);
      }

      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }

        while (!v12);
      }

      double v13 = *((double *)v5 + 15);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      double v14 = vabdd_f64(a2, v13);
      int v15 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134218240;
        double v23 = v14;
        __int16 v24 = 2048;
        double v25 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        int v18 = 134218240;
        double v19 = v14;
        __int16 v20 = 2048;
        double v21 = a1;
        LODWORD(v17) = 22;
        int v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  COERCE_DOUBLE(&v18),  v17);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLTelephonyService_Type::LteCell, double>]",  "%s\n",  v16);
      }

      if (v14 >= a1)
      {
        sub_1000087E8(a4, v5);
        operator delete(v5);
      }

      uint64_t v5 = v11;
    }

    while (v11 != (uint64_t *)v4);
  }

void sub_1004BDD0C(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      uint64_t v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          uint64_t v9 = (uint64_t *)*v9;
        }

        while (v9);
      }

      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }

        while (!v12);
      }

      double v13 = *((double *)v5 + 16);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      double v14 = vabdd_f64(a2, v13);
      int v15 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134218240;
        double v23 = v14;
        __int16 v24 = 2048;
        double v25 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        int v18 = 134218240;
        double v19 = v14;
        __int16 v20 = 2048;
        double v21 = a1;
        LODWORD(v17) = 22;
        int v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  COERCE_DOUBLE(&v18),  v17);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLTelephonyService_Type::NrCell, double>]",  "%s\n",  v16);
      }

      if (v14 >= a1)
      {
        sub_1000087E8(a4, v5);
        operator delete(v5);
      }

      uint64_t v5 = v11;
    }

    while (v11 != (uint64_t *)v4);
  }

void sub_1004BDF70(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      uint64_t v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          uint64_t v9 = (uint64_t *)*v9;
        }

        while (v9);
      }

      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }

        while (!v12);
      }

      double v13 = *((double *)v5 + 5);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      double v14 = vabdd_f64(a2, v13);
      int v15 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134218240;
        double v23 = v14;
        __int16 v24 = 2048;
        double v25 = a1;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183C380);
        }
        int v18 = 134218240;
        double v19 = v14;
        __int16 v20 = 2048;
        double v21 = a1;
        LODWORD(v17) = 22;
        int v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf",  COERCE_DOUBLE(&v18),  v17);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLMacAddress, double>]",  "%s\n",  v16);
      }

      if (v14 >= a1)
      {
        sub_1000087E8(a4, v5);
        operator delete(v5);
      }

      uint64_t v5 = v11;
    }

    while (v11 != (uint64_t *)v4);
  }

void sub_1004BE1D4(uint64_t a1)
{
  if (*(void *)(a1 + 512))
  {
    sub_1004BB770(a1, (uint64_t)"onRetryTimer");
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v2 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = *(void *)(a1 + 512);
      int v4 = *(_DWORD *)(a1 + 352);
      uint64_t v5 = *(void *)(a1 + 432);
      uint64_t v6 = *(void *)(a1 + 184);
      uint64_t v7 = *(void *)(a1 + 224);
      uint64_t v8 = *(void *)(a1 + 264);
      uint64_t v9 = *(void *)(a1 + 304);
      uint64_t v10 = *(void *)(a1 + 344);
      *(_DWORD *)std::string buf = 136317186;
      uint64_t v39 = "onRetryTimer";
      __int16 v40 = 2048;
      uint64_t v41 = v3;
      __int16 v42 = 1024;
      int v43 = v4;
      __int16 v44 = 2048;
      uint64_t v45 = v5;
      __int16 v46 = 2048;
      uint64_t v47 = v6;
      __int16 v48 = 2048;
      uint64_t v49 = v7;
      __int16 v50 = 2048;
      uint64_t v51 = v8;
      __int16 v52 = 2048;
      uint64_t v53 = v9;
      __int16 v54 = 2048;
      uint64_t v55 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "NETWORK: onRetryTimer, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu",  buf,  0x58u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C380);
      }
      uint64_t v11 = *(void *)(a1 + 512);
      int v12 = *(_DWORD *)(a1 + 352);
      uint64_t v13 = *(void *)(a1 + 432);
      uint64_t v14 = *(void *)(a1 + 184);
      uint64_t v15 = *(void *)(a1 + 224);
      uint64_t v16 = *(void *)(a1 + 264);
      uint64_t v17 = *(void *)(a1 + 304);
      uint64_t v18 = *(void *)(a1 + 344);
      int v20 = 136317186;
      double v21 = "onRetryTimer";
      __int16 v22 = 2048;
      uint64_t v23 = v11;
      __int16 v24 = 1024;
      int v25 = v12;
      __int16 v26 = 2048;
      uint64_t v27 = v13;
      __int16 v28 = 2048;
      uint64_t v29 = v14;
      __int16 v30 = 2048;
      uint64_t v31 = v15;
      __int16 v32 = 2048;
      uint64_t v33 = v16;
      __int16 v34 = 2048;
      uint64_t v35 = v17;
      __int16 v36 = 2048;
      uint64_t v37 = v18;
      double v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: onRetryTimer, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu",  (const char *)&v20,  88);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNetworkLocationProvider::onRetryTimer()", "%s\n", v19);
    }

    sub_1004B3CCC(a1);
  }

uint64_t sub_1004BE470(uint64_t a1)
{
  double v2 = vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(a1 + 360));
  if (*(void *)(a1 + 432)
    || *(void *)(a1 + 184)
    || *(void *)(a1 + 224)
    || *(void *)(a1 + 264)
    || *(void *)(a1 + 304)
    || (uint64_t v3 = *(void *)(a1 + 344)) != 0)
  {
    LODWORD(v3) = *(_DWORD *)(a1 + 520) == -1;
  }

  if (v2 <= 5400.0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183C380);
  }
  uint64_t v5 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *(_DWORD *)(a1 + 352);
    uint64_t v7 = *(void *)(a1 + 432);
    uint64_t v8 = *(void *)(a1 + 184);
    uint64_t v9 = *(void *)(a1 + 224);
    uint64_t v10 = *(void *)(a1 + 264);
    uint64_t v11 = *(void *)(a1 + 304);
    uint64_t v12 = *(void *)(a1 + 344);
    int v13 = *(_DWORD *)(a1 + 520);
    *(_DWORD *)std::string buf = 67111424;
    int v36 = v6;
    __int16 v37 = 2048;
    uint64_t v38 = v7;
    __int16 v39 = 2048;
    uint64_t v40 = v8;
    __int16 v41 = 2048;
    uint64_t v42 = v9;
    __int16 v43 = 2048;
    uint64_t v44 = v10;
    __int16 v45 = 2048;
    uint64_t v46 = v11;
    __int16 v47 = 2048;
    uint64_t v48 = v12;
    __int16 v49 = 1024;
    int v50 = v13;
    __int16 v51 = 2048;
    double v52 = v2;
    __int16 v53 = 1024;
    int v54 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "NETWORK: areQueryRetriesNeeded, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu, currentRetry, %d, sinceR etrySequenceStart, %.2lf, needed, %d",  buf,  0x5Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C380);
    }
    int v15 = *(_DWORD *)(a1 + 352);
    uint64_t v16 = *(void *)(a1 + 432);
    uint64_t v17 = *(void *)(a1 + 184);
    uint64_t v18 = *(void *)(a1 + 224);
    uint64_t v19 = *(void *)(a1 + 264);
    uint64_t v20 = *(void *)(a1 + 304);
    uint64_t v21 = *(void *)(a1 + 344);
    int v22 = *(_DWORD *)(a1 + 520);
    LODWORD(v25) = 67111424;
    HIDWORD(v25) = v15;
    *(_WORD *)__int16 v26 = 2048;
    *(void *)&v26[2] = v16;
    *(_WORD *)&v26[10] = 2048;
    *(void *)&v26[12] = v17;
    *(_WORD *)&v26[20] = 2048;
    *(void *)&v26[22] = v18;
    *(_WORD *)&v26[30] = 2048;
    *(_WORD *)uint64_t v27 = 2048;
    *(void *)&double v27[2] = v20;
    *(_WORD *)&v27[10] = 2048;
    HIDWORD(v28) = HIDWORD(v21);
    __int16 v29 = 1024;
    int v30 = v22;
    __int16 v31 = 2048;
    double v32 = v2;
    __int16 v33 = 1024;
    int v34 = v4;
    LODWORD(v24) = 90;
    uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "NETWORK: areQueryRetriesNeeded, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu, currentRet ry, %d, sinceRetrySequenceStart, %.2lf, needed, %d",  &v25,  v24,  v25,  *(void *)v26,  *(void *)&v26[8],  *(void *)&v26[16],  *(void *)&v26[24],  v19,  *(double *)v27,  *(_DWORD *)&v27[8]);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLNetworkLocationProvider::isRetryTimerNeeded()", "%s\n", v23);
  }

  return v4;
}

void sub_1004BE76C(uint64_t a1)
{
}

void sub_1004BE774(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 665))
  {
    double v2 = (char *)sub_1002F8DDC();
    sub_10030AC8C(v2, (uint64_t)&v20);
    uint64_t v3 = std::string::append(&v20, "/lockCache_encryptedA.db");
    __int128 v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    int64_t cap = v3->__r_.__value_.__l.__cap_;
    *(_OWORD *)uint64_t v21 = v4;
    v3->__r_.__value_.__l.__size_ = 0LL;
    v3->__r_.__value_.__l.__cap_ = 0LL;
    v3->__r_.__value_.__r.__words[0] = 0LL;
    int v5 = SHIBYTE(cap);
    if (cap >= 0) {
      size_t v6 = HIBYTE(cap);
    }
    else {
      size_t v6 = (size_t)v21[1];
    }
    uint64_t v7 = &v20;
    sub_1000392EC((uint64_t)&v20, v6 + 8);
    if ((v20.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v7 = (std::string *)v20.__r_.__value_.__r.__words[0];
    }
    if (v6)
    {
      if (v5 >= 0) {
        uint64_t v8 = v21;
      }
      else {
        uint64_t v8 = (void **)v21[0];
      }
      memmove(v7, v8, v6);
    }

    strcpy((char *)v7 + v6, "-journal");
    uint64_t v9 = v18;
    sub_1000392EC((uint64_t)v18, v6 + 4);
    if (v19 < 0) {
      uint64_t v9 = (void **)v18[0];
    }
    if (v6)
    {
      if (v5 >= 0) {
        uint64_t v10 = v21;
      }
      else {
        uint64_t v10 = (void **)v21[0];
      }
      memmove(v9, v10, v6);
    }

    strcpy((char *)v9 + v6, "-shm");
    uint64_t v11 = __p;
    sub_1000392EC((uint64_t)__p, v6 + 4);
    if (v17 < 0) {
      uint64_t v11 = (void **)__p[0];
    }
    if (v5 >= 0) {
      uint64_t v12 = v21;
    }
    else {
      uint64_t v12 = (void **)v21[0];
    }
    if (v6) {
      memmove(v11, v12, v6);
    }
    strcpy((char *)v11 + v6, "-wal");
    sub_100296964((const char *)v12);
    if ((v20.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v13 = &v20;
    }
    else {
      int v13 = (std::string *)v20.__r_.__value_.__r.__words[0];
    }
    sub_100296964((const char *)v13);
    if (v19 >= 0) {
      uint64_t v14 = v18;
    }
    else {
      uint64_t v14 = (void **)v18[0];
    }
    sub_100296964((const char *)v14);
    if (v17 >= 0) {
      int v15 = __p;
    }
    else {
      int v15 = (void **)__p[0];
    }
    sub_100296964((const char *)v15);
    if (v17 < 0) {
      operator delete(__p[0]);
    }
    if (v19 < 0) {
      operator delete(v18[0]);
    }
    if (SHIBYTE(cap) < 0) {
      operator delete(v21[0]);
    }
    *(_BYTE *)(a1 + 665) = 1;
  }

void sub_1004BE9B8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27, void *a28, uint64_t a29, int a30, __int16 a31, char a32, char a33)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1004BEA30(uint64_t *result)
{
  if (*(_BYTE *)result)
  {
    unsigned int v1 = result;
    uint64_t v18 = 0LL;
    char v19 = &v18;
    uint64_t v20 = 0x3812000000LL;
    uint64_t v21 = sub_1004C415C;
    int v22 = sub_1004C416C;
    uint64_t v23 = 0LL;
    sub_1004C418C((uint64_t)result, result + 5, &v24);
    uint64_t v2 = v19[6];
    if (v2)
    {
      uint64_t v14 = 0LL;
      int v15 = &v14;
      uint64_t v16 = 0x2020000000LL;
      int v17 = 0;
      sub_100400C74(v2, (uint64_t)buf);
      uint64_t v3 = v1[4];
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472LL;
      _DWORD v13[2] = sub_1004C4240;
      v13[3] = &unk_10183C578;
      v13[4] = &v14;
      v13[5] = &v18;
      v13[6] = v1;
      sub_10040102C(v3, (uint64_t)v13);
      sub_100A112B4(buf);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      __int128 v4 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        int v5 = *((_DWORD *)v15 + 6);
        size_t v6 = v1 + 1;
        *(_DWORD *)std::string buf = 67109378;
        int v29 = v5;
        __int16 v30 = 2080;
        __int16 v31 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Successfully migrated %u rows from in-memory database to persisted for table %s",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_10183C400);
        }
        int v9 = *((_DWORD *)v15 + 6);
        uint64_t v10 = v1 + 1;
        v25[0] = 67109378;
        v25[1] = v9;
        __int16 v26 = 2080;
        uint64_t v27 = v10;
        LODWORD(v12) = 18;
        uint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Successfully migrated %u rows from in-memory database to persisted for table %s",  v25,  v12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLManagedLocationDatabase<CLCellLocationDatabase, CLTelephonyService_Type::Cell>::onDataAvailable() [Data base = CLCellLocationDatabase, DataType = CLTelephonyService_Type::Cell]",  "%s\n",  v11);
      }

      uint64_t v7 = v19[6];
      v19[6] = 0LL;
      uint64_t v8 = v1[4];
      v1[4] = v7;
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
      }
      *(_BYTE *)unsigned int v1 = 0;

      v1[11] = 0LL;
      _Block_object_dispose(&v14, 8);
    }

    _Block_object_dispose(&v18, 8);
    double result = v24;
    uint64_t v24 = 0LL;
    if (result) {
      return (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 8))(result);
    }
  }

  return result;
}

void sub_1004BED44( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, __int16 a29, uint64_t a30, uint64_t a31, uint64_t a32, uint8_t buf)
{
  uint64_t v34 = a28;
  a28 = 0LL;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
  }
  _Unwind_Resume(a1);
}

void sub_1004BEDA0()
{
}

void sub_1004BEEF0()
{
}

void sub_1004BEF04(void *a1, int a2)
{
  if (a2) {
    sub_100006BB8(a1);
  }
  JUMPOUT(0x1004BED98LL);
}

uint64_t sub_1004BEF14(uint64_t result)
{
  if (*(_BYTE *)result)
  {
    uint64_t v1 = result;
    uint64_t v18 = 0LL;
    char v19 = &v18;
    uint64_t v20 = 0x3812000000LL;
    uint64_t v21 = sub_1004C45C4;
    int v22 = sub_1004C45D4;
    uint64_t v23 = 0LL;
    sub_1004C45F4(result, result + 40, &v24);
    uint64_t v2 = v19[6];
    if (v2)
    {
      uint64_t v14 = 0LL;
      int v15 = &v14;
      uint64_t v16 = 0x2020000000LL;
      int v17 = 0;
      sub_100400C74(v2, (uint64_t)buf);
      uint64_t v3 = *(void *)(v1 + 32);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472LL;
      _DWORD v13[2] = sub_1004C46A8;
      v13[3] = &unk_10183C578;
      v13[4] = &v14;
      v13[5] = &v18;
      v13[6] = v1;
      sub_10040102C(v3, (uint64_t)v13);
      sub_100A112B4(buf);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      __int128 v4 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        int v5 = *((_DWORD *)v15 + 6);
        size_t v6 = (void *)(v1 + 8);
        *(_DWORD *)std::string buf = 67109378;
        int v29 = v5;
        __int16 v30 = 2080;
        __int16 v31 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Successfully migrated %u rows from in-memory database to persisted for table %s",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_10183C400);
        }
        int v9 = *((_DWORD *)v15 + 6);
        uint64_t v10 = (void *)(v1 + 8);
        v25[0] = 67109378;
        v25[1] = v9;
        __int16 v26 = 2080;
        uint64_t v27 = v10;
        LODWORD(v12) = 18;
        uint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Successfully migrated %u rows from in-memory database to persisted for table %s",  v25,  v12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLManagedLocationDatabase<CLCdmaCellLocationDatabase, CLTelephonyService_Type::CdmaCell>::onDataAvailable () [Database = CLCdmaCellLocationDatabase, DataType = CLTelephonyService_Type::CdmaCell]",  "%s\n",  v11);
      }

      uint64_t v7 = v19[6];
      v19[6] = 0LL;
      uint64_t v8 = *(void *)(v1 + 32);
      *(void *)(v1 + 32) = v7;
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
      }
      *(_BYTE *)uint64_t v1 = 0;

      *(void *)(v1 + 88) = 0LL;
      _Block_object_dispose(&v14, 8);
    }

    _Block_object_dispose(&v18, 8);
    double result = v24;
    uint64_t v24 = 0LL;
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

void sub_1004BF228( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, __int16 a29, uint64_t a30, uint64_t a31, uint64_t a32, uint8_t buf)
{
  uint64_t v34 = a28;
  a28 = 0LL;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
  }
  _Unwind_Resume(a1);
}

void sub_1004BF284()
{
}

void sub_1004BF3D4()
{
}

void sub_1004BF3E8(void *a1, int a2)
{
  if (a2) {
    sub_100006BB8(a1);
  }
  JUMPOUT(0x1004BF27CLL);
}

uint64_t sub_1004BF3F8(uint64_t result)
{
  if (*(_BYTE *)result)
  {
    uint64_t v1 = result;
    uint64_t v18 = 0LL;
    char v19 = &v18;
    uint64_t v20 = 0x3812000000LL;
    uint64_t v21 = sub_1004C4ACC;
    int v22 = sub_1004C4ADC;
    uint64_t v23 = 0LL;
    sub_1004C4AFC(result, result + 40, &v24);
    uint64_t v2 = v19[6];
    if (v2)
    {
      uint64_t v14 = 0LL;
      int v15 = &v14;
      uint64_t v16 = 0x2020000000LL;
      int v17 = 0;
      sub_100400C74(v2, (uint64_t)buf);
      uint64_t v3 = *(void *)(v1 + 32);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472LL;
      _DWORD v13[2] = sub_1004C4BB0;
      v13[3] = &unk_10183C578;
      v13[4] = &v14;
      v13[5] = &v18;
      v13[6] = v1;
      sub_10040102C(v3, (uint64_t)v13);
      sub_100A112B4(buf);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      __int128 v4 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        int v5 = *((_DWORD *)v15 + 6);
        size_t v6 = (void *)(v1 + 8);
        *(_DWORD *)std::string buf = 67109378;
        int v29 = v5;
        __int16 v30 = 2080;
        __int16 v31 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Successfully migrated %u rows from in-memory database to persisted for table %s",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_10183C400);
        }
        int v9 = *((_DWORD *)v15 + 6);
        uint64_t v10 = (void *)(v1 + 8);
        v25[0] = 67109378;
        v25[1] = v9;
        __int16 v26 = 2080;
        uint64_t v27 = v10;
        LODWORD(v12) = 18;
        uint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Successfully migrated %u rows from in-memory database to persisted for table %s",  v25,  v12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLManagedLocationDatabase<CLLteCellLocationDatabase, CLTelephonyService_Type::LteCell>::onDataAvailable() [Database = CLLteCellLocationDatabase, DataType = CLTelephonyService_Type::LteCell]",  "%s\n",  v11);
      }

      uint64_t v7 = v19[6];
      v19[6] = 0LL;
      uint64_t v8 = *(void *)(v1 + 32);
      *(void *)(v1 + 32) = v7;
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
      }
      *(_BYTE *)uint64_t v1 = 0;

      *(void *)(v1 + 88) = 0LL;
      _Block_object_dispose(&v14, 8);
    }

    _Block_object_dispose(&v18, 8);
    double result = v24;
    uint64_t v24 = 0LL;
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

void sub_1004BF70C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, __int16 a29, uint64_t a30, uint64_t a31, uint64_t a32, uint8_t buf)
{
  uint64_t v34 = a28;
  a28 = 0LL;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
  }
  _Unwind_Resume(a1);
}

void sub_1004BF768()
{
}

void sub_1004BF8B8()
{
}

void sub_1004BF8CC(void *a1, int a2)
{
  if (a2) {
    sub_100006BB8(a1);
  }
  JUMPOUT(0x1004BF760LL);
}

uint64_t sub_1004BF8DC(uint64_t result)
{
  if (*(_BYTE *)result)
  {
    uint64_t v1 = result;
    uint64_t v18 = 0LL;
    char v19 = &v18;
    uint64_t v20 = 0x3812000000LL;
    uint64_t v21 = sub_1004C4F54;
    int v22 = sub_1004C4F64;
    uint64_t v23 = 0LL;
    sub_100364018(result, result + 40, &v24);
    uint64_t v2 = v19[6];
    if (v2)
    {
      uint64_t v14 = 0LL;
      int v15 = &v14;
      uint64_t v16 = 0x2020000000LL;
      int v17 = 0;
      sub_100400C74(v2, (uint64_t)buf);
      uint64_t v3 = *(void *)(v1 + 32);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472LL;
      _DWORD v13[2] = sub_1004C4F84;
      v13[3] = &unk_10183C578;
      v13[4] = &v14;
      v13[5] = &v18;
      v13[6] = v1;
      sub_10040102C(v3, (uint64_t)v13);
      sub_100A112B4(buf);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      __int128 v4 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        int v5 = *((_DWORD *)v15 + 6);
        size_t v6 = (void *)(v1 + 8);
        *(_DWORD *)std::string buf = 67109378;
        int v29 = v5;
        __int16 v30 = 2080;
        __int16 v31 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Successfully migrated %u rows from in-memory database to persisted for table %s",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_10183C400);
        }
        int v9 = *((_DWORD *)v15 + 6);
        uint64_t v10 = (void *)(v1 + 8);
        v25[0] = 67109378;
        v25[1] = v9;
        __int16 v26 = 2080;
        uint64_t v27 = v10;
        LODWORD(v12) = 18;
        uint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Successfully migrated %u rows from in-memory database to persisted for table %s",  v25,  v12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLManagedLocationDatabase<CLNrCellLocationDatabase, CLTelephonyService_Type::NrCell>::onDataAvailable() [ Database = CLNrCellLocationDatabase, DataType = CLTelephonyService_Type::NrCell]",  "%s\n",  v11);
      }

      uint64_t v7 = v19[6];
      v19[6] = 0LL;
      uint64_t v8 = *(void *)(v1 + 32);
      *(void *)(v1 + 32) = v7;
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
      }
      *(_BYTE *)uint64_t v1 = 0;

      *(void *)(v1 + 88) = 0LL;
      _Block_object_dispose(&v14, 8);
    }

    _Block_object_dispose(&v18, 8);
    double result = v24;
    uint64_t v24 = 0LL;
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

void sub_1004BFBF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, __int16 a29, uint64_t a30, uint64_t a31, uint64_t a32, uint8_t buf)
{
  uint64_t v34 = a28;
  a28 = 0LL;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
  }
  _Unwind_Resume(a1);
}

void sub_1004BFC4C()
{
}

void sub_1004BFD9C()
{
}

void sub_1004BFDB0(void *a1, int a2)
{
  if (a2) {
    sub_100006BB8(a1);
  }
  JUMPOUT(0x1004BFC44LL);
}

void sub_1004BFDC0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLNetworkLocationProvider");
  sub_1004BFE88((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *uint64_t v8 = off_10183C2C8;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1004BFE5C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1004BFE88(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_10183C5A8;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    uint64_t v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_1004BFF5C(uint64_t a1, uint64_t a2)
{
  HIDWORD(v14) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::string buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v14 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183C340);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v11 = (void *)(a1 + 8);
        *(_DWORD *)std::string buf = 136446466;
        uint64_t v20 = v11;
        __int16 v21 = 1026;
        int v22 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10183C340);
        }
        uint64_t v12 = (void *)(a1 + 8);
        int v15 = 136446466;
        uint64_t v16 = v12;
        __int16 v17 = 1026;
        int v18 = a2;
        LODWORD(v14) = 18;
        id v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                        &v15,
                        v14);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::Notifica tionData>::removeClient(int) [Notification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_ T = CLNetworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
      }
    }
  }

uint64_t sub_1004C01D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_1019383C0);
}

uint64_t sub_1004C01E4(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)uint64_t v42 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          uint64_t v24 = (uint64_t *)v18;
        }
        else {
          uint64_t v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          int v29 = (uint64_t *)v25;
        }
        else {
          int v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v40 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)std::string buf = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        *(void *)std::string buf = 0LL;
        *(void *)&uint8_t buf[8] = 0LL;
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          int v36 = sub_1004C53A0(buf);
          sub_1004C3708((_BYTE *)a1, (uint64_t)v42, (uint64_t)&v40, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v40 = a1 + 64;
        char v30 = byte_1019383C1;
        HIDWORD(v39) = v17;
        *(void *)std::string buf = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v30;
        HIDWORD(v39) = *a3;
        *(void *)std::string buf = (char *)&v39 + 4;
        __int16 v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v39) = *a3;
        *(void *)std::string buf = (char *)&v39 + 4;
        __int16 v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::string buf = &v41;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        *(_DWORD *)std::string buf = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v42 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183C340);
  }
  uint64_t v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    int v15 = (void *)(a1 + 8);
    *(_DWORD *)std::string buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&uint8_t buf[12] = 1026;
    *(_DWORD *)&buf[14] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    __int16 v37 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t v42 = 136446466;
    *(void *)&v42[4] = v37;
    __int16 v43 = 1026;
    int v44 = a2;
    LODWORD(v39) = 18;
    uint64_t v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                    v42,
                    v39);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::Notification Data>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLNetwor kLocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_Type::NotificationData, Notif icationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_1004C0640(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::string buf = 136446466;
      int v29 = v11;
      __int16 v30 = 1026;
      int v31 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183C340);
      }
      int v22 = (void *)(a1 + 8);
      int v24 = 136446466;
      uint64_t v25 = v22;
      __int16 v26 = 1026;
      int v27 = a2;
      BOOL v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                      &v24,
                      18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::Notificati onData>::clientRegistered(int, const Notification_T &) [Notification_T = CLNetworkLocationProvider_Type::Notific ation, NotificationData_T = CLNetworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, Registr ationInfo_T = char]",  "%s\n",  v23);
      return 0LL;
    }
  }

  return result;
}

BOOL sub_1004C08C0(char *a1, int a2, int *a3)
{
  HIDWORD(v33) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                uint64_t v25 = (uint64_t *)v20;
              }
              else {
                uint64_t v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v33 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10183C340);
              }
              __int16 v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v27 = a1 + 8;
                if (a1[31] < 0) {
                  int v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v43 >= 0) {
                  BOOL v28 = __p;
                }
                else {
                  BOOL v28 = (void **)__p[0];
                }
                *(_DWORD *)std::string buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v35 = 2082;
                int v36 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v43 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10183C340);
                }
                int v29 = a1 + 8;
                if (a1[31] < 0) {
                  int v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v37 >= 0) {
                  int v31 = buf;
                }
                else {
                  int v31 = *(_BYTE **)buf;
                }
                int v38 = 136446466;
                uint64_t v39 = v29;
                __int16 v40 = 2082;
                int v41 = v31;
                LODWORD(v33) = 22;
                char v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                                &v38,
                                v33);
                if (v37 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type:: NotificationData>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLNetworkL ocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_Type::NotificationD ata, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v32);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_1004C0C48(uint64_t a1, int *a2, _OWORD *a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 == v3) {
    return 0LL;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0LL;
  }
  int v11 = *(_OWORD **)(v7 + 64);
  if (!v11) {
    return 0LL;
  }
  *a3 = *v11;
  return 1LL;
}

uint64_t sub_1004C0CA8(uint64_t a1, int *a2, _OWORD *a3)
{
  int v6 = (char *)operator new(0x28uLL);
  *((void *)v6 + 2) = 0LL;
  *(void *)int v6 = off_10183C510;
  *((void *)v6 + 1) = 0LL;
  *(_OWORD *)(v6 + 24) = *a3;
  *(void *)&__int128 v13 = v6 + 24;
  *((void *)&v13 + 1) = v6;
  int v12 = *a2;
  uint64_t v14 = &v12;
  uint64_t v7 = sub_10023347C((uint64_t **)(a1 + 56), &v12, (uint64_t)&unk_1012CF090, &v14);
  sub_10005F550((uint64_t)(v7 + 8), &v13);
  int v8 = (std::__shared_weak_count *)*((void *)&v13 + 1);
  if (*((void *)&v13 + 1))
  {
    BOOL v9 = (unint64_t *)(*((void *)&v13 + 1) + 8LL);
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  return 1LL;
}

void sub_1004C0D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1004C0D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = 0LL;
  v5[1] = 0LL;
  return (*(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v5,  a3,  a4,  0LL);
}

void sub_1004C0DC8(uint64_t a1, unsigned int *a2, _OWORD *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    unint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    int v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v12 = (void *)(a1 + 8);
      __int128 v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::string buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v66 = 2082;
      __int128 v67 = v12;
      __int16 v68 = 2050;
      __int128 v69 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)__int128 v70 = &v70[8];
      memset(&v70[8], 0, 24);
      __int128 v71 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v70);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v69;
      if (v69)
      {
        p_shared_owners = (unint64_t *)&v69->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v71;
      if (v71)
      {
        uint64_t v25 = (unint64_t *)&v71->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v70, *(void **)&v70[8]);
    }

    if (a4)
    {
      int v27 = (char *)operator new(0x28uLL);
      *((void *)v27 + 2) = 0LL;
      *(void *)int v27 = off_10183C510;
      *((void *)v27 + 1) = 0LL;
      *(_OWORD *)(v27 + 24) = *a3;
      *(void *)std::string buf = v27 + 24;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      BOOL v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        int v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    int v31 = sub_1004C32B4(a3);
    if (a5 == -1)
    {
      sub_1004C3334((void *)a1, (int *)a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          char v37 = (uint64_t *)v33;
        }
        else {
          char v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v63 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      __int16 v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          char v43 = (unint64_t *)v38;
        }
        else {
          char v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          __int16 v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        __int128 v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10183C340);
        }
        int v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          __int16 v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v70, a1, a2);
          if (v70[23] >= 0) {
            uint64_t v46 = v70;
          }
          else {
            uint64_t v46 = *(_BYTE **)v70;
          }
          *(_DWORD *)std::string buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v70[23] & 0x80000000) != 0) {
            operator delete(*(void **)v70);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_10183C340);
          }
          __int16 v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            __int16 v49 = __p;
          }
          else {
            __int16 v49 = (void **)__p[0];
          }
          *(_DWORD *)__int128 v70 = 136315650;
          *(void *)&v70[4] = v47;
          *(_WORD *)&v70[12] = 1024;
          *(_DWORD *)&v70[14] = a5;
          *(_WORD *)&v70[18] = 2080;
          *(void *)&v70[20] = v49;
          int v50 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
                          v70,
                          28,
                          v59);
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::Notifi cationData>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Not ification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_T ype::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v50);
          if (v50 != buf) {
            free(v50);
          }
        }

        goto LABEL_83;
      }

      __int128 v62 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v53 = v40[3].n128_i64[0];
      __int16 v51 = v40 + 3;
      double v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v34 + 32);
      uint64_t v55 = v51;
      do
      {
        int v56 = v52[1].n128_i32[3];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          __int16 v58 = v52;
        }
        else {
          __int16 v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          uint64_t v55 = v52;
        }
        double v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_1004C3708((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v31);
    }

void sub_1004C1400( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_1004C144C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::string buf = 136315138;
      uint64_t v34 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183C340);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v29 = 136315138;
      unint64_t v30 = v4;
      uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
                     (const char *)&v29);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::Notificati onData>::listClients() [Notification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_T = CLNe tworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183C340);
    }
    int v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = (void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 96);
      *(_DWORD *)std::string buf = 136315394;
      uint64_t v34 = v7;
      __int16 v35 = 2048;
      v36[0] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183C340);
      }
      uint64_t v25 = (void *)(a1 + 8);
      uint64_t v26 = *(void *)(a1 + 96);
      int v29 = 136315394;
      unint64_t v30 = v25;
      __int16 v31 = 2048;
      v32[0] = v26;
      int v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
                      (const char *)&v29,
                      22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::Notificati onData>::listClients() [Notification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_T = CLNe tworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v27);
    }

    BOOL v9 = *(void **)(a1 + 80);
    if (v9 != (void *)(a1 + 88))
    {
      unint64_t v10 = (void *)(a1 + 8);
      do
      {
        int v11 = (void *)v9[5];
        if (v11 != v9 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_10183C340);
            }
            int v12 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v13 = (void *)(a1 + 8);
              int v14 = *((_DWORD *)v9 + 8);
              int v15 = *((_DWORD *)v11 + 7);
              *(_DWORD *)std::string buf = 136315650;
              uint64_t v34 = v13;
              __int16 v35 = 1024;
              LODWORD(v36[0]) = v14;
              WORD2(v36[0]) = 1024;
              *(_DWORD *)((char *)v36 + 6) = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10183C340);
              }
              BOOL v19 = (void *)(a1 + 8);
              int v20 = *((_DWORD *)v9 + 8);
              int v21 = *((_DWORD *)v11 + 7);
              int v29 = 136315650;
              unint64_t v30 = v19;
              __int16 v31 = 1024;
              LODWORD(v32[0]) = v20;
              WORD2(v32[0]) = 1024;
              *(_DWORD *)((char *)v32 + 6) = v21;
              int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                              (const char *)&v29,
                              24,
                              v28);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::No tificationData>::listClients() [Notification_T = CLNetworkLocationProvider_Type::Notification, Notificat ionData_T = CLNetworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v22);
            }

            signed __int32 v16 = (void *)v11[1];
            if (v16)
            {
              do
              {
                int v17 = v16;
                signed __int32 v16 = (void *)*v16;
              }

              while (v16);
            }

            else
            {
              do
              {
                int v17 = (void *)v11[2];
                BOOL v18 = *v17 == (void)v11;
                int v11 = v17;
              }

              while (!v18);
            }

            int v11 = v17;
          }

          while (v17 != v9 + 6);
        }

        unint64_t v23 = (void *)v9[1];
        if (v23)
        {
          do
          {
            BOOL v24 = v23;
            unint64_t v23 = (void *)*v23;
          }

          while (v23);
        }

        else
        {
          do
          {
            BOOL v24 = (void *)v9[2];
            BOOL v18 = *v24 == (void)v9;
            BOOL v9 = v24;
          }

          while (!v18);
        }

        BOOL v9 = v24;
      }

      while (v24 != (void *)(a1 + 88));
    }
  }

void sub_1004C19F8(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1004C5340(a1);
  operator delete(v1);
}

void sub_1004C1A0C(uint64_t a1, int a2, void *a3)
{
  if (v5)
  {
    int v6 = a2;
    (*(void (**)(void, int *, uint64_t, void))(a1 + 24))(0LL, &v6, v5, *(void *)(a1 + 32));
  }

void sub_1004C1A58(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1004C1A84(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1004C1AB0(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1004C1ADC(id a1)
{
  qword_101934A98 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

void sub_1004C1B08(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_1004C1B34(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_1004C1B60(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_1004C1B8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_1004C1BB8(v3);
    operator delete(v4);
  }

uint64_t sub_1004C1BB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  return a1;
}

void sub_1004C1C34(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1004C1C34(a1, *a2);
    sub_1004C1C34(a1, a2[1]);
    sub_1004C1C7C((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_1004C1C7C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    *(void *)(a1 + 16) = v2;
    operator delete(v2);
  }

void sub_1004C1CC0(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1004C1CC0(a1, *a2);
    sub_1004C1CC0(a1, a2[1]);
    uint64_t v4 = (void *)a2[5];
    if (v4)
    {
      a2[6] = v4;
      operator delete(v4);
    }

    operator delete(a2);
  }

_OWORD *sub_1004C1D10(uint64_t **a1, _DWORD *a2, uint64_t a3, _OWORD **a4)
{
  int v6 = (void **)sub_1004C1D98((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x48uLL);
    __int128 v9 = (*a4)[1];
    v7[2] = **a4;
    v7[3] = v9;
    *((void *)v7 + 8) = 0LL;
    sub_1000085FC(a1, v11, v8, (uint64_t *)v7);
  }

  return v7;
}

void *sub_1004C1D98(uint64_t a1, void *a2, _DWORD *a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = (void *)v4;
        uint64_t v8 = (_DWORD *)(v4 + 32);
        if (!sub_1004C1E28(a3, (_DWORD *)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      if (!sub_1004C1E28(v8, a3)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      uint64_t v4 = v7[1];
    }

    while (v4);
  }

  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }

BOOL sub_1004C1E28(_DWORD *a1, _DWORD *a2)
{
  BOOL v2 = *a1 < *a2;
  if (*a1 == *a2)
  {
    int v3 = a1[1];
    int v4 = a2[1];
    BOOL v2 = v3 < v4;
    if (v3 == v4)
    {
      if (a1[2] == a2[2] && a1[3] == a2[3]) {
        return 0LL;
      }
      int v6 = a1[2];
      int v7 = a2[2];
      BOOL v2 = v6 < v7;
      if (v6 == v7) {
        return a1[3] < a2[3];
      }
    }
  }

  return v2;
}

uint64_t *sub_1004C1E94(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int v6 = (uint64_t **)sub_1004C1F3C((uint64_t)a1, &v11, a2);
  int v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    sub_1004C1FCC((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000085FC(a1, v11, v8, v10[0]);
    int v7 = v10[0];
    v10[0] = 0LL;
    sub_1004C2474((uint64_t)v10, 0LL);
  }

  return v7;
}

void *sub_1004C1F3C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  int v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        int v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        int v4 = (void *)*v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      if (!sub_1004C2034(v8, a3)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      int v4 = (void *)v7[1];
    }

    while (v4);
  }

  else
  {
    int v7 = (void *)(a1 + 8);
  }

uint64_t sub_1004C1FCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0x1D8uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_1004C2350((uint64_t)v6 + 32, *a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1004C201C(_Unwind_Exception *a1)
{
}

BOOL sub_1004C2034(uint64_t a1, uint64_t a2)
{
  if (sub_1004C20FC(a1, a2)) {
    return 0LL;
  }
  BOOL v5 = *(_DWORD *)a1 < *(_DWORD *)a2;
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    int v6 = *(_DWORD *)(a1 + 232);
    int v7 = *(_DWORD *)(a2 + 232);
    BOOL v5 = v6 < v7;
    if (v6 == v7)
    {
      int v8 = *(_DWORD *)(a1 + 32);
      int v9 = *(_DWORD *)(a2 + 32);
      BOOL v5 = v8 < v9;
      if (v8 == v9)
      {
        int v10 = *(_DWORD *)(a1 + 36);
        int v11 = *(_DWORD *)(a2 + 36);
        BOOL v5 = v10 < v11;
        if (v10 == v11)
        {
          int v12 = *(_DWORD *)(a1 + 44);
          int v13 = *(_DWORD *)(a2 + 44);
          BOOL v5 = v12 < v13;
          if (v12 == v13)
          {
            return *(_DWORD *)(a1 + 40) < *(_DWORD *)(a2 + 40);
          }
        }
      }
    }
  }

  return v5;
}

BOOL sub_1004C20FC(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2
    || *(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)
    || *(_DWORD *)(a1 + 36) != *(_DWORD *)(a2 + 36)
    || *(_DWORD *)(a1 + 40) != *(_DWORD *)(a2 + 40)
    || *(_DWORD *)(a1 + 44) != *(_DWORD *)(a2 + 44)
    || *(_DWORD *)(a1 + 48) != *(_DWORD *)(a2 + 48))
  {
    return 0LL;
  }

  BOOL result = sub_1004C22B0((unsigned __int8 *)(a1 + 240), (unsigned __int8 *)(a2 + 240));
  if (!result) {
    return result;
  }
  return *(_DWORD *)(a1 + 52) == *(_DWORD *)(a2 + 52) && *(_DWORD *)(a1 + 56) == *(_DWORD *)(a2 + 56);
}

BOOL sub_1004C21B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0LL) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0LL) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 1LL;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) != 0;
  }
  if (a1[23])
  {
    uint64_t v6 = v2 - 1;
    do
    {
      int v8 = *a1++;
      int v7 = v8;
      int v9 = *a2++;
      BOOL v10 = v7 == v9;
      uint64_t v2 = v7 != v9;
      BOOL v10 = !v10 || v6-- == 0;
    }

    while (!v10);
  }

  return v2;
}

BOOL sub_1004C2248(void *a1, void *a2)
{
  int v2 = *((char *)a2 + 23);
  int v3 = *((char *)a1 + 23);
  if (v3 >= 0) {
    size_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v4 = a1[1];
  }
  if (v3 < 0) {
    a1 = (void *)*a1;
  }
  if (v2 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = a2[1];
  }
  if (v2 < 0) {
    a2 = (void *)*a2;
  }
  if (v5 >= v4) {
    size_t v6 = v4;
  }
  else {
    size_t v6 = v5;
  }
  int v7 = memcmp(a1, a2, v6);
  if (v7) {
    return v7 < 0;
  }
  else {
    return v4 < v5;
  }
}

BOOL sub_1004C22B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0LL) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0LL) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0LL;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1LL;
  }
  uint64_t v6 = v2 - 1;
  do
  {
    int v8 = *a1++;
    int v7 = v8;
    int v10 = *a2++;
    int v9 = v10;
    BOOL v12 = v6-- != 0;
    BOOL v13 = v7 == v9;
    BOOL v14 = v7 == v9;
  }

  while (v13 && v12);
  return v14;
}

uint64_t sub_1004C2350(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  sub_10001B72C( (void *)(a1 + 8),  *(const void **)(a2 + 8),  *(void *)(a2 + 16),  (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 64);
  __int128 v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __int128 v7 = *(_OWORD *)(a2 + 112);
  __int128 v8 = *(_OWORD *)(a2 + 128);
  __int128 v9 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __int128 v10 = *(_OWORD *)(a2 + 176);
  __int128 v11 = *(_OWORD *)(a2 + 192);
  __int128 v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 22sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a2 + 220);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 176) = v10;
  BOOL v13 = (_BYTE *)(a1 + 240);
  if (*(char *)(a2 + 263) < 0)
  {
    sub_1010DD48C(v13, *(void **)(a2 + 240), *(void *)(a2 + 248));
  }

  else
  {
    __int128 v14 = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(_OWORD *)BOOL v13 = v14;
  }

  __int128 v15 = *(_OWORD *)(a2 + 264);
  __int128 v16 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v16;
  *(_OWORD *)(a1 + 264) = v15;
  __int128 v17 = *(_OWORD *)(a2 + 312);
  __int128 v18 = *(_OWORD *)(a2 + 328);
  __int128 v19 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v19;
  *(_OWORD *)(a1 + 312) = v17;
  *(_OWORD *)(a1 + 328) = v18;
  __int128 v20 = *(_OWORD *)(a2 + 376);
  __int128 v21 = *(_OWORD *)(a2 + 392);
  __int128 v22 = *(_OWORD *)(a2 + 408);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v21;
  *(_OWORD *)(a1 + 408) = v22;
  *(_OWORD *)(a1 + 376) = v20;
  *(void *)(a1 + 432) = 0LL;
  return a1;
}

void sub_1004C2458(_Unwind_Exception *exception_object)
{
  __int128 v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

void sub_1004C2474(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_1004C1C7C((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

_OWORD *sub_1004C24B8(uint64_t **a1, _DWORD *a2, uint64_t a3, _OWORD **a4)
{
  __int128 v6 = (void **)sub_1004C1D98((uint64_t)a1, &v16, a2);
  __int128 v7 = *v6;
  if (!*v6)
  {
    __int128 v8 = (uint64_t **)v6;
    __int128 v7 = operator new(0x80uLL);
    __int128 v9 = *a4;
    __int128 v10 = (*a4)[1];
    v7[2] = **a4;
    v7[3] = v10;
    __int128 v11 = v9[2];
    __int128 v12 = v9[3];
    __int128 v13 = v9[4];
    uint64_t v14 = *((void *)v9 + 10);
    v7[5] = v12;
    v7[6] = v13;
    v7[4] = v11;
    *((void *)v7 + 14) = v14;
    *((void *)v7 + 15) = 0LL;
    sub_1000085FC(a1, v16, v8, (uint64_t *)v7);
  }

  return v7;
}

_OWORD *sub_1004C2554(uint64_t **a1, uint64_t a2, uint64_t a3, _OWORD **a4)
{
  __int128 v6 = (void **)sub_1004C25EC((uint64_t)a1, &v15, a2);
  __int128 v7 = *v6;
  if (!*v6)
  {
    __int128 v8 = (uint64_t **)v6;
    __int128 v7 = operator new(0x88uLL);
    __int128 v9 = *a4;
    __int128 v10 = (*a4)[1];
    v7[2] = **a4;
    v7[3] = v10;
    __int128 v11 = v9[2];
    __int128 v12 = v9[3];
    __int128 v13 = v9[5];
    v7[6] = v9[4];
    v7[7] = v13;
    v7[4] = v11;
    v7[5] = v12;
    *((void *)v7 + 16) = 0LL;
    sub_1000085FC(a1, v15, v8, (uint64_t *)v7);
  }

  return v7;
}

void *sub_1004C25EC(uint64_t a1, void *a2, uint64_t a3)
{
  __int128 v5 = (void *)(a1 + 8);
  __int128 v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        __int128 v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        __int128 v4 = (void *)*v7;
        __int128 v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      if (!sub_1004C267C(v8, a3)) {
        break;
      }
      __int128 v5 = v7 + 1;
      __int128 v4 = (void *)v7[1];
    }

    while (v4);
  }

  else
  {
    __int128 v7 = (void *)(a1 + 8);
  }

BOOL sub_1004C267C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(_DWORD *)a1 < *(_DWORD *)a2;
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    int v3 = *(_DWORD *)(a1 + 4);
    int v4 = *(_DWORD *)(a2 + 4);
    BOOL v2 = v3 < v4;
    if (v3 == v4)
    {
      if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
        return 0LL;
      }
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a2 + 8);
      BOOL v2 = v6 < v7;
      if (v6 == v7) {
        return *(void *)(a1 + 16) < *(void *)(a2 + 16);
      }
    }
  }

  return v2;
}

void *sub_1004C26E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = (void *)(a1 + 8);
  int v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  __int128 v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = sub_1004C2034((uint64_t)(v3 + 4), a2);
    int v7 = v3 + 1;
    if (!v6)
    {
      int v7 = v3;
      __int128 v5 = v3;
    }

    int v3 = (void *)*v7;
  }

  while (*v7);
  return v5;
}

uint64_t sub_1004C2760(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0x84BDA12F684BDA13LL * ((a1[1] - *a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x97B425ED097B42LL) {
    sub_100007008();
  }
  if (0x97B425ED097B426LL * ((a1[2] - *a1) >> 4) > v4) {
    unint64_t v4 = 0x97B425ED097B426LL * ((a1[2] - *a1) >> 4);
  }
  if (0x84BDA12F684BDA13LL * ((a1[2] - *a1) >> 4) >= 0x4BDA12F684BDA1LL) {
    unint64_t v6 = 0x97B425ED097B42LL;
  }
  else {
    unint64_t v6 = v4;
  }
  uint64_t v14 = a1 + 2;
  if (v6) {
    int v7 = (char *)sub_1004C2A10((uint64_t)(a1 + 2), v6);
  }
  else {
    int v7 = 0LL;
  }
  __int128 v10 = v7;
  __int128 v11 = &v7[432 * v3];
  __int128 v13 = &v7[432 * v6];
  sub_1004C2884((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  __int128 v12 = v11 + 432;
  sub_1004C299C(a1, &v10);
  uint64_t v8 = a1[1];
  sub_1004C2C38(&v10);
  return v8;
}

void sub_1004C2870(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

__n128 sub_1004C2884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a2 = *(_DWORD *)a3;
  *(void *)(a2 + 8) = 0LL;
  *(void *)(a2 + 16) = 0LL;
  *(void *)(a2 + 24) = 0LL;
  sub_10001B72C( (void *)(a2 + 8),  *(const void **)(a3 + 8),  *(void *)(a3 + 16),  (uint64_t)(*(void *)(a3 + 16) - *(void *)(a3 + 8)) >> 2);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a3 + 32);
  __int128 v5 = *(_OWORD *)(a3 + 48);
  __int128 v6 = *(_OWORD *)(a3 + 64);
  __int128 v7 = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(a2 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a2 + 96) = v7;
  *(_OWORD *)(a2 + 48) = v5;
  *(_OWORD *)(a2 + 64) = v6;
  __int128 v8 = *(_OWORD *)(a3 + 112);
  __int128 v9 = *(_OWORD *)(a3 + 128);
  __int128 v10 = *(_OWORD *)(a3 + 160);
  *(_OWORD *)(a2 + 144) = *(_OWORD *)(a3 + 144);
  *(_OWORD *)(a2 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v10;
  *(_OWORD *)(a2 + 112) = v8;
  *(_OWORD *)(a2 + 128) = v9;
  __int128 v11 = *(_OWORD *)(a3 + 176);
  __int128 v12 = *(_OWORD *)(a3 + 192);
  __int128 v13 = *(_OWORD *)(a3 + 208);
  *(_OWORD *)(a2 + 22sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a3 + 220);
  *(_OWORD *)(a2 + 192) = v12;
  *(_OWORD *)(a2 + 208) = v13;
  *(_OWORD *)(a2 + 176) = v11;
  uint64_t v14 = (_BYTE *)(a2 + 240);
  if (*(char *)(a3 + 263) < 0)
  {
    sub_1010DD48C(v14, *(void **)(a3 + 240), *(void *)(a3 + 248));
  }

  else
  {
    __int128 v15 = *(_OWORD *)(a3 + 240);
    *(void *)(a2 + 256) = *(void *)(a3 + 256);
    *(_OWORD *)uint64_t v14 = v15;
  }

  __int128 v16 = *(_OWORD *)(a3 + 264);
  __int128 v17 = *(_OWORD *)(a3 + 296);
  *(_OWORD *)(a2 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a3 + 280);
  *(_OWORD *)(a2 + 296) = v17;
  *(_OWORD *)(a2 + 264) = v16;
  __int128 v18 = *(_OWORD *)(a3 + 312);
  __int128 v19 = *(_OWORD *)(a3 + 328);
  __int128 v20 = *(_OWORD *)(a3 + 360);
  *(_OWORD *)(a2 + 344) = *(_OWORD *)(a3 + 344);
  *(_OWORD *)(a2 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v20;
  *(_OWORD *)(a2 + 312) = v18;
  *(_OWORD *)(a2 + 328) = v19;
  __n128 result = *(__n128 *)(a3 + 376);
  __int128 v22 = *(_OWORD *)(a3 + 392);
  __int128 v23 = *(_OWORD *)(a3 + 408);
  *(_DWORD *)(a2 + 424) = *(_DWORD *)(a3 + 424);
  *(_OWORD *)(a2 + 392) = v22;
  *(_OWORD *)(a2 + 408) = v23;
  *(__n128 *)(a2 + 376) = result;
  return result;
}

void sub_1004C2980(_Unwind_Exception *exception_object)
{
  unint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_1004C299C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1004C2A58((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1004C2A10(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x97B425ED097B43LL) {
    sub_1000070D4();
  }
  return operator new(432 * a2);
}

uint64_t sub_1004C2A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v34 = a6;
  *((void *)&v34 + 1) = a7;
  __int128 v33 = v34;
  v31[0] = a1;
  v31[1] = &v33;
  v31[2] = &v34;
  if (a3 == a5)
  {
    uint64_t v29 = a6;
  }

  else
  {
    uint64_t v8 = a3 - 432;
    do
    {
      uint64_t v9 = v7 - 432;
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v8;
      *(void *)(v9 + 16) = 0LL;
      *(void *)(v9 + 24) = 0LL;
      *(void *)(v9 + 8) = 0LL;
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(v8 + 8);
      *(void *)(v9 + 24) = *(void *)(v8 + 24);
      *(void *)(v8 + 16) = 0LL;
      *(void *)(v8 + 24) = 0LL;
      *(void *)(v8 + 8) = 0LL;
      __int128 v10 = *(_OWORD *)(v8 + 96);
      __int128 v12 = *(_OWORD *)(v8 + 48);
      __int128 v11 = *(_OWORD *)(v8 + 64);
      *(_OWORD *)(v9 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(v8 + 80);
      *(_OWORD *)(v9 + 96) = v10;
      *(_OWORD *)(v9 + 48) = v12;
      *(_OWORD *)(v9 + 64) = v11;
      __int128 v13 = *(_OWORD *)(v8 + 160);
      __int128 v15 = *(_OWORD *)(v8 + 112);
      __int128 v14 = *(_OWORD *)(v8 + 128);
      *(_OWORD *)(v9 + 144) = *(_OWORD *)(v8 + 144);
      *(_OWORD *)(v9 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v13;
      *(_OWORD *)(v9 + 112) = v15;
      *(_OWORD *)(v9 + 128) = v14;
      __int128 v17 = *(_OWORD *)(v8 + 192);
      __int128 v16 = *(_OWORD *)(v8 + 208);
      __int128 v18 = *(_OWORD *)(v8 + 176);
      *(_OWORD *)(v7 - 212) = *(_OWORD *)(v8 + 220);
      *(_OWORD *)(v7 - 24sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v17;
      *(_OWORD *)(v7 - 224) = v16;
      *(_OWORD *)(v7 - 256) = v18;
      *(_OWORD *)(v9 + 32) = *(_OWORD *)(v8 + 32);
      __int128 v19 = *(_OWORD *)(v8 + 240);
      *(void *)(v7 - 176) = *(void *)(v8 + 256);
      *(_OWORD *)(v7 - 192) = v19;
      *(void *)(v8 + 248) = 0LL;
      *(void *)(v8 + 256) = 0LL;
      *(void *)(v8 + 24sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
      __int128 v20 = *(_OWORD *)(v8 + 344);
      __int128 v21 = *(_OWORD *)(v8 + 360);
      __int128 v22 = *(_OWORD *)(v8 + 328);
      *(_OWORD *)(v7 - 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(v8 + 312);
      *(_OWORD *)(v7 - 72) = v21;
      *(_OWORD *)(v7 - 88) = v20;
      *(_OWORD *)(v7 - 104) = v22;
      __int128 v23 = *(_OWORD *)(v8 + 264);
      __int128 v24 = *(_OWORD *)(v8 + 280);
      *(_OWORD *)(v7 - 136) = *(_OWORD *)(v8 + 296);
      *(_OWORD *)(v7 - 152) = v24;
      *(_OWORD *)(v7 - 168) = v23;
      __int128 v26 = *(_OWORD *)(v8 + 392);
      __int128 v25 = *(_OWORD *)(v8 + 408);
      int v27 = *(_DWORD *)(v8 + 424);
      *(_OWORD *)(v7 - 56) = *(_OWORD *)(v8 + 376);
      *(_DWORD *)(v7 - 8) = v27;
      *(_OWORD *)(v7 - 24) = v25;
      *(_OWORD *)(v7 - 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v26;
      uint64_t v7 = *((void *)&v34 + 1) - 432LL;
      *((void *)&v34 + 1) -= 432LL;
      BOOL v28 = v8 == a5;
      v8 -= 432LL;
    }

    while (!v28);
    uint64_t v29 = v34;
  }

  char v32 = 1;
  sub_1004C2BB4((uint64_t)v31);
  return v29;
}

uint64_t sub_1004C2BB4(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_1004C2BE8((uint64_t *)a1);
  }
  return a1;
}

void sub_1004C2BE8(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_1003EE0B0(v3, v1);
      v1 += 432LL;
    }

    while (v1 != v2);
  }

void **sub_1004C2C38(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_1004C2C68(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 432;
    sub_1003EE0B0(v4, i - 432);
  }

uint64_t sub_1004C2CAC(uint64_t a1, _DWORD *a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 8;
  do
  {
    BOOL v6 = sub_1004C1E28((_DWORD *)(v3 + 32), a2);
    uint64_t v7 = (uint64_t *)(v3 + 8);
    if (!v6)
    {
      uint64_t v7 = (uint64_t *)v3;
      uint64_t v5 = v3;
    }

    uint64_t v3 = *v7;
  }

  while (*v7);
  if (v5 == v2 || sub_1004C1E28(a2, (_DWORD *)(v5 + 32))) {
    return v2;
  }
  return v5;
}

void *sub_1004C2D24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = sub_1004C267C((uint64_t)(v3 + 4), a2);
    uint64_t v7 = v3 + 1;
    if (!v6)
    {
      uint64_t v7 = v3;
      uint64_t v5 = v3;
    }

    uint64_t v3 = (void *)*v7;
  }

  while (*v7);
  return v5;
}

uint64_t *sub_1004C2D9C(uint64_t **a1, void *a2, uint64_t a3, uint64_t **a4)
{
  BOOL v6 = (uint64_t **)sub_1002FB00C((uint64_t)a1, &v10, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    uint64_t v7 = (uint64_t *)operator new(0x30uLL);
    v7[4] = **a4;
    v7[5] = 0LL;
    sub_1000085FC(a1, v10, v8, v7);
  }

  return v7;
}

uint64_t **sub_1004C2E20(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  BOOL v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        BOOL v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }

      if (v10 >= v8) {
        break;
      }
      BOOL v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    uint64_t v9 = a1 + 1;
LABEL_10:
    __int128 v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((void *)v11 + 6) = 0LL;
    *((void *)v11 + 7) = 0LL;
    *((void *)v11 + 5) = 0LL;
    sub_1000085FC(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }

  return v9;
}

uint64_t sub_1004C2EE4(uint64_t **a1, _DWORD *a2)
{
  uint64_t v3 = (uint64_t *)sub_1004C2CAC((uint64_t)a1, a2);
  uint64_t v4 = v3;
  sub_1000087E8(a1, v3);
  operator delete(v4);
  return 1LL;
}

uint64_t sub_1004C2F34(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = sub_1004C26E8((uint64_t)a1, a2);
  uint64_t v4 = v3;
  sub_1000087E8(a1, v3);
  sub_1004C1C7C((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1LL;
}

uint64_t sub_1004C2F8C(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = sub_1004C2D24((uint64_t)a1, a2);
  uint64_t v4 = v3;
  sub_1000087E8(a1, v3);
  operator delete(v4);
  return 1LL;
}

uint64_t *sub_1004C2FDC(uint64_t **a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000087E8(a1, a2);
  uint64_t v4 = (void *)a2[5];
  if (v4)
  {
    a2[6] = (uint64_t)v4;
    operator delete(v4);
  }

  operator delete(a2);
  return v3;
}

__int128 *sub_1004C301C(__int128 *a1, __int128 *a2, void **a3)
{
  uint64_t v3 = a1;
  BOOL v6 = a3;
  if (a1 == a2) {
    return a1;
  }
  uint64_t v4 = a2;
  do
  {
    sub_1004C307C(&v6, v3);
    uint64_t v3 = (__int128 *)((char *)v3 + 184);
  }

  while (v3 != v4);
  return v4;
}

void ***sub_1004C307C(void ***a1, __int128 *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (char *)(*a1)[1];
  BOOL v6 = *a1;
  uint64_t v9 = (char *)v6[2];
  uint64_t v7 = (uint64_t)(v6 + 2);
  int v8 = v9;
  if (v5 >= v9)
  {
    unint64_t v20 = 0xD37A6F4DE9BD37A7LL * ((v5 - (_BYTE *)*v4) >> 3);
    unint64_t v21 = v20 + 1;
    if (v20 + 1 > 0x1642C8590B21642LL) {
      sub_100007008();
    }
    unint64_t v22 = 0xD37A6F4DE9BD37A7LL * ((v8 - (_BYTE *)*v4) >> 3);
    if (2 * v22 > v21) {
      unint64_t v21 = 2 * v22;
    }
    if (v22 >= 0xB21642C8590B21LL) {
      unint64_t v23 = 0x1642C8590B21642LL;
    }
    else {
      unint64_t v23 = v21;
    }
    if (v23) {
      __int128 v24 = (char *)sub_1002DF6FC(v7, v23);
    }
    else {
      __int128 v24 = 0LL;
    }
    __int128 v25 = &v24[184 * v20];
    __int128 v26 = &v24[184 * v23];
    __int128 v27 = *a2;
    __int128 v28 = a2[1];
    __int128 v29 = a2[3];
    *((_OWORD *)v25 + 2) = a2[2];
    *((_OWORD *)v25 + 3) = v29;
    *(_OWORD *)__int128 v25 = v27;
    *((_OWORD *)v25 + 1) = v28;
    __int128 v30 = a2[4];
    __int128 v31 = a2[5];
    __int128 v32 = a2[7];
    *((_OWORD *)v25 + 6) = a2[6];
    *((_OWORD *)v25 + 7) = v32;
    *((_OWORD *)v25 + 4) = v30;
    *((_OWORD *)v25 + 5) = v31;
    __int128 v33 = a2[8];
    __int128 v34 = a2[9];
    __int128 v35 = a2[10];
    *((void *)v25 + 22) = *((void *)a2 + 22);
    *((_OWORD *)v25 + 9) = v34;
    *((_OWORD *)v25 + 1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v35;
    *((_OWORD *)v25 + 8) = v33;
    __int128 v19 = v25 + 184;
    char v37 = (char *)*v4;
    BOOL v36 = (char *)v4[1];
    if (v36 != *v4)
    {
      do
      {
        __int128 v38 = *(_OWORD *)(v36 - 184);
        __int128 v39 = *(_OWORD *)(v36 - 168);
        __int128 v40 = *(_OWORD *)(v36 - 152);
        *(_OWORD *)(v25 - 136) = *(_OWORD *)(v36 - 136);
        *(_OWORD *)(v25 - 152) = v40;
        *(_OWORD *)(v25 - 168) = v39;
        *(_OWORD *)(v25 - 184) = v38;
        __int128 v41 = *(_OWORD *)(v36 - 120);
        __int128 v42 = *(_OWORD *)(v36 - 104);
        __int128 v43 = *(_OWORD *)(v36 - 88);
        *(_OWORD *)(v25 - 72) = *(_OWORD *)(v36 - 72);
        *(_OWORD *)(v25 - 88) = v43;
        *(_OWORD *)(v25 - 104) = v42;
        *(_OWORD *)(v25 - 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v41;
        __int128 v44 = *(_OWORD *)(v36 - 56);
        __int128 v45 = *(_OWORD *)(v36 - 40);
        __int128 v46 = *(_OWORD *)(v36 - 24);
        *((void *)v25 - 1) = *((void *)v36 - 1);
        *(_OWORD *)(v25 - 24) = v46;
        *(_OWORD *)(v25 - 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v45;
        *(_OWORD *)(v25 - 56) = v44;
        v25 -= 184;
        v36 -= 184;
      }

      while (v36 != v37);
      BOOL v36 = (char *)*v4;
    }

    *uint64_t v4 = v25;
    v4[1] = v19;
    v4[2] = v26;
    if (v36) {
      operator delete(v36);
    }
  }

  else
  {
    __int128 v10 = *a2;
    __int128 v11 = a2[1];
    __int128 v12 = a2[3];
    *((_OWORD *)v5 + 2) = a2[2];
    *((_OWORD *)v5 + 3) = v12;
    *(_OWORD *)uint64_t v5 = v10;
    *((_OWORD *)v5 + 1) = v11;
    __int128 v13 = a2[4];
    __int128 v14 = a2[5];
    __int128 v15 = a2[7];
    *((_OWORD *)v5 + 6) = a2[6];
    *((_OWORD *)v5 + 7) = v15;
    *((_OWORD *)v5 + 4) = v13;
    *((_OWORD *)v5 + 5) = v14;
    __int128 v16 = a2[8];
    __int128 v17 = a2[9];
    __int128 v18 = a2[10];
    *((void *)v5 + 22) = *((void *)a2 + 22);
    *((_OWORD *)v5 + 9) = v17;
    *((_OWORD *)v5 + 1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v18;
    *((_OWORD *)v5 + 8) = v16;
    __int128 v19 = v5 + 184;
  }

  v4[1] = v19;
  return a1;
}

uint64_t sub_1004C3264(uint64_t **a1, void *a2)
{
  uint64_t v3 = sub_1002FB09C((uint64_t)a1, a2);
  uint64_t v4 = v3;
  sub_1000087E8(a1, v3);
  operator delete(v4);
  return 1LL;
}

CLCppContainer *sub_1004C32B4(_OWORD *a1)
{
  uint64_t v2 = operator new(0x10uLL);
  _OWORD *v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  BOOL v6 = sub_1004C3824;
  uint64_t v7 = &unk_10181D3D0;
  int v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_1004C3334(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          __int128 v12 = (uint64_t *)v4;
        }
        else {
          __int128 v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        int v50 = v9;
        sub_1004C3834(a3);
        (*(void (**)(void *, int *, uint64_t, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        __int128 v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          __int128 v15 = a1 + 11;
          __int128 v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            __int128 v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                unint64_t v22 = (uint64_t *)v17;
              }
              else {
                unint64_t v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                __int128 v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              __int16 v49 = v19;
              sub_1004C3708(a1, (uint64_t)&v49, (uint64_t)&v50, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              __int128 v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  __int128 v32 = (uint64_t *)v27;
                }
                else {
                  __int128 v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  __int128 v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              int v50 = v29;
              uint64_t v34 = v29[6];
              __int128 v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                __int128 v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    __int128 v39 = (uint64_t *)v36;
                  }
                  else {
                    __int128 v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    __int128 v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      __int128 v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      __int128 v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      __int128 v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int128 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      __int128 v14 = v43;
                      __int128 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      __int128 v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      __int128 v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              __int16 v49 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10183C340);
              }
              __int128 v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int128 v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::string buf = 136446466;
                int v56 = v25;
                __int16 v57 = 1026;
                int v58 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10183C340);
                }
                __int128 v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v51 = 136446466;
                double v52 = v45;
                __int16 v53 = 1026;
                int v54 = v46;
                LODWORD(v48) = 18;
                __int16 v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                                &v51,
                                v48);
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::Notifica tionData>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLNetwork LocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_Type::Notification Data, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
              }
            }
          }

          while (v14 != v50 + 6);
        }
      }
    }
  }

_BYTE *sub_1004C3708(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v14) = *(_DWORD *)(*(void *)a3 + 32LL);
    sub_1004C3834(a4);
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)a3 + 80LL;
    __int128 v12 = (uint64_t **)(*(void *)a3 + 40LL);
    __int128 v15 = (int *)(*(void *)a2 + 32LL);
    uint64_t v13 = sub_1004EF3D4(v12, v15, (uint64_t)&unk_1012CF090, &v15);
    uint64_t result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v14,  v10,  v11,  v13 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v14);
    }
  }

  return result;
}

void sub_1004C37E4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10183C510;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1004C37F8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10183C510;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_1004C3824(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_1004C3834(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppEncodableDataContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0)
  {
    sub_1004C38AC(a1);
  }

  else
  {
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
    if ((objc_opt_isKindOfClass(a1, v3) & 1) != 0) {
      sub_1004C3C34(a1);
    }
  }

void sub_1004C38AC(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2)
  {
    sub_1004C3FE0((uint64_t)&v7 + 7, a1);
    return;
  }

  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183C550);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012EDEA4LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934470 != -1) {
        dispatch_once(&qword_101934470, &stru_10183C550);
      }
      LODWORD(v8) = 134218498;
      HIDWORD(v8) = (_DWORD)v2;
      LODWORD(v7) = 32;
      uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly beca use the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  v7,  v8);
LABEL_21:
      BOOL v6 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLNetworkLocationProvider_Type::Notification Data, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183C550);
    }
    uint64_t v5 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012EDEA4LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934470 != -1) {
        dispatch_once(&qword_101934470, &stru_10183C550);
      }
      LODWORD(v8) = 134218498;
      HIDWORD(v8) = (_DWORD)v2;
      LODWORD(v7) = 32;
      uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly beca use the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  v7,  v8);
      goto LABEL_21;
    }
  }

id sub_1004C3C34(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183C550);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012EDEA4LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183C550);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183C550);
    }
    BOOL v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012EDEA4LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183C550);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLNetworkLocationProvider_Type::NotificationData , Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_1004C3FE0(uint64_t a1, void *a2)
{
  if ([a2 cppObjectPtr]
    || !objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D34B8))
  {
    goto LABEL_5;
  }

  if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") == (id)16)
  {
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
LABEL_5:
    [a2 cppObjectPtr];
    return;
  }

  uint64_t v3 = (void *)sub_10123BA18();
  sub_1004C4054(v3);
}

void sub_1004C4054(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_1004C4080(uint64_t a1, int *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    return 0LL;
  }
  int v3 = *a2;
  uint64_t v4 = a1 + 8;
  do
  {
    int v5 = *(_DWORD *)(v2 + 32);
    BOOL v6 = v5 < v3;
    if (v5 >= v3) {
      uint64_t v7 = (uint64_t *)v2;
    }
    else {
      uint64_t v7 = (uint64_t *)(v2 + 8);
    }
    if (!v6) {
      uint64_t v4 = v2;
    }
    uint64_t v2 = *v7;
  }

  while (*v7);
  if (v4 == a1 + 8 || v3 < *(_DWORD *)(v4 + 32)) {
    return 0LL;
  }
  sub_1004C2FDC((uint64_t **)a1, (uint64_t *)v4);
  return 1LL;
}

uint64_t sub_1004C40E4(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (!v2) {
    return 0LL;
  }
  unint64_t v3 = *a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  do
  {
    unint64_t v5 = v2[4];
    BOOL v6 = v5 >= v3;
    if (v5 >= v3) {
      uint64_t v7 = v2;
    }
    else {
      uint64_t v7 = v2 + 1;
    }
    if (v6) {
      uint64_t v4 = v2;
    }
    uint64_t v2 = (void *)*v7;
  }

  while (*v7);
  sub_1000087E8((uint64_t **)a1, v4);
  operator delete(v4);
  return 1LL;
}

uint64_t sub_1004C415C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0LL;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_1004C416C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1004C418C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  unint64_t v5 = (char *)(a1 + 8);
  BOOL v6 = operator new(0x138uLL);
  sub_10047E760((uint64_t)v6, v5, a2, -1.0);
  *a3 = v6;
  uint64_t result = sub_100400B64((uint64_t)v6);
  if ((result & 1) == 0)
  {
    *a3 = 0LL;
    return (*(uint64_t (**)(void *))(*(void *)v6 + 8LL))(v6);
  }

  return result;
}

void sub_1004C4210(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  _Unwind_Resume(a1);
}

void sub_1004C4240(void *a1, uint64_t a2, uint64_t a3, sqlite3_int64 a4)
{
  uint64_t v7 = a1[6];
  ++*(_DWORD *)(*(void *)(a1[4] + 8LL) + 24LL);
  *(void *)&__int128 v8 = -1LL;
  *((void *)&v8 + 1) = -1LL;
  v17[0] = v8;
  v17[1] = v8;
  if ((sub_10047F6A0(a2, a4, (int *)v17) & 1) != 0)
  {
    if ((sub_10047EDB8(*(void *)(*(void *)(a1[5] + 8LL) + 48LL), (uint64_t)v17, a3) & 1) == 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      uint64_t v9 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
      {
        id v10 = (void *)(v7 + 8);
        *(_DWORD *)std::string buf = 136446210;
        __int128 v25 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "Failed to save entry to persisted database, table %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_10183C400);
        }
        __int16 v11 = (void *)(v7 + 8);
        int v18 = 136446210;
        __int128 v19 = v11;
        uint64_t v12 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "Failed to save entry to persisted database, table %{public}s",  &v18,  12);
LABEL_28:
        __int128 v16 = (uint8_t *)v12;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLManagedLocationDatabase<CLCellLocationDatabase, CLTelephonyService_Type::Cell>::onDataAvailable() [Data base = CLCellLocationDatabase, DataType = CLTelephonyService_Type::Cell]_block_invoke",  "%s\n",  v12);
        if (v16 != buf) {
          free(v16);
        }
      }
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183C400);
    }
    __int16 v13 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      unint64_t v14 = (void *)(v7 + 8);
      *(_DWORD *)std::string buf = 136446722;
      __int128 v25 = v14;
      __int16 v26 = 2082;
      unint64_t v27 = 0x80000001012EDED9LL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v28 = 2050;
      sqlite3_int64 v29 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      __int128 v15 = (void *)(v7 + 8);
      int v18 = 136446722;
      __int128 v19 = v15;
      __int16 v20 = 2082;
      unint64_t v21 = 0x80000001012EDED9LL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v22 = 2050;
      sqlite3_int64 v23 = a4;
      uint64_t v12 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld",  &v18,  32);
      goto LABEL_28;
    }
  }

uint64_t sub_1004C45C4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0LL;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_1004C45D4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1004C45F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v5 = (void *)(a1 + 8);
  BOOL v6 = operator new(0x110uLL);
  sub_1006CE6B0(v6, v5, a2, -1.0);
  *a3 = v6;
  uint64_t result = sub_100400B64((uint64_t)v6);
  if ((result & 1) == 0)
  {
    *a3 = 0LL;
    return (*(uint64_t (**)(void *))(*(void *)v6 + 8LL))(v6);
  }

  return result;
}

void sub_1004C4678(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  _Unwind_Resume(a1);
}

void sub_1004C46A8(void *a1, uint64_t a2, uint64_t a3, sqlite3_int64 a4)
{
  uint64_t v8 = a1[6];
  ++*(_DWORD *)(*(void *)(a1[4] + 8LL) + 24LL);
  sub_100313598((uint64_t)&v16);
  if (sub_1006CF748(a2, a4, &v16))
  {
    if ((sub_1006CEF5C(*(void *)(*(void *)(a1[5] + 8LL) + 48LL), &v16, a3) & 1) == 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      uint64_t v9 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
      {
        id v10 = (void *)(v8 + 8);
        *(_DWORD *)std::string buf = 136446210;
        __int16 v28 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "Failed to save entry to persisted database, table %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_10183C400);
        }
        __int16 v11 = (void *)(v8 + 8);
        int v21 = 136446210;
        __int16 v22 = v11;
        uint64_t v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "Failed to save entry to persisted database, table %{public}s",  &v21,  12);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLManagedLocationDatabase<CLCdmaCellLocationDatabase, CLTelephonyService_Type::CdmaCell>::onDataAvailable () [Database = CLCdmaCellLocationDatabase, DataType = CLTelephonyService_Type::CdmaCell]_block_invoke",  "%s\n",  v12);
LABEL_32:
      }
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183C400);
    }
    __int16 v13 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      unint64_t v14 = (void *)(v8 + 8);
      *(_DWORD *)std::string buf = 136446722;
      __int16 v28 = v14;
      __int16 v29 = 2082;
      unint64_t v30 = 0x80000001012EDEFALL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v31 = 2050;
      sqlite3_int64 v32 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      __int128 v15 = (void *)(v8 + 8);
      int v21 = 136446722;
      __int16 v22 = v15;
      __int16 v23 = 2082;
      unint64_t v24 = 0x80000001012EDEFALL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v25 = 2050;
      sqlite3_int64 v26 = a4;
      uint64_t v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld",  &v21,  32);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLManagedLocationDatabase<CLCdmaCellLocationDatabase, CLTelephonyService_Type::CdmaCell>::onDataAvailable() [Database = CLCdmaCellLocationDatabase, DataType = CLTelephonyService_Type::CdmaCell]_block_invoke",  "%s\n",  v12);
      goto LABEL_32;
    }
  }

  if (v20 < 0) {
    operator delete(__p);
  }
  if (v17)
  {
    int v18 = v17;
    operator delete(v17);
  }

void sub_1004C4AA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1004C4ACC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0LL;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_1004C4ADC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1004C4AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v5 = (void *)(a1 + 8);
  BOOL v6 = operator new(0x110uLL);
  sub_100A3334C(v6, v5, a2, -1.0);
  *a3 = v6;
  uint64_t result = sub_100400B64((uint64_t)v6);
  if ((result & 1) == 0)
  {
    *a3 = 0LL;
    return (*(uint64_t (**)(void *))(*(void *)v6 + 8LL))(v6);
  }

  return result;
}

void sub_1004C4B80(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  _Unwind_Resume(a1);
}

void sub_1004C4BB0(void *a1, uint64_t a2, uint64_t a3, sqlite3_int64 a4)
{
  uint64_t v7 = a1[6];
  ++*(_DWORD *)(*(void *)(a1[4] + 8LL) + 24LL);
  int v17 = -1;
  memset(v16, 255, sizeof(v16));
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v20 = -1LL;
  uint64_t v21 = -1LL;
  int v22 = -1;
  __int128 v23 = xmmword_1012E6420;
  if (sub_100A34410(a2, a4, (int *)v16))
  {
    if ((sub_100A33950(*(void *)(*(void *)(a1[5] + 8LL) + 48LL), (uint64_t)v16, a3) & 1) == 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      uint64_t v8 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
      {
        uint64_t v9 = (void *)(v7 + 8);
        *(_DWORD *)std::string buf = 136446210;
        __int16 v31 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Failed to save entry to persisted database, table %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_10183C400);
        }
        id v10 = (void *)(v7 + 8);
        int v24 = 136446210;
        __int16 v25 = v10;
        __int16 v11 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "Failed to save entry to persisted database, table %{public}s",  &v24,  12);
LABEL_28:
        __int128 v15 = (uint8_t *)v11;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLManagedLocationDatabase<CLLteCellLocationDatabase, CLTelephonyService_Type::LteCell>::onDataAvailable() [Database = CLLteCellLocationDatabase, DataType = CLTelephonyService_Type::LteCell]_block_invoke",  "%s\n",  v11);
        if (v15 != buf) {
          free(v15);
        }
      }
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183C400);
    }
    uint64_t v12 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      __int16 v13 = (void *)(v7 + 8);
      *(_DWORD *)std::string buf = 136446722;
      __int16 v31 = v13;
      __int16 v32 = 2082;
      unint64_t v33 = 0x80000001012EDF1FLL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v34 = 2050;
      sqlite3_int64 v35 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      unint64_t v14 = (void *)(v7 + 8);
      int v24 = 136446722;
      __int16 v25 = v14;
      __int16 v26 = 2082;
      unint64_t v27 = 0x80000001012EDF1FLL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v28 = 2050;
      sqlite3_int64 v29 = a4;
      __int16 v11 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld",  &v24,  32);
      goto LABEL_28;
    }
  }

uint64_t sub_1004C4F54(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0LL;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_1004C4F64(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

void sub_1004C4F84(void *a1, uint64_t a2, uint64_t a3, sqlite3_int64 a4)
{
  uint64_t v7 = a1[6];
  ++*(_DWORD *)(*(void *)(a1[4] + 8LL) + 24LL);
  uint64_t v16 = -1LL;
  int v17 = -1;
  uint64_t v18 = -1LL;
  uint64_t v19 = -1LL;
  int v20 = -1;
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t v23 = -1LL;
  uint64_t v24 = -1LL;
  uint64_t v25 = -1LL;
  unint64_t v26 = 0xFFFFFFFF00000000LL;
  int v27 = -1;
  if (sub_1005B3EFC(a2, a4, (uint64_t)&v16))
  {
    if ((sub_1005B343C(*(void *)(*(void *)(a1[5] + 8LL) + 48LL), (uint64_t)&v16, a3) & 1) == 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      uint64_t v8 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
      {
        uint64_t v9 = (void *)(v7 + 8);
        *(_DWORD *)std::string buf = 136446210;
        sqlite3_int64 v35 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Failed to save entry to persisted database, table %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_10183C400);
        }
        id v10 = (void *)(v7 + 8);
        int v28 = 136446210;
        sqlite3_int64 v29 = v10;
        __int16 v11 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "Failed to save entry to persisted database, table %{public}s",  &v28,  12);
LABEL_28:
        __int128 v15 = (uint8_t *)v11;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLManagedLocationDatabase<CLNrCellLocationDatabase, CLTelephonyService_Type::NrCell>::onDataAvailable() [ Database = CLNrCellLocationDatabase, DataType = CLTelephonyService_Type::NrCell]_block_invoke",  "%s\n",  v11);
        if (v15 != buf) {
          free(v15);
        }
      }
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183C400);
    }
    uint64_t v12 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      __int16 v13 = (void *)(v7 + 8);
      *(_DWORD *)std::string buf = 136446722;
      sqlite3_int64 v35 = v13;
      __int16 v36 = 2082;
      unint64_t v37 = 0x80000001012EDF43LL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v38 = 2050;
      sqlite3_int64 v39 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183C400);
      }
      unint64_t v14 = (void *)(v7 + 8);
      int v28 = 136446722;
      sqlite3_int64 v29 = v14;
      __int16 v30 = 2082;
      unint64_t v31 = 0x80000001012EDF43LL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v32 = 2050;
      sqlite3_int64 v33 = a4;
      __int16 v11 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld",  &v28,  32);
      goto LABEL_28;
    }
  }

uint64_t sub_1004C5340(uint64_t a1)
{
  *(void *)a1 = off_10183C5A8;
  uint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_1004C53A0(_OWORD *a1)
{
  uint64_t v2 = operator new(0x10uLL);
  _OWORD *v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  BOOL v6 = sub_1004C5420;
  uint64_t v7 = &unk_10181D3D0;
  uint64_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_1004C5420(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_1004C5430()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_1004C5494()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_1004C5508(_Unwind_Exception *a1)
{
}

uint64_t sub_1004C5520()
{
  qword_1019A1028 = 0LL;
  unk_1019A1030 = 0LL;
  qword_1019A1038 = 0LL;
  __cxa_atexit((void (*)(void *))sub_10049CB20, &qword_1019A1028, (void *)&_mh_execute_header);
  qword_1019A1048 = 0LL;
  unk_1019A1050 = 0LL;
  qword_1019A1040 = 0LL;
  __cxa_atexit((void (*)(void *))sub_10049CB50, &qword_1019A1040, (void *)&_mh_execute_header);
  qword_1019A1060 = 0LL;
  unk_1019A1068 = 0LL;
  qword_1019A1058 = 0LL;
  __cxa_atexit((void (*)(void *))sub_10049CB84, &qword_1019A1058, (void *)&_mh_execute_header);
  qword_1019A1078 = 0LL;
  unk_1019A1080 = 0LL;
  qword_1019A1070 = 0LL;
  __cxa_atexit((void (*)(void *))sub_10049CBB4, &qword_1019A1070, (void *)&_mh_execute_header);
  qword_1019A1090 = 0LL;
  unk_1019A1098 = 0LL;
  qword_1019A1088 = 0LL;
  __cxa_atexit((void (*)(void *))sub_10049CBE4, &qword_1019A1088, (void *)&_mh_execute_header);
  qword_1019A10A8 = 0LL;
  unk_1019A10B0 = 0LL;
  qword_1019A10A0 = 0LL;
  return __cxa_atexit((void (*)(void *))sub_10049CC14, &qword_1019A10A0, (void *)&_mh_execute_header);
}

uint64_t sub_1004C625C(uint64_t a1, void *a2, void *a3, void *a4, __int128 *a5)
{
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 24) = a1 + 32;
  *(void *)a1 = off_10183C5D0;
  *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = a4;
  __int128 v9 = *a5;
  *(void *)(a1 + 88) = *((void *)a5 + 2);
  *(_OWORD *)(a1 + 72) = v9;
  *((void *)a5 + 1) = 0LL;
  *((void *)a5 + 2) = 0LL;
  *(void *)a5 = 0LL;
  __int128 v10 = *(__int128 *)((char *)a5 + 24);
  *(void *)(a1 + 112) = *((void *)a5 + 5);
  *(_OWORD *)(a1 + 96) = v10;
  *((void *)a5 + 4) = 0LL;
  *((void *)a5 + 5) = 0LL;
  *((void *)a5 + 3) = 0LL;
  *(void *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *((void *)a5 + 6);
  *(void *)(a1 + 128) = a2;
  id v11 = a3;
  *(_OWORD *)(a1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(void *)(a1 + 136) = v11;
  *(_BYTE *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(void *)(a1 + 184) = 0LL;
  *(_DWORD *)(a1 + 192) = 1065353216;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_DWORD *)(a1 + 232) = 1065353216;
  *(void *)(a1 + 24sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  *(_WORD *)(a1 + 248) = 257;
  return a1;
}

void sub_1004C6358(_Unwind_Exception *a1)
{
  BOOL v6 = *(std::__shared_weak_count **)(v1 + 16);
  if (v6) {
    std::__shared_weak_count::__release_weak(v6);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1004C63B0(uint64_t a1)
{
  *(void *)a1 = off_10183C5D0;
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 128), "vendor"), "proxyForService:", @"CLClientManager");
  uint64_t v3 = (void **)(a1 + 72);
  if (*(char *)(a1 + 95) < 0)
  {
    sub_1010DD48C(__dst, *(void **)(a1 + 72), *(void *)(a1 + 80));
  }

  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v3;
    uint64_t v16 = *(void *)(a1 + 88);
  }

  uint64_t v4 = (void **)(a1 + 96);
  if (*(char *)(a1 + 119) < 0)
  {
    sub_1010DD48C(&__p, *(void **)(a1 + 96), *(void *)(a1 + 104));
  }

  else
  {
    __int128 __p = *(_OWORD *)v4;
    uint64_t v18 = *(void *)(a1 + 112);
  }

  uint64_t v19 = *(void *)(a1 + 120);
  [v2 checkWeakPersistentClientWithIdentifier:sub_1004C6618((__int128 *)__dst)];
  if (SHIBYTE(v18) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v16) < 0) {
    operator delete(__dst[0]);
  }

  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  uint64_t v5 = *(void **)(a1 + 240);
  id v6 = [v5 countByEnumeratingWithState:&v11 objects:v20 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v12;
    do
    {
      for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v5);
        }
        objc_msgSend( objc_msgSend( *(id *)(a1 + 240),  "objectForKeyedSubscript:",  *(void *)(*((void *)&v11 + 1) + 8 * (void)i)),  "invalidate");
      }

      id v6 = [v5 countByEnumeratingWithState:&v11 objects:v20 count:16];
    }

    while (v6);
  }

  sub_1004C6D70(a1 + 200);
  sub_100019CEC(a1 + 160);
  sub_10000AE14(a1 + 48);
  sub_100008390(a1 + 24, *(void **)(a1 + 32));
  __int128 v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (v9) {
    std::__shared_weak_count::__release_weak(v9);
  }
  return a1;
}

void sub_1004C65DC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a2)
  {
    if (a22 < 0) {
      operator delete(__p);
    }
    sub_100006BB8(exception_object);
  }

  _Unwind_Resume(exception_object);
}

id sub_1004C6618(__int128 *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768LL;
  v4[2] = sub_1004C6E20;
  v4[3] = &unk_10183C670;
  if (*((char *)a1 + 23) < 0)
  {
    sub_1010DD48C(&v5, *(void **)a1, *((void *)a1 + 1));
  }

  else
  {
    __int128 v5 = *a1;
    uint64_t v6 = *((void *)a1 + 2);
  }

  if (*((char *)a1 + 47) < 0)
  {
    sub_1010DD48C(&__p, *((void **)a1 + 3), *((void *)a1 + 4));
  }

  else
  {
    __int128 __p = *(__int128 *)((char *)a1 + 24);
    uint64_t v8 = *((void *)a1 + 5);
  }

  uint64_t v9 = *((void *)a1 + 6);
  id v2 = [v4 copy];
  if (SHIBYTE(v8) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v6) < 0) {
    operator delete((void *)v5);
  }
  return v2;
}

void sub_1004C6704( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004C6738(void *a1, uint64_t *a2)
{
  if (!*a2 || (uint64_t v4 = a1 + 6, a1[6]))
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_10183C650);
    }
    uint64_t v6 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
    {
      BOOL v7 = a1[6] != 0LL;
      BOOL v8 = *a2 != 0;
      *(_DWORD *)std::string buf = 68290051;
      int v16 = 0;
      __int16 v17 = 2082;
      uint64_t v18 = "";
      __int16 v19 = 1026;
      BOOL v20 = v7;
      __int16 v21 = 1026;
      BOOL v22 = v8;
      __int16 v23 = 2082;
      uint64_t v24 = "assert";
      __int16 v25 = 2081;
      unint64_t v26 = "persistence && !fPersistence";
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Persistent subscription persistence must be set exactly once and set to a non-null value , fPersistence:%{public}hhd, persistence:%{public}hhd, event:%{public, location:escape_only}s, con dition:%{private, location:escape_only}s}",  buf,  0x32u);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_10183C650);
      }
    }

    uint64_t v9 = (os_log_s *)qword_101934978;
    if (os_signpost_enabled((os_log_t)qword_101934978))
    {
      BOOL v10 = a1[6] != 0LL;
      BOOL v11 = *a2 != 0;
      *(_DWORD *)std::string buf = 68290051;
      int v16 = 0;
      __int16 v17 = 2082;
      uint64_t v18 = "";
      __int16 v19 = 1026;
      BOOL v20 = v10;
      __int16 v21 = 1026;
      BOOL v22 = v11;
      __int16 v23 = 2082;
      uint64_t v24 = "assert";
      __int16 v25 = 2081;
      unint64_t v26 = "persistence && !fPersistence";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v9,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Persistent subscription persistence must be set exactly once and set to a non-null value",  "{msg%{public}.0s:Persistent subscription persistence must be set exactly once and set to a non-null value , fPersistence:%{public}hhd, persistence:%{public}hhd, event:%{public, location:escape_only}s, con dition:%{private, location:escape_only}s}",  buf,  0x32u);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_10183C650);
      }
    }

    __int128 v12 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_INFO))
    {
      BOOL v13 = a1[6] != 0LL;
      BOOL v14 = *a2 != 0;
      *(_DWORD *)std::string buf = 68290051;
      int v16 = 0;
      __int16 v17 = 2082;
      uint64_t v18 = "";
      __int16 v19 = 1026;
      BOOL v20 = v13;
      __int16 v21 = 1026;
      BOOL v22 = v14;
      __int16 v23 = 2082;
      uint64_t v24 = "assert";
      __int16 v25 = 2081;
      unint64_t v26 = "persistence && !fPersistence";
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Persistent subscription persistence must be set exactly once and set to a non-null value , fPersistence:%{public}hhd, persistence:%{public}hhd, event:%{public, location:escape_only}s, con dition:%{private, location:escape_only}s}",  buf,  0x32u);
    }

    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Core/ClientManagement/CLPersistentSubscription.mm",  36,  "setPersistence");
  }

  sub_1000F2F30(v4, a2);
  return (*(uint64_t (**)(void *))(*a1 + 64LL))(a1);
}

uint64_t sub_1004C6A4C(id *a1, void *a2)
{
  id v4 = a2;

  a1[17] = a2;
  return (*((uint64_t (**)(id *))*a1 + 5))(a1);
}

uint64_t sub_1004C6A88(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  sub_1002ED7C0(a1 + 160, &v15, &v15);
  for (uint64_t i = *(void **)(a1 + 216); i; uint64_t i = (void *)*i)
  {
    uint64_t v4 = v15;
    __int128 v5 = (std::__shared_weak_count *)i[7];
    uint64_t v13 = i[6];
    BOOL v14 = v5;
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        unint64_t v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
    }

    (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v4 + 16LL))(v4, &v13, i[5]);
    BOOL v8 = v14;
    if (v14)
    {
      uint64_t v9 = (unint64_t *)&v14->__shared_owners_;
      do
        unint64_t v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }

  int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 24LL))(v15);
  sub_1004C6FA8((uint64_t **)(a1 + 24), &v12);
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48LL))(a1);
}

void sub_1004C6B7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004C6B90(uint64_t result, uint64_t a2)
{
  uint64_t v5 = a2;
  if (*(_BYTE *)(result + 248))
  {
    id v2 = (void *)result;
    uint64_t v3 = (uint64_t **)(result + 24);
    int v4 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24LL))(a2);
    sub_1004C7034(v3, &v4);
    sub_1002ED6A0(v2 + 20, &v5);
    return (*(uint64_t (**)(void *))(*v2 + 48LL))(v2);
  }

  return result;
}

uint64_t sub_1004C6C00(uint64_t result)
{
  if (*(_BYTE *)(result + 248))
  {
    uint64_t v1 = result;
    *(_BYTE *)(result + 248) = 0;
    sub_10001CE40((void *)(result + 160));
    sub_100008390(v1 + 24, *(void **)(v1 + 32));
    *(void *)(v1 + 24) = v1 + 32;
    *(void *)(v1 + 32) = 0LL;
    *(void *)(v1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
    uint64_t v2 = *(void *)(v1 + 48);
    sub_1004C6CFC(&v6, (void *)(v1 + 8));
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v2 + 16LL))(v2, &v6);
    uint64_t v3 = v7;
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        unint64_t v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }

    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 56LL))(v1);
  }

  return result;
}

void sub_1004C6CBC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1004C6CD0(id a1)
{
  qword_101934978 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

void *sub_1004C6CFC(void *a1, void *a2)
{
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  *a1 = *a2;
  if (!v3)
  {
    a1[1] = 0LL;
LABEL_5:
    sub_1004C6D3C();
  }

  int v4 = std::__shared_weak_count::lock(v3);
  a1[1] = v4;
  if (!v4) {
    goto LABEL_5;
  }
  return a1;
}

void sub_1004C6D3C()
{
  exception = __cxa_allocate_exception(8uLL);
}

uint64_t sub_1004C6D70(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0LL;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_1004C6DA8(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_1004C6DE4((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }

    while (v3);
  }

void sub_1004C6DE4(uint64_t a1)
{
}

_BYTE *sub_1004C6E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(char *)(a1 + 55) < 0)
  {
    sub_1010DD48C((_BYTE *)a2, *(void **)(a1 + 32), *(void *)(a1 + 40));
  }

  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(a1 + 32);
    *(void *)(a2 + 16) = *(void *)(a1 + 48);
  }

  uint64_t result = (_BYTE *)(a2 + 24);
  if (*(char *)(a1 + 79) < 0)
  {
    uint64_t result = sub_1010DD48C(result, *(void **)(a1 + 56), *(void *)(a1 + 64));
  }

  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)(a1 + 56);
    *(void *)(a2 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(a1 + 72);
  }

  *(void *)(a2 + 48) = *(void *)(a1 + 80);
  return result;
}

void sub_1004C6EA0(_Unwind_Exception *exception_object)
{
}

_BYTE *sub_1004C6EBC(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 55) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }

  else
  {
    __int128 v4 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v4;
  }

  uint64_t result = (_BYTE *)(a1 + 56);
  if (*(char *)(a2 + 79) < 0)
  {
    uint64_t result = sub_1010DD48C(result, *(void **)(a2 + 56), *(void *)(a2 + 64));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + sub_1000A56E8(v1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)uint64_t result = v6;
  }

  *(void *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(a2 + 80);
  return result;
}

void sub_1004C6F48(_Unwind_Exception *exception_object)
{
}

void sub_1004C6F64(uint64_t a1)
{
}

uint64_t *sub_1004C6FA8(uint64_t **a1, int *a2)
{
  __int128 v4 = (uint64_t *)operator new(0x20uLL);
  int v5 = *a2;
  *((_DWORD *)v4 + 7) = *a2;
  __int128 v6 = a1 + 1;
  unint64_t v7 = a1[1];
  if (v7)
  {
    do
    {
      while (1)
      {
        __int128 v6 = (uint64_t **)v7;
        if (v5 >= *((_DWORD *)v7 + 7)) {
          break;
        }
        unint64_t v7 = (uint64_t *)*v7;
        BOOL v8 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }

      unint64_t v7 = (uint64_t *)v7[1];
    }

    while (v7);
    BOOL v8 = v6 + 1;
  }

  else
  {
    BOOL v8 = a1 + 1;
  }

uint64_t sub_1004C7034(uint64_t **a1, int *a2)
{
  uint64_t v3 = sub_1004C70AC((uint64_t)a1, a2);
  if (v3 == v4) {
    return 0LL;
  }
  int v5 = v3;
  __int128 v6 = v4;
  uint64_t v7 = 0LL;
  do
  {
    BOOL v8 = sub_1000087E8(a1, v5);
    operator delete(v5);
    ++v7;
    int v5 = v8;
  }

  while (v8 != v6);
  return v7;
}

uint64_t *sub_1004C70AC(uint64_t a1, int *a2)
{
  uint64_t v2 = (uint64_t *)(a1 + 8);
  uint64_t v3 = *(uint64_t **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  int v4 = *a2;
  while (1)
  {
    int v5 = *((_DWORD *)v3 + 7);
    if (v4 >= v5) {
      break;
    }
    uint64_t v2 = v3;
LABEL_7:
    uint64_t v3 = (uint64_t *)*v3;
    if (!v3) {
      return v2;
    }
  }

  if (v5 < v4)
  {
    ++v3;
    goto LABEL_7;
  }

  uint64_t v7 = (uint64_t *)*v3;
  uint64_t result = v3;
  if (*v3)
  {
    uint64_t result = v3;
    do
    {
      int v8 = *((_DWORD *)v7 + 7);
      BOOL v9 = v8 < v4;
      if (v8 >= v4) {
        unint64_t v10 = (uint64_t **)v7;
      }
      else {
        unint64_t v10 = (uint64_t **)(v7 + 1);
      }
      if (!v9) {
        uint64_t result = v7;
      }
      uint64_t v7 = *v10;
    }

    while (*v10);
  }

  uint64_t v11 = v3[1];
  if (v11)
  {
    do
    {
      if (v4 >= *(_DWORD *)(v11 + 28)) {
        int v12 = (uint64_t *)(v11 + 8);
      }
      else {
        int v12 = (uint64_t *)v11;
      }
      uint64_t v11 = *v12;
    }

    while (*v12);
  }

  return result;
}

void sub_1004C7144()
{
  if (sub_100231608())
  {
    unsigned __int8 v0 = operator new(0x68uLL);
    sub_100E61F40((uint64_t)v0, (uint64_t)"CLAccessoryProximity", 2, 65280, 48);
    *unsigned __int8 v0 = &off_10183C6D0;
    qword_1019A10C0 = (uint64_t)v0;
  }

void sub_1004C719C(_Unwind_Exception *a1)
{
}

uint64_t sub_1004C71B0()
{
  if (qword_101996078 != -1) {
    dispatch_once(&qword_101996078, &stru_10183C6A0);
  }
  return qword_1019A10C0;
}

void sub_1004C71F8(void *a1)
{
  uint64_t v1 = sub_100E61F94(a1);
  operator delete(v1);
}

double sub_1004C720C(uint64_t a1, int a2, double *a3)
{
  if (a2)
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_10183C728);
    }
    int v4 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 67240192;
      LODWORD(v17) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "[AccessoryProximity] Unrecognized interval notification %{public}d",  buf,  8u);
    }

    double v5 = 0.0;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_10183C728);
      }
      int v14 = 67240192;
      LODWORD(v15) = a2;
      __int128 v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  17LL,  "[AccessoryProximity] Unrecognized interval notification %{public}d",  &v14,  8);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual CFTimeInterval CLAccessoryProximity::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v6);
    }
  }

  else
  {
    sub_100E62108(a1);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_10183C728);
    }
    BOOL v9 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_INFO))
    {
      double v10 = *a3;
      *(_DWORD *)std::string buf = 134349056;
      double v17 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "[AccessoryProximity] Setting update interval to %{public}f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_10183C728);
      }
      uint64_t v12 = *(void *)a3;
      int v14 = 134349056;
      uint64_t v15 = v12;
      uint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  1LL,  "[AccessoryProximity] Setting update interval to %{public}f",  &v14,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFTimeInterval CLAccessoryProximity::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v13);
    }

    sub_10071A73C(*(void *)(a1 + 32), *a3);
    double v5 = *a3;
    if (*a3 > 0.0) {
      *(_BYTE *)(a1 + 3sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
    }
  }

  return v5;
}

double sub_1004C7540(uint64_t a1, int a2, double *a3)
{
  if (a2)
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_10183C728);
    }
    int v4 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 67240192;
      LODWORD(v17) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "[AccessoryProximity] Unrecognized batch notification %{public}d",  buf,  8u);
    }

    double v5 = 0.0;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_10183C728);
      }
      int v14 = 67240192;
      LODWORD(v15) = a2;
      __int128 v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  17LL,  "[AccessoryProximity] Unrecognized batch notification %{public}d",  &v14,  8);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual CFTimeInterval CLAccessoryProximity::minimumBatchIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v6);
    }
  }

  else
  {
    sub_100E62108(a1);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_10183C728);
    }
    BOOL v9 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_INFO))
    {
      double v10 = *a3;
      *(_DWORD *)std::string buf = 134349056;
      double v17 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "[AccessoryProximity] Setting batch interval to %{public}f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_10183C728);
      }
      uint64_t v12 = *(void *)a3;
      int v14 = 134349056;
      uint64_t v15 = v12;
      uint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  1LL,  "[AccessoryProximity] Setting batch interval to %{public}f",  &v14,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFTimeInterval CLAccessoryProximity::minimumBatchIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v13);
    }

    sub_10071A7C0(*(void *)(a1 + 32), *a3);
    return *a3;
  }

  return v5;
}

void sub_1004C7868(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)(a1 + 30))
  {
    *(_BYTE *)(a1 + 3sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1;
    int v15 = 0;
    sub_1010DDBC0(&v16, "N/A");
    sub_1010DDBC0(&v18, "N/A");
    memset(v20, 0, 122);
    if (sub_100E62278(a1, (uint64_t)&v15))
    {
      *(_OWORD *)std::string buf = 0u;
      memset(v14, 0, sizeof(v14));
      uint64_t v3 = (__IOHIDServiceClient *)sub_100719C6C(*(void *)(a1 + 32));
      if (sub_100FAD980(buf, v3, @"OSCL", (id)0x25))
      {
        uint64_t v4 = 0LL;
        double v5 = &v20[4];
        do
        {
          snprintf(v5, 0x25uLL, "%02x", buf[v4++]);
          v5 += 2;
        }

        while (v4 != 37);
      }

      uint64_t v11 = 0LL;
      v12[0] = 0LL;
      *(void *)((char *)v12 + 5) = 0LL;
      __int128 v6 = (__IOHIDServiceClient *)sub_100719C6C(*(void *)(a1 + 32));
      if (sub_100FAD980(&v11, v6, @"PDTC", (id)0x15))
      {
        uint64_t v7 = 0LL;
        int v8 = &v20[79];
        do
        {
          snprintf(v8, 0x15uLL, "%02x", *((unsigned __int8 *)&v12[-1] + v7++));
          v8 += 2;
        }

        while (v7 != 21);
      }

      sub_1006DD528(a1, 1LL, (uint64_t)&v15, 184LL);
    }

    else
    {
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_10183C728);
      }
      BOOL v9 = (os_log_s *)qword_1019345C8;
      if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "[AccessoryProximity] Service not found!",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345C0 != -1) {
          dispatch_once(&qword_1019345C0, &stru_10183C728);
        }
        LOWORD(v11) = 0;
        double v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  17LL,  "[AccessoryProximity] Service not found!",  &v11,  2);
        sub_10029211C("Generic", 1LL, 0, 0LL, "void CLAccessoryProximity::onProximityData(const Sample &)", "%s\n", v10);
      }
    }

    if (v19 < 0) {
      operator delete(v18);
    }
    if (v17 < 0) {
      operator delete(v16);
    }
  }

void sub_1004C7BA0(_Unwind_Exception *a1)
{
}

uint64_t sub_1004C7BE0(uint64_t a1)
{
  return a1;
}

void sub_1004C7C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  DataValue = (unsigned __int8 *)IOHIDEventGetDataValue(a4, 65540LL);
  uint64_t IntegerValue = IOHIDEventGetIntegerValue(a4, 65539LL);
  if (DataValue) {
    BOOL v8 = IntegerValue == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8)
  {
    uint64_t v9 = IntegerValue;
    uint64_t v10 = IOHIDEventGetIntegerValue(a4, 65537LL);
    uint64_t v11 = IOHIDEventGetIntegerValue(a4, 0x10000LL);
    if (v11 == 65300 && v10 == 3)
    {
      unint64_t TimeStamp = IOHIDEventGetTimeStamp(a4);
      double v13 = sub_101171C7C(TimeStamp);
      uint64_t v14 = sub_100FACB74();
      if (v9 == 10)
      {
        int v15 = *((unsigned __int16 *)DataValue + 4);
      }

      else
      {
        if (v9 != 8) {
          sub_10123BB90();
        }
        int v15 = 0;
      }

      int v18 = *DataValue;
      int v19 = DataValue[1];
      int v20 = *((__int16 *)DataValue + 2);
      int v21 = *((__int16 *)DataValue + 1);
      int v22 = *((__int16 *)DataValue + 3);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_10183C728);
      }
      __int16 v23 = (os_log_s *)qword_1019345C8;
      if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_DEBUG))
      {
        int v24 = *DataValue;
        int v25 = DataValue[1];
        int v26 = DataValue[2];
        int v27 = DataValue[3];
        int v28 = DataValue[4];
        int v29 = DataValue[5];
        int v30 = DataValue[6];
        int v31 = DataValue[7];
        *(_DWORD *)std::string buf = 67244032;
        *(_DWORD *)&uint8_t buf[4] = v18;
        *(_WORD *)&uint8_t buf[8] = 1026;
        *(_DWORD *)&buf[10] = v19;
        *(_WORD *)&buf[14] = 1026;
        *(_DWORD *)&uint8_t buf[16] = v20;
        *(_WORD *)&buf[20] = 1026;
        int v70 = v21;
        __int16 v71 = 1026;
        int v72 = v22;
        __int16 v73 = 1026;
        int v74 = v15;
        __int16 v75 = 2050;
        uint64_t v76 = v14;
        __int16 v77 = 2050;
        double v78 = v13;
        __int16 v79 = 1026;
        int v80 = v24;
        __int16 v81 = 1026;
        int v82 = v25;
        __int16 v83 = 1026;
        int v84 = v26;
        __int16 v85 = 1026;
        int v86 = v27;
        __int16 v87 = 1026;
        int v88 = v28;
        __int16 v89 = 1026;
        int v90 = v29;
        __int16 v91 = 1026;
        int v92 = v30;
        __int16 v93 = 1026;
        int v94 = v31;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "[AccessoryProximity] location_id,%{public}d,status,%{public}d,base,%{public}d,peak,%{public}d,temp,%{public}d, seq,%{public}d,sensorTime,%{public}llu,timestamp,%{public}20.20f,raw %{public}02x %{public}02x %{public}02x %{ public}02x %{public}02x %{public}02x %{public}02x %{public}02x",  buf,  0x6Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345C0 != -1) {
          dispatch_once(&qword_1019345C0, &stru_10183C728);
        }
        int v32 = *DataValue;
        int v33 = DataValue[1];
        int v34 = DataValue[2];
        int v35 = DataValue[3];
        int v36 = DataValue[4];
        int v37 = DataValue[5];
        int v38 = DataValue[6];
        int v39 = DataValue[7];
        int v41 = 67244032;
        *(_DWORD *)__int128 v42 = v18;
        *(_WORD *)&v42[4] = 1026;
        *(_DWORD *)&v42[6] = v19;
        LOWORD(v43) = 1026;
        *(_DWORD *)((char *)&v43 + 2) = v20;
        HIWORD(v43) = 1026;
        int v44 = v21;
        __int16 v45 = 1026;
        int v46 = v22;
        __int16 v47 = 1026;
        int v48 = v15;
        __int16 v49 = 2050;
        uint64_t v50 = v14;
        __int16 v51 = 2050;
        double v52 = v13;
        __int16 v53 = 1026;
        int v54 = v32;
        __int16 v55 = 1026;
        int v56 = v33;
        __int16 v57 = 1026;
        int v58 = v34;
        __int16 v59 = 1026;
        int v60 = v35;
        __int16 v61 = 1026;
        int v62 = v36;
        __int16 v63 = 1026;
        int v64 = v37;
        __int16 v65 = 1026;
        int v66 = v38;
        __int16 v67 = 1026;
        int v68 = v39;
        int v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  2LL,  "[AccessoryProximity] location_id,%{public}d,status,%{public}d,base,%{public}d,peak,%{public}d,te mp,%{public}d,seq,%{public}d,sensorTime,%{public}llu,timestamp,%{public}20.20f,raw %{public}02x %{public}02x %{public}02x %{public}02x %{public}02x %{public}02x %{public}02x %{public}02x",  &v41,  106);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLAccessoryProximity::onEventData(void *, void *, IOHIDEventRef)",  "%s\n",  v40);
        if (v40 != buf) {
          free(v40);
        }
      }

      *(double *)std::string buf = v13;
      *(void *)&uint8_t buf[8] = v14;
      uint8_t buf[16] = v18;
      buf[17] = v19;
      *(_WORD *)&buf[20] = v20;
      *(_WORD *)&buf[18] = v21;
      LOWORD(v7sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v22;
      HIWORD(v7sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v15;
      sub_1004C7868(a1, (uint64_t)buf);
    }

    else
    {
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_10183C728);
      }
      int v16 = (os_log_s *)qword_1019345C8;
      if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)std::string buf = 134349312;
        *(void *)&uint8_t buf[4] = v11;
        *(_WORD *)&_BYTE buf[12] = 2050;
        *(void *)&buf[14] = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_FAULT,  "[AccessoryProximity] Invalid usage page/usage: {%{public}ld,%{public}ld}",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345C0 != -1) {
          dispatch_once(&qword_1019345C0, &stru_10183C728);
        }
        int v41 = 134349312;
        *(void *)__int128 v42 = v11;
        *(_WORD *)&v42[8] = 2050;
        uint64_t v43 = v10;
        char v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  17LL,  "[AccessoryProximity] Invalid usage page/usage: {%{public}ld,%{public}ld}",  &v41,  22);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLAccessoryProximity::onEventData(void *, void *, IOHIDEventRef)",  "%s\n",  v17);
        if (v17 != buf) {
          free(v17);
        }
      }
    }
  }

void sub_1004C8190(id a1)
{
  qword_1019345C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Accessory");
}

void sub_1004C81BC(uint64_t a1, double a2)
{
  if (*(float *)a1 != -9999.0)
  {
    float v4 = *(float *)(a1 + 4);
    if (v4 != -9999.0 && (vabdd_f64(a2, *(double *)(a1 + 16)) > 300.0 || *(float *)(a1 + 8) == -9999.0))
    {
      *(float *)(a1 + 8) = sub_1007B92AC(a2, *(float *)a1, v4);
      *(double *)(a1 + 16) = a2;
    }
  }

float *sub_1004C8238(float *result, float a2, float a3)
{
  *uint64_t result = a2;
  result[1] = a3;
  return result;
}

void sub_1004C8240(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  int64x2_t v10 = vdupq_n_s64(0xFFF0000000000000LL);
  *((int64x2_t *)a4 + 1) = v10;
  uint64_t v11 = (float64x2_t *)(a4 + 2);
  *a4 = 0LL;
  a4[1] = 0LL;
  *((int64x2_t *)a4 + 2) = v10;
  *((_OWORD *)a4 + 3) = 0u;
  uint64_t v12 = a4 + 6;
  *((_OWORD *)a4 + 4) = 0u;
  *((_OWORD *)a4 + 5) = 0u;
  *((_DWORD *)a4 + 24) = 0;
  *(int64x2_t *)(a4 + 13) = v10;
  double v13 = a4 + 13;
  *(int64x2_t *)(a4 + 15) = v10;
  *(int64x2_t *)(a4 + 17) = v10;
  *(int64x2_t *)(a4 + 19) = v10;
  *(int64x2_t *)(a4 + 21) = v10;
  *(int64x2_t *)(a4 + 23) = v10;
  *(int64x2_t *)(a4 + 25) = v10;
  *(int64x2_t *)(a4 + 27) = v10;
  *(int64x2_t *)(a4 + 29) = v10;
  a4[31] = 0xFFF0000000000000LL;
  *((_DWORD *)a4 + 76) = 0;
  *((_OWORD *)a4 + 17) = 0u;
  *((_OWORD *)a4 + 18) = 0u;
  *((_OWORD *)a4 + 16) = 0u;
  a4[39] = 0xFFF0000000000000LL;
  *((int64x2_t *)a4 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v10;
  *((int64x2_t *)a4 + 21) = v10;
  *((int64x2_t *)a4 + 22) = v10;
  *((int64x2_t *)a4 + 23) = v10;
  a4[48] = 0xFFF0000000000000LL;
  uint64_t v14 = a4 + 49;
  *(_OWORD *)(a4 + 49) = 0u;
  *(_OWORD *)(a4 + 51) = 0u;
  *(_OWORD *)(a4 + 53) = 0u;
  *((_DWORD *)a4 + 11sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *((int64x2_t *)a4 + 28) = v10;
  *((int64x2_t *)a4 + 29) = v10;
  *((_OWORD *)a4 + 3sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *((_OWORD *)a4 + 31) = 0u;
  *((_OWORD *)a4 + 32) = 0u;
  *((_DWORD *)a4 + 132) = 0;
  a4[67] = 0xFFF0000000000000LL;
  *((int64x2_t *)a4 + 34) = v10;
  *((int64x2_t *)a4 + 35) = v10;
  *((int64x2_t *)a4 + 36) = v10;
  *((int64x2_t *)a4 + 37) = v10;
  *((int64x2_t *)a4 + 38) = v10;
  *((int64x2_t *)a4 + 39) = v10;
  *((int64x2_t *)a4 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v10;
  *((int64x2_t *)a4 + 41) = v10;
  *((int64x2_t *)a4 + 42) = v10;
  *((int64x2_t *)a4 + 43) = v10;
  *((int64x2_t *)a4 + 44) = v10;
  *((int64x2_t *)a4 + 45) = v10;
  *((int64x2_t *)a4 + 46) = v10;
  *((int64x2_t *)a4 + 47) = v10;
  a4[96] = 0xFFF0000000000000LL;
  *((_BYTE *)a4 + 776) = 0;
  __int128 __p = 0LL;
  int v97 = 0LL;
  uint64_t v15 = a1 + 1;
  unint64_t v98 = 0LL;
  sub_100AD44C8(a2, a3, (uint64_t)buf, a5);
  __int128 v16 = v113;
  *((_OWORD *)v13 + 6) = v112;
  *((_OWORD *)v13 + 7) = v16;
  *((_OWORD *)v13 + 8) = v114;
  v13[18] = v115;
  __int128 v17 = v109;
  *((_OWORD *)v13 + 2) = v108;
  *((_OWORD *)v13 + 3) = v17;
  __int128 v18 = v111;
  *((_OWORD *)v13 + 4) = v110;
  *((_OWORD *)v13 + 5) = v18;
  __int128 v19 = *(_OWORD *)&buf[16];
  *(_OWORD *)double v13 = *(_OWORD *)buf;
  *((_OWORD *)v13 + 1) = v19;
  sub_100AD3CD4(v15, (float64x2_t *)v13, a2, a3, (uint64_t)buf, a5);
  __int128 v20 = *(_OWORD *)&buf[16];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)buf;
  *((_OWORD *)v12 + 1) = v20;
  *((_OWORD *)v12 + 2) = v108;
  *((_DWORD *)v12 + 12) = v109;
  if (!*((_DWORD *)a4 + 24))
  {
    int v21 = a4 + 10;
    int v22 = v97;
    if ((unint64_t)v97 >= v98)
    {
      uint64_t v24 = (v97 - (_BYTE *)__p) >> 4;
      unint64_t v25 = v24 + 1;
      uint64_t v26 = v98 - (void)__p;
      else {
        unint64_t v27 = v25;
      }
      if (v27) {
        int v28 = (char *)sub_100037038((uint64_t)&v98, v27);
      }
      else {
        int v28 = 0LL;
      }
      int v29 = &v28[16 * v24];
      int v30 = &v28[16 * v27];
      *(_OWORD *)int v29 = *v21;
      __int16 v23 = v29 + 16;
      int v32 = (char *)__p;
      int v31 = v97;
      if (v97 != __p)
      {
        do
        {
          *((_OWORD *)v29 - 1) = *((_OWORD *)v31 - 1);
          v29 -= 16;
          v31 -= 16;
        }

        while (v31 != v32);
        int v31 = (char *)__p;
      }

      __int128 __p = v29;
      int v97 = v23;
      unint64_t v98 = (unint64_t)v30;
      if (v31) {
        operator delete(v31);
      }
    }

    else
    {
      *(_OWORD *)int v97 = *v21;
      __int16 v23 = v22 + 16;
    }

    int v97 = v23;
  }

  sub_100B032B8(a2, (uint64_t)buf, a5);
  __int128 v33 = v109;
  *(_OWORD *)(a4 + 43) = v108;
  *(_OWORD *)(a4 + 45) = v33;
  *(_OWORD *)(a4 + 47) = v110;
  __int128 v34 = *(_OWORD *)&buf[16];
  *(_OWORD *)(a4 + 39) = *(_OWORD *)buf;
  *(_OWORD *)(a4 + 41) = v34;
  sub_100B02B90(a1 + 2, (float64x2_t *)(a4 + 39), a2, a3, (uint64_t)buf, a5);
  __int128 v35 = *(_OWORD *)&buf[16];
  *((_OWORD *)a4 + 16) = *(_OWORD *)buf;
  *((_OWORD *)a4 + 17) = v35;
  *((_OWORD *)a4 + 18) = v108;
  *((_DWORD *)a4 + 76) = v109;
  if (*((_DWORD *)a4 + 76)) {
    goto LABEL_37;
  }
  int v36 = a4 + 36;
  int v37 = v97;
  if ((unint64_t)v97 >= v98)
  {
    uint64_t v39 = (v97 - (_BYTE *)__p) >> 4;
    unint64_t v40 = v39 + 1;
    if (!((unint64_t)(v39 + 1) >> 60))
    {
      uint64_t v41 = v98 - (void)__p;
      else {
        unint64_t v42 = v40;
      }
      if (v42) {
        uint64_t v43 = (char *)sub_100037038((uint64_t)&v98, v42);
      }
      else {
        uint64_t v43 = 0LL;
      }
      int v44 = &v43[16 * v39];
      __int16 v45 = &v43[16 * v42];
      *(_OWORD *)int v44 = *v36;
      int v38 = v44 + 16;
      __int16 v47 = (char *)__p;
      int v46 = v97;
      if (v97 != __p)
      {
        do
        {
          *((_OWORD *)v44 - 1) = *((_OWORD *)v46 - 1);
          v44 -= 16;
          v46 -= 16;
        }

        while (v46 != v47);
        int v46 = (char *)__p;
      }

      __int128 __p = v44;
      int v97 = v38;
      unint64_t v98 = (unint64_t)v45;
      if (v46) {
        operator delete(v46);
      }
      goto LABEL_36;
    }

void sub_1004C8AAC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1004C8AF4(uint64_t a1, double **a2)
{
  if (qword_101934480 != -1) {
    dispatch_once(&qword_101934480, &stru_10183C768);
  }
  uint64_t v3 = (os_log_s *)qword_101934488;
  if (os_log_type_enabled((os_log_t)qword_101934488, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = ((char *)a2[1] - (char *)*a2) >> 4;
    *(_DWORD *)std::string buf = 134349056;
    double v33 = *(double *)&v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "fuseLikelihoods using mean log odds fusion rule, modelLikelihoods count,%{public}lu",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934480 != -1) {
      dispatch_once(&qword_101934480, &stru_10183C768);
    }
    uint64_t v22 = ((char *)a2[1] - (char *)*a2) >> 4;
    int v28 = 134349056;
    double v29 = *(double *)&v22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934488,  2LL,  "fuseLikelihoods using mean log odds fusion rule, modelLikelihoods count,%{public}lu",  &v28,  12);
    uint64_t v24 = (uint8_t *)v23;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "double CLMobility::SteadinessModelFusion::fuseLikelihoods(const std::vector<FusionLikelihoods> &) const",  "%s\n",  v23);
    if (v24 != buf) {
      free(v24);
    }
  }

  __int128 v6 = *a2;
  double v5 = a2[1];
  if (v6 == v5)
  {
    if (qword_101934480 != -1) {
      dispatch_once(&qword_101934480, &stru_10183C768);
    }
    __int128 v20 = (os_log_s *)qword_101934488;
    if (os_log_type_enabled((os_log_t)qword_101934488, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "No component models to fuse likelihoods",  buf,  2u);
    }

    double v11 = -1.0;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934480 != -1) {
        dispatch_once(&qword_101934480, &stru_10183C768);
      }
      LOWORD(v28) = 0;
      LODWORD(v27) = 2;
      double v25 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934488,  1LL,  "No component models to fuse likelihoods",  &v28,  v27);
      __int128 v19 = v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "double CLMobility::SteadinessModelFusion::fuseLikelihoods(const std::vector<FusionLikelihoods> &) const",  "%s\n",  v25);
      goto LABEL_33;
    }
  }

  else
  {
    double v7 = 0.0;
    BOOL v8 = v6;
    while (*v8 != 0.0)
    {
      double v9 = v8[1];
      if (v9 == 0.0) {
        break;
      }
      double v7 = v7 + log(*v8 / v9);
      v8 += 2;
      if (v8 == v5)
      {
        double v10 = exp(v7 / (double)(unint64_t)(((char *)v5 - (char *)v6) >> 4));
        return v10 / (v10 + 1.0);
      }
    }

    if (qword_101934480 != -1) {
      dispatch_once(&qword_101934480, &stru_10183C768);
    }
    uint64_t v12 = (os_log_s *)qword_101934488;
    if (os_log_type_enabled((os_log_t)qword_101934488, OS_LOG_TYPE_FAULT))
    {
      double v13 = *v8;
      uint64_t v14 = *((void *)v8 + 1);
      *(_DWORD *)std::string buf = 134349312;
      double v33 = v13;
      __int16 v34 = 2050;
      uint64_t v35 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_FAULT,  "Unexpected model likelihood OK,%{public}.2f and/or NotOK,%{public}.2f",  buf,  0x16u);
    }

    double v11 = -1.0;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934480 != -1) {
        dispatch_once(&qword_101934480, &stru_10183C768);
      }
      double v15 = *v8;
      uint64_t v16 = *((void *)v8 + 1);
      int v28 = 134349312;
      double v29 = v15;
      __int16 v30 = 2050;
      uint64_t v31 = v16;
      LODWORD(v27) = 22;
      double v17 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934488,  17LL,  "Unexpected model likelihood OK,%{public}.2f and/or NotOK,%{public}.2f",  &v28,  v27);
      __int128 v19 = v18;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "double CLMobility::SteadinessModelFusion::fuseLikelihoods(const std::vector<FusionLikelihoods> &) const",  "%s\n",  v17);
LABEL_33:
      if (v19 != buf) {
        free(v19);
      }
    }
  }

  return v11;
}

void sub_1004C8FA4(id a1)
{
  qword_101934488 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Steadiness");
}

uint64_t sub_1004C8FD0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_10183C7F0;
  uint64_t v4 = v64;
  if (v64 == v63)
  {
    uint64_t v5 = 4LL;
    uint64_t v4 = v63;
  }

  else
  {
    if (!v64) {
      goto LABEL_6;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  *(void *)a1 = off_10183C798;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  __int128 v6 = (int64x2_t *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + sub_1000A56E8(v1 + 72) = 0LL;
  *(_OWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(void *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0x3FF0000000000000LL;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(a1 + 128) = 0x404E000000000000LL;
  *(_BYTE *)(a1 + 136) = 0;
  memset(v65, 0, sizeof(v65));
  sub_1004CAE2C((void *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)v65;
  *(void *)(a1 + sub_1000A56E8(v1 + 72) = *(void *)&v65[16];
  memset(v65, 0, sizeof(v65));
  int v62 = (void **)v65;
  sub_1004CADB0(&v62);
  double v7 = operator new(0x38uLL);
  sub_10001A504((uint64_t)v65, a2);
  sub_10052CF44(v7, a1 + 8, v65);
  BOOL v8 = v66;
  if (v66 == v65)
  {
    uint64_t v9 = 4LL;
    BOOL v8 = v65;
  }

  else
  {
    if (!v66) {
      goto LABEL_11;
    }
    uint64_t v9 = 5LL;
  }

  (*(void (**)(void))(*(void *)v8 + 8 * v9))();
LABEL_11:
  double v11 = *(void **)(a1 + 64);
  unint64_t v10 = *(void *)(a1 + 72);
  if ((unint64_t)v11 >= v10)
  {
    uint64_t v13 = ((uint64_t)v11 - v6->i64[0]) >> 3;
    uint64_t v14 = v10 - v6->i64[0];
    uint64_t v15 = v14 >> 2;
    else {
      unint64_t v16 = v15;
    }
    uint64_t v67 = a1 + 72;
    if (v16) {
      double v17 = (char *)sub_1000071BC(a1 + 72, v16);
    }
    else {
      double v17 = 0LL;
    }
    __int128 v18 = &v17[8 * v13];
    __int128 v19 = &v17[8 * v16];
    int v66 = v19;
    *(void *)__int128 v18 = v7;
    uint64_t v12 = v18 + 8;
    *(void *)&v65[16] = v18 + 8;
    int v21 = *(void **)(a1 + 56);
    __int128 v20 = *(void **)(a1 + 64);
    if (v20 == v21)
    {
      int64x2_t v23 = vdupq_n_s64((unint64_t)v20);
    }

    else
    {
      do
      {
        uint64_t v22 = *--v20;
        *__int128 v20 = 0LL;
        *((void *)v18 - 1) = v22;
        v18 -= 8;
      }

      while (v20 != v21);
      int64x2_t v23 = *v6;
      uint64_t v12 = *(void **)&v65[16];
      __int128 v19 = v66;
    }

    *(void *)(a1 + 56) = v18;
    *(void *)(a1 + 64) = v12;
    *(int64x2_t *)&v65[8] = v23;
    uint64_t v24 = *(char **)(a1 + 72);
    *(void *)(a1 + sub_1000A56E8(v1 + 72) = v19;
    int v66 = v24;
    *(void *)__int16 v65 = v23.i64[0];
    sub_1004CAE9C((uint64_t)v65);
  }

  else
  {
    void *v11 = v7;
    uint64_t v12 = v11 + 1;
  }

  *(void *)(a1 + 64) = v12;
  double v25 = operator new(0x38uLL);
  sub_10001A504((uint64_t)v65, a2);
  sub_100209A5C(v25, a1 + 8, (uint64_t)v65);
  uint64_t v26 = v66;
  if (v66 == v65)
  {
    uint64_t v27 = 4LL;
    uint64_t v26 = v65;
  }

  else
  {
    if (!v66) {
      goto LABEL_32;
    }
    uint64_t v27 = 5LL;
  }

  (*(void (**)(void))(*(void *)v26 + 8 * v27))();
LABEL_32:
  double v29 = *(void **)(a1 + 64);
  unint64_t v28 = *(void *)(a1 + 72);
  if ((unint64_t)v29 >= v28)
  {
    uint64_t v31 = ((uint64_t)v29 - v6->i64[0]) >> 3;
    uint64_t v32 = v28 - v6->i64[0];
    uint64_t v33 = v32 >> 2;
    else {
      unint64_t v34 = v33;
    }
    uint64_t v67 = a1 + 72;
    if (v34) {
      uint64_t v35 = (char *)sub_1000071BC(a1 + 72, v34);
    }
    else {
      uint64_t v35 = 0LL;
    }
    int v36 = &v35[8 * v31];
    int v37 = &v35[8 * v34];
    int v66 = v37;
    *(void *)int v36 = v25;
    __int16 v30 = v36 + 8;
    *(void *)&v65[16] = v36 + 8;
    uint64_t v39 = *(void **)(a1 + 56);
    int v38 = *(void **)(a1 + 64);
    if (v38 == v39)
    {
      int64x2_t v41 = vdupq_n_s64((unint64_t)v38);
    }

    else
    {
      do
      {
        uint64_t v40 = *--v38;
        void *v38 = 0LL;
        *((void *)v36 - 1) = v40;
        v36 -= 8;
      }

      while (v38 != v39);
      int64x2_t v41 = *v6;
      __int16 v30 = *(void **)&v65[16];
      int v37 = v66;
    }

    *(void *)(a1 + 56) = v36;
    *(void *)(a1 + 64) = v30;
    *(int64x2_t *)&v65[8] = v41;
    unint64_t v42 = *(char **)(a1 + 72);
    *(void *)(a1 + sub_1000A56E8(v1 + 72) = v37;
    int v66 = v42;
    *(void *)__int16 v65 = v41.i64[0];
    sub_1004CAE9C((uint64_t)v65);
  }

  else
  {
    *double v29 = v25;
    __int16 v30 = v29 + 1;
  }

  *(void *)(a1 + 64) = v30;
  uint64_t v43 = operator new(0x38uLL);
  sub_10001A504((uint64_t)v65, a2);
  sub_100839FA8(v43, a1 + 8, v65);
  int v44 = v66;
  if (v66 == v65)
  {
    uint64_t v45 = 4LL;
    int v44 = v65;
  }

  else
  {
    if (!v66) {
      goto LABEL_53;
    }
    uint64_t v45 = 5LL;
  }

  (*(void (**)(void))(*(void *)v44 + 8 * v45))();
LABEL_53:
  __int16 v47 = *(void **)(a1 + 64);
  unint64_t v46 = *(void *)(a1 + 72);
  if ((unint64_t)v47 >= v46)
  {
    uint64_t v49 = ((uint64_t)v47 - v6->i64[0]) >> 3;
    uint64_t v50 = v46 - v6->i64[0];
    uint64_t v51 = v50 >> 2;
    else {
      unint64_t v52 = v51;
    }
    uint64_t v67 = a1 + 72;
    if (v52) {
      uint64_t v53 = (char *)sub_1000071BC(a1 + 72, v52);
    }
    else {
      uint64_t v53 = 0LL;
    }
    __int128 v54 = &v53[8 * v49];
    __int16 v55 = &v53[8 * v52];
    int v66 = v55;
    *(void *)__int128 v54 = v43;
    uint64_t v48 = v54 + 8;
    *(void *)&v65[16] = v54 + 8;
    __int16 v57 = *(void **)(a1 + 56);
    int v56 = *(void **)(a1 + 64);
    if (v56 == v57)
    {
      int64x2_t v59 = vdupq_n_s64((unint64_t)v56);
    }

    else
    {
      do
      {
        uint64_t v58 = *--v56;
        void *v56 = 0LL;
        *((void *)v54 - 1) = v58;
        v54 -= 8;
      }

      while (v56 != v57);
      int64x2_t v59 = *v6;
      uint64_t v48 = *(void **)&v65[16];
      __int16 v55 = v66;
    }

    *(void *)(a1 + 56) = v54;
    *(void *)(a1 + 64) = v48;
    *(int64x2_t *)&v65[8] = v59;
    uint64_t v60 = *(char **)(a1 + 72);
    *(void *)(a1 + sub_1000A56E8(v1 + 72) = v55;
    int v66 = v60;
    *(void *)__int16 v65 = v59.i64[0];
    sub_1004CAE9C((uint64_t)v65);
  }

  else
  {
    void *v47 = v43;
    uint64_t v48 = v47 + 1;
  }

  *(void *)(a1 + 64) = v48;
  return a1;
}

void sub_1004C94A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1004C9550()
{
}

void sub_1004C955C(void *a1, uint64_t a2, double a3)
{
  if (qword_101934710 != -1) {
    dispatch_once(&qword_101934710, &stru_10183C810);
  }
  __int128 v6 = (os_log_s *)qword_101934718;
  if (os_log_type_enabled((os_log_t)qword_101934718, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134217984;
    double v19 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLExerciseMinuteIntensityEstimator::feedNatalie called, rawMets, %f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934710 != -1) {
      dispatch_once(&qword_101934710, &stru_10183C810);
    }
    int v16 = 134217984;
    double v17 = a3;
    uint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934718,  2LL,  "CLExerciseMinuteIntensityEstimator::feedNatalie called, rawMets, %f",  COERCE_DOUBLE(&v16));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLExerciseMinuteIntensityEstimator::feedNatalie(double, const CLNatalieModelInput &)",  "%s\n",  v15);
  }

  sub_1004C9780(a1, a2);
  double v7 = (uint64_t *)a1[7];
  BOOL v8 = (uint64_t *)a1[8];
  if (v7 != v8)
  {
    double v9 = 0.0;
    do
    {
      (*(void (**)(uint64_t))(*(void *)*v7 + 24LL))(*v7);
      uint64_t v10 = *v7++;
      double v11 = *(double *)(v10 + 40);
      if (v11 > v9) {
        double v9 = v11;
      }
    }

    while (v7 != v8);
    uint64_t v13 = (uint64_t *)a1[7];
    uint64_t v12 = (uint64_t *)a1[8];
    while (v13 != v12)
    {
      uint64_t v14 = *v13++;
      (*(void (**)(uint64_t, double))(*(void *)v14 + 16LL))(v14, v9);
    }
  }

void sub_1004C9780(void *a1, uint64_t a2)
{
  int v33 = 1065353216;
  char v32 = 0;
  double v4 = *(double *)(a2 + 112);
  *(double *)&__int128 v27 = v4 - (*(double *)(a2 + 128) - *(double *)(a2 + 120));
  *((double *)&v27 + 1) = v4;
  sub_1004CA1F4((uint64_t)a1, a2, (float *)&v33, &v32);
  uint64_t v28 = v5;
  int v29 = v33;
  char v30 = *(_BYTE *)(a2 + 352);
  char v31 = v32;
  if (v4 < v4 - *(double *)&v27)
  {
    if (qword_101934710 != -1) {
      dispatch_once(&qword_101934710, &stru_10183C810);
    }
    __int128 v6 = (os_log_s *)qword_101934718;
    if (os_log_type_enabled((os_log_t)qword_101934718, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 134218240;
      double v39 = v4;
      __int16 v40 = 2048;
      double v41 = v4 - *(double *)&v27;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Invalid timestamps, natalieModelInput computeTime is less than the duration, computeTime, %.3f, duration, %.3f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934710 != -1) {
        dispatch_once(&qword_101934710, &stru_10183C810);
      }
      int v34 = 134218240;
      double v35 = v4;
      __int16 v36 = 2048;
      double v37 = v4 - *(double *)&v27;
      LODWORD(v26) = 22;
      double v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934718,  2LL,  "Invalid timestamps, natalieModelInput computeTime is less than the duration, computeTime, %.3f, duration, %.3f",  COERCE_DOUBLE(&v34),  v26);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLExerciseMinuteIntensityEstimator::updateSampleBuffer(double, const CLNatalieModelInput &)",  "%s\n",  v7);
LABEL_31:
      return;
    }

    return;
  }

  if (*(double *)&v27 < v4)
  {
    uint64_t v8 = a1[6];
    if (!v8
      || *(double *)&v27 >= *(double *)(*(void *)(a1[2]
                                                  + (((unint64_t)(v8 + a1[5] - 1) >> 4) & 0xFFFFFFFFFFFFFF8LL))
                                      + 32 * ((v8 + a1[5] - 1) & 0x7F)
                                      + 8))
    {
      sub_1004CA314(a1 + 1, &v27);
      uint64_t v18 = a1[6];
      if (v18)
      {
        double v19 = *(double *)(*(void *)(a1[2] + (((unint64_t)(v18 + a1[5] - 1) >> 4) & 0xFFFFFFFFFFFFFF8LL))
                        + 32 * ((v18 + a1[5] - 1) & 0x7F)
                        + 8)
            + -310.0;
        do
        {
          unint64_t v20 = a1[5];
          a1[6] = v18 - 1;
          a1[5] = v20 + 1;
          sub_1000ECDBC((uint64_t)(a1 + 1), 1);
          uint64_t v18 = a1[6];
        }

        while (v18);
      }

      return;
    }

    if (qword_101934710 != -1) {
      dispatch_once(&qword_101934710, &stru_10183C810);
    }
    double v9 = (os_log_s *)qword_101934718;
    if (os_log_type_enabled((os_log_t)qword_101934718, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v10 = a1[6] + a1[5] - 1LL;
      double v11 = *(double *)(*(void *)(a1[2] + ((v10 >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * (v10 & 0x7F) + 8);
      *(_DWORD *)std::string buf = 134218240;
      double v39 = v11;
      __int16 v40 = 2048;
      double v41 = *(double *)&v27;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Time rolled back, bufferEndTime, %.3f, newSampleStartTime, %.3f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934710 != -1) {
        dispatch_once(&qword_101934710, &stru_10183C810);
      }
      unint64_t v23 = a1[6] + a1[5] - 1LL;
      double v24 = *(double *)(*(void *)(a1[2] + ((v23 >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * (v23 & 0x7F) + 8);
      int v34 = 134218240;
      double v35 = v24;
      __int16 v36 = 2048;
      double v37 = *(double *)&v27;
      LODWORD(v26) = 22;
      double v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934718,  0LL,  "Time rolled back, bufferEndTime, %.3f, newSampleStartTime, %.3f",  COERCE_DOUBLE(&v34),  v26);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLExerciseMinuteIntensityEstimator::updateSampleBuffer(double, const CLNatalieModelInput &)",  "%s\n",  v25);
    }

    uint64_t v12 = (void **)a1[2];
    uint64_t v13 = a1[3];
    a1[6] = 0LL;
    unint64_t v14 = v13 - (void)v12;
    if (v14 >= 0x11)
    {
      do
      {
        operator delete(*v12);
        uint64_t v15 = a1[3];
        uint64_t v12 = (void **)(a1[2] + 8LL);
        a1[2] = v12;
        unint64_t v14 = v15 - (void)v12;
      }

      while (v14 > 0x10);
    }

    if (v14 >> 3 == 1)
    {
      uint64_t v16 = 64LL;
    }

    else
    {
      if (v14 >> 3 != 2) {
        goto LABEL_40;
      }
      uint64_t v16 = 128LL;
    }

    a1[5] = v16;
LABEL_40:
    sub_1004CA314(a1 + 1, &v27);
    uint64_t v22 = (void *)a1[7];
    int v21 = (void *)a1[8];
    while (v22 != v21)
    {
      (*(void (**)(void))(*(void *)*v22 + 32LL))(*v22);
      ++v22;
    }

    return;
  }

  if (qword_101934710 != -1) {
    dispatch_once(&qword_101934710, &stru_10183C810);
  }
  double v17 = (os_log_s *)qword_101934718;
  if (os_log_type_enabled((os_log_t)qword_101934718, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 134218240;
    double v39 = *(double *)&v27;
    __int16 v40 = 2048;
    double v41 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "Sample start time is after sample end time, startTime, %.3f, endTime, %.3f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934710 != -1) {
      dispatch_once(&qword_101934710, &stru_10183C810);
    }
    int v34 = 134218240;
    double v35 = *(double *)&v27;
    __int16 v36 = 2048;
    double v37 = v4;
    LODWORD(v26) = 22;
    double v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934718,  16LL,  "Sample start time is after sample end time, startTime, %.3f, endTime, %.3f",  COERCE_DOUBLE(&v34),  v26);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLExerciseMinuteIntensityEstimator::updateSampleBuffer(double, const CLNatalieModelInput &)",  "%s\n",  v7);
    goto LABEL_31;
  }

void sub_1004C9E18(uint64_t a1, float *a2)
{
  if (qword_101934710 != -1) {
    dispatch_once(&qword_101934710, &stru_10183C810);
  }
  double v4 = (os_log_s *)qword_101934718;
  if (os_log_type_enabled((os_log_t)qword_101934718, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLExerciseMinuteIntensityEstimator::feedBodyMetrics called",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934710 != -1) {
      dispatch_once(&qword_101934710, &stru_10183C810);
    }
    LOWORD(v17) = 0;
    double v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934718,  2LL,  "CLExerciseMinuteIntensityEstimator::feedBodyMetrics called",  &v17,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLExerciseMinuteIntensityEstimator::feedBodyMetrics(const CLBodyMetrics &)",  "%s\n",  v11);
  }

  sub_1004CA174(a2);
  double v15 = v5;
  uint64_t v16 = v6;
  double v7 = 1.0;
  if (v5 > 0.0) {
    double v7 = 4.40208912 / v5;
  }
  *(double *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v7;
  uint64_t v8 = (dispatch_queue_t *)sub_100B354EC();
  sub_100B3672C(v8, (uint64_t)&v15);
  if (qword_101934710 != -1) {
    dispatch_once(&qword_101934710, &stru_10183C810);
  }
  double v9 = (os_log_s *)qword_101934718;
  if (os_log_type_enabled((os_log_t)qword_101934718, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 80);
    *(_DWORD *)std::string buf = 134218496;
    double v24 = v15;
    __int16 v25 = 2048;
    uint64_t v26 = v10;
    __int16 v27 = 1024;
    int v28 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "CLExerciseMinuteIntensityEstimator::feedBodyMetrics, threshold, %f, scalingFactor, %f, thresholdSource, %d",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934710 != -1) {
      dispatch_once(&qword_101934710, &stru_10183C810);
    }
    uint64_t v12 = *(void *)(a1 + 80);
    int v17 = 134218496;
    double v18 = v15;
    __int16 v19 = 2048;
    uint64_t v20 = v12;
    __int16 v21 = 1024;
    int v22 = v16;
    LODWORD(v14) = 28;
    uint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934718,  0LL,  "CLExerciseMinuteIntensityEstimator::feedBodyMetrics, threshold, %f, scalingFactor, %f, thresholdSource, %d",  COERCE_DOUBLE(&v17),  v14,  LODWORD(v15));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLExerciseMinuteIntensityEstimator::feedBodyMetrics(const CLBodyMetrics &)",  "%s\n",  v13);
  }

double sub_1004CA174(float *a1)
{
  double result = v2;
  float v4 = a1[13];
  if (v4 != -1.0 && v2 > v4) {
    double result = v4;
  }
  if (result < 2.19999981) {
    double result = 2.19999981;
  }
  if (result > 4.40208912) {
    return 4.40208912;
  }
  return result;
}

uint64_t sub_1004CA1F4(uint64_t a1, uint64_t a2, float *a3, _BYTE *a4)
{
  if (((CLMotionActivity::isTypePedestrian(*(unsigned int *)(a2 + 152)) & 1) != 0
     || (CLMotionActivity::isTypeIndoorPedestrian(*(unsigned int *)(a2 + 152)) & 1) != 0
     || (*(_DWORD *)(a2 + 152) - 61) <= 1)
    && (sub_100AF8E80(a2, v8) & 1) == 0)
  {
    goto LABEL_14;
  }

  if (*(_BYTE *)(a2 + 352))
  {
    int v9 = *(_DWORD *)(a2 + 152);
    if (v9 <= 2100)
    {
      if (v9 != 2022 && v9 != 2024)
      {
LABEL_14:
        float v10 = *(double *)(a1 + 80);
        *a3 = v10;
      }
    }

    else if (((v9 - 2101) > 0x31 || ((1LL << (v9 - 53)) & 0x2000000000011LL) == 0) {
           && v9 != 15670)
    }
    {
      goto LABEL_14;
    }
  }

  uint64_t result = sub_100F63E28(a1 + 88, a2, (uint64_t)v12);
  *a4 = v12[0];
  return result;
}

uint64_t sub_1004CA314(void *a1, _OWORD *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 16 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1004CAEFC(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  uint64_t v8 = (_OWORD *)(*(void *)(v5 + ((v7 >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * (v7 & 0x7F));
  __int128 v9 = a2[1];
  *uint64_t v8 = *a2;
  v8[1] = v9;
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5] + 1LL;
  a1[5] = v11;
  unint64_t v12 = v10 + v11;
  uint64_t v13 = a1[1];
  double v14 = (void *)(v13 + 8 * (v12 >> 7));
  uint64_t v15 = *v14 + 32 * (v12 & 0x7F);
  if (a1[2] == v13) {
    uint64_t v15 = 0LL;
  }
  if (v15 == *v14) {
    uint64_t v15 = *(v14 - 1) + 4096LL;
  }
  return v15 - 32;
}

void *sub_1004CA3D8(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = off_10182AF80;
  sub_10001A504((uint64_t)(a1 + 1), a3);
  a1[5] = 0LL;
  a1[6] = a2;
  return a1;
}

uint64_t sub_1004CA418(uint64_t a1, double *a2, void *a3, uint64_t a4, __n128 a5)
{
  uint64_t v5 = *(void **)(a1 + 48);
  uint64_t v6 = v5[5];
  if (!v6) {
    return 0LL;
  }
  double v10 = a5.n128_f64[0];
  double v12 = *a2;
  uint64_t v13 = v5[1];
  uint64_t v14 = v5[4] >> 7;
  if (*a2 == 0.0)
  {
    uint64_t v16 = *(void *)(v13 + 8 * v14);
    uint64_t v15 = v5[4] & 0x7FLL;
    double v12 = *(double *)(v16 + 32 * v15);
    *a2 = v12;
  }

  else
  {
    uint64_t v15 = v5[4] & 0x7FLL;
    uint64_t v16 = *(void *)(v13 + 8 * v14);
  }

  if (v12 >= *(double *)(v16 + 32 * v15))
  {
    unint64_t v20 = v5[4];
  }

  else
  {
    if (qword_101934710 != -1) {
      dispatch_once(&qword_101934710, &stru_10183C810);
    }
    int v17 = (os_log_s *)qword_101934718;
    if (os_log_type_enabled((os_log_t)qword_101934718, OS_LOG_TYPE_ERROR))
    {
      double v18 = *a2;
      double v19 = *(double *)(*(void *)(*(void *)(*(void *)(a1 + 48) + 8LL)
                                  + ((*(void *)(*(void *)(a1 + 48) + 32LL) >> 4) & 0xFFFFFFFFFFFFFF8LL))
                      + 32 * (*(void *)(*(void *)(a1 + 48) + 32LL) & 0x7FLL));
      *(_DWORD *)std::string buf = 134218240;
      *(double *)&uint8_t buf[4] = v18;
      __int16 v74 = 2048;
      double v75 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "operateOnWindow - windowStartTime is outside of our intensity buffer, windowStartTime, %.3f, bufferStartTime, %.3f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934710 != -1) {
        dispatch_once(&qword_101934710, &stru_10183C810);
      }
      double v58 = *a2;
      double v59 = *(double *)(*(void *)(*(void *)(*(void *)(a1 + 48) + 8LL)
                                  + ((*(void *)(*(void *)(a1 + 48) + 32LL) >> 4) & 0xFFFFFFFFFFFFFF8LL))
                      + 32 * (*(void *)(*(void *)(a1 + 48) + 32LL) & 0x7FLL));
      int v63 = 134218240;
      double v64 = v58;
      __int16 v65 = 2048;
      double v66 = v59;
      LODWORD(v61) = 22;
      uint64_t v60 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934718,  16LL,  "operateOnWindow - windowStartTime is outside of our intensity buffer, windowStartTime, %.3f, buffe rStartTime, %.3f",  COERCE_DOUBLE(&v63),  v61);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLExerciseMinuteIntensityEstimatorBase::operateOnWindow(CFTimeInterval, CFAbsoluteTime &, const CLExerciseM inuteIntensitySample *&, std::function<void (const CLExerciseMinuteIntensitySample &, CFTimeInterval)>) const",  "%s\n",  v60);
      if (v60 != buf) {
        free(v60);
      }
    }

    uint64_t v5 = *(void **)(a1 + 48);
    uint64_t v13 = v5[1];
    unint64_t v20 = v5[4];
    double v12 = *(double *)(*(void *)(v13 + ((v20 >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * (v20 & 0x7F));
    *a2 = v12;
    uint64_t v6 = v5[5];
  }

  unint64_t v21 = v20 + v6;
  int v22 = (void *)(v13 + 8 * (v21 >> 7));
  uint64_t v23 = v5[2];
  if (v23 == v13) {
    uint64_t v24 = 0LL;
  }
  else {
    uint64_t v24 = *v22 + 32 * (v21 & 0x7F);
  }
  while (1)
  {
    uint64_t v26 = v5[1];
    uint64_t v27 = v23 == v26 ? 0LL : *(void *)(v26 + ((v5[4] >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * (v5[4] & 0x7FLL);
    if (v24 == v27) {
      break;
    }
    uint64_t v28 = v24;
    if (v24 == *v22) {
      uint64_t v28 = *(v22 - 1) + 4096LL;
    }
    *a3 = v28 - 32;
    if (v24 == *v22)
    {
      uint64_t v32 = *(v22 - 1);
      double v29 = *(double *)(v32 + 4064);
      double v30 = *a2;
      uint64_t v31 = v32 + 4096;
      if (v29 <= *a2) {
        goto LABEL_32;
      }
    }

    else
    {
      double v29 = *(double *)(v24 - 32);
      double v30 = *a2;
      uint64_t v31 = v24;
      if (v29 <= *a2)
      {
        uint64_t v31 = v24;
LABEL_32:
        *(double *)std::string buf = *(double *)(v31 - 24) - v30;
        uint64_t v35 = *(void *)(a4 + 24);
        if (!v35) {
          sub_100008BDC();
        }
        (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(void *)v35 + 48LL))(v35, v31 - 32, buf);
        uint64_t v5 = *(void **)(a1 + 48);
        uint64_t v26 = v5[1];
        uint64_t v23 = v5[2];
        break;
      }
    }

    *(double *)std::string buf = *(double *)(v31 - 24) - v29;
    uint64_t v33 = *(void *)(a4 + 24);
    if (!v33) {
      sub_100008BDC();
    }
    (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(void *)v33 + 48LL))(v33, v31 - 32, buf);
    if (v24 == *v22)
    {
      uint64_t v34 = *--v22;
      uint64_t v24 = v34 + 4096;
    }

    v24 -= 32LL;
    uint64_t v5 = *(void **)(a1 + 48);
    uint64_t v23 = v5[2];
  }

  unint64_t v36 = v5[4] + v5[5];
  double v37 = (void *)(v26 + 8 * (v36 >> 7));
  if (v23 == v26) {
    uint64_t v38 = 0LL;
  }
  else {
    uint64_t v38 = *v37 + 32 * (v36 & 0x7F);
  }
  double v39 = *a2 + v10;
  a5.n128_u64[0] = 134219008LL;
  __n128 v62 = a5;
  while (1)
  {
    uint64_t v40 = v23 == v26 ? 0LL : *(void *)(v26 + ((v5[4] >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * (v5[4] & 0x7FLL);
    if (v38 == v40) {
      return 1LL;
    }
    if (v38 == *v37)
    {
      uint64_t v44 = *(v37 - 1);
      double v41 = *(double *)(v44 + 4064);
      if (v41 < v39)
      {
        double v43 = *(double *)(v44 + 4072);
        if (v43 >= v39)
        {
          uint64_t v38 = v44 + 4096;
LABEL_68:
          *(double *)std::string buf = v39 - v43;
          uint64_t v57 = *(void *)(a4 + 24);
          if (!v57) {
            sub_100008BDC();
          }
          (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(void *)v57 + 48LL))(v57, v38 - 32, buf);
          return 1LL;
        }

        goto LABEL_48;
      }

      uint64_t v42 = v44 + 4096;
    }

    else
    {
      double v41 = *(double *)(v38 - 32);
      uint64_t v42 = v38;
      if (v41 < v39)
      {
        double v43 = *(double *)(v38 - 24);
        if (v43 >= v39) {
          goto LABEL_68;
        }
LABEL_48:
        if (qword_101934710 != -1) {
          dispatch_once(&qword_101934710, &stru_10183C810);
        }
        uint64_t v45 = (os_log_s *)qword_101934718;
        if (os_log_type_enabled((os_log_t)qword_101934718, OS_LOG_TYPE_ERROR))
        {
          uint64_t v46 = v38;
          if (v38 == *v37) {
            uint64_t v46 = *(v37 - 1) + 4096LL;
          }
          double v47 = *a2;
          uint64_t v49 = *(void *)(v46 - 32);
          uint64_t v48 = *(void *)(v46 - 24);
          *(_DWORD *)std::string buf = v62.n128_u32[0];
          *(double *)&uint8_t buf[4] = v47;
          __int16 v74 = 2048;
          double v75 = v39;
          __int16 v76 = 2048;
          double v77 = v10;
          __int16 v78 = 2048;
          uint64_t v79 = v49;
          __int16 v80 = 2048;
          uint64_t v81 = v48;
          _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_ERROR,  "operateOnWindow - our window is incomplete, this indicates there is a logic error, windowStartTime, %.3f, wi ndowEndTime, %.3f, windowDuration, %.3f, sampleStartTime, %.3f, sampleEndTime, %.3f",  buf,  0x34u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934710 != -1) {
            dispatch_once(&qword_101934710, &stru_10183C810);
          }
          double v50 = *a2;
          uint64_t v51 = v38;
          if (v38 == *v37) {
            uint64_t v51 = *(v37 - 1) + 4096LL;
          }
          uint64_t v53 = *(void *)(v51 - 32);
          uint64_t v52 = *(void *)(v51 - 24);
          int v63 = v62.n128_u32[0];
          double v64 = v50;
          __int16 v65 = 2048;
          double v66 = v39;
          __int16 v67 = 2048;
          double v68 = v10;
          __int16 v69 = 2048;
          uint64_t v70 = v53;
          __int16 v71 = 2048;
          uint64_t v72 = v52;
          LODWORD(v61) = 52;
          __int128 v54 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934718,  16LL,  "operateOnWindow - our window is incomplete, this indicates there is a logic error, windowStart Time, %.3f, windowEndTime, %.3f, windowDuration, %.3f, sampleStartTime, %.3f, sampleEndTime, %.3f",  COERCE_DOUBLE(&v63),  v61,  v62.n128_f64[0],  v62.n128_f64[1]);
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLExerciseMinuteIntensityEstimatorBase::operateOnWindow(CFTimeInterval, CFAbsoluteTime &, const CLExerc iseMinuteIntensitySample *&, std::function<void (const CLExerciseMinuteIntensitySample &, CFTimeInterval)>) const",  "%s\n",  v54);
          if (v54 != buf) {
            free(v54);
          }
        }

        goto LABEL_64;
      }
    }

    *(double *)std::string buf = -(*(double *)(v42 - 24) - v41);
    uint64_t v55 = *(void *)(a4 + 24);
    if (!v55) {
      sub_100008BDC();
    }
    (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(void *)v55 + 48LL))(v55, v42 - 32, buf);
LABEL_64:
    if (v38 == *v37)
    {
      uint64_t v56 = *--v37;
      uint64_t v38 = v56 + 4096;
    }

    v38 -= 32LL;
    uint64_t v5 = *(void **)(a1 + 48);
    uint64_t v26 = v5[1];
    uint64_t v23 = v5[2];
  }

uint64_t sub_1004CAB68(uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 56);
  sub_1004CADB0(&v3);
  sub_1000EAA04((void *)(a1 + 8));
  return a1;
}

void sub_1004CABA8(uint64_t a1)
{
  double v2 = (void **)(a1 + 56);
  sub_1004CADB0(&v2);
  sub_1000EAA04((void *)(a1 + 8));
  operator delete((void *)a1);
}

void sub_1004CABEC(id a1)
{
  qword_101934718 = (uint64_t)os_log_create("com.apple.locationd.Motion", "ExerciseMinutes");
}

double sub_1004CAC18(float *a1)
{
  double result = sub_1004CAC94(a1, (int *)&v3);
  *(float *)&double result = result;
  if (*(float *)&result >= 1.0)
  {
    if (v2 > 8.0) {
      return 8.0;
    }
    return v2;
  }

  return result;
}

double sub_1004CAC94(float *a1, int *a2)
{
  float v2 = a1[5];
  double v3 = a1[2];
  double v4 = dbl_1012EE030[v2 <= 13.0];
  double v5 = v2 * -0.01 + 1.6;
  double v6 = fmin(v3 * 0.5 + 0.225, 1.0);
  if (v4 >= v6) {
    double v6 = v4;
  }
  double v7 = fmax(fmin(v5, 1.0), 0.7);
  double v8 = fmax(fmin(a1[3] / (v3 * v3) * -0.0125 + 1.425, 1.0), 0.9);
  if (v7 >= v6) {
    double v9 = v6;
  }
  else {
    double v9 = v7;
  }
  if (v8 < v9) {
    double v9 = v8;
  }
  if (v9 == 1.0)
  {
    *a2 = 0;
    return 3.2973001;
  }

  else
  {
    double v11 = fmax(v7 * v6 * v8, 0.9);
    if (v11 < v9) {
      double v9 = v11;
    }
    if (v9 == v11) {
      int v12 = 5;
    }
    else {
      int v12 = 1;
    }
    if (v9 == v8) {
      int v13 = 4;
    }
    else {
      int v13 = v12;
    }
    if (v9 == v6) {
      int v14 = 2;
    }
    else {
      int v14 = v13;
    }
    if (v9 == v7) {
      int v15 = 3;
    }
    else {
      int v15 = v14;
    }
    *a2 = v15;
    return v9 * 3.2973001;
  }

void sub_1004CADB0(void ***a1)
{
  uint64_t v1 = *a1;
  float v2 = **a1;
  if (v2)
  {
    double v4 = v1[1];
    double v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v7 = *--v4;
        uint64_t v6 = v7;
        *double v4 = 0LL;
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
        }
      }

      while (v4 != v2);
      double v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

void sub_1004CAE2C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  if (*a1)
  {
    double v3 = (void *)a1[1];
    double v4 = (void *)*a1;
    if (v3 != v1)
    {
      do
      {
        uint64_t v6 = *--v3;
        uint64_t v5 = v6;
        void *v3 = 0LL;
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
        }
      }

      while (v3 != v1);
      double v4 = (void *)*a1;
    }

    a1[1] = v1;
    operator delete(v4);
    *a1 = 0LL;
    a1[1] = 0LL;
    a1[2] = 0LL;
  }

uint64_t sub_1004CAE9C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
    uint64_t v4 = *(void *)(i - 8);
    *(void *)(i - 8) = 0LL;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
  }

  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1004CAEFC(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x80;
  unint64_t v4 = v2 - 128;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    double v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    double v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)double v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      double v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      double v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        double v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        double v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)double v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_1004CB1C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1004CB210()
{
  dword_101996098 = 800;
  __cxa_atexit((void (*)(void *))sub_100355650, qword_101996080, (void *)&_mh_execute_header);
  sub_1010DDBC0(qword_1019960A0, "DmFp");
  dword_1019960B8 = 200;
  return __cxa_atexit((void (*)(void *))sub_100355650, qword_1019960A0, (void *)&_mh_execute_header);
}

void sub_1004CB29C( uint64_t a1@<X0>, float64x2_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  *(_DWORD *)(a5 + 48) = 0;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)a5 = 0u;
  *(double *)(a5 + 16) = a6;
  if (sub_1004CBA58(a2->f64))
  {
    int v11 = 4;
  }

  else
  {
    if (qword_101934480 != -1) {
      dispatch_once(&qword_101934480, &stru_10183C850);
    }
    uint64_t v12 = (os_log_s *)qword_101934488;
    if (os_log_type_enabled((os_log_t)qword_101934488, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Rejection: SteadinessModelHarmonic missing required feature inputs",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934480 != -1) {
        dispatch_once(&qword_101934480, &stru_10183C850);
      }
      LOWORD(vsub_1000A56E8(v1 + 72) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934488,  1LL,  "Rejection: SteadinessModelHarmonic missing required feature inputs",  &v72,  2);
      uint64_t v70 = (uint8_t *)v69;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "SteadinessModel::Result CLMobility::SteadinessModelHarmonic::runSteadinessModel(CFAbsoluteTime, const Features & , const std::vector<BoutMetrics> &, const CLBodyMetrics &) const",  "%s\n",  v69);
      if (v70 != buf) {
        free(v70);
      }
    }

    *(_DWORD *)(a5 + 48) = 8;
    int v11 = 12;
  }

  if (!*(_BYTE *)(a4 + 57)) {
    *(_DWORD *)(a5 + 48) = v11;
  }
  sub_1004CBC48(a1, a5, a3);
  double v13 = sub_10070C8C0(a2);
  *(double *)(a5 + 24) = v13;
  *(double *)(a5 + 32) = sub_10070CA1C(v13);
  *(void *)(a5 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v14;
  if (qword_101934480 != -1) {
    dispatch_once(&qword_101934480, &stru_10183C850);
  }
  uint64_t v15 = (os_log_s *)qword_101934488;
  if (os_log_type_enabled((os_log_t)qword_101934488, OS_LOG_TYPE_DEFAULT))
  {
    float64_t v16 = *(double *)(a5 + 32);
    float64_t v17 = *(double *)(a5 + 40);
    float64_t v18 = *(double *)(a5 + 16);
    float64_t v19 = *(double *)(a5 + 24);
    int v20 = *(_DWORD *)(a5 + 48);
    int v21 = *(_DWORD *)(a5 + 8);
    int v22 = *(_DWORD *)(a5 + 12);
    *(_DWORD *)std::string buf = 134350593;
    float64_t v132 = v18;
    __int16 v133 = 2050;
    float64_t v134 = v16;
    __int16 v135 = 2050;
    float64_t v136 = v17;
    __int16 v137 = 2049;
    float64_t v138 = v19;
    __int16 v139 = 1026;
    *(_DWORD *)unint64_t v140 = v20;
    *(_WORD *)&v140[4] = 1025;
    *(_DWORD *)&v140[6] = v21;
    LOWORD(v141) = 1025;
    *(_DWORD *)((char *)&v141 + 2) = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "CLMobility::SteadinessModelHarmonic::Result,hkEndTime,%{public}.2f,likelihoodOK,%{public}.2f,likelihoodNotOK,%{pub lic}.2f,rawSteadiness,%{private}.2f,rejectionStatus,%{public}d,numValidBouts7Days,%{private}d,numValidBouts28Days,%{private}d",  buf,  0x3Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934480 != -1) {
      dispatch_once(&qword_101934480, &stru_10183C850);
    }
    float64_t v39 = *(double *)(a5 + 32);
    float64_t v40 = *(double *)(a5 + 40);
    float64_t v41 = *(double *)(a5 + 16);
    float64_t v42 = *(double *)(a5 + 24);
    int v43 = *(_DWORD *)(a5 + 48);
    int v44 = *(_DWORD *)(a5 + 8);
    int v45 = *(_DWORD *)(a5 + 12);
    int v72 = 134350593;
    float64_t v73 = v41;
    __int16 v74 = 2050;
    float64_t v75 = v39;
    __int16 v76 = 2050;
    float64_t v77 = v40;
    __int16 v78 = 2049;
    float64_t v79 = v42;
    __int16 v80 = 1026;
    *(_DWORD *)uint64_t v81 = v43;
    *(_WORD *)&v81[4] = 1025;
    *(_DWORD *)&v81[6] = v44;
    LOWORD(v82) = 1025;
    *(_DWORD *)((char *)&v82 + 2) = v45;
    LODWORD(v71) = 60;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934488,  0LL,  "CLMobility::SteadinessModelHarmonic::Result,hkEndTime,%{public}.2f,likelihoodOK,%{public}.2f,likelihoodNotOK,%{pub lic}.2f,rawSteadiness,%{private}.2f,rejectionStatus,%{public}d,numValidBouts7Days,%{private}d,numValidBouts28Days,%{private}d",  &v72,  v71);
    uint64_t v47 = (uint8_t *)v46;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "SteadinessModel::Result CLMobility::SteadinessModelHarmonic::runSteadinessModel(CFAbsoluteTime, const Features &, const std::vector<BoutMetrics> &, const CLBodyMetrics &) const",  "%s\n",  v46);
    if (v47 != buf) {
      free(v47);
    }
  }

  if (qword_101934480 != -1) {
    dispatch_once(&qword_101934480, &stru_10183C850);
  }
  uint64_t v23 = (os_log_s *)qword_101934488;
  if (os_log_type_enabled((os_log_t)qword_101934488, OS_LOG_TYPE_DEFAULT))
  {
    float64_t v24 = a2->f64[1];
    float64_t v132 = a2->f64[0];
    float64_t v134 = v24;
    float64_t v25 = a2[2].f64[0];
    float64_t v26 = a2[2].f64[1];
    float64_t v138 = a2[1].f64[1];
    *(float64_t *)unint64_t v140 = v25;
    float64_t v141 = v26;
    float64_t v27 = a2[4].f64[0];
    float64_t v28 = a2[4].f64[1];
    float64_t v145 = a2[3].f64[1];
    float64_t v147 = v27;
    float64_t v149 = v28;
    float64_t v29 = a2[6].f64[0];
    float64_t v30 = a2[6].f64[1];
    float64_t v153 = a2[5].f64[1];
    float64_t v155 = v29;
    float64_t v157 = v30;
    float64_t v31 = a2[8].f64[0];
    float64_t v32 = a2[8].f64[1];
    float64_t v161 = a2[7].f64[1];
    float64_t v163 = v31;
    float64_t v165 = v32;
    float64_t v33 = a2[10].f64[0];
    float64_t v34 = a2[10].f64[1];
    float64_t v169 = a2[9].f64[1];
    float64_t v171 = v33;
    float64_t v173 = v34;
    float64_t v35 = a2[12].f64[0];
    float64_t v177 = a2[11].f64[1];
    float64_t v179 = v35;
    float64_t v36 = a2[12].f64[1];
    float64_t v181 = a2[13].f64[0];
    float64_t v37 = a2[13].f64[1];
    float64_t v38 = a2[14].f64[1];
    float64_t v185 = a2[14].f64[0];
    float64_t v187 = v38;
    float64_t v189 = v36;
    float64_t v136 = a2[1].f64[0];
    float64_t v143 = a2[3].f64[0];
    float64_t v151 = a2[5].f64[0];
    float64_t v159 = a2[7].f64[0];
    float64_t v167 = a2[9].f64[0];
    float64_t v175 = a2[11].f64[0];
    float64_t v183 = v37;
    __int16 v133 = 2049;
    __int16 v135 = 2049;
    __int16 v137 = 2049;
    __int16 v139 = 2049;
    *(_WORD *)&v140[8] = 2049;
    __int16 v142 = 2049;
    __int16 v144 = 2049;
    __int16 v146 = 2049;
    __int16 v148 = 2049;
    __int16 v150 = 2049;
    __int16 v152 = 2049;
    __int16 v154 = 2049;
    __int16 v156 = 2049;
    __int16 v158 = 2049;
    __int16 v160 = 2049;
    __int16 v162 = 2049;
    __int16 v164 = 2049;
    __int16 v166 = 2049;
    __int16 v168 = 2049;
    __int16 v170 = 2049;
    __int16 v172 = 2049;
    __int16 v174 = 2049;
    __int16 v176 = 2049;
    __int16 v178 = 2049;
    __int16 v180 = 2049;
    __int16 v182 = 2049;
    __int16 v184 = 2049;
    __int16 v186 = 2049;
    __int16 v188 = 2049;
    *(_DWORD *)std::string buf = 134290945;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "CLMobility::SteadinessModelHarmonic::Features, allBoutsStepIndexOfHarmonicityApCv,%{private}.2f,  allBoutsStepInde xOfHarmonicityApMean,%{private}.2f,allBoutsStepIndexOfHarmonicityApMedian,%{private}.2f, allBoutsStepIndexOfHarmon icityApQ5,%{private}.2f,allBoutsStepIndexOfHarmonicityApQ95,%{private}.2f, allBoutsStepIndexOfHarmonicityMlCv,%{pr ivate}.2f, allBoutsStepIndexOfHarmonicityMlMean,%{private}.2f, allBoutsStepIndexOfHarmonicityMlMedian,%{private}.2 f, allBoutsStepIndexOfHarmonicityMlQ5,%{private}.2f, allBoutsStepIndexOfHarmonicityMlQ95,%{private}.2f, allBoutsSt epIndexOfHarmonicityVtCv,%{private}.2f, allBoutsStepIndexOfHarmonicityVtMean,%{private}.2f, allBoutsStepIndexOfHar monicityVtMedian,%{private}.2f,  allBoutsStepIndexOfHarmonicityVtQ5,%{private}.2f, allBoutsStepIndexOfHarmonicityV tQ95,%{private}.2f, allBoutsSwingIndexOfHarmonicityApCv,%{private}.2f, allBoutsSwingIndexOfHarmonicityApMean,%{pri vate}.2f, allBoutsSwingIndexOfHarmonicityApMedian,%{private}.2f, allBoutsSwingIndexOfHarmonicityApQ5,%{private}.2f ,allBoutsSwingIndexOfHarmonicityApQ95,%{private}.2f, allBoutsSwingIndexOfHarmonicityMlCv,%{private}.2f,allBoutsSwi ngIndexOfHarmonicityMlMean,%{private}.2f, allBoutsSwingIndexOfHarmonicityMlMedian,%{private}.2f,allBoutsSwingIndex OfHarmonicityMlQ5,%{private}.2f, allBoutsSwingIndexOfHarmonicityMlQ95,%{private}.2f,  allBoutsSwingIndexOfHarmonic ityVtMean,%{private}.2f, allBoutsSwingIndexOfHarmonicityVtMedian,%{private}.2f, allBoutsSwingIndexOfHarmonicityVtQ 5,%{private}.2f,allBoutsSwingIndexOfHarmonicityVtQ95,%{private}.2f,allBoutsSwingIndexOfHarmonicityVtCv,%{private}.2f",  buf,  0x12Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934480 != -1) {
      dispatch_once(&qword_101934480, &stru_10183C850);
    }
    float64_t v48 = a2->f64[1];
    float64_t v73 = a2->f64[0];
    float64_t v49 = a2[1].f64[0];
    float64_t v50 = a2[1].f64[1];
    float64_t v75 = v48;
    float64_t v77 = v49;
    float64_t v51 = a2[2].f64[0];
    float64_t v52 = a2[2].f64[1];
    float64_t v79 = v50;
    *(float64_t *)uint64_t v81 = v51;
    float64_t v53 = a2[3].f64[0];
    float64_t v54 = a2[3].f64[1];
    float64_t v82 = v52;
    float64_t v84 = v53;
    float64_t v55 = a2[4].f64[0];
    float64_t v56 = a2[4].f64[1];
    float64_t v86 = v54;
    float64_t v57 = a2[6].f64[1];
    float64_t v88 = v55;
    float64_t v90 = v56;
    float64_t v98 = v57;
    float64_t v58 = a2[8].f64[0];
    float64_t v59 = a2[8].f64[1];
    float64_t v102 = a2[7].f64[1];
    float64_t v104 = v58;
    float64_t v106 = v59;
    float64_t v60 = a2[10].f64[0];
    float64_t v61 = a2[10].f64[1];
    float64_t v110 = a2[9].f64[1];
    float64_t v112 = v60;
    float64_t v114 = v61;
    float64_t v62 = a2[12].f64[0];
    float64_t v118 = a2[11].f64[1];
    float64_t v120 = v62;
    float64_t v63 = a2[12].f64[1];
    float64_t v122 = a2[13].f64[0];
    float64_t v64 = a2[13].f64[1];
    float64_t v65 = a2[14].f64[1];
    float64_t v126 = a2[14].f64[0];
    float64_t v128 = v65;
    float64_t v130 = v63;
    float64_t v66 = a2[5].f64[1];
    float64_t v92 = a2[5].f64[0];
    float64_t v94 = v66;
    float64_t v96 = a2[6].f64[0];
    float64_t v100 = a2[7].f64[0];
    float64_t v108 = a2[9].f64[0];
    float64_t v116 = a2[11].f64[0];
    float64_t v124 = v64;
    __int16 v74 = 2049;
    __int16 v76 = 2049;
    __int16 v78 = 2049;
    __int16 v80 = 2049;
    *(_WORD *)&v81[8] = 2049;
    __int16 v83 = 2049;
    __int16 v85 = 2049;
    __int16 v87 = 2049;
    __int16 v89 = 2049;
    __int16 v91 = 2049;
    __int16 v93 = 2049;
    __int16 v95 = 2049;
    __int16 v97 = 2049;
    __int16 v99 = 2049;
    __int16 v101 = 2049;
    __int16 v103 = 2049;
    __int16 v105 = 2049;
    __int16 v107 = 2049;
    __int16 v109 = 2049;
    __int16 v111 = 2049;
    __int16 v113 = 2049;
    __int16 v115 = 2049;
    __int16 v117 = 2049;
    __int16 v119 = 2049;
    __int16 v121 = 2049;
    __int16 v123 = 2049;
    __int16 v125 = 2049;
    __int16 v127 = 2049;
    __int16 v129 = 2049;
    int v72 = 134290945;
    LODWORD(v71) = 302;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934488,  0LL,  "CLMobility::SteadinessModelHarmonic::Features, allBoutsStepIndexOfHarmonicityApCv,%{private}.2f,  allBoutsStepInde xOfHarmonicityApMean,%{private}.2f,allBoutsStepIndexOfHarmonicityApMedian,%{private}.2f, allBoutsStepIndexOfHarmon icityApQ5,%{private}.2f,allBoutsStepIndexOfHarmonicityApQ95,%{private}.2f, allBoutsStepIndexOfHarmonicityMlCv,%{pr ivate}.2f, allBoutsStepIndexOfHarmonicityMlMean,%{private}.2f, allBoutsStepIndexOfHarmonicityMlMedian,%{private}.2 f, allBoutsStepIndexOfHarmonicityMlQ5,%{private}.2f, allBoutsStepIndexOfHarmonicityMlQ95,%{private}.2f, allBoutsSt epIndexOfHarmonicityVtCv,%{private}.2f, allBoutsStepIndexOfHarmonicityVtMean,%{private}.2f, allBoutsStepIndexOfHar monicityVtMedian,%{private}.2f,  allBoutsStepIndexOfHarmonicityVtQ5,%{private}.2f, allBoutsStepIndexOfHarmonicityV tQ95,%{private}.2f, allBoutsSwingIndexOfHarmonicityApCv,%{private}.2f, allBoutsSwingIndexOfHarmonicityApMean,%{pri vate}.2f, allBoutsSwingIndexOfHarmonicityApMedian,%{private}.2f, allBoutsSwingIndexOfHarmonicityApQ5,%{private}.2f ,allBoutsSwingIndexOfHarmonicityApQ95,%{private}.2f, allBoutsSwingIndexOfHarmonicityMlCv,%{private}.2f,allBoutsSwi ngIndexOfHarmonicityMlMean,%{private}.2f, allBoutsSwingIndexOfHarmonicityMlMedian,%{private}.2f,allBoutsSwingIndex OfHarmonicityMlQ5,%{private}.2f, allBoutsSwingIndexOfHarmonicityMlQ95,%{private}.2f,  allBoutsSwingIndexOfHarmonic ityVtMean,%{private}.2f, allBoutsSwingIndexOfHarmonicityVtMedian,%{private}.2f, allBoutsSwingIndexOfHarmonicityVtQ 5,%{private}.2f,allBoutsSwingIndexOfHarmonicityVtQ95,%{private}.2f,allBoutsSwingIndexOfHarmonicityVtCv,%{private}.2f",  &v72,  v71);
    double v68 = (uint8_t *)v67;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "SteadinessModel::Result CLMobility::SteadinessModelHarmonic::runSteadinessModel(CFAbsoluteTime, const Features &, const std::vector<BoutMetrics> &, const CLBodyMetrics &) const",  "%s\n",  v67);
    if (v68 != buf) {
      free(v68);
    }
  }

BOOL sub_1004CBA58(double *a1)
{
  return *a1 != -INFINITY
      && a1[1] != -INFINITY
      && a1[2] != -INFINITY
      && a1[3] != -INFINITY
      && a1[4] != -INFINITY
      && a1[5] != -INFINITY
      && a1[6] != -INFINITY
      && a1[7] != -INFINITY
      && a1[8] != -INFINITY
      && a1[9] != -INFINITY
      && a1[10] != -INFINITY
      && a1[11] != -INFINITY
      && a1[12] != -INFINITY
      && a1[13] != -INFINITY
      && a1[14] != -INFINITY
      && a1[15] != -INFINITY
      && a1[16] != -INFINITY
      && a1[17] != -INFINITY
      && a1[18] != -INFINITY
      && a1[19] != -INFINITY
      && a1[20] != -INFINITY
      && a1[21] != -INFINITY
      && a1[22] != -INFINITY
      && a1[23] != -INFINITY
      && a1[24] != -INFINITY
      && a1[25] != -INFINITY
      && a1[26] != -INFINITY
      && a1[27] != -INFINITY
      && a1[28] != -INFINITY
      && a1[29] != -INFINITY;
}

void sub_1004CBC48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  *(void *)(a2 + 8) = 0LL;
  uint64_t v4 = *a3;
  uint64_t v3 = a3[1];
  if (v3 == *a3)
  {
    int v5 = 0;
LABEL_16:
    *(_DWORD *)(a2 + 48) |= 0x20u;
    goto LABEL_17;
  }

  int v5 = 0;
  int v6 = 0;
  double v7 = *(double *)(a2 + 16);
  do
  {
    double v8 = *(double *)(v4 + 8);
    if (v8 > v7) {
      break;
    }
    if (*(_DWORD *)(v4 + 52)) {
      int v9 = 42;
    }
    else {
      int v9 = -1;
    }
    if ((v9 & *(_DWORD *)(v4 + 192)) == 0)
    {
      if (v8 > v7 + -2419200.0) {
        *(_DWORD *)(a2 + 12) = ++v5;
      }
      if (v8 > v7 + -604800.0) {
        *(_DWORD *)(a2 + 8) = ++v6;
      }
    }

    v4 += 224LL;
  }

  while (v4 != v3);
  if (v6 <= 14) {
    goto LABEL_16;
  }
LABEL_17:
  if (v5 <= 67) {
    *(_DWORD *)(a2 + 48) |= 0x10u;
  }
}

void sub_1004CBD04(uint64_t *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  int64x2_t v5 = vdupq_n_s64(0xFFF0000000000000LL);
  *(int64x2_t *)a2 = v5;
  *(int64x2_t *)(a2 + 16) = v5;
  *(int64x2_t *)(a2 + 32) = v5;
  *(int64x2_t *)(a2 + 48) = v5;
  *(int64x2_t *)(a2 + 64) = v5;
  *(int64x2_t *)(a2 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v5;
  *(int64x2_t *)(a2 + 96) = v5;
  *(int64x2_t *)(a2 + 112) = v5;
  *(int64x2_t *)(a2 + 128) = v5;
  *(int64x2_t *)(a2 + 144) = v5;
  *(int64x2_t *)(a2 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v5;
  *(int64x2_t *)(a2 + 176) = v5;
  *(int64x2_t *)(a2 + 192) = v5;
  *(int64x2_t *)(a2 + 208) = v5;
  *(int64x2_t *)(a2 + 224) = v5;
  float64_t v100 = 0LL;
  __int16 v101 = 0LL;
  uint64_t v102 = 0LL;
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(void *)std::string buf = &v100;
  if (v6 == v7)
  {
    int v11 = 0LL;
    uint64_t v10 = 0LL;
  }

  else
  {
    do
    {
      double v8 = *(double *)(v6 + 8);
      if (v8 < a3 && v8 >= a3 + -2419200.0) {
        sub_1004CC934((void ***)buf, (_OWORD *)v6);
      }
      v6 += 224LL;
    }

    while (v6 != v7);
    uint64_t v10 = (float *)v100;
    int v11 = v101;
  }

  __int128 __p = 0LL;
  float64_t v98 = 0LL;
  __int16 v99 = 0LL;
  float64_t v94 = 0LL;
  __int16 v95 = 0LL;
  float64_t v96 = 0LL;
  __int16 v91 = 0LL;
  float64_t v92 = 0LL;
  __int16 v93 = 0LL;
  float64_t v88 = 0LL;
  __int16 v89 = 0LL;
  float64_t v90 = 0LL;
  __int16 v85 = 0LL;
  float64_t v86 = 0LL;
  __int16 v87 = 0LL;
  float64_t v82 = 0LL;
  __int16 v83 = 0LL;
  for (uint64_t i = 0LL; v10 != v11; v10 += 56)
  {
    if (sub_1004CC854((uint64_t)v10))
    {
      double v12 = v10[36];
      double v13 = v98;
      if (v98 >= v99)
      {
        uint64_t v15 = (double *)__p;
        uint64_t v16 = ((char *)v98 - (_BYTE *)__p) >> 3;
        unint64_t v17 = v16 + 1;
        uint64_t v18 = (char *)v99 - (_BYTE *)__p;
        else {
          unint64_t v19 = v17;
        }
        if (v19)
        {
          int v20 = (char *)sub_1000071BC((uint64_t)&v99, v19);
          uint64_t v15 = (double *)__p;
          double v13 = v98;
        }

        else
        {
          int v20 = 0LL;
        }

        int v21 = (double *)&v20[8 * v16];
        double *v21 = v12;
        uint64_t v14 = v21 + 1;
        while (v13 != v15)
        {
          uint64_t v22 = *((void *)v13-- - 1);
          *((void *)v21-- - 1) = v22;
        }

        __int128 __p = v21;
        float64_t v98 = v14;
        __int16 v99 = (double *)&v20[8 * v19];
        if (v15) {
          operator delete(v15);
        }
      }

      else
      {
        *float64_t v98 = v12;
        uint64_t v14 = v13 + 1;
      }

      float64_t v98 = v14;
      double v23 = v10[37];
      float64_t v24 = v95;
      if (v95 >= v96)
      {
        float64_t v26 = (double *)v94;
        uint64_t v27 = ((char *)v95 - (_BYTE *)v94) >> 3;
        unint64_t v28 = v27 + 1;
        uint64_t v29 = (char *)v96 - (_BYTE *)v94;
        else {
          unint64_t v30 = v28;
        }
        if (v30)
        {
          float64_t v31 = (char *)sub_1000071BC((uint64_t)&v96, v30);
          float64_t v26 = (double *)v94;
          float64_t v24 = v95;
        }

        else
        {
          float64_t v31 = 0LL;
        }

        float64_t v32 = (double *)&v31[8 * v27];
        double *v32 = v23;
        float64_t v25 = v32 + 1;
        while (v24 != v26)
        {
          uint64_t v33 = *((void *)v24-- - 1);
          *((void *)v32-- - 1) = v33;
        }

        float64_t v94 = v32;
        __int16 v95 = v25;
        float64_t v96 = (double *)&v31[8 * v30];
        if (v26) {
          operator delete(v26);
        }
      }

      else
      {
        *__int16 v95 = v23;
        float64_t v25 = v24 + 1;
      }

      __int16 v95 = v25;
      double v34 = v10[38];
      float64_t v35 = v92;
      if (v92 >= v93)
      {
        float64_t v37 = (double *)v91;
        uint64_t v38 = ((char *)v92 - (_BYTE *)v91) >> 3;
        unint64_t v39 = v38 + 1;
        uint64_t v40 = (char *)v93 - (_BYTE *)v91;
        else {
          unint64_t v41 = v39;
        }
        if (v41)
        {
          float64_t v42 = (char *)sub_1000071BC((uint64_t)&v93, v41);
          float64_t v37 = (double *)v91;
          float64_t v35 = v92;
        }

        else
        {
          float64_t v42 = 0LL;
        }

        int v43 = (double *)&v42[8 * v38];
        double *v43 = v34;
        float64_t v36 = v43 + 1;
        while (v35 != v37)
        {
          uint64_t v44 = *((void *)v35-- - 1);
          *((void *)v43-- - 1) = v44;
        }

        __int16 v91 = v43;
        float64_t v92 = v36;
        __int16 v93 = (double *)&v42[8 * v41];
        if (v37) {
          operator delete(v37);
        }
      }

      else
      {
        double *v92 = v34;
        float64_t v36 = v35 + 1;
      }

      float64_t v92 = v36;
      double v45 = v10[39];
      unint64_t v46 = v89;
      if (v89 >= v90)
      {
        float64_t v48 = (double *)v88;
        uint64_t v49 = ((char *)v89 - (_BYTE *)v88) >> 3;
        unint64_t v50 = v49 + 1;
        uint64_t v51 = (char *)v90 - (_BYTE *)v88;
        else {
          unint64_t v52 = v50;
        }
        if (v52)
        {
          float64_t v53 = (char *)sub_1000071BC((uint64_t)&v90, v52);
          float64_t v48 = (double *)v88;
          unint64_t v46 = v89;
        }

        else
        {
          float64_t v53 = 0LL;
        }

        float64_t v54 = (double *)&v53[8 * v49];
        double *v54 = v45;
        uint64_t v47 = v54 + 1;
        while (v46 != v48)
        {
          uint64_t v55 = *((void *)v46-- - 1);
          *((void *)v54-- - 1) = v55;
        }

        float64_t v88 = v54;
        __int16 v89 = v47;
        float64_t v90 = (double *)&v53[8 * v52];
        if (v48) {
          operator delete(v48);
        }
      }

      else
      {
        double *v89 = v45;
        uint64_t v47 = v46 + 1;
      }

      __int16 v89 = v47;
      double v56 = v10[40];
      float64_t v57 = v86;
      if (v86 >= v87)
      {
        float64_t v59 = (double *)v85;
        uint64_t v60 = ((char *)v86 - (_BYTE *)v85) >> 3;
        unint64_t v61 = v60 + 1;
        uint64_t v62 = (char *)v87 - (_BYTE *)v85;
        else {
          unint64_t v63 = v61;
        }
        if (v63)
        {
          float64_t v64 = (char *)sub_1000071BC((uint64_t)&v87, v63);
          float64_t v59 = (double *)v85;
          float64_t v57 = v86;
        }

        else
        {
          float64_t v64 = 0LL;
        }

        float64_t v65 = (double *)&v64[8 * v60];
        *float64_t v65 = v56;
        float64_t v58 = v65 + 1;
        while (v57 != v59)
        {
          uint64_t v66 = *((void *)v57-- - 1);
          *((void *)v65-- - 1) = v66;
        }

        __int16 v85 = v65;
        float64_t v86 = v58;
        __int16 v87 = (double *)&v64[8 * v63];
        if (v59) {
          operator delete(v59);
        }
      }

      else
      {
        *float64_t v86 = v56;
        float64_t v58 = v57 + 1;
      }

      float64_t v86 = v58;
      double v67 = v10[41];
      double v68 = v83;
      if (v83 >= i)
      {
        uint64_t v70 = (double *)v82;
        uint64_t v71 = ((char *)v83 - (_BYTE *)v82) >> 3;
        unint64_t v72 = v71 + 1;
        uint64_t v73 = (char *)i - (_BYTE *)v82;
        else {
          unint64_t v74 = v72;
        }
        if (v74)
        {
          float64_t v75 = (char *)sub_1000071BC((uint64_t)&i, v74);
          uint64_t v70 = (double *)v82;
          double v68 = v83;
        }

        else
        {
          float64_t v75 = 0LL;
        }

        __int16 v76 = (double *)&v75[8 * v71];
        *__int16 v76 = v67;
        __int16 v69 = v76 + 1;
        while (v68 != v70)
        {
          uint64_t v77 = *((void *)v68-- - 1);
          *((void *)v76-- - 1) = v77;
        }

        float64_t v82 = v76;
        __int16 v83 = v69;
        uint64_t i = (double *)&v75[8 * v74];
        if (v70) {
          operator delete(v70);
        }
      }

      else
      {
        *__int16 v83 = v67;
        __int16 v69 = v68 + 1;
      }

      __int16 v83 = v69;
    }
  }

  if (qword_101934480 != -1) {
    dispatch_once(&qword_101934480, &stru_10183C850);
  }
  __int16 v78 = (os_log_s *)qword_101934488;
  if (os_log_type_enabled((os_log_t)qword_101934488, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134350848;
    *(double *)&uint8_t buf[4] = a3;
    __int16 v120 = 2050;
    uint64_t v121 = 0x6DB6DB6DB6DB6DB7LL * (((char *)v101 - (_BYTE *)v100) >> 5);
    __int16 v122 = 2050;
    uint64_t v123 = ((char *)v98 - (_BYTE *)__p) >> 3;
    __int16 v124 = 2050;
    uint64_t v125 = ((char *)v95 - (_BYTE *)v94) >> 3;
    __int16 v126 = 2050;
    uint64_t v127 = ((char *)v92 - (_BYTE *)v91) >> 3;
    __int16 v128 = 2050;
    uint64_t v129 = ((char *)v89 - (_BYTE *)v88) >> 3;
    __int16 v130 = 2050;
    uint64_t v131 = ((char *)v86 - (_BYTE *)v85) >> 3;
    __int16 v132 = 2050;
    uint64_t v133 = ((char *)v83 - (_BYTE *)v82) >> 3;
    _os_log_impl( (void *)&_mh_execute_header,  v78,  OS_LOG_TYPE_DEBUG,  "SteadinessModelHarmonic::extractFeatures,classificationTime,%{public}.2f,numBouts,%{public}lu,numStepBoutsStepInde xOfHarmonicityAP,%{public}lu, numStepBoutsStepIndexOfHarmonicityML,%{public}lu, numStepBoutsStepIndexOfHarmonicity VT,%{public}lu, numStepBoutsSwingIndexOfHarmonicityAP,%{public}lu, numStepBoutsSwingIndexOfHarmonicityML,%{public} lu, numStepBoutsSwingIndexOfHarmonicityVT,%{public}lu",  buf,  0x52u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934480 != -1) {
      dispatch_once(&qword_101934480, &stru_10183C850);
    }
    int v103 = 134350848;
    double v104 = a3;
    __int16 v105 = 2050;
    uint64_t v106 = 0x6DB6DB6DB6DB6DB7LL * (((char *)v101 - (_BYTE *)v100) >> 5);
    __int16 v107 = 2050;
    uint64_t v108 = ((char *)v98 - (_BYTE *)__p) >> 3;
    __int16 v109 = 2050;
    uint64_t v110 = ((char *)v95 - (_BYTE *)v94) >> 3;
    __int16 v111 = 2050;
    uint64_t v112 = ((char *)v92 - (_BYTE *)v91) >> 3;
    __int16 v113 = 2050;
    uint64_t v114 = ((char *)v89 - (_BYTE *)v88) >> 3;
    __int16 v115 = 2050;
    uint64_t v116 = ((char *)v86 - (_BYTE *)v85) >> 3;
    __int16 v117 = 2050;
    uint64_t v118 = ((char *)v83 - (_BYTE *)v82) >> 3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934488,  2LL,  "SteadinessModelHarmonic::extractFeatures,classificationTime,%{public}.2f,numBouts,%{public}lu,numStepBoutsStepInde xOfHarmonicityAP,%{public}lu, numStepBoutsStepIndexOfHarmonicityML,%{public}lu, numStepBoutsStepIndexOfHarmonicity VT,%{public}lu, numStepBoutsSwingIndexOfHarmonicityAP,%{public}lu, numStepBoutsSwingIndexOfHarmonicityML,%{public} lu, numStepBoutsSwingIndexOfHarmonicityVT,%{public}lu",  &v103,  82);
    uint64_t v81 = (char *)v80;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Features CLMobility::SteadinessModelHarmonic::extractFeatures(CFAbsoluteTime, const std::vector<BoutMetrics> &) const",  "%s\n",  v80);
    if (v81 != buf) {
      free(v81);
    }
  }

  if (__p != v98)
  {
    *(double *)a2 = sub_100CFC21C((double **)&__p);
    *(double *)(a2 + 8) = sub_100CFC1E4((double **)&__p);
    *(double *)(a2 + 16) = sub_100CFC440((uint64_t *)&__p);
    *(double *)(a2 + 24) = sub_100DEA954((uint64_t)&__p, 5);
    *(double *)(a2 + 32) = sub_100DEA954((uint64_t)&__p, 95);
  }

  if (v94 != v95)
  {
    *(double *)(a2 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = sub_100CFC21C((double **)&v94);
    *(double *)(a2 + 48) = sub_100CFC1E4((double **)&v94);
    *(double *)(a2 + 56) = sub_100CFC440((uint64_t *)&v94);
    *(double *)(a2 + 64) = sub_100DEA954((uint64_t)&v94, 5);
    *(double *)(a2 + sub_1000A56E8(v1 + 72) = sub_100DEA954((uint64_t)&v94, 95);
  }

  if (v91 != v92)
  {
    *(double *)(a2 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = sub_100CFC21C((double **)&v91);
    *(double *)(a2 + 88) = sub_100CFC1E4((double **)&v91);
    *(double *)(a2 + 96) = sub_100CFC440((uint64_t *)&v91);
    *(double *)(a2 + 104) = sub_100DEA954((uint64_t)&v91, 5);
    *(double *)(a2 + 112) = sub_100DEA954((uint64_t)&v91, 95);
  }

  if (v88 != v89)
  {
    *(double *)(a2 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = sub_100CFC21C((double **)&v88);
    *(double *)(a2 + 128) = sub_100CFC1E4((double **)&v88);
    *(double *)(a2 + 136) = sub_100CFC440((uint64_t *)&v88);
    *(double *)(a2 + 144) = sub_100DEA954((uint64_t)&v88, 5);
    *(double *)(a2 + 152) = sub_100DEA954((uint64_t)&v88, 95);
  }

  if (v85 != v86)
  {
    *(double *)(a2 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = sub_100CFC21C((double **)&v85);
    *(double *)(a2 + 168) = sub_100CFC1E4((double **)&v85);
    *(double *)(a2 + 176) = sub_100CFC440((uint64_t *)&v85);
    *(double *)(a2 + 184) = sub_100DEA954((uint64_t)&v85, 5);
    *(double *)(a2 + 192) = sub_100DEA954((uint64_t)&v85, 95);
  }

  float64_t v79 = (double *)v82;
  if (v82 != v83)
  {
    *(double *)(a2 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = sub_100CFC21C((double **)&v82);
    *(double *)(a2 + 208) = sub_100CFC1E4((double **)&v82);
    *(double *)(a2 + 216) = sub_100CFC440((uint64_t *)&v82);
    *(double *)(a2 + 224) = sub_100DEA954((uint64_t)&v82, 5);
    *(double *)(a2 + 232) = sub_100DEA954((uint64_t)&v82, 95);
    float64_t v79 = (double *)v82;
  }

  if (v79)
  {
    __int16 v83 = v79;
    operator delete(v79);
  }

  if (v85)
  {
    float64_t v86 = (double *)v85;
    operator delete(v85);
  }

  if (v88)
  {
    __int16 v89 = (double *)v88;
    operator delete(v88);
  }

  if (v91)
  {
    float64_t v92 = (double *)v91;
    operator delete(v91);
  }

  if (v94)
  {
    __int16 v95 = (double *)v94;
    operator delete(v94);
  }

  if (__p)
  {
    float64_t v98 = (double *)__p;
    operator delete(__p);
  }

  if (v100)
  {
    __int16 v101 = (float *)v100;
    operator delete(v100);
  }

void sub_1004CC798( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, void *a26, uint64_t a27, uint64_t a28, void *a29, uint64_t a30, uint64_t a31, void *a32, uint64_t a33)
{
  if (__p) {
    operator delete(__p);
  }
  if (a17) {
    operator delete(a17);
  }
  if (a20) {
    operator delete(a20);
  }
  if (a23) {
    operator delete(a23);
  }
  if (a26) {
    operator delete(a26);
  }
  if (a29) {
    operator delete(a29);
  }
  if (a32) {
    operator delete(a32);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1004CC854(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 52)) {
    int v1 = 42;
  }
  else {
    int v1 = -1;
  }
  if ((v1 & *(_DWORD *)(a1 + 192)) != 0) {
    return 0LL;
  }
  float v2 = *(float *)(a1 + 152);
  if (v2 < 0.0 || v2 > 1.0) {
    return 0LL;
  }
  float v4 = *(float *)(a1 + 164);
  return v4 >= 0.0 && v4 <= 1.0 && !sub_1004CC8E0((float *)a1);
}

void sub_1004CC8B4(id a1)
{
  qword_101934488 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Steadiness");
}

BOOL sub_1004CC8E0(float *a1)
{
  return a1[36] == 0.0 && a1[37] == 0.0 && a1[38] == 0.0 && a1[39] == 0.0 && a1[40] == 0.0 && a1[41] == 0.0;
}

void ***sub_1004CC934(void ***a1, _OWORD *a2)
{
  float v4 = *a1;
  int64x2_t v5 = (*a1)[1];
  uint64_t v6 = *a1;
  unint64_t v9 = (unint64_t)v6[2];
  uint64_t v7 = (uint64_t)(v6 + 2);
  unint64_t v8 = v9;
  if ((unint64_t)v5 >= v9)
  {
    uint64_t v21 = 0x6DB6DB6DB6DB6DB7LL * (((char *)v5 - (_BYTE *)*v4) >> 5);
    unint64_t v22 = v21 + 1;
    unint64_t v23 = 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(v8 - (void)*v4) >> 5);
    if (2 * v23 > v22) {
      unint64_t v22 = 2 * v23;
    }
    if (v23 >= 0x92492492492492LL) {
      unint64_t v24 = 0x124924924924924LL;
    }
    else {
      unint64_t v24 = v22;
    }
    if (v24) {
      float64_t v25 = (char *)sub_10001B858(v7, v24);
    }
    else {
      float64_t v25 = 0LL;
    }
    float64_t v26 = &v25[224 * v21];
    uint64_t v27 = &v25[224 * v24];
    __int128 v28 = a2[1];
    *(_OWORD *)float64_t v26 = *a2;
    *((_OWORD *)v26 + 1) = v28;
    __int128 v29 = a2[2];
    __int128 v30 = a2[3];
    __int128 v31 = a2[5];
    *((_OWORD *)v26 + 4) = a2[4];
    *((_OWORD *)v26 + 5) = v31;
    *((_OWORD *)v26 + 2) = v29;
    *((_OWORD *)v26 + 3) = v30;
    __int128 v32 = a2[6];
    __int128 v33 = a2[7];
    __int128 v34 = a2[9];
    *((_OWORD *)v26 + 8) = a2[8];
    *((_OWORD *)v26 + 9) = v34;
    *((_OWORD *)v26 + 6) = v32;
    *((_OWORD *)v26 + 7) = v33;
    __int128 v35 = a2[10];
    __int128 v36 = a2[11];
    __int128 v37 = a2[13];
    *((_OWORD *)v26 + 12) = a2[12];
    *((_OWORD *)v26 + 13) = v37;
    *((_OWORD *)v26 + 1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v35;
    *((_OWORD *)v26 + 11) = v36;
    int v20 = v26 + 224;
    unint64_t v39 = (char *)*v4;
    uint64_t v38 = (char *)v4[1];
    if (v38 != *v4)
    {
      do
      {
        __int128 v40 = *((_OWORD *)v38 - 13);
        *((_OWORD *)v26 - 14) = *((_OWORD *)v38 - 14);
        *((_OWORD *)v26 - 13) = v40;
        __int128 v41 = *((_OWORD *)v38 - 12);
        __int128 v42 = *((_OWORD *)v38 - 11);
        __int128 v43 = *((_OWORD *)v38 - 9);
        *((_OWORD *)v26 - 1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *((_OWORD *)v38 - 10);
        *((_OWORD *)v26 - 9) = v43;
        *((_OWORD *)v26 - 12) = v41;
        *((_OWORD *)v26 - 11) = v42;
        __int128 v44 = *((_OWORD *)v38 - 8);
        __int128 v45 = *((_OWORD *)v38 - 7);
        __int128 v46 = *((_OWORD *)v38 - 5);
        *((_OWORD *)v26 - 6) = *((_OWORD *)v38 - 6);
        *((_OWORD *)v26 - 5) = v46;
        *((_OWORD *)v26 - 8) = v44;
        *((_OWORD *)v26 - 7) = v45;
        __int128 v47 = *((_OWORD *)v38 - 4);
        __int128 v48 = *((_OWORD *)v38 - 3);
        __int128 v49 = *((_OWORD *)v38 - 2);
        *(_OWORD *)(v26 - 19) = *(_OWORD *)(v38 - 19);
        *((_OWORD *)v26 - 3) = v48;
        *((_OWORD *)v26 - 2) = v49;
        *((_OWORD *)v26 - 4) = v47;
        v26 -= 224;
        v38 -= 224;
      }

      while (v38 != v39);
      uint64_t v38 = (char *)*v4;
    }

    *float v4 = v26;
    v4[1] = v20;
    v4[2] = v27;
    if (v38) {
      operator delete(v38);
    }
  }

  else
  {
    __int128 v10 = a2[1];
    _OWORD *v5 = *a2;
    v5[1] = v10;
    __int128 v11 = a2[2];
    __int128 v12 = a2[3];
    __int128 v13 = a2[5];
    v5[4] = a2[4];
    v5[5] = v13;
    void v5[2] = v11;
    v5[3] = v12;
    __int128 v14 = a2[6];
    __int128 v15 = a2[7];
    __int128 v16 = a2[9];
    v5[8] = a2[8];
    v5[9] = v16;
    v5[6] = v14;
    v5[7] = v15;
    __int128 v17 = a2[10];
    __int128 v18 = a2[11];
    __int128 v19 = a2[13];
    v5[12] = a2[12];
    v5[13] = v19;
    v5[10] = v17;
    v5[11] = v18;
    int v20 = v5 + 14;
  }

  v4[1] = v20;
  return a1;
}

double sub_1004CCAFC(uint64_t a1, double *a2)
{
  if (!*(_BYTE *)(a1 + 568))
  {
    if (*(_BYTE *)a1 && !sub_1004CCD0C(a1, a2))
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      float v4 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        int v5 = *(_DWORD *)(a1 + 564);
        double v6 = *a2;
        *(_DWORD *)std::string buf = 67240448;
        int v16 = v5;
        __int16 v17 = 2050;
        double v18 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,failed to predict on go to sleep call",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_10183C870);
        }
        int v8 = *(_DWORD *)(a1 + 564);
        uint64_t v9 = *(void *)a2;
        v12[0] = 67240448;
        v12[1] = v8;
        __int16 v13 = 2050;
        uint64_t v14 = v9;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,failed to predict on go to sleep call",  v12,  18);
        __int128 v11 = (uint8_t *)v10;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void cllcf::LCFusionKalmanFilterCV::deviceEnteringSleepMode(const CFTimeInterval &)",  "%s\n",  v10);
        if (v11 != buf) {
          free(v11);
        }
      }
    }

    *(_BYTE *)(a1 + 568) = 1;
    double result = *a2;
    *(double *)(a1 + 576) = *a2;
  }

  return result;
}

void sub_1004CCD00(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

BOOL sub_1004CCD0C(uint64_t a1, double *a2)
{
  if (!*(_BYTE *)a1)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v16 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v17 = *(_DWORD *)(a1 + 564);
      double v18 = *a2;
      *(_DWORD *)std::string buf = 67240448;
      int v112 = v17;
      __int16 v113 = 2050;
      double v114 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,filter is not initialized",  buf,  0x12u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v19 = *(_DWORD *)(a1 + 564);
      double v20 = *a2;
      int v99 = 67240448;
      int v100 = v19;
      __int16 v101 = 2050;
      double v102 = v20;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,filter is not initialized",  &v99,  18);
      __int128 v15 = (uint8_t *)v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictState(const CFTimeInterval &)",  "%s\n",  v21);
      goto LABEL_19;
    }

    return result;
  }

  sub_1004CF92C(a1, a2);
  if (!*(_BYTE *)(a1 + 560))
  {
    double v22 = *a2 - *(double *)(a1 + 352);
    double v98 = v22;
    if (v22 < 0.0)
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      unint64_t v23 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        int v24 = *(_DWORD *)(a1 + 564);
        double v25 = *a2;
        *(_DWORD *)std::string buf = 67240704;
        int v112 = v24;
        __int16 v113 = 2050;
        double v114 = v25;
        __int16 v115 = 2050;
        double v116 = v22;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,predict state skipped,dT < 0,dt,%{public}.6f",  buf,  0x1Cu);
      }

      if (!sub_1002921D0(115, 2)) {
        return 1LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v26 = *(_DWORD *)(a1 + 564);
      double v27 = *a2;
      int v99 = 67240704;
      int v100 = v26;
      __int16 v101 = 2050;
      double v102 = v27;
      __int16 v103 = 2050;
      double v104 = v22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,predict state skipped,dT < 0,dt,%{public}.6f",  &v99,  28);
      __int128 v29 = (uint8_t *)v28;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictState(const CFTimeInterval &)",  "%s\n",  v28);
      goto LABEL_116;
    }

    if (v22 < 0.001)
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      __int128 v30 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        int v31 = *(_DWORD *)(a1 + 564);
        double v32 = *a2;
        *(_DWORD *)std::string buf = 67240704;
        int v112 = v31;
        __int16 v113 = 2050;
        double v114 = v32;
        __int16 v115 = 2050;
        double v116 = v22;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,predict state skipped,small dt,%{public}.6f",  buf,  0x1Cu);
      }

      if (!sub_1002921D0(115, 2)) {
        return 1LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v83 = *(_DWORD *)(a1 + 564);
      double v84 = *a2;
      int v99 = 67240704;
      int v100 = v83;
      __int16 v101 = 2050;
      double v102 = v84;
      __int16 v103 = 2050;
      double v104 = v22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,predict state skipped,small dt,%{public}.6f",  &v99,  28);
      __int128 v29 = (uint8_t *)v85;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictState(const CFTimeInterval &)",  "%s\n",  v85);
LABEL_116:
      if (v29 != buf) {
        free(v29);
      }
      return 1LL;
    }

    if (!sub_1004CFDD8(a1, &v98))
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      unint64_t v39 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
      {
        int v40 = *(_DWORD *)(a1 + 564);
        double v41 = *a2;
        *(_DWORD *)std::string buf = 67240448;
        int v112 = v40;
        __int16 v113 = 2050;
        double v114 = v41;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,predict state failed to set Q",  buf,  0x12u);
      }

      BOOL result = sub_1002921D0(115, 0);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_10183C870);
        }
        int v42 = *(_DWORD *)(a1 + 564);
        double v43 = *a2;
        int v99 = 67240448;
        int v100 = v42;
        __int16 v101 = 2050;
        double v102 = v43;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,predict state failed to set Q",  &v99,  18);
        __int128 v15 = (uint8_t *)v44;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictState(const CFTimeInterval &)",  "%s\n",  v44);
        goto LABEL_19;
      }

      return result;
    }

    if (!*(_BYTE *)(a1 + 456) || !*(_BYTE *)(a1 + 472))
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      __int128 v45 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
      {
        int v46 = *(_DWORD *)(a1 + 564);
        double v47 = *a2;
        *(_DWORD *)std::string buf = 67240448;
        int v112 = v46;
        __int16 v113 = 2050;
        double v114 = v47;
        _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,predict state failed to set element of Phi",  buf,  0x12u);
      }

      BOOL result = sub_1002921D0(115, 0);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_10183C870);
        }
        int v48 = *(_DWORD *)(a1 + 564);
        double v49 = *a2;
        int v99 = 67240448;
        int v100 = v48;
        __int16 v101 = 2050;
        double v102 = v49;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,predict state failed to set element of Phi",  &v99,  18);
        __int128 v15 = (uint8_t *)v50;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictState(const CFTimeInterval &)",  "%s\n",  v50);
        goto LABEL_19;
      }

      return result;
    }

    if (!sub_1004D01D0(a1, &v98))
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      uint64_t v51 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
      {
        int v52 = *(_DWORD *)(a1 + 564);
        double v53 = *a2;
        *(_DWORD *)std::string buf = 67240448;
        int v112 = v52;
        __int16 v113 = 2050;
        double v114 = v53;
        _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,predict state failed on error cov propagation",  buf,  0x12u);
      }

      BOOL result = sub_1002921D0(115, 0);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_10183C870);
        }
        int v54 = *(_DWORD *)(a1 + 564);
        double v55 = *a2;
        int v99 = 67240448;
        int v100 = v54;
        __int16 v101 = 2050;
        double v102 = v55;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,predict state failed on error cov propagation",  &v99,  18);
        __int128 v15 = (uint8_t *)v56;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictState(const CFTimeInterval &)",  "%s\n",  v56);
        goto LABEL_19;
      }

      return result;
    }

    if (!*(_BYTE *)(a1 + 424) || !*(_BYTE *)(a1 + 440))
    {
      double v96 = 0.0;
      double v97 = 0.0;
      if ((sub_100D2E600((double *)(a1 + 480), &v97, &v96, *(double *)(a1 + 8) * 57.2957795, *(double *)(a1 + 384)) & 1) == 0)
      {
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_10183C870);
        }
        __int16 v80 = (os_log_s *)qword_101934968;
        if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
        {
          int v81 = *(_DWORD *)(a1 + 564);
          double v82 = *a2;
          *(_DWORD *)std::string buf = 67240448;
          int v112 = v81;
          __int16 v113 = 2050;
          double v114 = v82;
          _os_log_impl( (void *)&_mh_execute_header,  v80,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,predict state calc_dNdE failed",  buf,  0x12u);
        }

        if (!sub_1002921D0(115, 0)) {
          return 0LL;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_10183C870);
        }
        int v86 = *(_DWORD *)(a1 + 564);
        double v87 = *a2;
        int v99 = 67240448;
        int v100 = v86;
        __int16 v101 = 2050;
        double v102 = v87;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,predict state calc_dNdE failed",  &v99,  18);
        __int128 v15 = (uint8_t *)v88;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictState(const CFTimeInterval &)",  "%s\n",  v88);
LABEL_19:
        if (v15 != buf) {
          free(v15);
        }
        return 0LL;
      }

      *(double *)(a1 + 416) = v96;
      *(_BYTE *)(a1 + 424) = 1;
      *(double *)(a1 + 432) = v97;
      *(_BYTE *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1;
    }

    if (*(double *)(a1 + 368) > 5.0)
    {
    }

    if (!*(_BYTE *)(a1 + 456) || !*(_BYTE *)(a1 + 472) || !*(_BYTE *)(a1 + 440)) {
      goto LABEL_126;
    }
    double v35 = *(double *)(a1 + 448);
    double v36 = *(double *)(a1 + 24);
    *(double *)v33.i64 = *(double *)(a1 + 8) + v35 * v36 / *(double *)(a1 + 432);
    v34.i64[0] = 0x400921FB54442D18LL;
    int8x16_t v94 = v34;
    if (fabs(*(double *)v33.i64) > 3.14159265)
    {
      v37.f64[0] = NAN;
      v37.f64[1] = NAN;
      double v93 = *(double *)vbslq_s8((int8x16_t)vnegq_f64(v37), v34, v33).i64;
      *(double *)v33.i64 = fmod(*(double *)v33.i64 + v93, 6.28318531) - v93;
    }

    if (*(double *)v33.i64 >= 1.57079633)
    {
      int8x16_t v38 = v94;
      *(double *)v33.i64 = *(double *)v94.i64 - *(double *)v33.i64;
    }

    else
    {
      int8x16_t v38 = v94;
    }

    *(void *)(a1 + 8) = v33.i64[0];
    if (!*(_BYTE *)(a1 + 424)) {
LABEL_126:
    }
      sub_100036CD8();
    double v57 = *(double *)(a1 + 416);
    double v58 = *(double *)(a1 + 16);
    double v59 = *(double *)(a1 + 32);
    if (v57 <= 0.0) {
      *(double *)v33.i64 = v58 + v35 * v59;
    }
    else {
      *(double *)v33.i64 = v58 + v35 * v59 / v57;
    }
    if (fabs(*(double *)v33.i64) > *(double *)v38.i64)
    {
      v60.f64[0] = NAN;
      v60.f64[1] = NAN;
      double v95 = *(double *)vbslq_s8((int8x16_t)vnegq_f64(v60), v38, v33).i64;
      *(double *)v33.i64 = fmod(*(double *)v33.i64 + v95, 6.28318531) - v95;
    }

    double v61 = *(double *)(a1 + 464);
    *(void *)(a1 + 16) = v33.i64[0];
    *(double *)(a1 + 24) = v61 * v36;
    *(double *)(a1 + 32) = v61 * v59;
    double v62 = *(double *)(a1 + 40);
    double v97 = v62 * sub_1004D0BA4((_DWORD *)(a1 + 344));
    double v63 = *(double *)(a1 + 120);
    double v96 = v63 * sub_1004D0BA4((_DWORD *)(a1 + 344));
    sub_1004D0BD0(a1 + 296, (double *)(a1 + 448), (double *)(a1 + 464), &v97, &v96);
    double v64 = *(double *)(a1 + 368);
    double v65 = v22 + *(double *)(a1 + 360);
    *(double *)(a1 + 352) = *a2;
    *(double *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v65;
    *(double *)(a1 + 368) = v22 + v64;
    if (v22 + v64 <= 600.0)
    {
      double v75 = *(double *)(a1 + 168) + *(double *)(a1 + 208);
      *(double *)(a1 + 552) = v75;
      if (v75 <= 2.25e10) {
        goto LABEL_106;
      }
      *(_BYTE *)(a1 + 56sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1;
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      __int16 v76 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        int v77 = *(_DWORD *)(a1 + 564);
        double v78 = *a2;
        double v79 = *(double *)(a1 + 552);
        *(_DWORD *)std::string buf = 67240960;
        int v112 = v77;
        __int16 v113 = 2050;
        double v114 = v78;
        __int16 v115 = 2050;
        double v116 = v79;
        __int16 v117 = 2050;
        uint64_t v118 = 0x4214F46B04000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v76,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,maximum position uncertainty growth reached,%{public}.1f,max,%{public}.1f",  buf,  0x26u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_106;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v89 = *(_DWORD *)(a1 + 564);
      double v90 = *a2;
      double v91 = *(double *)(a1 + 552);
      int v99 = 67240960;
      int v100 = v89;
      __int16 v101 = 2050;
      double v102 = v90;
      __int16 v103 = 2050;
      double v104 = v91;
      __int16 v105 = 2050;
      uint64_t v106 = 0x4214F46B04000000LL;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,maximum position uncertainty growth reached,%{public}.1f,max,%{public}.1f",  &v99,  38);
      unint64_t v74 = (uint8_t *)v92;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictState(const CFTimeInterval &)",  "%s\n",  v92);
    }

    else
    {
      *(_BYTE *)(a1 + 56sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1;
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      uint64_t v66 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        int v67 = *(_DWORD *)(a1 + 564);
        double v68 = *a2;
        double v69 = *(double *)(a1 + 368);
        *(_DWORD *)std::string buf = 67240704;
        int v112 = v67;
        __int16 v113 = 2050;
        double v114 = v68;
        __int16 v115 = 2050;
        double v116 = v69;
        _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,maximum forward predictive dead-reckoning time reached,%{public}.2f",  buf,  0x1Cu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_106;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v70 = *(_DWORD *)(a1 + 564);
      double v71 = *a2;
      double v72 = *(double *)(a1 + 368);
      int v99 = 67240704;
      int v100 = v70;
      __int16 v101 = 2050;
      double v102 = v71;
      __int16 v103 = 2050;
      double v104 = v72;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,maximum forward predictive dead-reckoning time reached,%{public}.2f",  &v99,  28);
      unint64_t v74 = (uint8_t *)v73;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictState(const CFTimeInterval &)",  "%s\n",  v73);
    }

    if (v74 != buf) {
      free(v74);
    }
LABEL_106:
    sub_1004CF290(a1, (uint64_t)"predict state success");
    return 1LL;
  }

  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_10183C870);
  }
  float v4 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(_DWORD *)(a1 + 564);
    double v6 = *a2;
    double v7 = *(double *)(a1 + 368);
    uint64_t v8 = *(void *)(a1 + 552);
    *(_DWORD *)std::string buf = 67241472;
    int v112 = v5;
    __int16 v113 = 2050;
    double v114 = v6;
    __int16 v115 = 2050;
    double v116 = v7;
    __int16 v117 = 2050;
    uint64_t v118 = 0x4082C00000000000LL;
    __int16 v119 = 2050;
    uint64_t v120 = v8;
    __int16 v121 = 2050;
    uint64_t v122 = 0x4214F46B04000000LL;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,maximum dead reckoning threshold reached,DRtime,%{public}.2f,max,%{public}.2f ,PosVar,%{public}.1f,max,%{public}.1f",  buf,  0x3Au);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v10 = *(_DWORD *)(a1 + 564);
    double v11 = *a2;
    double v12 = *(double *)(a1 + 368);
    uint64_t v13 = *(void *)(a1 + 552);
    int v99 = 67241472;
    int v100 = v10;
    __int16 v101 = 2050;
    double v102 = v11;
    __int16 v103 = 2050;
    double v104 = v12;
    __int16 v105 = 2050;
    uint64_t v106 = 0x4082C00000000000LL;
    __int16 v107 = 2050;
    uint64_t v108 = v13;
    __int16 v109 = 2050;
    uint64_t v110 = 0x4214F46B04000000LL;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,maximum dead reckoning threshold reached,DRtime,%{public}.2f,max,%{public}.2f ,PosVar,%{public}.1f,max,%{public}.1f",  &v99,  58);
    __int128 v15 = (uint8_t *)v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictState(const CFTimeInterval &)",  "%s\n",  v14);
    goto LABEL_19;
  }

  return result;
}

void sub_1004CDF74(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_1004CDF80(uint64_t a1, double *a2)
{
  if (*(_BYTE *)(a1 + 568))
  {
    double v4 = *a2;
    double v5 = *(double *)(a1 + 576);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v6 = v4 - v5;
    double v7 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *(_DWORD *)(a1 + 564);
      double v9 = *a2;
      *(_DWORD *)std::string buf = 67240704;
      int v27 = v8;
      __int16 v28 = 2050;
      double v29 = v9;
      __int16 v30 = 2050;
      double v31 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,sleep wakeup after [s],%{public}.2f",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v10 = *(_DWORD *)(a1 + 564);
      double v11 = *a2;
      int v20 = 67240704;
      int v21 = v10;
      __int16 v22 = 2050;
      double v23 = v11;
      __int16 v24 = 2050;
      double v25 = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,sleep wakeup after [s],%{public}.2f",  &v20,  28);
      uint64_t v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void cllcf::LCFusionKalmanFilterCV::deviceSleepWakeup(const CFTimeInterval &)",  "%s\n",  v12);
LABEL_19:
      if (v13 != buf) {
        free(v13);
      }
    }
  }

  else
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    uint64_t v14 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v15 = *(_DWORD *)(a1 + 564);
      double v16 = *a2;
      *(_DWORD *)std::string buf = 67240448;
      int v27 = v15;
      __int16 v28 = 2050;
      double v29 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,sleep wakeup called while state is not in sleep mode, waking up",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v17 = *(_DWORD *)(a1 + 564);
      double v18 = *a2;
      int v20 = 67240448;
      int v21 = v17;
      __int16 v22 = 2050;
      double v23 = v18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,sleep wakeup called while state is not in sleep mode, waking up",  &v20,  18);
      uint64_t v13 = (uint8_t *)v19;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void cllcf::LCFusionKalmanFilterCV::deviceSleepWakeup(const CFTimeInterval &)",  "%s\n",  v19);
      goto LABEL_19;
    }
  }

  *(_BYTE *)(a1 + 568) = 0;
  *(void *)(a1 + 576) = 0xBFF0000000000000LL;
}

void sub_1004CE2EC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_1004CE2F8(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)a1) {
    return sub_1004CE4F4(a1, a2);
  }
  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_10183C870);
  }
  double v4 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(_DWORD *)(a1 + 564);
    *(_DWORD *)std::string buf = 67240192;
    int v11 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,filter is not initialized",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v6 = *(_DWORD *)(a1 + 564);
    v9[0] = 67240192;
    v9[1] = v6;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,filter is not initialized",  v9,  8);
    int v8 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::getFilterLatestEstimate(LCFusionProviderLocation &)",  "%s\n",  v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  return 0LL;
}

void sub_1004CE4E8(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_1004CE4F4(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)a1) {
    return 0LL;
  }
  double v3 = *(double *)(a1 + 352);
  if (v3 <= 0.0) {
    return 0LL;
  }
  float64x2_t v21 = vmulq_f64(*(float64x2_t *)(a1 + 8), (float64x2_t)vdupq_n_s64(0x404CA5DC1A63C1F8uLL));
  double v5 = sqrt(*(double *)(a1 + 168) + *(double *)(a1 + 208));
  double v6 = *(double *)(a1 + 24);
  double v7 = *(double *)(a1 + 32);
  double v8 = hypot(v6, v7);
  double v9 = *(double *)(a1 + 248);
  double v10 = *(double *)(a1 + 288);
  double v11 = fmax(sqrt(v9 + v10), 0.001);
  double v12 = -1.0;
  if (v11 <= 30.0)
  {
    if (fabs(v6) > 0.005 || fabs(v7) > 0.005)
    {
      double v15 = atan2(v7, v6);
      if (v15 < 0.0 || v15 >= 6.28318531)
      {
        double v15 = fmod(v15, 6.28318531);
        if (v15 < 0.0) {
          double v15 = v15 + 6.28318531;
        }
      }

      double v13 = v15 * 57.2957795;
      *(double *)(a1 + 40sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v13;
      double v16 = v6 * v6;
      double v17 = v7 * v7;
      if (v6 * v6 < 0.000001) {
        double v16 = 0.000001;
      }
      BOOL v18 = v17 >= 0.000001 || v6 * v6 < 0.000001;
      if (v6 * v6 < 0.000001 && v17 < 0.000001) {
        double v17 = 0.000001;
      }
      if (!v18) {
        double v17 = 0.000001;
      }
      double v12 = sqrt((v9 * v17 + v10 * v16) * (1.0 / (v16 + v17) * (1.0 / (v16 + v17)))) * 57.2957795;
      if (v12 > 180.0) {
        double v12 = 180.0;
      }
    }

    else
    {
      double v13 = *(double *)(a1 + 400);
    }
  }

  else
  {
    double v13 = -1.0;
    double v8 = -1.0;
  }

  *(float64x2_t *)(a2 + 24) = v21;
  *(double *)(a2 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v5;
  *(double *)(a2 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v8;
  *(double *)(a2 + 88) = v11;
  *(double *)(a2 + 96) = v13;
  *(double *)(a2 + 104) = v12;
  uint64_t v19 = *(void *)(a1 + 536);
  *(_DWORD *)(a2 + 128) = *(_DWORD *)(v19 + 128);
  *(_DWORD *)(a2 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_DWORD *)(v19 + 120);
  *(void *)(a2 + 8) = *(void *)(a1 + 360);
  *(double *)(a2 + 16) = v3;
  if (*(_BYTE *)(a1 + 336) && *(double *)(a1 + 304) > 0.0)
  {
    *(void *)(a2 + 48) = *(void *)(a1 + 296);
    double v20 = sqrt(*(double *)(a1 + 304));
  }

  else
  {
    *(_OWORD *)(a2 + 48) = xmmword_1012EA5D0;
    double v20 = *(double *)(v19 + 56);
    *(void *)(a2 + 48) = *(void *)(v19 + 48);
  }

  *(double *)(a2 + 56) = v20;
  return 1LL;
}

uint64_t sub_1004CE72C(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(_BYTE *)a1)
  {
    *a3 = *(void *)(a1 + 352);
    return sub_1004CE4F4(a1, a2);
  }

  else
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v5 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v6 = *(_DWORD *)(a1 + 564);
      *(_DWORD *)std::string buf = 67240192;
      int v12 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,filter is not initialized",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v7 = *(_DWORD *)(a1 + 564);
      v10[0] = 67240192;
      v10[1] = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,filter is not initialized",  v10,  8);
      double v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::getFilterLatestEstimate(LCFusionProviderLocation &, CFTimeInterval &)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }

    return 0LL;
  }

void sub_1004CE924(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_1004CE930(uint64_t a1, double *a2, uint64_t *a3, _DWORD *a4)
{
  *(_DWORD *)(a1 + 344) = *a4;
  double v8 = (std::__shared_weak_count *)a3[1];
  v13[0] = *a3;
  v13[1] = (uint64_t)v8;
  if (v8)
  {
    p_shared_weak_owners = (unint64_t *)&v8->__shared_weak_owners_;
    do
      unint64_t v10 = __ldxr(p_shared_weak_owners);
    while (__stxr(v10 + 1, p_shared_weak_owners));
    int v11 = sub_1004CEAFC(a1, a2, v13);
    std::__shared_weak_count::__release_weak(v8);
    if (v11) {
      goto LABEL_5;
    }
  }

  else if ((sub_1004CEAFC(a1, a2, v13) & 1) != 0)
  {
LABEL_5:
    sub_1004CF290(a1, (uint64_t)"filter init");
    return 1LL;
  }

  return 0LL;
}

void sub_1004CE9E4(uint64_t a1)
{
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 344) = 4;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 352) = _Q0;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 40sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = _Q0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  memset_pattern16((void *)(a1 + 168), &unk_1012EE100, 0x80uLL);
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + sub_1000A56E8(v1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_BYTE *)(a1 + 336) = 0;
  *(void *)(a1 + 296) = 0LL;
  *(_OWORD *)(a1 + 304) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 32sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = xmmword_1012E0070;
  if (*(_BYTE *)(a1 + 424)) {
    *(_BYTE *)(a1 + 424) = 0;
  }
  if (*(_BYTE *)(a1 + 440)) {
    *(_BYTE *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  }
  *(void *)(a1 + 52sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0xBFF0000000000000LL;
  *(void *)(a1 + 528) = 0LL;
  __int128 v10 = 0uLL;
  sub_10005F550(a1 + 536, &v10);
  int v7 = (std::__shared_weak_count *)*((void *)&v10 + 1);
  if (*((void *)&v10 + 1))
  {
    double v8 = (unint64_t *)(*((void *)&v10 + 1) + 8LL);
    do
      unint64_t v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }

  *(void *)(a1 + 552) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 56sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *(_BYTE *)(a1 + 568) = 0;
  *(void *)(a1 + 576) = 0xBFF0000000000000LL;
}

uint64_t sub_1004CEAFC(uint64_t a1, double *a2, uint64_t *a3)
{
  uint64_t v54 = 0LL;
  double v55 = 0LL;
  int v6 = (std::__shared_weak_count *)a3[1];
  if (!v6
    || (double v55 = std::__shared_weak_count::lock(v6)) == 0LL
    || (uint64_t v7 = *a3, (v54 = v7) == 0)
    || *(double *)(v7 + 40) <= 0.0)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v27 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
    {
      int v28 = *(_DWORD *)(a1 + 564);
      double v29 = *a2;
      *(_DWORD *)std::string buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v28;
      __int16 v60 = 2050;
      double v61 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,reinitialize filter failed,null or hunc <= 0",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v48 = *(_DWORD *)(a1 + 564);
      double v49 = *a2;
      LODWORD(v56) = 67240448;
      HIDWORD(v56) = v48;
      __int16 v57 = 2050;
      double v58 = v49;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,reinitialize filter failed,null or hunc <= 0",  &v56,  18);
      uint64_t v51 = (uint8_t *)v50;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::reinitialize(const CFTimeInterval &, const std::weak_ptr<const LCFusionProviderLocation>)",  "%s\n",  v50);
      if (v51 != buf) {
        free(v51);
      }
    }

    uint64_t v19 = 0LL;
    goto LABEL_30;
  }

  sub_1000F2F30((void *)(a1 + 536), &v54);
  *(double *)(a1 + 352) = *a2;
  double v8 = (double *)v54;
  *(void *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(v54 + 8);
  if (v8[7] > 0.0)
  {
    *(void *)std::string buf = 0LL;
    unsigned int v9 = *(_DWORD *)(a1 + 344) - 1;
    double v10 = 4.0;
    if (v9 <= 9) {
      double v10 = dbl_1012EE3A8[v9];
    }
    double v56 = v10;
    sub_1004D1A80(a1 + 296, v8 + 6, v8 + 7, (double *)buf, &v56, (int *)(a1 + 344));
    double v8 = (double *)v54;
    *(void *)(a1 + 384) = *(void *)(v54 + 48);
  }

  *(double *)(a1 + 8) = v8[3] * 0.0174532925;
  *(double *)(a1 + 16) = v8[4] * 0.0174532925;
  double v11 = fmax(v8[5], 1.0);
  double v12 = v8[10];
  if (v12 >= 0.0)
  {
    double v13 = v8[11];
    if (v13 > 0.0)
    {
      double v14 = v8[12];
      if (v14 >= 0.0)
      {
        double v40 = v8[13];
        if (v40 > 0.0 && v40 < 360.0)
        {
          if (v13 >= 5.0) {
            goto LABEL_55;
          }
          int v41 = *(_DWORD *)(a1 + 344);
          if (v12 >= 15.0)
          {
            int v42 = 7;
          }

          else
          {
            if (v12 < 6.0)
            {
LABEL_55:
              *(double *)(a1 + 40sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v14;
              *(double *)(a1 + 408) = v40;
              double v43 = v8[11];
              *(_OWORD *)(a1 + sub_1004C7BE0(v1 - 256) = 0u;
              *(_OWORD *)(a1 + 2sub_1000A56E8(v1 + 72) = 0u;
              *(_OWORD *)(a1 + 224) = 0u;
              *(_OWORD *)(a1 + 24sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
              *(_OWORD *)(a1 + 192) = 0u;
              *(_OWORD *)(a1 + 208) = 0u;
              *(_OWORD *)(a1 + 176) = 0u;
              double v44 = v43 * v43 * 0.5;
              double v45 = v11 * v11 * 0.5;
              *(double *)(a1 + 168) = v45;
              *(double *)(a1 + 208) = v45;
              *(double *)(a1 + 248) = v44;
              *(double *)(a1 + 288) = v44;
              double v46 = v8[10];
              __double2 v47 = __sincos_stret(v8[12] * 0.0174532925);
              *(double *)(a1 + 24) = v46 * v47.__cosval;
              *(double *)(a1 + 32) = v47.__sinval * v8[10];
              *(double *)(a1 + 392) = v8[10];
              goto LABEL_15;
            }

            int v42 = 6;
          }

          *(_DWORD *)(a1 + 344) = v42;
          goto LABEL_55;
        }
      }
    }
  }

  unsigned int v15 = *(_DWORD *)(a1 + 344) - 1;
  double v16 = 20.0;
  if (v15 <= 9) {
    double v16 = dbl_1012EE110[v15];
  }
  *(_OWORD *)(a1 + sub_1004C7BE0(v1 - 256) = 0u;
  *(_OWORD *)(a1 + 2sub_1000A56E8(v1 + 72) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 24sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  double v17 = v16 * v16 * 0.5;
  double v18 = v11 * v11 * 0.5;
  *(double *)(a1 + 168) = v18;
  *(double *)(a1 + 208) = v18;
  *(double *)(a1 + 248) = v17;
  *(double *)(a1 + 288) = v17;
  *(void *)(a1 + 392) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
LABEL_15:
  uint64_t v52 = 0LL;
  uint64_t v53 = 0LL;
  uint64_t v19 = sub_100D2E600((double *)(a1 + 480), (double *)&v53, (double *)&v52, v8[3], *(double *)(a1 + 384));
  if ((v19 & 1) != 0)
  {
    *(void *)(a1 + 416) = v52;
    *(_BYTE *)(a1 + 424) = 1;
    *(void *)(a1 + 432) = v53;
    *(_BYTE *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1;
    *(_BYTE *)a1 = 1;
    *(void *)(a1 + 552) = 0xBFF0000000000000LL;
    *(_BYTE *)(a1 + 56sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
    *(void *)(a1 + 368) = 0LL;
    *(void *)(a1 + 376) = 0LL;
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v20 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v21 = *(_DWORD *)(a1 + 564);
      double v22 = *a2;
      *(_DWORD *)std::string buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v21;
      __int16 v60 = 2050;
      double v61 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,filter reinitialized",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v23 = *(_DWORD *)(a1 + 564);
      double v24 = *a2;
      LODWORD(v56) = 67240448;
      HIDWORD(v56) = v23;
      __int16 v57 = 2050;
      double v58 = v24;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,filter reinitialized",  &v56,  18);
      int v26 = (uint8_t *)v25;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::reinitialize(const CFTimeInterval &, const std::weak_ptr<const LCFusionProviderLocation>)",  "%s\n",  v25);
LABEL_44:
      if (v26 != buf) {
        free(v26);
      }
    }
  }

  else
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int8x16_t v34 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
    {
      int v35 = *(_DWORD *)(a1 + 564);
      double v36 = *a2;
      *(_DWORD *)std::string buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v35;
      __int16 v60 = 2050;
      double v61 = v36;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,reinitialize filter calc_dNdE failed",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v37 = *(_DWORD *)(a1 + 564);
      double v38 = *a2;
      LODWORD(v56) = 67240448;
      HIDWORD(v56) = v37;
      __int16 v57 = 2050;
      double v58 = v38;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,reinitialize filter calc_dNdE failed",  &v56,  18);
      int v26 = (uint8_t *)v39;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::reinitialize(const CFTimeInterval &, const std::weak_ptr<const LCFusionProviderLocation>)",  "%s\n",  v39);
      goto LABEL_44;
    }
  }

void sub_1004CF284(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_1004CF290(uint64_t a1, uint64_t a2)
{
  int v26 = &off_1018920B8;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v27 = _Q0;
  __int128 v30 = xmmword_1012E0070;
  __int128 v31 = xmmword_1012E0070;
  __int128 v32 = _Q0;
  __int128 v33 = _Q0;
  unint64_t v34 = 0xBFF0000000000000LL;
  int v35 = 0;
  char v36 = 0;
  int v37 = 0;
  uint64_t v9 = sub_1004CE4F4(a1, (uint64_t)&v26);
  if ((_DWORD)v9)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v10 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v11 = *(_DWORD *)(a1 + 564);
      int v12 = *(_DWORD *)(a1 + 528);
      uint64_t v13 = *(void *)(a1 + 368);
      int v14 = *(_DWORD *)(a1 + 344);
      int v15 = *(_DWORD *)(a1 + 348);
      int v16 = *(unsigned __int8 *)(a1 + 560);
      *(_DWORD *)std::string buf = 67244803;
      int v76 = v11;
      __int16 v77 = 2050;
      uint64_t v78 = v27;
      __int16 v79 = 2050;
      uint64_t v80 = *((void *)&v27 + 1);
      __int16 v81 = 1026;
      int v82 = v37;
      __int16 v83 = 1026;
      int v84 = v12;
      __int16 v85 = 2049;
      uint64_t v86 = v28;
      __int16 v87 = 2049;
      uint64_t v88 = v29;
      __int16 v89 = 2049;
      uint64_t v90 = *((void *)&v30 + 1);
      __int16 v91 = 2050;
      uint64_t v92 = v32;
      __int16 v93 = 2050;
      uint64_t v94 = v33;
      __int16 v95 = 2050;
      uint64_t v96 = v30;
      __int16 v97 = 2050;
      uint64_t v98 = v31;
      __int16 v99 = 2050;
      uint64_t v100 = *((void *)&v32 + 1);
      __int16 v101 = 2050;
      uint64_t v102 = *((void *)&v33 + 1);
      __int16 v103 = 2050;
      uint64_t v104 = v13;
      __int16 v105 = 1026;
      int v106 = v14;
      __int16 v107 = 1026;
      int v108 = v15;
      __int16 v109 = 1026;
      int v110 = v16;
      __int16 v111 = 2082;
      uint64_t v112 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "KFCV:FilterStateLog,%{public}d,%{public}.3f,%{public}.3f,%{public}d,%{public}d,%{private}.7f,%{private}.7f,%{pri vate}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.2f,%{public}d,% {public}d,%{public}d,%{public}s",  buf,  0xA8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v18 = *(_DWORD *)(a1 + 564);
      int v19 = *(_DWORD *)(a1 + 528);
      uint64_t v20 = *(void *)(a1 + 368);
      int v21 = *(_DWORD *)(a1 + 344);
      int v22 = *(_DWORD *)(a1 + 348);
      int v23 = *(unsigned __int8 *)(a1 + 560);
      v38[0] = 67244803;
      v38[1] = v18;
      __int16 v39 = 2050;
      uint64_t v40 = v27;
      __int16 v41 = 2050;
      uint64_t v42 = *((void *)&v27 + 1);
      __int16 v43 = 1026;
      int v44 = v37;
      __int16 v45 = 1026;
      int v46 = v19;
      __int16 v47 = 2049;
      uint64_t v48 = v28;
      __int16 v49 = 2049;
      uint64_t v50 = v29;
      __int16 v51 = 2049;
      uint64_t v52 = *((void *)&v30 + 1);
      __int16 v53 = 2050;
      uint64_t v54 = v32;
      __int16 v55 = 2050;
      uint64_t v56 = v33;
      __int16 v57 = 2050;
      uint64_t v58 = v30;
      __int16 v59 = 2050;
      uint64_t v60 = v31;
      __int16 v61 = 2050;
      uint64_t v62 = *((void *)&v32 + 1);
      __int16 v63 = 2050;
      uint64_t v64 = *((void *)&v33 + 1);
      __int16 v65 = 2050;
      uint64_t v66 = v20;
      __int16 v67 = 1026;
      int v68 = v21;
      __int16 v69 = 1026;
      int v70 = v22;
      __int16 v71 = 1026;
      int v72 = v23;
      __int16 v73 = 2082;
      uint64_t v74 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:FilterStateLog,%{public}d,%{public}.3f,%{public}.3f,%{public}d,%{public}d,%{private}.7f,%{private}.7f,%{pri vate}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.1f,%{public}.2f,%{public}d,% {public}d,%{public}d,%{public}s",  v38,  168);
      double v25 = (uint8_t *)v24;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::debugPrintFilterState(const char *)",  "%s\n",  v24);
      if (v25 != buf) {
        free(v25);
      }
    }
  }

  return v9;
}

void sub_1004CF650(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

BOOL sub_1004CF65C(uint64_t a1, double *a2, _DWORD *a3)
{
  if (!*(_BYTE *)a1)
  {
    *(_DWORD *)(a1 + 344) = *a3;
    return 1LL;
  }

  if ((*a3 - 2) >= 9 && *a3 != 0)
  {
    sub_1004CFB44(a1, a2, -1.0);
    int v20 = *a3;
LABEL_24:
    *(_DWORD *)(a1 + 344) = v20;
    sub_1004CF290(a1, (uint64_t)"DynamicsMode-based propagation and update");
    return 1LL;
  }

  if (sub_1004CCD0C(a1, a2))
  {
    int v20 = *a3;
    int v7 = *a3 - 1;
    double v8 = 20.0;
    double v9 = v8 * v8 * 0.5;
    if (*(double *)(a1 + 248) > v9 || *(double *)(a1 + 288) > v9)
    {
      uint64_t v10 = *(void *)(a1 + 176);
      uint64_t v11 = *(void *)(a1 + 208);
      *(_OWORD *)(a1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
      *(_OWORD *)(a1 + 248) = 0u;
      *(_OWORD *)(a1 + 184) = 0u;
      *(_OWORD *)(a1 + 216) = 0u;
      *(_OWORD *)(a1 + 232) = 0u;
      *(void *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
      *(_OWORD *)(a1 + 264) = 0u;
      *(double *)(a1 + 248) = v9;
      *(double *)(a1 + 288) = v9;
      *(void *)(a1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v10;
      *(void *)(a1 + 208) = v11;
    }

    goto LABEL_24;
  }

  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_10183C870);
  }
  int v12 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
  {
    int v13 = *(_DWORD *)(a1 + 564);
    double v14 = *a2;
    *(_DWORD *)std::string buf = 67240448;
    int v25 = v13;
    __int16 v26 = 2050;
    double v27 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,DynamicsMode-based prediction failed",  buf,  0x12u);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v16 = *(_DWORD *)(a1 + 564);
    double v17 = *a2;
    v21[0] = 67240448;
    v21[1] = v16;
    __int16 v22 = 2050;
    double v23 = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,DynamicsMode-based prediction failed",  v21,  18);
    int v19 = (uint8_t *)v18;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::predictOnDynamicsModeUpdate(const CFTimeInterval &, const LCFusionDynamicsMode &)",  "%s\n",  v18);
    if (v19 != buf) {
      free(v19);
    }
    return 0LL;
  }

  return result;
}

void sub_1004CF920(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_1004CF92C(uint64_t a1, double *a2)
{
  if (*(_BYTE *)(a1 + 568))
  {
    double v4 = *a2;
    double v5 = *(double *)(a1 + 576);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v6 = v4 - v5;
    int v7 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *(_DWORD *)(a1 + 564);
      double v9 = *a2;
      *(_DWORD *)std::string buf = 67240704;
      int v20 = v8;
      __int16 v21 = 2050;
      double v22 = v9;
      __int16 v23 = 2050;
      double v24 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,called while state is in sleep mode,%{public}.2f,waking up",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v10 = *(_DWORD *)(a1 + 564);
      double v11 = *a2;
      v14[0] = 67240704;
      v14[1] = v10;
      __int16 v15 = 2050;
      double v16 = v11;
      __int16 v17 = 2050;
      double v18 = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,called while state is in sleep mode,%{public}.2f,waking up",  v14,  28);
      int v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void cllcf::LCFusionKalmanFilterCV::checkAndUpdateSleepState(const CFTimeInterval &)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    *(_BYTE *)(a1 + 568) = 0;
    *(void *)(a1 + 576) = 0xBFF0000000000000LL;
  }

void sub_1004CFB38(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

BOOL sub_1004CFB44(uint64_t a1, double *a2, double a3)
{
  double v5 = *a2;
  double v6 = *(double *)(a1 + 352);
  if (a3 < 0.0 || v5 >= v6)
  {
LABEL_14:
    *(double *)std::string buf = v5;
    *(_OWORD *)double v22 = xmmword_1012EE0E0;
    *(_OWORD *)&v22[16] = xmmword_1012EE0E0;
    BOOL v11 = sub_1004D20BC(a1, (double *)buf);
    if (*(_BYTE *)(a1 + 336))
    {
      double v17 = v5;
      *(_OWORD *)double v18 = xmmword_1012EE0F0;
      return v11 & sub_1004D3580(a1, &v17);
    }

    return v11;
  }

  if (v6 - v5 <= a3)
  {
    double v5 = v6 + 0.001;
    goto LABEL_14;
  }

  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_10183C870);
  }
  int v8 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
  {
    int v9 = *(_DWORD *)(a1 + 564);
    double v10 = *(double *)(a1 + 352);
    *(_DWORD *)std::string buf = 67240960;
    *(_DWORD *)&uint8_t buf[4] = v9;
    *(_WORD *)double v22 = 2050;
    *(double *)&v22[2] = v10;
    *(_WORD *)&v22[10] = 2050;
    *(double *)&v22[12] = v10 - v5;
    *(_WORD *)&v22[20] = 2050;
    *(double *)&v22[22] = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,time-lagged zupt is ignored,filter mct,%{public}.3f,zupt timelag,%{public}.3f,tolerance,%{public}.3f",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v13 = *(_DWORD *)(a1 + 564);
    double v14 = *(double *)(a1 + 352);
    LODWORD(v17) = 67240960;
    HIDWORD(v17) = v13;
    *(_WORD *)double v18 = 2050;
    *(double *)&void v18[2] = v14;
    *(_WORD *)&v18[10] = 2050;
    *(double *)&v18[12] = v14 - v5;
    __int16 v19 = 2050;
    double v20 = a3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,time-lagged zupt is ignored,filter mct,%{public}.3f,zupt timelag,%{public}.3f,tolerance,%{public}.3f",  &v17,  38);
    double v16 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::zupt(const CFTimeInterval &, const double)",  "%s\n",  v15);
    if (v16 != buf) {
      free(v16);
    }
  }

  return 0LL;
}

void sub_1004CFDCC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

BOOL sub_1004CFDD8(uint64_t a1, double *a2)
{
  double v3 = *a2;
  if (*a2 >= 0.0)
  {
    int v4 = *(_DWORD *)(a1 + 348);
    if (v4 == 2)
    {
      int v17 = *(_DWORD *)(a1 + 344) - 1;
      if (v17 > 9)
      {
        double v19 = 12.5;
        double v18 = 0.01;
      }

      else
      {
        double v18 = dbl_1012EE1B0[v17];
        double v19 = dbl_1012EE200[v17];
      }

      double v22 = exp(-(v18 * v3));
      double v24 = exp(v3 * (v18 * -2.0));
      double v25 = 1.0 - v22;
      double v26 = 1.0 - v24;
      if (1.0 - v22 < 0.0
        || ((unint64_t v27 = COERCE__INT64(fabs(1.0 - v22)) - 1,
             (unint64_t)(COERCE__INT64(fabs(1.0 - v22)) - 0x10000000000000LL) >> 53 >= 0x3FF)
          ? (BOOL v28 = v27 >= 0xFFFFFFFFFFFFFLL)
          : (BOOL v28 = 0),
            v28 ? (BOOL v29 = *(void *)&v25 == 0LL) : (BOOL v29 = 1),
            !v29))
      {
        double v25 = 0.0;
      }

      double v30 = v18 * v18;
      double v31 = v18 + v18;
      if (v26 < 0.0
        || (((*(void *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000LL) >> 53 >= 0x3FF
          ? (BOOL v32 = (*(void *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) - 1 >= 0xFFFFFFFFFFFFFLL)
          : (BOOL v32 = 0),
            v32 ? (BOOL v33 = *(void *)&v26 == 0LL) : (BOOL v33 = 1),
            !v33))
      {
        double v26 = 0.0;
      }

      double v34 = v19 / v30;
      double v9 = v19 / v30 * (v3 + -2.0 / v18 * v25 + 1.0 / v31 * v26);
      double v8 = v34 * (v25 + v26 * -0.5);
      double v7 = v19 / v31 * v26;
      double v23 = 1.0 / v18 * v25;
    }

    else
    {
      double v5 = v3 * v3;
      double v6 = v3 * (v3 * v3);
      if (v4 == 1)
      {
        uint64_t v20 = *(int *)(a1 + 344);
        double v21 = 0.0;
        double v9 = v5 * v5 * v21 * 0.25;
        double v8 = v6 * v21 * 0.5;
        double v7 = v5 * v21;
      }

      else
      {
        double v7 = 0.0;
        double v8 = 0.0;
        double v9 = 0.0;
        if (v4)
        {
LABEL_45:
          *(_OWORD *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
          *(_OWORD *)(a1 + 96) = 0u;
          *(_OWORD *)(a1 + 128) = 0u;
          *(_OWORD *)(a1 + 144) = 0u;
          *(_OWORD *)(a1 + 112) = 0u;
          *(_OWORD *)(a1 + 48) = 0u;
          *(_OWORD *)(a1 + 64) = 0u;
          *(double *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v9;
          *(double *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v9;
          *(double *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v7;
          *(double *)(a1 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v7;
          *(double *)(a1 + 56) = v8;
          *(double *)(a1 + 96) = v8;
          *(double *)(a1 + 104) = v8;
          *(double *)(a1 + 144) = v8;
          return v3 >= 0.0;
        }

        int v10 = *(_DWORD *)(a1 + 344) - 1;
        else {
          double v11 = dbl_1012EE160[v10];
        }
        double v9 = v6 * v11 * 0.333333333;
        double v8 = v5 * v11 * 0.5;
        double v7 = v3 * v11;
      }

      double v22 = 1.0;
      double v23 = *a2;
    }

    *(double *)(a1 + 448) = v23;
    *(_BYTE *)(a1 + 456) = 1;
    *(double *)(a1 + 464) = v22;
    *(_BYTE *)(a1 + 4sub_1000A56E8(v1 + 72) = 1;
    goto LABEL_45;
  }

  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_10183C870);
  }
  int v12 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
  {
    int v13 = *(_DWORD *)(a1 + 564);
    *(_DWORD *)std::string buf = 67240192;
    int v38 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,#Error,set Q failed,dT < 0",  buf,  8u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v14 = *(_DWORD *)(a1 + 564);
    v36[0] = 67240192;
    v36[1] = v14;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,#Error,set Q failed,dT < 0",  v36,  8);
    double v16 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::setProcessNoise(const double &)",  "%s\n",  v15);
    if (v16 != buf) {
      free(v16);
    }
  }

  return v3 >= 0.0;
}

void sub_1004D01C4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

BOOL sub_1004D01D0(uint64_t a1, double *a2)
{
  if (*a2 >= 0.0)
  {
    if (*(_BYTE *)(a1 + 456) && *(_BYTE *)(a1 + 472))
    {
      uint64_t v9 = 0LL;
      double v10 = *(double *)(a1 + 448);
      double v11 = *(double *)(a1 + 464);
      double v12 = *(double *)(a1 + 184);
      double v13 = *(double *)(a1 + 192);
      double v14 = *(double *)(a1 + 208);
      double v15 = *(double *)(a1 + 216);
      double v16 = *(double *)(a1 + 224);
      double v17 = *(double *)(a1 + 248);
      double v18 = *(double *)(a1 + 256);
      double v19 = *(double *)(a1 + 288);
      double v20 = *(double *)(a1 + 176) + v10 * v15 + v10 * v13 + v10 * v10 * v18;
      *(double *)std::string buf = *(double *)(a1 + 168) + v10 * v12 * 2.0 + v10 * v10 * v17;
      double v30 = v20;
      double v21 = v10 * v11 * v17 + v11 * v12;
      double v22 = v10 * v11 * v18;
      double v31 = v21;
      double v32 = v22 + v11 * v13;
      double v35 = v22 + v11 * v15;
      double v36 = v10 * v11 * v19 + v11 * v16;
      double v39 = v11 * v11 * v17;
      double v40 = v11 * v11 * v18;
      double v33 = v20;
      double v34 = v14 + v10 * v16 * 2.0 + v10 * v10 * v19;
      double v37 = v21;
      double v38 = v35;
      double v41 = v32;
      double v42 = v36;
      double v43 = v40;
      double v44 = v11 * v11 * v19;
      do
      {
        *(float64x2_t *)(a1 + v9 + 168) = vaddq_f64(*(float64x2_t *)&buf[v9], *(float64x2_t *)(a1 + v9 + 40));
        v9 += 16LL;
      }

      while (v9 != 128);
      return 1LL;
    }

    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v23 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
    {
      int v24 = *(_DWORD *)(a1 + 564);
      *(_DWORD *)std::string buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,#Error,P propagation,elements of Phi not set",  buf,  8u);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v25 = *(_DWORD *)(a1 + 564);
      int v27 = 67240192;
      int v28 = v25;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,#Error,P propagation,elements of Phi not set",  &v27,  8);
      double v8 = (uint8_t *)v26;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::propagateErrorCovMat(const double &)",  "%s\n",  v26);
      goto LABEL_24;
    }
  }

  else
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v3 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
    {
      int v4 = *(_DWORD *)(a1 + 564);
      *(_DWORD *)std::string buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,#Error,P propagation failed,dT < 0",  buf,  8u);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v6 = *(_DWORD *)(a1 + 564);
      int v27 = 67240192;
      int v28 = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,#Error,P propagation failed,dT < 0",  &v27,  8);
      double v8 = (uint8_t *)v7;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::propagateErrorCovMat(const double &)",  "%s\n",  v7);
LABEL_24:
      if (v8 != buf) {
        free(v8);
      }
      return 0LL;
    }
  }

  return result;
}

void sub_1004D05AC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_1004D05B8(uint64_t a1)
{
  double v3 = *(double *)(a1 + 24);
  double v2 = *(double *)(a1 + 32);
  double v4 = hypot(v3, v2);
  if (v4 >= 0.001)
  {
    double v5 = *(double *)(a1 + 368);
    double v6 = 0.0;
    if (v5 > 5.0)
    {
      double v7 = 1.0;
      double v8 = 1.0 - (v5 + -5.0) * (v5 + -5.0) / ((v5 + 5.0) * (v5 + 5.0));
      if (v8 <= 1.0) {
        double v9 = 1.0 - (v5 + -5.0) * (v5 + -5.0) / ((v5 + 5.0) * (v5 + 5.0));
      }
      else {
        double v9 = 1.0;
      }
      if (v8 >= 0.0) {
        double v10 = v9;
      }
      else {
        double v10 = 0.0;
      }
      double v11 = *(double *)(a1 + 376);
      if (v11 > 0.0)
      {
        double v12 = 1.0 - (v11 + -5.0) * (v11 + -5.0) / ((v11 + 5.0) * (v11 + 5.0));
        if (v12 <= 1.0) {
          double v7 = 1.0 - (v11 + -5.0) * (v11 + -5.0) / ((v11 + 5.0) * (v11 + 5.0));
        }
        if (v12 < 0.0) {
          double v7 = 0.0;
        }
        if (v7 != 0.0) {
          double v10 = v10 / v7;
        }
      }

      double v13 = v10 * v10;
      *(double *)(a1 + 376) = v5;
      *(double *)(a1 + 24) = v3 * v13;
      *(double *)(a1 + 32) = v2 * v13;
      double v6 = *(double *)(a1 + 392) - v4 * v13;
    }

    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v14 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v15 = *(_DWORD *)(a1 + 564);
      double v16 = *(double *)(a1 + 392);
      *(_DWORD *)std::string buf = 67240960;
      int v32 = v15;
      __int16 v33 = 2050;
      double v34 = v16;
      __int16 v35 = 2050;
      double v36 = v16 - v6;
      __int16 v37 = 2050;
      double v38 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,starting speed,%{public}.2f,current speed,%{public}.2f,total speed decay,%{public}.2f",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v20 = *(_DWORD *)(a1 + 564);
      double v21 = *(double *)(a1 + 392);
      v24[0] = 67240960;
      v24[1] = v20;
      __int16 v25 = 2050;
      double v26 = v21;
      __int16 v27 = 2050;
      double v28 = v21 - v6;
      __int16 v29 = 2050;
      double v30 = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,starting speed,%{public}.2f,current speed,%{public}.2f,total speed decay,%{public}.2f",  v24,  38);
      double v23 = (uint8_t *)v22;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void cllcf::LCFusionKalmanFilterCV::decaySpeed()", "%s\n", v22);
      if (v23 != buf) {
        free(v23);
      }
    }

    uint64_t v17 = *(int *)(a1 + 344);
    double v18 = 0.0;
    if (v4 * v4 > v18)
    {
      double v19 = v6 * v6 * 0.125;
      *(double *)(a1 + 288) = v19 + *(double *)(a1 + 288);
      *(double *)(a1 + 248) = v19 + *(double *)(a1 + 248);
    }
  }

void sub_1004D08DC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_1004D08E8(uint64_t a1, double *a2, int *a3)
{
  if (*(_BYTE *)(a1 + 40))
  {
    double v4 = *(double *)(a1 + 16);
    if (fabs(v4) >= 0.001)
    {
      double v6 = 0.0;
      if (*a2 > 5.0)
      {
        double v7 = 1.0;
        double v8 = 1.0 - (*a2 + -5.0) / (*a2 + 5.0);
        if (v8 <= 1.0) {
          double v7 = 1.0 - (*a2 + -5.0) / (*a2 + 5.0);
        }
        BOOL v9 = v8 < 0.0;
        double v10 = 0.0;
        if (!v9) {
          double v10 = v7;
        }
        double v6 = *(double *)(a1 + 32) - v4 * v10;
        *(double *)(a1 + 16) = v10 * v4;
      }

      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      double v11 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        uint64_t v13 = *(void *)(a1 + 16);
        *(_DWORD *)std::string buf = 134349568;
        uint64_t v27 = v12;
        __int16 v28 = 2050;
        uint64_t v29 = v13;
        __int16 v30 = 2050;
        double v31 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "KFCV:,starting altitudeRate,%{public}.2f,current altitudeRate,%{public}.2f,total altitudeRate decay,%{public}.2f",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_10183C870);
        }
        uint64_t v16 = *(void *)(a1 + 32);
        uint64_t v17 = *(void *)(a1 + 16);
        int v20 = 134349568;
        uint64_t v21 = v16;
        __int16 v22 = 2050;
        uint64_t v23 = v17;
        __int16 v24 = 2050;
        double v25 = v6;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,starting altitudeRate,%{public}.2f,current altitudeRate,%{public}.2f,total altitudeRate decay,%{public}.2f",  &v20,  32);
        double v19 = (uint8_t *)v18;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::decayAltitudeRate(const double &, const LCFusi onDynamicsMode &)",  "%s\n",  v18);
        if (v19 != buf) {
          free(v19);
        }
      }

      uint64_t v14 = *a3;
      double v15 = 0.0;
    }
  }

void sub_1004D0B98(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

double sub_1004D0BA4(_DWORD *a1)
{
  int v1 = *a1 - 1;
  else {
    return dbl_1012EE300[v1];
  }
}

BOOL sub_1004D0BD0(uint64_t a1, double *a2, double *a3, double *a4, double *a5)
{
  if (!*(_BYTE *)(a1 + 40)) {
    return 0LL;
  }
  double v6 = *(double *)(a1 + 8);
  if (v6 > 0.0)
  {
    double v7 = *(double *)(a1 + 24);
    if (v7 > 0.0)
    {
      double v8 = *(double *)(a1 + 16);
      *(double *)a1 = *(double *)a1 + *a2 * v8;
      *(double *)(a1 + 16) = v8 * *a3;
      *(double *)(a1 + 8) = v6 + *a4;
      *(double *)(a1 + 24) = v7 + *a5;
      return 1LL;
    }
  }

  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_10183C870);
  }
  double v10 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
  {
    int v11 = *(unsigned __int8 *)(a1 + 40);
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 24);
    *(_DWORD *)std::string buf = 67240704;
    int v25 = v11;
    __int16 v26 = 2050;
    uint64_t v27 = v12;
    __int16 v28 = 2050;
    uint64_t v29 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "KFCV:,#Error,propagateAltitude() failed,initialized,%{public}d,altVar,%{public}.2f,altRateVar,%{public}.2f",  buf,  0x1Cu);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v14 = *(unsigned __int8 *)(a1 + 40);
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = *(void *)(a1 + 24);
    v19[0] = 67240704;
    v19[1] = v14;
    __int16 v20 = 2050;
    uint64_t v21 = v15;
    __int16 v22 = 2050;
    uint64_t v23 = v16;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,#Error,propagateAltitude() failed,initialized,%{public}d,altVar,%{public}.2f,altRateVar,%{public}.2f",  v19,  28);
    double v18 = (uint8_t *)v17;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::propagateAltitude(const double &, const double &, const double &, const double &)",  "%s\n",  v17);
    if (v18 != buf) {
      free(v18);
    }
    return 0LL;
  }

  return result;
}

void sub_1004D0E18(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_1004D0E24(uint64_t a1, double *a2, uint64_t *a3, uint64_t a4)
{
  int v10 = *(_DWORD *)(a1 + 344);
  double v4 = (std::__shared_weak_count *)a3[1];
  v9[0] = *a3;
  v9[1] = (uint64_t)v4;
  if (!v4) {
    return sub_1004D0EA0(a1, a2, &v10, v9, a4);
  }
  p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
  do
    unint64_t v6 = __ldxr(p_shared_weak_owners);
  while (__stxr(v6 + 1, p_shared_weak_owners));
  uint64_t v7 = sub_1004D0EA0(a1, a2, &v10, v9, a4);
  std::__shared_weak_count::__release_weak(v4);
  return v7;
}

uint64_t sub_1004D0EA0(uint64_t a1, double *a2, int *a3, uint64_t *a4, uint64_t a5)
{
  int v10 = (std::__shared_weak_count *)a4[1];
  if (v10)
  {
    int v11 = std::__shared_weak_count::lock(v10);
    if (v11)
    {
      uint64_t v12 = *a4;
      if (*a4)
      {
        if (*(double *)(v12 + 40) > 0.0)
        {
          double v13 = *a2 - *(double *)(v12 + 16);
          if (v13 < 0.0)
          {
            if (qword_101934960 != -1) {
              dispatch_once(&qword_101934960, &stru_10183C870);
            }
            int v14 = (os_log_s *)qword_101934968;
            if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
            {
              int v15 = *(_DWORD *)(a1 + 564);
              double v16 = *a2;
              *(_DWORD *)std::string buf = 67240704;
              int v108 = v15;
              __int16 v109 = 2050;
              double v110 = v16;
              __int16 v111 = 2050;
              double v112 = v13;
              _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location skipped,dT <= 0,dt,%{public}.7f",  buf,  0x1Cu);
            }

            if (!sub_1002921D0(115, 2)) {
              goto LABEL_32;
            }
            bzero(buf, 0x65CuLL);
            if (qword_101934960 != -1) {
              dispatch_once(&qword_101934960, &stru_10183C870);
            }
            int v17 = *(_DWORD *)(a1 + 564);
            double v18 = *a2;
            __dst[0] = 67240704;
            __dst[1] = v17;
            LOWORD(__dst[2]) = 2050;
            *(double *)((char *)&__dst[2] + 2) = v18;
            HIWORD(__dst[4]) = 2050;
            *(double *)&__dst[5] = v13;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location skipped,dT <= 0,dt,%{public}.7f",  __dst,  28);
            __int16 v20 = (uint8_t *)v19;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::propagateLocation(const CFTimeInterval &, const LCFusionDynamicsMode, const std::weak_ptr<const LCFusionProviderLocation>, LCFusionProviderLocation &)",  "%s\n",  v19);
LABEL_76:
            if (v20 != buf) {
              free(v20);
            }
LABEL_32:
            __int128 v31 = *(_OWORD *)(v12 + 8);
            __int128 v32 = *(_OWORD *)(v12 + 24);
            __int128 v33 = *(_OWORD *)(v12 + 40);
            *(_OWORD *)(a5 + 56) = *(_OWORD *)(v12 + 56);
            *(_OWORD *)(a5 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v33;
            *(_OWORD *)(a5 + 24) = v32;
            *(_OWORD *)(a5 + 8) = v31;
            __int128 v34 = *(_OWORD *)(v12 + 72);
            __int128 v35 = *(_OWORD *)(v12 + 88);
            __int128 v36 = *(_OWORD *)(v12 + 104);
            *(_OWORD *)(a5 + 116) = *(_OWORD *)(v12 + 116);
            *(_OWORD *)(a5 + 104) = v36;
            *(_OWORD *)(a5 + 88) = v35;
            *(_OWORD *)(a5 + sub_1000A56E8(v1 + 72) = v34;
            uint64_t v24 = 1LL;
LABEL_21:
            p_shared_owners = (unint64_t *)&v11->__shared_owners_;
            do
              unint64_t v26 = __ldaxr(p_shared_owners);
            while (__stlxr(v26 - 1, p_shared_owners));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }

            return v24;
          }

          if (v13 < 0.001)
          {
            if (qword_101934960 != -1) {
              dispatch_once(&qword_101934960, &stru_10183C870);
            }
            __int16 v28 = (os_log_s *)qword_101934968;
            if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
            {
              int v29 = *(_DWORD *)(a1 + 564);
              double v30 = *a2;
              *(_DWORD *)std::string buf = 67240704;
              int v108 = v29;
              __int16 v109 = 2050;
              double v110 = v30;
              __int16 v111 = 2050;
              double v112 = v13;
              _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate state skipped,small dt,%{public}.7f",  buf,  0x1Cu);
            }

            if (!sub_1002921D0(115, 2)) {
              goto LABEL_32;
            }
            bzero(buf, 0x65CuLL);
            if (qword_101934960 != -1) {
              dispatch_once(&qword_101934960, &stru_10183C870);
            }
            int v78 = *(_DWORD *)(a1 + 564);
            double v79 = *a2;
            __dst[0] = 67240704;
            __dst[1] = v78;
            LOWORD(__dst[2]) = 2050;
            *(double *)((char *)&__dst[2] + 2) = v79;
            HIWORD(__dst[4]) = 2050;
            *(double *)&__dst[5] = v13;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate state skipped,small dt,%{public}.7f",  __dst,  28);
            __int16 v20 = (uint8_t *)v80;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::propagateLocation(const CFTimeInterval &, const LCFusionDynamicsMode, const std::weak_ptr<const LCFusionProviderLocation>, LCFusionProviderLocation &)",  "%s\n",  v80);
            goto LABEL_76;
          }

          memcpy(__dst, (const void *)a1, 0x151uLL);
          int v91 = *(_DWORD *)(a1 + 344);
          __int128 v37 = *(_OWORD *)(a1 + 492);
          __int128 v100 = *(_OWORD *)(a1 + 476);
          __int128 v101 = v37;
          *(_OWORD *)uint64_t v102 = *(_OWORD *)(a1 + 508);
          *(_OWORD *)&v102[12] = *(_OWORD *)(a1 + 520);
          __int128 v38 = *(_OWORD *)(a1 + 428);
          __int128 v96 = *(_OWORD *)(a1 + 412);
          __int128 v97 = v38;
          __int128 v39 = *(_OWORD *)(a1 + 460);
          __int128 v98 = *(_OWORD *)(a1 + 444);
          __int128 v99 = v39;
          __int128 v40 = *(_OWORD *)(a1 + 364);
          __int128 v92 = *(_OWORD *)(a1 + 348);
          __int128 v93 = v40;
          __int128 v41 = *(_OWORD *)(a1 + 396);
          __int128 v94 = *(_OWORD *)(a1 + 380);
          __int128 v95 = v41;
          uint64_t v103 = *(void *)(a1 + 536);
          double v42 = *(std::__shared_weak_count **)(a1 + 544);
          uint64_t v104 = v42;
          if (v42)
          {
            double v43 = (unint64_t *)&v42->__shared_owners_;
            do
              unint64_t v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
          }

          __int128 v45 = *(_OWORD *)(a1 + 568);
          __int128 v105 = *(_OWORD *)(a1 + 552);
          __int128 v106 = v45;
          v85[0] = v12;
          v85[1] = (uint64_t)v11;
          p_shared_weak_owners = (unint64_t *)&v11->__shared_weak_owners_;
          do
            unint64_t v47 = __ldxr(p_shared_weak_owners);
          while (__stxr(v47 + 1, p_shared_weak_owners));
          int v84 = *a3;
          char v48 = sub_1004CE930(a1, (double *)(v12 + 16), v85, &v84);
          std::__shared_weak_count::__release_weak(v11);
          if ((v48 & 1) != 0)
          {
            *(_DWORD *)(a1 + 344) = *a3;
            if (sub_1004CCD0C(a1, a2))
            {
              if ((sub_1004CE72C(a1, a5, (void *)(a5 + 16)) & 1) != 0)
              {
                uint64_t v24 = 1LL;
LABEL_64:
                memcpy((void *)a1, __dst, 0x151uLL);
                *(_DWORD *)(a1 + 344) = v91;
                __int128 v65 = v101;
                *(_OWORD *)(a1 + 476) = v100;
                *(_OWORD *)(a1 + 492) = v65;
                *(_OWORD *)(a1 + 508) = *(_OWORD *)v102;
                *(_OWORD *)(a1 + 52sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)&v102[12];
                __int128 v66 = v97;
                *(_OWORD *)(a1 + 412) = v96;
                *(_OWORD *)(a1 + 428) = v66;
                __int128 v67 = v99;
                *(_OWORD *)(a1 + 444) = v98;
                *(_OWORD *)(a1 + 46sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v67;
                __int128 v68 = v93;
                *(_OWORD *)(a1 + 348) = v92;
                *(_OWORD *)(a1 + 364) = v68;
                __int128 v69 = v95;
                *(_OWORD *)(a1 + 38sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v94;
                *(_OWORD *)(a1 + 396) = v69;
                sub_1000F2F30((void *)(a1 + 536), &v103);
                __int128 v70 = v106;
                *(_OWORD *)(a1 + 552) = v105;
                *(_OWORD *)(a1 + 568) = v70;
                __int16 v71 = v104;
                if (v104)
                {
                  int v72 = (unint64_t *)&v104->__shared_owners_;
                  do
                    unint64_t v73 = __ldaxr(v72);
                  while (__stlxr(v73 - 1, v72));
                  if (!v73)
                  {
                    ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
                    std::__shared_weak_count::__release_weak(v71);
                  }
                }

                goto LABEL_21;
              }

              if (qword_101934960 != -1) {
                dispatch_once(&qword_101934960, &stru_10183C870);
              }
              uint64_t v62 = (os_log_s *)qword_101934968;
              if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
              {
                int v63 = *(_DWORD *)(a1 + 564);
                double v64 = *a2;
                *(_DWORD *)std::string buf = 67240448;
                int v108 = v63;
                __int16 v109 = 2050;
                double v110 = v64;
                _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location failed,get predicted location",  buf,  0x12u);
              }

              if (!sub_1002921D0(115, 2))
              {
LABEL_63:
                uint64_t v24 = 0LL;
                goto LABEL_64;
              }

              bzero(buf, 0x65CuLL);
              if (qword_101934960 != -1) {
                dispatch_once(&qword_101934960, &stru_10183C870);
              }
              int v81 = *(_DWORD *)(a1 + 564);
              double v82 = *a2;
              int v86 = 67240448;
              int v87 = v81;
              __int16 v88 = 2050;
              double v89 = v82;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location failed,get predicted location",  &v86,  18);
              __int16 v55 = (uint8_t *)v83;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::propagateLocation(const CFTimeInterval &, const LCFusionDynamicsMode , const std::weak_ptr<const LCFusionProviderLocation>, LCFusionProviderLocation &)",  "%s\n",  v83);
            }

            else
            {
              if (qword_101934960 != -1) {
                dispatch_once(&qword_101934960, &stru_10183C870);
              }
              uint64_t v56 = (os_log_s *)qword_101934968;
              if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
              {
                int v57 = *(_DWORD *)(a1 + 564);
                double v58 = *a2;
                *(_DWORD *)std::string buf = 67240448;
                int v108 = v57;
                __int16 v109 = 2050;
                double v110 = v58;
                _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location failed,predict",  buf,  0x12u);
              }

              if (!sub_1002921D0(115, 2)) {
                goto LABEL_63;
              }
              bzero(buf, 0x65CuLL);
              if (qword_101934960 != -1) {
                dispatch_once(&qword_101934960, &stru_10183C870);
              }
              int v59 = *(_DWORD *)(a1 + 564);
              double v60 = *a2;
              int v86 = 67240448;
              int v87 = v59;
              __int16 v88 = 2050;
              double v89 = v60;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location failed,predict",  &v86,  18);
              __int16 v55 = (uint8_t *)v61;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::propagateLocation(const CFTimeInterval &, const LCFusionDynamicsMode , const std::weak_ptr<const LCFusionProviderLocation>, LCFusionProviderLocation &)",  "%s\n",  v61);
            }
          }

          else
          {
            if (qword_101934960 != -1) {
              dispatch_once(&qword_101934960, &stru_10183C870);
            }
            __int16 v49 = (os_log_s *)qword_101934968;
            if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
            {
              int v50 = *(_DWORD *)(a1 + 564);
              double v51 = *a2;
              *(_DWORD *)std::string buf = 67240448;
              int v108 = v50;
              __int16 v109 = 2050;
              double v110 = v51;
              _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location failed,init",  buf,  0x12u);
            }

            if (!sub_1002921D0(115, 2)) {
              goto LABEL_63;
            }
            bzero(buf, 0x65CuLL);
            if (qword_101934960 != -1) {
              dispatch_once(&qword_101934960, &stru_10183C870);
            }
            int v52 = *(_DWORD *)(a1 + 564);
            double v53 = *a2;
            int v86 = 67240448;
            int v87 = v52;
            __int16 v88 = 2050;
            double v89 = v53;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location failed,init",  &v86,  18);
            __int16 v55 = (uint8_t *)v54;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::propagateLocation(const CFTimeInterval &, const LCFusionDynamicsMode, const std::weak_ptr<const LCFusionProviderLocation>, LCFusionProviderLocation &)",  "%s\n",  v54);
          }

          if (v55 != buf) {
            free(v55);
          }
          goto LABEL_63;
        }
      }
    }
  }

  else
  {
    int v11 = 0LL;
  }

  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_10183C870);
  }
  uint64_t v21 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
  {
    int v22 = *(_DWORD *)(a1 + 564);
    double v23 = *a2;
    *(_DWORD *)std::string buf = 67240448;
    int v108 = v22;
    __int16 v109 = 2050;
    double v110 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,propagate location failed,null or hunc <= 0",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v74 = *(_DWORD *)(a1 + 564);
    double v75 = *a2;
    __dst[0] = 67240448;
    __dst[1] = v74;
    LOWORD(__dst[2]) = 2050;
    *(double *)((char *)&__dst[2] + 2) = v75;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,propagate location failed,null or hunc <= 0",  __dst,  18);
    __int16 v77 = (uint8_t *)v76;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::propagateLocation(const CFTimeInterval &, const LCFusionDynamicsMode, const st d::weak_ptr<const LCFusionProviderLocation>, LCFusionProviderLocation &)",  "%s\n",  v76);
    if (v77 != buf) {
      free(v77);
    }
  }

  uint64_t v24 = 0LL;
  if (v11) {
    goto LABEL_21;
  }
  return v24;
}

void sub_1004D1A74(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_1004D1A80(uint64_t a1, double *a2, double *a3, double *a4, double *a5, int *a6)
{
  uint64_t v10 = *a6;
  else {
    double v11 = dbl_1012EE350[v10];
  }
  double v12 = *a2;
  if (*a2 > v11 || v12 < -500.0)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v25 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
    {
      double v26 = *a2;
      double v27 = *a3;
      double v28 = *a4;
      double v29 = *a5;
      *(_DWORD *)std::string buf = 134284289;
      double v58 = v26;
      __int16 v59 = 2050;
      double v60 = v27;
      __int16 v61 = 2050;
      double v62 = v28;
      __int16 v63 = 2050;
      double v64 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "KFCV:,#Error,invalid altitude,alt,%{private}.2f,altUnc,%{public}.2f,altRate,%{public}.2f,altRateUnc,%{public}.2f",  buf,  0x2Au);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v44 = *a2;
    double v45 = *a3;
    double v46 = *a4;
    double v47 = *a5;
    int v49 = 134284289;
    double v50 = v44;
    __int16 v51 = 2050;
    double v52 = v45;
    __int16 v53 = 2050;
    double v54 = v46;
    __int16 v55 = 2050;
    double v56 = v47;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,#Error,invalid altitude,alt,%{private}.2f,altUnc,%{public}.2f,altRate,%{public}.2f,altRateUnc,%{public}.2f",  &v49,  42);
    uint64_t v24 = (uint8_t *)v48;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::initialize(const double &, const double &, const d ouble &, const double &, const LCFusionDynamicsMode &)",  "%s\n",  v48);
    goto LABEL_43;
  }

  if (*a5 <= 0.0) {
    goto LABEL_10;
  }
  double v13 = 4.0;
  if (*a5 > v13)
  {
LABEL_10:
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v14 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      double v15 = *a2;
      double v16 = *a3;
      double v17 = *a4;
      double v18 = *a5;
      *(_DWORD *)std::string buf = 134284289;
      double v58 = v15;
      __int16 v59 = 2050;
      double v60 = v16;
      __int16 v61 = 2050;
      double v62 = v17;
      __int16 v63 = 2050;
      double v64 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "KFCV:,invalid altRateUnc,alt,%{private}.2f,altUnc,%{public}.2f,altRate,%{public}.2f,altRateUnc,%{public}.2f",  buf,  0x2Au);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v19 = *a2;
    double v20 = *a3;
    double v21 = *a4;
    double v22 = *a5;
    int v49 = 134284289;
    double v50 = v19;
    __int16 v51 = 2050;
    double v52 = v20;
    __int16 v53 = 2050;
    double v54 = v21;
    __int16 v55 = 2050;
    double v56 = v22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,invalid altRateUnc,alt,%{private}.2f,altUnc,%{public}.2f,altRate,%{public}.2f,altRateUnc,%{public}.2f",  &v49,  42);
    uint64_t v24 = (uint8_t *)v23;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::initialize(const double &, const double &, const d ouble &, const double &, const LCFusionDynamicsMode &)",  "%s\n",  v23);
LABEL_43:
    if (v24 != buf) {
      free(v24);
    }
    return 0LL;
  }

  unsigned int v32 = v10 - 1;
  if (v32 > 9) {
    double v33 = 1600.0;
  }
  else {
    double v33 = dbl_1012EE3F8[v32];
  }
  if (*a4 * *a4 > v33)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    __int128 v34 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      double v35 = *a2;
      double v36 = *a3;
      double v37 = *a4;
      double v38 = *a5;
      *(_DWORD *)std::string buf = 134284289;
      double v58 = v35;
      __int16 v59 = 2050;
      double v60 = v36;
      __int16 v61 = 2050;
      double v62 = v37;
      __int16 v63 = 2050;
      double v64 = v38;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "KFCV:,invalid altRate,alt,%{private}.2f,altUnc,%{public}.2f,altRate,%{public}.2f,altRateUnc,%{public}.2f",  buf,  0x2Au);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v39 = *a2;
    double v40 = *a3;
    double v41 = *a4;
    double v42 = *a5;
    int v49 = 134284289;
    double v50 = v39;
    __int16 v51 = 2050;
    double v52 = v40;
    __int16 v53 = 2050;
    double v54 = v41;
    __int16 v55 = 2050;
    double v56 = v42;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,invalid altRate,alt,%{private}.2f,altUnc,%{public}.2f,altRate,%{public}.2f,altRateUnc,%{public}.2f",  &v49,  42);
    uint64_t v24 = (uint8_t *)v43;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::initialize(const double &, const double &, const d ouble &, const double &, const LCFusionDynamicsMode &)",  "%s\n",  v43);
    goto LABEL_43;
  }

  *(double *)a1 = v12;
  *(double *)(a1 + 8) = *a3 * *a3;
  *(double *)(a1 + 16) = *a4;
  *(double *)(a1 + 24) = *a5 * *a5;
  *(double *)(a1 + 32) = *a4;
  if (*a3 < 1.0) {
    *(void *)(a1 + 8) = 0x3FF0000000000000LL;
  }
  uint64_t v30 = 1LL;
  *(_BYTE *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1;
  return v30;
}

void sub_1004D20B0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

BOOL sub_1004D20BC(uint64_t a1, double *a2)
{
  if (!*(_BYTE *)a1)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v19 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v20 = *(_DWORD *)(a1 + 564);
      double v21 = *a2;
      *(_DWORD *)std::string buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v20;
      __int16 v105 = 2050;
      double v106 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,filter is not initialized GSpeed Meas ignored,mct,%{public}.3f",  buf,  0x12u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v82 = *(_DWORD *)(a1 + 564);
    double v83 = *a2;
    *(_DWORD *)__int128 v99 = 67240448;
    *(_DWORD *)&v99[4] = v82;
    *(_WORD *)&v99[8] = 2050;
    *(double *)&v99[10] = v83;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,filter is not initialized GSpeed Meas ignored,mct,%{public}.3f",  v99,  18);
    double v18 = (uint8_t *)v84;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithGroundSpeed(const GroundSpeedMeasurement &)",  "%s\n",  v84);
    goto LABEL_83;
  }

  if (*a2 <= 0.0 || a2[2] <= 0.0 || a2[1] < 0.0 || a2[3] < 0.0 || (double v24 = a2[4], v24 <= 0.0) || v24 > 0.616850275)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v4 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v5 = *(_DWORD *)(a1 + 564);
      double v6 = *a2;
      uint64_t v7 = *((void *)a2 + 1);
      uint64_t v8 = *((void *)a2 + 2);
      uint64_t v9 = *((void *)a2 + 3);
      uint64_t v10 = *((void *)a2 + 4);
      *(_DWORD *)std::string buf = 67241473;
      *(_DWORD *)&uint8_t buf[4] = v5;
      __int16 v105 = 2050;
      double v106 = v6;
      __int16 v107 = 2049;
      uint64_t v108 = v7;
      __int16 v109 = 2050;
      uint64_t v110 = v8;
      __int16 v111 = 2049;
      uint64_t v112 = v9;
      __int16 v113 = 2050;
      uint64_t v114 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,invalid GSpeed Meas ignored,timetagMCT,%{public}.3f,GSpeedmps,%{private}.2f,speedVar,%{publi c}.2f,courseRad,%{private}.1f,courseVarRad2,%{public}.1f",  buf,  0x3Au);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v11 = *(_DWORD *)(a1 + 564);
    double v12 = *a2;
    uint64_t v13 = *((void *)a2 + 1);
    uint64_t v14 = *((void *)a2 + 2);
    uint64_t v15 = *((void *)a2 + 3);
    uint64_t v16 = *((void *)a2 + 4);
    *(_DWORD *)__int128 v99 = 67241473;
    *(_DWORD *)&v99[4] = v11;
    *(_WORD *)&v99[8] = 2050;
    *(double *)&v99[10] = v12;
    *(_WORD *)&v99[18] = 2049;
    *(void *)&v99[20] = v13;
    *(_WORD *)&v99[28] = 2050;
    *(void *)&v99[30] = v14;
    *(_WORD *)&v99[38] = 2049;
    *(void *)&v99[40] = v15;
    LOWORD(v10sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 2050;
    *(void *)((char *)&v100 + 2) = v16;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,invalid GSpeed Meas ignored,timetagMCT,%{public}.3f,GSpeedmps,%{private}.2f,speedVar,%{public} .2f,courseRad,%{private}.1f,courseVarRad2,%{public}.1f",  v99,  58);
    double v18 = (uint8_t *)v17;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithGroundSpeed(const GroundSpeedMeasurement &)",  "%s\n",  v17);
    goto LABEL_83;
  }

  if (*a2 - *(double *)(a1 + 352) < 0.0)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v25 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v26 = *(_DWORD *)(a1 + 564);
      double v27 = *(double *)(a1 + 352);
      double v28 = *a2;
      *(_DWORD *)std::string buf = 67240704;
      *(_DWORD *)&uint8_t buf[4] = v26;
      __int16 v105 = 2050;
      double v106 = v27;
      __int16 v107 = 2050;
      uint64_t v108 = *(void *)&v28;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,old GSpeed Meas ignored,filterMCT,%{public}.3f,GSpeedMeasMCT,%{public}.3f",  buf,  0x1Cu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v29 = *(_DWORD *)(a1 + 564);
    uint64_t v30 = *(void *)(a1 + 352);
    double v31 = *a2;
    *(_DWORD *)__int128 v99 = 67240704;
    *(_DWORD *)&v99[4] = v29;
    *(_WORD *)&v99[8] = 2050;
    *(void *)&v99[10] = v30;
    *(_WORD *)&v99[18] = 2050;
    *(double *)&v99[20] = v31;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,old GSpeed Meas ignored,filterMCT,%{public}.3f,GSpeedMeasMCT,%{public}.3f",  v99,  28);
    double v18 = (uint8_t *)v32;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithGroundSpeed(const GroundSpeedMeasurement &)",  "%s\n",  v32);
LABEL_83:
    if (v18 != buf) {
      free(v18);
    }
    return 0LL;
  }

  if (!sub_1004CCD0C(a1, a2))
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v56 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v57 = *(_DWORD *)(a1 + 564);
      double v58 = *(double *)(a1 + 352);
      double v59 = *a2;
      *(_DWORD *)std::string buf = 67240704;
      *(_DWORD *)&uint8_t buf[4] = v57;
      __int16 v105 = 2050;
      double v106 = v58;
      __int16 v107 = 2050;
      uint64_t v108 = *(void *)&v59;
      _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,filter time-update failed GSpeed Meas ignored,filterMCT,%{public}.3f,GSpeedMeasMCT,%{public}.3f",  buf,  0x1Cu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v60 = *(_DWORD *)(a1 + 564);
    uint64_t v61 = *(void *)(a1 + 352);
    double v62 = *a2;
    *(_DWORD *)__int128 v99 = 67240704;
    *(_DWORD *)&v99[4] = v60;
    *(_WORD *)&v99[8] = 2050;
    *(void *)&v99[10] = v61;
    *(_WORD *)&v99[18] = 2050;
    *(double *)&v99[20] = v62;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,filter time-update failed GSpeed Meas ignored,filterMCT,%{public}.3f,GSpeedMeasMCT,%{public}.3f",  v99,  28);
    double v18 = (uint8_t *)v63;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithGroundSpeed(const GroundSpeedMeasurement &)",  "%s\n",  v63);
    goto LABEL_83;
  }

  double v33 = a2[1];
  double v34 = a2[3];
  double v35 = sin(v34);
  double v36 = cos(sqrt(a2[4]));
  double v37 = sqrt(a2[2]);
  double v38 = v37 * (1.0 / v36) * (v37 * (1.0 / v36)) * 0.5;
  uint64_t v39 = *(void *)(a1 + 168);
  __int128 v40 = *(_OWORD *)(a1 + 192);
  __int128 v102 = *(_OWORD *)(a1 + 176);
  __int128 v103 = v40;
  __int128 v41 = *(_OWORD *)(a1 + 264);
  __int128 v42 = *(_OWORD *)(a1 + 280);
  *(_OWORD *)&v99[32] = *(_OWORD *)(a1 + 248);
  __int128 v100 = v41;
  uint64_t v43 = *(void *)(a1 + 208);
  __int128 v101 = v42;
  __int128 v44 = *(_OWORD *)(a1 + 232);
  *(_OWORD *)__int128 v99 = *(_OWORD *)(a1 + 216);
  *(_OWORD *)&v99[16] = v44;
  double v45 = *(double *)(a1 + 248);
  double v46 = v38 + v45;
  if (v38 + v45 <= 0.0)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v64 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
    {
      int v65 = *(_DWORD *)(a1 + 564);
      *(_DWORD *)std::string buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v65;
      _os_log_impl( (void *)&_mh_execute_header,  v64,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,#Error,GSpeed velN innovation_var <= 0",  buf,  8u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v66 = *(_DWORD *)(a1 + 564);
    LODWORD(v96.f64[0]) = 67240192;
    HIDWORD(v96.f64[0]) = v66;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,#Error,GSpeed velN innovation_var <= 0",  &v96,  8);
    double v18 = (uint8_t *)v67;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithGroundSpeed(const GroundSpeedMeasurement &)",  "%s\n",  v67);
    goto LABEL_83;
  }

  *(double *)v47.i64 = cos(v34);
  *(double *)v48.i64 = *(double *)(a1 + 216) / v46;
  v96.f64[0] = *(double *)(a1 + 184) / v46;
  *(void *)&v96.f64[1] = v48.i64[0];
  *(double *)v48.i64 = *(double *)(a1 + 280) / v46;
  double v97 = v45 / v46;
  double v98 = *(double *)v48.i64;
  double v89 = v33 * *(double *)v47.i64 - *(double *)(a1 + 24);
  if (v89 * v89 / v46 <= 100.0)
  {
    *(double *)v47.i64 = v89 * v89;
    sub_1004D2F60(a1, &v89, v96.f64, v47, 100.0, v48);
    *(void *)std::string buf = 0x3FF0000000000000LL;
    sub_1004D32AC(a1, &v96, 2LL, (double *)buf);
  }

  else
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v49 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v50 = *(_DWORD *)(a1 + 564);
      *(_DWORD *)std::string buf = 67240704;
      *(_DWORD *)&uint8_t buf[4] = v50;
      __int16 v105 = 2050;
      double v106 = v89 * v89 / v46;
      __int16 v107 = 2050;
      uint64_t v108 = 0x4059000000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,GSpeed velN innovation test failed,nis,%{public}.3f,threshold,%{public}.3f",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v53 = *(_DWORD *)(a1 + 564);
      int v90 = 67240704;
      int v91 = v53;
      __int16 v92 = 2050;
      double v93 = v89 * v89 / v46;
      __int16 v94 = 2050;
      uint64_t v95 = 0x4059000000000000LL;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,GSpeed velN innovation test failed,nis,%{public}.3f,threshold,%{public}.3f",  &v90,  28);
      __int16 v55 = (uint8_t *)v54;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithGroundSpeed(const GroundSpeedMeasurement &)",  "%s\n",  v54);
      if (v55 != buf) {
        free(v55);
      }
    }
  }

  double v68 = *(double *)(a1 + 288);
  *(double *)v51.i64 = v38 + v68;
  BOOL v22 = v38 + v68 > 0.0;
  if (v38 + v68 <= 0.0)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v76 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
    {
      int v77 = *(_DWORD *)(a1 + 564);
      *(_DWORD *)std::string buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v77;
      _os_log_impl( (void *)&_mh_execute_header,  v76,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,#Error,GSpeed velE innovation_var <= 0",  buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v85 = *(_DWORD *)(a1 + 564);
      int v90 = 67240192;
      int v91 = v85;
      LODWORD(v88) = 8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,#Error,GSpeed velE innovation_var <= 0",  &v90,  v88);
      int v87 = (uint8_t *)v86;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithGroundSpeed(const GroundSpeedMeasurement &)",  "%s\n",  v86);
      if (v87 != buf) {
        free(v87);
      }
    }

    *(void *)(a1 + 168) = v39;
    __int128 v78 = v103;
    __int128 v79 = v101;
    *(_OWORD *)(a1 + 176) = v102;
    *(_OWORD *)(a1 + 192) = v78;
    *(void *)(a1 + 208) = v43;
    __int128 v80 = v100;
    *(_OWORD *)(a1 + 248) = *(_OWORD *)&v99[32];
    *(_OWORD *)(a1 + 264) = v80;
    *(_OWORD *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v79;
    __int128 v81 = *(_OWORD *)&v99[16];
    *(_OWORD *)(a1 + 216) = *(_OWORD *)v99;
    *(_OWORD *)(a1 + 232) = v81;
  }

  else
  {
    double v69 = *(double *)(a1 + 224) / *(double *)v51.i64;
    v96.f64[0] = *(double *)(a1 + 192) / *(double *)v51.i64;
    v96.f64[1] = v69;
    double v97 = *(double *)(a1 + 256) / *(double *)v51.i64;
    double v98 = v68 / *(double *)v51.i64;
    double v89 = v33 * v35 - *(double *)(a1 + 32);
    v52.i64[0] = 0x4059000000000000LL;
    double v70 = v89 * v89 / *(double *)v51.i64;
    if (v70 <= 100.0)
    {
      sub_1004D2F60(a1, &v89, v96.f64, v51, v89 * v89, v52);
      *(void *)std::string buf = 0x3FF0000000000000LL;
      sub_1004D32AC(a1, &v96, 3LL, (double *)buf);
    }

    else
    {
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      __int16 v71 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        int v72 = *(_DWORD *)(a1 + 564);
        *(_DWORD *)std::string buf = 67240704;
        *(_DWORD *)&uint8_t buf[4] = v72;
        __int16 v105 = 2050;
        double v106 = v70;
        __int16 v107 = 2050;
        uint64_t v108 = 0x4059000000000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,GSpeed velE innovation test failed,nis,%{public}.3f,threshold,%{public}.3f",  buf,  0x1Cu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_10183C870);
        }
        int v73 = *(_DWORD *)(a1 + 564);
        int v90 = 67240704;
        int v91 = v73;
        __int16 v92 = 2050;
        double v93 = v70;
        __int16 v94 = 2050;
        uint64_t v95 = 0x4059000000000000LL;
        LODWORD(v88) = 28;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,GSpeed velE innovation test failed,nis,%{public}.3f,threshold,%{public}.3f",  &v90,  v88);
        double v75 = (uint8_t *)v74;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithGroundSpeed(const GroundSpeedMeasurement &)",  "%s\n",  v74);
        if (v75 != buf) {
          free(v75);
        }
      }
    }

    *(void *)(a1 + 168) = v39;
    *(void *)(a1 + 208) = v43;
    *(void *)(a1 + 368) = 0LL;
    *(_BYTE *)(a1 + 56sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
    sub_1004CF290(a1, (uint64_t)"update with GSpeed success");
  }

  return v22;
}

void sub_1004D2F54(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_1004D2F60(uint64_t a1, double *a2, double *a3, int8x16_t a4, double a5, int8x16_t a6)
{
  if (*(_BYTE *)(a1 + 424) && *(_BYTE *)(a1 + 440)) {
    goto LABEL_5;
  }
  uint64_t v26 = 0LL;
  uint64_t v27 = 0LL;
  if ((sub_100D2E600( (double *)(a1 + 480),  (double *)&v27,  (double *)&v26,  *(double *)(a1 + 8) * 57.2957795,  *(double *)(a1 + 384)) & 1) != 0)
  {
    *(void *)(a1 + 416) = v26;
    *(_BYTE *)(a1 + 424) = 1;
    *(void *)(a1 + 432) = v27;
    *(_BYTE *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1;
LABEL_5:
    *(double *)a4.i64 = *(double *)(a1 + 8) + *a2 * *a3 / *(double *)(a1 + 432);
    a6.i64[0] = 0x400921FB54442D18LL;
    int8x16_t v24 = a6;
    if (fabs(*(double *)a4.i64) > 3.14159265)
    {
      v9.f64[0] = NAN;
      v9.f64[1] = NAN;
      double v23 = *(double *)vbslq_s8((int8x16_t)vnegq_f64(v9), a6, a4).i64;
      *(double *)a4.i64 = fmod(*(double *)a4.i64 + v23, 6.28318531) - v23;
    }

    if (*(double *)a4.i64 >= 1.57079633)
    {
      int8x16_t v10 = v24;
      *(double *)a4.i64 = *(double *)v24.i64 - *(double *)a4.i64;
    }

    else
    {
      int8x16_t v10 = v24;
    }

    *(void *)(a1 + 8) = a4.i64[0];
    double v11 = *(double *)(a1 + 416);
    double v12 = *(double *)(a1 + 16);
    double v13 = a3[1];
    double v14 = *a2;
    if (v11 <= 0.0) {
      *(double *)a4.i64 = v12 + v13 * v14;
    }
    else {
      *(double *)a4.i64 = v12 + v13 * v14 / v11;
    }
    if (fabs(*(double *)a4.i64) > *(double *)v10.i64)
    {
      v15.f64[0] = NAN;
      v15.f64[1] = NAN;
      double v25 = *(double *)vbslq_s8((int8x16_t)vnegq_f64(v15), v10, a4).i64;
      *(double *)a4.i64 = fmod(*(double *)a4.i64 + v25, 6.28318531) - v25;
    }

    *(void *)(a1 + 16) = a4.i64[0];
    double v16 = *(double *)(a1 + 32);
    *(double *)(a1 + 24) = *(double *)(a1 + 24) + a3[2] * *a2;
    *(double *)(a1 + 32) = v16 + a3[3] * *a2;
    return 1LL;
  }

  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_10183C870);
  }
  double v18 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
  {
    int v19 = *(_DWORD *)(a1 + 564);
    *(_DWORD *)std::string buf = 67240192;
    int v30 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,#Error,updateStateVector calc_dNdE failed",  buf,  8u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v20 = *(_DWORD *)(a1 + 564);
    v28[0] = 67240192;
    v28[1] = v20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,#Error,updateStateVector calc_dNdE failed",  v28,  8);
    BOOL v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateStateVector(const double &, const std::array<double, 4> &)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  return 0LL;
}

void sub_1004D32A0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

double sub_1004D32AC(uint64_t a1, float64x2_t *a2, uint64_t a3, double *a4)
{
  uint64_t v5 = 0LL;
  double v6 = (double *)(a1 + 168);
  __int128 v7 = *(_OWORD *)(a1 + 248);
  __int128 v48 = *(_OWORD *)(a1 + 232);
  __int128 v49 = v7;
  __int128 v8 = *(_OWORD *)(a1 + 280);
  __int128 v50 = *(_OWORD *)(a1 + 264);
  __int128 v51 = v8;
  __int128 v9 = *(_OWORD *)(a1 + 184);
  __int128 v44 = *(_OWORD *)(a1 + 168);
  __int128 v45 = v9;
  __int128 v10 = *(_OWORD *)(a1 + 216);
  __int128 v46 = *(_OWORD *)(a1 + 200);
  __int128 v47 = v10;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  double v11 = (const double *)(a1 + 168 + 32 * a3);
  double v12 = v11 + 3;
  double v13 = *a4;
  double v14 = v11 + 2;
  float64x2_t v15 = vld1q_dup_f64(v11++);
  float64x2_t v16 = vld1q_dup_f64(v11);
  float64x2_t v17 = vld1q_dup_f64(v14);
  float64x2_t v18 = vld1q_dup_f64(v12);
  do
  {
    float64x2_t v19 = *a2++;
    float64x2_t v20 = vmulq_n_f64(v19, v13);
    v52.val[0] = vmulq_f64(v20, v15);
    v52.val[1] = vmulq_f64(v20, v16);
    v52.val[2] = vmulq_f64(v20, v17);
    v52.val[3] = vmulq_f64(v20, v18);
    double v21 = (double *)((char *)&v33 + v5);
    vst4q_f64(v21, v52);
    v5 += 64LL;
  }

  while (v5 != 128);
  for (uint64_t i = 0LL; i != 16; i += 2LL)
    *(float64x2_t *)&v6[i] = vsubq_f64(*(float64x2_t *)&v6[i], *(float64x2_t *)((char *)&v33 + i * 8));
  if (*v6 <= 0.0
    || *(double *)(a1 + 208) <= 0.0
    || *(double *)(a1 + 248) <= 0.0
    || (double result = *(double *)(a1 + 288), result <= 0.0))
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int8x16_t v24 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
    {
      int v25 = *(_DWORD *)(a1 + 564);
      *(_DWORD *)std::string buf = 67240192;
      int v43 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "KFCV:,ID,%{public}d,#Error,error covariance matrix diagonal element < 0",  buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v30 = *(_DWORD *)(a1 + 564);
      v41[0] = 67240192;
      v41[1] = v30;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,ID,%{public}d,#Error,error covariance matrix diagonal element < 0",  v41,  8,  v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40);
      unsigned int v32 = (uint8_t *)v31;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateErrorCovMat(const std::array<double, 4> &, std::size_t, const double &)",  "%s\n",  v31);
      if (v32 != buf) {
        free(v32);
      }
    }

    __int128 v26 = v49;
    *((_OWORD *)v6 + 4) = v48;
    *((_OWORD *)v6 + 5) = v26;
    __int128 v27 = v51;
    *((_OWORD *)v6 + 6) = v50;
    *((_OWORD *)v6 + 7) = v27;
    __int128 v28 = v45;
    *(_OWORD *)double v6 = v44;
    *((_OWORD *)v6 + 1) = v28;
    double result = *(double *)&v46;
    __int128 v29 = v47;
    *((_OWORD *)v6 + 2) = v46;
    *((_OWORD *)v6 + 3) = v29;
  }

  return result;
}

void sub_1004D3574(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

BOOL sub_1004D3580(uint64_t a1, double *a2)
{
  if (!*(_BYTE *)a1)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v13 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v14 = *(_DWORD *)(a1 + 564);
      double v15 = *a2;
      *(_DWORD *)std::string buf = 67240448;
      int v45 = v14;
      __int16 v46 = 2050;
      double v47 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,filter is not initialized VVel Meas ignored,mct,%{public}.3f",  buf,  0x12u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v16 = *(_DWORD *)(a1 + 564);
    double v17 = *a2;
    int v36 = 67240448;
    int v37 = v16;
    __int16 v38 = 2050;
    double v39 = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,filter is not initialized VVel Meas ignored,mct,%{public}.3f",  &v36,  18);
    double v12 = (uint8_t *)v18;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithVerticalVelocity(const VerticalVelocityMeasurement &)",  "%s\n",  v18);
    goto LABEL_40;
  }

  if (!*(_BYTE *)(a1 + 336))
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    __int128 v29 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v30 = *(_DWORD *)(a1 + 564);
      double v31 = *a2;
      *(_DWORD *)std::string buf = 67240448;
      int v45 = v30;
      __int16 v46 = 2050;
      double v47 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,filter has no altitude data, VVel Meas ignored,mct,%{public}.3f",  buf,  0x12u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v33 = *(_DWORD *)(a1 + 564);
    double v34 = *a2;
    int v36 = 67240448;
    int v37 = v33;
    __int16 v38 = 2050;
    double v39 = v34;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,filter has no altitude data, VVel Meas ignored,mct,%{public}.3f",  &v36,  18);
    double v12 = (uint8_t *)v35;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithVerticalVelocity(const VerticalVelocityMeasurement &)",  "%s\n",  v35);
    goto LABEL_40;
  }

  if (*a2 <= 0.0 || a2[2] <= 0.0)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    float64x2_t v19 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v20 = *(_DWORD *)(a1 + 564);
      double v21 = *a2;
      double v22 = a2[1];
      uint64_t v23 = *((void *)a2 + 2);
      *(_DWORD *)std::string buf = 67240961;
      int v45 = v20;
      __int16 v46 = 2050;
      double v47 = v21;
      __int16 v48 = 2049;
      double v49 = v22;
      __int16 v50 = 2050;
      uint64_t v51 = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,invalid VVel Meas ignored,timetagMCT,%{public}.3f,VVel_mps,%{private}.2f,VVelVar,%{public}.2f",  buf,  0x26u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v24 = *(_DWORD *)(a1 + 564);
    double v25 = *a2;
    double v26 = a2[1];
    uint64_t v27 = *((void *)a2 + 2);
    int v36 = 67240961;
    int v37 = v24;
    __int16 v38 = 2050;
    double v39 = v25;
    __int16 v40 = 2049;
    double v41 = v26;
    __int16 v42 = 2050;
    uint64_t v43 = v27;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,invalid VVel Meas ignored,timetagMCT,%{public}.3f,VVel_mps,%{private}.2f,VVelVar,%{public}.2f",  &v36,  38);
    double v12 = (uint8_t *)v28;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithVerticalVelocity(const VerticalVelocityMeasurement &)",  "%s\n",  v28);
    goto LABEL_40;
  }

  if (*a2 - *(double *)(a1 + 352) < 0.0)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v4 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      int v5 = *(_DWORD *)(a1 + 564);
      double v6 = *(double *)(a1 + 352);
      double v7 = *a2;
      *(_DWORD *)std::string buf = 67240704;
      int v45 = v5;
      __int16 v46 = 2050;
      double v47 = v6;
      __int16 v48 = 2050;
      double v49 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "KFCV:,ID,%{public}d,old VVel Meas ignored,filterMCT,%{public}.3f,VVelMCT,%{public}.3f",  buf,  0x1Cu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    int v8 = *(_DWORD *)(a1 + 564);
    double v9 = *(double *)(a1 + 352);
    double v10 = *a2;
    int v36 = 67240704;
    int v37 = v8;
    __int16 v38 = 2050;
    double v39 = v9;
    __int16 v40 = 2050;
    double v41 = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,ID,%{public}d,old VVel Meas ignored,filterMCT,%{public}.3f,VVelMCT,%{public}.3f",  &v36,  28);
    double v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::updateWithVerticalVelocity(const VerticalVelocityMeasurement &)",  "%s\n",  v11);
LABEL_40:
    if (v12 != buf) {
      free(v12);
    }
    return 0LL;
  }

  return sub_1004D3C44(a1 + 296, a2 + 1, a2 + 2, (_DWORD *)(a1 + 344));
}

void sub_1004D3C38(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

BOOL sub_1004D3C44(uint64_t a1, double *a2, double *a3, _DWORD *a4)
{
  if (!*(_BYTE *)(a1 + 40)) {
    return 0LL;
  }
  if (*(double *)(a1 + 8) <= 0.0)
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183C870);
    }
    double v17 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
    {
      int v18 = *(unsigned __int8 *)(a1 + 40);
      uint64_t v19 = *(void *)(a1 + 8);
      *(_DWORD *)std::string buf = 67240448;
      *(_DWORD *)double v34 = v18;
      *(_WORD *)&v34[4] = 2050;
      *(void *)&v34[6] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "KFCV:,#Error,updateAltitudeRate() failed,initialized,%{public}d,altVar,%{public}.2f",  buf,  0x12u);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      int v20 = *(unsigned __int8 *)(a1 + 40);
      uint64_t v21 = *(void *)(a1 + 8);
      int v31 = 67240448;
      *(_DWORD *)unsigned int v32 = v20;
      *(_WORD *)&v32[4] = 2050;
      *(void *)&v32[6] = v21;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "KFCV:,#Error,updateAltitudeRate() failed,initialized,%{public}d,altVar,%{public}.2f",  &v31,  18);
      int v16 = (uint8_t *)v22;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::updateAltitudeRate(const double &, const double &, const LCFusionDynamicsMode &)",  "%s\n",  v22);
      goto LABEL_23;
    }
  }

  else
  {
    if (*a3 <= 0.0) {
      goto LABEL_7;
    }
    int v7 = *a4 - 1;
    double v8 = 4.0;
    if (*a3 <= v8)
    {
      double v23 = *a2;
      else {
        double v24 = dbl_1012EE3F8[v7];
      }
      if (v23 * v23 <= v24)
      {
        *(double *)(a1 + 16) = v23;
        *(double *)(a1 + 24) = *a3 * *a3;
        *(double *)(a1 + 32) = *a2;
        return 1LL;
      }

      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      double v25 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        double v26 = *a2;
        double v27 = *a3;
        *(_DWORD *)std::string buf = 134349312;
        *(double *)double v34 = v26;
        *(_WORD *)&v34[8] = 2050;
        *(double *)&v34[10] = v27;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "KFCV:,invalid altRate,altRate,%{public}.2f,altRateUnc,%{public}.2f",  buf,  0x16u);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_10183C870);
        }
        double v28 = *a2;
        double v29 = *a3;
        int v31 = 134349312;
        *(double *)unsigned int v32 = v28;
        *(_WORD *)&v32[8] = 2050;
        *(double *)&v32[10] = v29;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,invalid altRate,altRate,%{public}.2f,altRateUnc,%{public}.2f",  &v31,  22);
        int v16 = (uint8_t *)v30;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::updateAltitudeRate(const double &, const doubl e &, const LCFusionDynamicsMode &)",  "%s\n",  v30);
        goto LABEL_23;
      }
    }

    else
    {
LABEL_7:
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183C870);
      }
      double v9 = (os_log_s *)qword_101934968;
      if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
      {
        double v10 = *a2;
        double v11 = *a3;
        *(_DWORD *)std::string buf = 134349312;
        *(double *)double v34 = v10;
        *(_WORD *)&v34[8] = 2050;
        *(double *)&v34[10] = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "KFCV:,invalid altRateUnc,altRate,%{public}.2f,altRateUnc,%{public}.2f",  buf,  0x16u);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_10183C870);
        }
        double v13 = *a2;
        double v14 = *a3;
        int v31 = 134349312;
        *(double *)unsigned int v32 = v13;
        *(_WORD *)&v32[8] = 2050;
        *(double *)&v32[10] = v14;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "KFCV:,invalid altRateUnc,altRate,%{public}.2f,altRateUnc,%{public}.2f",  &v31,  22);
        int v16 = (uint8_t *)v15;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::updateAltitudeRate(const double &, const doubl e &, const LCFusionDynamicsMode &)",  "%s\n",  v15);
LABEL_23:
        if (v16 != buf) {
          free(v16);
        }
        return 0LL;
      }
    }
  }

  return result;
}

void sub_1004D4174(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_1004D4180(id a1)
{
  qword_101934968 = (uint64_t)os_log_create("com.apple.locationd.Position", "LCFusion");
}

void sub_1004D4250(id a1)
{
  qword_1019960D8 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLAccessoryLocationProviderSilo");
}

uint64_t sub_1004D4304(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1004D4948;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_1019960F8 != -1) {
    dispatch_once(&qword_1019960F8, block);
  }
  return qword_1019A10C8;
}

uint64_t sub_1004D44C4(uint64_t a1, int a2)
{
  uint64_t v2 = *(unsigned int *)(a1 + 2320);
  if (a2)
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    double v3 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 67240192;
      int v8 = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "CLAccessory,getAccessoryTypeBitSet,%{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      v6[0] = 67240192;
      v6[1] = v2;
      int v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  1LL,  "CLAccessory,getAccessoryTypeBitSet,%{public}d",  v6,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "int32_t CLAccessoryLocationProvider::getAccessoryTypeBitSet(const BOOL) const",  "%s\n",  v5);
    }
  }

  return v2;
}

uint64_t sub_1004D4704(uint64_t a1, int a2)
{
  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_10183CAD0);
  }
  double v4 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134349312;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    __int16 v14 = 1026;
    int v15 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLAccessoryAWD,%{public}.1lf,RouteListener,navstate,%{public}d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    uint64_t v6 = qword_101934818;
    int v8 = 134349312;
    CFAbsoluteTime v9 = CFAbsoluteTimeGetCurrent();
    __int16 v10 = 1026;
    int v11 = a2;
    int v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v6,  2LL,  "CLAccessoryAWD,%{public}.1lf,RouteListener,navstate,%{public}d",  &v8,  18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::onNavigationStateChange(const CLClientNavigationState)",  "%s\n",  v7);
  }

  return sub_100DAE9F8(a1 + 2328, a2);
}

void sub_1004D4920(id a1)
{
  if ((sub_1004F64FC() & 0x10) != 0) {
    byte_1019960E8 = 1;
  }
}

uint64_t sub_1004D4948(uint64_t a1)
{
  uint64_t v2 = operator new(0x1768uLL);
  uint64_t result = sub_1004D4994((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A10C8 = (uint64_t)v2;
  return result;
}

void sub_1004D4980(_Unwind_Exception *a1)
{
}

uint64_t sub_1004D4994(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100479C24(a1, "accessory", a2);
  *(_DWORD *)(v3 + 116) = 0xFFFF;
  *(void *)uint64_t v3 = &off_10183C8E0;
  *(void *)(v3 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(v3 + 128) = 0LL;
  *(_OWORD *)(v3 + 136) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v79 = _Q0;
  *(_OWORD *)(v3 + 152) = _Q0;
  *(_OWORD *)(v3 + 168) = _Q0;
  *(_OWORD *)(v3 + 184) = _Q0;
  *(_DWORD *)(v3 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *(void *)(v3 + 204) = 0xBFF0000000000000LL;
  *(void *)(v3 + 22sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(v3 + 212) = 0LL;
  *(_DWORD *)(v3 + 228) = 0;
  *(void *)(v3 + 232) = 0xBFF0000000000000LL;
  *(_DWORD *)(v3 + 24sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0x7FFFFFFF;
  *(void *)(v3 + 244) = 0LL;
  *(void *)(v3 + 252) = 0LL;
  *(_BYTE *)(v3 + 268) = 0;
  *(void *)(v3 + 26sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  sub_100869DC8(v3 + 272);
  *(_OWORD *)(a1 + 96sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 976) = 0u;
  *(_OWORD *)(a1 + 928) = 0u;
  *(_OWORD *)(a1 + 944) = 0u;
  *(_OWORD *)(a1 + 912) = 0u;
  *(_DWORD *)(a1 + 992) = 85;
  *(void *)(a1 + 100sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 1008) = v79;
  *(_OWORD *)(a1 + 1024) = v79;
  sub_100382F80(a1 + 1040, *(void **)(a1 + 32), (uint64_t)sub_1004D5ACC, a1);
  CFAbsoluteTime v9 = (void **)(a1 + 1288);
  *(void *)(a1 + 1376) = 0LL;
  *(_OWORD *)(a1 + 1288) = 0u;
  *(_OWORD *)(a1 + 1304) = 0u;
  *(_OWORD *)(a1 + 132sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 1336) = 0u;
  *(void *)(a1 + 136sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(_BYTE *)(a1 + 1368) = 0;
  sub_100D2D9A4(a1 + 1384);
  *(_DWORD *)(a1 + 1424) = 0xFFFF;
  *(_OWORD *)(a1 + 1428) = 0u;
  *(_OWORD *)(a1 + 1444) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 146sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v79;
  *(_OWORD *)(a1 + 1476) = v79;
  *(_OWORD *)(a1 + 1492) = v79;
  *(_DWORD *)(a1 + 1508) = 0;
  *(void *)(a1 + 1512) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 152sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_DWORD *)(a1 + 1536) = 0;
  *(void *)(a1 + 154sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 1548) = 0x7FFFFFFF;
  *(void *)(a1 + 1552) = 0LL;
  *(_BYTE *)(a1 + 1576) = 0;
  *(_OWORD *)(a1 + 156sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 1584) = 0u;
  *(void *)(a1 + 160sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 1608) = 0u;
  *(_OWORD *)(a1 + 1624) = 0u;
  *(_DWORD *)(a1 + 164sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1065353216;
  *(_BYTE *)(a1 + 1648) = 0;
  *(void *)(a1 + 16sub_1000A56E8(v1 + 72) = 0LL;
  *(_OWORD *)(a1 + 1656) = 0u;
  *(_DWORD *)(a1 + 168sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = -1;
  *(_WORD *)(a1 + 1684) = 0;
  *(void *)(a1 + 1704) = 0LL;
  *(_DWORD *)(a1 + 1711) = 0;
  *(_OWORD *)(a1 + 1688) = 0u;
  v88[0] = &off_10183CB20;
  v88[1] = a1;
  double v89 = v88;
  sub_1004EFDC4();
  __int16 v10 = v89;
  if (v89 == v88)
  {
    uint64_t v11 = 4LL;
    __int16 v10 = v88;
  }

  else
  {
    if (!v89) {
      goto LABEL_6;
    }
    uint64_t v11 = 5LL;
  }

  (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_6:
  sub_100D2D9A4(a1 + 2208);
  *(void *)(a1 + 2248) = 0xBFF0000000000000LL;
  *(void *)(a1 + 2sub_1004C7BE0(v1 - 256) = 0xBFF0000000000000LL;
  *(void *)(a1 + 22sub_1000A56E8(v1 + 72) = 0LL;
  *(void *)(a1 + 2264) = 0LL;
  *(void *)(a1 + 228sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0xBFF0000000000000LL;
  *(void *)(a1 + 2288) = 0LL;
  *(void *)(a1 + 2304) = 0LL;
  *(void *)(a1 + 2296) = 0LL;
  *(_DWORD *)(a1 + 2312) = 257;
  *(_BYTE *)(a1 + 2316) = 0;
  *(void *)(a1 + 232sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  sub_1004DA4CC(a1 + 2328);
  *(_OWORD *)(a1 + 5504) = 0u;
  *(_OWORD *)(a1 + 5488) = 0u;
  *(_OWORD *)(a1 + 54sub_1000A56E8(v1 + 72) = 0u;
  *(_OWORD *)(a1 + 5456) = 0u;
  *(_OWORD *)(a1 + 544sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 5424) = 0u;
  *(_OWORD *)(a1 + 5408) = 0u;
  *(_OWORD *)(a1 + 5392) = 0u;
  *(_OWORD *)(a1 + 5376) = 0u;
  *(_OWORD *)(a1 + 536sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 5513) = 0u;
  *(_WORD *)(a1 + 5529) = 257;
  *(void *)(a1 + 5536) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 5544) = 0u;
  *(_OWORD *)(a1 + 556sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 5576) = 0u;
  *(_OWORD *)(a1 + 5592) = 0u;
  *(_OWORD *)(a1 + 5608) = 0u;
  *(_OWORD *)(a1 + 5624) = 0u;
  *(_OWORD *)(a1 + 564sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 5656) = 0u;
  *(_OWORD *)(a1 + 56sub_1000A56E8(v1 + 72) = 0u;
  *(_OWORD *)(a1 + 5688) = 0u;
  *(_OWORD *)(a1 + 5697) = 0u;
  *(_WORD *)(a1 + 5713) = 257;
  *(void *)(a1 + 572sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 5728) = 0u;
  *(_OWORD *)(a1 + 5744) = 0u;
  *(_OWORD *)(a1 + 576sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 5776) = 0u;
  *(_OWORD *)(a1 + 5792) = 0u;
  *(_OWORD *)(a1 + 5808) = 0u;
  *(_OWORD *)(a1 + 5824) = 0u;
  *(_OWORD *)(a1 + 584sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 5856) = 0u;
  *(_OWORD *)(a1 + 58sub_1000A56E8(v1 + 72) = 0u;
  *(_OWORD *)(a1 + 5881) = 0u;
  *(_WORD *)(a1 + 5897) = 257;
  *(_DWORD *)(a1 + 5904) = 0;
  *(_BYTE *)(a1 + 5908) = 0;
  *(void *)(a1 + 5912) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 592sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *(void *)(a1 + 5936) = 0LL;
  *(void *)(a1 + 5944) = 0LL;
  *(void *)(a1 + 5928) = a1 + 5936;
  *(void *)(a1 + 5952) = 0xBFF0000000000000LL;
  *(_WORD *)(a1 + 596sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *(_OWORD *)(a1 + 5968) = xmmword_1012EE470;
  *(_BYTE *)(a1 + 5984) = 0;
  *(_DWORD *)(a1 + 212) = 3;
  *(_DWORD *)(a1 + 244) = 0;
  id v12 = [*(id *)(a1 + 40) newTimer];
  *(void *)(a1 + 984) = v12;
  v84[0] = _NSConcreteStackBlock;
  v84[1] = 3221225472LL;
  v84[2] = sub_1004D5CA0;
  v84[3] = &unk_10181D3D0;
  v84[4] = a1;
  [v12 setHandler:v84];
  double v13 = (char *)sub_1002F8DDC();
  sub_10030AC8C(v13, (uint64_t)&v87);
  __int16 v14 = std::string::append(&v87, "ephemeris/");
  std::string::size_type v15 = v14->__r_.__value_.__r.__words[0];
  v85.__r_.__value_.__r.__words[0] = v14->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v85.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v14->__r_.__value_.__r.__words[1] + 7);
  unsigned __int8 size = v14->__r_.__value_.__s.__size_;
  v14->__r_.__value_.__l.__size_ = 0LL;
  v14->__r_.__value_.__l.__cap_ = 0LL;
  v14->__r_.__value_.__r.__words[0] = 0LL;
  *(void *)(a1 + 1288) = v15;
  *(void *)(a1 + 1296) = v85.__r_.__value_.__r.__words[0];
  *(void *)(a1 + 1303) = *(std::string::size_type *)((char *)v85.__r_.__value_.__r.__words + 7);
  *(_BYTE *)(a1 + 1311) = size;
  if ((char)v87.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(v87.__r_.__value_.__l.__data_);
    unsigned __int8 size = *(_BYTE *)(a1 + 1311);
  }

  double v17 = (_BYTE *)(a1 + 1288);
  if ((size & 0x80) != 0) {
    double v17 = *v9;
  }
  uid_t v18 = getuid();
  gid_t v19 = getgid();
  if (!sub_100292C04(v17, v18, v19))
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v20 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_ERROR))
    {
      uint64_t v21 = (void *)(a1 + 1288);
      LODWORD(v87.__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)v87.__r_.__value_.__r.__words + 4) = (std::string::size_type)v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "could not create path %{public}s",  (uint8_t *)&v87,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&v87, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      int v76 = (void *)(a1 + 1288);
      LODWORD(v85.__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)v85.__r_.__value_.__r.__words + 4) = (std::string::size_type)v76;
      int v77 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v87,  1628LL,  &_mh_execute_header,  qword_101934818,  16LL,  "could not create path %{public}s",  &v85,  12);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLAccessoryLocationProvider::CLAccessoryLocationProvider(id<CLIntersiloUniverse>)",  "%s\n",  (const char *)v77);
      if (v77 != &v87) {
        free(v77);
      }
    }
  }

  sub_10043AC3C((uint64_t)sub_1004D5E6C, a1, *(void **)(a1 + 32), &v87);
  std::string::size_type v22 = v87.__r_.__value_.__r.__words[0];
  v87.__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v23 = *(void *)(a1 + 1312);
  *(void *)(a1 + 1312) = v22;
  if (v23)
  {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
    std::string::size_type v24 = v87.__r_.__value_.__r.__words[0];
    v87.__r_.__value_.__r.__words[0] = 0LL;
    if (v24) {
      (*(void (**)(std::string::size_type))(*(void *)v24 + 8LL))(v24);
    }
  }

  sub_1004172F0((uint64_t)sub_1004D6044, a1, *(void **)(a1 + 32), &v87);
  std::string::size_type v25 = v87.__r_.__value_.__r.__words[0];
  v87.__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v26 = *(void *)(a1 + 1320);
  *(void *)(a1 + 132sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v25;
  if (v26)
  {
    (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
    std::string::size_type v27 = v87.__r_.__value_.__r.__words[0];
    v87.__r_.__value_.__r.__words[0] = 0LL;
    if (v27) {
      (*(void (**)(std::string::size_type))(*(void *)v27 + 8LL))(v27);
    }
  }

  *(void *)(a1 + 1352) =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLTimeManager");
  sub_100583844((uint64_t)sub_1004D6220, a1, *(void **)(a1 + 32), &v87);
  std::string::size_type v28 = v87.__r_.__value_.__r.__words[0];
  v87.__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v29 = *(void *)(a1 + 1328);
  *(void *)(a1 + 1328) = v28;
  if (v29)
  {
    (*(void (**)(uint64_t))(*(void *)v29 + 8LL))(v29);
    std::string::size_type v30 = v87.__r_.__value_.__r.__words[0];
    v87.__r_.__value_.__r.__words[0] = 0LL;
    if (v30) {
      (*(void (**)(std::string::size_type))(*(void *)v30 + 8LL))(v30);
    }
  }

  [*(id *)(*(void *)(a1 + 1328) + 16) register:*(void *)(*(void *)(a1 + 1328) + 8) forNotification:4 registrationInfo:0];
  BOOL v83 = 0;
  sub_1002F0B04(&v87);
  int v31 = sub_1002A6F64((uint64_t)v87.__r_.__value_.__l.__data_, "StarkNmeaPipeEnabled", &v83);
  if (v83) {
    int v32 = v31;
  }
  else {
    int v32 = 0;
  }
  int v33 = (std::__shared_weak_count *)v87.__r_.__value_.__l.__size_;
  if (v87.__r_.__value_.__l.__size_)
  {
    double v34 = (unint64_t *)(v87.__r_.__value_.__l.__size_ + 8);
    do
      unint64_t v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
      if (!v32) {
        goto LABEL_38;
      }
      goto LABEL_37;
    }
  }

  if (v32) {
LABEL_37:
  }
    *(_BYTE *)(a1 + 1684) = 1;
LABEL_38:
  BOOL v82 = 0;
  sub_1002F0B04(&v87);
  int v36 = sub_1002A6F64((uint64_t)v87.__r_.__value_.__l.__data_, "IgnoreAccessoryLocations", &v82);
  int v37 = v36;
  __int16 v38 = (std::__shared_weak_count *)v87.__r_.__value_.__l.__size_;
  if (!v87.__r_.__value_.__l.__size_) {
    goto LABEL_42;
  }
  double v39 = (unint64_t *)(v87.__r_.__value_.__l.__size_ + 8);
  do
    unint64_t v40 = __ldaxr(v39);
  while (__stlxr(v40 - 1, v39));
  if (v40)
  {
LABEL_42:
    if (!v36) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }

  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
  std::__shared_weak_count::__release_weak(v38);
  if (v37) {
LABEL_43:
  }
    *(_BYTE *)(a1 + 1685) = v82;
LABEL_44:
  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_10183CAD0);
  }
  double v41 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
  {
    int v42 = *(unsigned __int8 *)(a1 + 1685);
    LODWORD(v87.__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(v87.__r_.__value_.__r.__words[0]) = v42;
    _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "CLAccessory,IgnoreAccessoryLocations,%{public}d",  (uint8_t *)&v87,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v87, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v71 = *(unsigned __int8 *)(a1 + 1685);
    LODWORD(v85.__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(v85.__r_.__value_.__r.__words[0]) = v71;
    LODWORD(v78) = 8;
    int v72 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v87,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "CLAccessory,IgnoreAccessoryLocations,%{public}d",  &v85,  v78);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLAccessoryLocationProvider::CLAccessoryLocationProvider(id<CLIntersiloUniverse>)",  "%s\n",  (const char *)v72);
    if (v72 != &v87) {
      free(v72);
    }
  }

  *(_BYTE *)(a1 + 1363) = 0;
  char v81 = 1;
  sub_1002F0B04(&v87);
  int v43 = sub_1002A6F64((uint64_t)v87.__r_.__value_.__l.__data_, "EnableAccessoryNMEAScreening", (BOOL *)&v81);
  int v44 = v43;
  int v45 = (std::__shared_weak_count *)v87.__r_.__value_.__l.__size_;
  if (v87.__r_.__value_.__l.__size_)
  {
    __int16 v46 = (unint64_t *)(v87.__r_.__value_.__l.__size_ + 8);
    do
      unint64_t v47 = __ldaxr(v46);
    while (__stlxr(v47 - 1, v46));
    if (!v47)
    {
      ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
      std::__shared_weak_count::__release_weak(v45);
      if (!v44) {
        goto LABEL_55;
      }
      goto LABEL_54;
    }
  }

  if (v43) {
LABEL_54:
  }
    *(_BYTE *)(a1 + 1363) = 1;
LABEL_55:
  double v48 = sub_101171D4C();
  char v49 = v81;
  sub_100DAE39C(a1 + 2328, v81, v48);
  *(_BYTE *)(a1 + 1721) = v49;
  sub_1004D9980(a1 + 1720);
  BOOL v80 = *(_BYTE *)(a1 + 2314);
  sub_1002F0B04(&v87);
  int v50 = sub_1002A6F64((uint64_t)v87.__r_.__value_.__l.__data_, "ForceEnableAggressiveLocationScreening", &v80);
  int v51 = v50;
  float64x2x4_t v52 = (std::__shared_weak_count *)v87.__r_.__value_.__l.__size_;
  if (!v87.__r_.__value_.__l.__size_) {
    goto LABEL_59;
  }
  int v53 = (unint64_t *)(v87.__r_.__value_.__l.__size_ + 8);
  do
    unint64_t v54 = __ldaxr(v53);
  while (__stlxr(v54 - 1, v53));
  if (v54)
  {
LABEL_59:
    if (!v50) {
      goto LABEL_61;
    }
    goto LABEL_60;
  }

  ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
  std::__shared_weak_count::__release_weak(v52);
  if (v51) {
LABEL_60:
  }
    *(_BYTE *)(a1 + 2314) = v80;
LABEL_61:
  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_10183CAD0);
  }
  __int16 v55 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
  {
    int v56 = *(unsigned __int8 *)(a1 + 2314);
    LODWORD(v87.__r_.__value_.__l.__data_) = 67240448;
    HIDWORD(v87.__r_.__value_.__r.__words[0]) = v81;
    LOWORD(v87.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&v87.__r_.__value_.__r.__words[1] + 2) = v56;
    _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEFAULT,  "CLAccessory,EnableAccessoryNMEAScreening,%{public}d,ForceEnableAggressiveLocationScreening,%{public}d",  (uint8_t *)&v87,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v87, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v73 = *(unsigned __int8 *)(a1 + 2314);
    LODWORD(v85.__r_.__value_.__l.__data_) = 67240448;
    HIDWORD(v85.__r_.__value_.__r.__words[0]) = v81;
    LOWORD(v85.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&v85.__r_.__value_.__r.__words[1] + 2) = v73;
    LODWORD(v78) = 14;
    int v74 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v87,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "CLAccessory,EnableAccessoryNMEAScreening,%{public}d,ForceEnableAggressiveLocationScreening,%{public}d",  &v85,  v78);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLAccessoryLocationProvider::CLAccessoryLocationProvider(id<CLIntersiloUniverse>)",  "%s\n",  (const char *)v74);
    if (v74 != &v87) {
      free(v74);
    }
  }

  int v57 = -[NSString UTF8String](NSTemporaryDirectory(), "UTF8String");
  sub_1010DDBC0(&v85, v57);
  double v58 = std::string::append(&v85, "/");
  __int128 v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
  v87.__r_.__value_.__l.__cap_ = v58->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v59;
  v58->__r_.__value_.__l.__size_ = 0LL;
  v58->__r_.__value_.__l.__cap_ = 0LL;
  v58->__r_.__value_.__r.__words[0] = 0LL;
  int v60 = std::string::append(&v87, "pty.nmea");
  std::string::size_type v61 = v60->__r_.__value_.__r.__words[0];
  v86[0] = v60->__r_.__value_.__l.__size_;
  *(void *)((char *)v86 + 7) = *(std::string::size_type *)((char *)&v60->__r_.__value_.__r.__words[1] + 7);
  unsigned __int8 v62 = v60->__r_.__value_.__s.__size_;
  v60->__r_.__value_.__l.__size_ = 0LL;
  v60->__r_.__value_.__l.__cap_ = 0LL;
  v60->__r_.__value_.__r.__words[0] = 0LL;
  *(void *)(a1 + 1688) = v61;
  *(void *)(a1 + 1696) = v86[0];
  *(void *)(a1 + 1703) = *(void *)((char *)v86 + 7);
  *(_BYTE *)(a1 + 1711) = v62;
  sub_1004D63F8(a1 + 2320);
  sub_100D96A2C((uint64_t)sub_1004D6428, a1, *(void **)(a1 + 32), &v87);
  std::string::size_type v63 = v87.__r_.__value_.__r.__words[0];
  v87.__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v64 = *(void *)(a1 + 1336);
  *(void *)(a1 + 1336) = v63;
  if (v64)
  {
    (*(void (**)(uint64_t))(*(void *)v64 + 8LL))(v64);
    std::string::size_type v65 = v87.__r_.__value_.__r.__words[0];
    v87.__r_.__value_.__r.__words[0] = 0LL;
    if (v65) {
      (*(void (**)(std::string::size_type))(*(void *)v65 + 8LL))(v65);
    }
    std::string::size_type v63 = *(void *)(a1 + 1336);
  }

  if (v63)
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v66 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v87.__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEBUG,  "CLAccessory,registered for app client notifications",  (uint8_t *)&v87,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&v87, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      LOWORD(v85.__r_.__value_.__l.__data_) = 0;
      LODWORD(v78) = 2;
      double v75 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v87,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLAccessory,registered for app client notifications",  &v85,  v78);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLAccessoryLocationProvider::CLAccessoryLocationProvider(id<CLIntersiloUniverse>)",  "%s\n",  (const char *)v75);
      if (v75 != &v87) {
        free(v75);
      }
    }

    [*(id *)(*(void *)(a1 + 1336) + 16) register:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:4 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 1336) + 16) register:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:9 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 1336) + 16) register:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:3 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 1336) + 16) register:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:3 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 1336) + 16) register:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:1 registrationInfo:0];
  }

  sub_1003CC884((uint64_t)sub_1004D6600, a1, *(void **)(a1 + 32), &v87);
  std::string::size_type v67 = v87.__r_.__value_.__r.__words[0];
  v87.__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v68 = *(void *)(a1 + 1344);
  *(void *)(a1 + 1344) = v67;
  if (v68)
  {
    (*(void (**)(uint64_t))(*(void *)v68 + 8LL))(v68);
    std::string::size_type v69 = v87.__r_.__value_.__r.__words[0];
    v87.__r_.__value_.__r.__words[0] = 0LL;
    if (v69) {
      (*(void (**)(std::string::size_type))(*(void *)v69 + 8LL))(v69);
    }
    std::string::size_type v67 = *(void *)(a1 + 1344);
  }

  if (v67) {
    [*(id *)(v67 + 16) register:*(void *)(v67 + 8) forNotification:7 registrationInfo:0];
  }
  return a1;
}

void sub_1004D5874( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char **a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, int a29, __int16 a30, char a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, void *__p, uint64_t a37, int a38, __int16 a39, char a40, char a41)
{
  uint64_t v47 = *(void *)(v41 + 1344);
  *(void *)(v41 + 1344) = 0LL;
  if (v47) {
    (*(void (**)(uint64_t))(*(void *)v47 + 8LL))(v47);
  }
  uint64_t v48 = *(void *)(v41 + 1336);
  *(void *)(v41 + 1336) = 0LL;
  if (v48) {
    (*(void (**)(uint64_t))(*(void *)v48 + 8LL))(v48);
  }
  uint64_t v49 = *(void *)(v41 + 1328);
  *(void *)(v41 + 1328) = 0LL;
  if (v49) {
    (*(void (**)(uint64_t))(*(void *)v49 + 8LL))(v49);
  }
  uint64_t v50 = *(void *)(v41 + 1320);
  *(void *)(v41 + 132sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  if (v50) {
    (*(void (**)(uint64_t))(*(void *)v50 + 8LL))(v50);
  }
  uint64_t v51 = *(void *)(v41 + 1312);
  *(void *)(v41 + 1312) = 0LL;
  if (v51) {
    (*(void (**)(uint64_t))(*(void *)v51 + 8LL))(v51);
  }
  sub_100383050(a15);
  sub_10000AE14(v41 + 792);
  sub_10047A1C0(v41);
  _Unwind_Resume(a1);
}

void sub_1004D5ACC(uint64_t a1, int a2, uint64_t a3)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183CAB0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    int v5 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAccessoryLocationProvider::onEphemerisUpdated",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v5, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183CAB0);
    }
    uint64_t v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v10 = 0;
      __int16 v11 = 2082;
      id v12 = "";
      __int16 v13 = 2082;
      __int16 v14 = "activity";
      __int16 v15 = 2050;
      uint64_t v16 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAccessoryLocationProvider::onEphemerisUpdated, event:%{public, location:escape_on ly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v8 = 0;
  }

  if (a2 == 2) {
    sub_1004D87D4(a3);
  }
  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004D5C80( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_1004D5CA0(uint64_t a1)
{
  return sub_1004D5CA8(*(id **)(a1 + 32));
}

id sub_1004D5CA8(id *a1)
{
  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_10183CAD0);
  }
  uint64_t v2 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "CLNMEAScreener,screen,onLocationUnavailableTimer,accessory unavailable notification sent",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    v5[0] = 0;
    double v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "CLNMEAScreener,screen,onLocationUnavailableTimer,accessory unavailable notification sent",  v5,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAccessoryLocationProvider::onLocationUnavailableTimer()", "%s\n", v4);
  }

  *(_DWORD *)std::string buf = 9;
  (*((void (**)(id *, uint8_t *, uint64_t, uint64_t))*a1 + 18))(a1, buf, 1LL, 0xFFFFFFFFLL);
  return [a1[123] setNextFireDelay:1.79769313e308];
}

void sub_1004D5E6C(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183CAB0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAccessoryLocationProvider::onLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183CAB0);
    }
    CFAbsoluteTime v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAccessoryLocationProvider::onLocationNotification, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004D9240(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004D6024( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004D6044(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183CAB0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v9 = 1;
    uint64_t v6 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAccessoryLocationProvider::onTimeNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183CAB0);
    }
    uint64_t v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v11 = 0;
      __int16 v12 = 2082;
      int v13 = "";
      __int16 v14 = 2082;
      __int16 v15 = "activity";
      __int16 v16 = 2050;
      uint64_t v17 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAccessoryLocationProvider::onTimeNotification, event:%{public, location:escape_on ly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v9 = 0;
  }

  if (!*a2 && !*(_BYTE *)(a4 + 1713)) {
    sub_1004D845C(a4);
  }
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004D6200( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004D6220(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183CAB0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAccessoryLocationProvider::onClientManagerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183CAB0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAccessoryLocationProvider::onClientManagerNotification, event:%{public, location: escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004D97BC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004D63D8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004D63F8(uint64_t a1)
{
  uint64_t v1 = a1;
  int v2 = 0;
  sub_1004DA818((uint64_t)&v1, 7uLL);
}

void sub_1004D6428(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183CAB0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAccessoryLocationProvider::onAppNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183CAB0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAccessoryLocationProvider::onAppNotification, event:%{public, location:escape_onl y}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004D99E8(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004D65E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004D6600(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183CAB0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLAccessoryLocationProvider::onBatteryNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183CAB0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLAccessoryLocationProvider::onBatteryNotification, event:%{public, location:escape _only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004D9DFC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004D67B8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004D67D8(uint64_t a1)
{
  int v2 = *(void **)(a1 + 3000);
  if (v2)
  {
    *(void *)(a1 + 3008) = v2;
    operator delete(v2);
  }

  sub_1004DA8C4(a1 + 2768);
  sub_1004DA954(a1 + 40);
  return a1;
}

uint64_t sub_1004D6818(uint64_t a1)
{
  int v2 = *(void **)(a1 + 416);
  if (v2 == (void *)(a1 + 392))
  {
    uint64_t v3 = 4LL;
    int v2 = (void *)(a1 + 392);
  }

  else
  {
    if (!v2) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  return a1;
}

uint64_t sub_1004D6880(uint64_t a1)
{
  *(void *)a1 = &off_10183C8E0;
  if (*(void *)(a1 + 1336))
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v2 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "CLAccessory,unregistered for app client notifications",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      v14[0] = 0;
      int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "CLAccessory,unregistered for app client notifications",  v14,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLAccessoryLocationProvider::~CLAccessoryLocationProvider()",  "%s\n",  v13);
    }

    [*(id *)(*(void *)(a1 + 1336) + 16) unregister:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:4];
    [*(id *)(*(void *)(a1 + 1336) + 16) unregister:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:9];
    [*(id *)(*(void *)(a1 + 1336) + 16) unregister:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:3];
    [*(id *)(*(void *)(a1 + 1336) + 16) unregister:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:1];
  }

  uint64_t v3 = *(void *)(a1 + 1344);
  if (v3) {
    [*(id *)(v3 + 16) unregister:*(void *)(v3 + 8) forNotification:7];
  }
  sub_1000229D4(a1 + 5928, *(char **)(a1 + 5936));
  sub_1004DA8C4(a1 + 5728);
  sub_1004DA8C4(a1 + 5544);
  sub_1004DA8C4(a1 + 5360);
  double v4 = *(void **)(a1 + 5328);
  if (v4)
  {
    *(void *)(a1 + 5336) = v4;
    operator delete(v4);
  }

  sub_1004DA8C4(a1 + 5096);
  sub_1004DA954(a1 + 2368);
  sub_100AD5588((id *)(a1 + 2168));
  int v5 = *(void **)(a1 + 2136);
  if (v5 == (void *)(a1 + 2112))
  {
    uint64_t v6 = 4LL;
    int v5 = (void *)(a1 + 2112);
  }

  else
  {
    if (!v5) {
      goto LABEL_17;
    }
    uint64_t v6 = 5LL;
  }

  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_17:
  sub_100019CEC(a1 + 1608);
  sub_100AD5588((id *)(a1 + 1376));
  uint64_t v7 = *(void *)(a1 + 1344);
  *(void *)(a1 + 1344) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 1336);
  *(void *)(a1 + 1336) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  uint64_t v9 = *(void *)(a1 + 1328);
  *(void *)(a1 + 1328) = 0LL;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  uint64_t v10 = *(void *)(a1 + 1320);
  *(void *)(a1 + 132sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  uint64_t v11 = *(void *)(a1 + 1312);
  *(void *)(a1 + 1312) = 0LL;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
  }
  sub_100383050(a1 + 1040);
  sub_10000AE14(a1 + 792);
  sub_10047A1C0(a1);
  return a1;
}

void sub_1004D6C10(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_1004D6C20(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1004D6880(a1);
  operator delete(v1);
}

uint64_t sub_1004D6C34(_BYTE *a1, int *a2)
{
  int v4 = *a2;
  if (*a2 == 40)
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v5 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "CLAccessory,PauseExternalLocation,1", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      v12[0] = 0;
      uint64_t v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "CLAccessory,PauseExternalLocation,1",  v12,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLAccessoryLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v10);
    }

    double v6 = sub_101171D4C();
    sub_1004D71D0(a1, 1, v6);
  }

  else if (v4 == 29)
  {
    if (!a1[1363])
    {
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      uint64_t v7 = (os_log_s *)qword_101934818;
      if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CLAccessory,EnableAccessoryNMEAScreening,0,airborne,1",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934810 != -1) {
          dispatch_once(&qword_101934810, &stru_10183CAD0);
        }
        v12[0] = 0;
        uint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "CLAccessory,EnableAccessoryNMEAScreening,0,airborne,1",  v12,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLAccessoryLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v11);
      }

      double v8 = sub_101171D4C();
      sub_100DAE39C((uint64_t)(a1 + 2328), 0, v8);
      a1[1721] = 0;
      sub_1004D9980((uint64_t)(a1 + 1720));
    }
  }

  else if (!v4)
  {
    sub_1004D6F5C((uint64_t)a1);
  }

  return 1LL;
}

void sub_1004D6F5C(uint64_t a1)
{
  int v2 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if (*(char *)(a1 + 935) < 0)
  {
    **(_BYTE **)(a1 + 912) = 0;
    *(void *)(a1 + 92sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  }

  else
  {
    *(_BYTE *)(a1 + 912) = 0;
    *(_BYTE *)(a1 + 935) = 0;
  }

  if (*(char *)(a1 + 959) < 0)
  {
    **(_BYTE **)(a1 + 936) = 0;
    *(void *)(a1 + 944) = 0LL;
  }

  else
  {
    *(_BYTE *)(a1 + 936) = 0;
    *(_BYTE *)(a1 + 959) = 0;
  }

  if (*(char *)(a1 + 983) < 0)
  {
    **(_BYTE **)(a1 + 96sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
    *(void *)(a1 + 968) = 0LL;
  }

  else
  {
    *(_BYTE *)(a1 + 96sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
    *(_BYTE *)(a1 + 983) = 0;
  }

  sub_1004D76B0(a1);
  double v3 = sub_101171D4C();
  sub_100DAE7E4(a1 + 2328, v3);
  *(void *)(a1 + 2144) = 0LL;
  *(_BYTE *)(a1 + 2152) = 1;

  *(_DWORD *)std::string buf = 9;
  (*(void (**)(uint64_t, uint8_t *, uint64_t, uint64_t))(*(void *)a1 + 144LL))(a1, buf, 1LL, 0xFFFFFFFFLL);
  sub_1004D8E7C(a1);
  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_10183CAD0);
  }
  int v4 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(unsigned __int8 *)(a1 + 1685);
    *(_DWORD *)std::string buf = 67240192;
    int v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Accessory,StartLocation,IgnoreAccessoryLocation,%{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v6 = *(unsigned __int8 *)(a1 + 1685);
    v8[0] = 67240192;
    v8[1] = v6;
    uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "Accessory,StartLocation,IgnoreAccessoryLocation,%{public}d",  v8,  8);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAccessoryLocationProvider::startLocation()", "%s\n", v7);
  }

void sub_1004D71D0(_BYTE *a1, int a2, double a3)
{
  if (a2)
  {
    sub_100DAE39C((uint64_t)(a1 + 2328), 0, a3);
    int v6 = 9;
    (*(void (**)(_BYTE *, int *, uint64_t, uint64_t))(*(void *)a1 + 144LL))(a1, &v6, 1LL, 0xFFFFFFFFLL);
  }

  else if (a1[1362])
  {
    sub_100DAE39C((uint64_t)(a1 + 2328), a1[1721], a3);
  }

uint64_t sub_1004D7270(_BYTE *a1, int *a2)
{
  int v4 = *a2;
  if (*a2 == 40)
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v5 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "CLAccessory,PauseExternalLocation,0", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      v12[0] = 0;
      int v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "CLAccessory,PauseExternalLocation,0",  v12,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLAccessoryLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v10);
    }

    double v6 = sub_101171D4C();
    sub_1004D71D0(a1, 0, v6);
  }

  else if (v4 == 29)
  {
    if (!a1[1363])
    {
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      uint64_t v7 = (os_log_s *)qword_101934818;
      if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CLAccessory,EnableAccessoryNMEAScreening,1,airborne,0",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934810 != -1) {
          dispatch_once(&qword_101934810, &stru_10183CAD0);
        }
        v12[0] = 0;
        uint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "CLAccessory,EnableAccessoryNMEAScreening,1,airborne,0",  v12,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLAccessoryLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v11);
      }

      double v8 = sub_101171D4C();
      sub_100DAE39C((uint64_t)(a1 + 2328), 1, v8);
      a1[1721] = 1;
      sub_1004D9980((uint64_t)(a1 + 1720));
    }
  }

  else if (!v4)
  {
    sub_1004D759C((uint64_t)a1);
  }

  return 1LL;
}

uint64_t sub_1004D759C(uint64_t a1)
{
  int v2 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  [*(id *)(a1 + 984) setNextFireDelay:1.79769313e308];
  double v3 = sub_101171D4C();
  sub_100DAE598(a1 + 2328, v3);

  *(_DWORD *)(a1 + 116) = 0xFFFF;
  *(void *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(a1 + 128) = 0LL;
  *(_OWORD *)(a1 + 136) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 152) = _Q0;
  *(_OWORD *)(a1 + 168) = _Q0;
  *(_OWORD *)(a1 + 184) = _Q0;
  *(_DWORD *)(a1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *(void *)(a1 + 204) = 0xBFF0000000000000LL;
  *(void *)(a1 + 22sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(a1 + 212) = 0LL;
  *(_DWORD *)(a1 + 228) = 0;
  *(void *)(a1 + 232) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 24sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0x7FFFFFFF;
  *(void *)(a1 + 244) = 0LL;
  *(void *)(a1 + 252) = 0LL;
  *(_BYTE *)(a1 + 268) = 0;
  *(void *)(a1 + 26sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  [*(id *)(*(void *)(a1 + 1312) + 16) unregister:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:4];
  *(_BYTE *)(a1 + 136sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  [*(id *)(*(void *)(a1 + 1320) + 16) unregister:*(void *)(*(void *)(a1 + 1320) + 8) forNotification:0];
  *(_BYTE *)(a1 + 1361) = 0;
  sub_1004D7ADC(a1);
  *(_DWORD *)(a1 + 5904) = 0;
  *(_WORD *)(a1 + 1712) = 0;
  *(_BYTE *)(a1 + 1714) = 0;
  *(void *)(a1 + 2144) = 0LL;
  *(_BYTE *)(a1 + 2152) = 1;
  uint64_t result = *(unsigned int *)(a1 + 1680);
  if ((result & 0x80000000) == 0)
  {
    uint64_t result = close(result);
    *(_DWORD *)(a1 + 168sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = -1;
  }

  return result;
}

void sub_1004D76B0(uint64_t a1)
{
  int v2 = (_BYTE *)(a1 + 5960);
  if (!*(_BYTE *)(a1 + 5961))
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    double v3 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "CLAccessory,registered for unfiltered location notifications",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      v14[0] = 0;
      uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLAccessory,registered for unfiltered location notifications",  v14,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAccessoryLocationProvider::registerForNotifications()", "%s\n", v9);
    }

    [*(id *)(*(void *)(a1 + 1312) + 16) register:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:10 registrationInfo:0];
    v2[1] = 1;
  }

  if (!*(_BYTE *)(a1 + 1648))
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v4 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLAccessory,registered for propagated location notifications",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      v14[0] = 0;
      LODWORD(v11) = 2;
      int v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLAccessory,registered for propagated location notifications",  v14,  v11);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAccessoryLocationProvider::registerForNotifications()", "%s\n", v10);
    }

    [*(id *)(*(void *)(a1 + 1312) + 16) register:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:27 registrationInfo:0];
    *(_BYTE *)(a1 + 1648) = 1;
  }

  if (!*v2)
  {
    uint64_t v5 = sub_1006088E8();
    if (byte_1019960D7 < 0)
    {
      sub_1010DD48C(__p, (void *)xmmword_1019960C0, *((unint64_t *)&xmmword_1019960C0 + 1));
    }

    else
    {
      *(_OWORD *)__int128 __p = xmmword_1019960C0;
      uint64_t v13 = unk_1019960D0;
    }

    id v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "silo"), "queue");
    v15[0] = &off_10183CBB0;
    v15[1] = a1;
    __int16 v16 = v15;
    sub_100608C04(v5, (char *)__p, (uint64_t)v6, (uint64_t)v15);
    uint64_t v7 = v16;
    if (v16 == v15)
    {
      uint64_t v8 = 4LL;
      uint64_t v7 = v15;
    }

    else
    {
      if (!v16)
      {
LABEL_24:
        if (SHIBYTE(v13) < 0) {
          operator delete(__p[0]);
        }
        _BYTE *v2 = 1;
        return;
      }

      uint64_t v8 = 5LL;
    }

    (*(void (**)(void))(*v7 + 8 * v8))();
    goto LABEL_24;
  }

void sub_1004D7A84( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, char *a23)
{
  std::string::size_type v25 = a23;
  if (a23 == v23)
  {
    uint64_t v26 = 4LL;
    std::string::size_type v25 = &a20;
  }

  else
  {
    if (!a23) {
      goto LABEL_6;
    }
    uint64_t v26 = 5LL;
  }

  (*(void (**)(void))(*(void *)v25 + 8 * v26))();
LABEL_6:
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004D7ADC(uint64_t a1)
{
  int v2 = (_BYTE *)(a1 + 5960);
  if (*(_BYTE *)(a1 + 5961))
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    double v3 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "CLAccessory,unregistered for unfiltered location notifications",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      v11[0] = 0;
      id v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLAccessory,unregistered for unfiltered location notifications",  v11,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::unregisterForNotifications()",  "%s\n",  v6);
    }

    [*(id *)(*(void *)(a1 + 1312) + 16) unregister:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:10];
    v2[1] = 0;
  }

  if (*(_BYTE *)(a1 + 1648))
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v4 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLAccessory,unregistered for propagated location notifications",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      v11[0] = 0;
      LODWORD(v8) = 2;
      uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLAccessory,unregistered for propagated location notifications",  v11,  v8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::unregisterForNotifications()",  "%s\n",  v7);
    }

    [*(id *)(*(void *)(a1 + 1312) + 16) unregister:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:27];
    *(_BYTE *)(a1 + 1648) = 0;
  }

  if (*v2)
  {
    uint64_t v5 = sub_1006088E8();
    if (byte_1019960D7 < 0)
    {
      sub_1010DD48C(__p, (void *)xmmword_1019960C0, *((unint64_t *)&xmmword_1019960C0 + 1));
    }

    else
    {
      *(_OWORD *)__int128 __p = xmmword_1019960C0;
      uint64_t v10 = unk_1019960D0;
    }

    sub_100608F8C(v5, (uint64_t *)__p);
    if (SHIBYTE(v10) < 0) {
      operator delete(__p[0]);
    }
    _BYTE *v2 = 0;
  }

void sub_1004D7E48( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004D7E6C(uint64_t a1)
{
  *(void *)(a1 + 984) = 0LL;
  uint64_t v2 = *(void *)(a1 + 1312);
  *(void *)(a1 + 1312) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 1328);
  *(void *)(a1 + 1328) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 1320);
  *(void *)(a1 + 132sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }

  *(void *)(a1 + 1352) = 0LL;
}

void sub_1004D7EFC(uint64_t a1, unsigned __int8 *a2, int a3)
{
  double v4 = sub_101171D4C();
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  *(double *)(a1 + 5952) = v4;
  uint64_t v30 = a1;
  id v6 = objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLClientManager"),  "syncgetNonSystemLocationClientKeys");
  v38[0] = 0LL;
  v38[1] = 0LL;
  int v37 = v38;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  id v7 = [v6 countByEnumeratingWithState:&v33 objects:v47 count:16];
  if (v7)
  {
    uint64_t v8 = (uint64_t **)(a1 + 5928);
    uint64_t v9 = *(void *)v34;
    do
    {
      uint64_t v10 = 0LL;
      do
      {
        if (*(void *)v34 != v9) {
          objc_enumerationMutation(v6);
        }
        sub_1010DDBC0(v31, (char *)[*(id *)(*((void *)&v33 + 1) + 8 * (void)v10) UTF8String]);
        if (SHIBYTE(v32) < 0)
        {
          sub_1010DD48C(__p, v31[0], (unint64_t)v31[1]);
        }

        else
        {
          *(_OWORD *)__int128 __p = *(_OWORD *)v31;
          *(void *)&__p[16] = v32;
        }

        double v46 = v4;
        sub_1004DACA0((uint64_t **)&v37, (const void **)__p, (uint64_t)__p);
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
        if (!sub_1004DAD38((uint64_t)v8, (const void **)v31))
        {
          if (SHIBYTE(v32) < 0)
          {
            sub_1010DD48C(__p, v31[0], (unint64_t)v31[1]);
          }

          else
          {
            *(_OWORD *)__int128 __p = *(_OWORD *)v31;
            *(void *)&__p[16] = v32;
          }

          double v46 = v4;
          sub_1004DACA0(v8, (const void **)__p, (uint64_t)__p);
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
          if (qword_101934810 != -1) {
            dispatch_once(&qword_101934810, &stru_10183CAD0);
          }
          uint64_t v11 = (os_log_s *)qword_101934818;
          if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
          {
            __int16 v12 = v31;
            if (v32 < 0) {
              __int16 v12 = (void **)v31[0];
            }
            *(_DWORD *)__int128 __p = 134349571;
            *(CFAbsoluteTime *)&__p[4] = Current;
            *(_WORD *)&_BYTE __p[12] = 2050;
            *(double *)&__p[14] = v4;
            *(_WORD *)&__p[22] = 2081;
            double v46 = *(double *)&v12;
            _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "CLAccessoryAWD,%{public}.1lf,machContTime,%{public}.1lf,onApp,newApp,%{private}s",  __p,  0x20u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(__p, 0x65CuLL);
            if (qword_101934810 != -1) {
              dispatch_once(&qword_101934810, &stru_10183CAD0);
            }
            uint64_t v13 = v31;
            if (v32 < 0) {
              uint64_t v13 = (void **)v31[0];
            }
            int v39 = 134349571;
            CFAbsoluteTime v40 = Current;
            __int16 v41 = 2050;
            double v42 = v4;
            __int16 v43 = 2081;
            int v44 = v13;
            LODWORD(v27) = 32;
            __int16 v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLAccessoryAWD,%{public}.1lf,machContTime,%{public}.1lf,onApp,newApp,%{private}s",  &v39,  v27);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::updateLocationAppStatus(const std::string, const BOOL)",  "%s\n",  v14);
            if (v14 != __p) {
              free(v14);
            }
          }
        }

        if (SHIBYTE(v32) < 0) {
          operator delete(v31[0]);
        }
        uint64_t v10 = (char *)v10 + 1;
      }

      while (v7 != v10);
      id v15 = [v6 countByEnumeratingWithState:&v33 objects:v47 count:16];
      id v7 = v15;
    }

    while (v15);
  }

  uint64_t v16 = *(void *)(a1 + 5928);
  uint64_t v17 = (uint64_t *)(a1 + 5936);
  if (v16 != v30 + 5936)
  {
    do
    {
      if (sub_1004DAD38((uint64_t)&v37, (const void **)(v16 + 32)))
      {
        uint64_t v18 = *(unsigned __int8 *)(v16 + 55);
        if ((v18 & 0x80u) == 0LL) {
          uint64_t v19 = *(unsigned __int8 *)(v16 + 55);
        }
        else {
          uint64_t v19 = *(void *)(v16 + 40);
        }
        uint64_t v20 = a2[23];
        int v21 = (char)v20;
        if ((v20 & 0x80u) != 0LL) {
          uint64_t v20 = *((void *)a2 + 1);
        }
        if (v19 != v20) {
          goto LABEL_54;
        }
        if (v21 >= 0) {
          std::string::size_type v22 = a2;
        }
        else {
          std::string::size_type v22 = *(unsigned __int8 **)a2;
        }
        if ((v18 & 0x80) != 0)
        {
        }

        else
        {
          uint64_t v23 = (unsigned __int8 *)(v16 + 32);
          if (*(_BYTE *)(v16 + 55))
          {
            while (*v23 == *v22)
            {
              ++v23;
              ++v22;
              if (!--v18) {
                goto LABEL_52;
              }
            }

void sub_1004D83F0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33, char *a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, void *a40, uint64_t a41, int a42, __int16 a43, char a44, char a45)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  sub_1000229D4((uint64_t)&a33, a34);
  _Unwind_Resume(a1);
}

void sub_1004D845C(uint64_t a1)
{
  if (([*(id *)(a1 + 1352) syncgetReferenceTime:v4] & 1) == 0)
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    uint64_t v1 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEFAULT,  "#Warning no reference time available, not sending reference time",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      __int16 v3 = 0;
      uint64_t v2 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "#Warning no reference time available, not sending reference time",  &v3,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAccessoryLocationProvider::sendReferenceTime()", "%s\n", v2);
    }
  }

void sub_1004D85F0(uint64_t a1)
{
  if (sub_1002958AC() == 1)
  {
    objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:forClient:",  @"CLLocationController",  @"CLAccessoryLocationProvider"),  "fetchLocationWithReply:",  &stru_10183CA38);
  }

  else
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    uint64_t v2 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#Warning location services is disabled, not sending reference location",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      v4[0] = 0;
      __int16 v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "#Warning location services is disabled, not sending reference location",  v4,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAccessoryLocationProvider::sendReferenceLocation()", "%s\n", v3);
    }
  }

void sub_1004D87D4(uint64_t a1)
{
  uint64_t v1 = a1 + 1040;
  if ((sub_100384668(a1 + 1040, v26) & 1) != 0)
  {
    sub_100386874(v1, (uint64_t)__p);
    if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v2 = __p;
    }
    else {
      uint64_t v2 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
    }
    __int16 v3 = CFStringCreateWithCStringNoCopy(kCFAllocatorDefault, (const char *)v2, 0x8000100u, kCFAllocatorNull);
    CFURLRef v4 = CFURLCreateWithFileSystemPath(kCFAllocatorDefault, v3, kCFURLPOSIXPathStyle, 0);
    uint64_t v5 = +[NSInputStream inputStreamWithURL:](&OBJC_CLASS___NSInputStream, "inputStreamWithURL:", v4);
    id v6 = v5;
    if (v5)
    {
      -[NSInputStream open](v5, "open");
      id v7 = +[NSMutableData data](&OBJC_CLASS___NSMutableData, "data");
      if (-[NSInputStream hasBytesAvailable](v6, "hasBytesAvailable"))
      {
        do
        {
          uint64_t v8 = -[NSInputStream read:maxLength:](v6, "read:maxLength:", __p, 1024LL);
          if (v8 >= 1) {
            [v7 appendBytes:__p length:v8];
          }
          unsigned __int8 v9 = -[NSInputStream hasBytesAvailable](v6, "hasBytesAvailable");
          if (v8 >= 0) {
            unsigned __int8 v10 = v9;
          }
          else {
            unsigned __int8 v10 = 0;
          }
        }

        while ((v10 & 1) != 0);
      }

      -[NSInputStream close](v6, "close");
    }

    else
    {
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      uint64_t v16 = (os_log_s *)qword_101934818;
      if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_FAULT))
      {
        sub_1002A6C50(v3, __p);
        uint64_t v17 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0 ? __p : (std::string *)__p[0].__r_.__value_.__r.__words[0];
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_FAULT,  "could not create input stream for ephemeris file, %{public}s",  (uint8_t *)&buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934810 != -1) {
          dispatch_once(&qword_101934810, &stru_10183CAD0);
        }
        uint64_t v20 = qword_101934818;
        sub_1002A6C50(v3, &buf);
        if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          p_std::string buf = &buf;
        }
        else {
          p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
        }
        int v28 = 136446210;
        uint64_t v29 = p_buf;
        std::string::size_type v22 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v20,  17LL,  "could not create input stream for ephemeris file, %{public}s",  &v28,  12);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLAccessoryLocationProvider::sendReferenceEphemeris()",  "%s\n",  (const char *)v22);
        if (v22 != __p) {
          free(v22);
        }
      }

      id v7 = 0LL;
    }

    CFRelease(v3);
    CFRelease(v4);
    if ([v7 length]) {
      return;
    }
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    uint64_t v18 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_FAULT))
    {
      sub_100386874(v1, (uint64_t)__p);
      uint64_t v19 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0 ? __p : (std::string *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "could not create data from file %{public}s",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    uint64_t v23 = qword_101934818;
    sub_100386874(v1, (uint64_t)&buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v24 = &buf;
    }
    else {
      std::string::size_type v24 = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    int v28 = 136446210;
    uint64_t v29 = v24;
    LODWORD(v25) = 12;
    id v15 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v23,  17LL,  "could not create data from file %{public}s",  &v28,  v25);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLAccessoryLocationProvider::sendReferenceEphemeris()",  "%s\n",  (const char *)v15);
LABEL_71:
    if (v15 != __p) {
      free(v15);
    }
    return;
  }

  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_10183CAD0);
  }
  uint64_t v11 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
  {
    sub_1003867D0(v1, (uint64_t)__p);
    __int16 v12 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0 ? __p : (std::string *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning ephemeris %s not available",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    uint64_t v13 = qword_101934818;
    sub_1003867D0(v1, (uint64_t)&buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v14 = &buf;
    }
    else {
      __int16 v14 = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    int v28 = 136315138;
    uint64_t v29 = v14;
    id v15 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v13,  0LL,  "#Warning ephemeris %s not available",  (const char *)&v28);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::sendReferenceEphemeris()",  "%s\n",  (const char *)v15);
    goto LABEL_71;
  }

void sub_1004D8E58( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004D8E7C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 1684) && (*(_DWORD *)(a1 + 1680) & 0x80000000) != 0)
  {
    uint64_t v2 = (const char *)(a1 + 1688);
    int v3 = open(v2, 526, 420LL);
    *(_DWORD *)(a1 + 168sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v3;
    if (v3 < 0)
    {
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      CFURLRef v4 = (os_log_s *)qword_101934818;
      if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
      {
        int v5 = *(_DWORD *)(a1 + 1680);
        id v6 = __error();
        id v7 = strerror(*v6);
        *(_DWORD *)std::string buf = 67109378;
        int v18 = v5;
        __int16 v19 = 2080;
        uint64_t v20 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Unable to open nmea fifo FD %d %s.",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934810 != -1) {
          dispatch_once(&qword_101934810, &stru_10183CAD0);
        }
        uint64_t v8 = qword_101934818;
        int v9 = *(_DWORD *)(a1 + 1680);
        unsigned __int8 v10 = __error();
        uint64_t v11 = strerror(*v10);
        v14[0] = 67109378;
        v14[1] = v9;
        __int16 v15 = 2080;
        uint64_t v16 = v11;
        LODWORD(v13) = 18;
        __int16 v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  2LL,  "Unable to open nmea fifo FD %d %s.",  v14,  v13);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAccessoryLocationProvider::openNmeaPipe()", "%s\n", v12);
      }
    }
  }

void sub_1004D9098(id a1, BOOL a2, id a3)
{
  BOOL v3 = a2;
  (*((void (**)(void *__return_ptr, id))a3 + 2))(v7, a3);
  if (!v3 || *(double *)((char *)&v7[2] + 4) < 0.0)
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    CFURLRef v4 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#Warning no reference location available, not sending reference location",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      v6[0] = 0;
      int v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "#Warning no reference location available, not sending reference location",  v6,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::sendReferenceLocation()_block_invoke",  "%s\n",  v5);
    }
  }

void sub_1004D9240(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4)
{
  unsigned int v6 = *a3;
  if ((int)*a3 > 3)
  {
    switch(v6)
    {
      case 0x1Bu:
        sub_1004D94E4((id *)a1, a4);
        return;
      case 0xAu:
        sub_100B027B0(a1 + 1376, a4);
        sub_1004F0078(a1 + 1720, a4);
        sub_100DAEA48((_OWORD *)(a1 + 2328), a4);
        return;
      case 4u:
        goto LABEL_3;
    }
  }

  else if (v6 < 3)
  {
LABEL_3:
    if (!*(_BYTE *)(a1 + 1714)) {
      sub_1004D85F0(a1);
    }
    return;
  }

  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_10183CAD0);
  }
  uint64_t v8 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v9 = *a3;
    *(_DWORD *)std::string buf = 67109120;
    unsigned int v14 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#Warning received an unknown location notification %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    unsigned int v10 = *a3;
    v12[0] = 67109120;
    v12[1] = v10;
    uint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "#Warning received an unknown location notification %d",  v12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v11);
  }

id *sub_1004D94E4(id *result, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 96) == 3 && *(_BYTE *)(a2 + 516) != 0)
  {
    CFURLRef v4 = result;
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_10183CAF0);
    }
    int v5 = (os_log_s *)qword_101934A98;
    if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(void *)(a2 + 4);
      uint64_t v7 = *(void *)(a2 + 12);
      uint64_t v8 = *(void *)(a2 + 20);
      uint64_t v9 = *(void *)(a2 + 44);
      uint64_t v10 = *(void *)(a2 + 60);
      uint64_t v11 = *(void *)(a2 + 184);
      int v12 = *(_DWORD *)(a2 + 128);
      *(_DWORD *)std::string buf = 136317186;
      CFAbsoluteTime v40 = "CL-AccessoryPropagated";
      __int16 v41 = 1024;
      int v42 = 1;
      __int16 v43 = 2048;
      uint64_t v44 = v6;
      __int16 v45 = 2048;
      uint64_t v46 = v7;
      __int16 v47 = 2048;
      uint64_t v48 = v8;
      __int16 v49 = 2048;
      uint64_t v50 = v9;
      __int16 v51 = 2048;
      uint64_t v52 = v10;
      __int16 v53 = 2048;
      uint64_t v54 = v11;
      __int16 v55 = 1024;
      int v56 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Speed,%.2f,Course,%.2f,timestampGps,%.2lf,GgaOnly,integrity,%d",  buf,  0x54u);
    }

    if (sub_1002921D0(117, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A90 != -1) {
        dispatch_once(&qword_101934A90, &stru_10183CAF0);
      }
      uint64_t v13 = *(void *)(a2 + 4);
      uint64_t v14 = *(void *)(a2 + 12);
      uint64_t v15 = *(void *)(a2 + 20);
      uint64_t v16 = *(void *)(a2 + 44);
      uint64_t v17 = *(void *)(a2 + 60);
      uint64_t v18 = *(void *)(a2 + 184);
      int v19 = *(_DWORD *)(a2 + 128);
      int v21 = 136317186;
      std::string::size_type v22 = "CL-AccessoryPropagated";
      __int16 v23 = 1024;
      int v24 = 1;
      __int16 v25 = 2048;
      uint64_t v26 = v13;
      __int16 v27 = 2048;
      uint64_t v28 = v14;
      __int16 v29 = 2048;
      uint64_t v30 = v15;
      __int16 v31 = 2048;
      uint64_t v32 = v16;
      __int16 v33 = 2048;
      uint64_t v34 = v17;
      __int16 v35 = 2048;
      uint64_t v36 = v18;
      __int16 v37 = 1024;
      int v38 = v19;
      uint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Speed,%.2f,Course,%.2f,timestampGps,%.2lf,GgaOnly,integrity,%d",  (const char *)&v21,  84);
      sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::sendPropagatedLocation(const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v20);
    }

    *(_DWORD *)std::string buf = 0;
    (*((void (**)(id *, uint8_t *, uint64_t, void, uint64_t, void))*v4 + 19))( v4,  buf,  a2,  0LL,  0xFFFFFFFFLL,  0LL);
    return (id *)[v4[123] setNextFireDelay:5.0];
  }

  return result;
}

void sub_1004D97BC(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 4 && *(_DWORD *)(a4 + 188) != 1)
  {
    sub_1004D9980(a1 + 1720);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    int v5 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 134349056;
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLAccessoryAWD,%{public}.1lf,NmeaScreener reset",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      uint64_t v6 = qword_101934818;
      int v8 = 134349056;
      CFAbsoluteTime v9 = CFAbsoluteTimeGetCurrent();
      uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v6,  2LL,  "CLAccessoryAWD,%{public}.1lf,NmeaScreener reset",  &v8,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::onClientManagerNotification(int, const CLClientManager_Type::Notification &, c onst CLClientManager_Type::NotificationData &)",  "%s\n",  v7);
    }
  }

__n128 sub_1004D9980(uint64_t a1)
{
  *(void *)(a1 + sub_1000A56E8(v1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  *(__n128 *)(a1 + 88) = result;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 136) = 0LL;
  *(void *)(a1 + 144) = 0LL;
  *(__n128 *)(a1 + 152) = result;
  *(void *)(a1 + 168) = 0LL;
  *(void *)(a1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(a1 + 208) = 0LL;
  *(__n128 *)(a1 + 216) = result;
  *(void *)(a1 + 232) = 0LL;
  *(void *)(a1 + 264) = 0LL;
  *(void *)(a1 + 2sub_1000A56E8(v1 + 72) = 0LL;
  *(void *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0xBFF0000000000000LL;
  *(void *)(a1 + 288) = 0xBFF0000000000000LL;
  *(void *)(a1 + 296) = 0LL;
  *(void *)(a1 + 328) = 0LL;
  *(void *)(a1 + 336) = 0LL;
  *(void *)(a1 + 344) = 0xBFF0000000000000LL;
  *(void *)(a1 + 352) = 0xBFF0000000000000LL;
  *(void *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(a1 + 424) = 0LL;
  *(_BYTE *)(a1 + 432) = 1;
  *(_WORD *)(a1 + 456) = 0;
  *(void *)(a1 + 464) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 4sub_1000A56E8(v1 + 72) = 50;
  return result;
}

void sub_1004D99E8(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_10183CAD0);
  }
  uint64_t v7 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
  {
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    double v9 = sub_101171D4C();
    int v10 = *a3;
    uint64_t v11 = a4 + 8;
    *(_DWORD *)std::string buf = 134349827;
    CFAbsoluteTime v29 = Current;
    __int16 v30 = 2050;
    double v31 = v9;
    __int16 v32 = 1026;
    int v33 = v10;
    __int16 v34 = 2081;
    uint64_t v35 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLAccessoryAWD,%{public}.1lf,machContTime,%{public}.1lf,onApp,ReceivedAppNotification,%{public}d,%{private}s",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    uint64_t v12 = qword_101934818;
    CFAbsoluteTime v13 = CFAbsoluteTimeGetCurrent();
    double v14 = sub_101171D4C();
    int v15 = *a3;
    uint64_t v16 = a4 + 8;
    int v20 = 134349827;
    CFAbsoluteTime v21 = v13;
    __int16 v22 = 2050;
    double v23 = v14;
    __int16 v24 = 1026;
    int v25 = v15;
    __int16 v26 = 2081;
    uint64_t v27 = v16;
    uint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  2LL,  "CLAccessoryAWD,%{public}.1lf,machContTime,%{public}.1lf,onApp,ReceivedAppNotification,%{public}d,%{private}s",  &v20,  38);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::onAppNotification(int, const CLAppMonitor_Type::Notification &, const CLAppMonit or_Type::NotificationData &)",  "%s\n",  v17);
  }

  if (*(char *)(a4 + 31) < 0)
  {
    sub_1010DD48C(__p, *(void **)(a4 + 8), *(void *)(a4 + 16));
  }

  else
  {
    *(_OWORD *)__int128 __p = *(_OWORD *)(a4 + 8);
    uint64_t v19 = *(void *)(a4 + 24);
  }

  sub_1004D7EFC(a1, (unsigned __int8 *)__p, (*a3 - 1) < 2);
  if (SHIBYTE(v19) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1004D9C94( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004D9CB8(uint64_t a1, int *a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)&qword_101996118);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_101996118))
  {
    sub_1010DDBC0(&xmmword_101996100, "com.apple.Maps");
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_101996100, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101996118);
  }

  sub_100DAEA28(a1 + 2328, *a2);
  int v5 = (uint64_t **)(a1 + 5928);
  if (!sub_1004DAD38((uint64_t)v5, (const void **)&xmmword_101996100))
  {
    double v6 = sub_101171D4C();
    if (byte_101996117 < 0)
    {
      sub_1010DD48C(__p, (void *)xmmword_101996100, *((unint64_t *)&xmmword_101996100 + 1));
    }

    else
    {
      *(_OWORD *)__int128 __p = xmmword_101996100;
      uint64_t v8 = unk_101996110;
    }

    double v9 = v6;
    sub_1004DACA0(v5, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v8) < 0) {
      operator delete(__p[0]);
    }
  }

void sub_1004D9DCC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void sub_1004D9DFC(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 7)
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183CAD0);
    }
    double v6 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      int v8 = *(unsigned __int8 *)(a4 + 9);
      int v9 = *(_DWORD *)(a4 + 12);
      *(_DWORD *)std::string buf = 134349568;
      CFAbsoluteTime v26 = Current;
      __int16 v27 = 1026;
      int v28 = v8;
      __int16 v29 = 1026;
      int v30 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLAccessoryAWD,%{public}.1lf,ReceivedBatteryNotification,connected,%{public}d,type,%{public}d",  buf,  0x18u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183CAD0);
      }
      uint64_t v14 = qword_101934818;
      CFAbsoluteTime v15 = CFAbsoluteTimeGetCurrent();
      int v16 = *(unsigned __int8 *)(a4 + 9);
      int v17 = *(_DWORD *)(a4 + 12);
      int v19 = 134349568;
      CFAbsoluteTime v20 = v15;
      __int16 v21 = 1026;
      int v22 = v16;
      __int16 v23 = 1026;
      int v24 = v17;
      uint64_t v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v14,  2LL,  "CLAccessoryAWD,%{public}.1lf,ReceivedBatteryNotification,connected,%{public}d,type,%{public}d",  &v19,  24);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::onBatteryNotification(int, const CLDaemonStatus_Type::Notification &, const CL DaemonStatus_Type::NotificationData &)",  "%s\n",  v18);
    }

    double v10 = *(double *)(a1 + 5912);
    if (!*(_BYTE *)(a4 + 9) || v10 >= 0.0)
    {
      if (v10 <= 0.0 || !*(_BYTE *)(a1 + 5908)) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(a1 + 5920) == *(_DWORD *)(a4 + 12))
      {
        if (*(_BYTE *)(a4 + 9)) {
          goto LABEL_15;
        }
        double v13 = sub_101171D4C();
        sub_100DAE3D8((uint64_t *)(a1 + 2328), *(_DWORD *)(a1 + 5920), v13, *(double *)(a1 + 5912));
        double v11 = -1.0;
LABEL_10:
        *(double *)(a1 + 5912) = v11;
LABEL_15:
        *(_BYTE *)(a1 + 5908) = *(_BYTE *)(a4 + 9);
        *(_DWORD *)(a1 + 592sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_DWORD *)(a4 + 12);
        return;
      }

      double v12 = sub_101171D4C();
      sub_100DAE3D8((uint64_t *)(a1 + 2328), *(_DWORD *)(a1 + 5920), v12, *(double *)(a1 + 5912));
    }

    double v11 = sub_101171D4C();
    goto LABEL_10;
  }

uint64_t *sub_1004DA090(uint64_t a1, int a2, int a3)
{
  if (a3 == 1)
  {
    if (a2)
    {
      [*(id *)(a1 + 984) nextFireDelay];
      if (v6 > 0.02)
      {
        [*(id *)(a1 + 984) nextFireDelay];
        if (v7 <= 5.0)
        {
          if (qword_101934810 != -1) {
            dispatch_once(&qword_101934810, &stru_10183CAD0);
          }
          int v8 = (os_log_s *)qword_101934818;
          if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
          {
            [*(id *)(a1 + 984) nextFireDelay];
            *(_DWORD *)std::string buf = 67240448;
            int v18 = 1;
            __int16 v19 = 2050;
            uint64_t v20 = v9;
            _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "CLNMEAScreener,screen,nmea log rejected, notify location is unavailable from accessory,sending unavailable notification,locTypeUsedForScreening,%{public}d,nextFireDelay,%{public}.2lf",  buf,  0x12u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934810 != -1) {
              dispatch_once(&qword_101934810, &stru_10183CAD0);
            }
            uint64_t v11 = qword_101934818;
            [*(id *)(a1 + 984) nextFireDelay];
            v14[0] = 67240448;
            v14[1] = 1;
            __int16 v15 = 2050;
            uint64_t v16 = v12;
            double v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v11,  0LL,  "CLNMEAScreener,screen,nmea log rejected, notify location is unavailable from accessory,sendi ng unavailable notification,locTypeUsedForScreening,%{public}d,nextFireDelay,%{public}.2lf",  v14,  18);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLAccessoryLocationProvider::onNMEAScreenerCallBack(BOOL, CLLocationType)",  "%s\n",  v13);
          }

          [*(id *)(a1 + 984) setNextFireDelay:0.02];
        }
      }
    }
  }

  return sub_100DAF400(a1 + 2328, a2, a3);
}

void sub_1004DA2D8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  int v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLAccessoryLocationProvider");
  sub_10047D890((uint64_t)v8, (uint64_t *)__p, a3, a1, a2);
  *int v8 = &off_10183CA68;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1004DA370( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_1004DA39C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  char v10 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLAccessoryLocationProvider");
  sub_10047D8C8((uint64_t)v10, a1, (uint64_t *)__p, a4, a2, a3);
  *char v10 = &off_10183CA68;
  *a5 = v10;
  if (v12 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1004DA43C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

id sub_1004DA468(uint64_t a1)
{
  return objc_msgSend( -[CLServiceVendor proxyForService:]( +[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance"),  "proxyForService:",  @"CLAccessoryLocationProvider"),  "syncgetDoSync:",  a1);
}

void sub_1004DA4A0(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

double sub_1004DA4CC(uint64_t a1)
{
  *(_BYTE *)(v1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  double result = 0.0;
  *(_OWORD *)(v1 + 392) = 0u;
  *(_OWORD *)(v1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 552) = 0u;
  *(_OWORD *)(v1 + 584) = 0u;
  *(_OWORD *)(v1 + 532) = 0u;
  *(_OWORD *)(v1 + 504) = 0u;
  *(_OWORD *)(v1 + 52sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 632) = 0u;
  *(_OWORD *)(v1 + 648) = 0u;
  *(_OWORD *)(v1 + 728) = 0u;
  *(_OWORD *)(v1 + 792) = 0u;
  *(_OWORD *)(v1 + 824) = 0u;
  *(_OWORD *)(v1 + 8sub_1000A56E8(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 888) = 0u;
  *(_OWORD *)(v1 + 952) = 0u;
  *(_OWORD *)(v1 + 1032) = 0u;
  *(_OWORD *)(v1 + 1048) = 0u;
  *(_OWORD *)(v1 + 1016) = 0u;
  *(_OWORD *)(v1 + 114sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 1128) = 0u;
  *(_OWORD *)(v1 + 1112) = 0u;
  *(_OWORD *)(v1 + 1176) = 0u;
  *(_OWORD *)(v1 + 116sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 1268) = 0u;
  *(_OWORD *)(v1 + 1sub_1004C7BE0(v1 - 256) = 0u;
  *(_OWORD *)(v1 + 124sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 1304) = 0u;
  *(_OWORD *)(v1 + 1288) = 0u;
  *(_OWORD *)(v1 + 1396) = 0u;
  *(_OWORD *)(v1 + 1384) = 0u;
  *(_OWORD *)(v1 + 1368) = 0u;
  *(_OWORD *)(v1 + 1416) = 0u;
  *(_OWORD *)(v1 + 148sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 1544) = 0u;
  *(_OWORD *)(v1 + 1608) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  *(_OWORD *)(v1 + 316) = 0u;
  *(_OWORD *)(v1 + 304) = 0u;
  *(_OWORD *)(v1 + 364) = 0u;
  *(void *)(v1 + 384) = v1 + 392;
  *(void *)(v1 + 408) = v1 + 416;
  *(void *)(v1 + 432) = v1 + 440;
  *(void *)(v1 + 456) = v1 + 464;
  *(void *)(v1 + 576) = v1 + 584;
  *(void *)(v1 + 60sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v1 + 608;
  *(void *)(v1 + 624) = v1 + 632;
  *(_OWORD *)(v1 + 6sub_1000A56E8(v1 + 72) = 0u;
  *(void *)(v1 + 696) = v1 + 704;
  *(void *)(v1 + 72sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v1 + 728;
  *(void *)(v1 + 744) = v1 + 752;
  *(void *)(v1 + 816) = v1 + 824;
  *(void *)(v1 + 84sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v1 + 848;
  *(void *)(v1 + 864) = v1 + 872;
  *(_OWORD *)(v1 + 912) = 0u;
  *(void *)(v1 + 944) = v1 + 952;
  *(void *)(v1 + 968) = v1 + 976;
  *(void *)(v1 + 1064) = v1 + 1072;
  *(void *)(v1 + 1192) = v1 + 1200;
  *(void *)(v1 + 132sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v1 + 1328;
  *(void *)(v1 + 1448) = v1 + 1456;
  *(void *)(v1 + 48) = 0xBFF0000000000000LL;
  *(_DWORD *)(v1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + sub_1000A56E8(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 213) = 0u;
  *(void *)(v1 + 248) = 0LL;
  *(_DWORD *)(v1 + sub_1004C7BE0(v1 - 256) = 0;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_OWORD *)(v1 + 288) = 0u;
  *(_OWORD *)(v1 + 336) = 0u;
  *(_OWORD *)(v1 + 352) = 0u;
  *(_OWORD *)(v1 + 416) = 0u;
  *(_OWORD *)(v1 + 464) = 0u;
  *(_OWORD *)(v1 + 48sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_DWORD *)(v1 + 496) = 0;
  *(void *)(v1 + 568) = 0LL;
  *(_OWORD *)(v1 + 608) = 0u;
  *(_DWORD *)(v1 + 664) = 0;
  *(void *)(v1 + 688) = 0LL;
  *(_OWORD *)(v1 + 704) = 0u;
  *(_DWORD *)(v1 + 784) = 0;
  *(_OWORD *)(v1 + 752) = 0u;
  *(_OWORD *)(v1 + 768) = 0u;
  *(void *)(v1 + 808) = 0LL;
  *(_OWORD *)(v1 + 848) = 0u;
  *(_DWORD *)(v1 + 904) = 0;
  *(void *)(v1 + 928) = 0LL;
  *(_DWORD *)(v1 + 936) = 0;
  *(_DWORD *)(v1 + 1008) = 0;
  *(_OWORD *)(v1 + 976) = 0u;
  *(_OWORD *)(v1 + 992) = 0u;
  *(_OWORD *)(v1 + 10sub_1000A56E8(v1 + 72) = 0u;
  *(_DWORD *)(v1 + 1104) = 0;
  *(_OWORD *)(v1 + 1088) = 0u;
  *(_OWORD *)(v1 + 120sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_DWORD *)(v1 + 1232) = 0;
  *(_OWORD *)(v1 + 1216) = 0u;
  *(_OWORD *)(v1 + 1328) = 0u;
  *(_DWORD *)(v1 + 136sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *(_OWORD *)(v1 + 1344) = 0u;
  *(_OWORD *)(v1 + 1456) = 0u;
  *(_DWORD *)(v1 + 144sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *(void *)(v1 + 1432) = 0LL;
  *(void *)(v1 + 14sub_1000A56E8(v1 + 72) = v1 + 1480;
  *(_OWORD *)(v1 + 1504) = 0u;
  *(void *)(v1 + 1496) = v1 + 1504;
  *(void *)(v1 + 152sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(_DWORD *)(v1 + 1528) = 0;
  *(void *)(v1 + 1536) = v1 + 1544;
  *(void *)(v1 + 156sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(_DWORD *)(v1 + 1568) = 0;
  *(_OWORD *)(v1 + 1584) = 0u;
  *(void *)(v1 + 1576) = v1 + 1584;
  *(void *)(v1 + 160sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v1 + 1608;
  *(_OWORD *)(v1 + 1632) = 0u;
  *(void *)(v1 + 1624) = v1 + 1632;
  *(_OWORD *)(v1 + 168sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_DWORD *)(v1 + 1664) = 0;
  *(_OWORD *)(v1 + 1648) = 0u;
  *(void *)(v1 + 16sub_1000A56E8(v1 + 72) = v1 + 1680;
  *(_OWORD *)(v1 + 2921) = 0u;
  *(_OWORD *)(v1 + 2912) = 0u;
  *(_OWORD *)(v1 + 2896) = 0u;
  *(_OWORD *)(v1 + 288sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 2864) = 0u;
  *(_OWORD *)(v1 + 2848) = 0u;
  *(_OWORD *)(v1 + 2832) = 0u;
  *(_OWORD *)(v1 + 2816) = 0u;
  *(_OWORD *)(v1 + 280sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 2784) = 0u;
  *(_OWORD *)(v1 + 2768) = 0u;
  *(_OWORD *)(v1 + 1904) = 0u;
  *(_OWORD *)(v1 + 1888) = 0u;
  *(_OWORD *)(v1 + 18sub_1000A56E8(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 1856) = 0u;
  *(_OWORD *)(v1 + 184sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 1824) = 0u;
  *(_OWORD *)(v1 + 1808) = 0u;
  *(_OWORD *)(v1 + 1792) = 0u;
  *(_OWORD *)(v1 + 1776) = 0u;
  *(_OWORD *)(v1 + 176sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v1 + 1744) = 0u;
  *(_OWORD *)(v1 + 1728) = 0u;
  *(_OWORD *)(v1 + 1712) = 0u;
  *(_OWORD *)(v1 + 1696) = 0u;
  *(_WORD *)(v1 + 2937) = 257;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(v1 + 2944) = _Q1;
  *(_OWORD *)(v1 + 296sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = _Q1;
  *(_OWORD *)(v1 + 2976) = _Q1;
  *(void *)(v1 + 2992) = 0xBFF0000000000000LL;
  *(_WORD *)(v1 + 3024) = 0;
  *(void *)(v1 + 3016) = 0LL;
  *(_OWORD *)(v1 + 300sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  return result;
}

void sub_1004DA7EC(id a1)
{
  qword_101934818 = (uint64_t)os_log_create("com.apple.locationd.Position", "GpsAccessory");
}

void sub_1004DA818(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  int v4 = *(_DWORD *)(a1 + 8);
  int v5 = *(void **)a1;
  if (v4)
  {
    else {
      unint64_t v6 = (64 - v4);
    }
    *v5++ &= ~((0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1LL << v4));
    unint64_t v2 = a2 - v6;
    *(void *)a1 = v5;
  }

  unint64_t v7 = v2 >> 6;
  if (v2 >= 0x40) {
    bzero(v5, 8 * v7);
  }
  if ((v2 & 0x3F) != 0)
  {
    int v8 = &v5[v7];
    *(void *)a1 = v8;
    *v8 &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F));
  }

uint64_t sub_1004DA8C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004DA954(uint64_t a1)
{
  return a1;
}

void sub_1004DAB1C(id a1)
{
  qword_101934A98 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

void *sub_1004DAB50(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = &off_10183CB20;
  result[1] = v3;
  return result;
}

uint64_t sub_1004DAB84(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183CB20;
  a2[1] = v2;
  return result;
}

uint64_t *sub_1004DABA0(uint64_t a1, unsigned __int8 *a2, int *a3)
{
  return sub_1004DA090(*(void *)(a1 + 8), *a2, *a3);
}

uint64_t sub_1004DABB0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1004DABEC()
{
}

void *sub_1004DAC00(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = &off_10183CBB0;
  result[1] = v3;
  return result;
}

uint64_t sub_1004DAC34(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183CBB0;
  a2[1] = v2;
  return result;
}

void sub_1004DAC50(uint64_t a1, int *a2)
{
}

uint64_t sub_1004DAC58(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1004DAC94()
{
}

_OWORD *sub_1004DACA0(uint64_t **a1, const void **a2, uint64_t a3)
{
  int v5 = (void **)sub_1000227E8((uint64_t)a1, &v9, a2);
  unint64_t v6 = *v5;
  if (!*v5)
  {
    unint64_t v7 = (uint64_t **)v5;
    unint64_t v6 = operator new(0x40uLL);
    _WORD v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0LL;
    *(void *)(a3 + 8) = 0LL;
    *(void *)(a3 + 16) = 0LL;
    *((void *)v6 + 7) = *(void *)(a3 + 24);
    sub_1000085FC(a1, v9, v7, (uint64_t *)v6);
  }

  return v6;
}

uint64_t sub_1004DAD38(uint64_t a1, const void **a2)
{
  uint64_t v2 = *(const void ***)(a1 + 8);
  if (v2)
  {
    uint64_t v4 = a1 + 16;
    uint64_t v5 = 1LL;
    do
    {
      if (!sub_100022920(v4, a2, v2 + 4))
      {
        if (!sub_100022920(v4, v2 + 4, a2)) {
          return v5;
        }
        ++v2;
      }

      uint64_t v2 = (const void **)*v2;
    }

    while (v2);
  }

  return 0LL;
}

void sub_1004DADB4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_1012EE4A0;
      v1[3] = unk_1012EE4B0;
      v1[4] = xmmword_1012EE4C0;
      v1[0] = xmmword_1012EE480;
      v1[1] = unk_1012EE490;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_1004DAE88(_Unwind_Exception *a1)
{
}

void sub_1004DAEA0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_1004DAF04()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_1004DAF78(_Unwind_Exception *a1)
{
}

uint64_t sub_1004DAF90()
{
  return __cxa_atexit( (void (*)(void *))&std::string::~string,  &xmmword_1019960C0,  (void *)&_mh_execute_header);
}

BOOL sub_1004DAFD4(uint64_t a1, void *a2, int a3, uint64_t a4)
{
  *(void *)a1 = *(void *)(a4 + 8);
  if (!*a2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10183CC20);
    }
    char v12 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      double v13 = *(double *)a1;
      *(_DWORD *)std::string buf = 134349056;
      *(double *)&uint8_t buf[4] = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "CLMMLE,%{public}.1lf,road is nullptr",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10183CC20);
    }
    double v14 = *(double *)a1;
    *(_DWORD *)float64_t v171 = 134349056;
    *(double *)&v171[4] = v14;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMLE,%{public}.1lf,road is nullptr",  v171,  12);
    uint64_t v11 = (char *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLaneEstimator::estimateLane(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &)",  "%s\n",  v15);
    goto LABEL_205;
  }

  if (!*(void *)(a1 + 144))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10183CC20);
    }
    uint64_t v16 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      double v17 = *(double *)a1;
      *(_DWORD *)std::string buf = 134349056;
      *(double *)&uint8_t buf[4] = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "CLMMLE,%{public}.1lf,Flowline data not available",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10183CC20);
    }
    double v18 = *(double *)a1;
    *(_DWORD *)float64_t v171 = 134349056;
    *(double *)&v171[4] = v18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMLE,%{public}.1lf,Flowline data not available",  v171,  12);
    uint64_t v11 = (char *)v19;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLaneEstimator::estimateLane(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &)",  "%s\n",  v19);
    goto LABEL_205;
  }

  if (*(_BYTE *)(a4 + 264)) {
    BOOL v6 = *(_BYTE *)(a4 + 265) == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    if (!sub_1002954D0(*(double *)(a4 + 56), *(double *)(a4 + 64))
      || sub_10029286C(*(double *)(a4 + 56), *(double *)(a4 + 64)))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183CC20);
      }
      int v22 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        double v23 = *(double *)a1;
        *(_DWORD *)std::string buf = 134349056;
        *(double *)&uint8_t buf[4] = v23;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "CLMMLE,%{public}.1lf,raw coordinate is not valid",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183CC20);
      }
      double v24 = *(double *)a1;
      *(_DWORD *)float64_t v171 = 134349056;
      *(double *)&v171[4] = v24;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMLE,%{public}.1lf,raw coordinate is not valid",  v171,  12);
      uint64_t v11 = (char *)v25;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLaneEstimator::estimateLane(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &)",  "%s\n",  v25);
      goto LABEL_205;
    }

    if (!sub_1002954D0(*(double *)(a4 + 288), *(double *)(a4 + 296))
      || sub_10029286C(*(double *)(a4 + 288), *(double *)(a4 + 296)))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183CC20);
      }
      CFAbsoluteTime v26 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        double v27 = *(double *)a1;
        *(_DWORD *)std::string buf = 134349056;
        *(double *)&uint8_t buf[4] = v27;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "CLMMLE,%{public}.1lf,snapped coordinate is not valid",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183CC20);
      }
      double v141 = *(double *)a1;
      *(_DWORD *)float64_t v171 = 134349056;
      *(double *)&v171[4] = v141;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMLE,%{public}.1lf,snapped coordinate is not valid",  v171,  12);
      uint64_t v11 = (char *)v142;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLaneEstimator::estimateLane(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &)",  "%s\n",  v142);
      goto LABEL_205;
    }

    __int16 v166 = 0LL;
    float64_t v167 = 0LL;
    uint64_t v168 = 0LL;
    BOOL v28 = sub_1004DC8A0(a1, a2, a3, a4, &v166);
    if (v28)
    {
      *(void *)a1 = *(void *)(a4 + 8);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183CC20);
      }
      int v30 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        double v31 = *(double *)a1;
        uint64_t v32 = *(void *)(a4 + 288);
        uint64_t v33 = *(void *)(a4 + 296);
        *(_DWORD *)std::string buf = 134349825;
        *(double *)&uint8_t buf[4] = v31;
        *(_WORD *)&_BYTE buf[12] = 2049;
        *(void *)&buf[14] = v32;
        __int16 v177 = 2049;
        uint64_t v178 = v33;
        __int16 v179 = 2050;
        uint64_t v180 = ((char *)v167 - (char *)v166) >> 4;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "CLMMLE,%{public}.1lf,attempting lane estimation,LL,%{private}.7lf,%{private}.7lf,numFlowlines,%{public}lu",  buf,  0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183CC20);
        }
        double v143 = *(double *)a1;
        uint64_t v144 = *(void *)(a4 + 288);
        uint64_t v145 = *(void *)(a4 + 296);
        *(_DWORD *)float64_t v171 = 134349825;
        *(double *)&v171[4] = v143;
        *(_WORD *)&v171[12] = 2049;
        *(void *)&v171[14] = v144;
        __int16 v172 = 2049;
        uint64_t v173 = v145;
        __int16 v174 = 2050;
        uint64_t v175 = ((char *)v167 - (char *)v166) >> 4;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMLE,%{public}.1lf,attempting lane estimation,LL,%{private}.7lf,%{private}.7lf,numFlowlines,%{public}lu",  v171,  42);
        float64_t v147 = (char *)v146;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLaneEstimator::estimateLane(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &)",  "%s\n",  v146);
        if (v147 != buf) {
          free(v147);
        }
      }

      __int16 v164 = 0LL;
      uint64_t v165 = 0LL;
      __int16 v34 = v166;
      uint64_t v35 = v167;
      if (v166 != v167)
      {
        double v36 = *(double *)(a4 + 56);
        double v37 = *(double *)(a4 + 64);
        double v153 = -1.0;
        double v152 = -1.0;
        double v38 = -1.0;
        while (1)
        {
          uint64_t v39 = *v34;
          if (*v34) {
            break;
          }
LABEL_164:
          v34 += 2;
          if (v34 == v35)
          {
            float64_t v136 = v164;
            if (v164)
            {
              v156[0] = v164;
              v156[1] = v165;
              if (v165)
              {
                __int16 v137 = (unint64_t *)(v165 + 8);
                do
                  unint64_t v138 = __ldxr(v137);
                while (__stxr(v138 + 1, v137));
              }

              *(_DWORD *)(a1 + 24) = *((_DWORD *)v136 + 4);
              uint64_t v139 = *v136;
              *(void *)(a1 + 32) = 0x3FF0000000000000LL;
              *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v139;
              *(_OWORD *)(a1 + 48) = v163;
              *(double *)(a1 + 64) = v153;
              *(double *)(a1 + sub_1000A56E8(v1 + 72) = v38;
              *(double *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v152;
              sub_10000AE14((uint64_t)v156);
              double v140 = *(double *)a1;
              sub_1010DDBC0(&v154, "estimatedLane");
              sub_1004DD450(a1 + 8, v140);
              if (v155 < 0) {
                operator delete(v154);
              }
            }

            goto LABEL_200;
          }
        }

        CFAbsoluteTime v40 = *(double **)(v39 + 136);
        unint64_t v41 = *(void *)(v39 + 144) - (void)v40;
        if ((int)(v41 >> 4) > 1)
        {
          double v42 = *v40;
          double v43 = v40[1];
          *(_OWORD *)std::string buf = 0uLL;
          *(void *)float64_t v171 = 0LL;
          sub_100D2DA44( (double *)(a1 + 152),  (double *)buf,  (double *)&buf[8],  (double *)v171,  v36,  v37,  0.0,  v42,  v43,  0.0);
          uint64_t v44 = 0LL;
          uint64_t v45 = (v41 >> 4) - 1LL;
          double v46 = 0.0;
          double v47 = -1.0;
          double v48 = 0.0;
          while (1)
          {
            uint64_t v49 = *(void *)(v39 + 136) + v44;
            double v50 = *(double *)(v49 + 16);
            double v51 = *(double *)(v49 + 24);
            *(_OWORD *)float64_t v171 = 0uLL;
            v170[0] = 0.0;
            sub_100D2DA44((double *)(a1 + 152), (double *)v171, (double *)&v171[8], v170, v36, v37, 0.0, v50, v51, 0.0);
            double v53 = 0.0 - *(double *)buf;
            if (v52 >= 0.001)
            {
              double v55 = ((0.0 - *(double *)&buf[8]) * (*(double *)&v171[8] - *(double *)&buf[8])
              if (v55 < 0.0)
              {
                double v57 = v53 * v53 + (0.0 - *(double *)&buf[8]) * (0.0 - *(double *)&buf[8]);
                double v55 = 0.0;
                goto LABEL_68;
              }

              if (v55 > 1.0)
              {
                double v55 = 1.0;
                goto LABEL_68;
              }

              double v56 = 0.0 - (*(double *)&buf[8] + (*(double *)&v171[8] - *(double *)&buf[8]) * v55);
            }

            else
            {
              double v54 = v53 * v53;
              double v55 = 0.0;
              double v56 = 0.0 - *(double *)&buf[8];
            }

            double v57 = v54 + v56 * v56;
LABEL_68:
            double v58 = sqrt(v52);
            double v59 = sqrt(v57);
            BOOL v60 = v47 < 0.0;
            if (v59 < v47) {
              BOOL v60 = 1;
            }
            double v61 = v46 + v58 * v55;
            if (v60)
            {
              double v47 = v59;
              double v48 = v61;
            }

            double v46 = v46 + v58;
            *(_OWORD *)std::string buf = *(_OWORD *)v171;
            v44 += 16LL;
            if (!--v45)
            {
              if (v46 >= 0.001) {
                double v63 = v48 / v46;
              }
              else {
                double v63 = 0.0;
              }
              goto LABEL_84;
            }
          }
        }

        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183CC20);
        }
        unsigned __int8 v62 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEBUG,  "CLMM,findClosestPointOnRoad,CoordinateCount is <= 1",  buf,  2u);
        }

        double v47 = -1.0;
        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10183CC20);
          }
          *(_WORD *)float64_t v171 = 0;
          LODWORD(v148) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,findClosestPointOnRoad,CoordinateCount is <= 1",  v171,  v148);
          __int16 v126 = (char *)v125;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoAccessCommon::findClosestPointOnRoad(CLDistanceCalc &, const int, const std::vector<Coordinate> &, const Coordinate &, double &, double &) [Coordinate = CLClientLocationCoordinate]",  "%s\n",  v125);
          if (v126 != buf) {
            free(v126);
          }
        }

        double v63 = -1.0;
LABEL_84:
        uint64_t v65 = *v34;
        uint64_t v64 = (std::__shared_weak_count *)v34[1];
        uint64_t v161 = *v34;
        __int16 v162 = v64;
        if (v64)
        {
          p_shared_owners = (unint64_t *)&v64->__shared_owners_;
          do
            unint64_t v67 = __ldxr(p_shared_owners);
          while (__stxr(v67 + 1, p_shared_owners));
        }

        *(_OWORD *)float64_t v171 = 0uLL;
        if (v65)
        {
          uint64_t v68 = *(void *)(v65 + 136);
          unint64_t v69 = (unint64_t)(*(void *)(v65 + 144) - v68) >> 4;
          if ((int)v69 <= 0)
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10183CC20);
            }
            BOOL v80 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)std::string buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v80,  OS_LOG_TYPE_DEBUG,  "CLMM,interpolateProjections,CoordinateCount is 0",  buf,  2u);
            }

            double v70 = 0.0;
            if (!sub_1002921D0(115, 2)) {
              goto LABEL_138;
            }
            bzero(buf, 0x65CuLL);
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10183CC20);
            }
            LOWORD(v170[0]) = 0;
            LODWORD(v148) = 2;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,interpolateProjections,CoordinateCount is 0",  v170,  v148);
            __int128 v79 = (char *)v81;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, doub le &) [Coordinate = CLClientLocationCoordinate, RoadPtr = std::shared_ptr<CLMapFlowLine>]",  "%s\n",  v81);
          }

          else
          {
            double v70 = 0.0;
            if ((_DWORD)v69 == 1) {
              goto LABEL_138;
            }
            int v72 = *(double **)(v65 + 160);
            int v71 = *(double **)(v65 + 168);
            uint64_t v73 = v71 - v72;
            if (v73 == (_DWORD)v69 - 1)
            {
              if (v63 < 0.000001)
              {
                *(_OWORD *)float64_t v171 = *(_OWORD *)v68;
                double v74 = *(double *)(v68 + 16);
                double v75 = *(double *)(v68 + 24);
                *(void *)std::string buf = 0LL;
                uint64_t v169 = 0LL;
                v170[0] = 0.0;
                sub_100D2DA44( (double *)(a1 + 152),  (double *)buf,  v170,  (double *)&v169,  *(double *)v171,  *(double *)&v171[8],  0.0,  v74,  v75,  0.0);
LABEL_93:
                double v76 = atan2(v170[0], *(double *)buf);
                if (v76 < 0.0) {
                  double v76 = v76 + 6.28318531;
                }
                double v70 = v76 * 57.2957795;
                goto LABEL_138;
              }

              if (v63 >= 0.999999)
              {
                int v90 = (double *)(v68 + 16 * v73);
                *(_OWORD *)float64_t v171 = *(_OWORD *)v90;
                double v91 = sub_1004DD7AC((double *)(a1 + 152), *(v90 - 2), *(v90 - 1), *(double *)v171, *(double *)&v171[8]);
LABEL_137:
                double v70 = v91;
LABEL_138:
                if (v64)
                {
                  __int16 v92 = (unint64_t *)&v64->__shared_owners_;
                  do
                    unint64_t v93 = __ldaxr(v92);
                  while (__stlxr(v93 - 1, v92));
                  if (!v93)
                  {
                    ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
                    std::__shared_weak_count::__release_weak(v64);
                  }
                }

                if (v38 < 0.0 || v47 < v38)
                {
                  sub_1000F2F30(&v164, v34);
                  __int128 v163 = *(_OWORD *)v171;
                  double v38 = v47;
                  double v152 = v63;
                  double v153 = v70;
                }

                uint64_t v95 = v34[1];
                uint64_t v159 = *v34;
                __int16 v160 = (std::__shared_weak_count *)v95;
                if (v95)
                {
                  float64x2_t v96 = (unint64_t *)(v95 + 8);
                  do
                    unint64_t v97 = __ldxr(v96);
                  while (__stxr(v97 + 1, v96));
                }

                sub_1004DD6F4((uint64_t)buf, &v159, v171, v70, 1.0, v47, v63);
                double v98 = v160;
                if (v160)
                {
                  __int128 v99 = (unint64_t *)&v160->__shared_owners_;
                  do
                    unint64_t v100 = __ldaxr(v99);
                  while (__stlxr(v100 - 1, v99));
                  if (!v100)
                  {
                    ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
                    std::__shared_weak_count::__release_weak(v98);
                  }
                }

                double v101 = *(double *)a1;
                sub_1010DDBC0(&__p, "candidateLane");
                sub_1004DD450((uint64_t)buf, v101);
                if (v158 < 0) {
                  operator delete(__p);
                }
                __int128 v102 = *(std::__shared_weak_count **)&buf[8];
                if (*(void *)&buf[8])
                {
                  __int128 v103 = (unint64_t *)(*(void *)&buf[8] + 8LL);
                  do
                    unint64_t v104 = __ldaxr(v103);
                  while (__stlxr(v104 - 1, v103));
                  if (!v104)
                  {
                    ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
                    std::__shared_weak_count::__release_weak(v102);
                  }
                }

                goto LABEL_164;
              }

              if (v72 == v71)
              {
LABEL_128:
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10183CC20);
                }
                uint64_t v88 = (os_log_s *)qword_1019348B8;
                if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)std::string buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_DEBUG,  "CLMM,interpolateProjections,Could not interpolate to intended projection",  buf,  2u);
                }

                if (!sub_1002921D0(115, 2)) {
                  goto LABEL_138;
                }
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10183CC20);
                }
                LOWORD(v170[0]) = 0;
                LODWORD(v148) = 2;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,interpolateProjections,Could not interpolate to intended projection",  v170,  v148);
                __int128 v79 = (char *)v89;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = CLClientLocationCoordinate, RoadPtr = std::shared_ptr<CLMapFlowLine>]",  "%s\n",  v89);
              }

              else
              {
                double v84 = 0.0;
                int v85 = 2;
                uint64_t v86 = 24LL;
                while (1)
                {
                  double v87 = *v72 / *(double *)(v65 + 128);
                  if (vabdd_f64(v63, v84 + v87) < 0.000001) {
                    break;
                  }
                  if (v84 + v87 > v63)
                  {
                    uint64_t v114 = (double *)(v68 + v86);
                    double v115 = *(v114 - 2);
                    double v116 = *v114;
                    double v151 = (v63 - v84) / v87;
                    *(double *)float64_t v171 = *(v114 - 3) + (*(v114 - 1) - *(v114 - 3)) * v151;
                    *(double *)&v171[8] = v115 + sub_100D2D3E0(v115, v116) * v151;
                    sub_100292950(*(double *)&v171[8]);
                    *(void *)&v171[8] = v117;
                    uint64_t v118 = (double *)(*(void *)(v65 + 136) + v86);
                    double v119 = *(v118 - 3);
                    double v120 = *(v118 - 2);
                    double v121 = *(v118 - 1);
                    double v122 = *v118;
                    *(void *)std::string buf = 0LL;
                    uint64_t v169 = 0LL;
                    v170[0] = 0.0;
                    sub_100D2DA44( (double *)(a1 + 152),  (double *)buf,  v170,  (double *)&v169,  v119,  v120,  0.0,  v121,  v122,  0.0);
                    goto LABEL_93;
                  }

                  ++v72;
                  v86 += 16LL;
                  ++v85;
                  double v84 = v84 + v87;
                  if (v72 == v71) {
                    goto LABEL_128;
                  }
                }

                if (v85 < (int)v69)
                {
                  uint64_t v105 = v68 + v86;
                  *(_OWORD *)float64_t v171 = *(_OWORD *)(v105 - 8);
                  double v106 = *(double *)(v105 - 24);
                  double v107 = *(double *)(v105 - 16);
                  *(void *)std::string buf = 0LL;
                  uint64_t v169 = 0LL;
                  v170[0] = 0.0;
                  sub_100D2DA44( (double *)(a1 + 152),  (double *)buf,  v170,  (double *)&v169,  v106,  v107,  0.0,  *(double *)v171,  *(double *)&v171[8],  0.0);
                  double v108 = v170[0];
                  double v149 = *(double *)buf;
                  uint64_t v109 = *(void *)(v65 + 136) + v86;
                  double v110 = *(double *)(v109 + 8);
                  double v111 = *(double *)(v109 + 16);
                  *(void *)std::string buf = 0LL;
                  uint64_t v169 = 0LL;
                  v170[0] = 0.0;
                  sub_100D2DA44( (double *)(a1 + 152),  (double *)buf,  v170,  (double *)&v169,  *(double *)v171,  *(double *)&v171[8],  0.0,  v110,  v111,  0.0);
                  double v112 = atan2(v108, v149);
                  if (v112 < 0.0) {
                    double v112 = v112 + 6.28318531;
                  }
                  double v150 = v112 * 57.2957795;
                  double v113 = atan2(v170[0], *(double *)buf);
                  if (v113 < 0.0) {
                    double v113 = v113 + 6.28318531;
                  }
                  sub_1002928C4(v150, v113 * 57.2957795);
                  goto LABEL_137;
                }

                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10183CC20);
                }
                uint64_t v123 = (os_log_s *)qword_1019348B8;
                if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
                {
                  *(_WORD *)std::string buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v123,  OS_LOG_TYPE_ERROR,  "CLMM,interpolateProjections,Could not interpolate, incorrect coordinateCount",  buf,  2u);
                }

                double v70 = 0.0;
                if (!sub_1002921D0(115, 0)) {
                  goto LABEL_138;
                }
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_10183CC20);
                }
                LOWORD(v170[0]) = 0;
                LODWORD(v148) = 2;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,interpolateProjections,Could not interpolate, incorrect coordinateCount",  v170,  v148);
                __int128 v79 = (char *)v124;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = CLClientLocationCoordinate, RoadPtr = std::shared_ptr<CLMapFlowLine>]",  "%s\n",  v124);
              }
            }

            else
            {
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10183CC20);
              }
              BOOL v82 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
              {
                *(_WORD *)std::string buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v82,  OS_LOG_TYPE_DEBUG,  "CLMM,interpolateProjections,inconsistent array size",  buf,  2u);
              }

              if (!sub_1002921D0(115, 2)) {
                goto LABEL_138;
              }
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10183CC20);
              }
              LOWORD(v170[0]) = 0;
              LODWORD(v148) = 2;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,interpolateProjections,inconsistent array size",  v170,  v148);
              __int128 v79 = (char *)v83;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, do uble &) [Coordinate = CLClientLocationCoordinate, RoadPtr = std::shared_ptr<CLMapFlowLine>]",  "%s\n",  v83);
            }
          }
        }

        else
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10183CC20);
          }
          int v77 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)std::string buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v77, OS_LOG_TYPE_ERROR, "CLMM, NULL road", buf, 2u);
          }

          double v70 = 0.0;
          if (!sub_1002921D0(115, 0)) {
            goto LABEL_138;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10183CC20);
          }
          LOWORD(v170[0]) = 0;
          LODWORD(v148) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM, NULL road",  v170,  v148);
          __int128 v79 = (char *)v78;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = CLClientLocationCoordinate, RoadPtr = std::shared_ptr<CLMapFlowLine>]",  "%s\n",  v78);
        }

        if (v79 != buf) {
          free(v79);
        }
        goto LABEL_138;
      }

LABEL_200:
      sub_10000AE14((uint64_t)&v164);
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183CC20);
      }
      uint64_t v127 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        double v128 = *(double *)a1;
        uint64_t v129 = *(void *)(a4 + 288);
        uint64_t v130 = *(void *)(a4 + 296);
        *(_DWORD *)std::string buf = 134349569;
        *(double *)&uint8_t buf[4] = v128;
        *(_WORD *)&_BYTE buf[12] = 2049;
        *(void *)&buf[14] = v129;
        __int16 v177 = 2049;
        uint64_t v178 = v130;
        _os_log_impl( (void *)&_mh_execute_header,  v127,  OS_LOG_TYPE_DEBUG,  "CLMMLE,%{public}.1lf,could not find flowline data,LL,%{private}.7lf,%{private}.7lf",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183CC20);
        }
        double v131 = *(double *)a1;
        uint64_t v132 = *(void *)(a4 + 288);
        uint64_t v133 = *(void *)(a4 + 296);
        *(_DWORD *)float64_t v171 = 134349569;
        *(double *)&v171[4] = v131;
        *(_WORD *)&v171[12] = 2049;
        *(void *)&v171[14] = v132;
        __int16 v172 = 2049;
        uint64_t v173 = v133;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMLE,%{public}.1lf,could not find flowline data,LL,%{private}.7lf,%{private}.7lf",  v171,  32);
        __int16 v135 = (char *)v134;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLaneEstimator::estimateLane(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &)",  "%s\n",  v134);
        if (v135 != buf) {
          free(v135);
        }
      }
    }

    *(void *)std::string buf = &v166;
    sub_10004CC28((void ***)buf);
    return v28;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10183CC20);
  }
  unint64_t v7 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    double v8 = *(double *)a1;
    *(_DWORD *)std::string buf = 134349056;
    *(double *)&uint8_t buf[4] = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLMMLE,%{public}.1lf,Solution is not matched",  buf,  0xCu);
  }

  if (!sub_1002921D0(115, 2)) {
    return 0LL;
  }
  bzero(buf, 0x65CuLL);
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10183CC20);
  }
  double v9 = *(double *)a1;
  *(_DWORD *)float64_t v171 = 134349056;
  *(double *)&v171[4] = v9;
  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMLE,%{public}.1lf,Solution is not matched",  v171,  12);
  uint64_t v11 = (char *)v10;
  sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLaneEstimator::estimateLane(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &)",  "%s\n",  v10);
LABEL_205:
  if (v11 != buf) {
    free(v11);
  }
  return 0LL;
}

  __int128 v79 = *(_DWORD *)(a2 + 192);
  v5 |= 0x4000000000uLL;
  const char *v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 192) = v79;
  uint64_t v4 = *v3;
  unint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000000000LL) == 0)
  {
LABEL_95:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_202;
  }

  PB::TextFormatter::format(this, "stepsCadenceThreshold", *(float *)(a1 + 272));
  unint64_t v7 = *v5;
  if ((*v5 & 0x800000000000000LL) == 0)
  {
LABEL_99:
    if ((v7 & 0x1000000000000000LL) == 0) {
      goto LABEL_100;
    }
    goto LABEL_202;
  }

  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 192), 0x4B1u);
  uint64_t v5 = *v4;
  BOOL v6 = v4[1];
  if ((*v4 & 0x8000000000LL) == 0)
  {
LABEL_95:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_202;
  }

void sub_1004DC804( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, uint64_t a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, char a31, uint64_t a32, char a33, uint64_t a34, uint64_t a35, uint64_t a36, char *a37, uint64_t a38, char a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,char a51)
{
  a37 = &a39;
  sub_10004CC28((void ***)&a37);
  _Unwind_Resume(a1);
}

BOOL sub_1004DC8A0(uint64_t a1, void *a2, int a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a4 + 8);
  uint64_t v6 = *a2;
  if (*a2)
  {
    if (*(void *)(a1 + 144))
    {
      double v12 = *(double *)(v6 + 96);
      double v13 = 0.02;
      if (a3) {
        double v13 = -0.02;
      }
      double v14 = v13 + *(double *)(a4 + 272);
      double v15 = 1.0;
      if (v14 <= 1.0) {
        double v15 = v14;
      }
      uint64_t v16 = (std::__shared_weak_count *)a2[1];
      if (v14 >= 0.0) {
        double v17 = v15;
      }
      else {
        double v17 = 0.0;
      }
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          unint64_t v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
      }

      uint64_t v20 = (*(void *)(v6 + 144) - *(void *)(v6 + 136)) >> 4;
      if ((int)v20 <= 0)
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183CC20);
        }
        uint64_t v33 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          LOWORD(buf[0]) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "CLMM,interpolateProjections,CoordinateCount is 0",  (uint8_t *)buf,  2u);
        }

        double v21 = 0.0;
        if (!sub_1002921D0(115, 2)) {
          goto LABEL_50;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183CC20);
        }
        LOWORD(v82) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,interpolateProjections,CoordinateCount is 0",  &v82,  2);
        uint64_t v35 = (char *)v34;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = GEOLocationCoordinate2D, RoadPtr = std::shared_ptr<CLMapRoad>]",  "%s\n",  v34);
      }

      else
      {
        double v21 = 0.0;
        if ((_DWORD)v20 == 1) {
          goto LABEL_50;
        }
        sub_1001AC068((void *)v6);
        uint64_t v22 = (uint64_t)(*(void *)(v6 + 168) - *(void *)(v6 + 160)) >> 3;
        if (v22 != (_DWORD)v20 - 1)
        {
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10183CC20);
          }
          double v36 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(buf[0]) = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "CLMM,interpolateProjections,inconsistent array size",  (uint8_t *)buf,  2u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_50;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10183CC20);
          }
          LOWORD(v82) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,interpolateProjections,inconsistent array size",  &v82,  2);
          uint64_t v35 = (char *)v80;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = GEOLocationCoordinate2D, RoadPtr = std::shared_ptr<CLMapRoad>]",  "%s\n",  v80);
          goto LABEL_98;
        }

        sub_1001AC068((void *)v6);
        if (v17 < 0.000001)
        {
          double v23 = *(double **)(v6 + 136);
          double v21 = *v23;
          double v24 = v23[1];
          double v25 = v23[2];
          double v26 = v23[3];
          *(void *)&buf[0] = 0LL;
          uint64_t v81 = 0LL;
          *(void *)&__int128 v82 = 0LL;
          sub_100D2DA44( (double *)(a1 + 152),  (double *)buf,  (double *)&v82,  (double *)&v81,  v21,  v24,  0.0,  v25,  v26,  0.0);
          goto LABEL_51;
        }

        if (v17 >= 0.999999)
        {
          uint64_t v54 = *(void *)(v6 + 136) + 16 * v22;
          double v21 = *(double *)v54;
          double v24 = *(double *)(v54 + 8);
          sub_1004DD7AC((double *)(a1 + 152), *(double *)(v54 - 16), *(double *)(v54 - 8), *(double *)v54, v24);
          goto LABEL_51;
        }

        double v46 = *(double **)(v6 + 160);
        double v47 = *(double **)(v6 + 168);
        if (v46 == v47)
        {
LABEL_71:
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10183CC20);
          }
          double v52 = (os_log_s *)qword_1019348B8;
          if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(buf[0]) = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEBUG,  "CLMM,interpolateProjections,Could not interpolate to intended projection",  (uint8_t *)buf,  2u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_50;
          }
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10183CC20);
          }
          LOWORD(v82) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,interpolateProjections,Could not interpolate to intended projection",  &v82,  2);
          uint64_t v35 = (char *)v53;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = GEOLocationCoordinate2D, RoadPtr = std::shared_ptr<CLMapRoad>]",  "%s\n",  v53);
          goto LABEL_98;
        }

        double v48 = 0.0;
        int v49 = 2;
        uint64_t v50 = 24LL;
        while (1)
        {
          double v51 = *v46 / *(double *)(v6 + 40);
          if (vabdd_f64(v17, v48 + v51) < 0.000001) {
            break;
          }
          if (v48 + v51 > v17)
          {
            int v66 = (double *)(*(void *)(v6 + 136) + v50);
            double v68 = *(v66 - 3);
            double v67 = *(v66 - 2);
            double v69 = *(v66 - 1);
            double v70 = sub_100D2D3E0(v67, *v66);
            double v71 = (v17 - v48) / v51;
            sub_100292950(v67 + v70 * v71);
            double v24 = v72;
            uint64_t v73 = (double *)(*(void *)(v6 + 136) + v50);
            double v74 = *(v73 - 3);
            double v75 = *(v73 - 2);
            double v76 = *(v73 - 1);
            double v77 = *v73;
            *(void *)&buf[0] = 0LL;
            uint64_t v81 = 0LL;
            *(void *)&__int128 v82 = 0LL;
            sub_100D2DA44( (double *)(a1 + 152),  (double *)buf,  (double *)&v82,  (double *)&v81,  v74,  v75,  0.0,  v76,  v77,  0.0);
            double v21 = v68 + (v69 - v68) * v71;
            goto LABEL_51;
          }

          ++v46;
          v50 += 16LL;
          ++v49;
          double v48 = v48 + v51;
          if (v46 == v47) {
            goto LABEL_71;
          }
        }

        if (v49 < (int)v20)
        {
          double v55 = (double *)(*(void *)(v6 + 136) + v50);
          double v21 = *(v55 - 1);
          double v24 = *v55;
          double v56 = *(v55 - 3);
          double v57 = *(v55 - 2);
          *(void *)&buf[0] = 0LL;
          uint64_t v81 = 0LL;
          *(void *)&__int128 v82 = 0LL;
          sub_100D2DA44( (double *)(a1 + 152),  (double *)buf,  (double *)&v82,  (double *)&v81,  v56,  v57,  0.0,  v21,  v24,  0.0);
          double v58 = *(double *)&v82;
          double v59 = *(double *)buf;
          uint64_t v60 = *(void *)(v6 + 136) + v50;
          double v61 = *(double *)(v60 + 8);
          double v62 = *(double *)(v60 + 16);
          *(void *)&buf[0] = 0LL;
          uint64_t v81 = 0LL;
          *(void *)&__int128 v82 = 0LL;
          sub_100D2DA44( (double *)(a1 + 152),  (double *)buf,  (double *)&v82,  (double *)&v81,  v21,  v24,  0.0,  v61,  v62,  0.0);
          double v63 = atan2(v58, v59);
          if (v63 < 0.0) {
            double v63 = v63 + 6.28318531;
          }
          double v64 = v63 * 57.2957795;
          double v65 = atan2(*(double *)&v82, *(double *)buf);
          if (v65 < 0.0) {
            double v65 = v65 + 6.28318531;
          }
          sub_1002928C4(v64, v65 * 57.2957795);
LABEL_51:
          if (v16)
          {
            double v37 = (unint64_t *)&v16->__shared_owners_;
            do
              unint64_t v38 = __ldaxr(v37);
            while (__stlxr(v38 - 1, v37));
            if (!v38)
            {
              ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
              std::__shared_weak_count::__release_weak(v16);
            }
          }

          sub_100D2E0A8( (double *)(a1 + 152),  (double *)buf,  (double *)buf + 1,  v21,  v24,  *(double *)(a4 + 72),  *(double *)(a4 + 168),  v12 * 0.5 + 3.70000005);
          uint64_t v39 = *(void *)(*a2 + 136LL);
          uint64_t v40 = *(void *)(*a2 + 144LL);
          if (a3)
          {
            uint64_t v41 = v40 - v39;
            if (v41)
            {
              uint64_t v42 = (v41 >> 4) - 1;
              double v43 = (double *)(v39 + 16 * v42);
LABEL_61:
              double v44 = *v43;
              double v45 = *(double *)(v39 + 16 * v42 + 8);
LABEL_63:
              sub_100D2E0A8( (double *)(a1 + 152),  (double *)&v82,  (double *)&v82 + 1,  v44,  v45,  *(double *)(a4 + 72),  *(double *)(a4 + 168),  -(v12 * 0.5 + 3.70000005));
              sub_100FB92D0( a1 + 88,  (uint64_t)a5,  *(double *)&v82,  *((double *)&v82 + 1),  *(double *)buf,  *((double *)buf + 1));
              return a5[1] != *a5;
            }
          }

          else if (v40 != v39)
          {
            uint64_t v42 = 0LL;
            double v43 = *(double **)(*a2 + 136LL);
            goto LABEL_61;
          }

          double v44 = 0.0;
          double v45 = 0.0;
          goto LABEL_63;
        }

        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183CC20);
        }
        uint64_t v78 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
        {
          LOWORD(buf[0]) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v78,  OS_LOG_TYPE_ERROR,  "CLMM,interpolateProjections,Could not interpolate, incorrect coordinateCount",  (uint8_t *)buf,  2u);
        }

        double v21 = 0.0;
        if (!sub_1002921D0(115, 0))
        {
LABEL_50:
          double v24 = 0.0;
          goto LABEL_51;
        }

        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183CC20);
        }
        LOWORD(v82) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,interpolateProjections,Could not interpolate, incorrect coordinateCount",  &v82,  2);
        uint64_t v35 = (char *)v79;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = GEOLocationCoordinate2D, RoadPtr = std::shared_ptr<CLMapRoad>]",  "%s\n",  v79);
      }

void sub_1004DD434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1004DD450(uint64_t a1, double a2)
{
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_10183CC20);
  }
  uint64_t v4 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    int v7 = *(_DWORD *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 24);
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 56);
    uint64_t v11 = *(void *)(a1 + 64);
    uint64_t v12 = *(void *)(a1 + 72);
    *(_DWORD *)std::string buf = 134351105;
    double v42 = a2;
    __int16 v43 = 2049;
    uint64_t v44 = v5;
    __int16 v45 = 2049;
    uint64_t v46 = v6;
    __int16 v47 = 2049;
    uint64_t v48 = v10;
    __int16 v49 = 1026;
    int v50 = v7;
    __int16 v51 = 2049;
    uint64_t v52 = v8;
    __int16 v53 = 2050;
    uint64_t v54 = v9;
    __int16 v55 = 2050;
    uint64_t v56 = v11;
    __int16 v57 = 2050;
    uint64_t v58 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLMMLE,%{public}.1lf,laneData,LL,%{private}.7lf,%{private}.7lf,course,%{private}.1lf,laneIndex,%{public}d,id,%{pri vate}lld,probability,%{public}.2lf,shortestDist,%{public}.2lf,proj,%{public}.2lf",  buf,  0x58u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10183CC20);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    uint64_t v14 = *(void *)(a1 + 48);
    int v15 = *(_DWORD *)(a1 + 16);
    uint64_t v17 = *(void *)(a1 + 24);
    uint64_t v16 = *(void *)(a1 + 32);
    uint64_t v18 = *(void *)(a1 + 56);
    uint64_t v19 = *(void *)(a1 + 64);
    uint64_t v20 = *(void *)(a1 + 72);
    int v23 = 134351105;
    double v24 = a2;
    __int16 v25 = 2049;
    uint64_t v26 = v13;
    __int16 v27 = 2049;
    uint64_t v28 = v14;
    __int16 v29 = 2049;
    uint64_t v30 = v18;
    __int16 v31 = 1026;
    int v32 = v15;
    __int16 v33 = 2049;
    uint64_t v34 = v16;
    __int16 v35 = 2050;
    uint64_t v36 = v17;
    __int16 v37 = 2050;
    uint64_t v38 = v19;
    __int16 v39 = 2050;
    uint64_t v40 = v20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMMLE,%{public}.1lf,laneData,LL,%{private}.7lf,%{private}.7lf,course,%{private}.1lf,laneIndex,%{public}d,id,%{pri vate}lld,probability,%{public}.2lf,shortestDist,%{public}.2lf,proj,%{public}.2lf",  &v23,  88);
    uint64_t v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLaneData::debugOutput(const CFAbsoluteTime, std::string) const",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

void sub_1004DD6C8(id a1)
{
  qword_1019348B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

uint64_t sub_1004DD6F4(uint64_t a1, uint64_t *a2, _OWORD *a3, double a4, double a5, double a6, double a7)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(_DWORD *)(a1 + 16) = -1;
  *(void *)(a1 + 24) = 0xBFF0000000000000LL;
  *(void *)(a1 + 32) = -1LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + sub_1000A56E8(v1 + 72) = 0LL;
  *(void *)(a1 + 56) = 0xBFF0000000000000LL;
  uint64_t v8 = *a2;
  uint64_t v9 = (std::__shared_weak_count *)a2[1];
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }

  if (v8)
  {
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(v8 + 16);
    *(void *)(a1 + 32) = *(void *)v8;
    *(double *)(a1 + 24) = a5;
    *(_OWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *a3;
    *(double *)(a1 + 56) = a4;
    *(double *)(a1 + 64) = a6;
    *(double *)(a1 + sub_1000A56E8(v1 + 72) = a7;
  }

  if (v9)
  {
    uint64_t v12 = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  return a1;
}

double sub_1004DD7AC(double *a1, double a2, double a3, double a4, double a5)
{
  double v9 = 0.0;
  uint64_t v7 = 0LL;
  double v8 = 0.0;
  sub_100D2DA44(a1, &v9, &v8, (double *)&v7, a2, a3, 0.0, a4, a5, 0.0);
  double v5 = atan2(v8, v9);
  if (v5 < 0.0) {
    double v5 = v5 + 6.28318531;
  }
  return v5 * 57.2957795;
}

uint64_t sub_1004DD868()
{
  if (qword_101996150 != -1) {
    dispatch_once(&qword_101996150, &stru_10183CC40);
  }
  return qword_1019A10D0;
}

void sub_1004DD8A8(id a1)
{
  uint64_t v1 = operator new(0x98uLL);
  sub_1004DDAE0( (uint64_t)v1,  (uint64_t)+[CLIntersiloUniverse newSharedVendorUniverseWithSilo:]( &OBJC_CLASS___CLIntersiloUniverse,  "newSharedVendorUniverseWithSilo:",  +[CLSilo main](&OBJC_CLASS___CLSilo, "main")));
  qword_1019A10D0 = (uint64_t)v1;
  (*(void (**)(void *, void *))(*(void *)v1 + 976LL))(v1, &unk_1012EE7E8);
}

void sub_1004DD914(_Unwind_Exception *a1)
{
}

void sub_1004DD928()
{
  if (qword_1019A10D0)
  {
    *(void *)std::string buf = 0LL;
    (*(void (**)(uint64_t, uint8_t *))(*(void *)qword_1019A10D0 + 976LL))(qword_1019A10D0, buf);
    if (((*(uint64_t (**)(uint64_t))(*(void *)qword_1019A10D0 + 944LL))(qword_1019A10D0) & 1) == 0)
    {
      if (qword_101934A60 != -1) {
        dispatch_once(&qword_101934A60, &stru_10183D130);
      }
      unsigned __int8 v0 = (os_log_s *)qword_101934A68;
      if (os_log_type_enabled((os_log_t)qword_101934A68, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "could not store stats data ", buf, 2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A60 != -1) {
          dispatch_once(&qword_101934A60, &stru_10183D130);
        }
        v3[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A68,  17LL,  "could not store stats data ",  v3,  2);
        uint64_t v2 = (uint8_t *)v1;
        sub_10029211C("Generic", 1LL, 0, 0LL, "static void CLDaemonStats::shutdownInstance()", "%s\n", v1);
        if (v2 != buf) {
          free(v2);
        }
      }
    }
  }

uint64_t sub_1004DDAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_10030A44C(a1, a2, "stats", 1, 0, 2);
  void *v3 = off_10183CC70;
  sub_1002E4C3C(v3 + 16, "CLDaemonStats", 1LL, 1LL);
  *(_BYTE *)(a1 + 144) = 0;
  sub_1004F2598();
  if (!sub_1004F5330())
  {
    BOOL v11 = 0;
    sub_1002F0B04(&v9);
    int v4 = sub_1002A6F64(v9, "EnableLocationAccessorySessionDebugLog", &v11);
    double v5 = v10;
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        unint64_t v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }

    if (v4) {
      *(_BYTE *)(a1 + 144) = v11;
    }
  }

  return a1;
}

void sub_1004DDBCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_1004DDC04(void *a1)
{
  *a1 = off_10183CC70;
  sub_1002E4CB0(a1 + 16);
  return sub_10030ABEC((uint64_t)a1);
}

void sub_1004DDC34(void *a1)
{
  *a1 = off_10183CC70;
  sub_1002E4CB0(a1 + 16);
  uint64_t v2 = sub_10030ABEC((uint64_t)a1);
  operator delete(v2);
}

uint64_t sub_1004DDC68(uint64_t a1, std::string *a2)
{
  uint64_t v4 = a1 + 128;
  (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 16LL))(a1 + 128);
  sub_1002AFE38(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
}

void sub_1004DDCD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004DDCEC(uint64_t a1, double *a2)
{
  uint64_t v5 = a1 + 128;
  uint64_t v4 = *(void *)(a1 + 128);
  v7[5] = a1 + 128;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 128);
  __int16 v8 = 256;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_1004DDDA4;
  v7[3] = &unk_10181D3D0;
  v7[4] = a1;
  sub_10030B614(a1, a2, (uint64_t)v7);
  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
}

void sub_1004DDD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

uint64_t sub_1004DDDA4(uint64_t a1)
{
  return sub_1004DDDAC(*(void *)(a1 + 32));
}

uint64_t sub_1004DDDAC(uint64_t a1)
{
  uint64_t v2 = a1 + 128;
  (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 16LL))(a1 + 128);
  sub_10030B9C8(a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
}

void sub_1004DDE0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004DDE20(uint64_t a1)
{
  uint64_t v2 = a1 + 128;
  (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 16LL))(a1 + 128);
  uint64_t v3 = sub_10030AD08(a1);
  (*(void (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
  return v3;
}

void sub_1004DDE88(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004DDE9C(uint64_t a1)
{
  uint64_t v2 = a1 + 128;
  (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 16LL))(a1 + 128);
  uint64_t v3 = sub_10030B08C(a1);
  (*(void (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
  return v3;
}

void sub_1004DDF04(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1004DDF18(void *a1, uint64_t a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___CLDaemonStatsFetchLocationSystemStateAdapter);
  uint64_t v5 = dispatch_group_create();
  v25[0] = 0LL;
  v25[1] = v25;
  _DWORD v25[2] = 0x4812000000LL;
  v25[3] = sub_1004DE3BC;
  v25[4] = nullsub_245;
  v25[5] = &unk_10175E27B;
  int v26 = 0;
  char v27 = 0;
  int v28 = 1000;
  char v29 = 0;
  uint64_t v30 = 0LL;
  v23[0] = 0LL;
  v23[1] = v23;
  void v23[2] = 0x3812000000LL;
  v23[3] = sub_1004DE3D4;
  v23[4] = sub_1004DE3E4;
  dispatch_group_t v24 = v5;
  dispatch_group_enter(v5);
  id v6 = objc_msgSend(objc_msgSend(a1, "vendor"), "proxyForService:", @"CLTelephonyService");
  objc_msgSend(v6, "registerDelegate:inSilo:", v4, objc_msgSend(a1, "silo"));
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472LL;
  v22[2] = sub_1004DE3F4;
  v22[3] = &unk_10183D050;
  v22[4] = v25;
  v22[5] = v23;
  [v6 fetchIsCellAvailableWithReply:v22];
  id v7 = objc_msgSend(objc_msgSend(a1, "vendor"), "proxyForService:", @"CLWifiService");
  objc_msgSend(v7, "registerDelegate:inSilo:", v4, objc_msgSend(a1, "silo"));
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  _DWORD v21[2] = sub_1004DE404;
  v21[3] = &unk_10183D050;
  v21[4] = v25;
  v21[5] = v23;
  [v7 fetchIsWifiAvailableWithReply:v21];
  id v8 = objc_msgSend(objc_msgSend(a1, "vendor"), "proxyForService:", @"CLDataProtectionManager");
  objc_msgSend(v8, "registerDelegate:inSilo:", v4, objc_msgSend(a1, "silo"));
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  v20[2] = sub_1004DE414;
  v20[3] = &unk_10183D078;
  v20[4] = v25;
  v20[5] = v23;
  [v8 fetchDataAvailabilityWithReply:v20];
  id v9 = objc_msgSend(objc_msgSend(a1, "vendor"), "proxyForService:", @"CLDaemonStatus");
  objc_msgSend(v9, "registerDelegate:inSilo:", v4, objc_msgSend(a1, "silo"));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  _DWORD v19[2] = sub_1004DE42C;
  v19[3] = &unk_10183D050;
  v19[4] = v25;
  v19[5] = v23;
  [v9 fetchIsAirplaneModeEnabledWithReply:v19];
  id v10 = objc_msgSend(objc_msgSend(a1, "vendor"), "proxyForService:", @"CLAccessoryLocationProvider");
  objc_msgSend(v10, "registerDelegate:inSilo:", v4, objc_msgSend(a1, "silo"));
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472LL;
  void v18[2] = sub_1004DE43C;
  v18[3] = &unk_10183D050;
  v18[4] = v25;
  v18[5] = v23;
  [v10 fetchIsAccessoryConnectedWithReply:v18];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  _OWORD v17[2] = sub_1004DE44C;
  v17[3] = &unk_10183D078;
  v17[4] = v25;
  v17[5] = v23;
  [v9 fetchReachabilityWithReply:v17];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_1004DE45C;
  void v16[3] = &unk_10183D050;
  v16[4] = v25;
  v16[5] = v23;
  [v9 fetchIsBatteryConnectedWithReply:v16];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_1004DE46C;
  void v15[3] = &unk_10183D0A0;
  v15[4] = v25;
  v15[5] = v23;
  [v9 fetchWirelessModemClientCountWithReply:v15];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  _DWORD v14[2] = sub_1004DE48C;
  v14[3] = &unk_10183D050;
  v14[4] = v25;
  v14[5] = v23;
  [v7 fetchIsAssociatedWithReply:v14];
  id v11 = objc_msgSend(objc_msgSend(a1, "vendor"), "proxyForService:", @"CLBluetoothService");
  objc_msgSend(v11, "registerDelegate:inSilo:", v4, objc_msgSend(a1, "silo"));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  uint64_t v13[2] = sub_1004DE4A8;
  v13[3] = &unk_10183D050;
  v13[4] = v25;
  v13[5] = v23;
  [v11 fetchHasConnectedDevicesWithReply:v13];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1004DE4C4;
  block[3] = &unk_10183D0C8;
  block[6] = v25;
  block[4] = v5;
  void block[5] = a2;
  dispatch_group_notify(v5, (dispatch_queue_t)objc_msgSend(objc_msgSend(a1, "silo"), "queue"), block);
  _Block_object_dispose(v23, 8);
  if (v24) {
    dispatch_group_leave(v24);
  }
  _Block_object_dispose(v25, 8);
}

void sub_1004DE378(_Unwind_Exception *a1)
{
  uint64_t v3 = *(dispatch_group_s **)(v1 - 184);
  if (v3) {
    dispatch_group_leave(v3);
  }
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

__n128 sub_1004DE3BC(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a1[3] = result;
  return result;
}

uint64_t sub_1004DE3D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4_Block_object_dispose((const void *)(v1 - 232), 8) = *(void *)(a2 + 48);
  *(void *)(a2 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  return result;
}

void sub_1004DE3E4(uint64_t a1)
{
  uint64_t v1 = *(dispatch_group_s **)(a1 + 48);
  if (v1) {
    dispatch_group_leave(v1);
  }
}

uint64_t sub_1004DE3F4(uint64_t result, char a2)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 48LL) = a2;
  return result;
}

uint64_t sub_1004DE404(uint64_t result, char a2)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 49LL) = a2;
  return result;
}

uint64_t sub_1004DE414(uint64_t result, int a2)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 5sub_1004C2474(v1, 0LL) = a2 == 0;
  return result;
}

uint64_t sub_1004DE42C(uint64_t result, char a2)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 51LL) = a2;
  return result;
}

uint64_t sub_1004DE43C(uint64_t result, char a2)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 52LL) = a2;
  return result;
}

uint64_t sub_1004DE44C(uint64_t result, int a2)
{
  *(_DWORD *)(*(void *)(*(void *)(result + 32) + 8LL) + 56LL) = a2;
  return result;
}

uint64_t sub_1004DE45C(uint64_t result, char a2)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 6sub_1004C2474(v1, 0LL) = a2;
  return result;
}

uint64_t sub_1004DE46C(uint64_t result, uint64_t a2)
{
  if (a2 >= 1) {
    ++*(_DWORD *)(*(void *)(*(void *)(result + 32) + 8LL) + 64LL);
  }
  return result;
}

uint64_t sub_1004DE48C(uint64_t result, int a2)
{
  if (a2) {
    ++*(_DWORD *)(*(void *)(*(void *)(result + 32) + 8LL) + 64LL);
  }
  return result;
}

uint64_t sub_1004DE4A8(uint64_t result, int a2)
{
  if (a2) {
    ++*(_DWORD *)(*(void *)(*(void *)(result + 32) + 8LL) + 68LL);
  }
  return result;
}

void sub_1004DE4C4(uint64_t a1)
{
  if (qword_101934A60 != -1) {
    dispatch_once(&qword_101934A60, &stru_10183D130);
  }
  uint64_t v2 = (os_log_s *)qword_101934A68;
  if (os_log_type_enabled((os_log_t)qword_101934A68, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
    int v4 = *(unsigned __int8 *)(v3 + 48);
    int v5 = *(unsigned __int8 *)(v3 + 49);
    int v6 = *(unsigned __int8 *)(v3 + 50);
    int v7 = *(unsigned __int8 *)(v3 + 51);
    int v8 = *(unsigned __int8 *)(v3 + 52);
    int v9 = *(_DWORD *)(v3 + 56);
    int v10 = *(unsigned __int8 *)(v3 + 60);
    int v11 = *(_DWORD *)(v3 + 64);
    LODWORD(v3) = *(_DWORD *)(v3 + 68);
    *(_DWORD *)std::string buf = 67111168;
    int v27 = v4;
    __int16 v28 = 1024;
    int v29 = v5;
    __int16 v30 = 1024;
    int v31 = v6;
    __int16 v32 = 1024;
    int v33 = v7;
    __int16 v34 = 1024;
    int v35 = v8;
    __int16 v36 = 1024;
    int v37 = v9;
    __int16 v38 = 1024;
    int v39 = v10;
    __int16 v40 = 1024;
    int v41 = v11;
    char v42 = 0;
    char v43 = 4;
    int v44 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "location system state, cell available, %d, wifi available, %d, passcode locked, %d, airplane mode enabled, %d, acc essory connected, %d, reachability, %d, powered, %d, gpsCoexWifi, %d, gpsCoexBt, %d",  buf,  0x38u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A60 != -1) {
      dispatch_once(&qword_101934A60, &stru_10183D130);
    }
    uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8LL);
    __int16 v13 = *(unsigned __int8 *)(v12 + 49);
    int v14 = *(unsigned __int8 *)(v12 + 50);
    int v15 = *(unsigned __int8 *)(v12 + 51);
    int v16 = *(_DWORD *)(v12 + 56);
    int v17 = *(unsigned __int8 *)(v12 + 60);
    int v18 = *(_DWORD *)(v12 + 64);
    LOWORD(v22) = 1024;
    HIWORD(v22) = v13;
    LOWORD(v23) = HIWORD(v15);
    HIWORD(v23) = 1024;
    LOWORD(v24) = 1024;
    HIWORD(v24) = v16;
    LOWORD(v25) = HIWORD(v18);
    HIWORD(v25) = 1024;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A68,  2LL,  "location system state, cell available, %d, wifi available, %d, passcode locked, %d, airplane mode enabled, %d, acc essory connected, %d, reachability, %d, powered, %d, gpsCoexWifi, %d, gpsCoexBt, %d",  &v21,  56,  67111168,  v22,  v14,  v23,  v24,  v17,  v25);
    uint64_t v20 = (uint8_t *)v19;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLDaemonStats::fetchLocationSystemStateWithReply(id<CLIntersiloUniverse>, void (^)(const CLDaemonStats _Type::LocationSystemState &))_block_invoke",  "%s\n",  v19);
    if (v20 != buf) {
      free(v20);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  dispatch_release(*(dispatch_object_t *)(a1 + 32));
}

void sub_1004DE770(uint64_t a1)
{
  __p[0] = 0LL;
  __p[1] = 0LL;
  uint64_t v4 = 0LL;
  (*(void (**)(uint64_t, void **))(*(void *)a1 + 968LL))(a1, __p);
  if (v4 >= 0) {
    uint64_t v1 = (char *)__p;
  }
  else {
    uint64_t v1 = (char *)__p[0];
  }
  uint64_t v2 = sub_1002A6F04(v1);
  CFUserNotificationDisplayNotice(0.0, 0LL, 0LL, 0LL, 0LL, @"Location Stats", v2, 0LL);
  CFRelease(v2);
  if (SHIBYTE(v4) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1004DE804( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004DE824(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t v6 = a1 + 128;
  (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 16LL))(a1 + 128);
  sub_1002AD1FC((CFMutableDictionaryRef *)a1, a2, a3);
  return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
}

void sub_1004DE89C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004DE8B0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v106 = 0LL;
  __int128 v104 = 0u;
  __int128 v105 = 0u;
  __int128 v103 = 0u;
  uint64_t v3 = (uint64_t)(a2 + 128);
  int v4 = *((_DWORD *)a2 + 31);
  if (v4 < 1)
  {
    HIDWORD(v10sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1;
    float v10 = 0.0;
  }

  else
  {
    uint64_t v5 = 0LL;
    int v6 = 0;
    float v7 = (float)v4;
    do
    {
      int v8 = *(_DWORD *)(v3 + v5);
      *(float *)((char *)&v103 + v5) = (float)v8 / v7;
      v6 += v8;
      v5 += 4LL;
    }

    while (v5 != 56);
    int v9 = *((_DWORD *)a2 + 46);
    float v10 = (float)v9 / v7;
    int v11 = v9 + v6;
    if (v9 + v6 == v4)
    {
      HIDWORD(v10sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1;
    }

    else
    {
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_10183D150);
      }
      uint64_t v12 = (os_log_s *)qword_101934978;
      if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_ERROR))
      {
        int v13 = *((_DWORD *)a2 + 31);
        *(_DWORD *)std::string buf = 67109376;
        int v167 = v11;
        __int16 v168 = 1024;
        LODWORD(v169) = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "The sum of the delivered locations by type (%d) does not equal the delivered locations counter (%d).",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_10183D150);
        }
        int v57 = *((_DWORD *)a2 + 31);
        LODWORD(v109) = 67109376;
        HIDWORD(v109) = v11;
        __int16 v110 = 1024;
        LODWORD(v111) = v57;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  16LL,  "The sum of the delivered locations by type (%d) does not equal the delivered locations counter (%d).",  &v109,  14);
        double v59 = (uint8_t *)v58;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLDaemonStats::submitMetric(const CLDaemonStats_Type::LocationUpdateSession &)",  "%s\n",  v58);
        if (v59 != buf) {
          free(v59);
        }
      }

      HIDWORD(v10sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
    }
  }

  double v14 = *((double *)a2 + 8);
  double v15 = *((double *)a2 + 1);
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_10183D150);
  }
  double v16 = v14 - v15;
  int v17 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    int v18 = *a2;
    uint64_t v62 = *((void *)a2 + 1);
    uint64_t v19 = (unsigned __int8 *)*((void *)a2 + 2);
    int v20 = (char)a2[39];
    int v21 = a2[40];
    int v64 = a2[41];
    int v66 = a2[42];
    int v68 = a2[43];
    int v70 = *((_DWORD *)a2 + 12);
    int v72 = a2[44];
    int v74 = a2[52];
    int v76 = *((_DWORD *)a2 + 14);
    int v80 = *((_DWORD *)a2 + 15);
    uint64_t v78 = *((void *)a2 + 8);
    uint64_t v82 = *((void *)a2 + 24);
    uint64_t v84 = *((void *)a2 + 9);
    uint64_t v86 = *((void *)a2 + 11);
    uint64_t v88 = *((void *)a2 + 10);
    uint64_t v90 = *((void *)a2 + 12);
    uint64_t v92 = *((void *)a2 + 13);
    double v94 = *((double *)a2 + 14);
    int v95 = a2[120];
    int v97 = *((_DWORD *)a2 + 31);
    int v98 = *((_DWORD *)a2 + 47);
    sub_1004DF8AC(v3, (std::stringbuf::string_type *)&v109);
    int v22 = SBYTE3(v113);
    int v23 = (void **)v109;
    sub_1004DFAE8((uint64_t)&v103, &__p);
    int v167 = v18;
    int v24 = &v109;
    if (v22 < 0) {
      int v24 = v23;
    }
    if (v20 >= 0) {
      int v25 = a2 + 16;
    }
    else {
      int v25 = v19;
    }
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    uint64_t v169 = v62;
    float64_t v171 = v25;
    int v173 = v21;
    int v175 = v64;
    int v177 = v66;
    int v179 = v68;
    int v181 = v70;
    int v183 = v72;
    int v185 = v74;
    int v187 = v76;
    int v189 = v80;
    uint64_t v191 = v78;
    uint64_t v195 = v82;
    uint64_t v197 = v84;
    uint64_t v199 = v86;
    uint64_t v201 = v88;
    uint64_t v203 = v90;
    uint64_t v205 = v92;
    double v207 = v94;
    int v209 = v95;
    int v211 = v97;
    int v213 = v98;
    __int128 v215 = v24;
    __int16 v170 = 2080;
    __int16 v214 = 2080;
    __int16 v216 = 2080;
    __int128 v217 = p_p;
    int v219 = *((_DWORD *)a2 + 46);
    __int16 v168 = 2048;
    __int16 v190 = 2048;
    __int16 v192 = 2048;
    __int16 v194 = 2048;
    __int16 v196 = 2048;
    __int16 v198 = 2048;
    __int16 v200 = 2048;
    __int16 v202 = 2048;
    __int16 v204 = 2048;
    __int16 v206 = 2048;
    __int16 v220 = 2048;
    double v193 = v16;
    double v221 = v10;
    __int16 v172 = 1024;
    __int16 v174 = 1024;
    __int16 v176 = 1024;
    __int16 v178 = 1024;
    __int16 v180 = 1024;
    __int16 v182 = 1024;
    __int16 v184 = 1024;
    __int16 v186 = 1024;
    __int16 v188 = 1024;
    __int16 v208 = 1024;
    __int16 v210 = 1024;
    __int16 v212 = 1024;
    __int16 v218 = 1024;
    __int16 v222 = 1024;
    *(_DWORD *)std::string buf = 67116290;
    int v223 = HIDWORD(v100);
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "metric.valid,%d,metric.timestamp,%.3f,metric.bundleId,%s,cellAvailable,%d,wifiAvailable,%d,passcodeLocked,%d,airpl aneMode,%d,reachability,%d,accessoryConnected,%d,powered,%d,gpsCoexWifi,%d,gpsCoexBt,%d,timestampEnd,%.3f,duration ,%.3f,cblsPowerSaverBkgRuntimeLoss,%.3f,desiredAccuracy,%.2f,achievedAccuracy,%.2f,distanceFilter,%.2f,ttff,%.3f,t tffGps,%.3f,achievedSpeed,%.2f,autoStopped,%d,deferredLocations,0,deliveredLocations,%d,cblsPowerSaverLocationLoss ,%d,deliveredLocationsByType,%s,deliveredLocationsByTypeFraction,%s,sdeliveredLocationsUndefined,%d,deliveredLocat ionsUndefinedFraction,%.4f,validDeliveredLocationsByType,%d",  buf,  0xE8u);
    if (SBYTE3(v113) < 0) {
      operator delete(v109);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_10183D150);
    }
    double v99 = *(double *)&qword_101934978;
    int v44 = *a2;
    uint64_t v45 = *((void *)a2 + 1);
    uint64_t v46 = (unsigned __int8 *)*((void *)a2 + 2);
    int v47 = (char)a2[39];
    int v48 = a2[40];
    int v63 = a2[41];
    int v65 = a2[42];
    int v67 = a2[43];
    int v69 = *((_DWORD *)a2 + 12);
    int v71 = a2[44];
    int v73 = a2[52];
    int v75 = *((_DWORD *)a2 + 14);
    int v79 = *((_DWORD *)a2 + 15);
    uint64_t v77 = *((void *)a2 + 8);
    uint64_t v81 = *((void *)a2 + 24);
    uint64_t v83 = *((void *)a2 + 9);
    uint64_t v85 = *((void *)a2 + 11);
    double v87 = *((double *)a2 + 10);
    double v89 = *((double *)a2 + 12);
    double v91 = *((double *)a2 + 13);
    double v93 = *((double *)a2 + 14);
    LODWORD(v94) = a2[120];
    LODWORD(v96) = *((_DWORD *)a2 + 31);
    HIDWORD(v96) = *((_DWORD *)a2 + 47);
    sub_1004DF8AC(v3, &__p);
    int size = (char)__p.__r_.__value_.__s.__size_;
    std::string::size_type v50 = __p.__r_.__value_.__r.__words[0];
    sub_1004DFAE8((uint64_t)&v103, &v101);
    __int16 v51 = &__p;
    if (size < 0) {
      __int16 v51 = (std::stringbuf::string_type *)v50;
    }
    if (v47 >= 0) {
      uint64_t v52 = a2 + 16;
    }
    else {
      uint64_t v52 = v46;
    }
    int v53 = *((_DWORD *)a2 + 46);
    if ((v101.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v54 = &v101;
    }
    else {
      uint64_t v54 = (std::stringbuf::string_type *)v101.__r_.__value_.__r.__words[0];
    }
    LODWORD(v109) = 67116290;
    HIDWORD(v109) = v44;
    __int16 v110 = 2048;
    uint64_t v111 = v45;
    __int16 v112 = 2080;
    double v113 = v52;
    __int16 v114 = 1024;
    int v115 = v48;
    __int16 v116 = 1024;
    int v117 = v63;
    __int16 v118 = 1024;
    int v119 = v65;
    __int16 v120 = 1024;
    int v121 = v67;
    __int16 v122 = 1024;
    int v123 = v69;
    __int16 v124 = 1024;
    int v125 = v71;
    __int16 v126 = 1024;
    int v127 = v73;
    __int16 v128 = 1024;
    int v129 = v75;
    __int16 v130 = 1024;
    int v131 = v79;
    __int16 v132 = 2048;
    uint64_t v133 = v77;
    __int16 v134 = 2048;
    double v135 = v16;
    __int16 v136 = 2048;
    uint64_t v137 = v81;
    __int16 v138 = 2048;
    uint64_t v139 = v83;
    __int16 v140 = 2048;
    uint64_t v141 = v85;
    __int16 v142 = 2048;
    double v143 = v87;
    __int16 v144 = 2048;
    double v145 = v89;
    __int16 v146 = 2048;
    double v147 = v91;
    __int16 v148 = 2048;
    double v149 = v93;
    __int16 v150 = 1024;
    int v151 = LODWORD(v94);
    __int16 v152 = 1024;
    int v153 = LODWORD(v96);
    __int16 v154 = 1024;
    int v155 = HIDWORD(v96);
    __int16 v156 = 2080;
    float64_t v157 = v51;
    __int16 v158 = 2080;
    uint64_t v159 = v54;
    __int16 v160 = 1024;
    int v161 = v53;
    __int16 v162 = 2048;
    double v163 = v10;
    __int16 v164 = 1024;
    int v165 = HIDWORD(v100);
    LODWORD(v6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 232;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  *(void *)&v99,  2LL,  "metric.valid,%d,metric.timestamp,%.3f,metric.bundleId,%s,cellAvailable,%d,wifiAvailable,%d,passcodeLocked,%d,airpl aneMode,%d,reachability,%d,accessoryConnected,%d,powered,%d,gpsCoexWifi,%d,gpsCoexBt,%d,timestampEnd,%.3f,duration ,%.3f,cblsPowerSaverBkgRuntimeLoss,%.3f,desiredAccuracy,%.2f,achievedAccuracy,%.2f,distanceFilter,%.2f,ttff,%.3f,t tffGps,%.3f,achievedSpeed,%.2f,autoStopped,%d,deferredLocations,0,deliveredLocations,%d,cblsPowerSaverLocationLoss ,%d,deliveredLocationsByType,%s,deliveredLocationsByTypeFraction,%s,sdeliveredLocationsUndefined,%d,deliveredLocat ionsUndefinedFraction,%.4f,validDeliveredLocationsByType,%d",  &v109,  v60,  v61,  v63,  v65,  v69,  v73,  v77,  v79,  v81,  v83,  v85,  v87,  v89,  v91,  v93,  v94,  v96,  v99,  v100,  *(double *)&v101.__r_.__value_.__l.__data_,  LODWORD(v101.__r_.__value_.__r.__words[1]),  LODWORD(v101.__r_.__value_.__r.__words[2]),  LODWORD(__p.__r_.__value_.__l.__data_),  (const char *)__p.__r_.__value_.__l.__size_,  (const char *)__p.__r_.__value_.__l.__cap_,  (_DWORD)v103,  *((double *)&v103 + 1),  (_DWORD)v104);
    uint64_t v56 = v55;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDaemonStats::submitMetric(const CLDaemonStats_Type::LocationUpdateSession &)",  "%s\n",  v56);
  }

  v107[0] = @"valid";
  v108[0] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *a2);
  v107[1] = @"bundleId";
  if ((a2[39] & 0x80u) == 0) {
    int v27 = a2 + 16;
  }
  else {
    int v27 = (unsigned __int8 *)*((void *)a2 + 2);
  }
  v108[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v27);
  v107[2] = @"cellAvailable";
  v108[2] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2[40]);
  v107[3] = @"wifiAvailable";
  v108[3] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2[41]);
  v107[4] = @"passcodeLocked";
  v108[4] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2[42]);
  v107[5] = @"airplaneMode";
  v108[5] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2[43]);
  v107[6] = @"reachability";
  v108[6] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *((unsigned int *)a2 + 12));
  v107[7] = @"accessoryConnected";
  v108[7] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2[44]);
  v107[8] = @"powered";
  v108[8] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2[52]);
  v107[9] = @"gpsCoexWifi";
  v108[9] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 14));
  v107[10] = @"gpsCoexBt";
  v108[10] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 15));
  v107[11] = @"duration";
  v108[11] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v16);
  v107[12] = @"cblsPowerSaverBkgRuntimeLoss";
  v108[12] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *((double *)a2 + 24));
  v107[13] = @"desiredAccuracy";
  v108[13] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *((double *)a2 + 9));
  v107[14] = @"achievedAccuracy";
  v108[14] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *((double *)a2 + 11));
  v107[15] = @"distanceFilter";
  v108[15] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *((double *)a2 + 10));
  v107[16] = @"ttff";
  v108[16] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *((double *)a2 + 12));
  v107[17] = @"ttffGps";
  v108[17] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *((double *)a2 + 13));
  v107[18] = @"achievedSpeed";
  v108[18] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *((double *)a2 + 14));
  v107[19] = @"autoStopped";
  v108[19] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2[120]);
  v107[20] = @"deliveredLocations";
  v108[20] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 31));
  v107[21] = @"cblsPowerSaverLocationLoss";
  v108[21] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 47));
  v107[22] = @"deliveredLocationsUnknown";
  v108[22] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 32));
  v107[23] = @"deliveredLocationsUnknownFraction";
  LODWORD(v2_Block_object_dispose((const void *)(v1 - 232), 8) = v103;
  v108[23] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v28);
  v107[24] = @"deliveredLocationsGps";
  v108[24] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 33));
  v107[25] = @"deliveredLocationsGpsFraction";
  LODWORD(v29) = DWORD1(v103);
  v108[25] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v29);
  v107[26] = @"deliveredLocationsNmea";
  v108[26] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 34));
  v107[27] = @"deliveredLocationsNmeaFraction";
  LODWORD(v3sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = DWORD2(v103);
  v108[27] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v30);
  v107[28] = @"deliveredLocationsAccessory";
  v108[28] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 35));
  v107[29] = @"deliveredLocationsAccessoryFraction";
  LODWORD(v31) = HIDWORD(v103);
  v108[29] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v31);
  v107[30] = @"deliveredLocationsWifi1";
  v108[30] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 36));
  v107[31] = @"deliveredLocationsWifi1Fraction";
  LODWORD(v32) = v104;
  v108[31] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v32);
  v107[32] = @"deliveredLocationsSkyhook";
  v108[32] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 37));
  v107[33] = @"deliveredLocationsSkyhookFraction";
  LODWORD(v33) = DWORD1(v104);
  v108[33] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v33);
  v107[34] = @"deliveredLocationsCell";
  v108[34] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 38));
  v107[35] = @"deliveredLocationsCellFraction";
  LODWORD(v34) = DWORD2(v104);
  v108[35] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v34);
  v107[36] = @"deliveredLocationsLac";
  v108[36] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 39));
  v107[37] = @"deliveredLocationsLacFraction";
  LODWORD(v35) = HIDWORD(v104);
  v108[37] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v35);
  v107[38] = @"deliveredLocationsMcc";
  v108[38] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 40));
  v107[39] = @"deliveredLocationsMccFraction";
  LODWORD(v36) = v105;
  v108[39] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v36);
  v107[40] = @"deliveredLocationsGpsCoarse";
  v108[40] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 41));
  v107[41] = @"deliveredLocationsGpsCoarseFraction";
  LODWORD(v37) = DWORD1(v105);
  v108[41] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v37);
  v107[42] = @"deliveredLocationsIndoor";
  v108[42] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 42));
  v107[43] = @"deliveredLocationsIndoorFraction";
  LODWORD(v3_Block_object_dispose((const void *)(v1 - 232), 8) = DWORD2(v105);
  v108[43] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v38);
  v107[44] = @"deliveredLocationsWifi2";
  v108[44] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 43));
  v107[45] = @"deliveredLocationsWifi2Fraction";
  LODWORD(v39) = HIDWORD(v105);
  v108[45] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v39);
  v107[46] = @"deliveredLocationsCompensated";
  v108[46] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 44));
  v107[47] = @"deliveredLocationsCompensatedFraction";
  LODWORD(v4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v106;
  v108[47] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v40);
  v107[48] = @"deliveredLocationsLoiOverride";
  v108[48] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 45));
  v107[49] = @"deliveredLocationsLoiOverrideFraction";
  LODWORD(v41) = HIDWORD(v106);
  v108[49] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v41);
  v107[50] = @"deliveredLocationsUndefined";
  v108[50] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)a2 + 46));
  v107[51] = @"deliveredLocationsUndefinedFraction";
  *(float *)&double v42 = v10;
  v108[51] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v42);
  v108[52] = &off_1018D34D0;
  v107[52] = @"sessionCount";
  v107[53] = @"validDeliveredLocationsByType";
  v108[53] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", HIDWORD(v100));
  return AnalyticsSendEvent( @"com.apple.locationd.LocationUpdateSession",  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v108,  v107,  54LL));
}

void sub_1004DF874( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, void *__p, uint64_t a33, int a34, __int16 a35, char a36, char a37)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1004DF8AC@<X0>(uint64_t a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  if ((v21 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v21 & 0x80u) == 0) {
    uint64_t v5 = v21;
  }
  else {
    uint64_t v5 = v20;
  }
  sub_10000CF44(&v22, (uint64_t)p_p, v5);
  for (uint64_t i = 0LL; i != 14; ++i)
  {
    int v7 = *(_DWORD *)(a1 + 4 * i);
    std::stringbuf::str(&v18, &v23);
    if ((v18.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = v18.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = v18.__r_.__value_.__l.__size_;
    }
    uint64_t v9 = v21;
    if ((v21 & 0x80u) != 0) {
      uint64_t v9 = v20;
    }
    if (size != v9)
    {
      if ((v18.__r_.__value_.__s.__size_ & 0x80) != 0) {
        operator delete(v18.__r_.__value_.__l.__data_);
      }
LABEL_30:
      sub_10000CF44(&v22, (uint64_t)", ", 2LL);
      goto LABEL_31;
    }

    if ((v21 & 0x80u) == 0) {
      float v10 = (unsigned __int8 *)&__p;
    }
    else {
      float v10 = (unsigned __int8 *)__p;
    }
    if ((v18.__r_.__value_.__s.__size_ & 0x80) != 0)
    {
      double v15 = (void *)v18.__r_.__value_.__r.__words[0];
      int v16 = memcmp(v18.__r_.__value_.__l.__data_, v10, v18.__r_.__value_.__l.__size_);
      operator delete(v15);
      if (!v16) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }

    if (v18.__r_.__value_.__s.__size_)
    {
      uint64_t v11 = 0LL;
      do
      {
        int v12 = v18.__r_.__value_.__s.__data_[v11];
        int v13 = v10[v11];
      }

      while (v12 == v13 && v18.__r_.__value_.__s.__size_ - 1LL != v11++);
      if (v12 != v13) {
        goto LABEL_30;
      }
    }

void sub_1004DFAB4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
}

uint64_t sub_1004DFAE8@<X0>(uint64_t a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  if ((v21 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v21 & 0x80u) == 0) {
    uint64_t v5 = v21;
  }
  else {
    uint64_t v5 = v20;
  }
  sub_10000CF44(&v22, (uint64_t)p_p, v5);
  for (uint64_t i = 0LL; i != 14; ++i)
  {
    float v7 = *(float *)(a1 + 4 * i);
    std::stringbuf::str(&v18, &v23);
    if ((v18.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = v18.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = v18.__r_.__value_.__l.__size_;
    }
    uint64_t v9 = v21;
    if ((v21 & 0x80u) != 0) {
      uint64_t v9 = v20;
    }
    if (size != v9)
    {
      if ((v18.__r_.__value_.__s.__size_ & 0x80) != 0) {
        operator delete(v18.__r_.__value_.__l.__data_);
      }
LABEL_30:
      sub_10000CF44(&v22, (uint64_t)", ", 2LL);
      goto LABEL_31;
    }

    if ((v21 & 0x80u) == 0) {
      float v10 = (unsigned __int8 *)&__p;
    }
    else {
      float v10 = (unsigned __int8 *)__p;
    }
    if ((v18.__r_.__value_.__s.__size_ & 0x80) != 0)
    {
      double v15 = (void *)v18.__r_.__value_.__r.__words[0];
      int v16 = memcmp(v18.__r_.__value_.__l.__data_, v10, v18.__r_.__value_.__l.__size_);
      operator delete(v15);
      if (!v16) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }

    if (v18.__r_.__value_.__s.__size_)
    {
      uint64_t v11 = 0LL;
      do
      {
        int v12 = v18.__r_.__value_.__s.__data_[v11];
        int v13 = v10[v11];
      }

      while (v12 == v13 && v18.__r_.__value_.__s.__size_ - 1LL != v11++);
      if (v12 != v13) {
        goto LABEL_30;
      }
    }

void sub_1004DFCF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
}

uint64_t sub_1004DFD24(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D170);
  }
  uint64_t v3 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    if ((a2[39] & 0x80u) == 0) {
      int v6 = a2 + 16;
    }
    else {
      int v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    if ((a2[63] & 0x80u) == 0) {
      float v7 = a2 + 40;
    }
    else {
      float v7 = (unsigned __int8 *)*((void *)a2 + 5);
    }
    int v8 = a2[112];
    int v9 = a2[113];
    int v10 = *((unsigned __int16 *)a2 + 58);
    int v11 = a2[114];
    *(_DWORD *)std::string buf = 68291075;
    int v16 = 0;
    __int16 v17 = 2082;
    std::stringbuf::string_type v18 = "";
    __int16 v19 = 1026;
    int v20 = v4;
    __int16 v21 = 2050;
    uint64_t v22 = v5;
    __int16 v23 = 2081;
    uint64_t v24 = v6;
    __int16 v25 = 2081;
    int v26 = v7;
    __int16 v27 = 1026;
    int v28 = v8;
    __int16 v29 = 1026;
    int v30 = v9;
    __int16 v31 = 1026;
    int v32 = v10;
    __int16 v33 = 1026;
    int v34 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:iB: submit monitor session, metric.valid:%{public}d, metric.timestamp:%{public} f, metric.bundleId:%{private, location:escape_only}s, onbehalfbundleid:%{private, location:escape_only}s , clientSpecifiesMajor:%{public}d, clientSpecifiesMinor:%{public}d, totalMonitoredRegions:%{public}d, foreground:%{public}d}",  buf,  0x4Eu);
  }

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  _DWORD v14[2] = sub_1004DFF04;
  v14[3] = &unk_101820718;
  v14[4] = a2;
  AnalyticsSendEventLazy(@"com.apple.locationd.proximity.iBeacon.addRegionEvent", v14);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  uint64_t v13[2] = sub_1004DFFF0;
  v13[3] = &unk_101820718;
  v13[4] = a2;
  return AnalyticsSendEventLazy(@"com.apple.locationd.proximity.iBeacon.addRegionEventWithBundleID", v13);
}

NSDictionary *sub_1004DFF04(uint64_t a1)
{
  v3[0] = @"clientSpecifiesMajor";
  v4[0] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 112LL));
  v3[1] = @"clientSpecifiesMinor";
  v4[1] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 113LL));
  v3[2] = @"totalMonitoredRegions";
  v4[2] = +[NSNumber numberWithUnsignedShort:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedShort:",  *(unsigned __int16 *)(*(void *)(a1 + 32) + 116LL));
  v3[3] = @"appIsInForeground";
  v4[3] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 114LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  4LL);
}

NSDictionary *sub_1004DFFF0(uint64_t a1)
{
  v9[0] = @"bundleId";
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)(v2 + 16);
  v10[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  v9[1] = @"regionIdentifier";
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (void *)(v4 + 88);
  v10[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
  uint64_t v9[2] = @"proximityUUID";
  uint64_t v6 = *(void *)(a1 + 32);
  float v7 = (void *)(v6 + 64);
  _DWORD v10[2] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7);
  v9[3] = @"clientSpecifiesMajor";
  _DWORD v10[3] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 112LL));
  _DWORD v9[4] = @"clientSpecifiesMinor";
  _DWORD v10[4] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 113LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v10,  v9,  5LL);
}

uint64_t sub_1004E0124(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D170);
  }
  uint64_t v3 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    if ((a2[39] & 0x80u) == 0) {
      uint64_t v6 = a2 + 16;
    }
    else {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    if ((a2[63] & 0x80u) == 0) {
      float v7 = a2 + 40;
    }
    else {
      float v7 = (unsigned __int8 *)*((void *)a2 + 5);
    }
    int v8 = *((unsigned __int16 *)a2 + 56);
    *(_DWORD *)std::string buf = 68290307;
    int v13 = 0;
    __int16 v14 = 2082;
    double v15 = "";
    __int16 v16 = 1026;
    int v17 = v4;
    __int16 v18 = 2050;
    uint64_t v19 = v5;
    __int16 v20 = 2081;
    __int16 v21 = v6;
    __int16 v22 = 2081;
    __int16 v23 = v7;
    __int16 v24 = 1026;
    int v25 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:iB: submit monitor session, metric.valid:%{public}d, metric.timestamp:%{public} f, metric.bundleId:%{private, location:escape_only}s, onbehalfbundleid:%{private, location:escape_only}s , totalMonitoredRegions:%{public}d}",  buf,  0x3Cu);
  }

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  _DWORD v11[2] = sub_1004E02DC;
  v11[3] = &unk_101820718;
  v11[4] = a2;
  AnalyticsSendEventLazy(@"com.apple.locationd.proximity.iBeacon.removeRegionEvent", v11);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_1004E0360;
  _DWORD v10[3] = &unk_101820718;
  _DWORD v10[4] = a2;
  return AnalyticsSendEventLazy(@"com.apple.locationd.proximity.iBeacon.removeRegionEventWithBundleID", v10);
}

NSDictionary *sub_1004E02DC(uint64_t a1)
{
  uint64_t v2 = @"totalMonitoredRegions";
  uint64_t v3 = +[NSNumber numberWithUnsignedShort:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedShort:",  *(unsigned __int16 *)(*(void *)(a1 + 32) + 112LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v3,  &v2,  1LL);
}

NSDictionary *sub_1004E0360(uint64_t a1)
{
  v9[0] = @"bundleId";
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)(v2 + 16);
  v10[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  v9[1] = @"regionIdentifier";
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (void *)(v4 + 88);
  v10[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
  uint64_t v9[2] = @"proximityUUID";
  uint64_t v6 = *(void *)(a1 + 32);
  float v7 = (void *)(v6 + 64);
  _DWORD v10[2] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7);
  v9[3] = @"totalMonitoredRegions";
  _DWORD v10[3] = +[NSNumber numberWithUnsignedShort:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedShort:",  *(unsigned __int16 *)(*(void *)(a1 + 32) + 112LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v10,  v9,  4LL);
}

uint64_t sub_1004E0474(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D170);
  }
  uint64_t v3 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    if ((a2[39] & 0x80u) == 0) {
      uint64_t v6 = a2 + 16;
    }
    else {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    if ((a2[63] & 0x80u) == 0) {
      float v7 = a2 + 40;
    }
    else {
      float v7 = (unsigned __int8 *)*((void *)a2 + 5);
    }
    int v8 = a2[116];
    *(_DWORD *)std::string buf = 68290307;
    int v13 = 0;
    __int16 v14 = 2082;
    double v15 = "";
    __int16 v16 = 1026;
    int v17 = v4;
    __int16 v18 = 2050;
    uint64_t v19 = v5;
    __int16 v20 = 2081;
    __int16 v21 = v6;
    __int16 v22 = 2081;
    __int16 v23 = v7;
    __int16 v24 = 1026;
    int v25 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:iB: submit monitor session, metric.valid:%{public}d, metric.timestamp:%{public} f, metric.bundleId:%{private, location:escape_only}s, onbehalfbundleid:%{private, location:escape_only}s , foreground:%{public}d}",  buf,  0x3Cu);
  }

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  _DWORD v11[2] = sub_1004E062C;
  v11[3] = &unk_101820718;
  v11[4] = a2;
  AnalyticsSendEventLazy(@"com.apple.locationd.proximity.iBeacon.stateChangeEvent", v11);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_1004E06D4;
  _DWORD v10[3] = &unk_101820718;
  void v10[4] = a2;
  return AnalyticsSendEventLazy(@"com.apple.locationd.proximity.iBeacon.stateChangeEventWithBundleID", v10);
}

NSDictionary *sub_1004E062C(uint64_t a1)
{
  v4[0] = @"appIsInForeground";
  uint64_t v2 = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 116LL));
  v4[1] = @"beaconState";
  v5[0] = v2;
  v5[1] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 124LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL);
}

NSDictionary *sub_1004E06D4(uint64_t a1)
{
  v9[0] = @"bundleId";
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)(v2 + 16);
  v10[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  v9[1] = @"regionIdentifier";
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (void *)(v4 + 88);
  v10[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
  uint64_t v9[2] = @"proximityUUID";
  uint64_t v6 = *(void *)(a1 + 32);
  float v7 = (void *)(v6 + 64);
  _DWORD v10[2] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7);
  v9[3] = @"beaconState";
  _DWORD v10[3] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 124LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v10,  v9,  4LL);
}

uint64_t sub_1004E07E8(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D170);
  }
  uint64_t v3 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    if ((a2[39] & 0x80u) == 0) {
      uint64_t v6 = a2 + 16;
    }
    else {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    int v7 = a2[80];
    unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)a2 + 13) - *((void *)a2 + 12)) >> 3);
    int v9 = *((_DWORD *)a2 + 16);
    int v10 = (int)*((double *)a2 + 9);
    *(_DWORD *)std::string buf = 68290819;
    int v15 = 0;
    __int16 v16 = 2082;
    int v17 = "";
    __int16 v18 = 1026;
    int v19 = v4;
    __int16 v20 = 2050;
    uint64_t v21 = v5;
    __int16 v22 = 2081;
    __int16 v23 = v6;
    __int16 v24 = 1026;
    int v25 = v7;
    __int16 v26 = 2050;
    unint64_t v27 = v8;
    __int16 v28 = 1026;
    int v29 = v9;
    __int16 v30 = 1026;
    int v31 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:iB: submit ranging session, metric.valid:%{public}d, metric.timstamp:%{public}f , metric.bundleId:%{private, location:escape_only}s, regions:%{public}d, beacons:%{public}lu, meas urements:%{public}d, duration:%{public}d}",  buf,  0x48u);
  }

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  uint64_t v13[2] = sub_1004E09C4;
  v13[3] = &unk_101820718;
  v13[4] = a2;
  AnalyticsSendEventLazy(@"com.apple.locationd.proximity.iBeacon.rangingSession", v13);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  _DWORD v12[2] = sub_1004E0B04;
  void v12[3] = &unk_101820718;
  _DWORD v12[4] = a2;
  return AnalyticsSendEventLazy(@"com.apple.locationd.proximity.iBeacon.rangingSessionWithBundleID", v12);
}

NSDictionary *sub_1004E09C4(uint64_t a1)
{
  v3[0] = @"appIsInForeground";
  v4[0] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 81LL));
  v3[1] = @"rangingMeasurements";
  v4[1] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 64LL));
  v3[2] = @"rangingBeacons";
  void v4[2] = +[NSNumber numberWithUnsignedLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLong:",  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(*(void *)(a1 + 32) + 104LL) - *(void *)(*(void *)(a1 + 32) + 96LL)) >> 3));
  v3[3] = @"rangingDuration";
  v4[3] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(a1 + 32) + 72LL));
  void v3[4] = @"rangedRegions";
  void v4[4] = +[NSNumber numberWithUnsignedChar:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedChar:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 80LL));
  void v3[5] = @"proximityChanges";
  v4[5] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 84LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  6LL);
}

NSDictionary *sub_1004E0B04(uint64_t a1)
{
  v7[0] = @"bundleId";
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (void *)(v2 + 16);
  v8[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  v7[1] = @"proximityUUID";
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (void *)(v4 + 40);
  v8[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
  v7[2] = @"rangingDuration";
  v8[2] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(a1 + 32) + 72LL));
  v7[3] = @"rangedRegions";
  v8[3] = +[NSNumber numberWithUnsignedChar:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedChar:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 80LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v8,  v7,  4LL);
}

double sub_1004E0C0C(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D170);
  }
  uint64_t v3 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    uint64_t v6 = a2 + 16;
    if ((a2[39] & 0x80u) != 0) {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    int v7 = *((_DWORD *)a2 + 16);
    *(_DWORD *)std::string buf = 68290051;
    int v11 = 0;
    __int16 v12 = 2082;
    int v13 = "";
    __int16 v14 = 1026;
    int v15 = v4;
    __int16 v16 = 2050;
    uint64_t v17 = v5;
    __int16 v18 = 2081;
    int v19 = v6;
    __int16 v20 = 1026;
    int v21 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:iB: submit error event, metric.valid:%{public}d, metric.timstamp:%{public}f, metric.bundleId:%{private, location:escape_only}s, errorType:%{public}d}",  buf,  0x32u);
  }

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  uint64_t v9[2] = sub_1004E0D70;
  v9[3] = &unk_101820718;
  void v9[4] = a2;
  *(void *)&double result = AnalyticsSendEventLazy(@"com.apple.locationd.proximity.iBeacon.iBeaconErrorEvent", v9).n128_u64[0];
  return result;
}

NSDictionary *sub_1004E0D70(uint64_t a1)
{
  uint64_t v2 = @"ErrorType";
  uint64_t v3 = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 64LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v3,  &v2,  1LL);
}

double sub_1004E0DF4(uint64_t a1, int *a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D170);
  }
  uint64_t v3 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    int v5 = a2[1];
    int v6 = *((unsigned __int8 *)a2 + 8);
    uint64_t v7 = *((void *)a2 + 2);
    uint64_t v8 = *((void *)a2 + 3);
    int v9 = a2[8];
    int v10 = a2[9];
    int v11 = a2[10];
    int v12 = a2[11];
    uint64_t v13 = *((void *)a2 + 6);
    uint64_t v14 = *((void *)a2 + 7);
    uint64_t v15 = *((void *)a2 + 8);
    *(_DWORD *)std::string buf = 68292098;
    int v19 = 0;
    __int16 v20 = 2082;
    int v21 = "";
    __int16 v22 = 2050;
    uint64_t v23 = v13;
    __int16 v24 = 1026;
    int v25 = v4;
    __int16 v26 = 1026;
    int v27 = v5;
    __int16 v28 = 1026;
    int v29 = v6;
    __int16 v30 = 2050;
    uint64_t v31 = v7;
    __int16 v32 = 2050;
    uint64_t v33 = v8;
    __int16 v34 = 1026;
    int v35 = v9;
    __int16 v36 = 1026;
    int v37 = v10;
    __int16 v38 = 1026;
    int v39 = v11;
    __int16 v40 = 1026;
    int v41 = v12;
    __int16 v42 = 2050;
    uint64_t v43 = v14;
    __int16 v44 = 2050;
    uint64_t v45 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLRG: submit CLRGSessionMetric session, sessionDuration:%{public}f, activityTyp e:%{public}d, CLRPowerMode:%{public}d, sessionLeeched:%{public}d, ttff_s:%{public}f, horizonta lUncFF_m:%{public}f, hUnc5SecAfterFF_m:%{public}d, hUnc10SecAfterFF_m:%{public}d, hUnc15SecAfterFF _m:%{public}d, hUnc20SecAfterFF_m:%{public}d, intendedInterSessionDuration_s:%{public}f, realInter SessionDuration_s:%{public}f}",  buf,  0x6Eu);
  }

  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  _OWORD v17[2] = sub_1004E0F94;
  v17[3] = &unk_101820718;
  v17[4] = a2;
  *(void *)&double result = AnalyticsSendEventLazy(@"com.apple.locationd.position.CLRGSessionMetric", v17).n128_u64[0];
  return result;
}

NSDictionary *sub_1004E0F94(uint64_t a1)
{
  v3[0] = @"sessionDuration";
  v4[0] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(a1 + 32) + 48LL));
  v3[1] = @"activityType";
  v4[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", **(unsigned int **)(a1 + 32));
  v3[2] = @"CLRPowerMode";
  void v4[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 4LL));
  v3[3] = @"sessionLeeched";
  v4[3] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 8LL));
  void v3[4] = @"ttff_s";
  void v4[4] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(a1 + 32) + 16LL));
  void v3[5] = @"horizontalUncFF_m";
  v4[5] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(a1 + 32) + 24LL));
  void v3[6] = @"hUnc5SecAfterFF_m";
  void v4[6] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 32LL));
  v3[7] = @"hUnc10SecAfterFF_m";
  v4[7] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 36LL));
  _WORD v3[8] = @"hUnc15SecAfterFF_m";
  _WORD v4[8] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 40LL));
  v3[9] = @"hUnc20SecAfterFF_m";
  v4[9] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 44LL));
  v3[10] = @"intendedInterSessionDuration_s";
  v4[10] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(a1 + 32) + 56LL));
  v3[11] = @"realInterSessionDuration_s";
  v4[11] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(a1 + 32) + 64LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  12LL);
}

double sub_1004E1180(uint64_t a1, int *a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D170);
  }
  uint64_t v3 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    int v6 = a2[4];
    uint64_t v7 = *((void *)a2 + 3);
    *(_DWORD *)std::string buf = 68290050;
    __int16 v12 = 2082;
    int v11 = 0;
    uint64_t v13 = "";
    __int16 v14 = 1026;
    int v15 = v4;
    __int16 v16 = 2050;
    uint64_t v17 = v5;
    __int16 v18 = 1026;
    int v19 = v6;
    __int16 v20 = 2050;
    uint64_t v21 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLRG: submit CLRGClientMetric session, CLRPowerMode:%{public}d, CLRActiveLifeDurati on:%{public}f, CLRGnssSessionCount:%{public}d, CLRGnssSessionDuration:%{public}f}",  buf,  0x32u);
  }

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  uint64_t v9[2] = sub_1004E12D0;
  v9[3] = &unk_101820718;
  void v9[4] = a2;
  *(void *)&double result = AnalyticsSendEventLazy(@"com.apple.locationd.position.CLRGClientMetric", v9).n128_u64[0];
  return result;
}

NSDictionary *sub_1004E12D0(uint64_t a1)
{
  v3[0] = @"CLRPowerMode";
  v4[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", **(unsigned int **)(a1 + 32));
  v3[1] = @"CLRActiveLifeDuration";
  v4[1] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(a1 + 32) + 8LL));
  v3[2] = @"CLRGnssSessionCount";
  void v4[2] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 16LL));
  v3[3] = @"CLRGnssSessionDuration";
  v4[3] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  *(double *)(*(void *)(a1 + 32) + 24LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  4LL);
}

double sub_1004E13BC(uint64_t a1, int *a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D170);
  }
  uint64_t v3 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    int v5 = a2[1];
    int v6 = a2[2];
    *(_DWORD *)std::string buf = 68289794;
    int v10 = 0;
    __int16 v11 = 2082;
    __int16 v12 = "";
    __int16 v13 = 1026;
    int v14 = v4;
    __int16 v15 = 1026;
    int v16 = v5;
    __int16 v17 = 1026;
    int v18 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLRG: submit DailyGnss usage detail, totalGnssInADay_s:%{public}d, totalLeechedGnss InADay_s:%{public}d, totalProactiveGnssInADay_s:%{public}d}",  buf,  0x24u);
  }

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1004E14F8;
  v8[3] = &unk_101820718;
  void v8[4] = a2;
  *(void *)&double result = AnalyticsSendEventLazy(@"com.apple.locationd.position.CLRGDailyMetric", v8).n128_u64[0];
  return result;
}

NSDictionary *sub_1004E14F8(uint64_t a1)
{
  v3[0] = @"totalGnssInADay_s";
  v4[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", **(unsigned int **)(a1 + 32));
  v3[1] = @"totalLeechedGnssInADay_s";
  v4[1] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 4LL));
  v3[2] = @"totalProactiveGnssInADay_s";
  void v4[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 8LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

void sub_1004E15C4(id a1)
{
  qword_101934A68 = (uint64_t)os_log_create("com.apple.locationd.Utility", "LocationMetrics");
}

void sub_1004E15F0(id a1)
{
  qword_101934978 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

void sub_1004E161C(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_1004E1648()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_1012EE7B0;
      v1[3] = unk_1012EE7C0;
      v1[4] = xmmword_1012EE7D0;
      v1[0] = xmmword_1012EE790;
      v1[1] = unk_1012EE7A0;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_1004E171C(_Unwind_Exception *a1)
{
}

void sub_1004E1734()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_1004E1798()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_1004E180C(_Unwind_Exception *a1)
{
}

void sub_1004E1824()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_1004E18C0(_Unwind_Exception *a1)
{
}

void sub_1004E18D8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      _WORD *v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_1004E1964(_Unwind_Exception *a1)
{
}

uint64_t sub_1004E197C()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_101996138, (void *)&_mh_execute_header);
}

uint64_t sub_1004E2C54(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    int v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 2048;
      uint64_t v14 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMVector.h, line 277 ,invalid index %zu >= %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v7 = 134218240;
      unint64_t v8 = a2;
      __int16 v9 = 2048;
      uint64_t v10 = 2LL;
      int v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMVecto r.h, line 277,invalid index %zu >= %zu.",  (size_t)&v7,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T &CMVector<float, 2>::operator[](const size_t) [T = float, N = 2]",  "%s\n",  v6);
    }
  }

  return a1 + 4 * a2;
}

uint64_t sub_1004E2E2C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    int v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v17 = a2;
      __int16 v18 = 2048;
      uint64_t v19 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 7 7,invalid row %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v12 = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 2048;
      uint64_t v15 = 2LL;
      unint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMat rix.h, line 77,invalid row %zu > %zu.",  (size_t)&v12,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T &CMMatrix<float, 2>::operator()(size_t, size_t) [T = float, M = 2, N = 2]",  "%s\n",  v8);
    }
  }

  if (a3 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    __int16 v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v17 = a3;
      __int16 v18 = 2048;
      uint64_t v19 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 7 8,invalid col %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v12 = 134218240;
      unint64_t v13 = a3;
      __int16 v14 = 2048;
      uint64_t v15 = 2LL;
      LODWORD(v11) = 22;
      uint64_t v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMa trix.h, line 78,invalid col %zu > %zu.",  (size_t)&v12,  v11);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T &CMMatrix<float, 2>::operator()(size_t, size_t) [T = float, M = 2, N = 2]",  "%s\n",  v10);
    }
  }

  return a1 + 4 * (a2 + 2 * a3);
}

void sub_1004E3208(uint64_t a1, xpc_activity_t activity)
{
  if (!xpc_activity_get_state(activity))
  {
    [*(id *)(a1 + 32) _setXPCCriteriaForActivity:activity withDescription:*(void *)(a1 + 40)];
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    int v4 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      *(_DWORD *)std::string buf = 138412290;
      uint64_t v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Register %@ on DAS", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      uint64_t v7 = *(void *)(a1 + 40);
      int v11 = 138412290;
      uint64_t v12 = v7;
      unint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "Register %@ on DAS",  &v11,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator registerAndRunXPCActivity:withActivityIdentifier:andDescription:]_block_invoke",  "%s\n",  v8);
    }
  }

  if (xpc_activity_get_state(activity) == 2)
  {
    if (xpc_activity_set_state(activity, 4LL))
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
    }

    else
    {
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      int v6 = (os_log_s *)qword_1019346A8;
      if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Error: cannot set xpc activity state to CONTINUE",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019346A0 != -1) {
          dispatch_once(&qword_1019346A0, &stru_10183D2D0);
        }
        LOWORD(v11) = 0;
        LODWORD(v1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 2;
        __int16 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "Error: cannot set xpc activity state to CONTINUE",  &v11,  v10);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator registerAndRunXPCActivity:withActivityIdentifier:andDescription:]_block_invoke",  "%s\n",  v9);
      }
    }
  }

NSDictionary *sub_1004E3720(uint64_t a1)
{
  uint64_t v2 = @"xpcTaskWaitingTime";
  uint64_t v3 = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v3,  &v2,  1LL);
}

id sub_1004E384C(uint64_t a1)
{
  if (qword_1019346A0 != -1) {
    dispatch_once(&qword_1019346A0, &stru_10183D2D0);
  }
  uint64_t v2 = (os_log_s *)qword_1019346A8;
  if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 56);
    *(_DWORD *)std::string buf = 134218240;
    uint64_t v16 = v3;
    __int16 v17 = 2048;
    uint64_t v18 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "start to compute MSLP,startTime,%f,endTime,%f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 56);
    int v11 = 134218240;
    uint64_t v12 = v7;
    __int16 v13 = 2048;
    uint64_t v14 = v8;
    LODWORD(v1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 22;
    __int16 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "start to compute MSLP,startTime,%f,endTime,%f",  COERCE_DOUBLE(&v11),  v10);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator computeHistoricalMeanSeaLevelPressureWithStartTime:andEndTime:andCompletionBlock:]_block_invoke",  "%s\n",  v9);
  }

  uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  return objc_msgSend( *(id *)(a1 + 32),  "_elevationBatchProcessingWithStartTime:andEndTime:andLocationBuffer:andKSEstimatesBuffer:andTaskType:andCompletionBlock:",  v5,  *(double *)(a1 + 48),  *(double *)(a1 + 56));
}

id sub_1004E3A84(uint64_t a1)
{
  if (xpc_activity_set_state(*(xpc_activity_t *)(a1 + 56), 5LL))
  {
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    uint64_t v2 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Finish MSLP estimation scheduled by DAS",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      LOWORD(v7[0]) = 0;
      uint64_t v3 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "Finish MSLP estimation scheduled by DAS",  v7,  2,  v7[0]);
LABEL_19:
      int v6 = (uint8_t *)v3;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator computeHistoricalMeanSeaLevelPressureWithStartTime:andEndTime:andCompletionBlock:]_block_invoke",  "%s\n",  v3);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    uint64_t v4 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Error: cannot set xpc activity state to Done",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      LOWORD(v7[0]) = 0;
      uint64_t v3 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "Error: cannot set xpc activity state to Done",  v7,  2,  v7[0]);
      goto LABEL_19;
    }
  }

  return [*(id *)(*(void *)(a1 + 32) + 88) setRegisteredXPCTaskMSLP:0];
}

void sub_1004E40F0(uint64_t a1, void *a2)
{
  if (a2)
  {
    NSLog(@"%@", [a2 userInfo]);

    return;
  }

  uint64_t v3 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  double v4 = *(double *)(a1 + 80) + 29.72;
  double v5 = *(double *)(a1 + 88) + -29.72;
  LODWORD(v6) = vcvtad_u64_f64((v4 - v5 + v4 - v5) / 2.56);
  objc_msgSend( *(id *)(*(void *)(a1 + 40) + 88),  "fetchElevationsWithStartTime:andEndTime:andBatchSize:andElevationArray:",  +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v6),  v3,  v5,  v4);
  uint64_t v106 = v3;
  if (*(_BYTE *)(*(void *)(a1 + 40) + 40LL))
  {
    __int128 v114 = 0u;
    __int128 v115 = 0u;
    __int128 v112 = 0u;
    __int128 v113 = 0u;
    uint64_t v7 = *(void **)(a1 + 32);
    id v8 = [v7 countByEnumeratingWithState:&v112 objects:v145 count:16];
    if (v8)
    {
      id v10 = v8;
      uint64_t v11 = *(void *)v113;
      *(void *)&__int128 v9 = 134219520LL;
      __int128 v107 = v9;
      do
      {
        uint64_t v12 = 0LL;
        do
        {
          if (*(void *)v113 != v11) {
            objc_enumerationMutation(v7);
          }
          __int16 v13 = *(void **)(*((void *)&v112 + 1) + 8LL * (void)v12);
          if (qword_1019346A0 != -1) {
            dispatch_once(&qword_1019346A0, &stru_10183D2D0);
          }
          uint64_t v14 = (os_log_s *)qword_1019346A8;
          if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v15 = *(void **)(a1 + 96);
            [v13 timestamp];
            uint64_t v17 = v16;
            [v13 elevation];
            uint64_t v19 = v18;
            [v13 verticalAccuracy];
            uint64_t v21 = v20;
            [v13 latitude];
            uint64_t v23 = v22;
            [v13 longitude];
            uint64_t v25 = v24;
            [v13 horizontalAccuracy];
            *(_DWORD *)std::string buf = v107;
            id v132 = v15;
            __int16 v133 = 2048;
            uint64_t v134 = v17;
            __int16 v135 = 2048;
            uint64_t v136 = v19;
            __int16 v137 = 2048;
            uint64_t v138 = v21;
            __int16 v139 = 2048;
            uint64_t v140 = v23;
            __int16 v141 = 2048;
            uint64_t v142 = v25;
            __int16 v143 = 2048;
            uint64_t v144 = v26;
            _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "enumerate locations fetched from DB,taskType,%lu,timestamp,%f,elevation,%f,verticalAccuracy,%f,lat,%f,lon, %f,horizontalAccuracy,%f",  buf,  0x48u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019346A0 != -1) {
              dispatch_once(&qword_1019346A0, &stru_10183D2D0);
            }
            uint64_t v27 = qword_1019346A8;
            __int16 v28 = *(void **)(a1 + 96);
            [v13 timestamp];
            uint64_t v30 = v29;
            [v13 elevation];
            uint64_t v32 = v31;
            [v13 verticalAccuracy];
            uint64_t v34 = v33;
            [v13 latitude];
            uint64_t v36 = v35;
            [v13 longitude];
            uint64_t v38 = v37;
            [v13 horizontalAccuracy];
            int v117 = v107;
            id v118 = v28;
            __int16 v119 = 2048;
            uint64_t v120 = v30;
            __int16 v121 = 2048;
            uint64_t v122 = v32;
            __int16 v123 = 2048;
            uint64_t v124 = v34;
            __int16 v125 = 2048;
            uint64_t v126 = v36;
            __int16 v127 = 2048;
            uint64_t v128 = v38;
            __int16 v129 = 2048;
            uint64_t v130 = v39;
            LODWORD(v104) = 72;
            __int16 v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v27,  2LL,  "enumerate locations fetched from DB,taskType,%lu,timestamp,%f,elevation,%f,verticalAccuracy, %f,lat,%f,lon,%f,horizontalAccuracy,%f",  &v117,  v104,  v105,  *(double *)&v106,  *(double *)&v107,  *((double *)&v107 + 1),  *(double *)&v108);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator _gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndTime: andVisitArray:andVisitSearchStartIndex:andCompletionBlock:]_block_invoke",  "%s\n",  v40);
          }

          uint64_t v12 = (char *)v12 + 1;
        }

        while (v10 != v12);
        id v41 = [v7 countByEnumeratingWithState:&v112 objects:v145 count:16];
        id v10 = v41;
      }

      while (v41);
    }

    __int128 v110 = 0u;
    __int128 v111 = 0u;
    __int128 v108 = 0u;
    __int128 v109 = 0u;
    uint64_t v3 = v106;
    id v42 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v106,  "countByEnumeratingWithState:objects:count:",  &v108,  v116,  16LL);
    if (v42)
    {
      id v43 = v42;
      uint64_t v44 = *(void *)v109;
      do
      {
        uint64_t v45 = 0LL;
        do
        {
          if (*(void *)v109 != v44) {
            objc_enumerationMutation(v3);
          }
          uint64_t v46 = *(void **)(*((void *)&v108 + 1) + 8LL * (void)v45);
          double v47 = *(double *)(a1 + 88);
          [v46 timestamp];
          if (v47 < v48)
          {
            [v46 timestamp];
            if (v49 < *(double *)(a1 + 80))
            {
              if (qword_1019346A0 != -1) {
                dispatch_once(&qword_1019346A0, &stru_10183D2D0);
              }
              std::string::size_type v50 = (os_log_s *)qword_1019346A8;
              if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEBUG))
              {
                __int16 v51 = *(void **)(a1 + 96);
                [v46 timestamp];
                uint64_t v53 = v52;
                [v46 pressure];
                *(_DWORD *)std::string buf = 134218496;
                id v132 = v51;
                uint64_t v3 = v106;
                __int16 v133 = 2048;
                uint64_t v134 = v53;
                __int16 v135 = 2048;
                uint64_t v136 = v54;
                _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEBUG,  "enumerate elevations fetched from DB,taskType,%lu,timestamp,%f,pressure,%f",  buf,  0x20u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019346A0 != -1) {
                  dispatch_once(&qword_1019346A0, &stru_10183D2D0);
                }
                uint64_t v55 = qword_1019346A8;
                uint64_t v56 = *(void **)(a1 + 96);
                [v46 timestamp];
                uint64_t v58 = v57;
                [v46 pressure];
                int v117 = 134218496;
                id v118 = v56;
                __int16 v119 = 2048;
                uint64_t v120 = v58;
                __int16 v121 = 2048;
                uint64_t v122 = v59;
                LODWORD(v104) = 32;
                double v60 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v55,  2LL,  "enumerate elevations fetched from DB,taskType,%lu,timestamp,%f,pressure,%f",  &v117,  v104,  v105);
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator _gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndT ime:andVisitArray:andVisitSearchStartIndex:andCompletionBlock:]_block_invoke",  "%s\n",  v60);
                uint64_t v3 = v106;
              }
            }
          }

          uint64_t v45 = (char *)v45 + 1;
        }

        while (v43 != v45);
        id v61 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v3,  "countByEnumeratingWithState:objects:count:",  &v108,  v116,  16LL);
        id v43 = v61;
      }

      while (v61);
    }
  }

  id v62 = [*(id *)(a1 + 32) count];
  if (v62)
  {
    id v63 = v62;
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    int v64 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "firstObject"), "timestamp");
      uint64_t v66 = v65;
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "firstObject"), "elevation");
      uint64_t v68 = v67;
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "lastObject"), "timestamp");
      uint64_t v70 = v69;
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "lastObject"), "elevation");
      *(_DWORD *)std::string buf = 134350080;
      id v132 = v63;
      __int16 v133 = 2050;
      uint64_t v134 = v66;
      __int16 v135 = 2048;
      uint64_t v136 = v68;
      __int16 v137 = 2050;
      uint64_t v138 = v70;
      __int16 v139 = 2048;
      uint64_t v140 = v71;
      _os_log_impl( (void *)&_mh_execute_header,  v64,  OS_LOG_TYPE_DEFAULT,  "total locations,%{public}lu,first timestamp,%{public}f,first elevation,%f,last timestamp,%{public}f,last elevation,%f",  buf,  0x34u);
    }

    uint64_t v3 = v106;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      uint64_t v72 = qword_1019346A8;
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "firstObject"), "timestamp");
      uint64_t v74 = v73;
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "firstObject"), "elevation");
      uint64_t v76 = v75;
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "lastObject"), "timestamp");
      uint64_t v78 = v77;
      objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "lastObject"), "elevation");
      int v117 = 134350080;
      id v118 = v63;
      __int16 v119 = 2050;
      uint64_t v120 = v74;
      __int16 v121 = 2048;
      uint64_t v122 = v76;
      __int16 v123 = 2050;
      uint64_t v124 = v78;
      __int16 v125 = 2048;
      uint64_t v126 = v79;
      LODWORD(v104) = 52;
      int v80 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v72,  0LL,  "total locations,%{public}lu,first timestamp,%{public}f,first elevation,%f,last timestamp,%{public} f,last elevation,%f",  &v117,  *(void *)&v104);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator _gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndTime:andVis itArray:andVisitSearchStartIndex:andCompletionBlock:]_block_invoke",  "%s\n",  v80);
      goto LABEL_50;
    }
  }

  else
  {
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    uint64_t v81 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v81, OS_LOG_TYPE_DEFAULT, "total locations,0", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      LOWORD(v117) = 0;
      LODWORD(v104) = 2;
      int v80 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "total locations,0",  &v117,  *(void *)&v104);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator _gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndTime:andVis itArray:andVisitSearchStartIndex:andCompletionBlock:]_block_invoke",  "%s\n",  v80);
LABEL_50:
      free(v80);
LABEL_51:
      uint64_t v3 = v106;
    }
  }

  id v82 = -[NSMutableArray count](v3, "count");
  if (v82)
  {
    id v83 = v82;
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    uint64_t v84 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(-[NSMutableArray firstObject](v106, "firstObject"), "timestamp");
      uint64_t v86 = v85;
      objc_msgSend(-[NSMutableArray firstObject](v106, "firstObject"), "pressure");
      uint64_t v88 = v87;
      objc_msgSend(-[NSMutableArray lastObject](v106, "lastObject"), "timestamp");
      uint64_t v90 = v89;
      objc_msgSend(-[NSMutableArray lastObject](v106, "lastObject"), "pressure");
      *(_DWORD *)std::string buf = 134350080;
      id v132 = v83;
      __int16 v133 = 2050;
      uint64_t v134 = v86;
      __int16 v135 = 2048;
      uint64_t v136 = v88;
      __int16 v137 = 2050;
      uint64_t v138 = v90;
      __int16 v139 = 2048;
      uint64_t v140 = v91;
      _os_log_impl( (void *)&_mh_execute_header,  v84,  OS_LOG_TYPE_DEFAULT,  "total elevations,%{public}lu,first timestamp,%{public}f,first pressure,%f,last timestamp,%{public}f,last pressure,%f",  buf,  0x34u);
    }

    uint64_t v3 = v106;
    if (!sub_1002921D0(115, 2)) {
      goto LABEL_71;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    uint64_t v92 = qword_1019346A8;
    objc_msgSend(-[NSMutableArray firstObject](v106, "firstObject"), "timestamp");
    uint64_t v94 = v93;
    objc_msgSend(-[NSMutableArray firstObject](v106, "firstObject"), "pressure");
    uint64_t v96 = v95;
    objc_msgSend(-[NSMutableArray lastObject](v106, "lastObject"), "timestamp");
    uint64_t v98 = v97;
    objc_msgSend(-[NSMutableArray lastObject](v106, "lastObject"), "pressure");
    int v117 = 134350080;
    id v118 = v83;
    __int16 v119 = 2050;
    uint64_t v120 = v94;
    __int16 v121 = 2048;
    uint64_t v122 = v96;
    __int16 v123 = 2050;
    uint64_t v124 = v98;
    __int16 v125 = 2048;
    uint64_t v126 = v99;
    LODWORD(v104) = 52;
    double v100 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v92,  0LL,  "total elevations,%{public}lu,first timestamp,%{public}f,first pressure,%f,last timestamp,%{pu blic}f,last pressure,%f",  &v117,  *(void *)&v104);
  }

  else
  {
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    std::stringbuf::string_type v101 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v101, OS_LOG_TYPE_DEFAULT, "total elevations,0", buf, 2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_71;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    LOWORD(v117) = 0;
    LODWORD(v104) = 2;
    double v100 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "total elevations,0",  &v117,  *(void *)&v104);
  }

  __int128 v102 = (uint8_t *)v100;
  sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator _gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndTime:andVisitAr ray:andVisitSearchStartIndex:andCompletionBlock:]_block_invoke",  "%s\n",  v100);
  if (v102 != buf) {
    free(v102);
  }
  uint64_t v3 = v106;
LABEL_71:
  LODWORD(v103) = *(_DWORD *)(a1 + 112);
  [*(id *)(a1 + 40) _decimateLocationsWithStartTime:*(void *)(a1 + 48) andEndTime:*(void *)(a1 + 56) andLocationArray:*(void *)(a1 + 32) andElevationArray:v3 andRawLocationArray:*(void *)(a1 + 96) andRawElevationArr ay:*(void *)(a1 + 64) andTaskType:*(double *)(a1 + 88) andVisitArray:*(double *)(a1 + 80) andVisitSearchStartIndex:v103];

  [*(id *)(a1 + 40) _gatherLocationArray:*(void *)(a1 + 48) andElevationArray:*(void *)(a1 + 56) andTaskType:*(void *)(a1 + 96) withStartTime:*(void *)(a1 + 64) andEndTime:*(unsigned int *)(a1 + 112) andVisitArray:*(void *)(a1 + 72) andVisitSearchStartIndex:*(double *)(a1 + 80) a ndCompletionBlock:*(double *)(a1 + 104)];
}

BOOL sub_1004E5B0C(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a2 + 8) - *(float *)(a2 + 4);
  if (v2 < 0.0) {
    float v2 = -v2;
  }
  if (v2 > 1.0e-16) {
    return 0LL;
  }
  uint64_t v5 = a1 + 8;
  unint64_t v6 = 1LL;
  while (1)
  {
    float v7 = sub_1004E9AD8(a2, v6, v6);
    if (!v6)
    {
      float v8 = *(float *)sub_1004E9E30(v5, 0LL, 1uLL);
      float v9 = *(float *)sub_1004E9E30(v5, 0LL, 1uLL);
      float v7 = v7 + (float)((float)-(float)(v8 * v9) * *(float *)sub_1004EA188(a1, 1uLL));
    }

    *(float *)sub_1004EA188(a1, v6) = v7;
    if (v6)
    {
      float v10 = sub_1004E9AD8(a2, v6 - 1, v6);
      float v11 = v10 / *(float *)sub_1004EA188(a1, v6);
      *(float *)sub_1004E9E30(v5, v6 - 1, v6) = v11;
    }

    if (--v6 == -1LL) {
      return 1LL;
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183D310);
  }
  __int16 v13 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134217984;
    unint64_t v18 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "D(%zu) <= 0 non-positive definite matrix!",  buf,  0xCu);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    int v15 = 134217984;
    unint64_t v16 = v6;
    uint64_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "D(%zu) <= 0 non-positive definite matrix!",  (size_t)&v15);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CMFactoredMatrix<float, 2>::factor(const CMMatrix<T, N, N> &) [T = float, N = 2]",  "%s\n",  v14);
    return 0LL;
  }

  return result;
}

void sub_1004E62B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = 0LL;
  uint64_t v7 = a1 + 8;
  char v8 = 1;
  do
  {
    char v9 = v8;
    float v10 = *(float *)sub_1004E2E2C(a2, v6, 0LL);
    float v11 = *(float *)sub_1004E9E30(v7, 0LL, 1uLL);
    uint64_t v12 = (float *)sub_1004E2E2C(a2, v6, 1uLL);
    *uint64_t v12 = *v12 + (float)(v10 * v11);
    *(_DWORD *)sub_1004E2E2C((uint64_t)v49, v6, 1uLL) = 0;
    *(_DWORD *)sub_1004E2E2C((uint64_t)v49, v6, sub_1004C2474(v1, 0LL) = 0;
    __int16 v13 = (_DWORD *)sub_1004E2E2C((uint64_t)v49, v6, v6);
    char v8 = 0;
    _DWORD *v13 = 1065353216;
    unint64_t v6 = 1LL;
  }

  while ((v9 & 1) != 0);
  for (uint64_t i = 1LL; ; uint64_t i = v16 - 1)
  {
    unint64_t v15 = 0LL;
    unint64_t v16 = i;
    v54[i] = 0;
    char v17 = 1;
    float v18 = 0.0;
    do
    {
      char v19 = v17;
      float v20 = *(float *)sub_1004E2E2C(a2, v16, v15);
      float v21 = v20 * *(float *)sub_1004E2E2C(a2, v16, v15);
      float v22 = v18 + (float)(v21 * *(float *)sub_1004EA188(a1, v15));
      float v23 = *(float *)sub_1004E2E2C((uint64_t)v49, v16, v15);
      float v24 = v23 * *(float *)sub_1004E2E2C((uint64_t)v49, v16, v15);
      float v25 = sub_1004EA360(a3, v15);
      char v17 = 0;
      float v18 = v22 + (float)(v24 * v25);
      *(float *)&v54[v16] = v18;
      unint64_t v15 = 1LL;
    }

    while ((v19 & 1) != 0);
    if (v18 <= 0.0) {
      break;
    }
    if (!v16)
    {
      int v45 = v54[0];
      *(_DWORD *)sub_1004EA188(a1, sub_1004C2474(v1, 0LL) = v45;
      int v46 = v54[1];
      *(_DWORD *)sub_1004EA188(a1, 1uLL) = v46;
      return;
    }

    unint64_t v26 = 0LL;
    float v27 = 0.0;
    char v28 = 1;
    do
    {
      char v29 = v28;
      float v30 = *(float *)sub_1004E2E2C(a2, 0LL, v26);
      float v31 = v30 * *(float *)sub_1004EA188(a1, v26);
      float v32 = v27 + (float)(v31 * *(float *)sub_1004E2E2C(a2, v16, v26));
      float v33 = *(float *)sub_1004E2E2C((uint64_t)v49, 0LL, v26);
      float v34 = v33 * sub_1004EA360(a3, v26);
      uint64_t v35 = (float *)sub_1004E2E2C((uint64_t)v49, v16, v26);
      char v28 = 0;
      float v27 = v32 + (float)(v34 * *v35);
      unint64_t v26 = 1LL;
    }

    while ((v29 & 1) != 0);
    unint64_t v36 = 0LL;
    *(float *)sub_1004E9E30(v7, 0LL, v16) = v27 / v18;
    char v37 = 1;
    do
    {
      char v38 = v37;
      float v39 = *(float *)sub_1004E9E30(v7, 0LL, v16);
      float v40 = *(float *)sub_1004E2E2C(a2, v16, v36);
      id v41 = (float *)sub_1004E2E2C(a2, 0LL, v36);
      float *v41 = *v41 - (float)(v39 * v40);
      float v42 = *(float *)sub_1004E9E30(v7, 0LL, v16);
      float v43 = *(float *)sub_1004E2E2C((uint64_t)v49, v16, v36);
      uint64_t v44 = (float *)sub_1004E2E2C((uint64_t)v49, 0LL, v36);
      char v37 = 0;
      *uint64_t v44 = *v44 - (float)(v42 * v43);
      unint64_t v36 = 1LL;
    }

    while ((v38 & 1) != 0);
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183D310);
  }
  double v47 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134217984;
    unint64_t v53 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEBUG,  "D[%zu] <= 0, matrix ! positive definite",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    int v50 = 134217984;
    unint64_t v51 = v16;
    double v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "D[%zu] <= 0, matrix ! positive definite",  (size_t)&v50);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CMFactoredMatrix<float, 2>::thorntonTemporalUpdate(CMMatrix<T, N, N> &, const CMVector<T, N> &) [T = float, N = 2]",  "%s\n",  v48);
  }

void sub_1004E6868(float *a1, uint64_t a2, float *a3, float *a4)
{
  uint64_t v27 = 0LL;
  uint64_t v8 = (uint64_t)(a1 + 2);
  float v9 = sub_1004EA538(a2, 0LL, 0LL);
  float v10 = v9 * *(float *)sub_1004EA188((uint64_t)a1, 0LL);
  float v11 = sub_1004EA538(a2, 0LL, 1uLL);
  float v12 = sub_1004EA538(a2, 0LL, 0LL);
  float v13 = *(float *)sub_1004E9E30(v8, 0LL, 1uLL);
  uint64_t v14 = (float *)sub_1004EA188((uint64_t)a1, 1uLL);
  float v15 = *a3 + (float)(v9 * v10);
  if (v15 <= 0.0)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    float v24 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 134217984;
      uint64_t v31 = 0LL;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "%zu: alpha <= 0, matrix ! positive definite",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 == -1)
    {
LABEL_18:
      int v28 = 134217984;
      uint64_t v29 = 0LL;
      unint64_t v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "%zu: alpha <= 0, matrix ! positive definite",  &v28);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMVector<T, N> CMFactoredMatrix<float, 2>::biermanObservationalUpdate(const CMMatrix<T, P, N> &, const CMVector< T, P> &, const CMVector<T, P> &) [T = float, N = 2, P = 1UL]",  "%s\n",  v26);
      return;
    }

float sub_1004E7BF8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0LL;
  char v5 = 1;
  do
  {
    unint64_t v6 = 0LL;
    char v7 = v5;
    char v8 = 1;
    do
    {
      char v9 = v8;
      float v10 = sub_1004E9AD8(a1, v4, 0LL);
      float v11 = v10 * sub_1004E9AD8(a2, 0LL, v6);
      *(float *)sub_1004E2E2C((uint64_t)&v16, v4, v6) = v11;
      float v12 = sub_1004E9AD8(a1, v4, 1uLL);
      float v13 = sub_1004E9AD8(a2, 1uLL, v6);
      uint64_t v14 = (float *)sub_1004E2E2C((uint64_t)&v16, v4, v6);
      char v8 = 0;
      *uint64_t v14 = *v14 + (float)(v12 * v13);
      unint64_t v6 = 1LL;
    }

    while ((v9 & 1) != 0);
    char v5 = 0;
    unint64_t v4 = 1LL;
  }

  while ((v7 & 1) != 0);
  return v16;
}

float *sub_1004E7CF0(uint64_t a1, float a2, float a3, float a4, float a5)
{
  *(float *)float v11 = a2;
  *(float *)&v11[1] = a3;
  *(float *)&_DWORD v11[2] = a4;
  *(float *)&v11[3] = a5;
  float v6 = sub_1004E9AD8((uint64_t)v11, 0LL, 0LL);
  *(float *)sub_1004E2E2C(a1, 0LL, sub_1004C2474(v1, 0LL) = v6;
  float v7 = sub_1004E9AD8((uint64_t)v11, 0LL, 1uLL);
  *(float *)sub_1004E2E2C(a1, 1uLL, sub_1004C2474(v1, 0LL) = v7;
  float v8 = sub_1004E9AD8((uint64_t)v11, 1uLL, 0LL);
  *(float *)sub_1004E2E2C(a1, 0LL, 1uLL) = v8;
  float v9 = sub_1004E9AD8((uint64_t)v11, 1uLL, 1uLL);
  BOOL result = (float *)sub_1004E2E2C(a1, 1uLL, 1uLL);
  *BOOL result = v9;
  return result;
}

BOOL sub_1004E7DC4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0LL;
  for (char i = 1; ; char i = 0)
  {
    char v6 = i;
    float v7 = sub_1004EAF14(a1, v4);
    if (v7 == 0.0) {
      break;
    }
    unint64_t v4 = 1LL;
    if ((v6 & 1) == 0)
    {
      float v8 = *(float *)sub_1004E2C54(a2, 1uLL);
      float v9 = sub_1004EABBC(a1 + 8, 0LL, 1uLL);
      float v10 = (float *)sub_1004E2C54(a2, 0LL);
      *float v10 = *v10 - (float)(v8 * v9);
      float v11 = sub_1004EAF14(a1, 0LL);
      float v12 = (float *)sub_1004E2C54(a2, 0LL);
      *float v12 = *v12 / v11;
      float v13 = sub_1004EAF14(a1, 1uLL);
      uint64_t v14 = (float *)sub_1004E2C54(a2, 1uLL);
      *uint64_t v14 = *v14 / v13;
      float v15 = *(float *)sub_1004E2C54(a2, 0LL);
      *(float *)(a2 + 4) = *(float *)(a2 + 4) - (float)(v15 * sub_1004EABBC(a1 + 8, 0LL, 1uLL));
      return v7 != 0.0;
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183D310);
  }
  float v16 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134217984;
    unint64_t v22 = v4;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "D[%zu] == 0, semidefinite matrix!", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    int v19 = 134217984;
    unint64_t v20 = v4;
    float v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "D[%zu] == 0, semidefinite matrix!",  (size_t)&v19);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CMFactoredMatrix<float, 2>::solve(CMVector<T, N> &) const [T = float, N = 2]",  "%s\n",  v18);
  }

  return v7 != 0.0;
}

float sub_1004E8078(uint64_t a1, float *a2)
{
  unint64_t v4 = 0LL;
  char v5 = 1;
  do
  {
    char v6 = v5;
    float v7 = sub_1004E9AD8(a1, v4, 0LL) * *a2;
    *(float *)sub_1004E2C54((uint64_t)&v12, v4) = v7;
    float v8 = sub_1004E9AD8(a1, v4, 1uLL);
    float v9 = a2[1];
    float v10 = (float *)sub_1004E2C54((uint64_t)&v12, v4);
    char v5 = 0;
    *float v10 = *v10 + (float)(v8 * v9);
    unint64_t v4 = 1LL;
  }

  while ((v6 & 1) != 0);
  return v12;
}

float sub_1004E8124(uint64_t a1, float a2, float a3, float a4, float a5)
{
  unint64_t v6 = 0LL;
  *(float *)float v8 = a2;
  *(float *)&v8[1] = a3;
  *(float *)&v8[2] = a4;
  *(float *)&v8[3] = a5;
  do
  {
    *(float *)&v8[v6] = sub_1004EB0EC(a1, v6) + *(float *)&v8[v6];
    ++v6;
  }

  while (v6 != 4);
  return *(float *)v8;
}

float sub_1004E818C(uint64_t a1, float a2, float a3, float a4, float a5)
{
  unint64_t v6 = 0LL;
  *(float *)float v8 = a2;
  *(float *)&v8[1] = a3;
  *(float *)&v8[2] = a4;
  *(float *)&v8[3] = a5;
  do
  {
    *(float *)&v8[v6] = *(float *)&v8[v6] - sub_1004EB0EC(a1, v6);
    ++v6;
  }

  while (v6 != 4);
  return *(float *)v8;
}

void sub_1004E85A8(uint64_t a1, int a2)
{
  if (a2 == 0x7FFFFFFF)
  {
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    uint64_t v3 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 72);
      uint64_t v5 = *(void *)(a1 + 80);
      *(_DWORD *)std::string buf = 134218240;
      uint64_t v21 = v4;
      __int16 v22 = 2048;
      uint64_t v23 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "elevation batch processing returns early due to an error in querying visit with startTime,%f,endTime,%f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      uint64_t v9 = *(void *)(a1 + 72);
      uint64_t v10 = *(void *)(a1 + 80);
      int v16 = 134218240;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      uint64_t v19 = v10;
      LODWORD(v15) = 22;
      float v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  16LL,  "elevation batch processing returns early due to an error in querying visit with startTime,%f,endTime,%f",  COERCE_DOUBLE(&v16),  v15);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CLElevationProfileEstimator _elevationBatchProcessingWithStartTime:andEndTime:andLocationBuffer:andKSEstimates Buffer:andTaskType:andCompletionBlock:]_block_invoke",  "%s\n",  v11);
    }

    (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
  }

  else
  {
    unint64_t v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    float v7 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v8 = [*(id *)(a1 + 32) count];
      *(_DWORD *)std::string buf = 67109120;
      LODWORD(v21) = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "historicalVisits array count,count,%d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      uint64_t v12 = qword_1019346A8;
      unsigned int v13 = [*(id *)(a1 + 32) count];
      int v16 = 67109120;
      LODWORD(v17) = v13;
      uint64_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  2LL,  "historicalVisits array count,count,%d",  &v16);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator _elevationBatchProcessingWithStartTime:andEndTime:andLocationBuffer:andKSEstimates Buffer:andTaskType:andCompletionBlock:]_block_invoke",  "%s\n",  v14);
    }

    objc_msgSend( *(id *)(a1 + 40),  "_gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndTime:andVisitArray:andVisitSearchStartIndex :andCompletionBlock:",  *(void *)(a1 + 48),  v6);
  }

uint64_t sub_1004E897C(uint64_t a1)
{
  [*(id *)(a1 + 40) _alignElevationArray:*(void *)(a1 + 48) andLocationArray:*(void *)(a1 + 56)];
  [*(id *)(a1 + 40) _logValuesOfLocationArray:*(void *)(a1 + 56) andElevationArray:*(void *)(a1 + 48) andTaskType:*(void *)(a1 + 80)];
  if ([*(id *)(a1 + 56) count] && objc_msgSend(*(id *)(a1 + 48), "count"))
  {
    float v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    char v3 = 0;
    char v4 = 1;
    do
    {
      char v5 = v4;
      if (![*(id *)(a1 + 40) _forwardProcessingWithLocationArray:*(void *)(a1 + 56) andElevationArray:*(void *)(a1 + 48) andKFEstimatesBuffer:v2 andKeepAllLocations:v3 & 1 andTaskType:*(void *)(a1 + 80)]) {
        break;
      }
      -[NSMutableArray removeAllObjects](v2, "removeAllObjects");
      char v4 = 0;
      char v3 = 1;
    }

    while ((v5 & 1) != 0);
    [*(id *)(a1 + 56) removeAllObjects];
    [*(id *)(a1 + 48) removeAllObjects];
    [*(id *)(a1 + 40) _backwardProcessingWithKFEstimatesBuffer:v2 andKSEstimatesBuffer:*(void *)(a1 + 64)];
  }

  else
  {
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    unint64_t v6 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 80);
      uint64_t v8 = *(void *)(a1 + 88);
      uint64_t v9 = *(void *)(a1 + 96);
      id v10 = [*(id *)(a1 + 56) count];
      id v11 = [*(id *)(a1 + 48) count];
      *(_DWORD *)std::string buf = 134219008;
      uint64_t v32 = v7;
      __int16 v33 = 2048;
      uint64_t v34 = v8;
      __int16 v35 = 2048;
      uint64_t v36 = v9;
      __int16 v37 = 2048;
      id v38 = v10;
      __int16 v39 = 2048;
      id v40 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "No data available,taskType,%lu,startTime,%f,endTime,%f,locationCount,%lu,elevationCount,%lu",  buf,  0x34u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      uint64_t v13 = qword_1019346A8;
      uint64_t v14 = *(void *)(a1 + 80);
      uint64_t v15 = *(void *)(a1 + 88);
      uint64_t v16 = *(void *)(a1 + 96);
      id v17 = [*(id *)(a1 + 56) count];
      id v18 = [*(id *)(a1 + 48) count];
      int v21 = 134219008;
      uint64_t v22 = v14;
      __int16 v23 = 2048;
      uint64_t v24 = v15;
      __int16 v25 = 2048;
      uint64_t v26 = v16;
      __int16 v27 = 2048;
      id v28 = v17;
      __int16 v29 = 2048;
      id v30 = v18;
      LODWORD(v2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 52;
      uint64_t v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v13,  0LL,  "No data available,taskType,%lu,startTime,%f,endTime,%f,locationCount,%lu,elevationCount,%lu",  &v21,  v20);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator _elevationBatchProcessingWithStartTime:andEndTime:andLocationBuffer:andKSEstimates Buffer:andTaskType:andCompletionBlock:]_block_invoke",  "%s\n",  v19);
    }
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 72) + 16LL))();
}

id sub_1004E8D04(uint64_t a1)
{
  if (qword_1019346A0 != -1) {
    dispatch_once(&qword_1019346A0, &stru_10183D2D0);
  }
  float v2 = (os_log_s *)qword_1019346A8;
  if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    *(_DWORD *)std::string buf = 134218240;
    uint64_t v16 = v3;
    __int16 v17 = 2048;
    uint64_t v18 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "start to compute elevation profile,startTime,%f,endTime,%f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 48);
    int v11 = 134218240;
    uint64_t v12 = v7;
    __int16 v13 = 2048;
    uint64_t v14 = v8;
    LODWORD(v1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 22;
    uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "start to compute elevation profile,startTime,%f,endTime,%f",  COERCE_DOUBLE(&v11),  v10);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator computeElevationProfileWithStartTime:andEndTime:]_block_invoke",  "%s\n",  v9);
  }

  char v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  return objc_msgSend( *(id *)(a1 + 32),  "_elevationBatchProcessingWithStartTime:andEndTime:andLocationBuffer:andKSEstimatesBuffer:andTaskType:andCompletionBlock:",  v5,  *(double *)(a1 + 40),  *(double *)(a1 + 48));
}

void sub_1004E8F38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 88);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_1004E8FB0;
  void v4[3] = &unk_10181A2D8;
  __int128 v5 = *(_OWORD *)(a1 + 40);
  uint64_t v6 = v2;
  [v3 sendElevationsFromEstimates:(void)v5 withCompletionBlock:v4];
}

id sub_1004E8FB0(uint64_t a1)
{
  if (xpc_activity_set_state(*(xpc_activity_t *)(a1 + 40), 5LL))
  {
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    uint64_t v2 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Finish elevation profile calculation scheduled by DAS",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      LOWORD(v7[0]) = 0;
      uint64_t v3 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "Finish elevation profile calculation scheduled by DAS",  v7,  2,  v7[0]);
LABEL_19:
      uint64_t v6 = (uint8_t *)v3;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLElevationProfileEstimator computeElevationProfileWithStartTime:andEndTime:]_block_invoke",  "%s\n",  v3);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183D2D0);
    }
    uint64_t v4 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Error: cannot set xpc activity state to Done",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183D2D0);
      }
      LOWORD(v7[0]) = 0;
      uint64_t v3 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "Error: cannot set xpc activity state to Done",  v7,  2,  v7[0]);
      goto LABEL_19;
    }
  }

  return [*(id *)(*(void *)(a1 + 48) + 88) setRegisteredXPCTaskElevationProfile:0];
}

void sub_1004E9A54(id a1)
{
  qword_1019346A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Altimeter");
}

void sub_1004E9A80(id a1)
{
  qword_1019345B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pressure");
}

void sub_1004E9AAC(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

float sub_1004E9AD8(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    uint64_t v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v17 = a2;
      __int16 v18 = 2048;
      uint64_t v19 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 7 0,invalid row %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v12 = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 2048;
      uint64_t v15 = 2LL;
      uint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMat rix.h, line 70,invalid row %zu > %zu.",  (size_t)&v12,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMMatrix<float, 2>::operator()(size_t, size_t) const [T = float, M = 2, N = 2]",  "%s\n",  v8);
    }
  }

  if (a3 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    uint64_t v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v17 = a3;
      __int16 v18 = 2048;
      uint64_t v19 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 7 1,invalid col %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v12 = 134218240;
      unint64_t v13 = a3;
      __int16 v14 = 2048;
      uint64_t v15 = 2LL;
      LODWORD(v11) = 22;
      double v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMa trix.h, line 71,invalid col %zu > %zu.",  (size_t)&v12,  v11);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMMatrix<float, 2>::operator()(size_t, size_t) const [T = float, M = 2, N = 2]",  "%s\n",  v10);
    }
  }

  return *(float *)(a1 + 4 * (a2 + 2 * a3));
}

uint64_t sub_1004E9E30(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a3 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    uint64_t v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v17 = a3;
      __int16 v18 = 2048;
      uint64_t v19 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 237,invalid col %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v12 = 134218240;
      unint64_t v13 = a3;
      __int16 v14 = 2048;
      uint64_t v15 = 2LL;
      uint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFac toredMatrix.h, line 237,invalid col %zu > %zu.",  (size_t)&v12,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T &CMFactoredMatrix<float, 2>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) [T = float, N = 2]",  "%s\n",  v8);
    }
  }

  if (a3 <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    uint64_t v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v17 = a3;
      __int16 v18 = 2048;
      uint64_t v19 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix .h, line 238,invalid element %zu <= %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v12 = 134218240;
      unint64_t v13 = a3;
      __int16 v14 = 2048;
      uint64_t v15 = a2;
      LODWORD(v11) = 22;
      double v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CM FactoredMatrix.h, line 238,invalid element %zu <= %zu.",  (size_t)&v12,  v11);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T &CMFactoredMatrix<float, 2>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) [T = float, N = 2]",  "%s\n",  v10);
    }
  }

  return a1 + 4 * (a2 + (((a3 - 1) * a3) >> 1));
}

uint64_t sub_1004EA188(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    __int128 v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 2048;
      uint64_t v14 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Assertion failed: row < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 191,invalid row %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v7 = 134218240;
      unint64_t v8 = a2;
      __int16 v9 = 2048;
      uint64_t v10 = 2LL;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: row < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFac toredMatrix.h, line 191,invalid row %zu > %zu.",  (size_t)&v7,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T &CMFactoredMatrix<float, 2>::DiagonalMatrix::operator()(size_t) [T = float, N = 2]",  "%s\n",  v6);
    }
  }

  return a1 + 4 * a2;
}

float sub_1004EA360(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    __int128 v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 2048;
      uint64_t v14 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMVector.h, line 271 ,invalid index %zu >= %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v7 = 134218240;
      unint64_t v8 = a2;
      __int16 v9 = 2048;
      uint64_t v10 = 2LL;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMVecto r.h, line 271,invalid index %zu >= %zu.",  (size_t)&v7,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMVector<float, 2>::operator[](const size_t) const [T = float, N = 2]",  "%s\n",  v6);
    }
  }

  return *(float *)(a1 + 4 * a2);
}

float sub_1004EA538(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    int v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v17 = a2;
      __int16 v18 = 2048;
      uint64_t v19 = 1LL;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 7 0,invalid row %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v12 = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 2048;
      uint64_t v15 = 1LL;
      unint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMat rix.h, line 70,invalid row %zu > %zu.",  (size_t)&v12,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMMatrix<float, 1, 2>::operator()(size_t, size_t) const [T = float, M = 1, N = 2]",  "%s\n",  v8);
    }
  }

  if (a3 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    __int16 v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v17 = a3;
      __int16 v18 = 2048;
      uint64_t v19 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 7 1,invalid col %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v12 = 134218240;
      unint64_t v13 = a3;
      __int16 v14 = 2048;
      uint64_t v15 = 2LL;
      LODWORD(v11) = 22;
      uint64_t v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMa trix.h, line 71,invalid col %zu > %zu.",  (size_t)&v12,  v11);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMMatrix<float, 1, 2>::operator()(size_t, size_t) const [T = float, M = 1, N = 2]",  "%s\n",  v10);
    }
  }

  return *(float *)(a1 + 4 * (a3 + a2));
}

float *sub_1004EA88C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a3 | a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    int v12 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_FAULT,  "Assertion failed: i0 < N-Ni+1 && j0 < N-Nj+1, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math /CMFactoredMatrix.h, line 302,indices exceed factored matrix size.",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      v14[0] = 0;
      unint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i0 < N-Ni+1 && j0 < N-Nj+1, file /Library/Caches/com.apple.xbs/Sources/CoreLocat ion/Oscar/Math/CMFactoredMatrix.h, line 302,indices exceed factored matrix size.",  v14,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CMMatrix<T, Ni, Nj> CMFactoredMatrix<float, 2>::submatrix(size_t, size_t) const [T = float, N = 2, Nchar i = 2UL, Nj = 2UL]",  "%s\n",  v13);
    }
  }

  float v6 = sub_1004EAAEC(a1, a2, a3);
  *(float *)sub_1004E2E2C((uint64_t)&v15, 0LL, sub_1004C2474(v1, 0LL) = v6;
  float v7 = sub_1004EAAEC(a1, a2, a3 + 1);
  *(float *)sub_1004E2E2C((uint64_t)&v15, 0LL, 1uLL) = v7;
  unint64_t v8 = a2 + 1;
  float v9 = sub_1004EAAEC(a1, v8, a3);
  *(float *)sub_1004E2E2C((uint64_t)&v15, 1uLL, sub_1004C2474(v1, 0LL) = v9;
  float v10 = sub_1004EAAEC(a1, v8, a3 + 1);
  BOOL result = (float *)sub_1004E2E2C((uint64_t)&v15, 1uLL, 1uLL);
  *BOOL result = v10;
  return result;
}

float sub_1004EAAEC(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2 <= a3) {
    unint64_t v3 = a3;
  }
  else {
    unint64_t v3 = a2;
  }
  float v4 = 0.0;
  if (v3 <= 1)
  {
    uint64_t v8 = a1 + 8;
    do
    {
      unint64_t v9 = v3;
      float v10 = 1.0;
      float v11 = 1.0;
      if (v3 != a3)
      {
        float v11 = 0.0;
        if (v3 > a3) {
          float v11 = sub_1004EABBC(v8, 0LL, v3);
        }
      }

      if (v9 != a2)
      {
        float v10 = 0.0;
        if (v9 > a2) {
          float v10 = sub_1004EABBC(v8, 0LL, v9);
        }
      }

      float v4 = v4 + (float)((float)(v10 * sub_1004EAF14(a1, v9)) * v11);
      unint64_t v3 = 1LL;
    }

    while (!v9);
  }

  return v4;
}

float sub_1004EABBC(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a3 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    float v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v17 = a3;
      __int16 v18 = 2048;
      uint64_t v19 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 231,invalid col %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v12 = 134218240;
      unint64_t v13 = a3;
      __int16 v14 = 2048;
      uint64_t v15 = 2LL;
      uint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFac toredMatrix.h, line 231,invalid col %zu > %zu.",  (size_t)&v12,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMFactoredMatrix<float, 2>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) const [T = float, N = 2]",  "%s\n",  v8);
    }
  }

  if (a3 <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    unint64_t v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v17 = a3;
      __int16 v18 = 2048;
      uint64_t v19 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix .h, line 232,invalid element %zu <= %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v12 = 134218240;
      unint64_t v13 = a3;
      __int16 v14 = 2048;
      uint64_t v15 = a2;
      LODWORD(v11) = 22;
      float v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CM FactoredMatrix.h, line 232,invalid element %zu <= %zu.",  (size_t)&v12,  v11);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMFactoredMatrix<float, 2>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) const [T = float, N = 2]",  "%s\n",  v10);
    }
  }

  return *(float *)(a1 + 4 * (a2 + (((a3 - 1) * a3) >> 1)));
}

float sub_1004EAF14(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    __int128 v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 2048;
      uint64_t v14 = 2LL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Assertion failed: row < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 186,invalid row %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v7 = 134218240;
      unint64_t v8 = a2;
      __int16 v9 = 2048;
      uint64_t v10 = 2LL;
      float v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: row < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFac toredMatrix.h, line 186,invalid row %zu > %zu.",  (size_t)&v7,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMFactoredMatrix<float, 2>::DiagonalMatrix::operator()(size_t) const [T = float, N = 2]",  "%s\n",  v6);
    }
  }

  return *(float *)(a1 + 4 * a2);
}

float sub_1004EB0EC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D310);
    }
    __int128 v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 2048;
      uint64_t v14 = 4LL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Assertion failed: ldx < M*N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 84,invalid element %zu >= %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D310);
      }
      int v7 = 134218240;
      unint64_t v8 = a2;
      __int16 v9 = 2048;
      uint64_t v10 = 4LL;
      float v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: ldx < M*N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMM atrix.h, line 84,invalid element %zu >= %zu.",  (size_t)&v7,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMMatrix<float, 2>::operator[](size_t) const [T = float, M = 2, N = 2]",  "%s\n",  v6);
    }
  }

  return *(float *)(a1 + 4 * a2);
}

uint64_t sub_1004EB2C4()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_101996158, (void *)&_mh_execute_header);
}

void sub_1004EB3AC(id a1)
{
  qword_101996188 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLFilteredLocationControllerSilo");
}

uint64_t sub_1004EB460(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1004EB5C0;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101996198 != -1) {
    dispatch_once(&qword_101996198, block);
  }
  return qword_1019A10D8;
}

uint64_t sub_1004EB5C0(uint64_t a1)
{
  uint64_t v2 = operator new(0x450uLL);
  uint64_t result = sub_1004EB60C((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A10D8 = (uint64_t)v2;
  return result;
}

void sub_1004EB5F8(_Unwind_Exception *a1)
{
}

uint64_t sub_1004EB60C(uint64_t a1, void *a2)
{
  unint64_t v3 = (void *)sub_100479C24(a1, "filtered", a2);
  v3[15] = off_10183D4B0;
  float v4 = v3 + 15;
  void *v3 = off_10183D360;
  double v5 = sub_100D2D9A4((uint64_t)(v3 + 16));
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(a1 + 176) = 0LL;
  sub_100E637D0(a1 + 184, *(void *)(a1 + 32), v4, v5);
  *(void *)(a1 + 1016) = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "silo"), "newTimer");
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 1024) = _Q0;
  *(_OWORD *)&v19.__r_.__value_.__l.__data_ = xmmword_1012EE8D0;
  v19.__r_.__value_.__l.__cap_ = 2LL;
  sub_1004EF2D4(a1 + 1040, (int *)&v19, 3LL);
  *(void *)(a1 + 108sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(a1 + 10sub_1000A56E8(v1 + 72) = 0LL;
  *(void *)(a1 + 1064) = a1 + 1072;
  *(void *)(a1 + 108_Block_object_dispose((const void *)(v1 - 232), 8) = 0xBFF0000000000000LL;
  *(void *)(a1 + 1096) = 0LL;
  sub_100AE5DA0((uint64_t)sub_1004EB8F8, a1, *(void **)(a1 + 32), &v19);
  std::string::size_type v11 = v19.__r_.__value_.__r.__words[0];
  v19.__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v12 = *(void *)(a1 + 168);
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 232), 8) = v11;
  if (v12)
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    std::string::size_type v13 = v19.__r_.__value_.__r.__words[0];
    v19.__r_.__value_.__r.__words[0] = 0LL;
    if (v13) {
      (*(void (**)(std::string::size_type))(*(void *)v13 + 8LL))(v13);
    }
  }

  sub_100583844((uint64_t)sub_1004EBAD0, a1, *(void **)(a1 + 32), &v19);
  std::string::size_type v14 = v19.__r_.__value_.__r.__words[0];
  v19.__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v15 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = v14;
  if (v15)
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
    std::string::size_type v16 = v19.__r_.__value_.__r.__words[0];
    v19.__r_.__value_.__r.__words[0] = 0LL;
    if (v16) {
      (*(void (**)(std::string::size_type))(*(void *)v16 + 8LL))(v16);
    }
  }

  memset(&v19, 0, sizeof(v19));
  std::string::operator=(&v19, (const std::string *)&qword_101996170);
  [*(id *)(*(void *)(a1 + 176) + 16) register:*(void *)(*(void *)(a1 + 176) + 8) forNotification:0 registrationInfo:sub_10120E548((uint64_t)&v19)];
  [*(id *)(*(void *)(a1 + 176) + 16) register:*(void *)(*(void *)(a1 + 176) + 8) forNotification:4 registrationInfo:0];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472LL;
  void v18[2] = sub_1004EBCA8;
  v18[3] = &unk_10181D3D0;
  v18[4] = a1;
  [*(id *)(a1 + 1016) setHandler:v18];
  return a1;
}

void sub_1004EB854( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  sub_100008390(v20 + 1064, *(void **)(v20 + 1072));
  sub_100008390(v22, *(void **)(v20 + 1048));
  sub_100E63830(v21);
  uint64_t v25 = *(void *)(v20 + 176);
  *(void *)(v20 + 176) = 0LL;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
  }
  uint64_t v26 = *v23;
  uint64_t *v23 = 0LL;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
  }
  sub_10047A1C0(v20);
  _Unwind_Resume(a1);
}

void sub_1004EB8F8(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183D568);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFilteredLocationController::onLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183D568);
    }
    __int16 v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      unint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFilteredLocationController::onLocationNotification, event:%{public, location:esca pe_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004EE1EC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004EBAB0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004EBAD0(uint64_t a1, _DWORD *a2, uint64_t a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183D568);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFilteredLocationController::onManagerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183D568);
    }
    __int16 v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      unint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFilteredLocationController::onManagerNotification, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004EE82C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004EBC88( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004EBCA8(uint64_t a1)
{
}

void sub_1004EBCB0(uint64_t a1)
{
  uint64_t v2 = 0LL;
  char v3 = 0;
  v28[0] = 0LL;
  v28[1] = "regular";
  v28[2] = 1LL;
  v28[3] = "fine";
  float v4 = (uint64_t **)(a1 + 1040);
  _DWORD v28[4] = 2LL;
  v28[5] = "coarse";
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v17 = _Q0;
  do
  {
    uint64_t v10 = v28[v2 + 1];
    unsigned int v22 = v28[v2];
    *(_DWORD *)std::string buf = v22;
    if (sub_100247620(a1, (int *)buf, 1LL))
    {
      if ((v3 & 1) != 0)
      {
        char v3 = 1;
      }

      else
      {
        __int128 v18 = v17;
        __int16 v19 = 0;
        int v20 = 0;
        int v21 = 0;
        int v20 = sub_10047D7E8(a1, v22);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_10183D588);
        }
        char v11 = (os_log_s *)qword_101934988;
        if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 136315394;
          *(void *)&uint8_t buf[4] = v10;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = v20;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Now registered for %s location notifications, operating mode %d",  buf,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_10183D588);
          }
          int v23 = 136315394;
          uint64_t v24 = v10;
          __int16 v25 = 1024;
          int v26 = v20;
          uint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "Now registered for %s location notifications, operating mode %d",  (const char *)&v23,  18);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFilteredLocationController::onLocationTimer()", "%s\n", v15);
          if (v15 != buf) {
            free(v15);
          }
        }

        *(void *)std::string buf = &v22;
        uint64_t v12 = sub_1004EF3D4(v4, (int *)&v22, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        uint64_t v13 = *(void *)(a1 + 168);
        if (*((_BYTE *)v12 + 32))
        {
          sub_10047DC04(*(void *)(a1 + 168), &v22, &v18);
        }

        else
        {
          __int16 v14 = sub_100419014(&v18);
          [*(id *)(v13 + 16) register:*(void *)(v13 + 8) forNotification:v22 registrationInfo:v14];
        }

        *(void *)std::string buf = &v22;
        char v3 = 1;
        *((_BYTE *)sub_1004EF3D4(v4, (int *)&v22, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = 1;
      }
    }

    else
    {
      [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:v22];
      *(void *)std::string buf = &v22;
      *((_BYTE *)sub_1004EF3D4(v4, (int *)&v22, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = 0;
    }

    v2 += 2LL;
  }

  while (v2 != 6);
  if ((v3 & 1) == 0)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    __int16 v16 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:no more location clients - not re-registering}",  buf,  0x12u);
    }
  }

void sub_1004EC070(uint64_t a1)
{
  *(void *)(a1 + 1016) = 0LL;
}

uint64_t sub_1004EC0A0(uint64_t a1, _DWORD *a2)
{
  if (*a2 >= 3u) {
    objc_msgSend( *(id *)(*(void *)(a1 + 168) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 168) + 8));
  }
  return 1LL;
}

uint64_t sub_1004EC0E4(uint64_t a1, unsigned int *a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D588);
  }
  float v4 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v5 = *a2;
    buf[0] = 67109120;
    buf[1] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLIENT: Clearing cached notification for %d",  (uint8_t *)buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    unsigned int v8 = *a2;
    v10[0] = 67109120;
    v10[1] = v8;
    __int16 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "CLIENT: Clearing cached notification for %d",  v10);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLFilteredLocationController::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v9);
  }

  (*(void (**)(uint64_t, unsigned int *))(*(void *)a1 + 120LL))(a1, a2);
  unsigned int v6 = *a2;
  [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:*a2];
  if (v6 <= 2)
  {
    *(void *)std::string buf = a2;
    *((_BYTE *)sub_1004EF3D4((uint64_t **)(a1 + 1040), (int *)a2, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = 0;
    buf[0] = 0;
    if (!sub_100247620(a1, buf, 1LL))
    {
      buf[0] = 2;
      if (!sub_100247620(a1, buf, 1LL))
      {
        buf[0] = 1;
        if (!sub_100247620(a1, buf, 1LL))
        {
          [*(id *)(a1 + 1016) setNextFireDelay:1.79769313e308];
          (*(void (**)(uint64_t))(*(void *)a1 + 304LL))(a1);
        }
      }
    }
  }

  return 1LL;
}

uint64_t sub_1004EC364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v10 = 0;
  int v11 = 0;
  int v12 = 0;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v9 = _Q0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __int128 *))(*(void *)a1 + 96LL))(a1, a2, a3, &v9);
}

BOOL sub_1004EC39C(uint64_t a1, int a2, unsigned int *a3, uint64_t a4)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D588);
  }
  unsigned int v8 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    __int128 v9 = *(const char **)(a4 + 8);
    int v10 = *(_DWORD *)(a4 + 20);
    *(_DWORD *)std::string buf = 67109632;
    unsigned int v30 = a2;
    __int16 v31 = 2048;
    uint64_t v32 = v9;
    __int16 v33 = 1024;
    int v34 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "CLIENT: %d, registerForNotification, distanceFilter, %.1lf, operatingMode, %d",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    __int16 v16 = *(const char **)(a4 + 8);
    int v17 = *(_DWORD *)(a4 + 20);
    __int16 v25 = 2048;
    int v26 = v16;
    __int16 v27 = 1024;
    int v28 = v17;
    LODWORD(v23) = 24;
    __int128 v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "CLIENT: %d, registerForNotification, distanceFilter, %.1lf, operatingMode, %d",  v24,  *(double *)&v23,  67109632);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLFilteredLocationController::registerForNotification(int, const CLLocationProvider_Type::Notificatio n &, const CLLocationProvider_Type::RegInfo &)",  "%s\n",  v18);
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D588);
  }
  int v11 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v12 = *a3;
    uint64_t v13 = sub_10100D9D8(*a3);
    *(_DWORD *)std::string buf = 67109378;
    unsigned int v30 = v12;
    __int16 v31 = 2080;
    uint64_t v32 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "CLIENT: register for notification, %d, %s",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    uint64_t v19 = qword_101934988;
    unsigned int v20 = *a3;
    int v21 = sub_10100D9D8(*a3);
    v24[0] = 67109378;
    v24[1] = v20;
    __int16 v25 = 2080;
    int v26 = v21;
    LODWORD(v23) = 18;
    unsigned int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v19,  2LL,  "CLIENT: register for notification, %d, %s",  v24,  v23);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLFilteredLocationController::registerForNotification(int, const CLLocationProvider_Type::Notificatio n &, const CLLocationProvider_Type::RegInfo &)",  "%s\n",  v22);
  }

  BOOL v14 = sub_10023FEB8(a1, a2, (int *)a3, (__int128 *)a4);
  if (v14 && *a3 <= 2)
  {
    sub_1004EC754(a1, 1);
    sub_1004ECA50(a1);
  }

  return v14;
}

void sub_1004EC754(uint64_t a1, int a2)
{
  *(_DWORD *)std::string buf = 0;
  int v4 = sub_100247620(a1, (int *)buf, 1LL);
  *(_DWORD *)std::string buf = 1;
  int v5 = sub_100247620(a1, (int *)buf, 1LL);
  *(_DWORD *)std::string buf = 2;
  int v6 = sub_100247620(a1, (int *)buf, 1LL);
  uint64_t v7 = "Fine";
  unsigned int v8 = "None";
  if (v6 > 0) {
    unsigned int v8 = "Coarse";
  }
  if (v5 <= 0) {
    uint64_t v7 = v8;
  }
  if (v4 <= 0) {
    __int128 v9 = v7;
  }
  else {
    __int128 v9 = "Best";
  }
  std::string::assign(&v14, v9);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183D5A8);
  }
  int v10 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = &v14;
    if ((v14.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      int v11 = (std::string *)v14.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string buf = 67241218;
    int v25 = v4;
    __int16 v26 = 1026;
    int v27 = v5;
    __int16 v28 = 1026;
    int v29 = v6;
    __int16 v30 = 2082;
    __int16 v31 = v11;
    __int16 v32 = 1026;
    int v33 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "@ClxClient, accuracy, %{public}d, %{public}d, %{public}d, level, %{public}s, reg?, %{public}d",  buf,  0x24u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183D5A8);
    }
    unsigned int v12 = &v14;
    if ((v14.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      unsigned int v12 = (std::string *)v14.__r_.__value_.__r.__words[0];
    }
    v15[0] = 67241218;
    v15[1] = v4;
    __int16 v16 = 1026;
    int v17 = v5;
    __int16 v18 = 1026;
    int v19 = v6;
    __int16 v20 = 2082;
    int v21 = v12;
    __int16 v22 = 1026;
    int v23 = a2;
    uint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@ClxClient, accuracy, %{public}d, %{public}d, %{public}d, level, %{public}s, reg?, %{public}d",  v15,  36);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFilteredLocationController::logRequiredNotificationLevel(BOOL)",  "%s\n",  v13);
  }

void sub_1004ECA24( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004ECA50(uint64_t a1)
{
  *(_DWORD *)std::string buf = 0;
  if (sub_100247620(a1, (int *)buf, 1LL)
    || (*(_DWORD *)std::string buf = 2, sub_100247620(a1, (int *)buf, 1LL))
    || (*(_DWORD *)std::string buf = 1, sub_100247620(a1, (int *)buf, 1LL)))
  {
    uint64_t v2 = 0LL;
    int v3 = 0;
    uint64_t v66 = a1;
    int v4 = (void *)(a1 + 64);
    double v5 = -1.0;
    do
    {
      uint64_t v6 = *v4;
      if (*v4)
      {
        int v7 = dword_1012EE8E8[v2];
        unsigned int v8 = v4;
        do
        {
          int v9 = *(_DWORD *)(v6 + 32);
          BOOL v10 = v9 < v7;
          if (v9 >= v7) {
            int v11 = (uint64_t *)v6;
          }
          else {
            int v11 = (uint64_t *)(v6 + 8);
          }
          if (!v10) {
            unsigned int v8 = (void *)v6;
          }
          uint64_t v6 = *v11;
        }

        while (*v11);
        if (v8 != v4 && v7 >= *((_DWORD *)v8 + 8))
        {
          unsigned int v12 = (double *)v8[5];
          if (v12 != (double *)(v8 + 6))
          {
            do
            {
              if (qword_101934980 != -1) {
                dispatch_once(&qword_101934980, &stru_10183D588);
              }
              int v17 = (os_log_s *)qword_101934988;
              if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
              {
                __int16 v18 = off_10183D4C8[v2];
                uint64_t v19 = v8[7];
                uint64_t v20 = *((void *)v12 + 6);
                *(_DWORD *)std::string buf = 136315650;
                *(void *)&uint8_t buf[4] = v18;
                *(_WORD *)&_BYTE buf[12] = 2048;
                *(void *)&buf[14] = v19;
                __int16 v87 = 2048;
                uint64_t v88 = v20;
                _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "CLIENT: notification, %s, clients, %lu, distanceFilter, %.1lf",  buf,  0x20u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934980 != -1) {
                  dispatch_once(&qword_101934980, &stru_10183D588);
                }
                uint64_t v13 = off_10183D4C8[v2];
                uint64_t v14 = v8[7];
                uint64_t v15 = *((void *)v12 + 6);
                int v69 = 136315650;
                unint64_t v70 = (unint64_t)v13;
                *(_WORD *)uint64_t v71 = 2048;
                *(void *)&v71[2] = v14;
                *(_WORD *)&v71[10] = 2048;
                *(void *)&v71[12] = v15;
                LODWORD(v64) = 32;
                __int16 v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "CLIENT: notification, %s, clients, %lu, distanceFilter, %.1lf",  (const char *)&v69,  *(void *)&v64,  v65);
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFilteredLocationController::checkMinimumDistanceFilter()",  "%s\n",  v16);
                if (v16 != buf) {
                  free(v16);
                }
              }

              int v21 = v3 ^ 1 | (v12[6] < v5);
              if ((v3 ^ 1) & 1 | (v12[6] < v5)) {
                double v5 = v12[6];
              }
              __int16 v22 = (double *)*((void *)v12 + 1);
              if (v22)
              {
                do
                {
                  int v23 = v22;
                  __int16 v22 = *(double **)v22;
                }

                while (v22);
              }

              else
              {
                do
                {
                  int v23 = (double *)*((void *)v12 + 2);
                  _ZF = *(void *)v23 == (void)v12;
                  unsigned int v12 = v23;
                }

                while (!_ZF);
              }

              v3 |= v21;
              unsigned int v12 = v23;
            }

            while (v23 != (double *)(v8 + 6));
          }
        }
      }

      ++v2;
    }

    while (v2 != 3);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    uint64_t v25 = v66;
    __int16 v26 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v27 = *(void *)(v66 + 1024);
      *(_DWORD *)std::string buf = 134218240;
      *(double *)&uint8_t buf[4] = v5;
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(void *)&buf[14] = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "CLIENT: distanceFilter, %.1lf, fDistanceFilter, %.1lf",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_10183D588);
      }
      uint64_t v54 = *(void *)(v66 + 1024);
      int v69 = 134218240;
      unint64_t v70 = *(void *)&v5;
      *(_WORD *)uint64_t v71 = 2048;
      *(void *)&v71[2] = v54;
      LODWORD(v64) = 22;
      uint64_t v55 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "CLIENT: distanceFilter, %.1lf, fDistanceFilter, %.1lf",  COERCE_DOUBLE(&v69),  v64);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFilteredLocationController::checkMinimumDistanceFilter()",  "%s\n",  v55);
      if (v55 != buf) {
        free(v55);
      }
    }

    if (v5 > 0.0 && v5 == *(double *)(v66 + 1024))
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_10183D588);
      }
      __int16 v28 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v29 = *(void *)(v66 + 1024);
        [*(id *)(v66 + 1016) nextFireTime];
        uint64_t v31 = v30;
        [*(id *)(v66 + 1016) nextFireDelay];
        *(_DWORD *)std::string buf = 134218496;
        *(void *)&uint8_t buf[4] = v29;
        *(_WORD *)&_BYTE buf[12] = 2048;
        *(void *)&buf[14] = v31;
        __int16 v87 = 2048;
        uint64_t v88 = v32;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "minimum distance unchanged from %.3f, still requesting location at %.3f (%.3fs away)",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_10183D588);
        }
        uint64_t v33 = qword_101934988;
        unint64_t v34 = *(void *)(v66 + 1024);
        [*(id *)(v66 + 1016) nextFireTime];
        uint64_t v36 = v35;
        [*(id *)(v66 + 1016) nextFireDelay];
        int v69 = 134218496;
        unint64_t v70 = v34;
        *(_WORD *)uint64_t v71 = 2048;
        *(void *)&v71[2] = v36;
        *(_WORD *)&v71[10] = 2048;
        *(void *)&v71[12] = v37;
        LODWORD(v64) = 32;
        id v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v33,  2LL,  "minimum distance unchanged from %.3f, still requesting location at %.3f (%.3fs away)",  COERCE_DOUBLE(&v69),  v64,  v65);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFilteredLocationController::checkMinimumDistanceFilter()",  "%s\n",  v38);
        if (v38 != buf) {
          free(v38);
        }
      }
    }

    else
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_10183D588);
      }
      __int16 v39 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v40 = *(void *)(v66 + 1024);
        *(_DWORD *)std::string buf = 134218240;
        *(double *)&uint8_t buf[4] = v5;
        *(_WORD *)&_BYTE buf[12] = 2048;
        *(void *)&buf[14] = v40;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "minimum distance changed to %.3f from %.3f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_10183D588);
        }
        uint64_t v56 = *(void *)(v66 + 1024);
        int v69 = 134218240;
        unint64_t v70 = *(void *)&v5;
        *(_WORD *)uint64_t v71 = 2048;
        *(void *)&v71[2] = v56;
        LODWORD(v64) = 22;
        uint64_t v57 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "minimum distance changed to %.3f from %.3f",  COERCE_DOUBLE(&v69),  v64);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFilteredLocationController::checkMinimumDistanceFilter()",  "%s\n",  v57);
        if (v57 != buf) {
          free(v57);
        }
      }

      *(double *)(v66 + 1024) = v5;
      *(double *)(v66 + 1032) = v5 / 250.0;
      int v69 = 0xFFFF;
      *(void *)uint64_t v71 = 0LL;
      unint64_t v70 = 0LL;
      *(_OWORD *)&v71[8] = xmmword_1012E0070;
      __asm { FMOV            V0.2D, #-1.0 }

      __int128 v72 = _Q0;
      __int128 v73 = _Q0;
      __int128 v74 = _Q0;
      int v75 = 0;
      uint64_t v77 = 0LL;
      uint64_t v78 = 0LL;
      unint64_t v76 = 0xBFF0000000000000LL;
      int v79 = 0;
      unint64_t v80 = 0xBFF0000000000000LL;
      int v81 = 0x7FFFFFFF;
      uint64_t v83 = 0LL;
      uint64_t v84 = 0LL;
      uint64_t v82 = 0LL;
      char v85 = 0;
      if ((*(unsigned int (**)(uint64_t, int *))(*(void *)v66 + 232LL))(v66, &v69))
      {
        double v45 = sub_1004EE6D8(v66, (uint64_t)&v69);
        if (v45 <= CFAbsoluteTimeGetCurrent() + 15.0)
        {
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_10183D588);
          }
          double v49 = (os_log_s *)qword_101934988;
          if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
          {
            CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
            *(_DWORD *)std::string buf = 134217984;
            *(double *)&uint8_t buf[4] = v45 - Current;
            _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEBUG,  "scheduling location requests for %.3fs later",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934980 != -1) {
              dispatch_once(&qword_101934980, &stru_10183D588);
            }
            uint64_t v62 = qword_101934988;
            int v67 = 134217984;
            double v68 = v45 - CFAbsoluteTimeGetCurrent();
            id v63 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v62,  2LL,  "scheduling location requests for %.3fs later",  COERCE_DOUBLE(&v67));
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFilteredLocationController::checkMinimumDistanceFilter()",  "%s\n",  v63);
            if (v63 != buf) {
              free(v63);
            }
            uint64_t v25 = v66;
          }
        }

        else
        {
          if (qword_101934980 != -1) {
            dispatch_once(&qword_101934980, &stru_10183D588);
          }
          int v46 = (os_log_s *)qword_101934988;
          if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
          {
            CFAbsoluteTime v47 = CFAbsoluteTimeGetCurrent();
            *(_DWORD *)std::string buf = 134217984;
            *(double *)&uint8_t buf[4] = v45 - v47;
            _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "turning off location requests and re-scheduling for %.3fs later",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934980 != -1) {
              dispatch_once(&qword_101934980, &stru_10183D588);
            }
            uint64_t v60 = qword_101934988;
            int v67 = 134217984;
            double v68 = v45 - CFAbsoluteTimeGetCurrent();
            id v61 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v60,  2LL,  "turning off location requests and re-scheduling for %.3fs later",  COERCE_DOUBLE(&v67));
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFilteredLocationController::checkMinimumDistanceFilter()",  "%s\n",  v61);
            if (v61 != buf) {
              free(v61);
            }
            uint64_t v25 = v66;
          }

          [*(id *)(*(void *)(v25 + 168) + 16) unregister:*(void *)(*(void *)(v25 + 168) + 8) forNotification:0];
          [*(id *)(*(void *)(v25 + 168) + 16) unregister:*(void *)(*(void *)(v25 + 168) + 8) forNotification:1];
          [*(id *)(*(void *)(v25 + 168) + 16) unregister:*(void *)(*(void *)(v25 + 168) + 8) forNotification:2];
          int v67 = 0;
          *(void *)std::string buf = &v67;
          *((_BYTE *)sub_1004EF3D4((uint64_t **)(v25 + 1040), &v67, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = 0;
          int v67 = 1;
          *(void *)std::string buf = &v67;
          *((_BYTE *)sub_1004EF3D4((uint64_t **)(v25 + 1040), &v67, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = 0;
          int v67 = 2;
          *(void *)std::string buf = &v67;
          *((_BYTE *)sub_1004EF3D4((uint64_t **)(v25 + 1040), &v67, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = 0;
        }

        [*(id *)(v25 + 1016) setNextFireTime:v45];
      }

      else
      {
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_10183D588);
        }
        double v48 = (os_log_s *)qword_101934988;
        if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
        {
          *(void *)std::string buf = 68289026LL;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:no location currently available, starting it immediately}",  buf,  0x12u);
        }

        [*(id *)(v66 + 1016) setNextFireDelay:0.0];
      }
    }

    if (*(double *)(v25 + 1088) != -1.0)
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_10183D588);
      }
      unint64_t v51 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v52 = *(void *)(v25 + 1088);
        *(_DWORD *)std::string buf = 134218240;
        *(void *)&uint8_t buf[4] = 0xBFF0000000000000LL;
        *(_WORD *)&_BYTE buf[12] = 2048;
        *(void *)&buf[14] = v52;
        _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEBUG,  "wake interval changed to %.3f from %.3f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_10183D588);
        }
        uint64_t v58 = *(void *)(v25 + 1088);
        int v69 = 134218240;
        unint64_t v70 = 0xBFF0000000000000LL;
        *(_WORD *)uint64_t v71 = 2048;
        *(void *)&v71[2] = v58;
        LODWORD(v64) = 22;
        uint64_t v59 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "wake interval changed to %.3f from %.3f",  COERCE_DOUBLE(&v69),  v64);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFilteredLocationController::checkMinimumDistanceFilter()",  "%s\n",  v59);
        if (v59 != buf) {
          free(v59);
        }
      }

      *(void *)(v25 + 108_Block_object_dispose((const void *)(v1 - 232), 8) = 0xBFF0000000000000LL;
      sub_1004ED8A4(v25);
    }
  }

  else
  {
    __asm { FMOV            V0.2D, #-1.0 }

    *(_OWORD *)(a1 + 1024) = _Q0;
  }

void sub_1004ED8A4(uint64_t a1)
{
  if (&_CPScheduleWakeAtDateWithIdentifier)
  {
    sub_1004ED90C(a1);
    if (*(double *)(a1 + 1088) > 0.0)
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      *(void *)(a1 + 1096) = CFDateCreate(kCFAllocatorDefault, Current + *(double *)(a1 + 1088));
      CPScheduleWakeAtDateWithIdentifier();
    }
  }

void sub_1004ED90C(uint64_t a1)
{
  if (&_CPCancelWakeAtDateWithIdentifier)
  {
    uint64_t v2 = *(void *)(a1 + 1096);
    if (v2)
    {
      CPCancelWakeAtDateWithIdentifier(v2, @"CLFilteredLocationControllerWake");
      CFRelease(*(CFTypeRef *)(a1 + 1096));
      *(void *)(a1 + 1096) = 0LL;
    }
  }

BOOL sub_1004ED954(char *a1, uint64_t a2, unsigned int *a3)
{
  int v20 = a2;
  int v6 = (*(uint64_t (**)(char *))(*(void *)a1 + 104LL))(a1);
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D588);
  }
  int v7 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v8 = *a3;
    int v9 = sub_10100D9D8(*a3);
    *(_DWORD *)std::string buf = 67109634;
    unsigned int v27 = v8;
    __int16 v28 = 2080;
    uint64_t v29 = v9;
    __int16 v30 = 1024;
    int v31 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLIENT: unregister for notification, %d, %s, wasRegistered, %d",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    uint64_t v13 = qword_101934988;
    unsigned int v14 = *a3;
    uint64_t v15 = sub_10100D9D8(*a3);
    v21[0] = 67109634;
    v21[1] = v14;
    __int16 v22 = 2080;
    int v23 = v15;
    __int16 v24 = 1024;
    int v25 = v6;
    LODWORD(v17) = 24;
    __int16 v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v13,  2LL,  "CLIENT: unregister for notification, %d, %s, wasRegistered, %d",  v21,  v17,  v18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLFilteredLocationController::unregisterForNotification(int, const CLLocationProvider_Type::Notification &)",  "%s\n",  v16);
  }

  BOOL v10 = sub_1002406A8(a1, a2, (int *)a3);
  if (v10)
  {
    if (*a3 < 3) {
      int v11 = v6;
    }
    else {
      int v11 = 0;
    }
    if (v11 == 1)
    {
      sub_1004EC754((uint64_t)a1, 0);
      sub_1004ECA50((uint64_t)a1);
    }

    *(_DWORD *)std::string buf = 0;
    if (((*(uint64_t (**)(char *, uint64_t, uint8_t *))(*(void *)a1 + 104LL))(a1, a2, buf) & 1) == 0)
    {
      v21[0] = 1;
      if (((*(uint64_t (**)(char *, uint64_t, _DWORD *))(*(void *)a1 + 104LL))(a1, a2, v21) & 1) == 0)
      {
        int v19 = 2;
      }
    }
  }

  return v10;
}

uint64_t sub_1004EDC2C(uint64_t a1, int a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  HIDWORD(v61) = a2;
  *(void *)std::string buf = (char *)&v61 + 4;
  BOOL v10 = sub_1004EF50C(a1 + 1064, (int *)&v61 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
  uint64_t result = sub_10047CCD0(a1, HIDWORD(v61), a3);
  if (!(_DWORD)result) {
    return result;
  }
  int v12 = *a3;
  if (*a3 >= 5)
  {
    if (v12 == 9)
    {
      *((_DWORD *)v10 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0xFFFF;
      *(uint64_t *)((char *)v10 + 44) = 0LL;
      *(uint64_t *)((char *)v10 + 36) = 0LL;
      *(_OWORD *)((char *)v10 + 52) = xmmword_1012E0070;
      __asm { FMOV            V0.2D, #-1.0 }

      *(_OWORD *)((char *)v10 + 6_Block_object_dispose((const void *)(v1 - 232), 8) = _Q0;
      *(_OWORD *)((char *)v10 + 84) = _Q0;
      *(_OWORD *)((char *)v10 + 10sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = _Q0;
      *((_DWORD *)v10 + 29) = 0;
      v10[16] = 0LL;
      v10[17] = 0LL;
      v10[15] = 0xBFF0000000000000LL;
      *((_DWORD *)v10 + 36) = 0;
      *(uint64_t *)((char *)v10 + 14_Block_object_dispose((const void *)(v1 - 232), 8) = 0xBFF0000000000000LL;
      *((_DWORD *)v10 + 39) = 0x7FFFFFFF;
      v10[21] = 0LL;
      v10[22] = 0LL;
      v10[20] = 0LL;
      uint64_t result = 1LL;
      *((_BYTE *)v10 + 184) = 0;
      return result;
    }

    if (v12 != 39) {
      return 1LL;
    }
  }

  uint64_t v13 = v10 + 4;
  BOOL v14 = sub_100295B04((uint64_t)(v10 + 4), a4, 1);
  double Current = CFAbsoluteTimeGetCurrent();
  double v16 = *(double *)(a4 + 76);
  double v18 = *(double *)(a4 + 20);
  double v19 = *(double *)((char *)v10 + 52);
  if (v19 < 0.0
    || ((double v20 = *(double *)(a6 + 8), v21 = v19 - v18, v20 >= 0.0) ? (v22 = v20 < v21) : (v22 = 1),
        v22 || (int v23 = (double *)(a1 + 128), sub_100D2DCA4(v23, (uint64_t)(v10 + 4), a4), v20 < v24)))
  {
    if (Current - v16 <= 1.0)
    {
      if (v18 > 0.0)
      {
        __int128 v34 = *(_OWORD *)(a4 + 16);
        _OWORD *v13 = *(_OWORD *)a4;
        *((_OWORD *)v10 + 3) = v34;
        __int128 v35 = *(_OWORD *)(a4 + 32);
        __int128 v36 = *(_OWORD *)(a4 + 48);
        __int128 v37 = *(_OWORD *)(a4 + 80);
        *((_OWORD *)v10 + 6) = *(_OWORD *)(a4 + 64);
        *((_OWORD *)v10 + 7) = v37;
        *((_OWORD *)v10 + 4) = v35;
        *((_OWORD *)v10 + 5) = v36;
        __int128 v38 = *(_OWORD *)(a4 + 96);
        __int128 v39 = *(_OWORD *)(a4 + 112);
        __int128 v40 = *(_OWORD *)(a4 + 128);
        *(_OWORD *)((char *)v10 + 1sub_1000A56E8(v1 + 72) = *(_OWORD *)(a4 + 140);
        *((_OWORD *)v10 + 9) = v39;
        *((_OWORD *)v10 + 1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v40;
        *((_OWORD *)v10 + _Block_object_dispose((const void *)(v1 - 232), 8) = v38;
      }
    }

    else
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_10183D588);
      }
      int v25 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v26 = *(void *)(a4 + 4);
        uint64_t v27 = *(void *)(a4 + 12);
        CFAbsoluteTime v28 = CFAbsoluteTimeGetCurrent() - *(double *)(a4 + 76);
        *(_DWORD *)std::string buf = 134218496;
        *(void *)&uint8_t buf[4] = v26;
        __int16 v75 = 2048;
        uint64_t v76 = v27;
        __int16 v77 = 2048;
        CFAbsoluteTime v78 = v28;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "<%+.8f,%+.8f> is stale from %.3fs ago, not using for distance filtering",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_10183D588);
        }
        uint64_t v29 = qword_101934988;
        uint64_t v30 = *(void *)(a4 + 4);
        uint64_t v31 = *(void *)(a4 + 12);
        CFAbsoluteTime v32 = CFAbsoluteTimeGetCurrent() - *(double *)(a4 + 76);
        int v62 = 134218496;
        uint64_t v63 = v30;
        __int16 v64 = 2048;
        uint64_t v65 = v31;
        __int16 v66 = 2048;
        CFAbsoluteTime v67 = v32;
        LODWORD(v59) = 32;
        uint64_t v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v29,  2LL,  "<%+.8f,%+.8f> is stale from %.3fs ago, not using for distance filtering",  COERCE_DOUBLE(&v62),  v59,  v60);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLFilteredLocationController::shouldNotifyClient(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &, const char &, CLLocationProvider_Type::RegInfo &)",  "%s\n",  v33);
        if (v33 != buf) {
          free(v33);
        }
      }
    }

    return 1LL;
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D588);
  }
  double v45 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v46 = *(void *)(a6 + 8);
    uint64_t v47 = *(uint64_t *)((char *)v10 + 36);
    double v48 = *(double *)((char *)v10 + 44);
    uint64_t v49 = *(void *)(a4 + 4);
    double v60 = *(double *)(a4 + 12);
    sub_100D2DCA4(v23, (uint64_t)(v10 + 4), a4);
    *(_DWORD *)std::string buf = 134219264;
    *(void *)&uint8_t buf[4] = v46;
    __int16 v75 = 2048;
    uint64_t v76 = v47;
    __int16 v77 = 2048;
    CFAbsoluteTime v78 = v48;
    __int16 v79 = 2048;
    uint64_t v80 = v49;
    __int16 v81 = 2048;
    double v82 = v60;
    __int16 v83 = 2048;
    uint64_t v84 = v50;
    _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "distance filter %.2f not exceeded by <%+.8f,%+.8f> and <%+.8f,%+.8f> (distance %.2f)",  buf,  0x3Eu);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    uint64_t v51 = qword_101934988;
    uint64_t v52 = *(void *)(a6 + 8);
    uint64_t v53 = *(uint64_t *)((char *)v10 + 36);
    double v54 = *(double *)((char *)v10 + 44);
    uint64_t v55 = *(void *)(a4 + 4);
    uint64_t v56 = *(void *)(a4 + 12);
    sub_100D2DCA4(v23, (uint64_t)v13, a4);
    int v62 = 134219264;
    uint64_t v63 = v52;
    __int16 v64 = 2048;
    uint64_t v65 = v53;
    __int16 v66 = 2048;
    CFAbsoluteTime v67 = v54;
    __int16 v68 = 2048;
    uint64_t v69 = v55;
    __int16 v70 = 2048;
    uint64_t v71 = v56;
    __int16 v72 = 2048;
    uint64_t v73 = v57;
    LODWORD(v59) = 62;
    uint64_t v58 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v51,  2LL,  "distance filter %.2f not exceeded by <%+.8f,%+.8f> and <%+.8f,%+.8f> (distance %.2f)",  COERCE_DOUBLE(&v62),  v59,  v60,  v61);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLFilteredLocationController::shouldNotifyClient(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &, const char &, CLLocationProvider_Type::RegInfo &)",  "%s\n",  v58);
    if (v58 != buf) {
      free(v58);
    }
    return 0LL;
  }

  return result;
}

void sub_1004EE1EC(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  unsigned int v17 = *a3;
  if (v17 > 2 || (unsigned int v17 = 0, *(double *)(a1 + 1024) < 0.0) || *(double *)(a1 + 1032) < 15.0)
  {
LABEL_24:
    (*(void (**)(uint64_t, unsigned int *, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v17,  a4,  1LL,  0xFFFFFFFFLL,  0LL);
    sub_100E63BF4(a1 + 184, (int *)&v17, a4);
    return;
  }

  double v6 = sub_1004EE6D8(a1, a4);
  if (v6 >= CFAbsoluteTimeGetCurrent() + 15.0)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    int v7 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 134217984;
      *(double *)&uint8_t buf[4] = v6 - CFAbsoluteTimeGetCurrent();
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "turning off location requests and re-scheduling for %.3fs later",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_10183D588);
      }
      uint64_t v15 = qword_101934988;
      int v18 = 134217984;
      double v19 = v6 - CFAbsoluteTimeGetCurrent();
      double v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v15,  2LL,  "turning off location requests and re-scheduling for %.3fs later",  COERCE_DOUBLE(&v18));
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFilteredLocationController::onLocationNotification(int, const CLLocationProvider_Type::Notification &, co nst CLLocationProvider_Type::NotificationData &)",  "%s\n",  v16);
    }

    [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:0];
    [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:1];
    [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:2];
    int v18 = 0;
    *(void *)std::string buf = &v18;
    *((_BYTE *)sub_1004EF3D4((uint64_t **)(a1 + 1040), &v18, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = 0;
    int v18 = 1;
    *(void *)std::string buf = &v18;
    *((_BYTE *)sub_1004EF3D4((uint64_t **)(a1 + 1040), &v18, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = 0;
    int v18 = 2;
    *(void *)std::string buf = &v18;
    *((_BYTE *)sub_1004EF3D4((uint64_t **)(a1 + 1040), &v18, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = 0;
    [*(id *)(a1 + 1016) setNextFireTime:v6];
    id v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLDaemonStatus");
    int v9 = *(const __CFDate **)(a1 + 1096);
    if (v9 && (double AbsoluteTime = CFDateGetAbsoluteTime(v9), AbsoluteTime < CFAbsoluteTimeGetCurrent()))
    {
      unsigned int v11 = [v8 syncgetRegisterPowerKeepAlive:1 client:a1 dbgMessage:@"CLFilteredLocationController::onLocationNotification"];
      sub_1004ED8A4(a1);
      if (v11) {
        [v8 syncgetRegisterPowerKeepAlive:0 client:a1 dbgMessage:@"CLFilteredLocationController::onLocationNotification"];
      }
    }

    else
    {
      sub_1004ED8A4(a1);
    }

    goto LABEL_24;
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_10183D588);
  }
  int v12 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134217984;
    *(double *)&uint8_t buf[4] = v6 - CFAbsoluteTimeGetCurrent();
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "leaving location as it would turn on in %.3fs anyway",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    uint64_t v13 = qword_101934988;
    int v18 = 134217984;
    double v19 = v6 - CFAbsoluteTimeGetCurrent();
    BOOL v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v13,  2LL,  "leaving location as it would turn on in %.3fs anyway",  COERCE_DOUBLE(&v18));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFilteredLocationController::onLocationNotification(int, const CLLocationProvider_Type::Notification &, cons t CLLocationProvider_Type::NotificationData &)",  "%s\n",  v14);
  }

CFAbsoluteTime sub_1004EE6D8(uint64_t a1, uint64_t a2)
{
  int v5 = 0;
  if (!sub_100247620(a1, &v5, 1LL))
  {
    int v6 = 2;
    if (!sub_100247620(a1, &v6, 1LL))
    {
      int v7 = 1;
    }
  }

  return CFAbsoluteTimeGetCurrent();
}

uint64_t sub_1004EE790(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  if (((1LL << v6) & 0x8000000038LL) != 0) {
    return 0LL;
  }
  if (((1LL << v6) & 3) != 0 && sub_100E65028(a1 + 184, a3)) {
    return 1LL;
  }
  else {
    return sub_10047AC18(a1, a2, a3);
  }
}

void sub_1004EE82C(id *a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 4)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    int v9 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 68289026;
      int v12 = 0;
      __int16 v13 = 2082;
      BOOL v14 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#Warning Location Services state changed, clearing local cache}",  (uint8_t *)&v11,  0x12u);
    }

    (*((void (**)(id *))*a1 + 38))(a1);
    uint64_t v10 = (uint64_t)(a1 + 23);
    if (*(_DWORD *)(a4 + 188) == 1) {
      sub_100E63834(v10);
    }
    else {
      sub_100E63AA8(v10);
    }
  }

  else if (!*a3)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    int v5 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 68289026;
      int v12 = 0;
      __int16 v13 = 2082;
      BOOL v14 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#Warning Location Services reset, clearing local cache}",  (uint8_t *)&v11,  0x12u);
    }

    (*((void (**)(id *))*a1 + 38))(a1);
    sub_100E63AE4((uint64_t)(a1 + 23));
    id v6 = objc_msgSend(objc_msgSend(a1[4], "vendor"), "proxyForService:", @"CLClientManager");
    if (byte_101996187 >= 0) {
      int v7 = &qword_101996170;
    }
    else {
      int v7 = (uint64_t *)qword_101996170;
    }
    objc_msgSend( v6,  "resetNotificationConsumedForIdentifier:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v7));
  }

void sub_1004EEA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(double *)(a2 + 20) <= 0.0)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    uint64_t v33 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:No valid last confident location}",  buf,  0x12u);
    }
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183D588);
    }
    id v6 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = *(void *)(a2 + 4);
      uint64_t v8 = *(void *)(a2 + 12);
      uint64_t v9 = *(void *)(a2 + 20);
      uint64_t v10 = sub_100832C40(*(_DWORD *)(a2 + 96));
      uint64_t v11 = a3;
      uint64_t v12 = a1;
      int v13 = *(_DWORD *)(a2 + 84);
      double v14 = *(double *)(a2 + 76);
      uint64_t v46 = *(void *)(a2 + 88);
      CFAbsoluteTime v15 = CFAbsoluteTimeGetCurrent() - v14;
      int v16 = *(_DWORD *)(a2 + 128);
      *(_DWORD *)std::string buf = 134220034;
      *(void *)&uint8_t buf[4] = v7;
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(void *)&buf[14] = v8;
      *(_WORD *)&_BYTE buf[22] = 2048;
      *(void *)&buf[24] = v9;
      LOWORD(v67) = 2080;
      *(void *)((char *)&v67 + 2) = v10;
      WORD5(v67) = 1024;
      HIDWORD(v67) = v13;
      a1 = v12;
      a3 = v11;
      *(_WORD *)__int16 v68 = 2048;
      *(double *)&v68[2] = v14;
      *(_WORD *)&v68[10] = 2048;
      *(void *)&v68[12] = v46;
      *(_WORD *)&v68[20] = 2048;
      *(CFAbsoluteTime *)&v68[22] = v15;
      *(_WORD *)&v68[30] = 1024;
      LODWORD(v69) = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Cached location,%.8lf,%.8lf,HorAcc,%.1lf,Type,%s,Confidence,%d,Timestamp,%.3f,Lifespan,%.3f,Age,%.3f,integrity,%d",  buf,  0x54u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_10183D588);
      }
      uint64_t v34 = *(void *)(a2 + 4);
      uint64_t v44 = *(const char **)(a2 + 12);
      uint64_t v45 = *(void *)(a2 + 20);
      double v47 = *(double *)&qword_101934988;
      __int128 v35 = sub_100832C40(*(_DWORD *)(a2 + 96));
      double v36 = *(double *)(a2 + 76);
      int v37 = *(_DWORD *)(a2 + 84);
      uint64_t v38 = *(void *)(a2 + 88);
      CFAbsoluteTime v39 = CFAbsoluteTimeGetCurrent() - v36;
      int v40 = *(_DWORD *)(a2 + 128);
      int v48 = 134220034;
      uint64_t v49 = v34;
      __int16 v50 = 2048;
      uint64_t v51 = v44;
      __int16 v52 = 2048;
      uint64_t v53 = v45;
      __int16 v54 = 2080;
      uint64_t v55 = v35;
      __int16 v56 = 1024;
      int v57 = v37;
      __int16 v58 = 2048;
      double v59 = v36;
      __int16 v60 = 2048;
      uint64_t v61 = v38;
      __int16 v62 = 2048;
      CFAbsoluteTime v63 = v39;
      __int16 v64 = 1024;
      int v65 = v40;
      LODWORD(v42) = 84;
      id v41 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  *(void *)&v47,  2LL,  "Cached location,%.8lf,%.8lf,HorAcc,%.1lf,Type,%s,Confidence,%d,Timestamp,%.3f,Lifespan,%.3f,Age,%.3f,integrity,%d",  COERCE_DOUBLE(&v48),  v42,  v43,  v44,  v45,  v47);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFilteredLocationController::lastConfidentLocationNotification(const CLDaemonLocation &, const CLD aemonLocationPrivate &)",  "%s\n",  v41);
      if (v41 != buf) {
        free(v41);
      }
    }

    sub_100246564((uint64_t)buf);
    __int128 v17 = *(_OWORD *)(a2 + 112);
    __int128 v70 = *(_OWORD *)(a2 + 96);
    __int128 v71 = v17;
    v72[0] = *(_OWORD *)(a2 + 128);
    *(_OWORD *)((char *)v72 + 12) = *(_OWORD *)(a2 + 140);
    __int128 v18 = *(_OWORD *)(a2 + 48);
    __int128 v67 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)__int16 v68 = v18;
    __int128 v19 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)&v68[16] = *(_OWORD *)(a2 + 64);
    __int128 v69 = v19;
    __int128 v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)std::string buf = *(_OWORD *)a2;
    *(_OWORD *)&uint8_t buf[16] = v20;
    memcpy(v73, (const void *)a3, sizeof(v73));
    sub_1000F2F30(&v74, (uint64_t *)(a3 + 520));
    __int128 v21 = *(_OWORD *)(a3 + 616);
    __int128 v80 = *(_OWORD *)(a3 + 600);
    v81[0] = v21;
    *(void *)((char *)v81 + 13) = *(void *)(a3 + 629);
    __int128 v22 = *(_OWORD *)(a3 + 552);
    __int128 v76 = *(_OWORD *)(a3 + 536);
    __int128 v77 = v22;
    __int128 v23 = *(_OWORD *)(a3 + 584);
    __int128 v78 = *(_OWORD *)(a3 + 568);
    __int128 v79 = v23;
    int v48 = 0;
    (*(void (**)(uint64_t, int *, _BYTE *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v48,  buf,  1LL,  0xFFFFFFFFLL,  0LL);

    double v24 = v85;
    if (v85)
    {
      p_shared_owners = (unint64_t *)&v85->__shared_owners_;
      do
        unint64_t v26 = __ldaxr(p_shared_owners);
      while (__stlxr(v26 - 1, p_shared_owners));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }

    if (v84 < 0) {
      operator delete(__p);
    }
    uint64_t v27 = v82;
    if (v82)
    {
      CFAbsoluteTime v28 = (unint64_t *)&v82->__shared_owners_;
      do
        unint64_t v29 = __ldaxr(v28);
      while (__stlxr(v29 - 1, v28));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }

    uint64_t v30 = v75;
    if (v75)
    {
      uint64_t v31 = (unint64_t *)&v75->__shared_owners_;
      do
        unint64_t v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
  }

void sub_1004EEF38( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_1004EEF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1004EEF6C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLFilteredLocationController");
  sub_10047D890((uint64_t)v8, (uint64_t *)__p, a3, a1, a2);
  *uint64_t v8 = &off_10183D4F0;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1004EF004( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1004EF030(uint64_t a1)
{
  *(void *)a1 = off_10183D360;
  *(void *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = off_10183D4B0;
  sub_100008390(a1 + 1064, *(void **)(a1 + 1072));
  sub_100008390(a1 + 1040, *(void **)(a1 + 1048));
  sub_100E63830(a1 + 184);
  uint64_t v2 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 168);
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  return sub_10047A1C0(a1);
}

void sub_1004EF0B4(uint64_t a1)
{
  *(void *)a1 = off_10183D360;
  *(void *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = off_10183D4B0;
  sub_100008390(a1 + 1064, *(void **)(a1 + 1072));
  sub_100008390(a1 + 1040, *(void **)(a1 + 1048));
  sub_100E63830(a1 + 184);
  uint64_t v2 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 168);
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  int v4 = (void *)sub_10047A1C0(a1);
  operator delete(v4);
}

uint64_t sub_1004EF13C(uint64_t a1)
{
  *(void *)(a1 - 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = off_10183D360;
  uint64_t v2 = a1 - 120;
  *(void *)a1 = off_10183D4B0;
  sub_100008390(a1 + 944, *(void **)(a1 + 952));
  sub_100008390(a1 + 920, *(void **)(a1 + 928));
  sub_100E63830(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 48);
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return sub_10047A1C0(v2);
}

void sub_1004EF1C4(uint64_t a1)
{
  *(void *)(a1 - 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = off_10183D360;
  uint64_t v2 = a1 - 120;
  *(void *)a1 = off_10183D4B0;
  sub_100008390(a1 + 944, *(void **)(a1 + 952));
  sub_100008390(a1 + 920, *(void **)(a1 + 928));
  sub_100E63830(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 48);
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  int v5 = (void *)sub_10047A1C0(v2);
  operator delete(v5);
}

void sub_1004EF250(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1004EF27C(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_1004EF2A8(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_1004EF2D4(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 8 * a3;
    do
    {
      sub_1004EF350((uint64_t **)a1, v4, a2, (uint64_t *)a2);
      a2 += 2;
      v6 -= 8LL;
    }

    while (v6);
  }

  return a1;
}

void sub_1004EF338(_Unwind_Exception *a1)
{
}

uint64_t *sub_1004EF350(uint64_t **a1, uint64_t *a2, int *a3, uint64_t *a4)
{
  uint64_t v6 = sub_100381C60(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x28uLL);
    *(uint64_t *)((char *)v7 + 2_Block_object_dispose((const void *)(v1 - 232), 8) = *a4;
    sub_1000085FC(a1, (uint64_t)v11, v8, v7);
  }

  return v7;
}

uint64_t **sub_1004EF3D4(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 7);
        if (v8 >= v10) {
          break;
        }
        uint64_t v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }

      if (v10 >= v8) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    uint64_t v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x28uLL);
    void v11[7] = **a4;
    *((_BYTE *)v11 + 32) = 0;
    sub_1000085FC(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }

  return v9;
}

uint64_t sub_1004EF494(uint64_t a1, int *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    return 0LL;
  }
  int v3 = *a2;
  uint64_t v4 = a1 + 8;
  do
  {
    int v5 = *(_DWORD *)(v2 + 28);
    BOOL v6 = v5 < v3;
    if (v5 >= v3) {
      uint64_t v7 = (uint64_t *)v2;
    }
    else {
      uint64_t v7 = (uint64_t *)(v2 + 8);
    }
    if (!v6) {
      uint64_t v4 = v2;
    }
    uint64_t v2 = *v7;
  }

  while (*v7);
  if (v4 == a1 + 8 || v3 < *(_DWORD *)(v4 + 28)) {
    return 0LL;
  }
  sub_1000087E8((uint64_t **)a1, (uint64_t *)v4);
  operator delete((void *)v4);
  return 1LL;
}

uint64_t *sub_1004EF50C(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  BOOL v6 = (uint64_t **)(a1 + 8);
  int v5 = *(uint64_t **)(a1 + 8);
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        int v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 7);
        if (v7 >= v9) {
          break;
        }
        int v5 = *v8;
        BOOL v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      int v5 = v8[1];
      if (!v5)
      {
        BOOL v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    int v8 = (uint64_t **)(a1 + 8);
LABEL_10:
    sub_1004EF5C4(a1, a4, (uint64_t)&v11);
    sub_1000085FC((uint64_t **)a1, (uint64_t)v8, v6, v11);
    return v11;
  }

  return (uint64_t *)v8;
}

__n128 sub_1004EF5C4@<Q0>(uint64_t a1@<X0>, _DWORD **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  BOOL v6 = (char *)operator new(0xC0uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 232), 8) = v5;
  *((_DWORD *)v6 + 7) = **a2;
  *((_DWORD *)v6 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0xFFFF;
  *(void *)(v6 + 36) = 0LL;
  *(void *)(v6 + 44) = 0LL;
  *(_OWORD *)(v6 + 52) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(__n128 *)(v6 + 6_Block_object_dispose((const void *)(v1 - 232), 8) = result;
  *(__n128 *)(v6 + 84) = result;
  *(__n128 *)(v6 + 10sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = result;
  *((_DWORD *)v6 + 29) = 0;
  *((_DWORD *)v6 + 36) = 0;
  *((void *)v6 + 15) = 0xBFF0000000000000LL;
  *((void *)v6 + 16) = 0LL;
  *((void *)v6 + 17) = 0LL;
  *(void *)(v6 + 14_Block_object_dispose((const void *)(v1 - 232), 8) = 0xBFF0000000000000LL;
  *((_DWORD *)v6 + 39) = 0x7FFFFFFF;
  *((void *)v6 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *((void *)v6 + 21) = 0LL;
  v6[184] = 0;
  *((void *)v6 + 22) = 0LL;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1004EF664()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_1012EE898;
      v1[3] = unk_1012EE8A8;
      v1[4] = xmmword_1012EE8B8;
      v1[0] = xmmword_1012EE878;
      v1[1] = unk_1012EE888;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_1004EF738(_Unwind_Exception *a1)
{
}

uint64_t sub_1004EF750()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101996170, (void *)&_mh_execute_header);
}

void sub_1004EF794(uint64_t *a1, uint64_t a2)
{
  *((_DWORD *)a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = *(_DWORD *)(a2 + 96);
  *(_OWORD *)a1 = *(_OWORD *)(a2 + 4);
  double v4 = *(double *)(a2 + 184);
  *((double *)a1 + 2) = v4;
  if (v4 <= 0.0) {
    a1[2] = *(void *)(a2 + 76);
  }
  *((double *)a1 + 3) = fmax(*(double *)(a2 + 20), 0.0);
  *((_DWORD *)a1 + 9) = *(_DWORD *)(a2 + 132);
  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_10183D5C8);
  }
  uint64_t v5 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *(_DWORD *)(a2 + 96);
    uint64_t v7 = *a1;
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2];
    uint64_t v10 = a1[3];
    int v11 = *((_DWORD *)a1 + 9);
    uint64_t v12 = *(void *)(a2 + 184);
    *(_DWORD *)std::string buf = 67241729;
    int v35 = v6;
    __int16 v36 = 2049;
    uint64_t v37 = v7;
    __int16 v38 = 2049;
    uint64_t v39 = v8;
    __int16 v40 = 2050;
    uint64_t v41 = v9;
    __int16 v42 = 2050;
    uint64_t v43 = v10;
    __int16 v44 = 1026;
    int v45 = v11;
    __int16 v46 = 2050;
    uint64_t v47 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLNmeaScreener,store,type,%{public}d,lat,%{private}.8lf,lon,%{private}.8lf,timestampGPS,%{public}.1lf,fHorizontalU ncertainty,%{public}.1lf,refFrame,%{public}d,timestampGps,%{public}.1lf",  buf,  0x40u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183D5C8);
    }
    int v13 = *(_DWORD *)(a2 + 96);
    uint64_t v14 = *a1;
    uint64_t v15 = a1[1];
    uint64_t v16 = a1[2];
    uint64_t v17 = a1[3];
    int v18 = *((_DWORD *)a1 + 9);
    uint64_t v19 = *(void *)(a2 + 184);
    v21[0] = 67241729;
    v21[1] = v13;
    __int16 v22 = 2049;
    uint64_t v23 = v14;
    __int16 v24 = 2049;
    uint64_t v25 = v15;
    __int16 v26 = 2050;
    uint64_t v27 = v16;
    __int16 v28 = 2050;
    uint64_t v29 = v17;
    __int16 v30 = 1026;
    int v31 = v18;
    __int16 v32 = 2050;
    uint64_t v33 = v19;
    __int128 v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLNmeaScreener,store,type,%{public}d,lat,%{private}.8lf,lon,%{private}.8lf,timestampGPS,%{public}.1l f,fHorizontalUncertainty,%{public}.1lf,refFrame,%{public}d,timestampGps,%{public}.1lf",  v21,  64);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNmeaScreener::ExternalLocationData::fillData(const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v20);
  }

uint64_t sub_1004EFA20(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = 256;
  *(_BYTE *)(a1 + 2) = 0;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  sub_100D2D9A4(a1 + 32);
  *(void *)(a1 + sub_1000A56E8(v1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 8_Block_object_dispose((const void *)(v1 - 232), 8) = _Q0;
  *(void *)(a1 + 104) = 0LL;
  *(_OWORD *)(a1 + 112) = xmmword_1012EE9B0;
  *(void *)(a1 + 136) = 0LL;
  *(void *)(a1 + 144) = 0LL;
  *(void *)(a1 + 12_Block_object_dispose((const void *)(v1 - 232), 8) = 0x4069000000000000LL;
  *(_OWORD *)(a1 + 152) = _Q0;
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(_OWORD *)(a1 + 176) = xmmword_1012EE9C0;
  *(void *)(a1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(a1 + 192) = 0x4069000000000000LL;
  *(_OWORD *)(a1 + 216) = _Q0;
  *(void *)(a1 + 232) = 0LL;
  *(_OWORD *)(a1 + 24sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = xmmword_1012EE9D0;
  *(void *)(a1 + sub_1004C7BE0(v1 - 256) = 0x40B3880000000000LL;
  *(void *)(a1 + 264) = 0LL;
  *(void *)(a1 + 2sub_1000A56E8(v1 + 72) = 0LL;
  *(void *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0xBFF0000000000000LL;
  *(void *)(a1 + 28_Block_object_dispose((const void *)(v1 - 232), 8) = 0xBFF0000000000000LL;
  *(void *)(a1 + 296) = 0LL;
  *(_OWORD *)(a1 + 304) = xmmword_1012EE9E0;
  *(void *)(a1 + 32sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0x40E86A0000000000LL;
  *(void *)(a1 + 32_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(a1 + 336) = 0LL;
  *(void *)(a1 + 344) = 0xBFF0000000000000LL;
  *(void *)(a1 + 352) = 0xBFF0000000000000LL;
  *(void *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(a1 + 384) = 0x410E848000000000LL;
  *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v1 - 232), 8) = xmmword_1012EE9F0;
  sub_10001A504(a1 + 392, a2);
  *(void *)(a1 + 424) = 0LL;
  *(_BYTE *)(a1 + 432) = 1;
  *(void *)(a1 + 436) = 0xB40000000ALL;
  *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(_WORD *)(a1 + 456) = 0;
  *(void *)(a1 + 464) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 4sub_1000A56E8(v1 + 72) = 50;
  *(void *)(a1 + 48sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0xBFF0000000000000LL;
  int v18 = 0;
  sub_1002F0B04(buf);
  int v9 = sub_1002A7CB0(*(uint64_t *)buf, "GpsSimulatorTestMode", &v18);
  if (v18) {
    int v10 = v9;
  }
  else {
    int v10 = 0;
  }
  int v11 = v20;
  if (!v20) {
    goto LABEL_8;
  }
  p_shared_owners = (unint64_t *)&v20->__shared_owners_;
  do
    unint64_t v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    if (!v10) {
      return a1;
    }
  }

  else
  {
LABEL_8:
    if (!v10) {
      return a1;
    }
  }

  *(_BYTE *)a1 = 1;
  if (qword_101934810 != -1) {
    dispatch_once(&qword_101934810, &stru_10183D5C8);
  }
  uint64_t v14 = (os_log_s *)qword_101934818;
  if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "CLNmeaScreener,fSimulatorMode,1", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183D5C8);
    }
    v17[0] = 0;
    uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLNmeaScreener,fSimulatorMode,1",  v17,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLNmeaScreener::CLNmeaScreener(NMEAScreenerCallback)", "%s\n", v16);
  }

  return a1;
}

void sub_1004EFD54(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void **)(v1 + 416);
  if (v5 == v2)
  {
    uint64_t v6 = 4LL;
    uint64_t v5 = v2;
  }

  else
  {
    if (!v5) {
      goto LABEL_6;
    }
    uint64_t v6 = 5LL;
  }

  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  _Unwind_Resume(a1);
}

void sub_1004EFDC8(uint64_t a1, char a2)
{
  if ((sub_1004FD204() & 1) != 0)
  {
    *(_BYTE *)(a1 + 2) = a2;
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183D5C8);
    }
    double v4 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_INFO))
    {
      int v5 = *(unsigned __int8 *)(a1 + 2);
      *(_DWORD *)std::string buf = 67240192;
      int v12 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "CLNMEAScreener,isExternalLocationDisablementAllowed,1,PauseExternalLocation,%{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183D5C8);
      }
      int v6 = *(unsigned __int8 *)(a1 + 2);
      LODWORD(v10[0]) = 67240192;
      HIDWORD(v10[0]) = v6;
      uint64_t v7 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  1LL,  "CLNMEAScreener,isExternalLocationDisablementAllowed,1,PauseExternalLocation,%{public}d",  v10,  8,  v10[0]);
LABEL_19:
      int v9 = (uint8_t *)v7;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLNmeaScreener::pauseExternalLocation(const BOOL)", "%s\n", v7);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  else
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183D5C8);
    }
    uint64_t v8 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "CLNMEAScreener,isExternalLocationDisablementAllowed,0",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183D5C8);
      }
      LOWORD(v10[0]) = 0;
      uint64_t v7 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "CLNMEAScreener,isExternalLocationDisablementAllowed,0",  v10,  2,  v10[0]);
      goto LABEL_19;
    }
  }

void sub_1004F0078(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)(a1 + 1)) {
    return;
  }
  if (*(double *)(a2 + 76) < 0.0
    || *(double *)(a2 + 504) < 0.0
    || sub_10029286C(*(double *)(a2 + 4), *(double *)(a2 + 12)))
  {
    if (qword_101934810 != -1) {
      dispatch_once(&qword_101934810, &stru_10183D5C8);
    }
    double v4 = (os_log_s *)qword_101934818;
    if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = (void *)(a1 + 8);
      int v6 = *(_DWORD *)(a2 + 96);
      *(_DWORD *)std::string buf = 136380931;
      uint64_t v33 = v5;
      __int16 v34 = 1026;
      LODWORD(v35) = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CLNMEAScreener,store,%{private}s,invalid location input,type,%{public}d",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934810 != -1) {
        dispatch_once(&qword_101934810, &stru_10183D5C8);
      }
      __int128 v20 = (void *)(a1 + 8);
      int v21 = *(_DWORD *)(a2 + 96);
      *(_DWORD *)uint64_t v29 = 136380931;
      *(void *)&v29[4] = v20;
      *(_WORD *)&v29[12] = 1026;
      *(_DWORD *)&v29[14] = v21;
      __int16 v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  0LL,  "CLNMEAScreener,store,%{private}s,invalid location input,type,%{public}d",  v29,  18);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNmeaScreener::updateExternalLocation(const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v22);
    }

    return;
  }

  int v7 = *(_DWORD *)(a2 + 96);
  if ((v7 & 0xFFFFFFF7) == 1 && !*(_BYTE *)(a2 + 516))
  {
    if (*(void *)(a2 + 680))
    {
      *(void *)uint64_t v29 = 0xBFF0000000000000LL;
      *(_OWORD *)&v29[8] = 0u;
      __int128 v30 = 0u;
      int v31 = 0;
      double v8 = sub_101171D4C();
      sub_1004F06F0((uint64_t)v29, *(uint64_t **)(a2 + 680), v8);
      if (*(int *)&v29[8] <= 19 && *(_DWORD *)&v29[12] == *(_DWORD *)&v29[8])
      {
        *(_BYTE *)(a1 + 457) = 0;
        if (qword_101934810 != -1) {
          dispatch_once(&qword_101934810, &stru_10183D5C8);
        }
        int v9 = (os_log_s *)qword_101934818;
        if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v10 = *(void *)(a2 + 4);
          uint64_t v11 = *(void *)(a2 + 12);
          *(_DWORD *)std::string buf = 134349825;
          uint64_t v33 = *(void **)v29;
          __int16 v34 = 2049;
          uint64_t v35 = v10;
          __int16 v36 = 2049;
          uint64_t v37 = v11;
          __int16 v38 = 1026;
          int v39 = -1;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "CLNmeaScreener,store,validityTimeMCT,%{public}.1lf,lat,%{private}.3f,lon,%{private}.3f,goodGNSSTracking,%{public}d",  buf,  0x26u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_33;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934810 != -1) {
          dispatch_once(&qword_101934810, &stru_10183D5C8);
        }
        uint64_t v12 = *(void *)(a2 + 4);
        uint64_t v13 = *(void *)(a2 + 12);
        *(_DWORD *)uint64_t v27 = 134349825;
        *(void *)&v27[4] = *(void *)v29;
        *(_WORD *)&_BYTE v27[12] = 2049;
        *(void *)&v27[14] = v12;
        *(_WORD *)&v27[22] = 2049;
        LOWORD(v2_Block_object_dispose((const void *)(v1 - 232), 8) = 1026;
        *(_DWORD *)((char *)&v28 + 2) = -1;
        uint64_t v14 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLNmeaScreener,store,validityTimeMCT,%{public}.1lf,lat,%{private}.3f,lon,%{private}.3f,goo dGNSSTracking,%{public}d",  v27,  38,  *(_OWORD *)v27,  *(void *)&v27[16],  v13,  v28);
      }

      else
      {
        *(void *)(a1 + 464) = *(void *)v29;
        *(_BYTE *)(a1 + 457) = sub_1004F0804((uint64_t)v29);
        if (qword_101934810 != -1) {
          dispatch_once(&qword_101934810, &stru_10183D5C8);
        }
        uint64_t v16 = (os_log_s *)qword_101934818;
        if (os_log_type_enabled((os_log_t)qword_101934818, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v17 = *(void *)(a2 + 4);
          uint64_t v18 = *(void *)(a2 + 12);
          int v19 = *(unsigned __int8 *)(a1 + 457);
          *(_DWORD *)std::string buf = 134349825;
          uint64_t v33 = *(void **)v29;
          __int16 v34 = 2049;
          uint64_t v35 = v17;
          __int16 v36 = 2049;
          uint64_t v37 = v18;
          __int16 v38 = 1026;
          int v39 = v19;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "CLNmeaScreener,store,validityTimeMCT,%{public}.1lf,lat,%{private}.3f,lon,%{private}.3f,goodGNSSTracking,%{public}d",  buf,  0x26u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_33;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934810 != -1) {
          dispatch_once(&qword_101934810, &stru_10183D5C8);
        }
        uint64_t v23 = *(void *)(a2 + 4);
        uint64_t v24 = *(void *)(a2 + 12);
        int v25 = *(unsigned __int8 *)(a1 + 457);
        *(_DWORD *)uint64_t v27 = 134349825;
        *(void *)&v27[4] = *(void *)v29;
        *(_WORD *)&_BYTE v27[12] = 2049;
        *(void *)&v27[14] = v23;
        *(_WORD *)&v27[22] = 2049;
        LOWORD(v2_Block_object_dispose((const void *)(v1 - 232), 8) = 1026;
        *(_DWORD *)((char *)&v28 + 2) = v25;
        uint64_t v14 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934818,  2LL,  "CLNmeaScreener,store,validityTimeMCT,%{public}.1lf,lat,%{private}.3f,lon,%{private}.3f,goo dGNSSTracking,%{public}d",  v27,  38,  *(_OWORD *)v27,  *(void *)&v27[16],  v24,  v28);
      }

      __int16 v26 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNmeaScreener::updateExternalLocation(const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v14);
      if (v26 != buf) {
        free(v26);
      }
    }

uint64_t sub_1004F06F0(uint64_t result, uint64_t *a2, double a3)
{
  *(double *)__n128 result = a3;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 != v4)
  {
    int v5 = *(_DWORD *)(result + 8);
    do
    {
      if (*(_BYTE *)(v3 + 24))
      {
        ++*(_DWORD *)(result + 12);
        float v6 = *(float *)(v3 + 12);
        if (v6 <= 90.0)
        {
          ++*(_DWORD *)(result + 28);
        }

        else if (v6 > 180.0)
        {
          if (v6 > 270.0) {
            ++*(_DWORD *)(result + 40);
          }
          else {
            ++*(_DWORD *)(result + 36);
          }
        }

        else
        {
          ++*(_DWORD *)(result + 32);
        }
      }

      v3 += 28LL;
      ++v5;
    }

    while (v3 != v4);
    *(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = v5;
  }

  return result;
}

uint64_t sub_1004F0804(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8);
  if (!v1) {
    return 0LL;
  }
  int v2 = *(_DWORD *)(a1 + 12);
  if (!v2) {
    return 0LL;
  }
  int v3 = *(_DWORD *)(a1 + 28);
  BOOL v4 = v3 <= 0;
  unint64_t v5 = v3 > 0;
  uint64_t v6 = 1LL;
  if (!v4) {
    uint64_t v6 = 2LL;
  }
  if (v5 >= 3
    && ((double)v2 / (double)v1 * 100.0 >= 50.0
      ? (BOOL v7 = (double)*(int *)(a1 + 20) / (double)v2 * 100.0 < 40.0)
      : (BOOL v7 = 1),
        !v7 || *(int *)(a1 + 24) > 3))
  {
    return 1LL;
  }

  else
  {
    return 0LL;
  }

void sub_1004F08B8(id a1)
{
  qword_101934818 = (uint64_t)os_log_create("com.apple.locationd.Position", "GpsAccessory");
}

double sub_1004F08E4()
{
  double result = sub_1002952F8() + -259200.0;
  dword_1019961A0 = result;
  return result;
}

void *sub_1004F0910(uint64_t a1, uint64_t a2)
{
  int v3 = 10;
  double result = (void *)sub_100C0CA10(a1, &v3, qword_1019961A8, a2);
  *double result = off_10183D5F8;
  result[38] = 0LL;
  result[39] = 0LL;
  result[37] = 0LL;
  return result;
}

uint64_t sub_1004F0958(uint64_t a1)
{
  *(void *)a1 = off_10183D5F8;
  int v3 = (void **)(a1 + 296);
  sub_1004F206C(&v3);
  return sub_100C0CB28(a1);
}

void sub_1004F09A0(uint64_t a1)
{
  *(void *)a1 = off_10183D5F8;
  int v3 = (void **)(a1 + 296);
  sub_1004F206C(&v3);
  int v2 = (void *)sub_100C0CB28(a1);
  operator delete(v2);
}

uint64_t sub_1004F09EC()
{
  return 3LL;
}

uint64_t sub_1004F09F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 296);
  uint64_t v3 = *(void *)(a1 + 304);
  if (v2 != v3)
  {
    unint64_t v5 = a2[1];
    do
    {
      if (v5 >= a2[2])
      {
        unint64_t v5 = sub_1004F215C(a2, v2);
      }

      else
      {
        sub_1004F20F8((uint64_t)a2, v2);
        v5 += 56LL;
      }

      a2[1] = v5;
      v2 += 56LL;
    }

    while (v2 != v3);
  }

  return 1LL;
}

uint64_t sub_1004F0A64(void *a1, FILE *a2)
{
  if (!a2) {
    sub_10123C0F4(qword_101934A70 == -1);
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183D680);
  }
  BOOL v4 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Traversing preload manifest file", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D680);
    }
    *(_WORD *)__ptr = 0;
    __int16 v64 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Traversing preload manifest file",  __ptr,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLRegionPreloadManifestTile::traverseTileFile(FILE *, const TraverseDetails &)",  "%s\n",  v64);
    if (v64 != buf) {
      free(v64);
    }
  }

  memset(&v94, 0, sizeof(v94));
  do
  {
    size_t v5 = fread(__ptr, 1uLL, 0x400uLL, a2);
    std::string::append(&v94, __ptr, v5);
  }

  while (v5 && !feof(a2) && !ferror(a2));
  if (ferror(a2))
  {
    uint64_t v6 = 0LL;
    goto LABEL_72;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183D680);
  }
  BOOL v7 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    std::string::size_type size = v94.__r_.__value_.__s.__size_;
    if ((v94.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string::size_type size = v94.__r_.__value_.__l.__size_;
    }
    *(_DWORD *)std::string buf = 134217984;
    *(void *)&uint8_t buf[4] = size;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Preload manifest tile std::string::size_type size = %lu", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D680);
    }
    std::string::size_type v65 = v94.__r_.__value_.__s.__size_;
    if ((v94.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string::size_type v65 = v94.__r_.__value_.__l.__size_;
    }
    *(_DWORD *)__int128 v109 = 134217984;
    *(void *)&v109[4] = v65;
    v66 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Preload manifest tile std::string::size_type size = %lu",  v109);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLRegionPreloadManifestTile::traverseTileFile(FILE *, const TraverseDetails &)",  "%s\n",  v66);
    if (v66 != buf) {
      free(v66);
    }
  }

  if ((v94.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    int v9 = &v94;
  }
  else {
    int v9 = (std::string *)v94.__r_.__value_.__r.__words[0];
  }
  if ((v94.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    std::string::size_type v10 = v94.__r_.__value_.__s.__size_;
  }
  else {
    std::string::size_type v10 = v94.__r_.__value_.__l.__size_;
  }
  uint64_t v11 = +[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", v9, v10);
  double v12 = COERCE_DOUBLE(objc_autoreleasePoolPush());
  id v13 = [[PBDataReader alloc] initWithData:v11];
  uint64_t v14 = objc_alloc(&OBJC_CLASS___TRANSITPbRegionPreloadManifest);
  unsigned __int8 v15 = -[TRANSITPbRegionPreloadManifest readFrom:](v14, "readFrom:", v13);
  if (!v14)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D680);
    }
    int v19 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_FAULT, "failed to allocate transit tile", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_70;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D680);
    }
    *(_WORD *)__int128 v109 = 0;
    LODWORD(v75) = 2;
    __int128 v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "failed to allocate transit tile",  v109,  *(void *)&v75);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLRegionPreloadManifestTile::traverseTileFile(FILE *, const TraverseDetails &)",  "%s\n",  v20);
LABEL_157:
    if (v20 == buf) {
      goto LABEL_70;
    }
LABEL_158:
    free(v20);
    goto LABEL_70;
  }

  if ((v15 & 1) == 0)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D680);
    }
    int v21 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      std::string::size_type v22 = v94.__r_.__value_.__s.__size_;
      std::string::size_type v23 = v94.__r_.__value_.__l.__size_;
      (*(void (**)(_BYTE *__return_ptr, void *))(*a1 + 16LL))(buf, a1);
      std::string::size_type v24 = (v22 & 0x80u) == 0LL ? v22 : v23;
      int v25 = v119[1] >= 0 ? buf : *(_BYTE **)buf;
      *(_DWORD *)__int128 v109 = 134349314;
      *(void *)&v109[4] = v24;
      *(_WORD *)&v109[12] = 2082;
      uint64_t v110 = (uint64_t)v25;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_FAULT,  "failed to decode transit tile protobuf, encrypted=%{public}lu tile=%{public}s",  v109,  0x16u);
      if ((v119[1] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_70;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D680);
    }
    uint64_t v26 = qword_101934A78;
    std::string::size_type v27 = v94.__r_.__value_.__s.__size_;
    std::string::size_type v28 = v94.__r_.__value_.__l.__size_;
    (*(void (**)(_BYTE *__return_ptr, void *))(*a1 + 16LL))(v109, a1);
    if ((v27 & 0x80u) == 0LL) {
      std::string::size_type v29 = v27;
    }
    else {
      std::string::size_type v29 = v28;
    }
    if ((SBYTE1(v111) & 0x80u) == 0) {
      __int128 v30 = v109;
    }
    else {
      __int128 v30 = *(_BYTE **)v109;
    }
    int v99 = 134349314;
    double v100 = (_BYTE *)v29;
    __int16 v101 = 2082;
    __int128 v102 = v30;
    LODWORD(v75) = 22;
    __int128 v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v26,  17LL,  "failed to decode transit tile protobuf, encrypted=%{public}lu tile=%{public}s",  &v99,  *(void *)&v75);
    if (SBYTE1(v111) < 0) {
      operator delete(*(void **)v109);
    }
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLRegionPreloadManifestTile::traverseTileFile(FILE *, const TraverseDetails &)",  "%s\n",  v20);
    if (v20 == buf) {
      goto LABEL_70;
    }
    goto LABEL_158;
  }

  if (-[TRANSITPbRegionPreloadManifest hasVersion](v14, "hasVersion")
    && -[TRANSITPbRegionPreloadManifest hasGenerationTimeSecs](v14, "hasGenerationTimeSecs")
    && -[TRANSITPbRegionPreloadManifest marketsCount](v14, "marketsCount"))
  {
    -[TRANSITPbRegionPreloadManifest generationTimeSecs](v14, "generationTimeSecs");
    double v17 = v16;
    if (-[TRANSITPbRegionPreloadManifest hasExpirationAgeSecs](v14, "hasExpirationAgeSecs")) {
      unsigned int v18 = -[TRANSITPbRegionPreloadManifest expirationAgeSecs](v14, "expirationAgeSecs");
    }
    else {
      unsigned int v18 = 15292800;
    }
    double v33 = v17 - kCFAbsoluteTimeIntervalSince1970;
    *((_DWORD *)a1 + 46) = -[TRANSITPbRegionPreloadManifest version](v14, "version");
    *(void *)((char *)a1 + 52) = 3865470568200000LL;
    a1[8] = -1LL;
    *((double *)a1 + 22) = v33;
    *((_DWORD *)a1 + 5sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v18;
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D680);
    }
    __int16 v34 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v35 = -[TRANSITPbRegionPreloadManifest version](v14, "version");
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      *(_DWORD *)std::string buf = 67110400;
      *(_DWORD *)&uint8_t buf[4] = v35;
      *(_WORD *)&uint8_t buf[8] = 1024;
      *(_DWORD *)&buf[10] = 1800000;
      uint64_t v118 = 0x800000DBBA00400LL;
      *(double *)__int16 v119 = v33;
      *(_WORD *)&v119[8] = 2048;
      *(double *)uint64_t v120 = Current - v33;
      *(_WORD *)&v120[8] = 1024;
      unsigned int v121 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "ver,%d,x,%d,y,%d,generated,%.01lf,age,%.01f,ageThresh,%d",  buf,  0x2Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D680);
      }
      uint64_t v67 = qword_101934A78;
      unsigned int v68 = -[TRANSITPbRegionPreloadManifest version](v14, "version");
      CFAbsoluteTime v69 = CFAbsoluteTimeGetCurrent();
      *(_DWORD *)__int128 v109 = 67110400;
      *(_DWORD *)&v109[4] = v68;
      *(_WORD *)&v109[8] = 1024;
      *(_DWORD *)&v109[10] = 1800000;
      uint64_t v110 = 0x800000DBBA00400LL;
      double v111 = v33;
      __int16 v112 = 2048;
      *(double *)&__int128 v113 = v69 - v33;
      LOWORD(v114) = 1024;
      *(_DWORD *)((char *)&v114 + 2) = v18;
      __int128 v70 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v67,  2LL,  "ver,%d,x,%d,y,%d,generated,%.01lf,age,%.01f,ageThresh,%d",  v109,  46,  LODWORD(v76),  v77,  v79,  v81);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLRegionPreloadManifestTile::traverseTileFile(FILE *, const TraverseDetails &)",  "%s\n",  v70);
      if (v70 != buf) {
        free(v70);
      }
    }

    double v78 = v12;
    __int128 v80 = a1;
    double v82 = a1 + 37;
    sub_1004F20AC(a1 + 37);
    __int128 v92 = 0u;
    __int128 v93 = 0u;
    __int128 v90 = 0u;
    __int128 v91 = 0u;
    uint64_t v37 = -[TRANSITPbRegionPreloadManifest markets](v14, "markets");
    id v38 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v37,  "countByEnumeratingWithState:objects:count:",  &v90,  v115,  16LL);
    if (v38)
    {
      uint64_t v39 = *(void *)v91;
      __int16 v83 = v37;
      do
      {
        __int16 v40 = 0LL;
        do
        {
          if (*(void *)v91 != v39) {
            objc_enumerationMutation(v37);
          }
          uint64_t v41 = *(void **)(*((void *)&v90 + 1) + 8LL * (void)v40);
          if ([v41 hasNorthWestLatitude]
            && [v41 hasNorthWestLongitude]
            && [v41 hasSouthEastLatitude]
            && [v41 hasSouthEastLongitude])
          {
            [v41 northWestLatitude];
            *(void *)&__int128 v89 = v42;
            [v41 northWestLongitude];
            *((void *)&v89 + 1) = v43;
            [v41 southEastLatitude];
            v88.n128_u64[0] = v44;
            [v41 southEastLongitude];
            v88.n128_u64[1] = v45;
            sub_100BD4458((uint64_t)v109, &v89, &v88);
            if (qword_101934A70 != -1) {
              dispatch_once(&qword_101934A70, &stru_10183D680);
            }
            __int16 v46 = (os_log_s *)qword_101934A78;
            if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)std::string buf = 134218752;
              *(void *)&uint8_t buf[4] = v89;
              *(_WORD *)&_BYTE buf[12] = 2048;
              uint64_t v118 = *((void *)&v89 + 1);
              *(_WORD *)__int16 v119 = 2048;
              *(void *)&v119[2] = v88.n128_u64[0];
              *(_WORD *)uint64_t v120 = 2048;
              *(void *)&v120[2] = v88.n128_u64[1];
              _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "Reading new market, {%.06lf,%.06lf}, {%.06lf,%.06lf}",  buf,  0x2Au);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934A70 != -1) {
                dispatch_once(&qword_101934A70, &stru_10183D680);
              }
              int v99 = 134218752;
              double v100 = (_BYTE *)v89;
              __int16 v101 = 2048;
              __int128 v102 = (_BYTE *)*((void *)&v89 + 1);
              __int16 v103 = 2048;
              std::stringbuf::string_type __p = (void *)v88.n128_u64[0];
              __int16 v105 = 2048;
              unint64_t v106 = v88.n128_u64[1];
              LODWORD(v75) = 42;
              double v59 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Reading new market, {%.06lf,%.06lf}, {%.06lf,%.06lf}",  COERCE_DOUBLE(&v99),  v75,  v76,  v78);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLRegionPreloadManifestTile::traverseTileFile(FILE *, const TraverseDetails &)",  "%s\n",  v59);
              if (v59 != buf) {
                free(v59);
              }
            }

            __int128 v86 = 0u;
            __int128 v87 = 0u;
            __int128 v84 = 0u;
            __int128 v85 = 0u;
            id v47 = [v41 tiles];
            id v48 = [v47 countByEnumeratingWithState:&v84 objects:v108 count:16];
            if (v48)
            {
              char v49 = 0;
              uint64_t v50 = *(void *)v85;
              do
              {
                uint64_t v51 = 0LL;
                do
                {
                  if (*(void *)v85 != v50) {
                    objc_enumerationMutation(v47);
                  }
                  __int16 v52 = *(void **)(*((void *)&v84 + 1) + 8LL * (void)v51);
                  if ([v52 hasTileType]
                    && ![v52 tileType]
                    && [v52 hasTileX]
                    && [v52 hasTileY])
                  {
                    *(_DWORD *)std::string buf = 0;
                    sub_1008ACE9C((uint64_t)&v99, buf);
                    LODWORD(v10sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = [v52 tileX];
                    HIDWORD(v10sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = [v52 tileY];
                    double v53 = sub_1008ADB4C((uint64_t)&v99);
                    double v54 = sub_1008ADB70((uint64_t)&v99);
                    else {
                      char v55 = 0;
                    }
                    if (qword_101934A70 != -1) {
                      dispatch_once(&qword_101934A70, &stru_10183D680);
                    }
                    __int16 v56 = (os_log_s *)qword_101934A78;
                    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
                    {
                      *(_DWORD *)std::string buf = 134218240;
                      *(double *)&uint8_t buf[4] = v53;
                      *(_WORD *)&_BYTE buf[12] = 2048;
                      uint64_t v118 = *(void *)&v54;
                      _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEBUG,  "Adding new tile to market, [%.06lf,%.06lf]",  buf,  0x16u);
                    }

                    if (sub_1002921D0(115, 2))
                    {
                      bzero(buf, 0x65CuLL);
                      if (qword_101934A70 != -1) {
                        dispatch_once(&qword_101934A70, &stru_10183D680);
                      }
                      int v95 = 134218240;
                      double v96 = v53;
                      __int16 v97 = 2048;
                      double v98 = v54;
                      LODWORD(v75) = 22;
                      int v57 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Adding new tile to market, [%.06lf,%.06lf]",  COERCE_DOUBLE(&v95),  v75);
                      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLRegionPreloadManifestTile::traverseTileFile(FILE *, const TraverseDetails &)",  "%s\n",  v57);
                      if (v57 != buf) {
                        free(v57);
                      }
                    }

                    sub_100BD4444((uint64_t)buf, v55, v53, v54);
                    sub_100BD4474(v109, (__int128 *)buf);
                    if (v107 < 0) {
                      operator delete(__p);
                    }
                    char v49 = 1;
                  }

                  uint64_t v51 = (char *)v51 + 1;
                }

                while (v48 != v51);
                id v58 = [v47 countByEnumeratingWithState:&v84 objects:v108 count:16];
                id v48 = v58;
              }

              while (v58);
              uint64_t v37 = v83;
              if ((v49 & 1) != 0) {
                sub_1004F1E50(v82, (uint64_t)v109);
              }
            }

            if (*(double *)&v113 != 0.0)
            {
              __int128 v114 = v113;
              operator delete(v113);
            }
          }

          __int16 v40 = (char *)v40 + 1;
        }

        while (v40 != v38);
        id v60 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v37,  "countByEnumeratingWithState:objects:count:",  &v90,  v115,  16LL);
        id v38 = v60;
      }

      while (v60);
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D680);
    }
    double v12 = v78;
    uint64_t v61 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      (*(void (**)(_BYTE *__return_ptr, void *))(*v80 + 16LL))(buf, v80);
      __int16 v62 = v119[1] >= 0 ? buf : *(_BYTE **)buf;
      uint64_t v63 = 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(v80[38] - v80[37]) >> 3);
      *(_DWORD *)__int128 v109 = 136315394;
      *(void *)&v109[4] = v62;
      *(_WORD *)&v109[12] = 2048;
      uint64_t v110 = v63;
      _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEBUG,  "loaded transit tile %s with %lu regions",  v109,  0x16u);
      if ((v119[1] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183D680);
      }
      uint64_t v71 = qword_101934A78;
      (*(void (**)(_BYTE *__return_ptr))(*v80 + 16LL))(v109);
      if ((SBYTE1(v111) & 0x80u) == 0) {
        __int16 v72 = v109;
      }
      else {
        __int16 v72 = *(_BYTE **)v109;
      }
      uint64_t v73 = 0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(v80[38] - v80[37]) >> 3);
      int v99 = 136315394;
      double v100 = v72;
      __int16 v101 = 2048;
      __int128 v102 = (_BYTE *)v73;
      LODWORD(v75) = 22;
      uint64_t v74 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v71,  2LL,  "loaded transit tile %s with %lu regions",  (const char *)&v99,  *(void *)&v75);
      if (SBYTE1(v111) < 0) {
        operator delete(*(void **)v109);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLRegionPreloadManifestTile::traverseTileFile(FILE *, const TraverseDetails &)",  "%s\n",  v74);
      if (v74 != buf) {
        free(v74);
      }
      uint64_t v6 = 1LL;
      double v12 = v78;
    }

    else
    {
      uint64_t v6 = 1LL;
    }

    goto LABEL_71;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183D680);
  }
  int v31 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_FAULT, "failed to get fields in manifest", buf, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183D680);
    }
    *(_WORD *)__int128 v109 = 0;
    LODWORD(v75) = 2;
    __int128 v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "failed to get fields in manifest",  v109,  *(void *)&v75);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLRegionPreloadManifestTile::traverseTileFile(FILE *, const TraverseDetails &)",  "%s\n",  v20);
    goto LABEL_157;
  }

void sub_1004F1D6C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, void *__p, uint64_t a43, int a44, __int16 a45, char a46, char a47)
{
  if (a47 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1004F1E50(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = a1[1];
  if (v3 >= a1[2])
  {
    uint64_t v4 = sub_1004F215C(a1, a2);
  }

  else
  {
    sub_1004F20F8((uint64_t)a1, a2);
    uint64_t v4 = v3 + 56;
  }

  a1[1] = v4;
  return v4 - 56;
}

uint64_t sub_1004F1E90@<X0>(uint64_t a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  uint64_t v4 = sub_10000CF44(&v15, (uint64_t)"CLRegionPreloadManifestTile(", 28LL);
  size_t v5 = sub_10000CF44(v4, (uint64_t)"super=", 6LL);
  sub_100399388(a1, &__p);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  double v8 = sub_10000CF44(v5, (uint64_t)p_p, size);
  int v9 = sub_10000CF44(v8, (uint64_t)", numMarkets=", 13LL);
  std::string::size_type v10 = (void *)std::ostream::operator<<( v9,  0x6DB6DB6DB6DB6DB7LL * ((uint64_t)(*(void *)(a1 + 304) - *(void *)(a1 + 296)) >> 3));
  sub_10000CF44(v10, (uint64_t)")", 1LL);
  std::stringbuf::str(a2, &v16);
  *(void *)((char *)v14
  uint64_t v15 = v11;
  std::streambuf::~streambuf(&v16);
  return std::ios::~ios(&v17);
}

void sub_1004F1FF0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

double sub_1004F2020()
{
  return 180.0;
}

double sub_1004F202C()
{
  return 360.0;
}

uint64_t sub_1004F2038()
{
  return 256LL;
}

void sub_1004F2040(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1004F206C(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1004F20AC((uint64_t *)v2);
    operator delete(**a1);
  }

void sub_1004F20AC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 56LL)
  {
    uint64_t v4 = *(void **)(i - 24);
    if (v4)
    {
      *(void *)(i - 16) = v4;
      operator delete(v4);
    }
  }

  a1[1] = v2;
}

void *sub_1004F20F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 16) = v4;
  *(void *)(v3 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(void *)(v3 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(v3 + 32) = 0LL;
  double result = sub_1004F229C( (void *)(v3 + 32),  *(const void **)(a2 + 32),  *(void *)(a2 + 40),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3));
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v3 + 56;
  return result;
}

void sub_1004F2154(_Unwind_Exception *a1)
{
  *(void *)(v1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1004F215C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0x6DB6DB6DB6DB6DB7LL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x6DB6DB6DB6DB6DB7LL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x249249249249249LL) {
    unint64_t v9 = 0x492492492492492LL;
  }
  else {
    unint64_t v9 = v5;
  }
  unsigned int v18 = a1 + 2;
  if (v9) {
    std::string::size_type v10 = (char *)sub_1000AC8F0(v7, v9);
  }
  else {
    std::string::size_type v10 = 0LL;
  }
  uint64_t v11 = &v10[56 * v4];
  v15[0] = v10;
  v15[1] = v11;
  std::stringbuf v16 = v11;
  uint64_t v17 = &v10[56 * v9];
  __int128 v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v12;
  *((void *)v11 + 5) = 0LL;
  *((void *)v11 + 6) = 0LL;
  *((void *)v11 + 4) = 0LL;
  sub_1004F229C( (void *)v11 + 4,  *(const void **)(a2 + 32),  *(void *)(a2 + 40),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3));
  v16 += 56;
  sub_1004F2314(a1, v15);
  uint64_t v13 = a1[1];
  sub_1004F24B8((uint64_t)v15);
  return v13;
}

void sub_1004F2288(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_1004F229C(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    double result = sub_100006E1C(result, a4);
    uint64_t v7 = v6[1];
    uint64_t v8 = a3 - (void)a2;
    if (v8) {
      double result = memmove((void *)v6[1], a2, v8 - 7);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_1004F22F8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_1004F2314(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1004F2388((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1004F2388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v14 = a6;
  *((void *)&v14 + 1) = a7;
  __int128 v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  _DWORD v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }

  else
  {
    do
    {
      __int128 v8 = *(_OWORD *)(a3 - 56);
      *(_OWORD *)(v7 - 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a3 - 40);
      *(_OWORD *)(v7 - 56) = v8;
      *(void *)(v7 - 16) = 0LL;
      *(void *)(v7 - _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
      *(void *)(v7 - 24) = 0LL;
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(a3 - 24);
      *(void *)(v7 - _Block_object_dispose((const void *)(v1 - 232), 8) = *(void *)(a3 - 8);
      *(void *)(a3 - 24) = 0LL;
      *(void *)(a3 - 16) = 0LL;
      *(void *)(a3 - _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
      uint64_t v7 = *((void *)&v14 + 1) - 56LL;
      *((void *)&v14 + 1) -= 56LL;
      a3 -= 56LL;
    }

    while (a3 != a5);
    uint64_t v9 = v14;
  }

  char v12 = 1;
  sub_1004F2440((uint64_t)v11);
  return v9;
}

uint64_t sub_1004F2440(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_1004F2474(a1);
  }
  return a1;
}

void sub_1004F2474(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8LL);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8LL);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)(v1 + 32);
    if (v3)
    {
      *(void *)(v1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v3;
      operator delete(v3);
    }

    v1 += 56LL;
  }

uint64_t sub_1004F24B8(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1004F24EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    *(void *)(a1 + 16) = v2 - 56;
    uint64_t v5 = *(void **)(v2 - 24);
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }

    else
    {
      v2 -= 56LL;
    }
  }

uint64_t sub_1004F2544()
{
  unsigned __int8 v0 = operator new(0x10uLL);
  uint64_t result = sub_1002E4C3C(v0, "CLRegionPreloadManifestTile-Mutex", 1LL, 1LL);
  qword_1019961A8 = (uint64_t)v0;
  return result;
}

void sub_1004F2584(_Unwind_Exception *a1)
{
}

uint64_t sub_1004F2598()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  return qword_1019A10E0;
}

void sub_1004F25D8(id a1)
{
  uint64_t v1 = operator new(8uLL);
  void *v1 = &off_10183D6D0;
  qword_1019A10E0 = (uint64_t)v1;
}

uint64_t sub_1004F260C()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 182) < 0x2C) & (0xC0000000003uLL >> (dword_1019961B8
                                                                                            + 74));
}

uint64_t sub_1004F2690()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return dword_1019961B8;
}

BOOL sub_1004F26D0()
{
  unsigned __int8 v0 = (const __CFBoolean *)MGCopyAnswer(@"contains-cellular-radio", 0LL);
  if (!v0) {
    return 0LL;
  }
  uint64_t v1 = v0;
  CFTypeID v2 = CFGetTypeID(v0);
  BOOL v3 = v2 == CFBooleanGetTypeID() && CFBooleanGetValue(v1) != 0;
  CFRelease(v1);
  return v3;
}

BOOL sub_1004F2740()
{
  unsigned __int8 v0 = (const __CFBoolean *)MGCopyAnswer(@"gas-gauge-battery", 0LL);
  int Value = CFBooleanGetValue(v0);
  if (v0) {
    CFRelease(v0);
  }
  return Value != 0;
}

uint64_t sub_1004F2788()
{
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 2LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1244490093;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEA26;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 5LL;
  }
  LODWORD(v9.__r_.__value_.__r.__words[2]) = 1377801277;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EEA3A;
  if ((MGIsDeviceOfType(&v9) & 1) != 0) {
    return 5LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 19LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 20LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1839812531;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEA4E;
  if ((MGIsDeviceOfType(buf) & 1) != 0 || (MGIsDeviceOfType(0LL) & 1) != 0) {
    return 20LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 52LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -435113336;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEA62;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 53LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1997581659;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEA76;
  if ((MGIsDeviceOfType(buf) & 1) != 0 || (MGIsDeviceOfType(0LL) & 1) != 0) {
    return 158LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1441055153;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEA8A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 159LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 160LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 3LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 6LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1602014129;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEA9E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 7LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -810116762;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEAB2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 8LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1195351767;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEAC6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 9LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 10LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 11LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1789837692;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEADA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 13LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 48355600;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEAEE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 14LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1239654590;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEB02;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 15LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -679691073;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEB16;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 16LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1579092758;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEB2A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 17LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1430379884;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEB3E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 18LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 21LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -798153473;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEB52;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 22LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -776721724;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEB66;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 23LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1403227947;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEB7A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 24LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 729118884;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEB8E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 25LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1046806126;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEBA2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 26LL;
  }
  LODWORD(v9.__r_.__value_.__r.__words[2]) = -188760945;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EEBB6;
  if ((MGIsDeviceOfType(&v9) & 1) != 0) {
    return 26LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -489993439;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEBCA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 27LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 886875686;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEBDE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 28LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1639077591;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEBF2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 29LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 338555555;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEC06;
  if ((MGIsDeviceOneOfType(buf) & 1) != 0) {
    return 30LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1032708406;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEC1A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 31LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 729903963;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEC2E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 32LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1278131292;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEC42;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 33LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1841712216;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEC56;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 34LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1275676051;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEC6A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 35LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1908474541;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEC7E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 36LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1022451852;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEC92;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 62LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1729782187;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EECA6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 63LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 37LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 368885834;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EECBA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 38LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -414334491;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EECCE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 39LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 40LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -526227167;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EECE2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 41LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1509831889;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EECF6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 42LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1960366092;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EED0A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 43LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -2114570942;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EED1E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 148LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1527788847;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EED32;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 44LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1532898719;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EED46;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 45LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 996646949;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EED5A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 46LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -563086000;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EED6E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 47LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 659506830;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EED82;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 48LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 213746202;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EED96;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 49LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 289690957;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEDAA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 50LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 586720268;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEDBE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 51LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -350584140;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEDD2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 54LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 368778837;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEDE6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 55LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 56LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1418383976;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEDFA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 57LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1213485500;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEE0E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 58LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 59LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1425254930;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEE22;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 60LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1899561076;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEE36;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 61LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -199226823;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEE4A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 64LL;
  }
  LODWORD(v9.__r_.__value_.__r.__words[2]) = 1412427398;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EEE5E;
  if ((MGIsDeviceOfType(&v9) & 1) != 0) {
    return 64LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1283070668;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEE72;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 65LL;
  }
  LODWORD(v9.__r_.__value_.__r.__words[2]) = 160260070;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EEE86;
  if ((MGIsDeviceOfType(&v9) & 1) != 0) {
    return 65LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1711910369;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEE9A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 66LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1282800328;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEEAE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 67LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 897736383;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEEC2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 68LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -453987047;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEED6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 69LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 450980336;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEEEA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 70LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 414393924;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEEFE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 71LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -996295886;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEF12;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 72LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -337121064;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEF26;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 73LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -2092955395;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEF3A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 74LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 674998600;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEF4E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 75LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 317289457;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEF62;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 76LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 401945557;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEF76;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 77LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -232427879;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEF8A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 78LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -427474227;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEF9E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 79LL;
  }
  LODWORD(v9.__r_.__value_.__r.__words[2]) = 1477534141;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EEFB2;
  if ((MGIsDeviceOfType(&v9) & 1) != 0) {
    return 79LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1843102369;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEFC6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 80LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 81LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 470738981;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEFDA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 82LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 83LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 710807826;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EEFEE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 84LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 85LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1860682089;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF002;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 86LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 87LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -2085056298;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF016;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 88LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 2146530832;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF02A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 89LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1742178852;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF03E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 90LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 617174804;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF052;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 91LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1330813729;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF066;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 92LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 93LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 94LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 152704997;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF07A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 95LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -338255497;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF08E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 96LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1040127899;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF0A2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 97LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 283967174;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF0B6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 98LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1530707451;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF0CA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 99LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -871113647;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF0DE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 100LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 483476120;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF0F2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 101LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1472775220;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF106;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 102LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 56502976;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF11A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 103LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 282158961;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF12E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 104LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1282132887;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF142;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 105LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -961843768;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF156;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 106LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1326690998;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF16A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 107LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -441172408;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF17E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 108LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -126099363;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF192;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 109LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1756484512;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF1A6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 110LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 763775061;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF1BA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 111LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1092155788;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF1CE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 112LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -557458837;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF1E2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 113LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -63049871;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF1F6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 114LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1730000236;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF20A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 115LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 406601745;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF21E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 116LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1530338216;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF232;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 117LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1930811061;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF246;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 118LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1654218604;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF25A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 119LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -182498503;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF26E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 124LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -2030489149;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF282;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 120LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 841005628;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF296;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 121LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 223445260;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF2AA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 122LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1219348060;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF2BE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 123LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 125LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 126LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 127LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 128LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 129LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 130LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 131LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 132LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 133LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 2030516999;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF2D2;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EF2E6;
  LODWORD(v9.__r_.__value_.__r.__words[2]) = -1276010597;
  if ((MGIsDeviceOneOfType(buf) & 1) != 0) {
    return 134LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -762483149;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF2FA;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EF30E;
  LODWORD(v9.__r_.__value_.__r.__words[2]) = -1926937532;
  if ((MGIsDeviceOneOfType(buf) & 1) != 0) {
    return 135LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1902732724;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF322;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EF336;
  LODWORD(v9.__r_.__value_.__r.__words[2]) = -342357580;
  if ((MGIsDeviceOneOfType(buf) & 1) != 0) {
    return 136LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 300442574;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF34A;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EF35E;
  LODWORD(v9.__r_.__value_.__r.__words[2]) = -1294188889;
  if ((MGIsDeviceOneOfType(buf) & 1) != 0) {
    return 137LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 138LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -61007701;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF372;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 139LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 140LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -235416490;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF386;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 141LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -820493242;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF39A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 143LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1157300313;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF3AE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 144LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -2132668294;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF3C2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 145LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 146LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 147LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 149LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 150LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1737149739;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF3D6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 151LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1577888303;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF3EA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 152LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1918230744;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF3FE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 153LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1126727276;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF412;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 154LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 300130091;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF426;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 155LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 343814884;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF43A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 156LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1675932945;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF44E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 157LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 161LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 162LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 166LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1840391155;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF462;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 167LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -121925081;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF476;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 142LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1071957977;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF48A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 168LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 438437663;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF49E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 169LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1575123478;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF4B2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 170LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -382792827;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF4C6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 171LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 123138233;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF4DA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 172LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 681511593;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF4EE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 173LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 174LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 175LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 713503427;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF502;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 176LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1632750650;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF516;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 177LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1820426635;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF52A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 178LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -937652876;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF53E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 179LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1874287171;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF552;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 180LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -781324731;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF566;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 181LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1214880059;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF57A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 182LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 426359977;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF58E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 183LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 180LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 184LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 163LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 185LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 164LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 165LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 345196535;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF5A2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 186LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 440949464;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF5B6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 187LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 688565114;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF5CA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 188LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -493418906;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF5DE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 189LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 190LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -584398440;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF5F2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 195LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -879476163;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF606;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 196LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -695298128;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF61A;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EF62E;
  LODWORD(v9.__r_.__value_.__r.__words[2]) = 804488105;
  if ((MGIsDeviceOneOfType(buf) & 1) != 0) {
    return 197LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1614584579;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF642;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EF656;
  LODWORD(v9.__r_.__value_.__r.__words[2]) = 324288768;
  if ((MGIsDeviceOneOfType(buf) & 1) != 0) {
    return 198LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 460218192;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF66A;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EF67E;
  LODWORD(v9.__r_.__value_.__r.__words[2]) = 2144905009;
  if ((MGIsDeviceOneOfType(buf) & 1) != 0) {
    return 199LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 127894440;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF692;
  *(_OWORD *)&v9.__r_.__value_.__l.__data_ = xmmword_1012EF6A6;
  LODWORD(v9.__r_.__value_.__r.__words[2]) = 1070997468;
  if ((MGIsDeviceOneOfType(buf) & 1) != 0) {
    return 200LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 372777383;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF6BA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 201LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -858079590;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF6CE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 202LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -212523443;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF6E2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 203LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 646100384;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF6F6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 204LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -340360463;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF70A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 205LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1605231531;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF71E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 206LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 207LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 208LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -545612308;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF732;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 209LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1178062702;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF746;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 210LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 958549802;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF75A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 211LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1377540371;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF76E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 212LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 213LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 214LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 215LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 216LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 217LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 218LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1431778695;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF782;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 219LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 533419158;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF796;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 220LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1106979518;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF7AA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 221LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -609570151;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF7BE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 222LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -874769875;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF7D2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 223LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1223847566;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF7E6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 224LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 185580364;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF7FA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 225LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 226LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1878025452;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF80E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 227LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1725957070;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF822;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 228LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 538967431;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF836;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 229LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 2060712151;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF84A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 230LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 802516499;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF85E;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 231LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1919324456;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF872;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 232LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1127969586;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF886;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 233LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = 1292009573;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF89A;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 234LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 235LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 236LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 237LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 238LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 142LL;
  }
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (sub_1004F5330()) {
    return 1LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 239LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -12497897;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF8AE;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 240LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -518121279;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF8C2;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 241LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -773054213;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF8D6;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 242LL;
  }
  LODWORD(buf[0].__r_.__value_.__r.__words[2]) = -1204420428;
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = xmmword_1012EF8EA;
  if ((MGIsDeviceOfType(buf) & 1) != 0) {
    return 243LL;
  }
  if ((MGIsDeviceOfType(0LL) & 1) != 0) {
    return 260LL;
  }
  uint64_t v1 = (const void *)MGCopyAnswer(@"HWModelStr", 0LL);
  if (v1)
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_10183DA30);
    }
    CFTypeID v2 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 138477827;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v1;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "unknown HW model %{private}@; file radar to CoreMotion Factory | 1.0",
        (uint8_t *)buf,
        0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      LODWORD(v9.__r_.__value_.__l.__data_) = 138477827;
      *(std::string::size_type *)((char *)v9.__r_.__value_.__r.__words + 4) = (std::string::size_type)v1;
      uint64_t v5 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  16LL,  "unknown HW model %{private}@; file radar to CoreMotion Factory | 1.0",
                            &v9,
                            12LL);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static CLPlatformInfo::Hardware CLPlatformInfo::queryEmbeddedSystemHardware()",  "%s\n",  (const char *)v5);
      if (v5 != buf) {
        free(v5);
      }
    }

    CFRelease(v1);
    return 0LL;
  }

  if (qword_101934A40 != -1) {
    dispatch_once(&qword_101934A40, &stru_10183DA30);
  }
  BOOL v3 = (os_log_s *)qword_101934A48;
  if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_ERROR))
  {
    sub_1002A6C50(@"HWModelStr", buf);
    uint64_t v4 = (buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0 ? buf : (std::string *)buf[0].__r_.__value_.__r.__words[0];
    LODWORD(v9.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)v9.__r_.__value_.__r.__words + 4) = (std::string::size_type)v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "unknown HW model %{private}s; file radar to CoreMotion Factory | 1.0",
      (uint8_t *)&v9,
      0xCu);
  }

  uint64_t result = sub_1002921D0(115, 0);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_10183DA30);
    }
    uint64_t v6 = qword_101934A48;
    sub_1002A6C50(@"HWModelStr", &v9);
    if ((v9.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v7 = &v9;
    }
    else {
      uint64_t v7 = (std::string *)v9.__r_.__value_.__r.__words[0];
    }
    int v10 = 136380675;
    uint64_t v11 = v7;
    __int128 v8 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v6,  16LL,  "unknown HW model %{private}s; file radar to CoreMotion Factory | 1.0",
                          &v10,
                          12LL);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static CLPlatformInfo::Hardware CLPlatformInfo::queryEmbeddedSystemHardware()",  "%s\n",  (const char *)v8);
    if (v8 != buf) {
      free(v8);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_1004F5330()
{
  unsigned __int8 v0 = (const __CFBoolean *)MGCopyAnswer(@"IsVirtualDevice", 0LL);
  if (!v0) {
    return 0LL;
  }
  uint64_t v1 = v0;
  CFTypeID v2 = CFGetTypeID(v0);
  BOOL v3 = v2 == CFBooleanGetTypeID() && CFBooleanGetValue(v1) != 0;
  CFRelease(v1);
  return v3;
}

void sub_1004F53A0(id a1)
{
  uint64_t v1 = (const __CFBoolean *)MGCopyAnswer(@"IsSimulator", 0LL);
  if (v1)
  {
    CFTypeID v2 = v1;
    CFTypeID v3 = CFGetTypeID(v1);
    if (v3 == CFBooleanGetTypeID() && CFBooleanGetValue(v2)) {
      int v4 = 4;
    }
    else {
      int v4 = sub_1004F2788();
    }
    dword_1019961B8 = v4;
    CFRelease(v2);
  }

  else
  {
    dword_1019961B8 = sub_1004F2788();
  }

void *sub_1004F5420@<X0>(void *a1@<X8>)
{
  CFTypeID v2 = (void *)_CFCopyServerVersionDictionary();
  if (!v2) {
    CFTypeID v2 = (void *)_CFCopySystemVersionDictionary();
  }
  CFTypeID v3 = (const __CFString *)[v2 objectForKey:_kCFSystemVersionProductVersionKey];
  int v4 = (const __CFString *)[v2 objectForKey:_kCFSystemVersionProductNameKey];
  uint64_t v5 = (const __CFString *)[v2 objectForKey:_kCFSystemVersionBuildVersionKey];
  uint64_t v6 = @"???";
  if (v4) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = @"???";
  }
  if (v3) {
    __int128 v8 = v3;
  }
  else {
    __int128 v8 = @"???";
  }
  if (v5) {
    uint64_t v6 = v5;
  }
  std::string v9 = +[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@ %@ (%@)", v7, v8, v6);

  return sub_1010DDBC0(a1, (char *)-[NSString UTF8String](v9, "UTF8String"));
}

void sub_1004F54FC(uint64_t a1@<X8>)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_1019961E0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1019961E0))
  {
    xmmword_1019961C8 = 0uLL;
    unk_1019961D8 = 0LL;
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1019961C8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1019961E0);
  }

  if (qword_1019961E8 != -1) {
    dispatch_once(&qword_1019961E8, &stru_10183D700);
  }
  if (byte_1019961DF < 0)
  {
    sub_1010DD48C((_BYTE *)a1, (void *)xmmword_1019961C8, *((unint64_t *)&xmmword_1019961C8 + 1));
  }

  else
  {
    *(_OWORD *)a1 = xmmword_1019961C8;
    *(void *)(a1 + 16) = unk_1019961D8;
  }

void sub_1004F55D4(id a1)
{
  uint64_t v1 = (const __CFDictionary *)_CFCopyServerVersionDictionary(a1);
  if (v1 || (uint64_t v1 = (const __CFDictionary *)_CFCopySystemVersionDictionary()) != 0LL)
  {
    sub_1002A5550((int)v14, v1);
    CFRelease(v1);
    memset(&v13, 0, sizeof(v13));
    memset(&v12, 0, sizeof(v12));
    memset(&v11, 0, sizeof(v11));
    sub_10010B8E0( (const void **)&v12.__r_.__value_.__l.__data_,  (const void **)&v13.__r_.__value_.__l.__data_,  (uint64_t)&v9);
    unsigned __int8 v2 = std::string::append(&v9, "/");
    __int128 v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    v10.__r_.__value_.__l.__cap_ = v2->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v3;
    v2->__r_.__value_.__l.__size_ = 0LL;
    v2->__r_.__value_.__l.__cap_ = 0LL;
    v2->__r_.__value_.__r.__words[0] = 0LL;
    if ((v11.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v4 = &v11;
    }
    else {
      int v4 = (std::string *)v11.__r_.__value_.__r.__words[0];
    }
    if ((v11.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = v11.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = v11.__r_.__value_.__l.__size_;
    }
    uint64_t v6 = std::string::append(&v10, (const std::string::value_type *)v4, size);
    std::string::size_type v7 = v6->__r_.__value_.__r.__words[0];
    v15[0] = v6->__r_.__value_.__l.__size_;
    *(void *)((char *)v15 + 7) = *(std::string::size_type *)((char *)&v6->__r_.__value_.__r.__words[1] + 7);
    char v8 = v6->__r_.__value_.__s.__size_;
    v6->__r_.__value_.__l.__size_ = 0LL;
    v6->__r_.__value_.__l.__cap_ = 0LL;
    v6->__r_.__value_.__r.__words[0] = 0LL;
    if (byte_1019961DF < 0) {
      operator delete((void *)xmmword_1019961C8);
    }
    *(void *)&xmmword_1019961C8 = v7;
    *((void *)&xmmword_1019961C8 + 1) = v15[0];
    *(void *)((char *)&xmmword_1019961C8 + 15) = *(void *)((char *)v15 + 7);
    byte_1019961DF = v8;
    sub_1002A5590(v14);
  }

  else
  {
    std::string::assign((std::string *)&xmmword_1019961C8, "<null>");
  }

void sub_1004F5840( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, void *a29, uint64_t a30, int a31, __int16 a32, char a33, char a34)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  sub_1002A5590(v34 - 72);
  _Unwind_Resume(a1);
}

void sub_1004F58C8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_101996208);
  if ((v3 & 1) == 0)
  {
    uint64_t v5 = a1;
    int v4 = __cxa_guard_acquire(&qword_101996208);
    a1 = v5;
    if (v4)
    {
      xmmword_1019961F0 = 0uLL;
      unk_101996200 = 0LL;
      __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1019961F0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101996208);
      a1 = v5;
    }
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1004F59EC;
  block[3] = &unk_10181D3D0;
  block[4] = a1;
  if (qword_101996210 != -1) {
    dispatch_once(&qword_101996210, block);
  }
  if (byte_101996207 < 0)
  {
    sub_1010DD48C((_BYTE *)a2, (void *)xmmword_1019961F0, *((unint64_t *)&xmmword_1019961F0 + 1));
  }

  else
  {
    *(_OWORD *)a2 = xmmword_1019961F0;
    *(void *)(a2 + 16) = unk_101996200;
  }

double sub_1004F59EC()
{
  if (byte_101996207 < 0) {
    operator delete((void *)xmmword_1019961F0);
  }
  double result = *(double *)&v1;
  xmmword_1019961F0 = v1;
  unk_101996200 = v2;
  return result;
}

void *sub_1004F5A44@<X0>(char *a1@<X1>, void *a2@<X8>)
{
  size_t v5 = 128LL;
  if (sysctlbyname(a1, v6, &v5, 0LL, 0LL)) {
    unsigned __int8 v3 = "";
  }
  else {
    unsigned __int8 v3 = v6;
  }
  return sub_1010DDBC0(a2, v3);
}

void sub_1004F5AD0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_101996230);
  if ((v3 & 1) == 0)
  {
    uint64_t v5 = a1;
    int v4 = __cxa_guard_acquire(&qword_101996230);
    a1 = v5;
    if (v4)
    {
      xmmword_101996218 = 0uLL;
      unk_101996228 = 0LL;
      __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_101996218, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101996230);
      a1 = v5;
    }
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1004F5BF4;
  block[3] = &unk_10181D3D0;
  block[4] = a1;
  if (qword_101996238 != -1) {
    dispatch_once(&qword_101996238, block);
  }
  if (byte_10199622F < 0)
  {
    sub_1010DD48C((_BYTE *)a2, (void *)xmmword_101996218, *((unint64_t *)&xmmword_101996218 + 1));
  }

  else
  {
    *(_OWORD *)a2 = xmmword_101996218;
    *(void *)(a2 + 16) = unk_101996228;
  }

double sub_1004F5BF4()
{
  if (byte_10199622F < 0) {
    operator delete((void *)xmmword_101996218);
  }
  double result = *(double *)&v1;
  xmmword_101996218 = v1;
  unk_101996228 = v2;
  return result;
}

uint64_t sub_1004F5C4C()
{
  if (qword_101996240 != -1) {
    dispatch_once(&qword_101996240, &stru_10183D720);
  }
  return dword_1019384EC;
}

void sub_1004F5C8C(id a1)
{
  __int128 v1 = (const __CFString *)MGCopyAnswer(@"ReleaseType", 0LL);
  if (v1)
  {
    uint64_t v2 = v1;
    CFTypeID v3 = CFGetTypeID(v1);
    if (v3 == CFStringGetTypeID())
    {
      if (CFStringCompare(v2, @"Beta", 0LL) == kCFCompareEqualTo)
      {
        int v4 = 0;
        goto LABEL_18;
      }

      if (CFStringCompare(v2, @"Carrier", 0LL) == kCFCompareEqualTo)
      {
        int v4 = 1;
        goto LABEL_18;
      }

      if (CFStringCompare(v2, @"Internal", 0LL) == kCFCompareEqualTo)
      {
        int v4 = 2;
        goto LABEL_18;
      }

      if (CFStringCompare(v2, @"Desense", 0LL) == kCFCompareEqualTo)
      {
        int v4 = 3;
        goto LABEL_18;
      }

      if (CFStringCompare(v2, @"Lite Internal", 0LL) == kCFCompareEqualTo)
      {
        int v4 = 4;
        goto LABEL_18;
      }

      if (CFStringCompare(v2, @"Vendor", 0LL) == kCFCompareEqualTo)
      {
        int v4 = 5;
        goto LABEL_18;
      }

      if (CFStringCompare(v2, @"NonUI", 0LL) == kCFCompareEqualTo)
      {
        int v4 = 6;
LABEL_18:
        dword_1019384EC = v4;
      }
    }

    CFRelease(v2);
  }

void sub_1004F5DC4(uint64_t a1@<X8>)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_101996260);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_101996260))
  {
    xmmword_101996248 = 0uLL;
    unk_101996258 = 0LL;
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_101996248, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101996260);
  }

  if (qword_101996268 != -1) {
    dispatch_once(&qword_101996268, &stru_10183D740);
  }
  if (byte_10199625F < 0)
  {
    sub_1010DD48C((_BYTE *)a1, (void *)xmmword_101996248, *((unint64_t *)&xmmword_101996248 + 1));
  }

  else
  {
    *(_OWORD *)a1 = xmmword_101996248;
    *(void *)(a1 + 16) = unk_101996258;
  }

void sub_1004F5E9C(id a1)
{
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  CFStringRef v2 = sub_1002A6F04((char *)p_p);
  if (v2)
  {
    CFTypeID v3 = CFGetTypeID(v2);
    if (v3 == CFStringGetTypeID())
    {
      int v4 = CFURLCreateWithFileSystemPath(kCFAllocatorDefault, v2, kCFURLPOSIXPathStyle, 0);
      if (v4)
      {
        uint64_t v5 = (const __CFString *)v4;
        uint64_t v6 = CFBundleCreate(kCFAllocatorDefault, v4);
        if (v6)
        {
          std::string::size_type v7 = v6;
          ValueForInfoDictionaryKey = (const __CFString *)CFBundleGetValueForInfoDictionaryKey(v6, kCFBundleVersionKey);
          if (ValueForInfoDictionaryKey)
          {
            std::string v9 = ValueForInfoDictionaryKey;
            CFTypeID v10 = CFGetTypeID(ValueForInfoDictionaryKey);
            if (v10 == CFStringGetTypeID())
            {
              sub_1002A6C50(v9, &__p);
              if (byte_101996248[23] < 0) {
                operator delete(*(void **)byte_101996248);
              }
              *(std::string *)byte_101996248 = __p;
            }
          }

          CFRelease(v2);
          CFStringRef v2 = v5;
        }

        else
        {
          std::string::size_type v7 = (__CFBundle *)v5;
        }

        CFRelease(v2);
        CFStringRef v2 = (CFStringRef)v7;
      }
    }

    CFRelease(v2);
  }

void sub_1004F5FE8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004F6004(uint64_t a1@<X8>)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_101996288);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_101996288))
  {
    xmmword_101996270 = 0uLL;
    unk_101996280 = 0LL;
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_101996270, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101996288);
  }

  if (qword_101996290 != -1) {
    dispatch_once(&qword_101996290, &stru_10183D760);
  }
  if (byte_101996287 < 0)
  {
    sub_1010DD48C((_BYTE *)a1, (void *)xmmword_101996270, *((unint64_t *)&xmmword_101996270 + 1));
  }

  else
  {
    *(_OWORD *)a1 = xmmword_101996270;
    *(void *)(a1 + 16) = unk_101996280;
  }

void sub_1004F60DC(id a1)
{
  __int128 v1 = IOServiceMatching("IOPlatformExpertDevice");
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
  if (MatchingService)
  {
    io_object_t v3 = MatchingService;
    CFProperty = (const __CFString *)IORegistryEntryCreateCFProperty( MatchingService,  @"IOPlatformSerialNumber",  kCFAllocatorDefault,  0);
    if (CFProperty)
    {
      uint64_t v5 = CFProperty;
      sub_1002A6C50(CFProperty, &v6);
      if (byte_101996270[23] < 0) {
        operator delete(*(void **)byte_101996270);
      }
      *(std::string *)byte_101996270 = v6;
      CFRelease(v5);
    }

    IOObjectRelease(v3);
  }

void sub_1004F6194(uint64_t a1@<X8>)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_1019962B0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1019962B0))
  {
    sub_1010DDBC0(&xmmword_101996298, "NotAvailable");
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_101996298, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1019962B0);
  }

  if (qword_1019962B8 != -1) {
    dispatch_once(&qword_1019962B8, &stru_10183D780);
  }
  if (byte_1019962AF < 0)
  {
    sub_1010DD48C((_BYTE *)a1, (void *)xmmword_101996298, *((unint64_t *)&xmmword_101996298 + 1));
  }

  else
  {
    *(_OWORD *)a1 = xmmword_101996298;
    *(void *)(a1 + 16) = unk_1019962A8;
  }

void sub_1004F6278(_Unwind_Exception *a1)
{
}

void sub_1004F6290(id a1)
{
  __int128 v1 = (const __CFString *)MGCopyAnswer(@"UniqueDeviceID", 0LL);
  if (v1)
  {
    unsigned __int8 v2 = v1;
    CFTypeID v3 = CFGetTypeID(v1);
    if (v3 == CFStringGetTypeID())
    {
      CFStringGetCString(v2, buffer, 1024LL, 0x8000100u);
      sub_1010DDBC0(&v4, buffer);
      if (byte_1019962AF < 0) {
        operator delete((void *)xmmword_101996298);
      }
      xmmword_101996298 = v4;
      unk_1019962A8 = v5;
    }

    CFRelease(v2);
  }

void sub_1004F6370(uint64_t a1@<X8>)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_1019962D8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_1019962D8))
  {
    sub_1010DDBC0(byte_1019962C0, "");
    __cxa_atexit((void (*)(void *))&std::string::~string, byte_1019962C0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1019962D8);
  }

  if (qword_1019962E0 != -1) {
    dispatch_once(&qword_1019962E0, &stru_10183D7A0);
  }
  if (byte_1019962C0[23] < 0)
  {
    sub_1010DD48C((_BYTE *)a1, *(void **)byte_1019962C0, *(unint64_t *)&byte_1019962C0[8]);
  }

  else
  {
    *(_OWORD *)a1 = *(_OWORD *)byte_1019962C0;
    *(void *)(a1 + 16) = *(void *)&byte_1019962C0[16];
  }

void sub_1004F6454(_Unwind_Exception *a1)
{
}

void sub_1004F646C(id a1)
{
  __int128 v1 = (const __CFString *)MGCopyAnswer(@"ProductType", 0LL);
  if (v1)
  {
    unsigned __int8 v2 = v1;
    CFTypeID v3 = CFGetTypeID(v1);
    if (v3 == CFStringGetTypeID())
    {
      sub_1002A6C50(v2, &v4);
      if (byte_1019962C0[23] < 0) {
        operator delete(*(void **)byte_1019962C0);
      }
      *(std::string *)byte_1019962C0 = v4;
    }

    CFRelease(v2);
  }

uint64_t sub_1004F64FC()
{
  if (qword_1019962F0 != -1) {
    dispatch_once(&qword_1019962F0, &stru_10183D7C0);
  }
  return dword_1019962E8;
}

void sub_1004F653C(id a1)
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  int v1 = 7381266;
  switch(dword_1019961B8)
  {
    case 1:
    case 191:
    case 192:
    case 193:
    case 194:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 256:
    case 257:
    case 258:
    case 259:
      int v1 = 33562886;
      break;
    case 2:
    case 5:
    case 19:
    case 20:
    case 52:
    case 53:
    case 60:
    case 61:
    case 158:
    case 159:
    case 160:
    case 162:
    case 163:
    case 164:
    case 165:
    case 185:
    case 195:
    case 196:
      int v1 = 532482;
      break;
    case 3:
    case 43:
    case 148:
      break;
    case 4:
      int v1 = 8454;
      break;
    case 6:
    case 166:
    case 167:
      goto LABEL_37;
    case 7:
    case 10:
    case 13:
    case 14:
    case 29:
    case 31:
    case 33:
    case 35:
    case 44:
    case 46:
    case 48:
    case 62:
    case 64:
    case 76:
    case 134:
    case 136:
    case 144:
    case 146:
    case 154:
    case 156:
    case 186:
    case 188:
    case 197:
    case 199:
    case 201:
    case 203:
    case 205:
    case 207:
    case 209:
    case 211:
    case 212:
    case 213:
    case 215:
    case 217:
    case 226:
    case 227:
    case 229:
    case 231:
    case 233:
    case 235:
    case 237:
    case 239:
    case 242:
      int v1 = 7905558;
      break;
    case 8:
    case 11:
    case 12:
    case 15:
    case 16:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 54:
    case 55:
    case 56:
      int v1 = 8236319;
      break;
    case 9:
    case 17:
    case 18:
      int v1 = 16624927;
      break;
    case 21:
      int v1 = 4202498;
      break;
    case 30:
    case 32:
    case 34:
    case 36:
    case 45:
    case 47:
    case 49:
    case 63:
    case 65:
    case 77:
    case 135:
    case 137:
    case 145:
    case 155:
    case 157:
    case 187:
    case 189:
    case 190:
    case 202:
    case 204:
    case 206:
    case 208:
    case 210:
    case 214:
    case 216:
    case 218:
    case 240:
    case 241:
    case 243:
      int v1 = 16624923;
      break;
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
      int v1 = 37789954;
      break;
    case 50:
    case 51:
    case 74:
    case 75:
    case 81:
    case 82:
    case 83:
    case 84:
    case 89:
    case 90:
    case 95:
    case 96:
      int v1 = 37789962;
      break;
    case 57:
    case 58:
    case 59:
      int v1 = 8234271;
      break;
    case 66:
    case 67:
    case 85:
    case 86:
    case 87:
    case 88:
    case 91:
    case 92:
    case 93:
    case 94:
    case 97:
    case 98:
      int v1 = 38120715;
      break;
    case 68:
    case 69:
    case 70:
    case 78:
    case 79:
    case 80:
    case 139:
    case 141:
    case 142:
    case 143:
      int v1 = 41788703;
      break;
    case 71:
    case 72:
    case 73:
      int v1 = 41790751;
      break;
    case 99:
    case 100:
    case 103:
    case 104:
    case 107:
    case 108:
    case 111:
    case 112:
    case 116:
    case 117:
    case 120:
    case 121:
    case 126:
    case 127:
    case 130:
    case 131:
      int v1 = 38314250;
      break;
    case 101:
    case 102:
    case 105:
    case 106:
    case 109:
    case 110:
    case 113:
    case 114:
    case 115:
    case 118:
    case 119:
    case 122:
    case 123:
    case 124:
    case 125:
    case 128:
    case 129:
    case 132:
    case 133:
    case 260:
      int v1 = 38645003;
      break;
    case 149:
      int v1 = 4235530;
      break;
    case 150:
    case 151:
    case 152:
    case 153:
      int v1 = 41226;
      break;
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
      int v1 = 108899615;
      break;
    case 198:
    case 200:
    case 228:
    case 230:
    case 232:
    case 234:
    case 236:
    case 238:
      int v1 = 83733787;
      break;
    default:
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      unsigned __int8 v2 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
      {
        if (qword_1019961C0 != -1) {
          dispatch_once(&qword_1019961C0, &stru_10183D6E0);
        }
        *(_DWORD *)std::string buf = 67174657;
        int v8 = dword_1019961B8;
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "unknown hardware type %{private}d", buf, 8u);
      }

      BOOL v3 = sub_1002921D0(115, 0);
      int v1 = 0;
      if (v3)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_10183DA30);
        }
        uint64_t v4 = qword_101934A48;
        if (qword_1019961C0 != -1) {
          dispatch_once(&qword_1019961C0, &stru_10183D6E0);
        }
        v6[0] = 67174657;
        v6[1] = dword_1019961B8;
        uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v4,  17LL,  "unknown hardware type %{private}d",  v6,  8);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLPlatformInfo::Provider CLPlatformInfo::getProviders()_block_invoke",  "%s\n",  v5);
LABEL_37:
        int v1 = 0;
      }

      break;
  }

  dword_1019962E8 = v1;
}

uint64_t sub_1004F6CA8()
{
  if ((sub_1004F70D0() & 1) != 0 || (sub_1004F71A0() & 1) != 0 || sub_1004F6D00()) {
    return 1LL;
  }
  else {
    return sub_1004F6D2C();
  }
}

uint64_t sub_1004F6CDC()
{
  if ((sub_1004F70D0() & 1) != 0) {
    return 1LL;
  }
  else {
    return sub_1004F71A0();
  }
}

BOOL sub_1004F6D00()
{
  return sub_1004F6E30() || sub_1004F6EC8() || sub_1004F6F3C();
}

uint64_t sub_1004F6D2C()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  if (((dword_1019961B8 - 184) > 0x36
     || ((1LL << (dword_1019961B8 + 72)) & 0x50000000000001LL) == 0)
    && (dword_1019961B8 - 174) >= 2)
  {
    return 0LL;
  }

  return result;
}

uint64_t sub_1004F6DCC()
{
  if ((sub_1004F70D0() & 1) != 0
    || (sub_1004F71A0() & 1) != 0
    || sub_1004F6D00()
    || sub_1004F7228() && !sub_1004F6F3C())
  {
    return 1LL;
  }

  else
  {
    return sub_1004F6D2C();
  }

uint64_t sub_1004F6E10()
{
  uint64_t result = sub_1004F7228();
  if ((_DWORD)result) {
    return !sub_1004F6F3C();
  }
  return result;
}

BOOL sub_1004F6E30()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  BOOL result = 1LL;
  return result;
}

BOOL sub_1004F6EC8()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return (dword_1019961B8 - 103) < 4;
}

BOOL sub_1004F6F3C()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  BOOL result = 1LL;
  return result;
}

BOOL sub_1004F6FD0()
{
  BOOL result = sub_1004F6D00();
  if (result) {
    return !sub_1004F6E30() && !sub_1004F6EC8();
  }
  return result;
}

uint64_t sub_1004F7000()
{
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  return byte_101996318;
}

BOOL sub_1004F7040()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  BOOL result = 1LL;
  return result;
}

uint64_t sub_1004F70D0()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  if (dword_1019961B8 > 134)
  {
    if (((dword_1019961B8 - 135) > 0xA || ((1 << (dword_1019961B8 + 121)) & 0x405) == 0)
      && dword_1019961B8 != 202
      && dword_1019961B8 != 204)
    {
      return 0LL;
    }
  }

  else if ((dword_1019961B8 - 34) > 0x2E {
         || ((1LL << (dword_1019961B8 - 34)) & 0x700000008001LL) == 0)
  }
  {
    return 0LL;
  }

  return result;
}

uint64_t sub_1004F71A0()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 139) < 0x34) & (0x900000005001DuLL >> (dword_1019961B8
                                                                                              + 117));
}

uint64_t sub_1004F7228()
{
  if ((sub_1004F726C() & 1) != 0
    || (sub_1004F72F4() & 1) != 0
    || (sub_1004F737C() & 1) != 0
    || sub_1004F7404()
    || (sub_1004F7474() & 1) != 0)
  {
    return 1LL;
  }

  else
  {
    return sub_1004F260C();
  }

uint64_t sub_1004F726C()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 168) < 0x21) & (0x14000000FuLL >> (dword_1019961B8
                                                                                          + 88));
}

uint64_t sub_1004F72F4()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 172) < 0x27) & (0x4400020033uLL >> (dword_1019961B8
                                                                                           + 84));
}

uint64_t sub_1004F737C()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 178) < 0x35) & (0x140C0000000003uLL >> (dword_1019961B8
                                                                                               + 78));
}

BOOL sub_1004F7404()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return dword_1019961B8 == 219;
}

uint64_t sub_1004F7474()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 180) < 0x40) & (0xB0500C5410000003LL >> (dword_1019961B8
                                                                                                + 76));
}

BOOL sub_1004F7500()
{
  if ((MGGetBoolAnswer(@"watch-companion") & 1) != 0) {
    return 1LL;
  }
  if (qword_101996440 != -1) {
    dispatch_once(&qword_101996440, &stru_10183DA50);
  }
  return byte_101996448 != 0;
}

uint64_t sub_1004F7560()
{
  uint64_t result = sub_1004F7228();
  if ((_DWORD)result)
  {
    if (sub_1004F6F3C()) {
      return 0LL;
    }
    else {
      return sub_1004F726C() ^ 1;
    }
  }

  return result;
}

uint64_t sub_1004F7590()
{
  uint64_t result = sub_1004F7560();
  if ((_DWORD)result) {
    return (sub_1004F72F4() & 1) == 0 && !sub_1004F7404();
  }
  return result;
}

uint64_t sub_1004F75C0()
{
  uint64_t result = sub_1004F7228();
  if ((_DWORD)result) {
    return (sub_1004F726C() & 1) == 0 && (sub_1004F72F4() & 1) == 0 && !sub_1004F7404();
  }
  return result;
}

uint64_t sub_1004F75F8()
{
  if (qword_101996300 != -1) {
    dispatch_once(&qword_101996300, &stru_10183D7E0);
  }
  return byte_1019962F8;
}

void sub_1004F7638(id a1)
{
  int v1 = (const void *)MGCopyAnswer(@"DeviceClass", 0LL);
  if (v1)
  {
    unsigned __int8 v2 = v1;
    if (CFEqual(v1, @"iPad")) {
      byte_1019962F8 = 1;
    }
    CFRelease(v2);
  }

BOOL sub_1004F7694()
{
  return getenv("__OSINSTALL_ENVIRONMENT") != 0LL;
}

uint64_t sub_1004F76B8()
{
  if (qword_101996310 != -1) {
    dispatch_once(&qword_101996310, &stru_10183D800);
  }
  return byte_101996308;
}

void sub_1004F76F8(id a1)
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  BOOL v1 = 1;
  byte_101996308 = v1;
}

void sub_1004F7760(id a1)
{
  BOOL v1 = (const void *)MGCopyAnswer(@"DeviceClass", 0LL);
  if (v1)
  {
    unsigned __int8 v2 = v1;
    if (CFEqual(v1, @"iPhone")) {
      byte_101996318 = 1;
    }
    CFRelease(v2);
  }

uint64_t sub_1004F77BC()
{
  if (qword_101996330 != -1) {
    dispatch_once(&qword_101996330, &stru_10183D840);
  }
  return byte_101996328;
}

void sub_1004F77FC(id a1)
{
  BOOL v1 = (const void *)MGCopyAnswer(@"DeviceClass", 0LL);
  if (v1)
  {
    unsigned __int8 v2 = v1;
    if (CFEqual(v1, @"iPod")) {
      byte_101996328 = 1;
    }
    CFRelease(v2);
  }

uint64_t sub_1004F7858()
{
  if (qword_101996340 != -1) {
    dispatch_once(&qword_101996340, &stru_10183D860);
  }
  return byte_101996338;
}

void sub_1004F7898(id a1)
{
  BOOL v1 = (const void *)MGCopyAnswer(@"DeviceClass", 0LL);
  if (v1)
  {
    unsigned __int8 v2 = v1;
    if (CFEqual(v1, @"AppleTV")) {
      byte_101996338 = 1;
    }
    CFRelease(v2);
  }

BOOL sub_1004F78F4()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return (dword_1019961B8 & 0xFFFFFFFE) == 166;
}

uint64_t sub_1004F7968()
{
  if (qword_101996350 != -1) {
    dispatch_once(&qword_101996350, &stru_10183D880);
  }
  return byte_101996348;
}

void sub_1004F79A8(id a1)
{
  BOOL v1 = (const void *)MGCopyAnswer(@"DeviceClass", 0LL);
  if (v1)
  {
    unsigned __int8 v2 = v1;
    if (CFEqual(v1, @"AudioAccessory")) {
      byte_101996348 = 1;
    }
    CFRelease(v2);
  }

BOOL sub_1004F7A04()
{
  if (qword_101996350 != -1) {
    dispatch_once(&qword_101996350, &stru_10183D880);
  }
  return (byte_101996348 & 1) == 0;
}

BOOL sub_1004F7A4C()
{
  if (qword_101996340 != -1) {
    dispatch_once(&qword_101996340, &stru_10183D860);
  }
  if ((byte_101996338 & 1) != 0) {
    return 1LL;
  }
  if (qword_101996350 != -1) {
    dispatch_once(&qword_101996350, &stru_10183D880);
  }
  return (byte_101996348 & 1) != 0 || sub_1004F78F4();
}

BOOL sub_1004F7AD0(uint64_t a1, std::string *a2)
{
  unsigned __int8 size = __str.__r_.__value_.__s.__size_;
  if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    std::string::size_type v4 = __str.__r_.__value_.__s.__size_;
  }
  else {
    std::string::size_type v4 = __str.__r_.__value_.__l.__size_;
  }
  if (v4)
  {
    std::string::operator=(a2, &__str);
    unsigned __int8 size = __str.__r_.__value_.__s.__size_;
  }

  if ((size & 0x80) != 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v4 != 0;
}

void sub_1004F7B38( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1004F7B54()
{
  unsigned __int8 v0 = (const __CFBoolean *)MGCopyAnswer(@"RegionalBehaviorNoPasscodeLocationTiles", 0LL);
  if (!v0) {
    return 0LL;
  }
  BOOL v1 = v0;
  CFTypeID v2 = CFGetTypeID(v0);
  if (v2 == CFBooleanGetTypeID())
  {
    int Value = CFBooleanGetValue(v1);
    BOOL v4 = Value != 0;
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_10183DA30);
    }
    uint64_t v5 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 67109120;
      BOOL v11 = Value != 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "isDisableTilesWhileLocked = %d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      v9[0] = 67109120;
      v9[1] = Value != 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "isDisableTilesWhileLocked = %d",  v9);
      std::string::size_type v7 = (uint8_t *)v6;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLPlatformInfo::isDisableTilesWhileLocked()", "%s\n", v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  else
  {
    BOOL v4 = 0LL;
  }

  CFRelease(v1);
  return v4;
}

uint64_t sub_1004F7D68(uint64_t a1)
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  int v1 = dword_1019961B8;
  if (qword_101996300 != -1) {
    dispatch_once(&qword_101996300, &stru_10183D7E0);
  }
  if (byte_1019962F8 != 1
    || ((uint64_t v2 = 1LL, (v1 - 8) > 0x39) || ((1LL << (v1 - 8)) & 0x28000A01140079BLL) == 0)
    && v1 != 77)
  {
    uint64_t v2 = 0LL;
  }

  if (qword_101934A40 != -1) {
    dispatch_once(&qword_101934A40, &stru_10183DA30);
  }
  BOOL v3 = (os_log_s *)qword_101934A48;
  if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEBUG))
  {
    BOOL v4 = __p;
    if (v11 < 0) {
      BOOL v4 = (void **)__p[0];
    }
    *(_DWORD *)std::string buf = 67109634;
    int v18 = v1;
    __int16 v19 = 2080;
    __int128 v20 = v4;
    __int16 v21 = 1024;
    int v22 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "CAMP: device id [%d] [%s], camping support [%d]",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_10183DA30);
    }
    std::string v6 = __p;
    if (v11 < 0) {
      std::string v6 = (void **)__p[0];
    }
    v12[0] = 67109634;
    v12[1] = v1;
    __int16 v13 = 2080;
    __int128 v14 = v6;
    __int16 v15 = 1024;
    int v16 = v2;
    LODWORD(v_Block_object_dispose((const void *)(v1 - 232), 8) = 24;
    std::string::size_type v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  2LL,  "CAMP: device id [%d] [%s], camping support [%d]",  v12,  v8,  v9);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLPlatformInfo::supportsCampOnly()", "%s\n", v7);
  }

  if (v11 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_1004F8024( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004F804C()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  switch(dword_1019961B8)
  {
    case 8:
    case 9:
    case 11:
    case 12:
    case 15:
    case 16:
    case 17:
    case 18:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 30:
    case 32:
    case 36:
    case 45:
    case 47:
    case 54:
    case 55:
    case 56:
    case 63:
    case 65:
    case 71:
    case 72:
    case 73:
    case 77:
    case 78:
    case 79:
    case 80:
      return result;
    case 10:
    case 13:
    case 14:
    case 19:
    case 20:
    case 21:
    case 29:
    case 31:
    case 33:
    case 34:
    case 35:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 64:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 74:
    case 75:
    case 76:
      goto LABEL_8;
    default:
      if (((dword_1019961B8 - 139) > 0x2D
         || ((1LL << (dword_1019961B8 + 117)) & 0x3FFFE000001DLL) == 0)
        && (dword_1019961B8 - 219) >= 7)
      {
LABEL_8:
        uint64_t result = 0LL;
      }

      break;
  }

  return result;
}

uint64_t sub_1004F8210()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  switch(dword_1019961B8)
  {
    case 8:
    case 9:
    case 11:
    case 12:
    case 15:
    case 16:
    case 17:
    case 18:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 30:
    case 32:
    case 36:
    case 44:
    case 45:
    case 47:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 63:
    case 65:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 77:
    case 78:
    case 79:
    case 80:
      return result;
    case 10:
    case 13:
    case 14:
    case 19:
    case 20:
    case 21:
    case 29:
    case 31:
    case 33:
    case 34:
    case 35:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 60:
    case 61:
    case 62:
    case 64:
    case 66:
    case 67:
    case 74:
    case 75:
    case 76:
      goto LABEL_8;
    default:
      if (((dword_1019961B8 - 139) > 0x2D
         || ((1LL << (dword_1019961B8 + 117)) & 0x3FFFE000001DLL) == 0)
        && (dword_1019961B8 - 219) >= 7)
      {
LABEL_8:
        uint64_t result = 0LL;
      }

      break;
  }

  return result;
}

uint64_t sub_1004F83D4()
{
  if (qword_101996360 != -1) {
    dispatch_once(&qword_101996360, &stru_10183D8A0);
  }
  if (byte_101996358) {
    uint64_t result = 1LL;
  }
  else {
    uint64_t result = sub_1004F6CA8();
  }
  byte_101996358 = result;
  return result;
}

void sub_1004F8430(id a1)
{
  int v1 = (const void *)MGCopyAnswer(@"HXTqT3UXOKuTEklxz+wMAA", 0LL);
  if (v1)
  {
    byte_101996358 = 1;
    CFRelease(v1);
  }

uint64_t sub_1004F8468()
{
  if (sub_1004F84C0())
  {
    if (qword_101996300 != -1) {
      dispatch_once(&qword_101996300, &stru_10183D7E0);
    }
    char v0 = byte_1019962F8 ^ 1;
  }

  else
  {
    char v0 = 0;
  }

  return v0 & 1;
}

uint64_t sub_1004F84C0()
{
  uint64_t result = sub_1004F6DCC();
  if ((_DWORD)result)
  {
    if ((sub_1004F70D0() & 1) != 0 || (sub_1004F71A0() & 1) != 0 || sub_1004F6FD0())
    {
      if (qword_101996320 != -1) {
        dispatch_once(&qword_101996320, &stru_10183D820);
      }
      if ((byte_101996318 & 1) != 0) {
        return 1LL;
      }
    }

    else {
      return sub_1004F6D2C();
    }
  }

  return result;
}

uint64_t sub_1004F8540()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  switch(dword_1019961B8)
  {
    case 8:
    case 9:
    case 11:
    case 12:
    case 15:
    case 16:
    case 17:
    case 18:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 30:
    case 32:
    case 34:
    case 36:
    case 45:
    case 47:
    case 49:
    case 50:
    case 51:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 63:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 139:
    case 141:
    case 142:
    case 143:
    case 145:
    case 154:
    case 155:
    case 156:
    case 157:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 197:
    case 198:
    case 199:
    case 200:
    case 202:
    case 204:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 214:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 240:
    case 241:
    case 243:
    case 260:
      return result;
    default:
      uint64_t result = 0LL;
      break;
  }

  return result;
}

uint64_t sub_1004F89A4()
{
  if (qword_101996370 != -1) {
    dispatch_once(&qword_101996370, &stru_10183D8C0);
  }
  return byte_101996368;
}

void sub_1004F89E4(id a1)
{
  int v1 = (const void *)MGCopyAnswer(@"ReleaseType", 0LL);
  if (v1)
  {
    uint64_t v2 = v1;
    byte_101996368 = CFEqual(v1, @"NonUI") != 0;
    CFRelease(v2);
  }

uint64_t sub_1004F8A40()
{
  if (qword_101996380 != -1) {
    dispatch_once(&qword_101996380, &stru_10183D8E0);
  }
  return byte_101996378;
}

void sub_1004F8A80(id a1)
{
  int v1 = (const __CFBoolean *)MGCopyAnswer(@"InternalBuild", 0LL);
  if (v1)
  {
    uint64_t v2 = v1;
    CFTypeID v3 = CFGetTypeID(v1);
    if (v3 == CFBooleanGetTypeID() && CFBooleanGetValue(v2) == 1) {
      byte_101996378 = 1;
    }
    CFRelease(v2);
  }

uint64_t sub_1004F8AF0()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  __int16 v0 = -7;
  switch(dword_1019961B8)
  {
    case 7:
    case 8:
    case 9:
    case 13:
    case 14:
    case 15:
    case 16:
    case 23:
    case 31:
      __int16 v0 = -6;
      break;
    case 17:
    case 18:
    case 32:
      return v0;
    case 22:
      __int16 v0 = -4;
      break;
    case 24:
    case 25:
    case 29:
    case 30:
      __int16 v0 = -5;
      break;
    case 27:
    case 28:
    case 43:
    case 62:
    case 63:
      __int16 v0 = -3;
      break;
    case 64:
    case 65:
      __int16 v0 = -2;
      break;
    default:
      __int16 v0 = 0;
      break;
  }

  return v0;
}

BOOL sub_1004F8C84()
{
  __int16 v0 = (void *)MGCopyAnswer(@"WLANBkgScanCache", 0LL);
  if (v0)
  {
    int v1 = v0;
    CFTypeID v2 = CFGetTypeID(v0);
    if (v2 == CFNumberGetTypeID())
    {
      unsigned int v3 = [v1 intValue];
      CFRelease(v1);
      if (v3) {
        return 1LL;
      }
    }

    else
    {
      CFRelease(v1);
    }
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10183DA70);
  }
  uint64_t v5 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "@WsbReg, MG-NotSupported", buf, 2u);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183DA70);
    }
    v7[0] = 0;
    std::string v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbReg, MG-NotSupported",  v7,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLPlatformInfo::supportsWifiScanBuffer()", "%s\n", v6);
    return 0LL;
  }

  return result;
}

uint64_t sub_1004F8E60(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1004F8ED4;
  block[3] = &unk_10181D3D0;
  block[4] = a1;
  if (qword_101996390 != -1) {
    dispatch_once(&qword_101996390, block);
  }
  return byte_101996388;
}

void sub_1004F8ED4()
{
  if (qword_1019962F0 != -1) {
    dispatch_once(&qword_1019962F0, &stru_10183D7C0);
  }
  if ((dword_1019962E8 & 0x8000) != 0)
  {
    if (qword_1019961C0 != -1) {
      dispatch_once(&qword_1019961C0, &stru_10183D6E0);
    }
    char v0 = 1;
    switch(dword_1019961B8)
    {
      case 134:
      case 135:
      case 136:
      case 137:
      case 139:
      case 141:
      case 142:
      case 143:
      case 146:
      case 154:
      case 155:
      case 156:
      case 157:
      case 168:
      case 169:
      case 170:
      case 171:
      case 172:
      case 173:
      case 176:
      case 177:
      case 178:
      case 179:
      case 186:
      case 187:
      case 188:
      case 189:
      case 197:
      case 198:
      case 199:
      case 200:
      case 206:
      case 208:
      case 209:
      case 210:
      case 219:
      case 220:
      case 221:
      case 226:
      case 227:
      case 228:
      case 229:
      case 230:
      case 231:
      case 232:
      case 233:
      case 234:
      case 235:
      case 236:
      case 237:
      case 238:
        break;
      case 138:
      case 140:
      case 144:
      case 145:
      case 147:
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
      case 158:
      case 159:
      case 160:
      case 161:
      case 162:
      case 163:
      case 164:
      case 165:
      case 166:
      case 167:
      case 174:
      case 175:
      case 180:
      case 181:
      case 182:
      case 183:
      case 184:
      case 185:
      case 190:
      case 191:
      case 192:
      case 193:
      case 194:
      case 195:
      case 196:
      case 201:
      case 202:
      case 203:
      case 204:
      case 205:
      case 207:
      case 211:
      case 212:
      case 213:
      case 214:
      case 215:
      case 216:
      case 217:
      case 218:
      case 222:
      case 223:
      case 224:
      case 225:
        goto LABEL_11;
      default:
        if ((dword_1019961B8 - 33) > 0x2E
          || ((1LL << (dword_1019961B8 - 33)) & 0x600000018003LL) == 0)
        {
LABEL_11:
          char v0 = 0;
        }

        break;
    }

    byte_101996388 = v0;
  }

uint64_t sub_1004F914C(uint64_t a1)
{
  if (qword_101996310 != -1) {
    dispatch_once(&qword_101996310, &stru_10183D800);
  }
  if ((byte_101996308 & 1) != 0) {
    return 0LL;
  }
  return 180LL;
}

uint64_t sub_1004F91BC(uint64_t a1)
{
  if (qword_101996310 != -1) {
    dispatch_once(&qword_101996310, &stru_10183D800);
  }
  if ((byte_101996308 & 1) != 0) {
    return 0LL;
  }
  return 140LL;
}

uint64_t sub_1004F922C()
{
  if (qword_1019963A0 != -1) {
    dispatch_once(&qword_1019963A0, &stru_10183D900);
  }
  return byte_101996398;
}

void sub_1004F926C(id a1)
{
  int v1 = (const __CFBoolean *)MGCopyAnswer(@"PhosphorusCapability", 0LL);
  CFTypeID v2 = v1;
  if (v1)
  {
    CFTypeID v3 = CFGetTypeID(v1);
    if (v3 == CFBooleanGetTypeID())
    {
      byte_101996398 = CFBooleanGetValue(v2) != 0;
LABEL_10:
      CFRelease(v2);
      goto LABEL_11;
    }
  }

  if (qword_101934A40 != -1) {
    dispatch_once(&qword_101934A40, &stru_10183DA30);
  }
  BOOL v4 = (os_log_s *)qword_101934A48;
  if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "unexpected MGCopyAnswer answer", buf, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_10183DA30);
    }
    LOWORD(v14[0]) = 0;
    LODWORD(v13) = 2;
    char v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "unexpected MGCopyAnswer answer",  v14,  v13);
    sub_10029211C("Generic", 1LL, 0, 0LL, "static BOOL CLPlatformInfo::supportsBarometer()_block_invoke", "%s\n", v11);
  }

  if (v2) {
    goto LABEL_10;
  }
LABEL_11:
  HIBYTE(v13) = 0;
  sub_1002F0B04(buf);
  int v5 = sub_1002A6F64(*(uint64_t *)buf, "ForceSupportBarometer", (BOOL *)&v13 + 7);
  int v6 = v5;
  std::string::size_type v7 = v16;
  if (!v16) {
    goto LABEL_15;
  }
  p_shared_owners = (unint64_t *)&v16->__shared_owners_;
  do
    unint64_t v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (!v6) {
      return;
    }
  }

  else
  {
LABEL_15:
    if (!v5) {
      return;
    }
  }

  if (qword_101934A40 != -1) {
    dispatch_once(&qword_101934A40, &stru_10183DA30);
  }
  CFTypeID v10 = (os_log_s *)qword_101934A48;
  if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = HIBYTE(v13);
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#Warning ForceSupportBarometer,%d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_10183DA30);
    }
    v14[0] = 67109120;
    v14[1] = HIBYTE(v13);
    std::string v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  0LL,  "#Warning ForceSupportBarometer,%d",  v14);
    sub_10029211C("Generic", 1LL, 0, 2LL, "static BOOL CLPlatformInfo::supportsBarometer()_block_invoke", "%s\n", v12);
  }

  byte_101996398 = HIBYTE(v13);
}

void sub_1004F9610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

BOOL sub_1004F962C()
{
  if ((sub_1004F96C4() & 1) != 0) {
    return 1LL;
  }
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  BOOL result = 1LL;
  return result;
}

uint64_t sub_1004F96C4()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  if (((dword_1019961B8 - 139) > 0x2D
     || ((1LL << (dword_1019961B8 + 117)) & 0x3FFFE000001DLL) == 0)
    && (dword_1019961B8 - 219) >= 7
    && (dword_1019961B8 - 78) >= 3)
  {
    return 0LL;
  }

  return result;
}

uint64_t sub_1004F9774()
{
  if (qword_101996300 != -1) {
    dispatch_once(&qword_101996300, &stru_10183D7E0);
  }
  if ((byte_1019962F8 & 1) != 0) {
    return 1LL;
  }
  if (qword_101996420 != -1) {
    dispatch_once(&qword_101996420, &stru_10183D9E0);
  }
  return BYTE2(qword_101996428) >> 7;
}

uint64_t sub_1004F97F4()
{
  if (qword_101996420 != -1) {
    dispatch_once(&qword_101996420, &stru_10183D9E0);
  }
  return qword_101996428;
}

uint64_t sub_1004F9834()
{
  BOOL v9 = 0;
  sub_1002F0B04(buf);
  int v0 = sub_1002A6F64(*(uint64_t *)buf, "EEDRequestForceHWSupport", &v9);
  if (v9) {
    int v1 = v0;
  }
  else {
    int v1 = 0;
  }
  CFTypeID v2 = v12;
  if (!v12) {
    goto LABEL_8;
  }
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  do
    unint64_t v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (v1) {
      goto LABEL_9;
    }
  }

  else
  {
LABEL_8:
    if (v1)
    {
LABEL_9:
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      int v5 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning #EED,ignoring hw,forceHWSupport,%d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_10183DA30);
        }
        v10[0] = 67109120;
        v10[1] = v9;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  0LL,  "#Warning #EED,ignoring hw,forceHWSupport,%d",  v10);
        int v8 = (uint8_t *)v7;
        sub_10029211C("Generic", 1LL, 0, 2LL, "static BOOL CLPlatformInfo::supportsEmergencySosLiveVideo()", "%s\n", v7);
        if (v8 != buf) {
          free(v8);
        }
      }

      return v9;
    }
  }

  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  if (byte_101996318 != 1) {
    return 0LL;
  }
  if ((sub_1004F75C0() & 1) != 0) {
    return 1LL;
  }
  return sub_1004F6D2C();
}

void sub_1004F9AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_1004F9ACC()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  unsigned int v0 = 0;
  switch(dword_1019961B8)
  {
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 189:
    case 198:
    case 200:
    case 206:
    case 208:
    case 214:
    case 216:
    case 218:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 228:
    case 230:
    case 232:
    case 234:
    case 236:
    case 238:
    case 240:
    case 241:
    case 243:
      goto LABEL_6;
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 199:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 207:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 215:
    case 217:
    case 219:
    case 226:
    case 227:
    case 229:
    case 231:
    case 233:
    case 235:
    case 237:
    case 239:
    case 242:
      break;
    default:
      if ((dword_1019961B8 - 115) <= 0xA && ((1 << (dword_1019961B8 - 115)) & 0x601) != 0) {
LABEL_6:
      }
        unsigned int v0 = 1;
      break;
  }

  sub_1002F0B04(&v7);
  int v1 = sub_1002A6F64(v7, "GnssSupportsL5", &v9);
  BOOL v2 = v9;
  CFTypeID v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

  if (v1) {
    return v2;
  }
  else {
    return v0;
  }
}

void sub_1004F9C0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

double sub_1004F9D50()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019963B0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_1019963B0))
  {
    qword_1019963A8 = 0x4018000000000000LL;
    __cxa_guard_release(&qword_1019963B0);
  }

  if (qword_1019963B8 != -1) {
    dispatch_once(&qword_1019963B8, &stru_10183D920);
  }
  return *(double *)&qword_1019963A8;
}

void sub_1004F9DD0(id a1)
{
  uint64_t v1 = qword_1019963A8;
  int v2 = sub_1002A82BC(v7, "GnssMinimumDebounceInterval", &v9);
  uint64_t v3 = v9;
  if (!v2) {
    uint64_t v3 = v1;
  }
  qword_1019963A8 = v3;
  unint64_t v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

void sub_1004F9E68(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004F9E7C()
{
  if (qword_1019963C8 != -1) {
    dispatch_once(&qword_1019963C8, &stru_10183D940);
  }
  if (byte_1019963C0)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_10183DA90);
    }
    unsigned __int8 v0 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      v2[0] = 68289026;
      v2[1] = 0;
      __int16 v3 = 2082;
      unint64_t v4 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#ALERT Device is currently running Apple Store demo mode}",  (uint8_t *)v2,  0x12u);
    }
  }

  return byte_1019963C0;
}

void sub_1004F9F88(id a1)
{
  uint64_t v1 = (const __CFBoolean *)CFPreferencesCopyValue( @"StoreDemoMode",  @"com.apple.demo-settings",  @"mobile",  kCFPreferencesAnyHost);
  if (v1)
  {
    int v2 = v1;
    byte_1019963C0 = CFBooleanGetValue(v1) != 0;
    CFRelease(v2);
  }

uint64_t sub_1004F9FF4()
{
  if (qword_1019963D8 != -1) {
    dispatch_once(&qword_1019963D8, &stru_10183D960);
  }
  return byte_1019963D0;
}

void sub_1004FA034(id a1)
{
  BOOL v24 = 0;
  sub_1002F0B04(buf);
  int v1 = sub_1002A6F64((uint64_t)buf[0].__r_.__value_.__l.__data_, "ForceMultiUser", &v24);
  if (v24) {
    int v2 = v1;
  }
  else {
    int v2 = 0;
  }
  unsigned __int8 size = (std::__shared_weak_count *)buf[0].__r_.__value_.__l.__size_;
  if (!buf[0].__r_.__value_.__l.__size_) {
    goto LABEL_8;
  }
  unint64_t v4 = (unint64_t *)(buf[0].__r_.__value_.__l.__size_ + 8);
  do
    unint64_t v5 = __ldaxr(v4);
  while (__stlxr(v5 - 1, v4));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (v2) {
      goto LABEL_9;
    }
  }

  else
  {
LABEL_8:
    if (v2)
    {
LABEL_9:
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      unint64_t v6 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning force multi user",  (uint8_t *)buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_10183DA30);
        }
        LOWORD(v25.__r_.__value_.__l.__data_) = 0;
        __int16 v15 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  0LL,  "#Warning force multi user",  &v25,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLPlatformInfo::supportsMultiUser()_block_invoke",  "%s\n",  (const char *)v15);
        if (v15 != buf) {
          free(v15);
        }
      }

      byte_1019963D0 = 1;
      return;
    }
  }

  CFErrorRef err = 0LL;
  uint64_t v7 = (void *)MKBUserTypeDeviceMode(0LL, &err);
  if (err)
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_10183DA30);
    }
    int v8 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
    {
      Domain = CFErrorGetDomain(err);
      sub_1002A6C50(Domain, buf);
      int v10 = (char)buf[0].__r_.__value_.__s.__size_;
      std::string::size_type v11 = buf[0].__r_.__value_.__r.__words[0];
      CFIndex Code = CFErrorGetCode(err);
      uint64_t v13 = buf;
      if (v10 < 0) {
        uint64_t v13 = (std::string *)v11;
      }
      LODWORD(v25.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)v25.__r_.__value_.__r.__words + 4) = (std::string::size_type)v13;
      WORD2(v25.__r_.__value_.__r.__words[1]) = 2048;
      *(std::string::size_type *)((char *)&v25.__r_.__value_.__r.__words[1] + 6) = Code;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_FAULT,  "MKBUserTypeDeviceMode returned error, domain, %s, code, %ld",  (uint8_t *)&v25,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      uint64_t v16 = qword_101934A48;
      uint64_t v17 = CFErrorGetDomain(err);
      sub_1002A6C50(v17, &v25);
      int v18 = (char)v25.__r_.__value_.__s.__size_;
      std::string::size_type v19 = v25.__r_.__value_.__r.__words[0];
      CFIndex v20 = CFErrorGetCode(err);
      __int16 v21 = &v25;
      if (v18 < 0) {
        __int16 v21 = (std::string *)v19;
      }
      int v26 = 136315394;
      std::string::size_type v27 = v21;
      __int16 v28 = 2048;
      CFIndex v29 = v20;
      int v22 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  17LL,  "MKBUserTypeDeviceMode returned error, domain, %s, code, %ld",  (const char *)&v26,  22);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLPlatformInfo::supportsMultiUser()_block_invoke",  "%s\n",  (const char *)v22);
      if (v22 != buf) {
        free(v22);
      }
    }

    CFRelease(err);
    CFErrorRef err = 0LL;
  }

  if (v7)
  {
    id v14 = [v7 objectForKey:kMKBDeviceModeKey];
  }

void sub_1004FA488( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004FA4D0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1004FA544;
  block[3] = &unk_10181D3D0;
  block[4] = a1;
  if (qword_1019963E8 != -1) {
    dispatch_once(&qword_1019963E8, block);
  }
  return byte_1019963E0;
}

void sub_1004FA544()
{
  if (qword_101996310 != -1) {
    dispatch_once(&qword_101996310, &stru_10183D800);
  }
  int v0 = byte_101996308;
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  if ((byte_101996318 & 1) != 0) {
    goto LABEL_12;
  }
  if (qword_101996300 != -1) {
    dispatch_once(&qword_101996300, &stru_10183D7E0);
  }
  if ((byte_1019962F8 & 1) != 0) {
    goto LABEL_12;
  }
  if (qword_101996330 != -1) {
    dispatch_once(&qword_101996330, &stru_10183D840);
  }
  if (((byte_101996328 | v0) & 1) != 0)
  {
LABEL_12:
    if ((v0 & 1) != 0)
    {
      BOOL v1 = 1;
    }

    else
    {
      if (qword_101996420 != -1) {
        dispatch_once(&qword_101996420, &stru_10183D9E0);
      }
      BOOL v1 = (qword_101996428 & 3) != 0;
    }

    byte_1019963E0 = v1;
  }

uint64_t sub_1004FA678()
{
  if (qword_1019963F8 != -1) {
    dispatch_once(&qword_1019963F8, &stru_10183D980);
  }
  return byte_1019963F0;
}

void sub_1004FA6B8(id a1)
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  byte_1019963F0 = (dword_1019961B8 > 0x3AuLL) | (0x13FFFFFE03FFFFFuLL >> dword_1019961B8) & 1;
}

uint64_t sub_1004FA720()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return 1LL;
}

uint64_t sub_1004FA75C()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  switch(dword_1019961B8)
  {
    case 78:
    case 79:
    case 82:
    case 84:
    case 86:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 154:
    case 155:
    case 156:
    case 157:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 176:
    case 177:
    case 178:
    case 179:
    case 197:
    case 198:
    case 199:
    case 200:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
      return result;
    default:
      uint64_t result = 0LL;
      break;
  }

  return result;
}

uint64_t sub_1004FAA50()
{
  if (qword_101996408 != -1) {
    dispatch_once(&qword_101996408, &stru_10183D9A0);
  }
  return byte_101996400;
}

void sub_1004FAA90(id a1)
{
  byte_101996400 = -[NSString compare:]( -[NSProcessInfo processName]( +[NSProcessInfo processInfo](&OBJC_CLASS___NSProcessInfo, "processInfo"),  "processName"),  "compare:",  @"locationd") == NSOrderedSame;
}

uint64_t sub_1004FAACC()
{
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  if (byte_101996318 != 1) {
    return 0LL;
  }
  if ((sub_1004F70D0() & 1) != 0 || (sub_1004F71A0() & 1) != 0 || (sub_1004F7228() & 1) != 0) {
    return 1LL;
  }
  return sub_1004F6D2C();
}

uint64_t sub_1004FAB40()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 0LL;
  int v1 = dword_1019961B8;
  switch(dword_1019961B8)
  {
    case 0:
    case 261:
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      int v8 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 67109120;
        int v12 = v1;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Unsupported HW type %d; file a radar to CoreMotion Factory | 1.0",
          buf,
          8u);
      }

      BOOL v9 = sub_1002921D0(115, 0);
      uint64_t result = 0LL;
      if (v9)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_10183DA30);
        }
        unint64_t v6 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  16LL,  "Unsupported HW type %d; file a radar to CoreMotion Factory | 1.0",
                             &v10);
        goto LABEL_17;
      }

      break;
    case 2:
    case 3:
    case 5:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 21:
    case 22:
    case 23:
    case 37:
    case 38:
    case 40:
    case 41:
    case 43:
    case 52:
    case 81:
    case 83:
    case 85:
    case 87:
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      unint64_t v4 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)std::string buf = 67109120;
        int v12 = v1;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Old hardware,%d is not supported", buf, 8u);
      }

      BOOL v5 = sub_1002921D0(115, 0);
      uint64_t result = 0LL;
      if (v5)
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_10183DA30);
        }
        unint64_t v6 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Old hardware,%d is not supported",  &v10);
LABEL_17:
        uint64_t v7 = (uint8_t *)v6;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "static CLPlatformInfo::MotionProviders CLPlatformInfo::motionProviders()",  "%s\n",  v6);
        if (v7 != buf) {
          free(v7);
        }
        uint64_t result = 0LL;
      }

      break;
    case 6:
    case 60:
    case 61:
    case 196:
      uint64_t result = 4LL;
      break;
    case 24:
    case 25:
    case 27:
    case 28:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 78:
    case 79:
    case 80:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 168:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 176:
    case 177:
    case 219:
      uint64_t result = 31LL;
      break;
    case 26:
      uint64_t result = 15LL;
      break;
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 62:
    case 63:
    case 64:
    case 65:
    case 76:
    case 77:
    case 134:
    case 135:
    case 136:
    case 137:
    case 144:
    case 145:
    case 146:
    case 147:
    case 154:
    case 155:
    case 156:
    case 157:
    case 161:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
      uint64_t result = 23LL;
      break;
    case 39:
    case 42:
    case 148:
    case 149:
    case 191:
    case 192:
    case 193:
    case 194:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 256:
    case 257:
    case 258:
    case 259:
      uint64_t result = 6LL;
      break;
    case 50:
    case 51:
    case 66:
    case 67:
    case 74:
    case 75:
    case 82:
    case 84:
    case 86:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 150:
    case 151:
    case 152:
    case 153:
      if (qword_101996410 != -1) {
        dispatch_once(&qword_101996410, &stru_10183D9C0);
      }
      BOOL v2 = byte_101996418 == 0;
      unsigned int v3 = 22;
      goto LABEL_23;
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 260:
      if (qword_101996410 != -1) {
        dispatch_once(&qword_101996410, &stru_10183D9C0);
      }
      BOOL v2 = byte_101996418 == 0;
      unsigned int v3 = 54;
LABEL_23:
      if (v2) {
        uint64_t result = v3;
      }
      else {
        uint64_t result = v3 + 1;
      }
      break;
    case 169:
    case 175:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
      uint64_t result = 63LL;
      break;
    default:
      return result;
  }

  return result;
}

void sub_1004FB310(id a1)
{
  unint64_t v6 = @"IOPropertyMatch";
  uint64_t v7 = &off_1018D6800;
  io_service_t MatchingService = IOServiceGetMatchingService( kIOMainPortDefault,  (CFDictionaryRef) +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v7,  &v6,  1LL));
  if (MatchingService)
  {
    byte_101996418 = 1;
    IOObjectRelease(MatchingService);
  }

  else
  {
    if (qword_101934570 != -1) {
      dispatch_once(&qword_101934570, &stru_10183DAB0);
    }
    BOOL v2 = (os_log_s *)qword_101934578;
    if (os_log_type_enabled((os_log_t)qword_101934578, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Compass service missing", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934570 != -1) {
        dispatch_once(&qword_101934570, &stru_10183DAB0);
      }
      v4[0] = 0;
      unsigned int v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934578,  0LL,  "Compass service missing",  v4,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "static BOOL CLPlatformInfo::supportsCompass()_block_invoke", "%s\n", v3);
    }
  }

void sub_1004FB4F4(id a1)
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  qword_101996428 = sub_1004FB538();
}

unint64_t sub_1004FB538()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t v0 = 0LL;
  int v1 = dword_1019961B8;
  switch(dword_1019961B8)
  {
    case 0:
    case 261:
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      uint64_t v13 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 67174657;
        int v20 = v1;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0",
          buf,
          8u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_9;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      LODWORD(v18[0]) = 67174657;
      HIDWORD(v18[0]) = v1;
      id v14 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  16LL,  "Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0",
                            v18,
                            8,
                            v18[0]);
      goto LABEL_75;
    case 2:
    case 3:
    case 5:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 21:
    case 22:
    case 23:
    case 37:
    case 38:
    case 40:
    case 41:
    case 43:
    case 52:
    case 81:
    case 83:
    case 85:
    case 87:
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      BOOL v2 = (os_log_s *)qword_101934A48;
      if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)std::string buf = 67109120;
        int v20 = v1;
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "Old hardware,%d is not supported", buf, 8u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A40 != -1) {
          dispatch_once(&qword_101934A40, &stru_10183DA30);
        }
        id v14 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  17LL,  "Old hardware,%d is not supported",  v18);
LABEL_75:
        uint64_t v17 = (uint8_t *)v14;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLPlatformInfo::MotionCapabilities CLPlatformInfo::queryMotionCaps()",  "%s\n",  v14);
        if (v17 != buf) {
          free(v17);
        }
      }

uint64_t sub_1004FBF20()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  switch(dword_1019961B8)
  {
    case 134:
    case 135:
    case 136:
    case 137:
    case 145:
    case 154:
    case 155:
    case 156:
    case 157:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 197:
    case 198:
    case 199:
    case 200:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
      return result;
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 201:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
      goto LABEL_9;
    default:
      if (dword_1019961B8 > 0x3F || ((1LL << dword_1019961B8) & 0xC003F00000000000LL) == 0) {
LABEL_9:
      }
        uint64_t result = 0LL;
      break;
  }

  return result;
}

uint64_t sub_1004FC190()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  if (((dword_1019961B8 - 188) > 0x37
     || ((1LL << (dword_1019961B8 + 68)) & 0xC0000300000003LL) == 0)
    && (dword_1019961B8 - 33) >= 2)
  {
    return 0LL;
  }

  return result;
}

uint64_t sub_1004FC230()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 188) < 0x38) & (0xF000001FE00003uLL >> (dword_1019961B8
                                                                                               + 68));
}

uint64_t sub_1004FC2B8()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 205) < 0x23) & (0x40000300FuLL >> (dword_1019961B8
                                                                                          + 51));
}

uint64_t sub_1004FC314()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  switch(dword_1019961B8)
  {
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 78:
    case 79:
    case 80:
    case 103:
    case 104:
    case 105:
    case 106:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 130:
    case 131:
    case 132:
    case 133:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
      return result;
    case 74:
    case 75:
    case 76:
    case 77:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 107:
    case 108:
    case 109:
    case 110:
    case 126:
    case 127:
    case 128:
    case 129:
    case 134:
    case 135:
    case 136:
    case 137:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
      goto LABEL_7;
    default:
      if ((dword_1019961B8 - 219) > 0x29
        || ((1LL << (dword_1019961B8 + 37)) & 0x2000000007FLL) == 0)
      {
LABEL_7:
        uint64_t result = 0LL;
      }

      break;
  }

  return result;
}

BOOL sub_1004FC57C()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return dword_1019961B8 == 143;
}

uint64_t sub_1004FC5C4()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  BOOL v0 = dword_1019961B8 == 260;
  return (dword_1019961B8 - 95) < 0x27 || v0;
}

BOOL sub_1004FC628()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  BOOL result = 1LL;
  if ((dword_1019961B8 - 99) > 0x22
    || ((1LL << (dword_1019961B8 - 99)) & 0x787FFF0FFLL) == 0)
  {
    return dword_1019961B8 == 260;
  }

  return result;
}

uint64_t sub_1004FC6A0()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 172) < 0x32) & (0x30000000000F7uLL >> (dword_1019961B8
                                                                                              + 84));
}

uint64_t sub_1004FC6FC()
{
  unsigned __int8 v2 = 0;
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  if (dword_1019961B8 == 219) {
    unsigned __int8 v2 = 1;
  }
  sub_1012049AC(v1, off_101936DC8[0], &v2, 0);
  return v1[1];
}

BOOL sub_1004FC778()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return (dword_1019961B8 - 107) < 4;
}

BOOL sub_1004FC7C4()
{
  if (qword_101996420 != -1) {
    dispatch_once(&qword_101996420, &stru_10183D9E0);
  }
  return (qword_101996428 & 0x2000) != 0 && (qword_101996428 & 0x8000) == 0;
}

uint64_t sub_1004FC81C()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  uint64_t result = 1LL;
  BOOL v1 = (dword_1019961B8 - 68) > 0xC || ((1 << (dword_1019961B8 - 68)) & 0x1C3F) == 0;
  return result;
}

uint64_t sub_1004FC8A0()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 115) < 0x13) & (0x787E1u >> (dword_1019961B8 - 115));
}

uint64_t sub_1004FC8FC()
{
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  return 0LL;
}

uint64_t sub_1004FC938()
{
  if (qword_101996438 != -1) {
    dispatch_once(&qword_101996438, &stru_10183DA00);
  }
  return byte_101996430;
}

void sub_1004FC978(id a1)
{
  int v1 = MGGetBoolAnswer(@"3kmXfug8VcxLI5yEmsqQKw");
  byte_101996430 = v1;
  if (v1)
  {
    if (qword_101934A40 != -1) {
      dispatch_once(&qword_101934A40, &stru_10183DA30);
    }
    unsigned __int8 v2 = (os_log_s *)qword_101934A48;
    if (os_log_type_enabled((os_log_t)qword_101934A48, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Booted in to diagnostics mode", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A40 != -1) {
        dispatch_once(&qword_101934A40, &stru_10183DA30);
      }
      v4[0] = 0;
      unsigned __int16 v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A48,  0LL,  "Booted in to diagnostics mode",  v4,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "static BOOL CLPlatformInfo::inDiagnosticsMode()_block_invoke", "%s\n", v3);
    }
  }

uint64_t sub_1004FCB14()
{
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  if ((byte_101996318 & 1) != 0) {
    return 1LL;
  }
  if (qword_101996300 != -1) {
    dispatch_once(&qword_101996300, &stru_10183D7E0);
  }
  return byte_1019962F8;
}

uint64_t sub_1004FCB90()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 168) < 0x3A) & (0x3F000000001FFFFuLL >> (dword_1019961B8
                                                                                                + 88));
}

BOOL sub_1004FCBF0()
{
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  return (byte_101996318 & 1) != 0 || sub_1004FCC40();
}

BOOL sub_1004FCC40()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return dword_1019961B8 == 70 || dword_1019961B8 == 73;
}

BOOL sub_1004FCC90()
{
  if (sub_1004F6E30()) {
    return sub_1004F26D0();
  }
  BOOL result = sub_1004F6EC8();
  if (result) {
    return sub_1004F26D0();
  }
  return result;
}

BOOL sub_1004FCCB8()
{
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  if ((byte_101996318 & 1) != 0) {
    BOOL v0 = 1;
  }
  else {
LABEL_8:
  }
    BOOL v0 = sub_1004F7040();
  sub_1002F0B04(&v7);
  int v1 = sub_1002A6F64(v7, "supportsGnssDisablementAssertion", &v9);
  BOOL v2 = v9;
  unsigned __int16 v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

  if (v1) {
    return v2;
  }
  else {
    return v0;
  }
}

void sub_1004FCDAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_1004FCDC0()
{
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  if ((byte_101996318 & 1) != 0) {
    BOOL v0 = 1;
  }
  else {
LABEL_8:
  }
    BOOL v0 = sub_1004F7040();
  sub_1002F0B04(&v7);
  int v1 = sub_1002A6F64(v7, "supportsGnssConcurrency", &v9);
  BOOL v2 = v9;
  unsigned __int16 v3 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

  if (v1) {
    return v2;
  }
  else {
    return v0;
  }
}

void sub_1004FCEB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004FCEC8()
{
  uint64_t v0 = v8;
  if ((sub_1004F7560() & 1) != 0 || sub_1004F6FD0() || sub_1004F6D2C())
  {
    if (qword_101996320 != -1) {
      dispatch_once(&qword_101996320, &stru_10183D820);
    }
    unsigned int v1 = byte_101996318;
  }

  else
  {
    unsigned int v1 = 0;
  }

  int v2 = sub_1002A6F64(v0, "supportsGnssGnssStatusQueryAssertion", &v10);
  BOOL v3 = v10;
  uint64_t v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  if (v2) {
    return v3;
  }
  else {
    return v1;
  }
}

void sub_1004FCFB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004FCFC8()
{
  if (sub_1004F6FD0() || (uint64_t result = sub_1004F6D2C(), (_DWORD)result))
  {
    if (qword_101996320 != -1) {
      dispatch_once(&qword_101996320, &stru_10183D820);
    }
    return byte_101996318;
  }

  return result;
}

uint64_t sub_1004FD018()
{
  int v0 = sub_1002A775C(v6, "ProactiveGnssModePowerBudget", &v8);
  unsigned int v1 = v8;
  int v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  if (v0) {
    return v1;
  }
  else {
    return 0LL;
  }
}

void sub_1004FD0A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004FD0BC()
{
  unsigned int v0 = sub_1002A6F64(v6, "ProactiveGnssModeSupported", &v8);
  BOOL v1 = v8;
  int v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  if (v1) {
    return v0;
  }
  else {
    return 0LL;
  }
}

void sub_1004FD14C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004FD160()
{
  unsigned int v0 = sub_1002A6F64(v6, "SetLocationStreamingDisabled", &v8);
  BOOL v1 = v8;
  int v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  if (v1) {
    return v0;
  }
  else {
    return 0LL;
  }
}

void sub_1004FD1F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004FD204()
{
  int v0 = sub_1002A6F64(v6, "externalLocationDisablementAllowed", &v8);
  BOOL v1 = v8;
  int v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  if (v1) {
    return 1LL;
  }
  else {
    return v0 ^ 1u;
  }
}

void sub_1004FD298(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_1004FD2AC()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  return (byte_101996318 & 1) != 0;
}

uint64_t sub_1004FD33C()
{
  int v0 = sub_1002A6F64(v6, "TimingAdvanceSupport", &v8);
  if (v8) {
    int v1 = v0;
  }
  else {
    int v1 = 0;
  }
  int v2 = v7;
  if (!v7) {
    goto LABEL_8;
  }
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    unint64_t v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (!v1) {
      return 0LL;
    }
  }

  else
  {
LABEL_8:
    if (!v1) {
      return 0LL;
    }
  }

  if ((sub_1004F75C0() & 1) != 0 || (sub_1004F70D0() & 1) != 0 || sub_1004F71A0())
  {
    if (qword_1019961B0 != -1) {
      dispatch_once(&qword_1019961B0, &stru_10183D6A0);
    }
    if (qword_101996320 != -1) {
      dispatch_once(&qword_101996320, &stru_10183D820);
    }
    if ((byte_101996318 & 1) != 0) {
      return 1LL;
    }
  }

  return 0LL;
}

void sub_1004FD448(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_1004FD45C()
{
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  BOOL result = 1LL;
  if ((dword_1019961B8 - 89) > 0x2C
    || ((1LL << (dword_1019961B8 - 89)) & 0x1FFFFFFC3FCFLL) == 0)
  {
    return dword_1019961B8 == 260;
  }

  return result;
}

uint64_t sub_1004FD4D0()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_1019961C0 != -1) {
    dispatch_once(&qword_1019961C0, &stru_10183D6E0);
  }
  return ((dword_1019961B8 - 175) < 0x33) & (0x78000000003E1uLL >> (dword_1019961B8
                                                                                              + 81));
}

uint64_t sub_1004FD554()
{
  uint64_t v0 = v8;
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  unsigned int v1 = byte_101996318;
  int v2 = sub_1002A6F64(v0, "supportsProactiveLocation", &v10);
  BOOL v3 = v10;
  unint64_t v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  if (v2) {
    return v3;
  }
  else {
    return v1;
  }
}

void sub_1004FD620(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004FD634()
{
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_101996320 != -1) {
    dispatch_once(&qword_101996320, &stru_10183D820);
  }
  if ((byte_101996318 & 1) != 0) {
    return 1LL;
  }
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_101996330 != -1) {
    dispatch_once(&qword_101996330, &stru_10183D840);
  }
  if ((byte_101996328 & 1) != 0) {
    return 1LL;
  }
  if (qword_1019961B0 != -1) {
    dispatch_once(&qword_1019961B0, &stru_10183D6A0);
  }
  if (qword_101996300 != -1) {
    dispatch_once(&qword_101996300, &stru_10183D7E0);
  }
  return byte_1019962F8;
}

void sub_1004FD75C(id a1)
{
  qword_101934A48 = (uint64_t)os_log_create("com.apple.locationd.Utility", "Utility");
}

void sub_1004FD788(id a1)
{
  unsigned int v1 = objc_autoreleasePoolPush();
  byte_101996448 = 0;
  CFPropertyListRef v2 = CFPreferencesCopyValue( @"StoreDemoMode",  @"com.apple.demo-settings",  @"mobile",  kCFPreferencesAnyHost);
  if (v2)
  {
    BOOL v3 = v2;
    CFAutorelease(v2);
    CFTypeID v4 = CFGetTypeID(v3);
    if (v4 == CFBooleanGetTypeID())
    {
      if (CFBooleanGetValue((CFBooleanRef)v3))
      {
        CFPropertyListRef v5 = CFPreferencesCopyValue( @"FProgramNumber",  @"com.apple.demo-settings",  @"mobile",  kCFPreferencesAnyHost);
        if (v5)
        {
          unint64_t v6 = v5;
          CFAutorelease(v5);
          CFTypeID v7 = CFGetTypeID(v6);
          if (v7 == CFNumberGetTypeID())
          {
            int valuePtr = 0;
            if (CFNumberGetValue((CFNumberRef)v6, kCFNumberIntType, &valuePtr)) {
              byte_101996448 = valuePtr == 5;
            }
          }
        }
      }
    }
  }

  objc_autoreleasePoolPop(v1);
}

void sub_1004FD89C(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_1004FD8C8(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_1004FD8F4(id a1)
{
  qword_101934578 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Sensors");
}

BOOL sub_1004FD920(uint64_t a1, uint64_t a2)
{
  return uuid_compare((const unsigned __int8 *)(a1 + 296), (const unsigned __int8 *)(a2 + 64)) != 0;
}

void sub_1004FD948(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1004FE2EC(a1, 14LL, Current);
}

BOOL sub_1004FD980(uint64_t a1, uint64_t a2)
{
}

BOOL sub_1004FD9C4(uint64_t a1)
{
  return *(void *)(a1 + 344) == 33LL;
}

uint64_t sub_1004FD9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, __int128 *a7)
{
  *(void *)a1 = &unk_10183DAD0;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 23LL;
  *(_WORD *)(a1 + 16) = 512;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)a3;
  id v14 = (const std::string *)(a3 + 16);
  if (*(char *)(a3 + 39) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 40), *(void **)(a3 + 16), *(void *)(a3 + 24));
  }

  else
  {
    __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    *(void *)(a1 + 56) = *(void *)(a3 + 32);
    *(_OWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v15;
  }

  sub_10046E90C(a1 + 64, (void *)(a3 + 40));
  *(_BYTE *)(a1 + 112) = *(void *)(a3 + 80) > 1uLL;
  *(_BYTE *)(a1 + 113) = a5;
  *(_BYTE *)(a1 + 114) = 0;
  *(void *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = a4;
  bzero((void *)(a1 + 128), 0x250uLL);
  *(void *)(a1 + 72sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = a6;
  v36[0] = &off_10183DD28;
  v36[1] = a1;
  uint64_t v37 = v36;
  sub_100648884(a1 + 728, v36);
  uint64_t v16 = v37;
  if (v37 == v36)
  {
    uint64_t v17 = 4LL;
    uint64_t v16 = v36;
    goto LABEL_8;
  }

  if (v37)
  {
    uint64_t v17 = 5LL;
LABEL_8:
    (*(void (**)(void))(*v16 + 8 * v17))();
  }

  *(void *)(a1 + 784) = *(void *)(a4 + 296);
  __int128 v18 = *a7;
  __int128 v19 = a7[2];
  *(_OWORD *)(a1 + 80_Block_object_dispose((const void *)(v1 - 232), 8) = a7[1];
  *(_OWORD *)(a1 + 824) = v19;
  *(_OWORD *)(a1 + 792) = v18;
  uuid_copy((unsigned __int8 *)(a1 + 632), (const unsigned __int8 *)a3);
  std::string::operator=((std::string *)(a1 + 648), v14);
  sub_1004FDD08(a2, (uint64_t)v34);
  __int128 v20 = v34[13];
  *(_OWORD *)(a1 + 424) = v34[12];
  *(_OWORD *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v20;
  *(void *)(a1 + 456) = v35;
  __int128 v21 = v34[9];
  *(_OWORD *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v34[8];
  *(_OWORD *)(a1 + 376) = v21;
  __int128 v22 = v34[11];
  *(_OWORD *)(a1 + 392) = v34[10];
  *(_OWORD *)(a1 + 40_Block_object_dispose((const void *)(v1 - 232), 8) = v22;
  __int128 v23 = v34[5];
  *(_OWORD *)(a1 + 296) = v34[4];
  *(_OWORD *)(a1 + 312) = v23;
  __int128 v24 = v34[7];
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 232), 8) = v34[6];
  *(_OWORD *)(a1 + 344) = v24;
  __int128 v25 = v34[1];
  *(_OWORD *)(a1 + 232) = v34[0];
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 232), 8) = v25;
  __int128 v26 = v34[3];
  *(_OWORD *)(a1 + 264) = v34[2];
  *(_OWORD *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v26;
  __int128 v27 = *(_OWORD *)(a1 + 440);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a1 + 424);
  *(_OWORD *)(a1 + 60_Block_object_dispose((const void *)(v1 - 232), 8) = v27;
  *(void *)(a1 + 624) = *(void *)(a1 + 456);
  __int128 v28 = *(_OWORD *)(a1 + 376);
  *(_OWORD *)(a1 + 52_Block_object_dispose((const void *)(v1 - 232), 8) = *(_OWORD *)(a1 + 360);
  *(_OWORD *)(a1 + 544) = v28;
  __int128 v29 = *(_OWORD *)(a1 + 408);
  *(_OWORD *)(a1 + 56sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a1 + 392);
  *(_OWORD *)(a1 + 576) = v29;
  __int128 v30 = *(_OWORD *)(a1 + 312);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a1 + 296);
  *(_OWORD *)(a1 + 48sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v30;
  __int128 v31 = *(_OWORD *)(a1 + 344);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a1 + 328);
  *(_OWORD *)(a1 + 512) = v31;
  sub_100E88F4C((void *)(a1 + 128), (__int128 *)(a1 + 232), (uint64_t)v34);
  sub_10046F680((void *)(a1 + 672), (uint64_t)v34);
  sub_10041385C(v34);
  sub_1004FDD9C(a1);
  sub_1004FDFD8(a1);
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1004FE2EC(a1, 13LL, Current);
  return a1;
}

void sub_1004FDC64(_Unwind_Exception *a1)
{
  uint64_t v6 = *(void *)(v1 + 224);
  *(void *)(v1 + 224) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  sub_10041385C((void *)(v1 + 176));
  sub_10041385C(v2);
  sub_100457A68(v1 + 24);
  _Unwind_Resume(a1);
}

void sub_1004FDD08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(CFAbsoluteTime *)a2 = CFAbsoluteTimeGetCurrent();
  *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0xBFF0000000000000LL;
  *(void *)(a2 + 16) = 23LL;
  *(void *)(a2 + 24) = 0xBFF0000000000000LL;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  __int128 v4 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a2 + 192) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 20_Block_object_dispose((const void *)(v1 - 232), 8) = v4;
  *(void *)(a2 + 224) = *(void *)(a1 + 160);
  __int128 v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 12_Block_object_dispose((const void *)(v1 - 232), 8) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 144) = v5;
  __int128 v6 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 176) = v6;
  __int128 v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v7;
  __int128 v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 112) = v8;
  uuid_copy((unsigned __int8 *)(a2 + 64), (const unsigned __int8 *)a1);
  uuid_copy((unsigned __int8 *)(a2 + 80), (const unsigned __int8 *)(a1 + 16));
}

uint64_t sub_1004FDD9C(uint64_t result)
{
  if (*(_BYTE *)(result + 112))
  {
    uint64_t v1 = result;
    if (!*(void *)(result + 224))
    {
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183DCF8);
      }
      CFPropertyListRef v2 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, bringing up CLWorkoutSeriesDetectionModelController",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_10183DCF8);
        }
        v6[0] = 0;
        __int128 v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, bringing up CLWorkoutSeriesDetectionModelController",  v6,  2);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWorkoutSeriesPredictor::bringupModelController()", "%s\n", v5);
      }

      uint64_t v3 = *(void *)(v1 + 120);
      if (*(_BYTE *)(v1 + 792))
      {
        __int128 v4 = operator new(0x228uLL);
        sub_1002C5090((uint64_t)v4, v1 + 296, v1 + 24, *(_BYTE *)(v1 + 113), v3, v1 + 792, *(double *)(v1 + 784));
      }

      else
      {
        __int128 v4 = operator new(0x1F0uLL);
        sub_100AD82C8((uint64_t)v4, v1 + 296, v1 + 24, *(_BYTE *)(v1 + 113), v3);
      }

      BOOL result = *(void *)(v1 + 224);
      *(void *)(v1 + 224) = v4;
      if (result) {
        return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
      }
    }
  }

  return result;
}

void sub_1004FDFB8(_Unwind_Exception *a1)
{
}

uint64_t sub_1004FDFD8(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  BOOL v3 = v2 == 3 || v2 == 5;
  if (!v3 && *(void *)(a1 + 456) != 1LL)
  {
    uint64_t v5 = 1LL;
    goto LABEL_19;
  }

  if (!*(_BYTE *)(a1 + 112))
  {
LABEL_16:
    uint64_t v5 = 0LL;
    goto LABEL_19;
  }

  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183DCF8);
  }
  __int128 v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "Disabling power assertion when auto detection is enabled",  buf,  2u);
  }

  uint64_t v5 = 0LL;
  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    LOWORD(v10[0]) = 0;
    __int128 v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "Disabling power assertion when auto detection is enabled",  v10,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSeriesPredictor::notifyClientsWithPowerAssertionUpdate()",  "%s\n",  v6);
    goto LABEL_16;
  }

void sub_1004FE2EC(uint64_t a1, uint64_t a2, double a3)
{
  __int128 v24 = *(_OWORD *)(a1 + 232);
  uint64_t v25 = a2;
  double v26 = a3;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v6 = *(_OWORD *)(a1 + 440);
  __int128 v37 = *(_OWORD *)(a1 + 424);
  __int128 v38 = v6;
  uint64_t v39 = *(void *)(a1 + 456);
  __int128 v7 = *(_OWORD *)(a1 + 376);
  __int128 v33 = *(_OWORD *)(a1 + 360);
  __int128 v34 = v7;
  __int128 v8 = *(_OWORD *)(a1 + 392);
  __int128 v36 = *(_OWORD *)(a1 + 408);
  __int128 v35 = v8;
  __int128 v9 = *(_OWORD *)(a1 + 312);
  __int128 v29 = *(_OWORD *)(a1 + 296);
  __int128 v30 = v9;
  __int128 v10 = *(_OWORD *)(a1 + 328);
  __int128 v32 = *(_OWORD *)(a1 + 344);
  __int128 v31 = v10;
  if (*(void *)(a1 + 344) == 14LL) {
    *((void *)&v28 + 1) = *(void *)(a1 + 360);
  }
  uuid_copy((unsigned __int8 *)&v29, (const unsigned __int8 *)(a1 + 296));
  uuid_copy((unsigned __int8 *)&v30, (const unsigned __int8 *)(a1 + 312));
  uuid_copy((unsigned __int8 *)&v31, (const unsigned __int8 *)(a1 + 328));
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183DCF8);
  }
  uint64_t v11 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 134218240;
    double v21 = a3;
    __int16 v22 = 2048;
    uint64_t v23 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, notify session update, eventTime,%f, eventType,%ld",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    int v16 = 134218240;
    double v17 = a3;
    __int16 v18 = 2048;
    uint64_t v19 = a2;
    __int128 v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, notify session update, eventTime,%f, eventType,%ld",  COERCE_DOUBLE(&v16),  22);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSeriesPredictor::notifyClientsWithWorkoutSessionEvent(CFAbsoluteTime, CMWorkoutEvent)",  "%s\n",  v15);
  }

  switch(a2)
  {
    case 13LL:
      sub_100648A9C(a1 + 728);
      int v12 = ***(void (****)(void))(a1 + 720);
      goto LABEL_25;
    case 14LL:
      if ((void)v32 != 33LL)
      {
        sub_1006489B0(a1 + 728, v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1));
        sub_100648D60((void *)(a1 + 728));
      }

      int v12 = *(void (**)(void))(**(void **)(a1 + 720) + 16LL);
      goto LABEL_25;
    case 15LL:
      sub_100648A9C(a1 + 728);
      int v12 = *(void (**)(void))(**(void **)(a1 + 720) + 8LL);
      goto LABEL_25;
    case 16LL:
      int v12 = *(void (**)(void))(**(void **)(a1 + 720) + 24LL);
      goto LABEL_25;
    case 17LL:
      int v12 = *(void (**)(void))(**(void **)(a1 + 720) + 32LL);
LABEL_25:
      v12();
      break;
    case 18LL:
      if ((void)v32 != 33LL)
      {
        sub_1006489B0(a1 + 728, v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1));
        sub_100648D60((void *)(a1 + 728));
      }

      (*(void (**)(void, __int128 *, uint64_t, double))(**(void **)(a1 + 720) + 40LL))( *(void *)(a1 + 720),  &v24,  a1 + 632,  *(double *)(a1 + 840));
      break;
    default:
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183DCF8);
      }
      uint64_t v13 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 134217984;
        double v21 = *(double *)&a2;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "CLWorkoutSeriesPredictor, tried to notify invalid event type, eventType, %ld",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_10183DCF8);
        }
        int v16 = 134217984;
        double v17 = *(double *)&a2;
        id v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "CLWorkoutSeriesPredictor, tried to notify invalid event type, eventType, %ld",  &v16);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSeriesPredictor::notifyClientsWithWorkoutSessionEvent(CFAbsoluteTime, CMWorkoutEvent)",  "%s\n",  v14);
      }

      break;
  }

uint64_t sub_1004FE7D0(uint64_t a1)
{
  int v2 = (void *)(a1 + 24);
  BOOL v3 = *(void **)(a1 + 48);
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    BOOL v3 = v2;
  }

  else
  {
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  uint64_t v5 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v5;
    operator delete(v5);
  }

  return a1;
}

uint64_t sub_1004FE834(uint64_t a1, uint64_t a2, int a3)
{
  if ((void)v42 == 33LL)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    uint64_t v5 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 134218240;
      *(void *)&uint8_t buf[4] = v35;
      *(_WORD *)&_BYTE buf[12] = 1024;
      *(_DWORD *)&_BYTE buf[14] = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, client confirmed transition segment, startTime,%f, isManualTransition,%d",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183DCF8);
      }
      int v12 = 134218240;
      uint64_t v13 = v35;
      __int16 v14 = 1024;
      LODWORD(v15) = a3;
      __int128 v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, client confirmed transition segment, startTime,%f, isManualTransition,%d",  COERCE_DOUBLE(&v12),  18);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSeriesPredictor::feedSetCurrentWorkoutType(const CLMotionStateMediator_Type::WorkoutSettings &, BOOL)",  "%s\n",  v10);
      if (v10 != buf) {
        free(v10);
      }
    }

    __int128 v31 = v47;
    __int128 v32 = v48;
    uint64_t v33 = v49;
    __int128 v27 = v43;
    __int128 v28 = v44;
    __int128 v29 = v45;
    __int128 v30 = v46;
    __int128 v23 = v39;
    __int128 v24 = v40;
    __int128 v25 = v41;
    __int128 v26 = v42;
    *(_OWORD *)std::string buf = v35;
    *(_OWORD *)&uint8_t buf[16] = v36;
    __int128 v21 = v37;
    __int128 v22 = v38;
    char v34 = a3;
    uint64_t v6 = a1;
    int v7 = 2;
  }

  else
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    __int128 v8 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 134218752;
      *(void *)&uint8_t buf[4] = v42;
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(void *)&_BYTE buf[14] = *((void *)&v42 + 1);
      *(_WORD *)&_BYTE buf[22] = 2048;
      *(void *)&buf[24] = v35;
      LOWORD(v21) = 1024;
      *(_DWORD *)((char *)&v21 + 2) = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, client confirmed workout segment, workoutType,%ld, workoutLocationType,%ld, startTime, %f, isManualTransition,%d",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183DCF8);
      }
      int v12 = 134218752;
      uint64_t v13 = v42;
      __int16 v14 = 2048;
      uint64_t v15 = *((void *)&v42 + 1);
      __int16 v16 = 2048;
      uint64_t v17 = v35;
      __int16 v18 = 1024;
      int v19 = a3;
      uint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, client confirmed workout segment, workoutType,%ld, workoutLocationType,% ld, startTime,%f, isManualTransition,%d",  &v12,  38);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSeriesPredictor::feedSetCurrentWorkoutType(const CLMotionStateMediator_Type::WorkoutSettings &, BOOL)",  "%s\n",  v11);
      if (v11 != buf) {
        free(v11);
      }
    }

    __int128 v31 = v47;
    __int128 v32 = v48;
    uint64_t v33 = v49;
    __int128 v27 = v43;
    __int128 v28 = v44;
    __int128 v29 = v45;
    __int128 v30 = v46;
    __int128 v23 = v39;
    __int128 v24 = v40;
    __int128 v25 = v41;
    __int128 v26 = v42;
    *(_OWORD *)std::string buf = v35;
    *(_OWORD *)&uint8_t buf[16] = v36;
    __int128 v21 = v37;
    __int128 v22 = v38;
    char v34 = a3;
    uint64_t v6 = a1;
    int v7 = 1;
  }

  return sub_100CCCC8C(v6, v7, (uint64_t)buf);
}

void sub_1004FEC90(uint64_t a1)
{
  int v2 = *(void **)(a1 + 224);
  if (v2)
  {
    sub_100AD90A4(v2, (uint64_t)&v59);
    BOOL v3 = __p;
    uint64_t v4 = v78;
    if (__p != v78)
    {
      do
      {
        uint64_t v5 = v3[14];
        if (v5 != *(void *)(a1 + 344) || v3[15] != *(void *)(a1 + 352))
        {
          uint64_t v6 = v3[2];
          if (v6 == 21)
          {
            sub_100648888((uint64_t **)(a1 + 728), v5, v3[15]);
          }

          else if (v6 == 20)
          {
            sub_100648CB4(a1 + 728, v5, v3[15], v3[16], v3[17]);
          }
        }

        v3 += 29;
      }

      while (v3 != v4);
    }

    __int128 v23 = v60;
    double v7 = v59;
    uint64_t v8 = v61;
    __int128 v56 = v64;
    __int128 v57 = v65;
    __int128 v58 = v66;
    __int128 v55 = v63;
    __int128 v54 = v62;
    uint64_t v9 = v67;
    uint64_t v10 = v68;
    uint64_t v11 = v69;
    uint64_t v12 = v70;
    __int128 v49 = v72;
    __int128 v48 = v71;
    uint64_t v53 = v76;
    __int128 v52 = v75;
    __int128 v51 = v74;
    __int128 v50 = v73;
    if (v67)
    {
      double v13 = sub_100648C50((uint64_t *)(a1 + 728), v67, v68);
      double v14 = v13;
      if (v7 < v13) {
        double v13 = v7;
      }
      if (v14 == -1.0) {
        double v15 = v7;
      }
      else {
        double v15 = v13;
      }
      double v16 = *(double *)(a1 + 232);
      if (v15 <= v16)
      {
        double v17 = v16 + 2.22044605e-16;
        if (v15 < v17) {
          double v15 = v17;
        }
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_10183DCF8);
        }
        __int16 v18 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
        {
          uint64_t v19 = *(void *)(a1 + 232);
          *(_DWORD *)std::string buf = 134218752;
          *(double *)&uint8_t buf[4] = v7;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(double *)&_BYTE buf[14] = v14;
          *(_WORD *)&_BYTE buf[22] = 2048;
          *(void *)&buf[24] = v19;
          *(_WORD *)uint64_t v33 = 2048;
          *(double *)&v33[2] = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "CLWorkoutSeriesPredictor, detected workout time must be later than current segment start time, adjusting det ection time, detectedStartTime, %f, prewarmStartTime, %f, currentStartTime, %f, filteredStartTime, %f",  buf,  0x2Au);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_10183DCF8);
          }
          uint64_t v20 = *(void *)(a1 + 232);
          int v24 = 134218752;
          double v25 = v7;
          __int16 v26 = 2048;
          double v27 = v14;
          __int16 v28 = 2048;
          uint64_t v29 = v20;
          __int16 v30 = 2048;
          double v31 = v15;
          LODWORD(v22) = 42;
          __int128 v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "CLWorkoutSeriesPredictor, detected workout time must be later than current segment start time, adjusting detection time, detectedStartTime, %f, prewarmStartTime, %f, currentStartTime, %f, filteredStartTime, %f",  COERCE_DOUBLE(&v24),  v22,  *(double *)&v23,  *((double *)&v23 + 1));
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLWorkoutSeriesPredictor::feedMotionStateUpdate(const CLWorkoutPredictorActivity &)",  "%s\n",  v21);
          if (v21 != buf) {
            free(v21);
          }
        }
      }

      *(void *)std::string buf = v8;
      *(double *)&uint8_t buf[8] = v15;
      *(_OWORD *)&uint8_t buf[16] = v23;
      __int128 v34 = v55;
      __int128 v35 = v56;
      *(void *)uint64_t v33 = 0xBFF0000000000000LL;
      __int128 v36 = v57;
      __int128 v37 = v58;
      *(_OWORD *)&v33[8] = v54;
      uint64_t v38 = v9;
      uint64_t v39 = v10;
      uint64_t v40 = v11;
      uint64_t v41 = v12;
      uint64_t v47 = v53;
      __int128 v46 = v52;
      __int128 v45 = v51;
      __int128 v44 = v50;
      __int128 v43 = v49;
      __int128 v42 = v48;
      sub_100CCCC8C(a1, 3, (uint64_t)buf);
    }

    if (__p)
    {
      double v78 = __p;
      operator delete(__p);
    }
  }

void sub_1004FF078(_Unwind_Exception *a1)
{
  int v2 = (void *)STACK[0x850];
  if (STACK[0x850])
  {
    STACK[0x858] = (unint64_t)v2;
    operator delete(v2);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1004FF0AC(uint64_t a1)
{
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183DCF8);
  }
  BOOL v3 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 134217984;
    *(CFAbsoluteTime *)&uint8_t buf[4] = Current;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, client confirmed manual pause, startTime,%f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    int v6 = 134217984;
    CFAbsoluteTime v7 = Current;
    uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, client confirmed manual pause, startTime,%f",  COERCE_DOUBLE(&v6));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSeriesPredictor::feedManualPause(const CLMotionStateMediator_Type::WorkoutSettings &)",  "%s\n",  v5);
    if (v5 != buf) {
      free(v5);
    }
  }

  *(CFAbsoluteTime *)std::string buf = Current;
  return sub_100CCCC8C(a1, 4, (uint64_t)buf);
}

uint64_t sub_1004FF278(uint64_t a1)
{
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183DCF8);
  }
  BOOL v3 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 134217984;
    *(CFAbsoluteTime *)&uint8_t buf[4] = Current;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, workout session end, endTime,%f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    int v6 = 134217984;
    CFAbsoluteTime v7 = Current;
    uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, workout session end, endTime,%f",  COERCE_DOUBLE(&v6));
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWorkoutSeriesPredictor::endWorkoutSession()", "%s\n", v5);
    if (v5 != buf) {
      free(v5);
    }
  }

  *(CFAbsoluteTime *)std::string buf = Current;
  return sub_100CCCC8C(a1, 5, (uint64_t)buf);
}

uint64_t sub_1004FF444(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 112) && *(void *)(a1 + 224))
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    int v2 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Tearing down CLWorkoutSeriesDetectionModelController",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183DCF8);
      }
      v6[0] = 0;
      uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tearing down CLWorkoutSeriesDetectionModelController",  v6,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWorkoutSeriesPredictor::teardownModelController()", "%s\n", v5);
    }

    uint64_t v3 = *(void *)(a1 + 224);
    *(void *)(a1 + 224) = 0LL;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
  }

  return sub_100648A9C(a1 + 728);
}

void sub_1004FF604(uint64_t a1, unsigned __int8 *a2)
{
  *(_BYTE *)(a1 + 114) = 0;
  __int128 v4 = *(_OWORD *)(a1 + 440);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a1 + 424);
  *(_OWORD *)(a1 + 60_Block_object_dispose((const void *)(v1 - 232), 8) = v4;
  *(void *)(a1 + 624) = *(void *)(a1 + 456);
  __int128 v5 = *(_OWORD *)(a1 + 376);
  *(_OWORD *)(a1 + 52_Block_object_dispose((const void *)(v1 - 232), 8) = *(_OWORD *)(a1 + 360);
  *(_OWORD *)(a1 + 544) = v5;
  __int128 v6 = *(_OWORD *)(a1 + 408);
  *(_OWORD *)(a1 + 56sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a1 + 392);
  *(_OWORD *)(a1 + 576) = v6;
  __int128 v7 = *(_OWORD *)(a1 + 312);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a1 + 296);
  *(_OWORD *)(a1 + 48sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v7;
  __int128 v8 = *(_OWORD *)(a1 + 344);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a1 + 328);
  *(_OWORD *)(a1 + 512) = v8;
  uint64_t v9 = *(int64x2_t **)(a1 + 224);
  if (v9) {
    sub_100AD82CC(v9, (uint64_t)a2, a2[232]);
  }
  sub_100E88F78((int64x2_t *)(a1 + 128), a2, a2[232], (uint64_t)&v20);
  sub_10046F680((void *)(a1 + 672), (uint64_t)&v20);
  sub_10041385C(&v20);
  uint64_t v34 = 0LL;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  uint64_t v10 = *(void *)(a1 + 712);
  if (v10)
  {
    unint64_t v11 = *(void *)(*(void *)(a1 + 680) + 8 * ((v10 + *(void *)(a1 + 704) - 1) / 0x11uLL))
        + 232 * ((v10 + *(void *)(a1 + 704) - 1) % 0x11uLL);
    __int128 v31 = *(_OWORD *)(v11 + 176);
    __int128 v32 = *(_OWORD *)(v11 + 192);
    __int128 v33 = *(_OWORD *)(v11 + 208);
    uint64_t v34 = *(void *)(v11 + 224);
    __int128 v27 = *(_OWORD *)(v11 + 112);
    __int128 v28 = *(_OWORD *)(v11 + 128);
    __int128 v29 = *(_OWORD *)(v11 + 144);
    __int128 v30 = *(_OWORD *)(v11 + 160);
    __int128 v23 = *(_OWORD *)(v11 + 48);
    __int128 v24 = *(_OWORD *)(v11 + 64);
    __int128 v25 = *(_OWORD *)(v11 + 80);
    __int128 v26 = *(_OWORD *)(v11 + 96);
    __int128 v20 = *(_OWORD *)v11;
    __int128 v21 = *(_OWORD *)(v11 + 16);
    __int128 v22 = *(_OWORD *)(v11 + 32);
  }

  *(void *)(a1 + 456) = v34;
  __int128 v12 = v21;
  *(_OWORD *)(a1 + 232) = v20;
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 232), 8) = v12;
  __int128 v13 = v33;
  *(_OWORD *)(a1 + 424) = v32;
  *(_OWORD *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v13;
  __int128 v14 = v29;
  *(_OWORD *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v28;
  *(_OWORD *)(a1 + 376) = v14;
  __int128 v15 = v31;
  *(_OWORD *)(a1 + 392) = v30;
  *(_OWORD *)(a1 + 40_Block_object_dispose((const void *)(v1 - 232), 8) = v15;
  __int128 v16 = v25;
  *(_OWORD *)(a1 + 296) = v24;
  *(_OWORD *)(a1 + 312) = v16;
  __int128 v17 = v27;
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 232), 8) = v26;
  *(_OWORD *)(a1 + 344) = v17;
  __int128 v18 = v23;
  *(_OWORD *)(a1 + 264) = v22;
  *(_OWORD *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v18;
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1004FE2EC(a1, 14LL, Current);
}

void sub_1004FF808(uint64_t a1, unsigned __int8 *a2)
{
  __int128 v4 = *(int64x2_t **)(a1 + 224);
  if (v4) {
    sub_100AD84F4(v4, a2[232]);
  }
  sub_100E88F78((int64x2_t *)(a1 + 128), a2, a2[232], (uint64_t)&v15);
  sub_10046F680((void *)(a1 + 672), (uint64_t)&v15);
  sub_10041385C(&v15);
  uint64_t v29 = 0LL;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  uint64_t v5 = *(void *)(a1 + 712);
  if (v5)
  {
    unint64_t v6 = *(void *)(*(void *)(a1 + 680) + 8 * ((v5 + *(void *)(a1 + 704) - 1) / 0x11uLL))
       + 232 * ((v5 + *(void *)(a1 + 704) - 1) % 0x11uLL);
    __int128 v26 = *(_OWORD *)(v6 + 176);
    __int128 v27 = *(_OWORD *)(v6 + 192);
    __int128 v28 = *(_OWORD *)(v6 + 208);
    uint64_t v29 = *(void *)(v6 + 224);
    __int128 v22 = *(_OWORD *)(v6 + 112);
    __int128 v23 = *(_OWORD *)(v6 + 128);
    __int128 v24 = *(_OWORD *)(v6 + 144);
    __int128 v25 = *(_OWORD *)(v6 + 160);
    __int128 v18 = *(_OWORD *)(v6 + 48);
    __int128 v19 = *(_OWORD *)(v6 + 64);
    __int128 v20 = *(_OWORD *)(v6 + 80);
    __int128 v21 = *(_OWORD *)(v6 + 96);
    __int128 v15 = *(_OWORD *)v6;
    __int128 v16 = *(_OWORD *)(v6 + 16);
    __int128 v17 = *(_OWORD *)(v6 + 32);
  }

  *(void *)(a1 + 456) = v29;
  __int128 v7 = v16;
  *(_OWORD *)(a1 + 232) = v15;
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 232), 8) = v7;
  __int128 v8 = v28;
  *(_OWORD *)(a1 + 424) = v27;
  *(_OWORD *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v8;
  __int128 v9 = v24;
  *(_OWORD *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v23;
  *(_OWORD *)(a1 + 376) = v9;
  __int128 v10 = v26;
  *(_OWORD *)(a1 + 392) = v25;
  *(_OWORD *)(a1 + 40_Block_object_dispose((const void *)(v1 - 232), 8) = v10;
  __int128 v11 = v20;
  *(_OWORD *)(a1 + 296) = v19;
  *(_OWORD *)(a1 + 312) = v11;
  __int128 v12 = v22;
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 232), 8) = v21;
  *(_OWORD *)(a1 + 344) = v12;
  __int128 v13 = v18;
  *(_OWORD *)(a1 + 264) = v17;
  *(_OWORD *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v13;
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1004FE2EC(a1, 14LL, Current);
}

void sub_1004FF9D0(void *a1, double *a2)
{
  a1[30] = *(void *)a2;
  sub_1004FF444((uint64_t)a1);
  sub_100E8A1C8(a1 + 16, (uint64_t)v5, *a2);
  sub_10046F680(a1 + 84, (uint64_t)v5);
  sub_10041385C(v5);
  sub_1004FDFD8((uint64_t)a1);
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1004FE2EC((uint64_t)a1, 16LL, Current);
}

void sub_1004FFA40(uint64_t a1, __int128 *a2)
{
  __int128 v3 = *a2;
  __int128 v4 = a2[1];
  *(_OWORD *)(a1 + 264) = a2[2];
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 232), 8) = v4;
  *(_OWORD *)(a1 + 232) = v3;
  __int128 v5 = a2[3];
  __int128 v6 = a2[4];
  __int128 v7 = a2[6];
  *(_OWORD *)(a1 + 312) = a2[5];
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 232), 8) = v7;
  *(_OWORD *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v5;
  *(_OWORD *)(a1 + 296) = v6;
  __int128 v8 = a2[7];
  __int128 v9 = a2[8];
  __int128 v10 = a2[10];
  *(_OWORD *)(a1 + 376) = a2[9];
  *(_OWORD *)(a1 + 392) = v10;
  *(_OWORD *)(a1 + 344) = v8;
  *(_OWORD *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v9;
  __int128 v11 = a2[11];
  __int128 v12 = a2[12];
  __int128 v13 = a2[13];
  uint64_t v14 = *((void *)a2 + 28);
  *(void *)(a1 + 456) = v14;
  *(_OWORD *)(a1 + 424) = v12;
  *(_OWORD *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v13;
  *(_OWORD *)(a1 + 40_Block_object_dispose((const void *)(v1 - 232), 8) = v11;
  __int128 v15 = *(_OWORD *)(a1 + 440);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a1 + 424);
  *(_OWORD *)(a1 + 60_Block_object_dispose((const void *)(v1 - 232), 8) = v15;
  *(void *)(a1 + 624) = v14;
  __int128 v16 = *(_OWORD *)(a1 + 376);
  *(_OWORD *)(a1 + 52_Block_object_dispose((const void *)(v1 - 232), 8) = *(_OWORD *)(a1 + 360);
  *(_OWORD *)(a1 + 544) = v16;
  __int128 v17 = *(_OWORD *)(a1 + 408);
  *(_OWORD *)(a1 + 56sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(a1 + 392);
  *(_OWORD *)(a1 + 576) = v17;
  __int128 v18 = *(_OWORD *)(a1 + 312);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a1 + 296);
  *(_OWORD *)(a1 + 48sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v18;
  __int128 v19 = *(_OWORD *)(a1 + 344);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a1 + 328);
  *(_OWORD *)(a1 + 512) = v19;
  sub_100E88F78((int64x2_t *)(a1 + 128), (unsigned __int8 *)a2, *((unsigned __int8 *)a2 + 232), (uint64_t)v20);
  sub_10046F680((void *)(a1 + 672), (uint64_t)v20);
  sub_10041385C(v20);
  sub_1004FFB14(a1);
}

void sub_1004FFB14(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183DCF8);
  }
  int v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, exiting manual pause",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    v5[0] = 0;
    __int128 v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, exiting manual pause",  v5,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSeriesPredictor::exitManualPause(const T *) [T = CLWorkoutSeriesPredictor::EWorkoutConfirmed]",  "%s\n",  v4);
  }

  sub_1004FDD9C(a1);
  sub_1004FDFD8(a1);
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1004FE2EC(a1, 17LL, Current);
}

void sub_1004FFCC4(uint64_t a1, __int128 *a2)
{
  __int128 v3 = *a2;
  __int128 v4 = a2[1];
  *(_OWORD *)(a1 + 264) = a2[2];
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 232), 8) = v4;
  *(_OWORD *)(a1 + 232) = v3;
  __int128 v5 = a2[3];
  __int128 v6 = a2[4];
  __int128 v7 = a2[6];
  *(_OWORD *)(a1 + 312) = a2[5];
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 232), 8) = v7;
  *(_OWORD *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v5;
  *(_OWORD *)(a1 + 296) = v6;
  __int128 v8 = a2[7];
  __int128 v9 = a2[8];
  __int128 v10 = a2[10];
  *(_OWORD *)(a1 + 376) = a2[9];
  *(_OWORD *)(a1 + 392) = v10;
  *(_OWORD *)(a1 + 344) = v8;
  *(_OWORD *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v9;
  __int128 v11 = a2[11];
  __int128 v12 = a2[12];
  __int128 v13 = a2[13];
  *(void *)(a1 + 456) = *((void *)a2 + 28);
  *(_OWORD *)(a1 + 424) = v12;
  *(_OWORD *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v13;
  *(_OWORD *)(a1 + 40_Block_object_dispose((const void *)(v1 - 232), 8) = v11;
  sub_100E88F78((int64x2_t *)(a1 + 128), (unsigned __int8 *)a2, *((unsigned __int8 *)a2 + 232), (uint64_t)v14);
  sub_10046F680((void *)(a1 + 672), (uint64_t)v14);
  sub_10041385C(v14);
  sub_1004FFD6C(a1);
}

void sub_1004FFD6C(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183DCF8);
  }
  int v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, exiting manual pause",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    v5[0] = 0;
    __int128 v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, exiting manual pause",  v5,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSeriesPredictor::exitManualPause(const T *) [T = CLWorkoutSeriesPredictor::ETransitionConfirmed]",  "%s\n",  v4);
  }

  sub_1004FDD9C(a1);
  sub_1004FDFD8(a1);
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1004FE2EC(a1, 17LL, Current);
}

void sub_1004FFF1C(uint64_t a1, __int128 *a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183DCF8);
  }
  __int128 v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, exiting manual pause into detected transition",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    LOWORD(v14) = 0;
    __int128 v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, exiting manual pause into detected transition",  &v14,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSeriesPredictor::enterSegmentDetectedFromManualPause(const EWorkoutConfirmed *)",  "%s\n",  v12);
  }

  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  __int128 v13 = *(_OWORD *)(a1 + 240);
  __int128 v6 = *(_OWORD *)(a1 + 440);
  __int128 v24 = *(_OWORD *)(a1 + 424);
  __int128 v25 = v6;
  uint64_t v26 = *(void *)(a1 + 456);
  __int128 v7 = *(_OWORD *)(a1 + 376);
  __int128 v20 = *(_OWORD *)(a1 + 360);
  __int128 v21 = v7;
  __int128 v8 = *(_OWORD *)(a1 + 408);
  __int128 v22 = *(_OWORD *)(a1 + 392);
  __int128 v23 = v8;
  __int128 v9 = *(_OWORD *)(a1 + 312);
  __int128 v16 = *(_OWORD *)(a1 + 296);
  __int128 v17 = v9;
  __int128 v10 = *(_OWORD *)(a1 + 344);
  __int128 v18 = *(_OWORD *)(a1 + 328);
  __int128 v19 = v10;
  __int128 v11 = *(_OWORD *)(a1 + 280);
  __int128 v14 = *(_OWORD *)(a1 + 264);
  __int128 v15 = v11;
  sub_1004FFA40(a1, a2);
  *(CFAbsoluteTime *)std::string buf = Current;
  CFAbsoluteTime v28 = Current;
  __int128 v29 = v13;
  CFAbsoluteTime v30 = Current;
  __int128 v40 = v23;
  __int128 v41 = v24;
  __int128 v42 = v25;
  __int128 v36 = v19;
  __int128 v37 = v20;
  __int128 v38 = v21;
  __int128 v39 = v22;
  __int128 v32 = v15;
  __int128 v33 = v16;
  __int128 v34 = v17;
  uint64_t v43 = v26;
  __int128 v35 = v18;
  __int128 v31 = v14;
  sub_100500188(a1, (uint64_t)buf);
}

__n128 sub_100500188(uint64_t a1, uint64_t a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183DCF8);
  }
  __int128 v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a2 + 120);
    uint64_t v6 = *(void *)(a2 + 128);
    uint64_t v7 = *(void *)(a2 + 8);
    *(_DWORD *)std::string buf = 134218496;
    uint64_t v32 = v5;
    __int16 v33 = 2048;
    uint64_t v34 = v6;
    __int16 v35 = 2048;
    uint64_t v36 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, auto-detected new workout, workoutType,%ld, workoutLocationType,%ld, detectionTime,%f",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    uint64_t v21 = *(void *)(a2 + 120);
    uint64_t v22 = *(void *)(a2 + 128);
    uint64_t v23 = *(void *)(a2 + 8);
    int v25 = 134218496;
    uint64_t v26 = v21;
    __int16 v27 = 2048;
    uint64_t v28 = v22;
    __int16 v29 = 2048;
    uint64_t v30 = v23;
    __int128 v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, auto-detected new workout, workoutType,%ld, workoutLocationType,%ld, detectionTime,%f",  &v25,  32);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSeriesPredictor::enterSegmentDetected(const ESegmentDetected *)",  "%s\n",  v24);
  }

  if (*(_BYTE *)(a1 + 114)) {
    BOOL v8 = 1;
  }
  else {
    BOOL v8 = *(void *)(a2 + 120) != 33LL;
  }
  *(_BYTE *)(a1 + 114) = v8;
  sub_100E89B98((void *)(a1 + 128), (__int128 *)(a2 + 8), (uint64_t)buf);
  sub_10046F680((void *)(a1 + 672), (uint64_t)buf);
  sub_10041385C(buf);
  sub_100AD869C(*(int64x2_t **)(a1 + 224), a2 + 8);
  __int128 v9 = *(_OWORD *)(a2 + 8);
  __int128 v10 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 232), 8) = v10;
  *(_OWORD *)(a1 + 232) = v9;
  __int128 v11 = *(_OWORD *)(a2 + 56);
  __int128 v12 = *(_OWORD *)(a2 + 72);
  __int128 v13 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 232), 8) = v13;
  *(_OWORD *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v11;
  *(_OWORD *)(a1 + 296) = v12;
  __int128 v14 = *(_OWORD *)(a2 + 120);
  __int128 v15 = *(_OWORD *)(a2 + 136);
  __int128 v16 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 392) = v16;
  *(_OWORD *)(a1 + 344) = v14;
  *(_OWORD *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v15;
  __int128 v17 = *(_OWORD *)(a2 + 184);
  __int128 v18 = *(_OWORD *)(a2 + 200);
  __int128 v19 = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 456) = *(void *)(a2 + 232);
  *(_OWORD *)(a1 + 424) = v18;
  *(_OWORD *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v19;
  *(_OWORD *)(a1 + 40_Block_object_dispose((const void *)(v1 - 232), 8) = v17;
  *(void *)(a1 + 84sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(a1 + 232);
  sub_1004FE2EC(a1, 18LL, *(double *)a2);
  return result;
}

void sub_100500440(uint64_t a1, double *a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183DCF8);
  }
  __int128 v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutSeriesPredictor, auto-detected current confirmed workout, removing detected transition",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183DCF8);
    }
    v19[0] = 0;
    __int128 v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutSeriesPredictor, auto-detected current confirmed workout, removing detected transition",  v19,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutSeriesPredictor::returnToConfirmedWorkout(const ESegmentDetected *)",  "%s\n",  v18);
  }

  sub_100E89C18((void *)(a1 + 128), (uint64_t)(a2 + 1), (uint64_t)buf);
  sub_10046F680((void *)(a1 + 672), (uint64_t)buf);
  sub_10041385C(buf);
  sub_100AD869C(*(int64x2_t **)(a1 + 224), (uint64_t)(a2 + 1));
  unint64_t v5 = *(void *)(a1 + 712) + *(void *)(a1 + 704) - 1LL;
  unint64_t v6 = *(void *)(*(void *)(a1 + 680) + 8 * (v5 / 0x11)) + 232 * (v5 % 0x11);
  __int128 v8 = *(_OWORD *)(v6 + 16);
  __int128 v7 = *(_OWORD *)(v6 + 32);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)v6;
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 232), 8) = v8;
  *(_OWORD *)(a1 + 264) = v7;
  __int128 v9 = *(_OWORD *)(v6 + 96);
  __int128 v11 = *(_OWORD *)(v6 + 48);
  __int128 v10 = *(_OWORD *)(v6 + 64);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(v6 + 80);
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 232), 8) = v9;
  *(_OWORD *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v11;
  *(_OWORD *)(a1 + 296) = v10;
  __int128 v12 = *(_OWORD *)(v6 + 160);
  __int128 v14 = *(_OWORD *)(v6 + 112);
  __int128 v13 = *(_OWORD *)(v6 + 128);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(v6 + 144);
  *(_OWORD *)(a1 + 392) = v12;
  *(_OWORD *)(a1 + 344) = v14;
  *(_OWORD *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v13;
  __int128 v16 = *(_OWORD *)(v6 + 192);
  __int128 v15 = *(_OWORD *)(v6 + 208);
  __int128 v17 = *(_OWORD *)(v6 + 176);
  *(void *)(a1 + 456) = *(void *)(v6 + 224);
  *(_OWORD *)(a1 + 424) = v16;
  *(_OWORD *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v15;
  *(_OWORD *)(a1 + 40_Block_object_dispose((const void *)(v1 - 232), 8) = v17;
  *(CFAbsoluteTime *)(a1 + 84sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = CFAbsoluteTimeGetCurrent();
  sub_1004FE2EC(a1, 18LL, *a2);
}

uint64_t sub_1005006AC(uint64_t a1, double *a2)
{
  uint64_t v28 = 0LL;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  uint64_t v4 = *(void *)(a1 + 712);
  if (v4)
  {
    unint64_t v5 = *(void *)(*(void *)(a1 + 680) + 8 * ((v4 + *(void *)(a1 + 704) - 1) / 0x11uLL))
       + 232 * ((v4 + *(void *)(a1 + 704) - 1) % 0x11uLL);
    __int128 v25 = *(_OWORD *)(v5 + 176);
    __int128 v26 = *(_OWORD *)(v5 + 192);
    __int128 v27 = *(_OWORD *)(v5 + 208);
    uint64_t v28 = *(void *)(v5 + 224);
    __int128 v21 = *(_OWORD *)(v5 + 112);
    __int128 v22 = *(_OWORD *)(v5 + 128);
    __int128 v23 = *(_OWORD *)(v5 + 144);
    __int128 v24 = *(_OWORD *)(v5 + 160);
    __int128 v17 = *(_OWORD *)(v5 + 48);
    __int128 v18 = *(_OWORD *)(v5 + 64);
    __int128 v19 = *(_OWORD *)(v5 + 80);
    __int128 v20 = *(_OWORD *)(v5 + 96);
    __int128 v14 = *(_OWORD *)v5;
    __int128 v15 = *(_OWORD *)(v5 + 16);
    __int128 v16 = *(_OWORD *)(v5 + 32);
  }

  *(void *)(a1 + 456) = v28;
  __int128 v6 = v15;
  *(_OWORD *)(a1 + 232) = v14;
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 232), 8) = v6;
  __int128 v7 = v27;
  *(_OWORD *)(a1 + 424) = v26;
  *(_OWORD *)(a1 + 44sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v7;
  __int128 v8 = v23;
  *(_OWORD *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v22;
  *(_OWORD *)(a1 + 376) = v8;
  __int128 v9 = v25;
  *(_OWORD *)(a1 + 392) = v24;
  *(_OWORD *)(a1 + 40_Block_object_dispose((const void *)(v1 - 232), 8) = v9;
  __int128 v10 = v19;
  *(_OWORD *)(a1 + 296) = v18;
  *(_OWORD *)(a1 + 312) = v10;
  __int128 v11 = v21;
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 232), 8) = v20;
  *(_OWORD *)(a1 + 344) = v11;
  __int128 v12 = v17;
  *(_OWORD *)(a1 + 264) = v16;
  *(_OWORD *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v12;
  *(double *)(a1 + 24sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *a2;
  sub_1004FDFD8(a1);
  sub_1004FE2EC(a1, 15LL, *a2);
  return sub_1004FF444(a1);
}

void sub_100500878(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

void *sub_1005008AC(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = &off_10183DD28;
  result[1] = v3;
  return result;
}

uint64_t sub_1005008E0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183DD28;
  a2[1] = v2;
  return result;
}

uint64_t sub_1005008FC(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 8) + 720LL);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 56LL))(result);
  }
  return result;
}

uint64_t sub_100500918(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100500954()
{
}

void sub_100500C68(id a1)
{
  qword_1019346C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "PredictedWalkDistance");
}

uint64_t sub_100500C94()
{
  if (qword_1019A10E8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A10E8 + 8LL))(qword_1019A10E8);
  }
  if (qword_1019A10F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A10F0 + 8LL))(qword_1019A10F0);
  }
  if (qword_1019A10F8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A10F8 + 8LL))(qword_1019A10F8);
  }
  if (qword_1019A1100) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1100 + 8LL))(qword_1019A1100);
  }
  if (qword_1019A1108) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1108 + 8LL))(qword_1019A1108);
  }
  if (qword_1019A1110) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1110 + 8LL))(qword_1019A1110);
  }
  if (qword_1019A1118) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1118 + 8LL))(qword_1019A1118);
  }
  if (qword_1019A1120) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1120 + 8LL))(qword_1019A1120);
  }
  if (qword_1019A1128) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1128 + 8LL))(qword_1019A1128);
  }
  if (qword_1019A1130) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1130 + 8LL))(qword_1019A1130);
  }
  if (qword_1019A1138) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1138 + 8LL))(qword_1019A1138);
  }
  uint64_t result = qword_1019A1140;
  if (qword_1019A1140) {
    return (*(uint64_t (**)(uint64_t))(*(void *)qword_1019A1140 + 8LL))(qword_1019A1140);
  }
  return result;
}

void sub_100500DC8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_101996449 & 1) == 0)
  {
    byte_101996449 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion( (wireless_diagnostics::google::protobuf::internal *)0x1E9808,  2005000,  (int)"/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  a4);
    sub_100A3FD08(v4, v5, v6, v7);
    __int128 v8 = (char *)operator new(0x68uLL);
    *(void *)__int128 v8 = off_10183DDC8;
    *(_OWORD *)(v8 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
    *(_OWORD *)(v8 + 24) = 0u;
    *(_OWORD *)(v8 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
    *(_OWORD *)(v8 + 56) = 0u;
    *(_OWORD *)(v8 + sub_1000A56E8(v1 + 72) = 0u;
    *(_OWORD *)(v8 + 84) = 0u;
    qword_1019A10E8 = (uint64_t)v8;
    __int128 v9 = (char *)operator new(0x40uLL);
    *(void *)__int128 v9 = off_10183DE40;
    *(_OWORD *)(v9 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *(_OWORD *)(v9 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
    *((void *)v9 + 7) = 0LL;
    qword_1019A10F0 = (uint64_t)v9;
    __int128 v10 = (char *)operator new(0x50uLL);
    *(void *)__int128 v10 = off_10183DEB8;
    *((void *)v10 + 1) = 0LL;
    *((_DWORD *)v10 + 4) = 0;
    v10[20] = 0;
    *(_OWORD *)(v10 + 24) = 0u;
    *(_OWORD *)(v10 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
    *(_OWORD *)(v10 + 56) = 0u;
    *((_DWORD *)v10 + 1_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
    qword_1019A10F8 = (uint64_t)v10;
    __int128 v11 = (char *)operator new(0x38uLL);
    *(void *)__int128 v11 = off_10183DF30;
    *(_OWORD *)(v11 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
    *(_OWORD *)(v11 + 24) = 0u;
    *(_OWORD *)(v11 + 36) = 0u;
    qword_1019A1100 = (uint64_t)v11;
    __int128 v12 = (char *)operator new(0x38uLL);
    v12[16] = 0;
    *(void *)__int128 v12 = &off_10183DFA8;
    *((void *)v12 + 1) = 0LL;
    *(_OWORD *)(v12 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
    *(_OWORD *)(v12 + 36) = 0u;
    qword_1019A1108 = (uint64_t)v12;
    __int128 v13 = (char *)operator new(0x38uLL);
    *(void *)__int128 v13 = &off_10183E020;
    *(_OWORD *)(v13 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
    *(_OWORD *)(v13 + 24) = 0u;
    *(_OWORD *)(v13 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
    qword_1019A1110 = (uint64_t)v13;
    __int128 v14 = operator new(0x20uLL);
    v14[1] = 0LL;
    void v14[2] = 0LL;
    *__int128 v14 = off_10183E098;
    *((_DWORD *)v14 + 6) = 0;
    qword_1019A1118 = (uint64_t)v14;
    __int128 v15 = operator new(0x28uLL);
    void *v15 = off_10183E110;
    v15[1] = 0LL;
    void v15[2] = 0LL;
    void v15[3] = 0LL;
    *((_DWORD *)v15 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
    qword_1019A1120 = (uint64_t)v15;
    __int128 v16 = operator new(0x28uLL);
    void *v16 = off_10183E188;
    v16[1] = 0LL;
    v16[2] = 0LL;
    void v16[3] = 0LL;
    *((_DWORD *)v16 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
    qword_1019A1128 = (uint64_t)v16;
    __int128 v17 = (char *)operator new(0x38uLL);
    *(void *)__int128 v17 = off_10183E200;
    *(_OWORD *)(v17 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
    *(_OWORD *)(v17 + 24) = 0u;
    *(_OWORD *)(v17 + 36) = 0u;
    qword_1019A1130 = (uint64_t)v17;
    __int128 v18 = operator new(0x20uLL);
    *__int128 v18 = off_10183E278;
    v18[1] = 0LL;
    *((_BYTE *)v18 + 16) = 0;
    *(void *)((char *)v18 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
    qword_1019A1138 = (uint64_t)v18;
    __int128 v19 = (char *)operator new(0x28uLL);
    *(void *)(v19 + 2_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
    *((_DWORD *)v19 + 9) = 0;
    *((void *)v19 + 1) = 0LL;
    *((void *)v19 + 2) = 0LL;
    *(void *)__int128 v19 = off_10183E2F0;
    v19[24] = 0;
    qword_1019A1140 = (uint64_t)v19;
    *((void *)v11 + 1) = v10;
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = v9;
    *((void *)v12 + 1) = v10;
    *((void *)v13 + 1) = v12;
    wireless_diagnostics::google::protobuf::internal::OnShutdown( (wireless_diagnostics::google::protobuf::internal *)sub_100500C94,  v20);
  }

double sub_10050107C(uint64_t a1)
{
  *(void *)a1 = off_10183DDC8;
  double result = 0.0;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + sub_1000A56E8(v1 + 72) = 0u;
  *(_OWORD *)(a1 + 84) = 0u;
  return result;
}

double sub_1005010A8(uint64_t a1)
{
  *(void *)a1 = off_10183DF30;
  double result = 0.0;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  return result;
}

double sub_1005010C8(uint64_t a1)
{
  *(void *)a1 = &off_10183E020;
  double result = 0.0;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  return result;
}

uint64_t sub_1005010E8(uint64_t result)
{
  *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)double result = off_10183E098;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100501100(uint64_t result)
{
  *(void *)double result = off_10183E110;
  *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100501118(uint64_t result)
{
  *(void *)double result = off_10183E188;
  *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_100501130(uint64_t a1)
{
  *(void *)a1 = off_10183E200;
  double result = 0.0;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  return result;
}

uint64_t sub_100501150(uint64_t result)
{
  *(void *)double result = off_10183E278;
  *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(_BYTE *)(result + 16) = 0;
  *(_DWORD *)(result + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100501168(uint64_t result)
{
  *(void *)(result + 32) = 0LL;
  *(_DWORD *)(result + 2_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)double result = off_10183E2F0;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

BOOL sub_100501188(unsigned int a1)
{
  return a1 < 0xA;
}

BOOL sub_100501194(unsigned int a1)
{
  BOOL result = 1LL;
  if (a1 > 0x32 || ((1LL << a1) & 0x4000002000403LL) == 0) {
    return a1 == 75;
  }
  return result;
}

uint64_t sub_1005011D4(unsigned int a1)
{
  return (a1 < 0x10) & (0x807Fu >> a1);
}

void sub_1005011EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v19,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  713LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v19,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v18, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }

  int v5 = *(_DWORD *)(a2 + 96);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    uint64_t v11 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 96) |= 1u;
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v11;
    int v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  uint64_t v12 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 96) |= 2u;
  *(void *)(a1 + 16) = v12;
  int v5 = *(_DWORD *)(a2 + 96);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }

void sub_1005013FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100501414(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183DDC8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100501424(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183DDC8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_100501444(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A10E8;
  if (!qword_1019A10E8)
  {
    sub_100500DC8(0LL, a2, a3, a4);
    return qword_1019A10E8;
  }

  return result;
}

double sub_100501470()
{
  uint64_t v0 = (char *)operator new(0x68uLL);
  *(void *)uint64_t v0 = off_10183DDC8;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + sub_1000A56E8(v1 + 72) = 0u;
  *(_OWORD *)(v0 + 84) = 0u;
  return result;
}

uint64_t sub_1005014B0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 96);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  }

  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + sub_1000A56E8(v1 + 72) = 0LL;
    *(void *)(result + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
    *(_DWORD *)(result + 8_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  }

  *(_DWORD *)(result + 96) = 0;
  return result;
}

uint64_t sub_1005014E8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 72);
  uint64_t v6 = (unint64_t *)(a1 + 80);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_59;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v30) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = *(void *)v30;
        *(_DWORD *)(a1 + 96) |= 1u;
        unsigned int v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_59;
        }
LABEL_15:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v30) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v30;
        *(_DWORD *)(a1 + 96) |= 2u;
        uint64_t v11 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v30) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v30;
        *(_DWORD *)(a1 + 96) |= 4u;
        uint64_t v12 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v30) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v30;
        *(_DWORD *)(a1 + 96) |= 8u;
        uint64_t v13 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v30) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)v30;
        *(_DWORD *)(a1 + 96) |= 0x10u;
        uint64_t v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v30) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = *(void *)v30;
        *(_DWORD *)(a1 + 96) |= 0x20u;
        uint64_t v15 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v15 + 1;
LABEL_40:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v30) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 56) = *(void *)v30;
        *(_DWORD *)(a1 + 96) |= 0x40u;
        uint64_t v16 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v16 + 1;
LABEL_45:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v30) & 1) != 0)
        {
          *(void *)(a1 + 64) = *(void *)v30;
          *(_DWORD *)(a1 + 96) |= 0x80u;
          char v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          if ((unint64_t)v18 < v17 && *v18 == 72)
          {
            __int128 v19 = v18 + 1;
            *((void *)this + 1) = v19;
LABEL_51:
            if ((unint64_t)v19 >= v17 || *v19 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
              if (!(_DWORD)result) {
                return result;
              }
              __int128 v20 = (_BYTE *)*((void *)this + 1);
              unint64_t v17 = *((void *)this + 2);
            }

            else
            {
              unsigned int *v5 = *v19;
              __int128 v20 = v19 + 1;
              *((void *)this + 1) = v20;
            }

            *(_DWORD *)(a1 + 96) |= 0x100u;
            if ((unint64_t)v20 < v17 && *v20 == 80)
            {
              __int128 v21 = v20 + 1;
              *((void *)this + 1) = v21;
LABEL_68:
              if ((unint64_t)v21 >= v17 || *v21 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v30);
                if (!(_DWORD)result) {
                  return result;
                }
                unsigned int v26 = v30[0];
              }

              else
              {
                unsigned int v26 = *v21;
                *((void *)this + 1) = v21 + 1;
              }

              if (sub_100501194(v26))
              {
                *(_DWORD *)(a1 + 96) |= 0x200u;
                *(_DWORD *)(a1 + 76) = v26;
              }

              __int128 v27 = (_BYTE *)*((void *)this + 1);
              unint64_t v22 = *((void *)this + 2);
              if ((unint64_t)v27 < v22 && *v27 == 88)
              {
                __int128 v23 = v27 + 1;
                *((void *)this + 1) = v23;
LABEL_78:
                if ((unint64_t)v23 >= v22 || *v23 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  uint64_t v28 = (_BYTE *)*((void *)this + 1);
                  unint64_t v22 = *((void *)this + 2);
                }

                else
                {
                  unint64_t *v6 = *v23;
                  uint64_t v28 = v23 + 1;
                  *((void *)this + 1) = v28;
                }

                *(_DWORD *)(a1 + 96) |= 0x400u;
                if ((unint64_t)v28 < v22 && *v28 == 96)
                {
                  __int128 v24 = v28 + 1;
                  *((void *)this + 1) = v24;
LABEL_86:
                  if ((unint64_t)v24 >= v22 || *v24 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v30);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    unsigned int v29 = v30[0];
                  }

                  else
                  {
                    unsigned int v29 = *v24;
                    *((void *)this + 1) = v24 + 1;
                  }

                  if (v29 <= 5)
                  {
                    *(_DWORD *)(a1 + 96) |= 0x800u;
                    *(_DWORD *)(a1 + 8_Block_object_dispose((const void *)(v1 - 232), 8) = v29;
                  }

                  if (*((void *)this + 1) == *((void *)this + 2)
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
                    uint64_t result = 1LL;
                    *((_BYTE *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_59;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_59;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_59;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_35;
        }
        goto LABEL_59;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_40;
        }
        goto LABEL_59;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_45;
        }
        goto LABEL_59;
      case 9u:
        int v9 = TagFallback & 7;
        __int128 v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_51;
      case 0xAu:
        int v9 = TagFallback & 7;
        __int128 v21 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_68;
      case 0xBu:
        int v9 = TagFallback & 7;
        __int128 v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_78;
      case 0xCu:
        int v9 = TagFallback & 7;
        __int128 v24 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_86;
      default:
        int v9 = TagFallback & 7;
LABEL_59:
        if (v9 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100501A48( uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 96);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }

uint64_t sub_100501BBC(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 96);
  if ((_BYTE)v3)
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
      if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 96);
      }

      else
      {
        int v7 = 2;
      }

      uint64_t v5 = (v7 + v5);
      if ((v3 & 0x200) == 0)
      {
LABEL_21:
        if ((v3 & 0x400) == 0) {
          goto LABEL_22;
        }
        goto LABEL_34;
      }
    }

    else if ((v3 & 0x200) == 0)
    {
      goto LABEL_21;
    }

    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }

    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 96);
    }

    else
    {
      int v9 = 2;
    }

    uint64_t v5 = (v9 + v5);
    if ((v3 & 0x400) == 0)
    {
LABEL_22:
      if ((v3 & 0x800) == 0) {
        goto LABEL_41;
      }
LABEL_35:
      unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 11;
      }

      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
      }

      else
      {
        int v11 = 2;
      }

      uint64_t v5 = (v11 + v5);
      goto LABEL_41;
    }

void sub_100501D10(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100501D5C()
{
  return 1LL;
}

void *sub_100501D64@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.Position");
}

double sub_100501D74(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  1069LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 60);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 60) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 60) |= 1u;
      *(double *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = result;
      int v6 = *(_DWORD *)(a2 + 60);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }

    else if ((*(_BYTE *)(a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 2u;
    *(double *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a2 + 60);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_15;
    }

void sub_100501EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100501EBC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183DE40;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100501ECC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183DE40;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100501EEC()
{
  uint64_t v0 = (char *)operator new(0x40uLL);
  *(void *)uint64_t v0 = off_10183DE40;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *((void *)v0 + 7) = 0LL;
  return result;
}

uint64_t sub_100501F24(uint64_t result)
{
  if (*(_BYTE *)(result + 60))
  {
    *(_OWORD *)(result + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  }

  *(_DWORD *)(result + 6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  return result;
}

uint64_t sub_100501F44( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_39;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v14;
        *(_DWORD *)(a1 + 60) |= 1u;
        unsigned int v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_39;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 60) |= 2u;
        int v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = v14;
        *(_DWORD *)(a1 + 60) |= 4u;
        unsigned int v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = v14;
        *(_DWORD *)(a1 + 60) |= 8u;
        int v11 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v11 + 1;
LABEL_29:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v14;
        *(_DWORD *)(a1 + 60) |= 0x10u;
        uint64_t v12 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v12 + 1;
LABEL_34:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = v14;
        *(_DWORD *)(a1 + 60) |= 0x20u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }

        *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_39;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_39;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_29;
        }
        goto LABEL_39;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_34;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_39:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }

    return result;
  }

uint64_t sub_100502210( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 60);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  int v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }

uint64_t sub_1005022DC(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 60);
  if (*(_BYTE *)(a1 + 60))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x20) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 56) = v1;
  return v1;
}

double sub_100502338(uint64_t a1, void *lpsrc)
{
  return sub_100501D74(a1, (uint64_t)lpsrc);
}

uint64_t sub_100502384()
{
  return 1LL;
}

void *sub_10050238C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.Velocity");
}

void sub_10050239C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v16,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  1500LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v16,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v15, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }

  int v5 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    uint64_t v8 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v8;
    int v5 = *(_DWORD *)(a2 + 72);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  int v9 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 16) = v9;
  int v5 = *(_DWORD *)(a2 + 72);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

void sub_10050252C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100502544(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183DEB8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100502554(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183DEB8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100502574()
{
  uint64_t v0 = (char *)operator new(0x50uLL);
  *(void *)uint64_t v0 = off_10183DEB8;
  *((void *)v0 + 1) = 0LL;
  *((_DWORD *)v0 + 4) = 0;
  v0[20] = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *((_DWORD *)v0 + 1_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  return result;
}

uint64_t sub_1005025B4(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 72);
  if ((_BYTE)v1)
  {
    *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
    *(_DWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  }

  if ((v1 & 0xFF00) != 0) {
    *(void *)(result + 56) = 0LL;
  }
  *(_DWORD *)(result + sub_1000A56E8(v1 + 72) = 0;
  return result;
}

uint64_t sub_1005025F0( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  uint64_t v6 = (unint64_t *)(a1 + 24);
  uint64_t v7 = (unint64_t *)(a1 + 48);
  uint64_t v8 = (unint64_t *)(a1 + 56);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v14 = (_BYTE *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }

        else
        {
          unint64_t *v5 = *v13;
          uint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }

        *(_DWORD *)(a1 + 72) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 21)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_37;
        }

        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_28;
        }
LABEL_37:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v33) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 16) = v33[0];
        *(_DWORD *)(a1 + 72) |= 2u;
        __int128 v23 = (_BYTE *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        uint64_t v16 = v23 + 1;
        *((void *)this + 1) = v16;
LABEL_41:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v33);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v24 = v33[0];
          __int128 v25 = (_BYTE *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }

        else
        {
          unsigned int v24 = *v16;
          __int128 v25 = v16 + 1;
          *((void *)this + 1) = v25;
        }

        *(_BYTE *)(a1 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v24 != 0;
        *(_DWORD *)(a1 + 72) |= 4u;
        unint64_t v17 = v25 + 1;
        *((void *)this + 1) = v17;
LABEL_49:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v33);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v26 = v33[0];
          __int128 v27 = (_BYTE *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }

        else
        {
          unsigned int v26 = *v17;
          __int128 v27 = v17 + 1;
          *((void *)this + 1) = v27;
        }

        *(_DWORD *)(a1 + 64) = v26;
        *(_DWORD *)(a1 + 72) |= 8u;
        char v18 = v27 + 1;
        *((void *)this + 1) = v18;
LABEL_57:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v28 = (_BYTE *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }

        else
        {
          unint64_t *v6 = *v18;
          uint64_t v28 = v18 + 1;
          *((void *)this + 1) = v28;
        }

        *(_DWORD *)(a1 + 72) |= 0x10u;
        *((void *)this + 1) = v28 + 1;
LABEL_65:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v33) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = *(void *)v33;
        *(_DWORD *)(a1 + 72) |= 0x20u;
        unsigned int v29 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v29 + 1;
LABEL_69:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v33) & 1) != 0)
        {
          *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)v33;
          *(_DWORD *)(a1 + 72) |= 0x40u;
          uint64_t v30 = (_BYTE *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
          if ((unint64_t)v30 < v19 && *v30 == 64)
          {
            __int128 v20 = v30 + 1;
            *((void *)this + 1) = v20;
LABEL_73:
            if ((unint64_t)v20 >= v19 || *v20 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
              if (!(_DWORD)result) {
                return result;
              }
              __int128 v31 = (_BYTE *)*((void *)this + 1);
              unint64_t v19 = *((void *)this + 2);
            }

            else
            {
              unint64_t *v7 = *v20;
              __int128 v31 = v20 + 1;
              *((void *)this + 1) = v31;
            }

            *(_DWORD *)(a1 + 72) |= 0x80u;
            if ((unint64_t)v31 < v19 && *v31 == 72)
            {
              __int128 v21 = v31 + 1;
              *((void *)this + 1) = v21;
LABEL_81:
              if ((unint64_t)v21 >= v19 || *v21 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v8);
                if (!(_DWORD)result) {
                  return result;
                }
                uint64_t v32 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v19 = *((void *)this + 2);
              }

              else
              {
                *uint64_t v8 = *v21;
                uint64_t v32 = (unsigned __int8 *)(v21 + 1);
                *((void *)this + 1) = v32;
              }

              *(_DWORD *)(a1 + 72) |= 0x100u;
              if (v32 == (unsigned __int8 *)v19
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
                uint64_t result = 1LL;
                *((_BYTE *)this + 36) = 1;
                return result;
              }
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v11 = TagFallback & 7;
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_41;
      case 4u:
        int v11 = TagFallback & 7;
        unint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_49;
      case 5u:
        int v11 = TagFallback & 7;
        char v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_57;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_65;
        }
        goto LABEL_28;
      case 7u:
        int v11 = TagFallback & 7;
        if (v11 == 1) {
          goto LABEL_69;
        }
        goto LABEL_28;
      case 8u:
        int v11 = TagFallback & 7;
        __int128 v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_73;
      case 9u:
        int v11 = TagFallback & 7;
        __int128 v21 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_81;
      default:
        int v11 = TagFallback & 7;
LABEL_28:
        if (v11 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100502A90( uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(float *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }

uint64_t sub_100502BB0(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      unsigned int v6 = v4 + 2;
    }
    else {
      unsigned int v6 = v4;
    }
    if ((v3 & 8) != 0)
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }

      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 72);
      }

      else
      {
        int v8 = 2;
      }

      v6 += v8;
    }

    if ((v3 & 0x10) != 0)
    {
      v6 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24),  a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }

    unsigned int v9 = v6 + 9;
    if ((v3 & 0x20) == 0) {
      unsigned int v9 = v6;
    }
    if ((v3 & 0x40) != 0) {
      uint64_t v5 = v9 + 9;
    }
    else {
      uint64_t v5 = v9;
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v5 = v5
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  if ((v3 & 0x100) != 0) {
    uint64_t v5 = v5
  }
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 56),  a2)
       + 1;
  *(_DWORD *)(a1 + 6_Block_object_dispose((const void *)(v1 - 232), 8) = v5;
  return v5;
}

void sub_100502CAC(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100502CF8()
{
  return 1LL;
}

void *sub_100502D00@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.Time");
}

void sub_100502D10(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  1852LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 48);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) != 0)
    {
      *(_DWORD *)(a1 + 48) |= 1u;
      unsigned int v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        unsigned int v6 = (char *)operator new(0x50uLL);
        *(void *)unsigned int v6 = off_10183DEB8;
        *((void *)v6 + 1) = 0LL;
        *((_DWORD *)v6 + 4) = 0;
        v6[20] = 0;
        *(_OWORD *)(v6 + 24) = 0u;
        *(_OWORD *)(v6 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
        *(_OWORD *)(v6 + 56) = 0u;
        *((_DWORD *)v6 + 1_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
        *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A1100 + 8);
      }
      sub_10050239C((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 48);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }

    else if ((*(_BYTE *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }

    *(_DWORD *)(a1 + 48) |= 2u;
    int v8 = *(char **)(a1 + 16);
    if (!v8)
    {
      int v8 = (char *)operator new(0x68uLL);
      *(void *)int v8 = off_10183DDC8;
      *(_OWORD *)(v8 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *(_OWORD *)(v8 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
      *(_OWORD *)(v8 + 56) = 0u;
      *(_OWORD *)(v8 + sub_1000A56E8(v1 + 72) = 0u;
      *(_OWORD *)(v8 + 84) = 0u;
      *(void *)(a1 + 16) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A1100 + 16);
    }
    sub_1005011EC((uint64_t)v8, v9);
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    }

void sub_100502F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100502F20(void *result)
{
  if ((void *)qword_1019A1100 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t result = (void *)v1[3];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100502F90(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183DF30;
  sub_100502F20(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100502FC0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183DF30;
  sub_100502F20(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

uint64_t sub_100502FF4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A1100;
  if (!qword_1019A1100)
  {
    sub_100500DC8(0LL, a2, a3, a4);
    return qword_1019A1100;
  }

  return result;
}

double sub_100503020()
{
  uint64_t v0 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v0 = off_10183DF30;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 36) = 0u;
  return result;
}

uint64_t sub_100503054(uint64_t result)
{
  LOBYTE(v1) = *(_BYTE *)(result + 48);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(result + 48) & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        int v3 = *(_DWORD *)(v2 + 72);
        if ((_BYTE)v3)
        {
          *(void *)(v2 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
          *(_DWORD *)(v2 + 16) = 0;
          *(_BYTE *)(v2 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
          *(_DWORD *)(v2 + 64) = 0;
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
        }

        if ((v3 & 0xFF00) != 0) {
          *(void *)(v2 + 56) = 0LL;
        }
        *(_DWORD *)(v2 + sub_1000A56E8(v1 + 72) = 0;
        int v1 = *(_DWORD *)(result + 48);
      }
    }

    if ((v1 & 2) != 0)
    {
      uint64_t v4 = *(void *)(result + 16);
      if (v4)
      {
        int v5 = *(_DWORD *)(v4 + 96);
        if ((_BYTE)v5)
        {
          *(_OWORD *)(v4 + 56) = 0u;
          *(_OWORD *)(v4 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
        }

        if ((v5 & 0xFF00) != 0)
        {
          *(void *)(v4 + sub_1000A56E8(v1 + 72) = 0LL;
          *(void *)(v4 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
          *(_DWORD *)(v4 + 8_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
        }

        *(_DWORD *)(v4 + 96) = 0;
        int v1 = *(_DWORD *)(result + 48);
      }
    }

    if ((v1 & 4) != 0)
    {
      uint64_t v6 = *(void *)(result + 24);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 60))
        {
          *(_OWORD *)(v6 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
          *(_OWORD *)(v6 + 24) = 0u;
          *(_OWORD *)(v6 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
        }

        *(_DWORD *)(v6 + 6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
      }
    }

    *(void *)(result + 32) = 0LL;
    *(_DWORD *)(result + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  }

  *(_DWORD *)(result + 4_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  return result;
}

uint64_t sub_100503120( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 32);
  while (1)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        uint64_t v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x50uLL);
          *(void *)uint64_t v9 = off_10183DEB8;
          *((void *)v9 + 1) = 0LL;
          *((_DWORD *)v9 + 4) = 0;
          v9[20] = 0;
          *(_OWORD *)(v9 + 24) = 0u;
          *(_OWORD *)(v9 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
          *(_OWORD *)(v9 + 56) = 0u;
          *((_DWORD *)v9 + 1_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
          *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v9;
        }

        char v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v43)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v43 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0LL;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        __int128 v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
        goto LABEL_35;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
LABEL_35:
        *(_DWORD *)(a1 + 48) |= 2u;
        unint64_t v22 = *(char **)(a1 + 16);
        if (!v22)
        {
          unint64_t v22 = (char *)operator new(0x68uLL);
          *(void *)unint64_t v22 = off_10183DDC8;
          *(_OWORD *)(v22 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
          *(_OWORD *)(v22 + 24) = 0u;
          *(_OWORD *)(v22 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
          *(_OWORD *)(v22 + 56) = 0u;
          *(_OWORD *)(v22 + sub_1000A56E8(v1 + 72) = 0u;
          *(_OWORD *)(v22 + 84) = 0u;
          *(void *)(a1 + 16) = v22;
        }

        __int128 v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v43)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v43 = *v23;
          *((void *)this + 1) = v23 + 1;
        }

        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0LL;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)this + 14) = v29;
        }
        uint64_t v30 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v30 + 1;
LABEL_49:
        *(_DWORD *)(a1 + 48) |= 4u;
        __int128 v31 = *(char **)(a1 + 24);
        if (!v31)
        {
          __int128 v31 = (char *)operator new(0x40uLL);
          *(void *)__int128 v31 = off_10183DE40;
          *(_OWORD *)(v31 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
          *(_OWORD *)(v31 + 24) = 0u;
          *(_OWORD *)(v31 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
          *((void *)v31 + 7) = 0LL;
          *(void *)(a1 + 24) = v31;
        }

        uint64_t v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v43)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v43 = *v32;
          *((void *)this + 1) = v32 + 1;
        }

        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0LL;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v19) {
          *((_DWORD *)this + 14) = v38;
        }
        __int128 v39 = (_BYTE *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v39 < v11 && *v39 == 32)
        {
          uint64_t v12 = v39 + 1;
          *((void *)this + 1) = v12;
LABEL_63:
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
            if (!(_DWORD)result) {
              return result;
            }
            __int128 v40 = (_BYTE *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
          }

          else
          {
            unint64_t *v5 = *v12;
            __int128 v40 = v12 + 1;
            *((void *)this + 1) = v40;
          }

          *(_DWORD *)(a1 + 48) |= 8u;
          if ((unint64_t)v40 < v11 && *v40 == 40)
          {
            unsigned int v13 = v40 + 1;
            *((void *)this + 1) = v13;
LABEL_71:
            if ((unint64_t)v13 >= v11 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v42 = v43;
            }

            else
            {
              unsigned int v42 = *v13;
              *((void *)this + 1) = v13 + 1;
            }

            if (v42 <= 4)
            {
              *(_DWORD *)(a1 + 48) |= 0x10u;
              *(_DWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v42;
            }

            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }
        }

        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_49;
        }
        goto LABEL_22;
      case 4u:
        int v8 = TagFallback & 7;
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_63;
      case 5u:
        int v8 = TagFallback & 7;
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_71;
      default:
        int v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100503618( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A1100 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A1100 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }

uint64_t sub_1005036F8(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_35;
  }

  if ((*(_BYTE *)(a1 + 48) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 48) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A1100 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100502BB0(v5, a2);
  int v7 = (int)v6;
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A1100 + 16);
    }
    char v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100501BBC(v9, a2);
    int v11 = (int)v10;
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 48);
  }

void sub_100503868(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_1005038B4()
{
  return 1LL;
}

void *sub_1005038BC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.Fix");
}

void sub_1005038CC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v14,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  2199LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v14,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 48);
  if (!(_BYTE)v5) {
    return;
  }
  if ((*(_BYTE *)(a2 + 48) & 1) != 0)
  {
    char v7 = *(_BYTE *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(_BYTE *)(a1 + 16) = v7;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }

  else if ((*(_BYTE *)(a2 + 48) & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 48) |= 2u;
  int v8 = *(char **)(a1 + 8);
  if (!v8)
  {
    int v8 = (char *)operator new(0x50uLL);
    *(void *)int v8 = off_10183DEB8;
    *((void *)v8 + 1) = 0LL;
    *((_DWORD *)v8 + 4) = 0;
    v8[20] = 0;
    *(_OWORD *)(v8 + 24) = 0u;
    *(_OWORD *)(v8 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
    *(_OWORD *)(v8 + 56) = 0u;
    *((_DWORD *)v8 + 1_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v8;
  }

  uint64_t v9 = *(void *)(a2 + 8);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1019A1108 + 8);
  }
  sub_10050239C((uint64_t)v8, v9);
  int v5 = *(_DWORD *)(a2 + 48);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_20:
    int v11 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(_DWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v11;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }

    goto LABEL_21;
  }

void sub_100503A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100503A6C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10183DFA8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A1108 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100503AC0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_100503AD4()
{
  uint64_t v0 = (char *)operator new(0x38uLL);
  v0[16] = 0;
  *(void *)uint64_t v0 = &off_10183DFA8;
  *((void *)v0 + 1) = 0LL;
  double result = 0.0;
  *(_OWORD *)(v0 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v0 + 36) = 0u;
  return result;
}

uint64_t sub_100503B08(uint64_t result)
{
  char v1 = *(_BYTE *)(result + 48);
  if (v1)
  {
    *(_BYTE *)(result + 16) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        int v3 = *(_DWORD *)(v2 + 72);
        if ((_BYTE)v3)
        {
          *(void *)(v2 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
          *(_DWORD *)(v2 + 16) = 0;
          *(_BYTE *)(v2 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
          *(_DWORD *)(v2 + 64) = 0;
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
        }

        if ((v3 & 0xFF00) != 0) {
          *(void *)(v2 + 56) = 0LL;
        }
        *(_DWORD *)(v2 + sub_1000A56E8(v1 + 72) = 0;
      }
    }

    *(void *)(result + 2_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
    *(void *)(result + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
    *(void *)(result + 36) = 0LL;
  }

  *(_DWORD *)(result + 4_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  return result;
}

uint64_t sub_100503B6C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 40);
  uint64_t v6 = (unint64_t *)(a1 + 24);
  char v7 = (unint64_t *)(a1 + 32);
  while (2)
  {
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v39;
          int v14 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          unsigned int v13 = *v12;
          int v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }

        *(_BYTE *)(a1 + 16) = v13 != 0;
        int v15 = *(_DWORD *)(a1 + 48) | 1;
        *(_DWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = v15;
        if ((unint64_t)v14 < v11 && *v14 == 18)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_31;
        }

        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_22;
        }
        int v15 = *(_DWORD *)(a1 + 48);
LABEL_31:
        *(_DWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = v15 | 2;
        __int128 v23 = *(char **)(a1 + 8);
        if (!v23)
        {
          __int128 v23 = (char *)operator new(0x50uLL);
          *(void *)__int128 v23 = off_10183DEB8;
          *((void *)v23 + 1) = 0LL;
          *((_DWORD *)v23 + 4) = 0;
          v23[20] = 0;
          *(_OWORD *)(v23 + 24) = 0u;
          *(_OWORD *)(v23 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
          *(_OWORD *)(v23 + 56) = 0u;
          *((_DWORD *)v23 + 1_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
          *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v23;
        }

        int v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v40)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v40 = *v24;
          *((void *)this + 1) = v24 + 1;
        }

        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 < v26)
        {
          int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v40);
          if (sub_1005025F0((uint64_t)v23, this, v28))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
              int v29 = *((_DWORD *)this + 14);
              BOOL v30 = __OFSUB__(v29, 1);
              int v31 = v29 - 1;
              if (v31 < 0 == v30) {
                *((_DWORD *)this + 14) = v31;
              }
              uint64_t v32 = (_BYTE *)*((void *)this + 1);
              unint64_t v16 = *((void *)this + 2);
              if ((unint64_t)v32 < v16 && *v32 == 24)
              {
                unsigned int v17 = v32 + 1;
                *((void *)this + 1) = v17;
LABEL_45:
                if ((unint64_t)v17 >= v16 || *v17 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v38);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  unsigned int v33 = v38;
                }

                else
                {
                  unsigned int v33 = *v17;
                  *((void *)this + 1) = v17 + 1;
                }

                if (v33 <= 6)
                {
                  *(_DWORD *)(a1 + 48) |= 4u;
                  *(_DWORD *)(a1 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v33;
                }

                int v34 = (_BYTE *)*((void *)this + 1);
                unint64_t v18 = *((void *)this + 2);
                if ((unint64_t)v34 < v18 && *v34 == 32)
                {
                  BOOL v19 = v34 + 1;
                  *((void *)this + 1) = v19;
LABEL_55:
                  if ((unint64_t)v19 >= v18 || *v19 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v5);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    int v35 = (_BYTE *)*((void *)this + 1);
                    unint64_t v18 = *((void *)this + 2);
                  }

                  else
                  {
                    unsigned int *v5 = *v19;
                    int v35 = v19 + 1;
                    *((void *)this + 1) = v35;
                  }

                  *(_DWORD *)(a1 + 48) |= 8u;
                  if ((unint64_t)v35 < v18 && *v35 == 40)
                  {
                    int v20 = v35 + 1;
                    *((void *)this + 1) = v20;
LABEL_63:
                    if ((unint64_t)v20 >= v18 || *v20 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback( this,  v6);
                      if (!(_DWORD)result) {
                        return result;
                      }
                      unsigned int v36 = (_BYTE *)*((void *)this + 1);
                      unint64_t v18 = *((void *)this + 2);
                    }

                    else
                    {
                      unint64_t *v6 = *v20;
                      unsigned int v36 = v20 + 1;
                      *((void *)this + 1) = v36;
                    }

                    *(_DWORD *)(a1 + 48) |= 0x10u;
                    if ((unint64_t)v36 < v18 && *v36 == 48)
                    {
                      __int128 v21 = v36 + 1;
                      *((void *)this + 1) = v21;
LABEL_71:
                      if ((unint64_t)v21 >= v18 || *v21 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback( this,  v7);
                        if (!(_DWORD)result) {
                          return result;
                        }
                        int v37 = (unsigned __int8 *)*((void *)this + 1);
                        unint64_t v18 = *((void *)this + 2);
                      }

                      else
                      {
                        unint64_t *v7 = *v21;
                        int v37 = (unsigned __int8 *)(v21 + 1);
                        *((void *)this + 1) = v37;
                      }

                      *(_DWORD *)(a1 + 48) |= 0x20u;
                      if (v37 == (unsigned __int8 *)v18
                        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                      {
                        *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
                        uint64_t result = 1LL;
                        *((_BYTE *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v10 = TagFallback & 7;
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v10 = TagFallback & 7;
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v10 = TagFallback & 7;
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_63;
      case 6u:
        int v10 = TagFallback & 7;
        __int128 v21 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_71;
      default:
        int v10 = TagFallback & 7;
LABEL_22:
        if (v10 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100503FB8( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 16),  (BOOL)a2,  a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1108 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

uint64_t sub_100504094(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_27;
  }

  uint64_t v4 = 2 * (v3 & 1u);
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A1108 + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100502BB0(v5, a2);
    int v7 = (int)v6;
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v4 | 1) + v7 + v8;
    int v3 = *(_DWORD *)(a1 + 48);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
LABEL_21:
      unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
      if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 48);
      }

      else
      {
        int v12 = 2;
      }

      uint64_t v4 = (v12 + v4);
      if ((v3 & 0x10) == 0)
      {
LABEL_6:
        if ((v3 & 0x20) == 0) {
          goto LABEL_27;
        }
        goto LABEL_26;
      }

      goto LABEL_25;
    }
  }

  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }

  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if ((v9 & 0x80000000) != 0)
  {
    int v10 = 11;
  }

  else if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 48);
  }

  else
  {
    int v10 = 2;
  }

  uint64_t v4 = (v10 + v4);
  if ((v3 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_5:
  if ((v3 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_25:
  uint64_t v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24),  a2)
     + 1;
  if ((*(_DWORD *)(a1 + 48) & 0x20) != 0) {
LABEL_26:
  }
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32),  a2)
       + 1;
LABEL_27:
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1005041BC(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100504208()
{
  return 1LL;
}

void *sub_100504210@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.TimeTransferData");
}

void sub_100504220(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v13,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  2518LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v13,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      *(_DWORD *)(a1 + 52) |= 1u;
      int v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        int v7 = (char *)operator new(0x38uLL);
        v7[16] = 0;
        *(void *)int v7 = &off_10183DFA8;
        *((void *)v7 + 1) = 0LL;
        *(_OWORD *)(v7 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
        *(_OWORD *)(v7 + 36) = 0u;
        *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A1110 + 8);
      }
      sub_1005038CC((uint64_t)v7, v8);
      int v5 = *(_DWORD *)(a2 + 52);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_17;
      }
    }

    else if ((*(_BYTE *)(a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }

    uint64_t v9 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(void *)(a1 + 16) = v9;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_18;
    }

void sub_100504370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100504388(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_10183E020;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A1110 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1005043DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_1005043F0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A1110;
  if (!qword_1019A1110)
  {
    sub_100500DC8(0LL, a2, a3, a4);
    return qword_1019A1110;
  }

  return result;
}

double sub_10050441C()
{
  uint64_t v0 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v0 = &off_10183E020;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  return result;
}

uint64_t sub_100504450(uint64_t result)
{
  uint64_t v1 = result;
  if (*(_BYTE *)(result + 52))
  {
    if ((*(_BYTE *)(result + 52) & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result) {
        double result = sub_100503B08(result);
      }
    }

    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }

  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_100504490( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 16);
  uint64_t v6 = (unint64_t *)(a1 + 24);
  int v7 = (unint64_t *)(a1 + 32);
  uint64_t v8 = (unint64_t *)(a1 + 40);
  while (2)
  {
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        char v12 = *(char **)(a1 + 8);
        if (!v12)
        {
          char v12 = (char *)operator new(0x38uLL);
          v12[16] = 0;
          *(void *)char v12 = &off_10183DFA8;
          *((void *)v12 + 1) = 0LL;
          *(_OWORD *)(v12 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
          *(_OWORD *)(v12 + 36) = 0u;
          *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v12;
        }

        unsigned int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v32)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v32 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0LL;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (_BYTE *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        int v15 = v26 + 1;
        *((void *)this + 1) = v15;
        goto LABEL_35;
      case 2u:
        int v11 = TagFallback & 7;
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          int v27 = (_BYTE *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }

        else
        {
          unint64_t *v5 = *v15;
          int v27 = v15 + 1;
          *((void *)this + 1) = v27;
        }

        *(_DWORD *)(a1 + 52) |= 2u;
        unint64_t v16 = v27 + 1;
        *((void *)this + 1) = v16;
LABEL_43:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          int v29 = (_BYTE *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }

        else
        {
          unint64_t *v6 = *v16;
          int v29 = v16 + 1;
          *((void *)this + 1) = v29;
        }

        *(_DWORD *)(a1 + 52) |= 4u;
        unsigned int v17 = v29 + 1;
        *((void *)this + 1) = v17;
LABEL_51:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          BOOL v30 = (_BYTE *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }

        else
        {
          unint64_t *v7 = *v17;
          BOOL v30 = v17 + 1;
          *((void *)this + 1) = v30;
        }

        *(_DWORD *)(a1 + 52) |= 8u;
        unint64_t v18 = v30 + 1;
        *((void *)this + 1) = v18;
LABEL_59:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v8);
          if (!(_DWORD)result) {
            return result;
          }
          int v31 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v8 = *v18;
          int v31 = (unsigned __int8 *)(v18 + 1);
          *((void *)this + 1) = v31;
        }

        *(_DWORD *)(a1 + 52) |= 0x10u;
        *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v11 = TagFallback & 7;
        unint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_43;
      case 4u:
        int v11 = TagFallback & 7;
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_51;
      case 5u:
        int v11 = TagFallback & 7;
        unint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_59;
      default:
        int v11 = TagFallback & 7;
LABEL_22:
        if (v11 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_10050484C( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A1110 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(v5 + 16),  (unint64_t)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }

uint64_t sub_10050490C(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_17;
  }

  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0) {
      goto LABEL_13;
    }
LABEL_12:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16),  a2)
       + 1;
    int v3 = *(_DWORD *)(a1 + 52);
    goto LABEL_13;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A1110 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100504094(v5, a2);
  int v7 = (int)v6;
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_13:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_15;
    }
LABEL_19:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32),  a2)
       + 1;
    if ((*(_DWORD *)(a1 + 52) & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }

  uint64_t v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24),  a2)
     + 1;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_15:
  if ((v3 & 0x10) != 0) {
LABEL_16:
  }
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40),  a2)
       + 1;
LABEL_17:
  *(_DWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = v4;
  return v4;
}

void sub_1005049F8(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100504A44()
{
  return 1LL;
}

void *sub_100504A4C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.TimeTransferDataExtend");
}

float sub_100504A5C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  2730LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v7;
      int v6 = *(_DWORD *)(a2 + 24);
    }

    if ((v6 & 2) != 0)
    {
      float result = *(float *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(float *)(a1 + 16) = result;
    }
  }

  return result;
}

void sub_100504B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100504B1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E098;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100504B2C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E098;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100504B4C()
{
  float result = operator new(0x20uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *float result = off_10183E098;
  *((_DWORD *)result + 6) = 0;
  return result;
}

uint64_t sub_100504B78(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
    *(_DWORD *)(result + 16) = 0;
  }

  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100504B90( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        int v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          int v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }

        *(_DWORD *)(a1 + 24) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 21)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_24;
        }
      }

      int v8 = TagFallback & 7;
      if (v8 != 5) {
        goto LABEL_16;
      }
LABEL_24:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
        return 0LL;
      }
      *(_DWORD *)(a1 + 16) = v13;
      *(_DWORD *)(a1 + 24) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4) {
      return 1LL;
    }
  }

  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0);
  return 0LL;
}

uint64_t sub_100504D14( uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v4,  *(float *)(v5 + 16),  a3);
  }
  return result;
}

uint64_t sub_100504D6C(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 24);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 24);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = result;
  return result;
}

float sub_100504DC4(uint64_t a1, void *lpsrc)
{
  return sub_100504A5C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100504E10()
{
  return 1LL;
}

void *sub_100504E18@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.RawPressureSample");
}

float sub_100504E28(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  2988LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v7;
      int v6 = *(_DWORD *)(a2 + 32);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    float result = *(float *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(float *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a2 + 32);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }

void sub_100504F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100504F30(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E110;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100504F40(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E110;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100504F60()
{
  float result = operator new(0x28uLL);
  *float result = off_10183E110;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  return result;
}

uint64_t sub_100504F8C(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_DWORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100504FA4( _DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 2);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          int v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }

        a1[8] |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 21)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }

        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_18;
        }
LABEL_26:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) == 0) {
          return 0LL;
        }
        a1[4] = v17;
        a1[8] |= 2u;
        unsigned int v13 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v16) & 1) == 0) {
          return 0LL;
        }
        a1[5] = v16;
        a1[8] |= 4u;
        unint64_t v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_34:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v15) & 1) != 0)
        {
          a1[6] = v15;
          a1[8] |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_30;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_18;
        }
        goto LABEL_34;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_1005051E4( uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v4,  *(float *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v4,  *(float *)(v5 + 24),  a3);
  }

uint64_t sub_100505278(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 32);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 2_Block_object_dispose((const void *)(v1 - 232), 8) = result;
  return result;
}

float sub_1005052E8(uint64_t a1, void *lpsrc)
{
  return sub_100504E28(a1, (uint64_t)lpsrc);
}

uint64_t sub_100505334()
{
  return 1LL;
}

void *sub_10050533C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.SensorSample3Axis");
}

void sub_10050534C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  3291LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 8);
      a1[8] |= 1u;
      a1[2] = v7;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    int v8 = *(_DWORD *)(a2 + 12);
    a1[8] |= 2u;
    a1[3] = v8;
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }

void sub_10050545C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100505474(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E188;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100505484(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E188;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_1005054A4()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_10183E188;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  return result;
}

uint64_t sub_1005054D0(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_DWORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1005054E8( unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 4;
  int v7 = a1 + 5;
  while (2)
  {
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        char v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          unsigned int *v5 = *v12;
          unsigned int v13 = v12 + 1;
          *((void *)this + 1) = v13;
LABEL_26:
          a1[8] |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            unint64_t v14 = v13 + 1;
            *((void *)this + 1) = v14;
            goto LABEL_29;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if ((_DWORD)result)
        {
          unsigned int v13 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          goto LABEL_26;
        }

        break;
      case 2u:
        int v10 = TagFallback & 7;
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v18 = v25;
          int v19 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          unsigned int v18 = *v14;
          int v19 = v14 + 1;
          *((void *)this + 1) = v19;
        }

        a1[3] = v18;
        a1[8] |= 2u;
        unsigned int v15 = v19 + 1;
        *((void *)this + 1) = v15;
LABEL_37:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          int v20 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v6 = *v15;
          int v20 = v15 + 1;
          *((void *)this + 1) = v20;
        }

        a1[8] |= 4u;
        unsigned int v16 = v20 + 1;
        *((void *)this + 1) = v16;
LABEL_45:
        if ((unint64_t)v16 >= v11 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          int v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          unsigned int *v7 = *v16;
          int v21 = v16 + 1;
          *((void *)this + 1) = v21;
        }

        a1[8] |= 8u;
        unsigned int v17 = v21 + 1;
        *((void *)this + 1) = v17;
LABEL_53:
        if ((unint64_t)v17 >= v11 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v22 = v26;
          int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }

        else
        {
          unsigned int v22 = *v17;
          int v23 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v23;
        }

        a1[6] = -(v22 & 1) ^ (v22 >> 1);
        a1[8] |= 0x10u;
        *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v10 = TagFallback & 7;
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v10 = TagFallback & 7;
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_53;
      default:
        int v10 = TagFallback & 7;
LABEL_20:
        if (v10 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

int *sub_100505814( int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[8];
  if ((v6 & 1) != 0)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  result[2],  a2,  a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v5[3],  a2,  a4);
  int v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_1005058C4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_32;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }

    else
    {
      uint64_t v4 = 2LL;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_16;
    }
  }

  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }

  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }

  else
  {
    int v7 = 2;
  }

  uint64_t v4 = (v7 + v4);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
    }

    else
    {
      int v9 = 2;
    }

    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_32;
      }
      goto LABEL_28;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }

  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }

  else
  {
    int v11 = 2;
  }

  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_28:
    char v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31));
    else {
      int v13 = 2;
    }
    uint64_t v4 = (v13 + v4);
  }

void sub_1005059E8(_DWORD *a1, void *lpsrc)
{
}

uint64_t sub_100505A34()
{
  return 1LL;
}

void *sub_100505A3C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.SvId");
}

void sub_100505A4C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  3610LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 48);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 48) |= 1u;
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v6;
      int v5 = *(_DWORD *)(a2 + 48);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((*(_BYTE *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }

    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 2u;
    *(void *)(a1 + 16) = v7;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }

void sub_100505B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100505B80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E200;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100505B90(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E200;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_100505BB0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A1130;
  if (!qword_1019A1130)
  {
    sub_100500DC8(0LL, a2, a3, a4);
    return qword_1019A1130;
  }

  return result;
}

double sub_100505BDC()
{
  uint64_t v0 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v0 = off_10183E200;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 36) = 0u;
  return result;
}

uint64_t sub_100505C10(uint64_t result)
{
  if (*(_BYTE *)(result + 48))
  {
    *(_DWORD *)(result + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  }

  *(_DWORD *)(result + 4_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  return result;
}

uint64_t sub_100505C30( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = *(void *)v16;
        *(_DWORD *)(a1 + 48) |= 1u;
        uint64_t v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v16;
        *(_DWORD *)(a1 + 48) |= 2u;
        uint64_t v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v16;
        *(_DWORD *)(a1 + 48) |= 4u;
        unsigned int v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v16) & 1) != 0)
        {
          *(void *)(a1 + 32) = *(void *)v16;
          *(_DWORD *)(a1 + 48) |= 8u;
          char v12 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v12 < v11 && *v12 == 40)
          {
            int v13 = v12 + 1;
            *((void *)this + 1) = v13;
LABEL_33:
            if ((unint64_t)v13 >= v11 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v16);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v14 = v16[0];
            }

            else
            {
              unsigned int v14 = *v13;
              *((void *)this + 1) = v13 + 1;
            }

            if (v14 <= 1)
            {
              *(_DWORD *)(a1 + 48) |= 0x10u;
              *(_DWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v14;
            }

            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      case 5u:
        int v7 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_33;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100505ED0( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_100505F80(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  if (*(_BYTE *)(a1 + 48))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x10) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }

      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      }

      else
      {
        int v7 = 2;
      }

      uint64_t v5 = (v7 + v5);
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(_DWORD *)(a1 + 44) = v5;
  return v5;
}

void sub_100506014(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100506060()
{
  return 1LL;
}

void *sub_100506068@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.PwrMeasurement");
}

void sub_100506078(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  3822LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v6;
      int v5 = *(_DWORD *)(a2 + 24);
    }

    if ((v5 & 2) != 0)
    {
      char v7 = *(_BYTE *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_BYTE *)(a1 + 16) = v7;
    }
  }

void sub_100506120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100506138(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E278;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100506148(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E278;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_100506168(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A1138;
  if (!qword_1019A1138)
  {
    sub_100500DC8(0LL, a2, a3, a4);
    return qword_1019A1138;
  }

  return result;
}

void *sub_100506194()
{
  uint64_t result = operator new(0x20uLL);
  *uint64_t result = off_10183E278;
  result[1] = 0LL;
  *((_BYTE *)result + 16) = 0;
  *((_DWORD *)result + 5) = 0;
  *((_DWORD *)result + 6) = 0;
  return result;
}

uint64_t sub_1005061C0(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
    *(_BYTE *)(result + 16) = 0;
  }

  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1005061D8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
        *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v8 = TagFallback & 7;
      unint64_t v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!(_DWORD)result) {
          return result;
        }
        char v12 = (_BYTE *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }

      else
      {
        unint64_t *v5 = *v11;
        char v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }

      *(_DWORD *)(a1 + 24) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        unsigned int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v16;
          unsigned int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unsigned int v13 = *v10;
          unsigned int v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }

        *(_BYTE *)(a1 + 16) = v13 != 0;
        *(_DWORD *)(a1 + 24) |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }

    else
    {
      int v8 = TagFallback & 7;
    }

uint64_t sub_100506384( uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  BOOL v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 16),  v4,  a4);
  }
  return result;
}

uint64_t sub_1005063DC(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 24);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 24);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 2;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = result;
  return result;
}

void sub_100506434(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100506480()
{
  return 1LL;
}

void *sub_100506488@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.DecodedRti");
}

void sub_100506498(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssTypes.pb.cc",  4087LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }

    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }

    char v7 = *(_BYTE *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_BYTE *)(a1 + 24) = v7;
    int v5 = *(_DWORD *)(a2 + 36);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
LABEL_12:
      unsigned int v9 = *(_DWORD *)(a2 + 28);
      if (!sub_1001D2F48(v9)) {
        sub_10123C388();
      }
      *(_DWORD *)(a1 + 36) |= 8u;
      *(_DWORD *)(a1 + 2_Block_object_dispose((const void *)(v1 - 232), 8) = v9;
      return;
    }

void sub_100506598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1005065B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E2F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1005065C0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10183E2F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

uint64_t sub_1005065E0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A1140;
  if (!qword_1019A1140)
  {
    sub_100500DC8(0LL, a2, a3, a4);
    return qword_1019A1140;
  }

  return result;
}

void *sub_10050660C()
{
  uint64_t result = operator new(0x28uLL);
  result[4] = 0LL;
  *((_DWORD *)result + 7) = 0;
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = off_10183E2F0;
  *((_BYTE *)result + 24) = 0;
  return result;
}

uint64_t sub_100506640(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(_DWORD *)(result + 2_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
    *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_BYTE *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_10050665C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  uint64_t v6 = (unint64_t *)(a1 + 16);
  while (2)
  {
    char v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallback = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        unint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          unint64_t *v5 = *v11;
          char v12 = v11 + 1;
          *((void *)this + 1) = v12;
LABEL_24:
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            unsigned int v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_27;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if ((_DWORD)result)
        {
          char v12 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          goto LABEL_24;
        }

        break;
      case 2u:
        int v9 = TagFallback & 7;
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v16 = v22;
          unsigned int v17 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unsigned int v16 = *v13;
          unsigned int v17 = v13 + 1;
          *((void *)this + 1) = v17;
        }

        *(_BYTE *)(a1 + 24) = v16 != 0;
        *(_DWORD *)(a1 + 36) |= 2u;
        unsigned int v14 = v17 + 1;
        *((void *)this + 1) = v14;
LABEL_35:
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          unint64_t *v6 = *v14;
          unsigned int v18 = v14 + 1;
          *((void *)this + 1) = v18;
        }

        *(_DWORD *)(a1 + 36) |= 4u;
        unsigned int v15 = v18 + 1;
        *((void *)this + 1) = v15;
LABEL_43:
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v19 = v21;
        }

        else
        {
          unsigned int v19 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        if (sub_1001D2F48(v19))
        {
          if (!sub_1001D2F48(v19)) {
            sub_10123C388();
          }
          *(_DWORD *)(a1 + 36) |= 8u;
          *(_DWORD *)(a1 + 2_Block_object_dispose((const void *)(v1 - 232), 8) = v19;
        }

        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }

        *((_DWORD *)this + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        unsigned int v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v9 = TagFallback & 7;
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_43;
      default:
        int v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_10050692C( uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 24),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(_DWORD *)(v5 + 28),  a2,  a4);
  }

uint64_t sub_1005069C0(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v5 = v5
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }

    if ((v3 & 8) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }

      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      }

      else
      {
        int v7 = 2;
      }

      uint64_t v5 = (v7 + v5);
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

void sub_100506A64(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100506AB0()
{
  return 1LL;
}

void *sub_100506AB8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "proto.gnss.DecodedExtendedEphemeris");
}

uint64_t sub_100506ACC(uint64_t result, int a2)
{
  *(void *)uint64_t result = off_10183E488;
  *(void *)(result + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void *sub_100506AE4(void *a1)
{
  *a1 = off_10183E488;
  uint64_t v2 = (uint64_t)(a1 + 1);
  sub_10029D2EC(a1 + 3, 0LL);
  sub_10000AE14(v2);
  return a1;
}

BOOL sub_100506B30(uint64_t *a1)
{
  buf[0] = (*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1);
  sub_1012049AC(&v24, "AlwaysOnDeviceMotion", buf, 0);
  buf[0] = 1;
  sub_1012049AC(&v22, "DeviceMotionUseGyroController", buf, 0);
  if (!a1[1])
  {
    uint64_t v2 = sub_1006E27E8();
    unsigned int v17 = _NSConcreteStackBlock;
    uint64_t v18 = 3221225472LL;
    unsigned int v19 = sub_100506F48;
    int v20 = &unk_10181D3D0;
    unsigned int v21 = a1;
    sub_1006E28B8(v2, (uint64_t)&v17);
  }

  v16[0] = 2;
  int v3 = v25;
  v16[1] = v25;
  int v4 = v23;
  unsigned int v16[2] = v23;
  int v5 = (*(uint64_t (**)(uint64_t *))(*a1 + 32))(a1);
  void v16[3] = v5;
  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_10183E4C0);
  }
  int v6 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = *(_DWORD *)(a1[1] + 16);
    *(_DWORD *)std::string buf = 67109888;
    int v35 = v7;
    __int16 v36 = 1024;
    int v37 = v3;
    __int16 v38 = 1024;
    int v39 = v4;
    __int16 v40 = 1024;
    int v41 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[CLDeviceMotionControl-%d] Configuring,enableAlwaysOn,%d,useGyroController,%d,enableVisualLocalization,%d",  buf,  0x1Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_10183E4C0);
    }
    int v12 = *(_DWORD *)(a1[1] + 16);
    int v26 = 67109888;
    int v27 = v12;
    __int16 v28 = 1024;
    int v29 = v3;
    __int16 v30 = 1024;
    int v31 = v4;
    __int16 v32 = 1024;
    int v33 = v5;
    unsigned int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  0LL,  "[CLDeviceMotionControl-%d] Configuring,enableAlwaysOn,%d,useGyroController,%d,enableVisualLocalization,%d",  &v26,  26,  (_DWORD)v17,  v18);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLDeviceMotionControl::configure()", "%s\n", v13);
  }

  BOOL v8 = sub_100507114(a1, (uint64_t)v16, (char *)4);
  if (!v8)
  {
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_10183E4C0);
    }
    int v9 = (os_log_s *)qword_101934568;
    if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
    {
      int v10 = *(_DWORD *)(a1[1] + 16);
      *(_DWORD *)std::string buf = 67109120;
      int v35 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "[CLDeviceMotionControl-%d] Configure failed",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934560 != -1) {
        dispatch_once(&qword_101934560, &stru_10183E4C0);
      }
      int v14 = *(_DWORD *)(a1[1] + 16);
      int v26 = 67109120;
      int v27 = v14;
      unsigned int v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  1LL,  "[CLDeviceMotionControl-%d] Configure failed",  &v26);
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLDeviceMotionControl::configure()", "%s\n", v15);
    }
  }

  return v8;
}

void sub_100506F48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(void *)(v1 + 8))
  {
    int v2 = *(_DWORD *)(v1 + 32);
    int v3 = (uint64_t *)sub_10071542C();
    v15[0] = 65292;
    v15[1] = v2;
    char v16 = 0;
    sub_10121B774(v3, (uint64_t)v15, (uint64_t *)&v17);
    sub_10005F550(v1 + 8, &v17);
    int v4 = (std::__shared_weak_count *)*((void *)&v17 + 1);
    if (*((void *)&v17 + 1))
    {
      int v5 = (unint64_t *)(*((void *)&v17 + 1) + 8LL);
      do
        unint64_t v6 = __ldaxr(v5);
      while (__stlxr(v6 - 1, v5));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }

    sub_100719D78(*(uint64_t **)(v1 + 8), (uint64_t)nullsub_251, v1);
    sub_100719ECC(*(void *)(v1 + 8), (uint64_t)sub_1005070E0, v1);
    sub_100719E00(*(void *)(v1 + 8), (uint64_t)sub_1005070E0, v1);
    sub_10071A408(*(void *)(v1 + 8), (uint64_t)sub_1005070E0, v1);
    int v7 = operator new(0x20uLL);
    uint64_t v8 = (uint64_t)v7;
    uint64_t v9 = *(void *)(v1 + 16);
    *(void *)&__int128 v17 = *(void *)(v1 + 8);
    *((void *)&v17 + 1) = v9;
    if (v9)
    {
      int v10 = (unint64_t *)(v9 + 8);
      do
        unint64_t v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
    }

    sub_100E2E64C(v7, &v17);
    int v12 = (std::__shared_weak_count *)*((void *)&v17 + 1);
    if (*((void *)&v17 + 1))
    {
      unsigned int v13 = (unint64_t *)(*((void *)&v17 + 1) + 8LL);
      do
        unint64_t v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }

    sub_10029D2EC((uint64_t *)(v1 + 24), v8);
    sub_100E2EA00(*(uint64_t **)(v1 + 24));
  }

void sub_1005070B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1005070E0(uint64_t a1)
{
  int v2 = *(uint64_t **)(a1 + 24);
  sub_100E2E678(v2);
  sub_100E2EA00(v2);
  return sub_100506B30(a1);
}

BOOL sub_100507114(uint64_t *a1, uint64_t a2, char *a3)
{
  int v8 = 0;
  uint64_t v7 = 4LL;
  return sub_100E2F5E4(a1[3], a2, a3, (uint64_t)&v8, (uint64_t)&v7) == 0;
}

void sub_100507188(id a1)
{
  qword_101934568 = (uint64_t)os_log_create("com.apple.locationd.Motion", "DeviceMotion");
}

double sub_1005071B4(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 542);
  double v3 = *(double *)(a1 + 448);
  double v4 = *(double *)(a1 + 456);
  double v5 = *(float *)(a1 + 1360) * 1.107 + -0.123;
  double v6 = v4 * (v5 + *(float *)(a1 + 296) * 0.006);
  if (v3 <= 0.0) {
    double v7 = v4 * (v5 + *(float *)(a1 + 296) * 0.006);
  }
  else {
    double v7 = 2.23693991 / v3;
  }
  if (v2 > 5)
  {
    double v8 = 0.0;
  }

  else
  {
    double v8 = v4 * (v5 + *(float *)(a1 + 296) * 0.006);
    if (((1 << v2) & 0x29) == 0)
    {
      double v8 = v4 * (v5 + *(float *)(a1 + 296) * 0.006);
      if (((1 << v2) & 0x14) == 0) {
        double v8 = v7;
      }
    }
  }

  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_10183E528);
  }
  uint64_t v9 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 120);
    uint64_t v11 = *(void *)(a1 + 456);
    *(_DWORD *)std::string buf = 134350336;
    uint64_t v29 = v10;
    __int16 v30 = 1026;
    unsigned int v31 = v2;
    __int16 v32 = 2050;
    double v33 = v8;
    __int16 v34 = 2050;
    double v35 = v7;
    __int16 v36 = 2050;
    double v37 = v6;
    __int16 v38 = 2050;
    uint64_t v39 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "beginTime, %{public}f, distanceSource, %{public}d, bestSpeed, %{public}f, pedSpeed, %{public}f, uncalibratedSpeed, %{public}f, currentCadence,%{public}f",  buf,  0x3Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10183E528);
    }
    uint64_t v13 = *(void *)(a1 + 120);
    uint64_t v14 = *(void *)(a1 + 456);
    int v16 = 134350336;
    uint64_t v17 = v13;
    __int16 v18 = 1026;
    unsigned int v19 = v2;
    __int16 v20 = 2050;
    double v21 = v8;
    __int16 v22 = 2050;
    double v23 = v7;
    __int16 v24 = 2050;
    double v25 = v6;
    __int16 v26 = 2050;
    uint64_t v27 = v14;
    unsigned int v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "beginTime, %{public}f, distanceSource, %{public}d, bestSpeed, %{public}f, pedSpeed, %{public}f, unca libratedSpeed, %{public}f, currentCadence,%{public}f",  &v16,  58);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static double CLFitnessYouthBriskWalkOverride::bestSpeed(const CLNatalieModelInput &)",  "%s\n",  v15);
  }

  return v8;
}

uint64_t sub_10050746C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v5 = sub_1005071B4(a3);
  double v6 = sub_1004CAC94((float *)(a3 + 1352), (int *)buf);
  if (v5 <= v6)
  {
    if (v5 <= 0.0) {
      return a2;
    }
    uint64_t v8 = sub_1005186D4(1LL, a2);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10183E528);
    }
    uint64_t v13 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_INFO))
    {
      uint64_t v14 = *(void *)(a3 + 120);
      *(_DWORD *)std::string buf = 134218752;
      uint64_t v21 = v14;
      __int16 v22 = 1026;
      int v23 = a2;
      __int16 v24 = 1026;
      int v25 = v8;
      __int16 v26 = 2050;
      double v27 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "Overriding youth type for nonzero speed, beginTime, %f, before, %{public}d, after, %{public}d, speed, %{public}f",  buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_10183E528);
      }
      uint64_t v15 = *(void *)(a3 + 120);
      *(_DWORD *)__int16 v18 = 134218752;
      *(void *)&v18[4] = v15;
      *(_WORD *)&v18[12] = 1026;
      *(_DWORD *)&v18[14] = a2;
      *(_WORD *)&v18[18] = 1026;
      *(_DWORD *)&_BYTE v18[20] = v8;
      *(_WORD *)unsigned int v19 = 2050;
      *(double *)&_DWORD v19[2] = v5;
      int v12 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  1LL,  "Overriding youth type for nonzero speed, beginTime, %f, before, %{public}d, after, %{public} d, speed, %{public}f",  v18,  34,  *(_OWORD *)v18,  *(void *)&v18[16],  *(_OWORD *)v19,  *(void *)&v19[16]);
      goto LABEL_19;
    }
  }

  else
  {
    double v7 = v6;
    uint64_t v8 = sub_1005186D4(2LL, a2);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_10183E528);
    }
    uint64_t v9 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = *(void *)(a3 + 120);
      *(_DWORD *)std::string buf = 134219008;
      uint64_t v21 = v10;
      __int16 v22 = 1026;
      int v23 = a2;
      __int16 v24 = 1026;
      int v25 = v8;
      __int16 v26 = 2050;
      double v27 = v5;
      __int16 v28 = 2050;
      double v29 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Overriding youth type for brisk walk, beginTime, %f, before, %{public}d, after, %{public}d, speed, %{public}f, s peedThreshold, %{public}f",  buf,  0x2Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_10183E528);
      }
      uint64_t v11 = *(void *)(a3 + 120);
      *(_DWORD *)__int16 v18 = 134219008;
      *(void *)&v18[4] = v11;
      *(_WORD *)&v18[12] = 1026;
      *(_DWORD *)&v18[14] = a2;
      *(_WORD *)&v18[18] = 1026;
      *(_DWORD *)&_BYTE v18[20] = v8;
      *(_WORD *)unsigned int v19 = 2050;
      *(double *)&_DWORD v19[2] = v5;
      *(_WORD *)&v19[10] = 2050;
      *(double *)&v19[12] = v7;
      int v12 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  1LL,  "Overriding youth type for brisk walk, beginTime, %f, before, %{public}d, after, %{public}d, speed, %{public}f, speedThreshold, %{public}f",  v18,  44,  *(_OWORD *)v18,  *(void *)&v18[16],  *(_OWORD *)v19,  *(void *)&v19[16]);
LABEL_19:
      int v16 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLMotionActivity::TypeYouth CLFitnessYouthBriskWalkOverride::doOverride(CLMotionActivity::TypeYouth, con st CLNatalieModelInput &)",  "%s\n",  v12);
      if (v16 != buf) {
        free(v16);
      }
    }
  }

  return v8;
}

void sub_100507808(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

uint64_t sub_100507834(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10183E558;
  *(_BYTE *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  *(_BYTE *)(a1 + 12) = 1;
  *(void *)(a1 + 2_Block_object_dispose((const void *)(v1 - 232), 8) = 0xA00000000LL;
  *(_DWORD *)(a1 + 24) = 1031798784;
  *(void *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  if (a2 != 24)
  {
    if (a2 == 17)
    {
      double v3 = operator new(0x1628uLL);
      v4.n128_f64[0] = sub_100993E34((uint64_t)v3);
      uint64_t v5 = *(void *)(a1 + 80);
      *(void *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v3;
      uint64_t v6 = 1LL;
      if (!v5) {
        goto LABEL_7;
      }
    }

    else
    {
      uint64_t v9 = operator new(0x1628uLL);
      v4.n128_f64[0] = sub_100993E34((uint64_t)v9);
      uint64_t v6 = 0LL;
      uint64_t v5 = *(void *)(a1 + 80);
      *(void *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v9;
      if (!v5) {
        goto LABEL_7;
      }
    }

    goto LABEL_6;
  }

  double v7 = operator new(0x728uLL);
  v4.n128_f64[0] = sub_10099D49C((uint64_t)v7);
  uint64_t v5 = *(void *)(a1 + 80);
  *(void *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v7;
  uint64_t v6 = 3LL;
  if (v5) {
LABEL_6:
  }
    (*(void (**)(uint64_t, __n128))(*(void *)v5 + 24LL))(v5, v4);
LABEL_7:
  (*(void (**)(void, uint64_t, __n128))(**(void **)(a1 + 80) + 8LL))(*(void *)(a1 + 80), v6, v4);
  return a1;
}

void sub_100507924(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void *)(v1 + 80);
  *(void *)(v1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100507988(uint64_t a1, double *a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)&qword_101996468);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_101996468))
  {
    LODWORD(v115[0]) = 8;
    sub_1002C72A8(qword_101996450, v115, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101996450, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101996468);
  }

  __int16 v116 = 0;
  *(_OWORD *)__int128 v115 = xmmword_1012E1E90;
  memset(&v115[2], 0, 135);
  __int128 v117 = xmmword_1012E1E90;
  uint64_t v118 = 0LL;
  int v119 = 0;
  v121[0] = 0LL;
  uint64_t v120 = 0LL;
  *(void *)((char *)v121 + 5) = 0LL;
  *(void *)((char *)&v121[1] + 6) = 0LL;
  char v122 = 0;
  memset(&v121[3], 0, 24);
  __int128 v123 = xmmword_1012E1E90;
  uint64_t v124 = 0LL;
  int v125 = 0;
  unint64_t v126 = 0xFFEFFFFFFFFFFFFFLL;
  int v137 = 0;
  __int128 v127 = 0u;
  __int128 v128 = 0u;
  __int128 v129 = 0u;
  __int128 v130 = 0u;
  __int128 v131 = 0u;
  int v132 = 0;
  __int128 v133 = 0u;
  __int128 v134 = 0u;
  __int128 v135 = 0u;
  memset(v136, 0, sizeof(v136));
  uint64_t v138 = 0LL;
  uint64_t v139 = 0LL;
  unint64_t v140 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v141 = 0LL;
  int v142 = 0;
  uint64_t v148 = 0LL;
  __int16 v149 = 0;
  int v154 = 0;
  int v147 = 0;
  __int128 v146 = 0u;
  __int128 v145 = 0u;
  __int128 v144 = 0u;
  __int128 v143 = 0u;
  __int128 v151 = 0u;
  __int128 v150 = 0u;
  char v152 = 0;
  memset(v153, 0, sizeof(v153));
  unint64_t v155 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v174 = 0u;
  __int128 v173 = 0u;
  __int128 v172 = 0u;
  __int128 v171 = 0u;
  __int128 v170 = 0u;
  __int128 v169 = 0u;
  __int128 v168 = 0u;
  __int128 v167 = 0u;
  __int128 v166 = 0u;
  __int128 v165 = 0u;
  __int128 v164 = 0u;
  __int128 v163 = 0u;
  __int128 v162 = 0u;
  __int128 v161 = 0u;
  __int128 v160 = 0u;
  __int128 v159 = 0u;
  __int128 v158 = 0u;
  __int128 v157 = 0u;
  __int128 v156 = 0u;
  uint64_t v175 = 0LL;
  unint64_t v176 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v177 = 0u;
  __int128 v178 = 0u;
  __int128 v179 = 0u;
  __int128 v180 = 0u;
  unint64_t v181 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v182 = 0LL;
  int v183 = 0;
  uint64_t v184 = 0LL;
  char v185 = 0;
  unint64_t v186 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v188 = 0LL;
  uint64_t v187 = 0LL;
  uint64_t v189 = 0x80000000800000LL;
  uint64_t v191 = 0LL;
  uint64_t v190 = 0LL;
  __int128 v192 = xmmword_1012E1EA0;
  uint64_t v193 = 0x80000000800000LL;
  __int128 v194 = 0u;
  __int128 v195 = 0u;
  uint64_t v196 = 0LL;
  unint64_t v197 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v198 = 0u;
  __int128 v199 = 0u;
  __int128 v200 = 0u;
  __int128 v201 = 0u;
  __int128 v202 = 0u;
  __int128 v203 = 0u;
  int v204 = 0;
  unint64_t v205 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v206 = 0;
  int v207 = 0;
  unint64_t v208 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v209 = 7LL;
  unint64_t v210 = 0xFFEFFFFFFFFFFFFFLL;
  char v211 = 0;
  uint64_t v213 = 0LL;
  uint64_t v212 = 0LL;
  uint64_t v214 = 0LL;
  unsigned __int8 v5 = atomic_load((unsigned __int8 *)&qword_101996488);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_101996488))
  {
    LODWORD(v15[0]) = 2;
    sub_1002C72A8(qword_101996470, v15, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101996470, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101996488);
  }

  __int16 v16 = 0;
  *(_OWORD *)uint64_t v15 = xmmword_1012E1E90;
  memset(&v15[2], 0, 135);
  __int128 v17 = xmmword_1012E1E90;
  uint64_t v18 = 0LL;
  int v19 = 0;
  uint64_t v20 = 0LL;
  v21[0] = 0LL;
  *(void *)((char *)v21 + 5) = 0LL;
  *(void *)((char *)&v21[1] + 6) = 0LL;
  char v22 = 0;
  memset(&v21[3], 0, 24);
  __int128 v23 = xmmword_1012E1E90;
  uint64_t v24 = 0LL;
  int v25 = 0;
  unint64_t v26 = 0xFFEFFFFFFFFFFFFFLL;
  int v37 = 0;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  int v32 = 0;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  memset(v36, 0, sizeof(v36));
  uint64_t v38 = 0LL;
  uint64_t v39 = 0LL;
  unint64_t v40 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v41 = 0LL;
  int v42 = 0;
  uint64_t v48 = 0LL;
  __int16 v49 = 0;
  int v54 = 0;
  int v47 = 0;
  __int128 v45 = 0u;
  __int128 v46 = 0u;
  __int128 v43 = 0u;
  __int128 v44 = 0u;
  __int128 v51 = 0u;
  __int128 v50 = 0u;
  char v52 = 0;
  memset(v53, 0, sizeof(v53));
  unint64_t v55 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v74 = 0u;
  __int128 v73 = 0u;
  __int128 v72 = 0u;
  __int128 v71 = 0u;
  __int128 v70 = 0u;
  __int128 v69 = 0u;
  __int128 v68 = 0u;
  __int128 v67 = 0u;
  __int128 v66 = 0u;
  __int128 v65 = 0u;
  __int128 v64 = 0u;
  __int128 v63 = 0u;
  __int128 v62 = 0u;
  __int128 v61 = 0u;
  __int128 v60 = 0u;
  __int128 v59 = 0u;
  __int128 v58 = 0u;
  __int128 v57 = 0u;
  __int128 v56 = 0u;
  uint64_t v75 = 0LL;
  unint64_t v76 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v77 = 0u;
  __int128 v78 = 0u;
  __int128 v79 = 0u;
  __int128 v80 = 0u;
  unint64_t v81 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v82 = 0LL;
  int v83 = 0;
  uint64_t v84 = 0LL;
  char v85 = 0;
  unint64_t v86 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v88 = 0LL;
  uint64_t v87 = 0LL;
  uint64_t v89 = 0x80000000800000LL;
  uint64_t v91 = 0LL;
  uint64_t v90 = 0LL;
  __int128 v92 = xmmword_1012E1EA0;
  uint64_t v93 = 0x80000000800000LL;
  __int128 v94 = 0u;
  __int128 v95 = 0u;
  uint64_t v96 = 0LL;
  unint64_t v97 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v98 = 0u;
  __int128 v99 = 0u;
  __int128 v100 = 0u;
  __int128 v101 = 0u;
  __int128 v102 = 0u;
  __int128 v103 = 0u;
  int v104 = 0;
  unint64_t v105 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v106 = 0;
  int v107 = 0;
  unint64_t v108 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v109 = 7LL;
  unint64_t v110 = 0xFFEFFFFFFFFFFFFFLL;
  char v111 = 0;
  uint64_t v113 = 0LL;
  uint64_t v112 = 0LL;
  uint64_t v114 = 0LL;
  uint64_t v8 = (_WORD *)(a1 + 28);
  uint64_t v7 = *(unsigned __int16 *)(a1 + 28);
  uint64_t v9 = *(unsigned __int16 *)(a1 + 30);
  unint64_t v10 = *(unsigned int *)(a1 + 32);
  uint64_t v11 = v7 + v9 >= v10 ? *(unsigned int *)(a1 + 32) : 0LL;
  float v6 = *((double *)&v28 + 1);
  *(float *)&v8[2 * (v7 + v9 - v11) + 4] = v6;
  if (v10 <= v9)
  {
    unint64_t v13 = v7 + 1;
    __int16 v14 = v13 >= v10 ? v10 : 0;
    *uint64_t v8 = v13 - v14;
  }

  else
  {
    LOWORD(v9) = v9 + 1;
    *(_WORD *)(a1 + 3sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v9;
    LODWORD(v9) = (unsigned __int16)v9;
  }

  *(_BYTE *)(a1 + 12) = 1;
  if ((_DWORD)v10 == (_DWORD)v9
    && (sub_100508094((unsigned __int16 *)(a1 + 28), (unsigned int (*)(float, float))sub_100508290, 0LL) > 13.4112
     || *(_BYTE *)(a1 + 8)
     && sub_100508094((unsigned __int16 *)(a1 + 28), (unsigned int (*)(float, float))sub_100508290, 0LL) > 6.7056))
  {
    return 9LL;
  }

  else
  {
    return 0LL;
  }

void sub_100507FDC(_Unwind_Exception *a1)
{
}

void *sub_10050800C(void *a1)
{
  *a1 = off_10183E558;
  uint64_t v2 = a1[10];
  a1[10] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
  }
  return a1;
}

void sub_100508050(void *__p)
{
  void *__p = off_10183E558;
  uint64_t v2 = __p[10];
  __p[10] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
  }
  operator delete(__p);
}

float sub_100508094(unsigned __int16 *a1, unsigned int (*a2)(float, float), unint64_t a3)
{
  unint64_t v6 = a1[1];
  if (!a1[1])
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183E590);
    }
    uint64_t v11 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "Assertion failed: n > 0, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 179,.",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183E590);
      }
      v13[0] = 0;
      int v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: n > 0, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 179,.",  v13,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMQueue<float>::getComparison(int (*)(const T, const T), size_t) const [T = float]",  "%s\n",  v12);
    }
  }

  float v7 = *(float *)sub_100208A44(a1, a3);
  if (v6 > a3)
  {
    do
    {
      uint64_t v8 = (float *)sub_100208A44(a1, a3);
      float v9 = *v8;
      if (a2(*v8, v7)) {
        float v7 = v9;
      }
      ++a3;
    }

    while (v6 != a3);
  }

  return v7;
}

BOOL sub_100508290(float a1, float a2)
{
  return a1 < a2;
}

void sub_10050829C(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1005082C8(uint64_t a1, uint64_t a2)
{
  if (CFAbsoluteTimeGetCurrent() - *(double *)a1 >= 86400.0)
  {
    if (qword_1019344A0 != -1) {
      dispatch_once(&qword_1019344A0, &stru_10183E5B0);
    }
    unsigned __int8 v5 = (os_log_s *)qword_1019344A8;
    if (os_log_type_enabled((os_log_t)qword_1019344A8, OS_LOG_TYPE_DEBUG))
    {
      int v6 = *(_DWORD *)(a1 + 8);
      double v7 = *(double *)a1;
      *(_DWORD *)std::string buf = 67240704;
      int v20 = v6;
      __int16 v21 = 2048;
      double v22 = v7;
      __int16 v23 = 2050;
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "[CLSuppressionLogger][counterReset]  suppressionStateMetricsCounter,%{public}d,fTimestampLastSuppressionStateMet ricsCounterReset,%f,currentTime,%{public}f",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344A0 != -1) {
        dispatch_once(&qword_1019344A0, &stru_10183E5B0);
      }
      uint64_t v9 = qword_1019344A8;
      int v10 = *(_DWORD *)(a1 + 8);
      double v11 = *(double *)a1;
      v14[0] = 67240704;
      v14[1] = v10;
      __int16 v15 = 2048;
      double v16 = v11;
      __int16 v17 = 2050;
      CFAbsoluteTime v18 = CFAbsoluteTimeGetCurrent();
      int v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v9,  2LL,  "[CLSuppressionLogger][counterReset]  suppressionStateMetricsCounter,%{public}d,fTimestampLastSuppr essionStateMetricsCounterReset,%f,currentTime,%{public}f",  v14,  28);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSuppressionLogger::feedSuppressionStateMetrics(const CMMotionCoprocessorReply::SuppressionStateMetrics *)",  "%s\n",  v12);
    }

    CFAbsoluteTime v8 = CFAbsoluteTimeGetCurrent();
    int v4 = 0;
    *(CFAbsoluteTime *)a1 = v8;
  }

  else
  {
    int v4 = *(_DWORD *)(a1 + 8);
  }

  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v4 + 1;
  if (v4 < *(_DWORD *)(a1 + 12))
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    uint64_t v13[2] = sub_10050854C;
    v13[3] = &unk_101827B10;
    v13[4] = a1;
    void v13[5] = a2;
    AnalyticsSendEventLazy(@"com.apple.CoreMotion.UpdatedSuppressionStateMetrics", v13);
  }

NSDictionary *sub_10050854C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v18[0] = @"logSequenceID";
  v19[0] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  (unint64_t)(CFAbsoluteTimeGetCurrent() * 1000000.0));
  v18[1] = @"isAPAwake";
  v19[1] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 40) + 1LL));
  void v18[2] = @"exitedToFSMState";
  _DWORD v19[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(char *)(*(void *)(a1 + 40) + 2LL));
  v18[3] = @"sessionFSMState";
  v19[3] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned __int8 *)(*(void *)(a1 + 40) + 3LL));
  v18[4] = @"timeInFSMState";
  v19[4] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(*(void *)(a1 + 40) + 4LL));
  void v18[5] = @"timeStatic";
  v19[5] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(*(void *)(a1 + 40) + 36LL));
  void v18[6] = @"timeFrozen";
  void v19[6] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(*(void *)(a1 + 40) + 44LL));
  v18[7] = @"timeMoving";
  v19[7] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(*(void *)(a1 + 40) + 52LL));
  _WORD v18[8] = @"meanGravityAngle";
  else {
    double v3 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  _WORD v19[8] = v3;
  v18[9] = @"meanPocketProbability";
  else {
    int v4 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v19[9] = v4;
  v18[10] = @"meanIlluminance";
  else {
    unsigned __int8 v5 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v19[10] = v5;
  v18[11] = @"proxBaselineAtEntry";
  else {
    int v6 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v19[11] = v6;
  v18[12] = @"proxBaselineAtExit";
  else {
    double v7 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v19[12] = v7;
  v18[13] = @"proxBaselineUncertaintyAtEntry";
  else {
    CFAbsoluteTime v8 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v19[13] = v8;
  v18[14] = @"proxBaselineUncertaintyAtExit";
  else {
    uint64_t v9 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v19[14] = v9;
  v18[15] = @"maxProxTemperature";
  else {
    int v10 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v19[15] = v10;
  v18[16] = @"minProxTemperature";
  else {
    double v11 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v19[16] = v11;
  v18[17] = @"meanProxTemperature";
  else {
    int v12 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v19[17] = v12;
  v18[18] = @"alwaysOnViewObstructed";
  if (sub_100A290E4())
  {
    unsigned __int8 v13 = atomic_load((unsigned __int8 *)(sub_100A290E4() + 96));
    __int16 v14 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v13 & 1);
  }

  else
  {
    __int16 v14 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }

  v19[18] = v14;
  v18[19] = @"displayState";
  v19[19] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(v2 + 20));
  _BYTE v18[20] = @"suppressionClientTypes";
  if (sub_100A290E4())
  {
    uint64_t v15 = atomic_load((unsigned int *)(sub_100A290E4() + 92));
    double v16 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v15);
  }

  else
  {
    double v16 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }

  v19[20] = v16;
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v19,  v18,  21LL);
}

uint64_t sub_1005089FC(uint64_t result, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 1);
  if (v2 == 2)
  {
    uint64_t v5 = result;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _WORD v6[2] = sub_100509070;
    v6[3] = &unk_101827B10;
    _DWORD v6[4] = result;
    v6[5] = a2;
    uint64_t result = AnalyticsSendEventLazy(@"com.apple.CoreMotion.ProxBaseliningOOB", v6);
    *(_BYTE *)(v5 + 16) = 0;
  }

  else
  {
    if (v2 == 1)
    {
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472LL;
      void v7[2] = sub_100508D7C;
      v7[3] = &unk_101820718;
      void v7[4] = a2;
      double v3 = @"com.apple.CoreMotion.ProxBaseliningSUI";
      int v4 = v7;
    }

    else
    {
      if (*(_BYTE *)(a2 + 1)) {
        return result;
      }
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      v8[2] = sub_100508B00;
      v8[3] = &unk_101820718;
      _DWORD v8[4] = a2;
      double v3 = @"com.apple.CoreMotion.ProxBaseliningTimeseries";
      int v4 = v8;
    }

    return AnalyticsSendEventLazy(v3, v4);
  }

  return result;
}

NSDictionary *sub_100508B00(uint64_t a1)
{
  v11[0] = @"logSequenceID";
  v12[0] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  (unint64_t)(CFAbsoluteTimeGetCurrent() * 1000000.0));
  v11[1] = @"timeSinceLastMeasurement";
  if (*(void *)(*(void *)(a1 + 32) + 26LL)) {
    int v2 = +[NSNumber numberWithUnsignedLongLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLongLong:");
  }
  else {
    int v2 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v12[1] = v2;
  _DWORD v11[2] = @"estimate";
  else {
    double v3 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  _DWORD v12[2] = v3;
  void v11[3] = @"uncertainty";
  else {
    int v4 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  void v12[3] = v4;
  _DWORD v11[4] = @"factoryCalibration";
  else {
    uint64_t v5 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  _DWORD v12[4] = v5;
  void v11[5] = @"currentLux";
  else {
    int v6 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  void v12[5] = v6;
  v11[6] = @"proxIntensity";
  else {
    double v7 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  v12[6] = v7;
  void v11[7] = @"temperature";
  else {
    CFAbsoluteTime v8 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  v12[7] = v8;
  _WORD v11[8] = @"temperatureAtLastMeasurement";
  else {
    uint64_t v9 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  _WORD v12[8] = v9;
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v12,  v11,  9LL);
}

NSDictionary *sub_100508D7C(uint64_t a1)
{
  v12[0] = @"resetTriggered";
  v13[0] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL);
  v12[1] = @"logSequenceID";
  v13[1] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  (unint64_t)(CFAbsoluteTimeGetCurrent() * 1000000.0));
  _DWORD v12[2] = @"suiCountSinceLastLog";
  uint64_t v13[2] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(*(void *)(a1 + 32) + 42LL));
  void v12[3] = @"timeSinceLastMeasurement";
  if (*(void *)(*(void *)(a1 + 32) + 26LL)) {
    int v2 = +[NSNumber numberWithUnsignedLongLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLongLong:");
  }
  else {
    int v2 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v13[3] = v2;
  _DWORD v12[4] = @"estimate";
  else {
    double v3 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  v13[4] = v3;
  void v12[5] = @"uncertainty";
  else {
    int v4 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  void v13[5] = v4;
  v12[6] = @"factoryCalibration";
  else {
    uint64_t v5 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  void v13[6] = v5;
  v12[7] = @"currentLux";
  else {
    int v6 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  void v13[7] = v6;
  _WORD v12[8] = @"proxIntensity";
  else {
    double v7 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  _WORD v13[8] = v7;
  void v12[9] = @"temperature";
  else {
    CFAbsoluteTime v8 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  v13[9] = v8;
  v12[10] = @"temperatureAtLastMeasurement";
  else {
    uint64_t v9 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  v13[10] = v9;
  v12[11] = @"minProxInLast3s";
  else {
    int v10 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  v13[11] = v10;
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v12,  12LL);
}

NSDictionary *sub_100509070(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v10[0] = @"isOutOfBox";
  v11[0] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(v2 + 16));
  v10[1] = @"logSequenceID";
  v11[1] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  (unint64_t)(CFAbsoluteTimeGetCurrent() * 1000000.0));
  void v10[2] = @"timeToFirstEstimate";
  _DWORD v11[2] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(*(void *)(a1 + 40) + 50LL));
  _DWORD v10[3] = @"estimate";
  else {
    double v3 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  void v11[3] = v3;
  _DWORD v10[4] = @"uncertainty";
  else {
    int v4 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  _DWORD v11[4] = v4;
  void v10[5] = @"factoryCalibration";
  else {
    uint64_t v5 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  void v11[5] = v5;
  v10[6] = @"currentLux";
  else {
    int v6 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  v11[6] = v6;
  v10[7] = @"proxIntensity";
  else {
    double v7 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  void v11[7] = v7;
  v10[8] = @"temperature";
  else {
    CFAbsoluteTime v8 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  _WORD v11[8] = v8;
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v11,  v10,  9LL);
}

uint64_t sub_1005092C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = a2;
  return result;
}

void sub_1005092C8(id a1)
{
  qword_1019344A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Eclipse");
}

uint64_t sub_1005092F4(uint64_t a1, int a2)
{
  if (*(_BYTE *)a1)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v6 = *(void *)(a1 + 56);
    double v8 = sub_101171D4C();
    double v9 = *(double *)(a1 + 8);
    double v10 = vabdd_f64(v8, v9);
    if (v9 >= 0.0) {
      double v11 = v10;
    }
    else {
      double v11 = -1.0;
    }
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10183E5D0);
    }
    int v12 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v13 = (*(void *)(a1 + 32) - *(void *)(a1 + 24)) >> 2;
      int v14 = -858993459 * ((*(void *)(a1 + 56) - *(void *)(a1 + 48)) >> 3);
      int v15 = -858993459 * ((*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 3);
      int v16 = *(unsigned __int8 *)(a1 + 16);
      *(_DWORD *)std::string buf = 67242240;
      int v71 = a2;
      __int16 v72 = 1026;
      BOOL v73 = v4 == v5;
      __int16 v74 = 1026;
      int v75 = v13;
      __int16 v76 = 1026;
      *(_DWORD *)__int128 v77 = v6 == v7;
      *(_WORD *)&v77[4] = 1026;
      *(_DWORD *)&v77[6] = v14;
      __int16 v78 = 1026;
      int v79 = 0;
      __int16 v80 = 1026;
      int v81 = v15;
      __int16 v82 = 2050;
      double v83 = v11;
      __int16 v84 = 1026;
      int v85 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "CLMM,MA-OTA,initialCheck,signalEnv,%{public}d,isSEOk,%{public}d,size,%{public}d,isPolygonOK,%{public}d,size,%{pu blic}d,isInsideSkippedPolygon,%{public}d,size,%{public}d,dtSinceLastMMStateChangedBasedOnSE,%{public}.1lf,mmStat eBasedOnSE,%{public}d",  buf,  0x3Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183E5D0);
      }
      uint64_t v41 = (*(void *)(a1 + 32) - *(void *)(a1 + 24)) >> 2;
      int v42 = -858993459 * ((*(void *)(a1 + 56) - *(void *)(a1 + 48)) >> 3);
      int v43 = -858993459 * ((*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 3);
      int v44 = *(unsigned __int8 *)(a1 + 16);
      LODWORD(v59) = 67242240;
      HIDWORD(v59) = a2;
      LOWORD(v6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1026;
      *(_DWORD *)((char *)&v60 + 2) = v4 == v5;
      HIWORD(v6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1026;
      LODWORD(v61) = v41;
      WORD2(v61) = 1026;
      *(_DWORD *)((char *)&v61 + 6) = v6 == v7;
      WORD5(v61) = 1026;
      HIDWORD(v61) = v42;
      __int16 v62 = 1026;
      int v63 = 0;
      __int16 v64 = 1026;
      int v65 = v43;
      __int16 v66 = 2050;
      double v67 = v11;
      __int16 v68 = 1026;
      int v69 = v44;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,MA-OTA,initialCheck,signalEnv,%{public}d,isSEOk,%{public}d,size,%{public}d,isPolygonOK,%{public}d,size,%{pu blic}d,isInsideSkippedPolygon,%{public}d,size,%{public}d,dtSinceLastMMStateChangedBasedOnSE,%{public}.1lf,mmStat eBasedOnSE,%{public}d",  &v59,  60);
      __int128 v46 = (uint8_t *)v45;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLMapMatcherOperatingPolicy::CLMapMatcherOperatingRegions::canMapMatch(const CLSignalEnvironmentProvider_Ty pe::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v45);
      if (v46 != buf) {
        free(v46);
      }
    }

    if (v4 == v5) {
      goto LABEL_40;
    }
    uint64_t v18 = *(void *)(a1 + 24);
    uint64_t v17 = *(void *)(a1 + 32);
    if (v18 == v17)
    {
      int v21 = 0;
    }

    else
    {
      uint64_t v19 = v18 + 4;
      do
      {
        int v20 = *(_DWORD *)(v19 - 4);
        int v21 = v20 == a2;
        BOOL v22 = v20 == a2 || v19 == v17;
        v19 += 4LL;
      }

      while (!v22);
    }

    int v26 = *(unsigned __int8 *)(a1 + 16);
    if (v26 != v21 && (*(double *)(a1 + 8) < 0.0 || v11 > 120.0))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183E5D0);
      }
      __int128 v28 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        int v29 = *(unsigned __int8 *)(a1 + 16);
        *(_DWORD *)std::string buf = 67240448;
        int v71 = v29;
        __int16 v72 = 1026;
        BOOL v73 = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CLMM,MA-OTA,seStateChanged,prevSEState,%{public}d,newSEState,%{public}d",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        int v49 = *(unsigned __int8 *)(a1 + 16);
        LODWORD(v59) = 67240448;
        HIDWORD(v59) = v49;
        LOWORD(v6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1026;
        *(_DWORD *)((char *)&v60 + 2) = v21;
        LODWORD(v5_Block_object_dispose((const void *)(v1 - 232), 8) = 14;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,MA-OTA,seStateChanged,prevSEState,%{public}d,newSEState,%{public}d",  &v59,  v58);
        __int128 v51 = (uint8_t *)v50;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLMapMatcherOperatingPolicy::CLMapMatcherOperatingRegions::canMapMatch(const CLSignalEnvironmentProvider_ Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v50);
        if (v51 != buf) {
          free(v51);
        }
      }

      *(_BYTE *)(a1 + 16) = v21;
      *(double *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v8;
      int v26 = v21;
    }

    if (v26)
    {
LABEL_40:
      if (v6 == v7)
      {
LABEL_71:
        for (uint64_t i = *(void *)(a1 + 72); ; i += 40LL)
        {
          if (i == *(void *)(a1 + 80))
          {
            int v37 = 0;
            goto LABEL_84;
          }

          if (*(_BYTE *)(i + 8)) {
            break;
          }
        }

        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        uint64_t v38 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v39 = (void *)(i + 16);
          *(_DWORD *)std::string buf = 67240963;
          int v71 = 1;
          __int16 v72 = 1026;
          BOOL v73 = 1;
          __int16 v74 = 1026;
          int v75 = 1;
          __int16 v76 = 2081;
          *(void *)__int128 v77 = v39;
          _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "CLMM,MA-OTA,skipRegionCheck,isSEOk,%{public}d,isPolygonOK,%{public}d,isInsideSkippedPolygon,%{public}d,inside,%{private}s",  buf,  0x1Eu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10183E5D0);
          }
          unint64_t v55 = (void *)(i + 16);
          uint64_t v59 = 0x104020403LL;
          uint64_t v60 = 0x402000000010402LL;
          LODWORD(v61) = 1;
          WORD2(v61) = 2081;
          *(void *)((char *)&v61 + 6) = v55;
          LODWORD(v5_Block_object_dispose((const void *)(v1 - 232), 8) = 30;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,MA-OTA,skipRegionCheck,isSEOk,%{public}d,isPolygonOK,%{public}d,isInsideSkippedPolygon,%{public}d,inside,%{private}s",  &v59,  v58);
          __int128 v57 = (uint8_t *)v56;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLMapMatcherOperatingPolicy::CLMapMatcherOperatingRegions::canMapMatch(const CLSignalEnvironmentProvide r_Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v56);
          if (v57 != buf) {
            free(v57);
          }
        }

        int v37 = 1;
LABEL_84:
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        unint64_t v40 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 67240704;
          int v71 = 1;
          __int16 v72 = 1026;
          BOOL v73 = 1;
          __int16 v74 = 1026;
          int v75 = v37;
          _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "CLMM,MA-OTA,final,isSEOk,%{public}d,isPolygonOK,%{public}d,isInsideSkippedPolygon,%{public}d",  buf,  0x14u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10183E5D0);
          }
          uint64_t v59 = 0x104020300LL;
          uint64_t v60 = 0x402000000010402LL;
          LODWORD(v61) = v37;
          LODWORD(v5_Block_object_dispose((const void *)(v1 - 232), 8) = 20;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,MA-OTA,final,isSEOk,%{public}d,isPolygonOK,%{public}d,isInsideSkippedPolygon,%{public}d",  &v59,  v58);
          uint64_t v48 = (uint8_t *)v47;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLMapMatcherOperatingPolicy::CLMapMatcherOperatingRegions::canMapMatch(const CLSignalEnvironmentProvide r_Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v47);
          if (v48 != buf) {
            free(v48);
          }
        }

        return v37 ^ 1u;
      }

      else
      {
        for (uint64_t j = *(void *)(a1 + 48); j != *(void *)(a1 + 56); j += 40LL)
        {
          if (*(_BYTE *)(j + 8))
          {
            if (qword_1019348B0 != -1) {
              dispatch_once(&qword_1019348B0, &stru_10183E5D0);
            }
            __int128 v34 = (os_log_s *)qword_1019348B8;
            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v35 = (void *)(j + 16);
              *(_DWORD *)std::string buf = 67240963;
              int v71 = 1;
              __int16 v72 = 1026;
              BOOL v73 = 1;
              __int16 v74 = 1026;
              int v75 = 0;
              __int16 v76 = 2081;
              *(void *)__int128 v77 = v35;
              _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "CLMM,MA-OTA,polygonCheck,isSEOk,%{public}d,isPolygonOK,%{public}d,isInsideSkippedPolygon,%{public}d,inside,%{private}s",  buf,  0x1Eu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_10183E5D0);
              }
              char v52 = (void *)(j + 16);
              uint64_t v59 = 0x104020403LL;
              uint64_t v60 = 0x402000000010402LL;
              LODWORD(v61) = 0;
              WORD2(v61) = 2081;
              *(void *)((char *)&v61 + 6) = v52;
              LODWORD(v5_Block_object_dispose((const void *)(v1 - 232), 8) = 30;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,MA-OTA,polygonCheck,isSEOk,%{public}d,isPolygonOK,%{public}d,isInsideSkippedPolygon,%{public}d,inside,%{private}s",  &v59,  v58);
              int v54 = (uint8_t *)v53;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLMapMatcherOperatingPolicy::CLMapMatcherOperatingRegions::canMapMatch(const CLSignalEnvironmentPro vider_Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v53);
              if (v54 != buf) {
                free(v54);
              }
            }

            goto LABEL_71;
          }
        }

        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        __int128 v31 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 67240704;
          int v71 = 1;
          __int16 v72 = 1026;
          BOOL v73 = 0;
          __int16 v74 = 1026;
          int v75 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEBUG,  "CLMM,MA-OTA,polygonCheck,isSEOk,%{public}d,isPolygonOK,%{public}d,isInsideSkippedPolygon,%{public}d,early re turn due to failed polygon check - skipregion not checked)",  buf,  0x14u);
        }

        uint64_t result = sub_1002921D0(115, 2);
        if ((_DWORD)result)
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_10183E5D0);
          }
          LODWORD(v61) = 0;
          LODWORD(v5_Block_object_dispose((const void *)(v1 - 232), 8) = 20;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,MA-OTA,polygonCheck,isSEOk,%{public}d,isPolygonOK,%{public}d,isInsideSkippedPolygon,%{public}d,early re turn due to failed polygon check - skipregion not checked)",  &v59,  v58,  0x104020300LL,  0x402000000000402LL,  (void)v61);
LABEL_61:
          __int128 v33 = (uint8_t *)v25;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLMapMatcherOperatingPolicy::CLMapMatcherOperatingRegions::canMapMatch(const CLSignalEnvironmentProvide r_Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v25);
          if (v33 != buf) {
            free(v33);
          }
          return 0LL;
        }
      }
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183E5D0);
      }
      int v32 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 67240704;
        int v71 = 0;
        __int16 v72 = 1026;
        BOOL v73 = v6 == v7;
        __int16 v74 = 1026;
        int v75 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "CLMM,MA-OTA,seCheck,isSEOk,%{public}d,isPolygonOK,%{public}d,isInsideSkippedPolygon,%{public}d,early return du e to failed se check - polygon not checked)",  buf,  0x14u);
      }

      uint64_t result = sub_1002921D0(115, 2);
      if ((_DWORD)result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        LOWORD(v6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1026;
        *(_DWORD *)((char *)&v60 + 2) = v6 == v7;
        HIWORD(v6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1026;
        LODWORD(v61) = 0;
        LODWORD(v5_Block_object_dispose((const void *)(v1 - 232), 8) = 20;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,MA-OTA,seCheck,isSEOk,%{public}d,isPolygonOK,%{public}d,isInsideSkippedPolygon,%{public}d,early return du e to failed se check - polygon not checked)",  &v59,  v58,  67240704LL,  v60,  (void)v61);
        goto LABEL_61;
      }
    }
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10183E5D0);
    }
    __int16 v23 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "CLMM,MA-OTA,MM disabled for this country",  buf,  2u);
    }

    uint64_t result = sub_1002921D0(115, 2);
    if ((_DWORD)result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183E5D0);
      }
      LOWORD(v59) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,MA-OTA,MM disabled for this country",  &v59,  2,  v59,  v60,  (void)v61);
      goto LABEL_61;
    }
  }

  return result;
}

void sub_10050A044( uint64_t a1, uint64_t a2, uint64_t a3, CLMotionActivity *a4, unsigned int *a5, char *a6, int a7)
{
  uint64_t v12 = *(void *)(a2 + 76);
  double v13 = *(double *)(a3 + 344);
  double v14 = *(double *)(a2 + 44);
  if (v13 <= 0.0)
  {
    double v13 = sub_101171D4C();
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10183E5D0);
    }
    int v15 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 134349312;
      uint64_t v102 = v12;
      __int16 v103 = 2050;
      *(double *)int v104 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,operatingDynamics,overwriting machContinuousTime,machContinuousTime,%{public}.1lf",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183E5D0);
      }
      *(_DWORD *)__int128 v98 = 134349312;
      *(void *)&v98[4] = v12;
      *(_WORD *)&v98[12] = 2050;
      *(double *)&v98[14] = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,operatingDynamics,overwriting machContinuousTime,machContinuousTime,%{public}.1lf",  v98,  22);
      __int16 v74 = (uint8_t *)v73;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMapMatcherOperatingPolicy::CLMapMatcherOperatingDynamics::determineOperatingDynamics(const CLDaemonLocati on &, const CLDaemonLocationPrivate &, const CLMotionActivity &, const CLMotionActivity::Type &, const std::stri ng &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v73);
      if (v74 != buf) {
        free(v74);
      }
    }
  }

  if (v14 > 45.0)
  {
    *(_DWORD *)(a1 + 4) = 0;
    *(double *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v13;
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_10183E5D0);
    }
    int v16 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 134349568;
      uint64_t v102 = v12;
      __int16 v103 = 2050;
      *(double *)int v104 = v14;
      *(_WORD *)&v104[8] = 2050;
      *(void *)&v104[10] = 0x4046800000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,operatingDynamics,not matching,non-terrestrial speedMps,%{public}.2lf,threshold,%{public}.1lf",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183E5D0);
      }
      *(_DWORD *)__int128 v98 = 134349568;
      *(void *)&v98[4] = v12;
      *(_WORD *)&v98[12] = 2050;
      *(double *)&v98[14] = v14;
      *(_WORD *)&v98[22] = 2050;
      LODWORD(v97) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,operatingDynamics,not matching,non-terrestrial speedMps,%{public}.2lf,threshold,%{public}.1lf",  v98,  v97,  *(_OWORD *)v98,  *(void *)&v98[16],  0x4046800000000000LL);
LABEL_16:
      uint64_t v18 = (uint8_t *)v17;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMapMatcherOperatingPolicy::CLMapMatcherOperatingDynamics::determineOperatingDynamics(const CLDaemonLocati on &, const CLDaemonLocationPrivate &, const CLMotionActivity &, const CLMotionActivity::Type &, const std::stri ng &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v17);
      if (v18 != buf) {
        free(v18);
      }
      return;
    }

    return;
  }

  *(_BYTE *)(a1 + 8_Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  if (!sub_100ECF4A4(a1 + 40, v13, 6.0))
  {
    int v19 = *(_DWORD *)(a1 + 40);
    if (v19 == 3)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183E5D0);
      }
      int v49 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134349312;
        uint64_t v102 = v12;
        __int16 v103 = 2050;
        *(double *)int v104 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,operatingDynamics,cycle matching,routehints,speed,%{public}.2lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        *(_DWORD *)__int128 v98 = 134349312;
        *(void *)&v98[4] = v12;
        *(_WORD *)&v98[12] = 2050;
        *(double *)&v98[14] = v14;
        LODWORD(v97) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,operatingDynamics,cycle matching,routehints,speed,%{public}.2lf",  v98,  v97);
        uint64_t v88 = (uint8_t *)v87;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMapMatcherOperatingPolicy::CLMapMatcherOperatingDynamics::determineOperatingDynamics(const CLDaemonLoca tion &, const CLDaemonLocationPrivate &, const CLMotionActivity &, const CLMotionActivity::Type &, const std:: string &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v87);
        if (v88 != buf) {
          free(v88);
        }
      }

      *(double *)(a1 + 32) = v13;
      *(_BYTE *)(a1 + 8_Block_object_dispose((const void *)(v1 - 232), 8) = 1;
      goto LABEL_103;
    }

    if (v19 == 1)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183E5D0);
      }
      __int128 v50 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134349312;
        uint64_t v102 = v12;
        __int16 v103 = 2050;
        *(double *)int v104 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,operatingDynamics,vehicle matching,routehints,speed,%{public}.2lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        *(_DWORD *)__int128 v98 = 134349312;
        *(void *)&v98[4] = v12;
        *(_WORD *)&v98[12] = 2050;
        *(double *)&v98[14] = v14;
        LODWORD(v97) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,operatingDynamics,vehicle matching,routehints,speed,%{public}.2lf",  v98,  v97);
        uint64_t v90 = (uint8_t *)v89;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMapMatcherOperatingPolicy::CLMapMatcherOperatingDynamics::determineOperatingDynamics(const CLDaemonLoca tion &, const CLDaemonLocationPrivate &, const CLMotionActivity &, const CLMotionActivity::Type &, const std:: string &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v89);
        if (v90 != buf) {
          free(v90);
        }
      }

      *(double *)(a1 + 16) = v13;
      int v31 = 1;
      *(_BYTE *)(a1 + 8_Block_object_dispose((const void *)(v1 - 232), 8) = 1;
      goto LABEL_148;
    }

    if (!v19 && v14 >= 0.0 && v14 < 13.0)
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183E5D0);
      }
      int v20 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134349312;
        uint64_t v102 = v12;
        __int16 v103 = 2050;
        *(double *)int v104 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,operatingDynamics,pedestrian matching,routehints,speed,%{public}.2lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        *(_DWORD *)__int128 v98 = 134349312;
        *(void *)&v98[4] = v12;
        *(_WORD *)&v98[12] = 2050;
        *(double *)&v98[14] = v14;
        LODWORD(v97) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,operatingDynamics,pedestrian matching,routehints,speed,%{public}.2lf",  v98,  v97);
        uint64_t v93 = (uint8_t *)v92;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMapMatcherOperatingPolicy::CLMapMatcherOperatingDynamics::determineOperatingDynamics(const CLDaemonLoca tion &, const CLDaemonLocationPrivate &, const CLMotionActivity &, const CLMotionActivity::Type &, const std:: string &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v92);
        if (v93 != buf) {
          free(v93);
        }
      }

      *(double *)(a1 + 24) = v13;
      *(_BYTE *)(a1 + 8_Block_object_dispose((const void *)(v1 - 232), 8) = 1;
      goto LABEL_51;
    }
  }

  uint64_t v21 = *(int *)(a1 + 4);
  if (!(_DWORD)v21
    || ((double v22 = *(double *)(a1 + 8 * v21 + 8), v23 = v13 - v22, v22 > 0.0) ? (v24 = v23 < 3.0) : (v24 = 0), !v24))
  {
    double v25 = *(double *)(a1 + 24);
    BOOL v26 = v13 - v25 < 30.0 && v25 > 0.0;
    if (CLMotionActivity::isTypePedestrian(a4->type)
      && (a4->confidence > 0 ? (char v27 = 1) : (char v27 = v26), (v27 & 1) != 0)
      || CLMotionActivity::isTypePedestrian(*a5))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_10183E5D0);
      }
      __int128 v28 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        int type = a4->type;
        int v30 = *a5;
        *(_DWORD *)std::string buf = 134350080;
        uint64_t v102 = v12;
        __int16 v103 = 2050;
        *(double *)int v104 = v14;
        *(_WORD *)&v104[8] = 1026;
        *(_DWORD *)&v104[10] = v26;
        *(_WORD *)&v104[14] = 1026;
        *(_DWORD *)&v104[16] = type;
        __int16 v105 = 1026;
        int v106 = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,operatingDynamics,pedestrian matching,walking dynamics,speed,%{public}.2lf,wasRecentlyWalki ng,%{public}d,motion,%{public}d,fitness,%{public}d",  buf,  0x28u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        int v79 = a4->type;
        int v80 = *a5;
        *(_DWORD *)__int128 v98 = 134350080;
        *(void *)&v98[4] = v12;
        *(_WORD *)&v98[12] = 2050;
        *(double *)&v98[14] = v14;
        *(_WORD *)&v98[22] = 1026;
        *(_DWORD *)&v98[24] = v26;
        *(_WORD *)&v98[28] = 1026;
        *(_DWORD *)&v98[30] = v79;
        __int16 v99 = 1026;
        int v100 = v80;
        LODWORD(v97) = 40;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,operatingDynamics,pedestrian matching,walking dynamics,speed,%{public}.2lf,wasRecentlyWalki ng,%{public}d,motion,%{public}d,fitness,%{public}d",  v98,  v97);
        __int16 v82 = (uint8_t *)v81;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMapMatcherOperatingPolicy::CLMapMatcherOperatingDynamics::determineOperatingDynamics(const CLDaemonLoca tion &, const CLDaemonLocationPrivate &, const CLMotionActivity &, const CLMotionActivity::Type &, const std:: string &, const CLSignalEnvironmentProvider_Type::SignalEnvironmentType, const CLClientLocationCoordinate &)",  "%s\n",  v81);
        if (v82 != buf) {
          free(v82);
        }
      }

      *(double *)(a1 + 24) = v13;
      if (!*(_BYTE *)(a1 + 3) || (sub_10050BBD0((uint64_t **)(a1 + 96), (const void **)a6, 2, a7) & 1) == 0)
      {
        *(void *)(a1 + 24) = 0xBFF0000000000000LL;
        *(double *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v13;
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        int v32 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          int v33 = *(unsigned __int8 *)(a1 + 3);
          if (a6[23] >= 0) {
            __int128 v34 = a6;
          }
          else {
            __int128 v34 = *(char **)a6;
          }
          *(_DWORD *)std::string buf = 134349571;
          uint64_t v102 = v12;
          __int16 v103 = 1026;
          *(_DWORD *)int v104 = v33;
          *(_WORD *)&v104[4] = 2081;
          *(void *)&v104[6] = v34;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "CLMM,%{public}.1lf,operatingDynamics, activity based pedestrian map-matching not allowed,%{public}d, or coun try not supported,%{private}s, setting unknown",  buf,  0x1Cu);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_147;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_10183E5D0);
        }
        int v35 = *(unsigned __int8 *)(a1 + 3);
        if (a6[23] >= 0) {
          __int16 v36 = a6;
        }
        else {
          __int16 v36 = *(char **)a6;
        }
        *(_DWORD *)__int128 v98 = 134349571;
        *(void *)&v98[4] = v12;
        *(_WORD *)&v98[12] = 1026;
        *(_DWORD *)&v98[14] = v35;
        *(_WORD *)&v98[18] = 2081;
        *(void *)&v98[20] = v36;
        LODWORD(v97) = 28;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,%{public}.1lf,operatingDynamics, activity based pedestrian map-matching not allowed,%{public}d, or countr y not supported,%{private}s, setting unknown",  v98,  v97,  *(void *)v98,  *(_OWORD *)&v98[8],  *(void *)&v98[24]);
        goto LABEL_227;
      }

uint64_t sub_10050BBD0(uint64_t **a1, const void **a2, int a3, int a4)
{
  uint64_t v6 = (__int128 *)a2;
  if (sub_1004DAD38((uint64_t)a1, a2)
    || (uint64_t v6 = (__int128 *)qword_1019968C8, (result = sub_1004DAD38((uint64_t)a1, (const void **)qword_1019968C8)) != 0))
  {
    double v10 = v6;
    double v9 = sub_10050BEB0(a1, (const void **)v6, (uint64_t)&unk_1012CF090, &v10);
    return sub_1005092F4((uint64_t)&v9[12 * a3 + 10], a4);
  }

  return result;
}

void sub_10050BC5C(id a1)
{
  qword_1019348B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

uint64_t sub_10050BC88(uint64_t a1)
{
  *(_DWORD *)a1 = 16777472;
  *(_BYTE *)(a1 + 4) = 1;
  *(_DWORD *)(a1 + 5) = 0;
  *(_OWORD *)(a1 + 2_Block_object_dispose((const void *)(v1 - 232), 8) = xmmword_1012EFD30;
  *(_OWORD *)(a1 + 44) = xmmword_1012EFD40;
  *(_DWORD *)(a1 + 6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 400;
  *(void *)&__int128 v2 = -1LL;
  *((void *)&v2 + 1) = -1LL;
  *(_OWORD *)(a1 + 64) = v2;
  *(_OWORD *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v2;
  *(_OWORD *)(a1 + 96) = v2;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 232), 8) = v2;
  *(_DWORD *)(a1 + 144) = -1;
  *(_OWORD *)(a1 + 14_Block_object_dispose((const void *)(v1 - 232), 8) = xmmword_1012EFD50;
  *(_OWORD *)(a1 + 12) = xmmword_1012EFD60;
  *(_DWORD *)(a1 + sub_1000A56E8(v1 + 72) = 125000;
  *(_DWORD *)(a1 + 84) = 125000;
  *(_DWORD *)(a1 + 96) = 125000;
  *(_DWORD *)(a1 + 10_Block_object_dispose((const void *)(v1 - 232), 8) = 15000;
  *(_DWORD *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 25000;
  *(_DWORD *)(a1 + 132) = -1;
  *(_DWORD *)(a1 + 144) = -1;
  return a1;
}

void sub_10050BD4C(void ***a1)
{
  __int128 v2 = *a1;
  if (*v2)
  {
    sub_10050BD8C((uint64_t *)v2);
    operator delete(**a1);
  }

void sub_10050BD8C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 40LL)
  {
  }

  a1[1] = v2;
}

void sub_10050BDD8(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10050BDD8(a1, *a2);
    sub_10050BDD8(a1, a2[1]);
    sub_10050BE20((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_10050BE20(uint64_t a1)
{
  for (uint64_t i = 0LL; i != -384; i -= 96LL)
  {
    uint64_t v4 = (void **)(a1 + i + 408);
    sub_10050BD4C(&v4);
    uint64_t v4 = (void **)(a1 + i + 384);
    sub_10050BD4C(&v4);
    double v3 = *(void **)(a1 + i + 360);
    if (v3)
    {
      *(void *)(a1 + i + 36_Block_object_dispose((const void *)(v1 - 232), 8) = v3;
      operator delete(v3);
    }
  }

uint64_t *sub_10050BEB0(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t v6 = (uint64_t **)sub_1000227E8((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    double v8 = v6;
    sub_10050BF58((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000085FC(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0LL;
    sub_10050C104((uint64_t)v10, 0LL);
  }

  return v7;
}

char *sub_10050BF58@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x278uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 232), 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  double v8 = *a2;
  uint64_t result = sub_10050BFD4(v6 + 32, &v8);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10050BFBC(_Unwind_Exception *a1)
{
}

char *sub_10050BFD4(char *__dst, __int128 **a2)
{
  double v3 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)v3, *((void *)v3 + 1));
  }

  else
  {
    __int128 v4 = *v3;
    *((void *)__dst + 2) = *((void *)v3 + 2);
    *(_OWORD *)__dst = v4;
  }

  bzero(__dst + 24, 0x240uLL);
  uint64_t v5 = 48LL;
  do
  {
    uint64_t v6 = &__dst[v5];
    char *v6 = 0;
    *((void *)v6 + 1) = 0xBFF0000000000000LL;
    v6[16] = 0;
    *(_OWORD *)(v6 + 24) = 0uLL;
    *(_OWORD *)(v6 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0uLL;
    *(_OWORD *)(v6 + 56) = 0uLL;
    *(_OWORD *)(v6 + sub_1000A56E8(v1 + 72) = 0uLL;
    v5 += 96LL;
    *((void *)v6 + 11) = 0LL;
  }

  while (v6 + 96 != __dst + 432);
  sub_10050BC88((uint64_t)(__dst + 432));
  return __dst;
}

void sub_10050C094( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  uint64_t v13 = 0LL;
  while (1)
  {
    a10 = (void **)(v10 + v13 + 408);
    sub_10050BD4C(&a10);
    a10 = (void **)(v10 + v13 + 384);
    sub_10050BD4C(&a10);
    double v14 = *(void **)(v10 + v13 + 360);
    if (v14)
    {
      *(void *)(v10 + v13 + 36_Block_object_dispose((const void *)(v1 - 232), 8) = v14;
      operator delete(v14);
    }

    v13 -= 96LL;
    if (v13 == -384)
    {
      _Unwind_Resume(a1);
    }
  }

void sub_10050C104(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_10050BE20((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t sub_10050C148()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_1019968C8, (void *)&_mh_execute_header);
}

BOOL sub_10050C8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  float v6 = sub_100833470((float *)a2);
  float v8 = v7;
  float v10 = v9;
  float v11 = *(float *)(a2 + 16);
  float v12 = *(float *)(a2 + 20);
  float v13 = *(float *)(a2 + 24);
  sub_1008335D0((float *)a2, v44);
  sub_1002B89B4((uint64_t)v44, (uint64_t)v45);
  float v14 = sub_1002B8A2C((uint64_t)v45, (float *)(a2 + 28));
  uint64_t v16 = 0LL;
  float v17 = 0.0;
  do
  {
    float v17 = v17 + (float)(*(float *)(a2 + 28 + v16) * *(float *)(a2 + 28 + v16));
    v16 += 4LL;
  }

  while (v16 != 12);
  float v18 = sqrt(v14 * v14 + v15 * v15);
  *(float *)(a1 + 32) = *(float *)(a1 + 32) + v18;
  ++*(void *)(a1 + 40);
  *(float *)a1 = sqrtf(v17) + *(float *)a1;
  unint64_t v19 = *(void *)(a1 + 8) + 1LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v19;
  float v20 = fabsf((float)((float)(v8 * v12) + (float)(v6 * v11)) + (float)(v10 * v13)) + *(float *)(a1 + 16);
  *(float *)(a1 + 16) = v20;
  uint64_t v21 = *(void *)(a1 + 24) + 1LL;
  *(void *)(a1 + 24) = v21;
  if (v19 >= 0x100)
  {
    if (v21) {
      float v22 = v20 / (float)(unint64_t)v21;
    }
    else {
      float v22 = 0.0;
    }
    uint64_t v23 = *(unsigned __int16 *)(a1 + 108);
    uint64_t v24 = *(unsigned __int16 *)(a1 + 110);
    unint64_t v25 = *(unsigned int *)(a1 + 112);
    if (v23 + v24 >= v25) {
      uint64_t v26 = *(unsigned int *)(a1 + 112);
    }
    else {
      uint64_t v26 = 0LL;
    }
    *(float *)(a1 + 108 + 4 * (v23 + v24 - v26) + _Block_object_dispose((const void *)(v1 - 232), 8) = v22;
    if (v25 <= v24)
    {
      unint64_t v27 = v23 + 1;
      if (v27 < v25) {
        LOWORD(v25) = 0;
      }
      *(_WORD *)(a1 + 10_Block_object_dispose((const void *)(v1 - 232), 8) = v27 - v25;
    }

    else
    {
      *(_WORD *)(a1 + 11sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v24 + 1;
    }

    *(_BYTE *)(a1 + 92) = 1;
    *(_DWORD *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0LL;
    sub_100208C68(a1 + 92);
    *(_DWORD *)(a3 + 12) = *(_DWORD *)(a1 + 96);
    unint64_t v28 = *(void *)(a1 + 8);
    if (v28) {
      float v29 = *(float *)a1 / (float)v28;
    }
    else {
      float v29 = 0.0;
    }
    uint64_t v30 = *(unsigned __int16 *)(a1 + 64);
    uint64_t v31 = *(unsigned __int16 *)(a1 + 66);
    unint64_t v32 = *(unsigned int *)(a1 + 68);
    if (v30 + v31 >= v32) {
      uint64_t v33 = *(unsigned int *)(a1 + 68);
    }
    else {
      uint64_t v33 = 0LL;
    }
    *(float *)(a1 + 64 + 4 * (v30 + v31 - v33) + _Block_object_dispose((const void *)(v1 - 232), 8) = v29;
    if (v32 <= v31)
    {
      unint64_t v34 = v30 + 1;
      if (v34 < v32) {
        LOWORD(v32) = 0;
      }
      *(_WORD *)(a1 + 64) = v34 - v32;
    }

    else
    {
      *(_WORD *)(a1 + 66) = v31 + 1;
    }

    *(_BYTE *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = 1;
    *(_DWORD *)a1 = 0;
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
    sub_100208C68(a1 + 48);
    *(_DWORD *)(a3 + _Block_object_dispose((const void *)(v1 - 232), 8) = *(_DWORD *)(a1 + 52);
    unint64_t v35 = *(void *)(a1 + 40);
    if (v35) {
      float v36 = *(float *)(a1 + 32) / (float)v35;
    }
    else {
      float v36 = 0.0;
    }
    float v37 = fabsf(v36);
    uint64_t v38 = *(unsigned __int16 *)(a1 + 152);
    uint64_t v39 = *(unsigned __int16 *)(a1 + 154);
    unint64_t v40 = *(unsigned int *)(a1 + 156);
    if (v38 + v39 >= v40) {
      uint64_t v41 = *(unsigned int *)(a1 + 156);
    }
    else {
      uint64_t v41 = 0LL;
    }
    *(float *)(a1 + 152 + 4 * (v38 + v39 - v41) + _Block_object_dispose((const void *)(v1 - 232), 8) = v37;
    if (v40 <= v39)
    {
      unint64_t v42 = v38 + 1;
      if (v42 < v40) {
        LOWORD(v4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
      }
      *(_WORD *)(a1 + 152) = v42 - v40;
    }

    else
    {
      *(_WORD *)(a1 + 154) = v39 + 1;
    }

    *(_BYTE *)(a1 + 136) = 1;
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
    sub_100208C68(a1 + 136);
    *(_DWORD *)(a3 + 16) = *(_DWORD *)(a1 + 140);
    *(void *)a3 = *(void *)(a2 + 48);
  }

  return v19 > 0xFF;
}

int32x2_t *sub_10050CB84(int32x2_t *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v3 = *a2;
    __dst[2] = (int32x2_t)a2[1];
    *(_OWORD *)__dst->i8 = v3;
  }

  __dst[3] = 0LL;
  __dst[4] = 0LL;
  __dst[5] = 0LL;
  __dst[6] = vdup_n_s32(0xC61C3C00);
  __dst[7].i32[0] = -971228160;
  __dst[8] = (int32x2_t)0xBFF0000000000000LL;
  return __dst;
}

void sub_10050CBF8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5 = a1;
  sub_1004C81BC(a1 + 48, *(double *)a2);
  unint64_t v6 = *(void *)(v5 + 40);
  float v7 = *(_OWORD **)(v5 + 32);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v9 = *(void *)(v5 + 24);
    uint64_t v10 = ((uint64_t)v7 - v9) >> 4;
    unint64_t v11 = v10 + 1;
    uint64_t v12 = v6 - v9;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13) {
      float v14 = (char *)sub_100037038(v5 + 40, v13);
    }
    else {
      float v14 = 0LL;
    }
    float v15 = &v14[16 * v10];
    uint64_t v16 = &v14[16 * v13];
    *(_OWORD *)float v15 = *(_OWORD *)a2;
    float v8 = v15 + 16;
    float v18 = *(char **)(v5 + 24);
    float v17 = *(char **)(v5 + 32);
    if (v17 != v18)
    {
      do
      {
        *((_OWORD *)v15 - 1) = *((_OWORD *)v17 - 1);
        v15 -= 16;
        v17 -= 16;
      }

      while (v17 != v18);
      float v17 = *(char **)(v5 + 24);
    }

    *(void *)(v5 + 24) = v15;
    *(void *)(v5 + 32) = v8;
    *(void *)(v5 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v16;
    if (v17) {
      operator delete(v17);
    }
  }

  else
  {
    _OWORD *v7 = *(_OWORD *)a2;
    float v8 = v7 + 1;
  }

  *(void *)(v5 + 32) = v8;
  sub_10050CEF4(v5, a3);
  if (qword_101934750 != -1) {
    dispatch_once(&qword_101934750, &stru_10183E5F0);
  }
  unint64_t v19 = (os_log_s *)qword_101934758;
  if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_INFO))
  {
    uint64_t v20 = v5;
    double v21 = *(float *)(a2 + 8);
    double v22 = *(double *)a2;
    *(_DWORD *)std::string buf = 136315650;
    uint64_t v34 = v20;
    __int16 v35 = 2050;
    double v36 = v21;
    __int16 v37 = 2050;
    double v38 = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "IndoorOutdoor,ALSScan,context,%s,lux,%{public}.0f,t,%{public}f",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183E5F0);
    }
    double v23 = *(float *)(a2 + 8);
    double v24 = *(double *)a2;
    int v27 = 136315650;
    uint64_t v28 = v5;
    __int16 v29 = 2050;
    double v30 = v23;
    __int16 v31 = 2050;
    double v32 = v24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  1LL,  "IndoorOutdoor,ALSScan,context,%s,lux,%{public}.0f,t,%{public}f",  &v27,  32);
    uint64_t v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLALSIndoorOutdoorDetector::feedALSScanResult(const CLAmbientLightSensor_Type::CLALSLuxResult &, CFAbsoluteTime)",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

uint64_t sub_10050CEF4(uint64_t result, double a2)
{
  __int128 v3 = *(double **)(result + 24);
  uint64_t v2 = *(double **)(result + 32);
  if (v3 != v2)
  {
    while (vabdd_f64(a2, *v3) <= 150.0)
    {
      v3 += 2;
      if (v3 == v2) {
        return result;
      }
    }

    if (v3 != v2)
    {
      __int128 v4 = v3 + 2;
      if (v3 + 2 != v2)
      {
        do
        {
          if (vabdd_f64(a2, *v4) <= 150.0)
          {
            *(_OWORD *)__int128 v3 = *(_OWORD *)v4;
            v3 += 2;
          }

          v4 += 2;
        }

        while (v4 != v2);
        uint64_t v2 = *(double **)(result + 32);
      }
    }

    if (v3 != v2) {
      *(void *)(result + 32) = v3;
    }
  }

  return result;
}

unint64_t sub_10050CFB4(uint64_t a1, double a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  if (v3 == v4)
  {
    unint64_t v10 = 0LL;
    float v11 = 0.0;
  }

  else
  {
    float v5 = 0.0;
    unint64_t v6 = -1LL;
    float v7 = 0.0;
    do
    {
      float v8 = *(float *)(v3 + 8);
      float v9 = v8 - v7;
      float v7 = v7 + (float)((float)(v8 - v7) / (float)(v6 + 2));
      float v5 = v5 + (float)(v9 * (float)(v8 - v7));
      v3 += 16LL;
      ++v6;
    }

    while (v3 != v4);
    unint64_t v10 = (unint64_t)LODWORD(v7) << 32;
    if (v6) {
      float v11 = v5 / (float)v6;
    }
    else {
      float v11 = 0.0;
    }
  }

  return v10 | COERCE_UNSIGNED_INT(sqrtf(v11));
}

float sub_10050D060(uint64_t a1, double a2)
{
  unint64_t v3 = sub_10050CFB4(a1, a2);
  float v4 = *(float *)&v3;
  int v6 = v5;
  unint64_t v7 = HIDWORD(v3);
  unint64_t v25 = 0xBA4F9E383FC07C8DLL;
  int v24 = HIDWORD(v3);
  sub_10050D3D4((uint64_t)&v24, &v58, (int *)&v25, 2LL, 1LL);
  float v8 = v59;
  float v9 = *(float *)(a1 + 56);
  if (v6 <= 6 || v9 <= 15.0 || v9 == -9999.0) {
    float v12 = -1.0;
  }
  else {
    float v12 = v59;
  }
  if (qword_101934750 != -1) {
    dispatch_once(&qword_101934750, &stru_10183E5F0);
  }
  float v13 = v4;
  float v14 = (os_log_s *)qword_101934758;
  if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_INFO))
  {
    uint64_t v15 = a1;
    double v16 = *(float *)(a1 + 56);
    BOOL v17 = *(float *)(a1 + 48) != -9999.0 && *(float *)(a1 + 52) != -9999.0;
    *(_DWORD *)std::string buf = 136316930;
    uint64_t v43 = v15;
    __int16 v44 = 2050;
    double v45 = v12;
    __int16 v46 = 2050;
    double v47 = v8;
    __int16 v48 = 2050;
    double v49 = *(float *)&v7;
    __int16 v50 = 2050;
    double v51 = v13;
    __int16 v52 = 1026;
    int v53 = v6;
    __int16 v54 = 2050;
    double v55 = v16;
    __int16 v56 = 1026;
    BOOL v57 = v17;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "IndoorOutdoor,ALSResult,context,%s,outputProb,%{public}.2f,rawProb,%{public}.2f,meanLux,%{public}.2f,stdLux,%{publ ic}.2f,n,%{public}d,elevation,%{public}.2f,hasLatLon,%{public}d",  buf,  0x4Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183E5F0);
    }
    uint64_t v19 = a1;
    double v20 = *(float *)(a1 + 56);
    BOOL v21 = *(float *)(a1 + 48) != -9999.0 && *(float *)(a1 + 52) != -9999.0;
    int v26 = 136316930;
    uint64_t v27 = v19;
    __int16 v28 = 2050;
    double v29 = v12;
    __int16 v30 = 2050;
    double v31 = v8;
    __int16 v32 = 2050;
    double v33 = *(float *)&v7;
    __int16 v34 = 2050;
    double v35 = v13;
    __int16 v36 = 1026;
    int v37 = v6;
    __int16 v38 = 2050;
    double v39 = v20;
    __int16 v40 = 1026;
    BOOL v41 = v21;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  1LL,  "IndoorOutdoor,ALSResult,context,%s,outputProb,%{public}.2f,rawProb,%{public}.2f,meanLux,%{public}.2f,stdLux,%{publ ic}.2f,n,%{public}d,elevation,%{public}.2f,hasLatLon,%{public}d",  &v26,  74);
    double v23 = (uint8_t *)v22;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "float CLALSIndoorOutdoorDetector::computeOutdoorProbability(CFAbsoluteTime)",  "%s\n",  v22);
    if (v23 != buf) {
      free(v23);
    }
  }

  return v12;
}

float *sub_10050D3A0(uint64_t a1, float a2, float a3)
{
  return sub_1004C8238((float *)(a1 + 48), a2, a3);
}

void sub_10050D3A8(id a1)
{
  qword_101934758 = (uint64_t)os_log_create("com.apple.locationd.Motion", "IndoorOutdoor");
}

void sub_10050D3D4(uint64_t a1, float *a2, int *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a4;
  int v6 = a2;
  uint64_t v7 = a4 - 1;
  if (a4 != 1)
  {
    float v8 = a3;
    float v9 = a2;
    uint64_t v10 = a4 - 1;
    do
    {
      int v11 = *v8++;
      *(_DWORD *)v9++ = v11;
      --v10;
    }

    while (v10);
  }

  if (a5)
  {
    uint64_t v12 = 0LL;
    do
    {
      if (a4 == 1)
      {
        uint64_t v13 = v12 + 1;
      }

      else
      {
        uint64_t v13 = v12 + 1;
        float v14 = (float *)((char *)a3 + 4 * v7 * (v12 + 1));
        uint64_t v15 = a2;
        uint64_t v16 = a4 - 1;
        do
        {
          float v17 = *v14++;
          float *v15 = *v15 + (float)(*(float *)(a1 + 4 * v12) * v17);
          ++v15;
          --v16;
        }

        while (v16);
      }

      uint64_t v12 = v13;
    }

    while (v13 != a5);
  }

  a2[v7] = 1.0;
  if (a4 == 1)
  {
    float v19 = 1.0;
    do
    {
LABEL_18:
      float *v6 = *v6 / v19;
      ++v6;
      --v5;
    }

    while (v5);
    return;
  }

  uint64_t v18 = 0LL;
  float v19 = 1.0;
  do
  {
    float v20 = expf(v6[v18]);
    v6[v18] = v20;
    float v19 = v19 + v20;
    ++v18;
  }

  while (v7 != v18);
  if (v5) {
    goto LABEL_18;
  }
}

void sub_10050D56C(id a1)
{
  qword_101996900 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLSensorMonitorSilo");
}

NSDictionary *sub_10050D750()
{
  v1[0] = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "VO2MaxPowerBudgetEstimatorQueryLookbackInterval");
  v2[0] = &off_1018D6C58;
  v1[1] = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "SensitiveEscalationExtendedBudgetRefreshInterval");
  v2[1] = &off_1018D6C70;
  v1[2] = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "VO2MaxDeescalatorExtendAfterHighExertionTimeSeconds");
  _DWORD v2[2] = &off_1018D6C88;
  unsigned __int8 v1[3] = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "SensitiveEscalationBudgetAllowanceSeconds");
  v2[3] = &off_1018D6CA0;
  v1[4] = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "SensitiveEscalationExtendedBudgetAllowanceSeconds");
  v2[4] = &off_1018D6CB8;
  _OWORD v1[5] = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "SensitiveEscalationGeneralStairsBudgetAllowanceSeconds");
  v2[5] = &off_1018D6CD0;
  v1[6] = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "SensitiveEscalationGeneralStairsBudgetRefreshInterval");
  v2[6] = &off_1018D6CE8;
  uint64_t result = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v2,  v1,  7LL);
  qword_1019968F8 = (uint64_t)result;
  return result;
}

void sub_10050D8D0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x100000003LL;
  *(_WORD *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0;
  uint64_t v2 = (_BYTE *)(a1 + 16);
  if (SHIBYTE(v5) < 0)
  {
    sub_1010DD48C(v2, __p[0], (unint64_t)__p[1]);
    int v3 = SHIBYTE(v5);
    *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
    if (v3 < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    *(_OWORD *)uint64_t v2 = *(_OWORD *)__p;
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  }

void sub_10050D954( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10050D970(uint64_t a1)
{
  if (v5 < 0) {
    operator delete(__p);
  }
  return a1;
}

void sub_10050D9C4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10050D9E0(uint64_t a1, uint64_t a2, const char **a3)
{
  uint64_t v5 = sub_1003B35F4(a1, a2);
  if (sub_1003C1048(v5))
  {
    sub_1003B59A0(a1, "BeaconStatus", a3, 0LL, 0);
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    int v6 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "iB: state No access to state DB", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      v9[0] = 0;
      float v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "iB: state No access to state DB",  v9,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLBeaconMonitorDatabase::CLBeaconMonitorDatabase(const CLSqliteDatabase::SqliteProperties &, const CLSqliteDatab ase::ColumnInfo *)",  "%s\n",  v8);
    }
  }

  return a1;
}

void sub_10050DBA4(_Unwind_Exception *a1)
{
}

void sub_10050DBBC(uint64_t a1)
{
  if (sub_1003C1048(a1))
  {
    sub_10000CE18((uint64_t)buf);
    uint64_t v2 = sub_10000CF44(&v13, (uint64_t)"DELETE FROM ", 12LL);
    sub_10000CF44(v2, (uint64_t)"BeaconStatus", 12LL);
    std::stringbuf::str(&v10, &v14);
    if ((v10.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v3 = &v10;
    }
    else {
      int v3 = (std::stringbuf::string_type *)v10.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1, (char *)v3, &v11);
    uint64_t v4 = v11;
    uint64_t v11 = 0LL;
    uint64_t v5 = (sqlite3_stmt *)sub_100019240(v4);
    sub_1003BB2BC(a1, v5);
    else {
      uint64_t v6 = *(void *)(a1 + 88);
    }
    sub_1003C1EC0(a1, v6);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v13 = v7;
    std::streambuf::~streambuf(&v14);
    std::ios::~ios(&v15);
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    float v8 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "iB: state No access to DB", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      LOWORD(v10.__r_.__value_.__l.__data_) = 0;
      float v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "iB: state No access to DB",  &v10,  2);
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLBeaconMonitorDatabase::clearLocationData()", "%s\n", v9);
    }
  }

void sub_10050DE68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  _Unwind_Resume(a1);
}

uint64_t sub_10050DEBC(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v6 = sub_1003C1048(a1);
  if (!v6)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    double v22 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_FAULT, "iB: state No access to DB", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    *(_WORD *)std::string __p = 0;
    double v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "iB: state No access to DB",  __p,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconMonitorDatabase::storeFenceState(const CLBTLEBeaconRegion_Type::MonitoredRegion &, CLBTLEBeaconRegion _Type::RegionStates)",  "%s\n",  v23);
    goto LABEL_72;
  }

  if (a3 != 2 && a3 != 4)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    __int16 v28 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_FAULT, "iB: state Invalid for DB", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    *(_WORD *)std::string __p = 0;
    double v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "iB: state Invalid for DB",  __p,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconMonitorDatabase::storeFenceState(const CLBTLEBeaconRegion_Type::MonitoredRegion &, CLBTLEBeaconRegion _Type::RegionStates)",  "%s\n",  v23);
LABEL_72:
    if (v23 != buf) {
      free(v23);
    }
    return 0LL;
  }

  sqlite3_int64 v7 = sub_10050E754(v6, a2);
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10183E6C0);
  }
  float v8 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
    float v9 = v41[9] >= 0 ? __p : *(_BYTE **)__p;
    *(_DWORD *)std::string buf = 134284035;
    *(void *)&uint8_t buf[4] = v7;
    __int16 v48 = 1025;
    int v49 = a3;
    __int16 v50 = 2081;
    double v51 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "iB: state store, %{private}lld, %{private}d, %{private}s",  buf,  0x1Cu);
    if ((v41[9] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    uint64_t v30 = qword_101934848;
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v45, a2);
    if (v46 >= 0) {
      double v31 = v45;
    }
    else {
      double v31 = *(_BYTE **)v45;
    }
    *(_DWORD *)std::string __p = 134284035;
    *(void *)&__p[4] = v7;
    __int16 v40 = 1025;
    *(_DWORD *)BOOL v41 = a3;
    *(_WORD *)&_DWORD v41[4] = 2081;
    *(void *)&v41[6] = v31;
    __int16 v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v30,  2LL,  "iB: state store, %{private}lld, %{private}d, %{private}s",  __p,  28);
    if (v46 < 0) {
      operator delete(*(void **)v45);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconMonitorDatabase::storeFenceState(const CLBTLEBeaconRegion_Type::MonitoredRegion &, CLBTLEBeaconRegion _Type::RegionStates)",  "%s\n",  v32);
    if (v32 != buf) {
      free(v32);
    }
  }

  sub_10000CE18((uint64_t)__p);
  std::stringbuf::string_type v10 = sub_10000CF44(&v41[2], (uint64_t)"INSERT OR REPLACE INTO ", 23LL);
  uint64_t v11 = sub_10000CF44(v10, (uint64_t)"BeaconStatus", 12LL);
  uint64_t v12 = sub_10000CF44(v11, (uint64_t)" (", 2LL);
  uint64_t v13 = sub_10000CF44(v12, (uint64_t)"Key", 3LL);
  std::stringbuf v14 = sub_10000CF44(v13, (uint64_t)", ", 2LL);
  uint64_t v15 = sub_10000CF44(v14, (uint64_t)"State", 5LL);
  sub_10000CF44(v15, (uint64_t)") VALUES (?, ?)", 15LL);
  std::stringbuf::str((std::stringbuf::string_type *)buf, (const std::stringbuf *)&v41[10]);
  if (SBYTE3(v51) >= 0) {
    uint64_t v16 = buf;
  }
  else {
    uint64_t v16 = *(char **)buf;
  }
  sub_1003C0D54(a1, v16, v45);
  uint64_t v17 = *(void *)v45;
  *(void *)double v45 = 0LL;
  if (SBYTE3(v51) < 0) {
    operator delete(*(void **)buf);
  }
  uint64_t v18 = (sqlite3_stmt *)sub_100019240(v17);
  if (sub_1003C2D24(v18, 1, v7) && (float v19 = (sqlite3_stmt *)sub_100019240(v17), sub_1003C28BC(v19, 2, a3)))
  {
    float v20 = (sqlite3_stmt *)sub_100019240(v17);
    sub_1003BB2BC(a1, v20);
    uint64_t v21 = 1LL;
    if (!v17) {
      goto LABEL_41;
    }
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    int v24 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
    {
      (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
      unint64_t v25 = SBYTE3(v51) >= 0 ? buf : *(_BYTE **)buf;
      *(_DWORD *)double v45 = 136380675;
      *(void *)&v45[4] = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#Warning iB: state Couldn't bind statement for store (%{private}s)",  v45,  0xCu);
      if (SBYTE3(v51) < 0) {
        operator delete(*(void **)buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      uint64_t v33 = qword_101934848;
      (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v45, a2);
      if (v46 >= 0) {
        __int16 v34 = v45;
      }
      else {
        __int16 v34 = *(_BYTE **)v45;
      }
      int v37 = 136380675;
      __int16 v38 = v34;
      LODWORD(v36) = 12;
      double v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v33,  0LL,  "#Warning iB: state Couldn't bind statement for store (%{private}s)",  &v37,  v36);
      if (v46 < 0) {
        operator delete(*(void **)v45);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconMonitorDatabase::storeFenceState(const CLBTLEBeaconRegion_Type::MonitoredRegion &, CLBTLEBeaconRegi on_Type::RegionStates)",  "%s\n",  v35);
      if (v35 != buf) {
        free(v35);
      }
    }

    int v26 = (sqlite3_stmt *)sub_100019240(v17);
    sqlite3_reset(v26);
    uint64_t v21 = 0LL;
    if (!v17) {
      goto LABEL_41;
    }
  }

  (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
LABEL_41:
  *(void *)&v41[2] = v27;
  if (v43 < 0) {
    operator delete(v42);
  }
  std::streambuf::~streambuf(&v41[10]);
  std::ios::~ios(&v44);
  return v21;
}

void sub_10050E6F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (v58) {
    (*(void (**)(uint64_t))(*(void *)v58 + 8LL))(v58);
  }
  sub_1011F8850((uint64_t)&a13);
  _Unwind_Resume(a1);
}

unint64_t sub_10050E754(uint64_t a1, uint64_t a2)
{
  int v3 = *(char *)(a2 + 63);
  if (v3 >= 0) {
    uint64_t v4 = (const std::string::value_type *)(a2 + 40);
  }
  else {
    uint64_t v4 = *(const std::string::value_type **)(a2 + 40);
  }
  if (v3 >= 0) {
    std::string::size_type v5 = *(unsigned __int8 *)(a2 + 63);
  }
  else {
    std::string::size_type v5 = *(void *)(a2 + 48);
  }
  BOOL v6 = std::string::append(&v18, v4, v5);
  __int128 v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v19.__r_.__value_.__l.__cap_ = v6->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0LL;
  v6->__r_.__value_.__l.__cap_ = 0LL;
  v6->__r_.__value_.__r.__words[0] = 0LL;
  std::string::push_back(&v19, 47);
  std::string v20 = v19;
  memset(&v19, 0, sizeof(v19));
  int v8 = *(char *)(a2 + 111);
  if (v8 >= 0) {
    float v9 = (const std::string::value_type *)(a2 + 88);
  }
  else {
    float v9 = *(const std::string::value_type **)(a2 + 88);
  }
  if (v8 >= 0) {
    std::string::size_type v10 = *(unsigned __int8 *)(a2 + 111);
  }
  else {
    std::string::size_type v10 = *(void *)(a2 + 96);
  }
  uint64_t v11 = std::string::append(&v20, v9, v10);
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  std::string::size_type cap = v11->__r_.__value_.__l.__cap_;
  __int128 v21 = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v13 = sub_10010E2F8((uint64_t)&v20, (char *)&v21);
  unint64_t v14 = sub_10010E2F8((uint64_t)&v20, (char *)(a2 + 8));
  uint64_t v15 = *(unsigned __int16 *)(a2 + 32);
  uint64_t v16 = *(unsigned __int16 *)(a2 + 34);
  if (SHIBYTE(cap) < 0) {
    operator delete((void *)v21);
  }
  return 0xC6A4A7935BD1E995LL
       * ((0xC6A4A7935BD1E995LL
         * ((0xC6A4A7935BD1E995LL * ((0xC6A4A7935BD1E995LL * v15) ^ ((0xC6A4A7935BD1E995LL * v15) >> 47))) ^ (0xC6A4A7935BD1E995LL * ((0xC6A4A7935BD1E995LL * ((0xC6A4A7935BD1E995LL * v14) ^ ((0xC6A4A7935BD1E995LL * v14) >> 47))) ^ (0x35A98F4D286A90B9LL * ((0xC6A4A7935BD1E995LL * v13) ^ ((0xC6A4A7935BD1E995LL * v13) >> 47)) + 3864292196u)) + 3864292196u))
         + 3864292196u) ^ (0xC6A4A7935BD1E995LL * ((0xC6A4A7935BD1E995LL * v16) ^ ((0xC6A4A7935BD1E995LL * v16) >> 47))))
       + 3864292196u;
}

void sub_10050E90C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_10050E96C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = sub_1003C1048(a1);
  if (v4)
  {
    sqlite3_int64 v5 = sub_10050E754(v4, a2);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    BOOL v6 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
      __int128 v7 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
         ? __p
         : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      *(_DWORD *)std::string buf = 134283779;
      *(void *)&uint8_t buf[4] = v5;
      __int16 v39 = 2081;
      *(void *)__int16 v40 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "iB: state remove, %{private}lld, %{private}s",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      uint64_t v25 = qword_101934848;
      (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
      if (v40[9] >= 0) {
        int v26 = buf;
      }
      else {
        int v26 = *(_BYTE **)buf;
      }
      *(_DWORD *)__int16 v32 = 134283779;
      *(void *)&v32[4] = v5;
      __int16 v33 = 2081;
      __int16 v34 = v26;
      uint64_t v27 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v25,  2LL,  "iB: state remove, %{private}lld, %{private}s",  v32,  22);
      if ((v40[9] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconMonitorDatabase::removeFenceState(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  (const char *)v27);
      if (v27 != __p) {
        free(v27);
      }
    }

    sub_10000CE18((uint64_t)buf);
    int v8 = sub_10000CF44(&v40[2], (uint64_t)"DELETE FROM ", 12LL);
    float v9 = sub_10000CF44(v8, (uint64_t)"BeaconStatus", 12LL);
    std::string::size_type v10 = sub_10000CF44(v9, (uint64_t)" WHERE ", 7LL);
    uint64_t v11 = sub_10000CF44(v10, (uint64_t)"Key", 3LL);
    sub_10000CF44(v11, (uint64_t)"=?", 2LL);
    std::stringbuf::str(__p, &v41);
    if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int128 v12 = __p;
    }
    else {
      __int128 v12 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1, (char *)v12, v32);
    uint64_t v13 = *(void *)v32;
    *(void *)__int16 v32 = 0LL;
    unint64_t v14 = (sqlite3_stmt *)sub_100019240(v13);
    BOOL v15 = sub_1003C2D24(v14, 1, v5);
    if (v15)
    {
      uint64_t v16 = (sqlite3_stmt *)sub_100019240(v13);
      sub_1003BB2BC(a1, v16);
      else {
        uint64_t v17 = *(void *)(a1 + 88);
      }
      sub_1003C1EC0(a1, v17);
    }

    else
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      std::string v19 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
      {
        (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
        std::string v20 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
            ? __p
            : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
        *(_DWORD *)__int16 v32 = 136380675;
        *(void *)&v32[4] = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "#Warning iB: state couldn't bind statement for deleting (%{private}s)",  v32,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10183E6C0);
        }
        uint64_t v28 = qword_101934848;
        (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v32, a2);
        if (v35 >= 0) {
          double v29 = v32;
        }
        else {
          double v29 = *(_BYTE **)v32;
        }
        int v36 = 136380675;
        int v37 = v29;
        LODWORD(v31) = 12;
        uint64_t v30 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v28,  0LL,  "#Warning iB: state couldn't bind statement for deleting (%{private}s)",  &v36,  v31);
        if (v35 < 0) {
          operator delete(*(void **)v32);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconMonitorDatabase::removeFenceState(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  (const char *)v30);
        if (v30 != __p) {
          free(v30);
        }
      }

      __int128 v21 = (sqlite3_stmt *)sub_100019240(v13);
      sqlite3_reset(v21);
    }

    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    }
    *(void *)&double v40[2] = v22;
    std::streambuf::~streambuf(&v41);
    std::ios::~ios(&v42);
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    std::string v18 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_FAULT, "iB: state No access to DB", (uint8_t *)__p, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      *(_WORD *)std::string buf = 0;
      int v24 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "iB: state No access to DB",  buf,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconMonitorDatabase::removeFenceState(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  (const char *)v24);
      if (v24 != __p) {
        free(v24);
      }
    }

    return 0LL;
  }

  return v15;
}

void sub_10050F024( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (v58) {
    (*(void (**)(uint64_t))(*(void *)v58 + 8LL))(v58);
  }
  sub_1011F8850((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_10050F084@<X0>(uint64_t *a1@<X1>, std::stringbuf::string_type *a2@<X8>)
{
  uint64_t v4 = sub_10000CE18((uint64_t)v11);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (*a1 != v6)
  {
    char v7 = 0;
    do
    {
      unint64_t v8 = sub_10050E754(v4, v5);
      if ((v7 & 1) != 0) {
        sub_10000CF44(&v12, (uint64_t)", ", 2LL);
      }
      uint64_t v4 = std::ostream::operator<<(&v12, v8);
      v5 += 120LL;
      char v7 = 1;
    }

    while (v5 != v6);
  }

  std::stringbuf::str(a2, &v13);
  *(void *)((char *)v11
  uint64_t v12 = v9;
  std::streambuf::~streambuf(&v13);
  return std::ios::~ios(&v14);
}

void sub_10050F19C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_10050F1B4(uint64_t a1, uint64_t *a2)
{
  BOOL v4 = sub_1003C1048(a1);
  if (v4)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    uint64_t v5 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v6 = 0xEEEEEEEEEEEEEEEFLL * ((a2[1] - *a2) >> 3);
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 134349056;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "iB: state scrub, remaining, %{public}lu",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      unint64_t v27 = 0xEEEEEEEEEEEEEEEFLL * ((a2[1] - *a2) >> 3);
      LODWORD(__p[0]) = 134349056;
      *(void **)((char *)__p + 4) = (void *)v27;
      uint64_t v28 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: state scrub, remaining, %{public}lu",  __p,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLBeaconMonitorDatabase::scrubFenceStates(const std::vector<CLBTLEBeaconRegion_Type::MonitoredRegion> &)",  "%s\n",  (const char *)v28);
      if (v28 != buf) {
        free(v28);
      }
    }

    sub_10050F084(a2, buf);
    v36.__r_.__value_.__s.__size_ = 12;
    strcpy((char *)&v36, "DELETE FROM ");
    char v7 = std::string::append(&v36, "BeaconStatus");
    __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v37.__r_.__value_.__l.__cap_ = v7->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v8;
    v7->__r_.__value_.__l.__size_ = 0LL;
    v7->__r_.__value_.__l.__cap_ = 0LL;
    v7->__r_.__value_.__r.__words[0] = 0LL;
    char v35 = 7;
    strcpy(__s, " WHERE ");
    uint64_t v9 = std::string::append(&v37, __s, 7uLL);
    __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    v9->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v11 = std::string::append(&v38, "Key");
    __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__l.__cap_ = v11->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    v11->__r_.__value_.__r.__words[0] = 0LL;
    char v33 = 9;
    strcpy((char *)v32, " NOT IN (");
    std::stringbuf v13 = std::string::append(&v39, (const std::string::value_type *)v32, 9uLL);
    __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0LL;
    v13->__r_.__value_.__l.__cap_ = 0LL;
    v13->__r_.__value_.__r.__words[0] = 0LL;
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      BOOL v15 = buf;
    }
    else {
      BOOL v15 = (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
    }
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = buf[0].__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = buf[0].__r_.__value_.__l.__size_;
    }
    uint64_t v17 = std::string::append(&v40, (const std::string::value_type *)v15, size);
    __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0LL;
    v17->__r_.__value_.__l.__cap_ = 0LL;
    v17->__r_.__value_.__r.__words[0] = 0LL;
    char v31 = 1;
    strcpy(v30, ")");
    std::string v19 = std::string::append(&v41, v30, 1uLL);
    __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    int64_t cap = v19->__r_.__value_.__l.__cap_;
    *(_OWORD *)std::string __p = v20;
    v19->__r_.__value_.__l.__size_ = 0LL;
    v19->__r_.__value_.__l.__cap_ = 0LL;
    v19->__r_.__value_.__r.__words[0] = 0LL;
    if (v31 < 0) {
      operator delete(*(void **)v30);
    }
    if (v33 < 0) {
      operator delete(v32[0]);
    }
    if (v35 < 0) {
      operator delete(*(void **)__s);
    }
    if (cap >= 0) {
      __int128 v21 = (char *)__p;
    }
    else {
      __int128 v21 = (char *)__p[0];
    }
    sub_1003C0D54(a1, v21, &v41);
    std::string::size_type v22 = v41.__r_.__value_.__r.__words[0];
    double v23 = (sqlite3_stmt *)sub_100019240((uint64_t)v41.__r_.__value_.__l.__data_);
    sub_1003BB2BC(a1, v23);
    else {
      uint64_t v24 = *(void *)(a1 + 88);
    }
    sub_1003C1EC0(a1, v24);
    if (v22) {
      (*(void (**)(std::string::size_type))(*(void *)v22 + 8LL))(v22);
    }
    if (SHIBYTE(cap) < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    uint64_t v25 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_FAULT, "iB: state can't scrub DB", (uint8_t *)buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      LOWORD(__p[0]) = 0;
      double v29 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "iB: state can't scrub DB",  __p,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLBeaconMonitorDatabase::scrubFenceStates(const std::vector<CLBTLEBeaconRegion_Type::MonitoredRegion> &)",  "%s\n",  (const char *)v29);
      if (v29 != buf) {
        free(v29);
      }
    }
  }

  return v4;
}

void sub_10050F774( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, void *a31, uint64_t a32, uint64_t a33, uint64_t a34, void *a35, uint64_t a36, uint64_t a37, uint64_t a38, void *a39, uint64_t a40, uint64_t a41, uint64_t a42, void *__p, uint64_t a44, int a45, __int16 a46, char a47, char a48, uint64_t a49, void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (a48 < 0) {
    operator delete(__p);
  }
  if (a55 < 0) {
    operator delete(a50);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10050F880(uint64_t a1, uint64_t a2)
{
  BOOL v4 = sub_1003C1048(a1);
  if (v4)
  {
    sqlite3_int64 v5 = sub_10050E754(v4, a2);
    v52.__r_.__value_.__s.__size_ = 7;
    strcpy((char *)&v52, "SELECT ");
    unint64_t v6 = std::string::append(&v52, "State");
    __int128 v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v53.__r_.__value_.__l.__cap_ = v6->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0LL;
    v6->__r_.__value_.__l.__cap_ = 0LL;
    v6->__r_.__value_.__r.__words[0] = 0LL;
    char v51 = 6;
    strcpy(__s, " FROM ");
    __int128 v8 = std::string::append(&v53, __s, 6uLL);
    __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v54.__r_.__value_.__l.__cap_ = v8->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0LL;
    v8->__r_.__value_.__l.__cap_ = 0LL;
    v8->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v10 = std::string::append(&v54, "BeaconStatus");
    __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v58.__r_.__value_.__l.__cap_ = v10->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0LL;
    v10->__r_.__value_.__l.__cap_ = 0LL;
    v10->__r_.__value_.__r.__words[0] = 0LL;
    char v49 = 7;
    strcpy(v48, " WHERE ");
    __int128 v12 = std::string::append(&v58, v48, 7uLL);
    __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    *(void *)&v57[16] = v12->__r_.__value_.__l.__cap_;
    *(_OWORD *)BOOL v57 = v13;
    v12->__r_.__value_.__l.__size_ = 0LL;
    v12->__r_.__value_.__l.__cap_ = 0LL;
    v12->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v14 = std::string::append((std::string *)v57, "Key");
    __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    *(void *)&v59[16] = v14->__r_.__value_.__l.__cap_;
    *(_OWORD *)float v59 = v15;
    v14->__r_.__value_.__l.__size_ = 0LL;
    v14->__r_.__value_.__l.__cap_ = 0LL;
    v14->__r_.__value_.__r.__words[0] = 0LL;
    char v47 = 2;
    strcpy(v46, "=?");
    uint64_t v16 = std::string::append((std::string *)v59, v46, 2uLL);
    __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    int64_t cap = v16->__r_.__value_.__l.__cap_;
    *(_OWORD *)std::string __p = v17;
    v16->__r_.__value_.__l.__size_ = 0LL;
    v16->__r_.__value_.__l.__cap_ = 0LL;
    v16->__r_.__value_.__r.__words[0] = 0LL;
    if (v47 < 0) {
      operator delete(*(void **)v46);
    }
    if ((v59[23] & 0x80000000) != 0) {
      operator delete(*(void **)v59);
    }
    if ((v57[23] & 0x80000000) != 0) {
      operator delete(*(void **)v57);
    }
    if (v49 < 0) {
      operator delete(*(void **)v48);
    }
    if (v51 < 0) {
      operator delete(*(void **)__s);
    }
    if (cap >= 0) {
      __int128 v18 = (char *)__p;
    }
    else {
      __int128 v18 = (char *)__p[0];
    }
    sub_1003C0D54(a1, v18, v59);
    uint64_t v19 = *(void *)v59;
    __int128 v20 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v59);
    if (sub_1003C2D24(v20, 1, v5))
    {
      __int128 v21 = (sqlite3_stmt *)sub_100019240(v19);
      int v22 = sqlite3_step(v21);
      if (v22 == 101)
      {
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10183E6C0);
        }
        std::string v36 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
        {
          (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v59, a2);
          std::string v37 = v59[23] >= 0 ? v59 : *(_BYTE **)v59;
          *(_DWORD *)BOOL v57 = 136380675;
          *(void *)&v57[4] = v37;
          _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "iB: state doesn't exist (%{private}s)",  v57,  0xCu);
          if ((v59[23] & 0x80000000) != 0) {
            operator delete(*(void **)v59);
          }
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_93;
        }
        bzero(v59, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10183E6C0);
        }
        uint64_t v38 = qword_101934848;
        (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v57, a2);
        if (v57[23] >= 0) {
          std::string v39 = v57;
        }
        else {
          std::string v39 = *(_BYTE **)v57;
        }
        LODWORD(v58.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)v58.__r_.__value_.__r.__words + 4) = (std::string::size_type)v39;
        char v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v59,  1628LL,  &_mh_execute_header,  v38,  2LL,  "iB: state doesn't exist (%{private}s)",  &v58,  12);
        if ((v57[23] & 0x80000000) != 0) {
          operator delete(*(void **)v57);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLBTLEBeaconRegion_Type::RegionStates CLBeaconMonitorDatabase::getFenceState(const CLBTLEBeaconRegion_Type::Mo nitoredRegion &)",  "%s\n",  v35);
        goto LABEL_111;
      }

      if (v22 == 100)
      {
        double v23 = (sqlite3_stmt *)sub_100019240(v19);
        uint64_t v24 = sqlite3_column_int(v23, 0);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10183E6C0);
        }
        uint64_t v25 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
        {
          (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v57, a2);
          int v26 = v57[23] >= 0 ? v57 : *(_BYTE **)v57;
          *(_DWORD *)float v59 = 134284035;
          *(void *)&v59[4] = v5;
          *(_WORD *)&v59[12] = 1025;
          *(_DWORD *)&v59[14] = v24;
          *(_WORD *)&v59[18] = 2081;
          *(void *)&v59[20] = v26;
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "iB: state get, %{private}lld, %{private}d, %{private}s",  v59,  0x1Cu);
          if ((v57[23] & 0x80000000) != 0) {
            operator delete(*(void **)v57);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(v59, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10183E6C0);
          }
          uint64_t v27 = qword_101934848;
          (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(&v58, a2);
          if ((v58.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            uint64_t v28 = &v58;
          }
          else {
            uint64_t v28 = (std::string *)v58.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)BOOL v57 = 134284035;
          *(void *)&v57[4] = v5;
          *(_WORD *)&v57[12] = 1025;
          *(_DWORD *)&v57[14] = v24;
          *(_WORD *)&v57[18] = 2081;
          *(void *)&v57[20] = v28;
          double v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v59,  1628LL,  &_mh_execute_header,  v27,  2LL,  "iB: state get, %{private}lld, %{private}d, %{private}s",  v57,  28);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLBTLEBeaconRegion_Type::RegionStates CLBeaconMonitorDatabase::getFenceState(const CLBTLEBeaconRegion_Type:: MonitoredRegion &)",  "%s\n",  v29);
          if (v29 != v59) {
            free(v29);
          }
        }

        goto LABEL_94;
      }

      sub_1003B5988(a1, v22);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      std::string v40 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
      {
        (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v59, a2);
        std::string v41 = v59[23] >= 0 ? v59 : *(_BYTE **)v59;
        *(_DWORD *)BOOL v57 = 136380675;
        *(void *)&v57[4] = v41;
        _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_FAULT,  "iB: state Error in retrieving state for %{private}s",  v57,  0xCu);
        if ((v59[23] & 0x80000000) != 0) {
          operator delete(*(void **)v59);
        }
      }

      if (!sub_1002921D0(115, 0))
      {
LABEL_93:
        uint64_t v24 = 1LL;
LABEL_94:
        if (v19) {
          (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
        }
        if (SHIBYTE(cap) < 0) {
          operator delete(__p[0]);
        }
        return v24;
      }

      bzero(v59, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      uint64_t v44 = qword_101934848;
      (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v57, a2);
      if (v57[23] >= 0) {
        double v45 = v57;
      }
      else {
        double v45 = *(_BYTE **)v57;
      }
      LODWORD(v58.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v58.__r_.__value_.__r.__words + 4) = (std::string::size_type)v45;
      char v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v59,  1628LL,  &_mh_execute_header,  v44,  17LL,  "iB: state Error in retrieving state for %{private}s",  &v58,  12);
      if ((v57[23] & 0x80000000) != 0) {
        operator delete(*(void **)v57);
      }
    }

    else
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      char v31 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
      {
        (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v59, a2);
        __int16 v32 = v59[23] >= 0 ? v59 : *(_BYTE **)v59;
        *(_DWORD *)BOOL v57 = 136380675;
        *(void *)&v57[4] = v32;
        _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_FAULT,  "iB: state couldn't bind (%{private}s)",  v57,  0xCu);
        if ((v59[23] & 0x80000000) != 0) {
          operator delete(*(void **)v59);
        }
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_93;
      }
      bzero(v59, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183E6C0);
      }
      uint64_t v33 = qword_101934848;
      (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v57, a2);
      if (v57[23] >= 0) {
        __int16 v34 = v57;
      }
      else {
        __int16 v34 = *(_BYTE **)v57;
      }
      LODWORD(v58.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v58.__r_.__value_.__r.__words + 4) = (std::string::size_type)v34;
      char v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v59,  1628LL,  &_mh_execute_header,  v33,  17LL,  "iB: state couldn't bind (%{private}s)",  &v58,  12);
      if ((v57[23] & 0x80000000) != 0) {
        operator delete(*(void **)v57);
      }
    }

    sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLBTLEBeaconRegion_Type::RegionStates CLBeaconMonitorDatabase::getFenceState(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  v35);
LABEL_111:
    if (v35 != v59) {
      free(v35);
    }
    goto LABEL_93;
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10183E6C0);
  }
  uint64_t v30 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)float v59 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_FAULT, "iB: state No access to DB", v59, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(v59, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183E6C0);
    }
    *(_WORD *)BOOL v57 = 0;
    char v43 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v59,  1628LL,  &_mh_execute_header,  qword_101934848,  17LL,  "iB: state No access to DB",  v57,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLBTLEBeaconRegion_Type::RegionStates CLBeaconMonitorDatabase::getFenceState(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  v43);
    if (v43 != v59) {
      free(v43);
    }
  }

  return 1LL;
}

void sub_1005103DC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, void *__p, uint64_t a32, int a33, __int16 a34, char a35, char a36)
{
  if (v36) {
    (*(void (**)(uint64_t))(*(void *)v36 + 8LL))(v36);
  }
  if (a36 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10051050C@<X0>(const void **a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  else {
    size_t v5 = (size_t)a1[1];
  }
  uint64_t result = sub_1000392EC(a3, v5 + 1);
  else {
    __int128 v7 = *(char **)result;
  }
  if (v5)
  {
    else {
      __int128 v8 = *a1;
    }
    uint64_t result = (uint64_t)memmove(v7, v8, v5);
  }

  __int128 v9 = &v7[v5];
  char *v9 = a2;
  v9[1] = 0;
  return result;
}

void sub_10051059C(id a1)
{
  qword_101934848 = (uint64_t)os_log_create("com.apple.locationd.Position", "Proximity");
}

uint64_t sub_1005105C8(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 1000;
  *(_WORD *)(a1 + 12) = 0;
  unsigned __int8 v5 = 0;
  sub_1012049AC(v6, off_101936DC8[0], &v5, 0);
  *(_BYTE *)(a1 + 12) = v6[0];
  unsigned __int8 v3 = 0;
  sub_1012049AC(v4, off_101936DD0[0], &v3, 0);
  *(_BYTE *)(a1 + 13) = v4[0];
  return a1;
}

uint64_t sub_100510654(uint64_t result, uint64_t a2, double a3)
{
  unsigned int v3 = *(unsigned __int16 *)(result + 10);
  if (!*(_WORD *)(result + 10) || *(double *)result + 86400.0 < a3)
  {
    unsigned int v3 = 0;
    *(double *)uint64_t result = a3;
    *(_WORD *)(result + 1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  }

  if (v3 < *(unsigned __int16 *)(result + 8))
  {
    *(_WORD *)(result + 1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v3 + 1;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472LL;
    void v4[2] = sub_1005106EC;
    unsigned __int8 v4[3] = &unk_101820718;
    void v4[4] = a2;
    return AnalyticsSendEventLazy(@"com.apple.CoreMotion.MagnetometerReset", v4);
  }

  return result;
}

NSDictionary *sub_1005106EC(uint64_t a1)
{
  v3[0] = @"exitingSaturation";
  v4[0] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 25LL));
  v3[1] = @"shiftInSaturation";
  v4[1] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 26LL));
  v3[2] = @"extendedSaturation";
  void v4[2] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 27LL));
  void v3[3] = @"triggerCount";
  unsigned __int8 v4[3] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(*(void *)(a1 + 32) + 17LL));
  void v3[4] = @"timeSinceLastRemag";
  void v4[4] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  (double)*(unint64_t *)(*(void *)(a1 + 32) + 9LL) / 1000000.0);
  void v3[5] = @"timeSinceLastRemagTrigger";
  void v4[5] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  (double)*(unint64_t *)(*(void *)(a1 + 32) + 1LL) / 1000000.0);
  void v3[6] = @"successFlag";
  void v4[6] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(unsigned __int8 *)(*(void *)(a1 + 32) + 28LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  7LL);
}

uint64_t sub_100510858(uint64_t result, uint64_t a2, double a3)
{
  unsigned int v3 = *(unsigned __int16 *)(result + 10);
  if (!*(_WORD *)(result + 10) || *(double *)result + 86400.0 < a3)
  {
    unsigned int v3 = 0;
    *(double *)uint64_t result = a3;
    *(_WORD *)(result + 1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  }

  if (v3 < *(unsigned __int16 *)(result + 8))
  {
    *(_WORD *)(result + 1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v3 + 1;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472LL;
    void v4[2] = sub_1005108F0;
    unsigned __int8 v4[3] = &unk_101827B10;
    void v4[4] = result;
    void v4[5] = a2;
    return AnalyticsSendEventLazy(@"com.apple.CoreMotion.BasebandCompassCoex", v4);
  }

  return result;
}

NSDictionary *sub_1005108F0(uint64_t a1)
{
  v4[0] = @"hasActiveMagnetometerClientDuringHeatUp";
  uint64_t v2 = *(void *)(a1 + 32);
  v5[0] = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *(_BYTE *)(*(void *)(a1 + 40) + 2LL) != 0);
  v4[1] = @"durationOfNonDefaultState";
  v5[1] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(*(void *)(a1 + 40) + 4LL));
  void v4[2] = @"countOfTimesEnteringHeatup";
  void v5[2] = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned __int8 *)(*(void *)(a1 + 40) + 1LL));
  unsigned __int8 v4[3] = @"IsOverrideForBasebandCompassCoexSupportSet";
  v5[3] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(v2 + 12));
  void v4[4] = @"IsOverrideForBasebandUsageFlagSet";
  v5[4] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(v2 + 13));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  5LL);
}

void sub_100510A04()
{
  if (sub_100231608())
  {
    uint64_t v0 = operator new(0x68uLL);
    sub_100E61F40((uint64_t)v0, (uint64_t)"CLAccessoryPPG", 1, 65280, 103);
    *uint64_t v0 = &off_10183E710;
    qword_1019A1148 = (uint64_t)v0;
  }

void sub_100510A5C(_Unwind_Exception *a1)
{
}

uint64_t sub_100510A70()
{
  if (qword_101996910 != -1) {
    dispatch_once(&qword_101996910, &stru_10183E6E0);
  }
  return qword_1019A1148;
}

void sub_100510AB8(void *a1)
{
  uint64_t v1 = sub_100E61F94(a1);
  operator delete(v1);
}

double sub_100510ACC(uint64_t a1, int a2, void *a3)
{
  if (a2)
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_10183E768);
    }
    BOOL v4 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 67240192;
      LODWORD(v16) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "[AccessoryPPG] Unrecognized update interval notification %{public}d",  buf,  8u);
    }

    double v5 = 0.0;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_10183E768);
      }
      int v13 = 67240192;
      LODWORD(v14) = a2;
      unint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  17LL,  "[AccessoryPPG] Unrecognized update interval notification %{public}d",  &v13,  8);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual CFTimeInterval CLAccessoryPPG::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v6);
    }
  }

  else
  {
    sub_100E62108(a1);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_10183E768);
    }
    __int128 v8 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *a3;
      *(_DWORD *)std::string buf = 134349056;
      uint64_t v16 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "[AccessoryPPG] Setting update interval to %{public}f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_10183E768);
      }
      uint64_t v11 = *a3;
      int v13 = 134349056;
      uint64_t v14 = v11;
      __int128 v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  1LL,  "[AccessoryPPG] Setting update interval to %{public}f",  &v13,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFTimeInterval CLAccessoryPPG::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v12);
    }

    return *(double *)a3;
  }

  return v5;
}

void sub_100510DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Dataint Value = (unsigned __int8 *)IOHIDEventGetDataValue(a4, 65540LL);
  uint64_t IntegerValue = IOHIDEventGetIntegerValue(a4, 65539LL);
  if (!DataValue)
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_10183E768);
    }
    __int128 v17 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "[AccessoryPPG] Invalid payload", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_10183E768);
    }
    LOWORD(v39) = 0;
    __int128 v18 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  16LL,  "[AccessoryPPG] Invalid payload",  &v39,  2);
LABEL_30:
    __int128 v21 = (uint8_t *)v18;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLAccessoryPPG::onEventData(void *, void *, IOHIDEventRef)",  "%s\n",  v18);
    if (v21 != buf) {
      free(v21);
    }
    return;
  }

  int v8 = IntegerValue;
  if (IntegerValue == 32)
  {
    unint64_t TimeStamp = IOHIDEventGetTimeStamp(a4);
    double v10 = sub_101171C7C(TimeStamp);
    *(double *)int v22 = v10;
    uint64_t v11 = *(unsigned __int8 **)(DataValue + 2);
    v22[1] = v11;
    int v12 = *DataValue;
    char v23 = *DataValue;
    unsigned __int8 v24 = DataValue[1];
    __int16 v13 = *((_WORD *)DataValue + 5);
    unsigned __int8 v26 = DataValue[12];
    __int16 v25 = v13;
    LOBYTE(v13) = DataValue[15];
    __int16 v27 = *(_WORD *)(DataValue + 13);
    char v28 = v13;
    __int16 v14 = *((_WORD *)DataValue + 8);
    unsigned __int8 v30 = DataValue[18];
    __int16 v29 = v14;
    __int16 v15 = *(_WORD *)(DataValue + 19);
    unsigned __int8 v32 = DataValue[21];
    __int16 v31 = v15;
    LOBYTE(v15) = DataValue[24];
    __int16 v33 = *((_WORD *)DataValue + 11);
    char v34 = v15;
    LOBYTE(v15) = DataValue[27];
    __int16 v35 = *(_WORD *)(DataValue + 25);
    char v36 = v15;
    __int16 v37 = *((_WORD *)DataValue + 14);
    __int16 v38 = *((_WORD *)DataValue + 15);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_10183E768);
    }
    uint64_t v16 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 67241219;
      int v50 = v12;
      __int16 v51 = 2050;
      std::string v52 = v11;
      __int16 v53 = 2050;
      double v54 = v10;
      __int16 v55 = 1040;
      int v56 = 32;
      __int16 v57 = 2097;
      std::string v58 = DataValue;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "[AccessoryPPG] frameNum,%{public}d,sensorTime,%{public}llu,timestamp,%{public}20.20f,payload,{%{private}.*P}",  buf,  0x2Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_10183E768);
      }
      int v39 = 67241219;
      int v40 = v12;
      __int16 v41 = 2050;
      uint64_t v42 = v11;
      __int16 v43 = 2050;
      double v44 = v10;
      __int16 v45 = 1040;
      int v46 = 32;
      __int16 v47 = 2097;
      __int16 v48 = DataValue;
      __int128 v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  2LL,  "[AccessoryPPG] frameNum,%{public}d,sensorTime,%{public}llu,timestamp,%{public}20.20f,payload,{%{private}.*P}",  &v39,  44);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLAccessoryPPG::onEventData(void *, void *, IOHIDEventRef)",  "%s\n",  v20);
    }

    sub_1006DD528(a1, 0LL, (uint64_t)v22, 40LL);
    return;
  }

  if (qword_1019345C0 != -1) {
    dispatch_once(&qword_1019345C0, &stru_10183E768);
  }
  uint64_t v19 = (os_log_s *)qword_1019345C8;
  if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 68157955;
    int v50 = v8;
    __int16 v51 = 2097;
    std::string v52 = DataValue;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "[AccessoryPPG] Invalid payload: %{private}.*P",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_10183E768);
    }
    int v39 = 68157955;
    int v40 = v8;
    __int16 v41 = 2097;
    uint64_t v42 = DataValue;
    __int128 v18 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  16LL,  "[AccessoryPPG] Invalid payload: %{private}.*P",  &v39,  18);
    goto LABEL_30;
  }

void sub_100511324(id a1)
{
  qword_1019345C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Accessory");
}

id sub_100511468(uint64_t a1, unsigned int *a2, unsigned __int8 *a3, void *a4)
{
  return _[a4 onDarwinNotification:*a2 data:*a3];
}

void sub_1005149E0(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_100514A0C(uint64_t a1)
{
  uint64_t v2 = sub_100749340(a1);
  *(void *)uint64_t v2 = off_10183E858;
  *(_OWORD *)(v2 + 16_Block_object_dispose((const void *)(v1 - 232), 8) = xmmword_1012EFF00;
  unsigned int v3 = (uint64_t *)(v2 + 168);
  *(void *)(v2 + 144) = 0LL;
  *(void *)(v2 + 152) = 0LL;
  *(void *)(v2 + 136) = 0LL;
  *(void *)(v2 + 157) = 0LL;
  *(_WORD *)(v2 + 184) = 256;
  *(_BYTE *)(v2 + 186) = 0;
  BOOL v4 = (BOOL *)(v2 + 186);
  *(void *)(v2 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(_DWORD *)(v2 + 18_Block_object_dispose((const void *)(v1 - 232), 8) = 2139095039;
  uint64_t v5 = sub_1006E27E8();
  sub_100413284(v5, buf);
  char v6 = sub_1002A82BC(*(uint64_t *)buf, "CompassInterval", v3);
  char v7 = v6;
  int v8 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_5;
  }
  uint64_t v9 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    unint64_t v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
  {
LABEL_5:
    if ((v6 & 1) != 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  if ((v7 & 1) == 0) {
LABEL_6:
  }
    uint64_t *v3 = 0x3F847AE147AE147BLL;
LABEL_7:
  uint64_t v11 = sub_1006E27E8();
  sub_100413284(v11, buf);
  if (sub_1002A6F64(*(uint64_t *)buf, "CompassIgnoreGyro", v4))
  {
    BOOL v12 = *v4;
    __int16 v13 = *(std::__shared_weak_count **)&buf[8];
    if (!*(void *)&buf[8]) {
      goto LABEL_12;
    }
    __int16 v14 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
      if (v12) {
        goto LABEL_13;
      }
    }

    else
    {
LABEL_12:
      if (v12)
      {
LABEL_13:
        BOOL v16 = 0;
        goto LABEL_23;
      }
    }
  }

  else
  {
    __int128 v17 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8])
    {
      __int128 v18 = (unint64_t *)(*(void *)&buf[8] + 8LL);
      do
        unint64_t v19 = __ldaxr(v18);
      while (__stlxr(v19 - 1, v18));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
  }

  BOOL v16 = sub_100DDA4D4() != 0;
LABEL_23:
  *BOOL v4 = v16;
  if (qword_101934580 != -1) {
    dispatch_once(&qword_101934580, &stru_10183E8C0);
  }
  __int128 v20 = (os_log_s *)qword_101934588;
  if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_INFO))
  {
    uint64_t v21 = *v3;
    BOOL v22 = *v4;
    *(_DWORD *)std::string buf = 134349312;
    *(void *)&uint8_t buf[4] = v21;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&_BYTE buf[14] = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Legacy compass, interval (%{public}.3f) gyro (%{public}d)",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_10183E8C0);
    }
    uint64_t v24 = *v3;
    BOOL v25 = *v4;
    int v27 = 134349312;
    uint64_t v28 = v24;
    __int16 v29 = 1026;
    BOOL v30 = v25;
    unsigned __int8 v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  1LL,  "Legacy compass, interval (%{public}.3f) gyro (%{public}d)",  &v27,  18);
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLCompass6::CLCompass6()", "%s\n", v26);
    if (v26 != buf) {
      free(v26);
    }
  }

  return a1;
}

void sub_100514D70(_Unwind_Exception *a1)
{
}

void *sub_100514DA8(void *a1)
{
  *a1 = off_10183E858;
  sub_100516124((uint64_t)a1);
  return sub_10074A2B0((uint64_t)a1);
}

void sub_100514DE0(void *a1)
{
  uint64_t v1 = sub_100514DA8(a1);
  operator delete(v1);
}

uint64_t sub_100514DF4()
{
  if ((sub_1001B9A1C() & 1) != 0) {
    return 0LL;
  }
  else {
    return sub_1007C3B58();
  }
}

void sub_100514E18(uint64_t a1, uint64_t a2)
{
  if (qword_101934580 != -1) {
    dispatch_once(&qword_101934580, &stru_10183E8C0);
  }
  BOOL v4 = (os_log_s *)qword_101934588;
  if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67240192;
    unsigned int v29 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Legacy compass started. Cover attached %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_10183E8C0);
    }
    int v26 = 67240192;
    unsigned int v27 = a2;
    uint64_t v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  0LL,  "Legacy compass started. Cover attached %{public}d",  &v26,  8);
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLCompass6::start(BOOL)", "%s\n", v21);
  }

  if (!*(void *)(a1 + 200))
  {
    uint64_t v5 = operator new(0x958uLL);
    sub_10074C4C4(v5, a1 + 168, *(unsigned __int8 *)(a1 + 186), a2);
    *(void *)(a1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v5;
  }

  if (*(_BYTE *)(a1 + 186))
  {
    if (!*(void *)(a1 + 144))
    {
      uint64_t v6 = sub_100DDA4D4();
      *(_DWORD *)std::string buf = 7;
      if (sub_100DDB3C8(v6, (int *)buf))
      {
        char v7 = -[CLDeviceMotionProperties initWithMode:]( objc_alloc(&OBJC_CLASS___CLDeviceMotionProperties),  "initWithMode:",  7LL);
      }

      else
      {
        uint64_t v10 = sub_100DDA4D4();
        *(_DWORD *)std::string buf = 15;
        BOOL v11 = sub_100DDB3C8(v10, (int *)buf);
        BOOL v12 = objc_alloc(&OBJC_CLASS___CLDeviceMotionProperties);
        if (v11) {
          char v7 = -[CLDeviceMotionProperties initWithMode:](v12, "initWithMode:", 15LL);
        }
        else {
          char v7 = -[CLDeviceMotionProperties initWithMode:](v12, "initWithMode:", 3LL);
        }
      }

      __int16 v13 = v7;
      __int16 v14 = operator new(0x90uLL);
      *__int16 v14 = off_1018A2210;
      unint64_t v15 = v13;
      *__int16 v14 = &off_10183E980;
      v14[1] = v15;
      *((_WORD *)v14 + 63) = 0;
      *((_BYTE *)v14 + 136) = 0;
      *((_DWORD *)v14 + 35) = 0;
      *(void *)(a1 + 144) = v14;
      uint64_t v16 = sub_100DDA4D4();
      sub_100DDAEA4(v16, *(void *)(a1 + 144), *(double *)(a1 + 176));
      if (qword_101934560 != -1) {
        dispatch_once(&qword_101934560, &stru_10183E8E0);
      }
      __int128 v17 = (os_log_s *)qword_101934568;
      if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_INFO))
      {
        unsigned int v18 = -[CLDeviceMotionProperties mode](v13, "mode");
        *(_DWORD *)std::string buf = 67240192;
        unsigned int v29 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "Compass is requesting device motion with mode %{public}#x",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934560 != -1) {
          dispatch_once(&qword_101934560, &stru_10183E8E0);
        }
        uint64_t v22 = qword_101934568;
        unsigned int v23 = -[CLDeviceMotionProperties mode](v13, "mode");
        int v26 = 67240192;
        unsigned int v27 = v23;
        LODWORD(v25) = 8;
        uint64_t v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  1LL,  "Compass is requesting device motion with mode %{public}#x",  &v26,  v25);
        sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLCompass6::start(BOOL)", "%s\n", v24);
      }
    }
  }

  else if (!*(void *)(a1 + 136))
  {
    int v8 = operator new(0x30uLL);
    *int v8 = off_1018A2210;
    *int v8 = &off_10183E930;
    v8[1] = 0LL;
    *((_BYTE *)v8 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
    *((_DWORD *)v8 + 11) = 0;
    *(void *)(a1 + 136) = v8;
    uint64_t v9 = sub_1006E5C40();
    sub_1006DCB40(v9, 0, *(void *)(a1 + 136), *(double *)(a1 + 176));
  }

  if (!*(void *)(a1 + 152))
  {
    unint64_t v19 = operator new(0x20uLL);
    void *v19 = off_1018A2210;
    void *v19 = &off_10183E9D0;
    v19[1] = 0LL;
    _DWORD v19[2] = sub_100515310;
    v19[3] = a1;
    *(void *)(a1 + 152) = v19;
    uint64_t v20 = sub_1007C3B70();
    sub_1006DCB40(v20, 0, *(void *)(a1 + 152), *(double *)(a1 + 168));
  }

  *(_BYTE *)(a1 + 184) = 0;
  *(_BYTE *)(a1 + 164) = 0;
}

void sub_1005152E8(_Unwind_Exception *a1)
{
}

void sub_100515310(__int128 *a1, uint64_t a2)
{
  __int128 v85 = *a1;
  uint64_t v86 = *((void *)a1 + 2);
  ++*(_DWORD *)(a2 + 160);
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_101996920);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_101996920))
  {
    dword_101996918 = (int)(1.5 / *(double *)(a2 + 168));
    __cxa_guard_release(&qword_101996920);
  }

  uint64_t v4 = *(void *)(a2 + 144);
  if (v4)
  {
    *(_WORD *)&v107[46] = 0;
    uint64_t v5 = (os_unfair_lock_s *)(v4 + 140);
    os_unfair_lock_lock((os_unfair_lock_t)(v4 + 140));
    __int128 v6 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)int v107 = *(_OWORD *)(v4 + 80);
    *(_OWORD *)&v107[16] = v6;
    *(_OWORD *)&v107[32] = *(_OWORD *)(v4 + 112);
    *(_DWORD *)&v107[48] = *(_DWORD *)(v4 + 128);
    __int128 v7 = *(_OWORD *)(v4 + 32);
    *(_OWORD *)std::string buf = *(_OWORD *)(v4 + 16);
    *(_OWORD *)&uint8_t buf[16] = v7;
    __int128 v8 = *(_OWORD *)(v4 + 64);
    *(_OWORD *)int v106 = *(_OWORD *)(v4 + 48);
    *(_OWORD *)&v106[16] = v8;
    int v9 = *(unsigned __int8 *)(v4 + 136);
    os_unfair_lock_unlock(v5);
    if (v9)
    {
      *(float *)(a2 + 18_Block_object_dispose((const void *)(v1 - 232), 8) = sub_10070CEC4((double *)&buf[8]);
      *(_DWORD *)(a2 + 192) = v10;
      *(_DWORD *)(a2 + 196) = v11;
      sub_10074CFA4(*(void *)(a2 + 200), a2 + 188);
      sub_10074CFC0(*(void *)(a2 + 200), (uint64_t *)&buf[8]);
    }
  }

  else
  {
    uint64_t v12 = *(void *)(a2 + 136);
    if (v12)
    {
      __int16 v13 = (os_unfair_lock_s *)(v12 + 44);
      os_unfair_lock_lock((os_unfair_lock_t)(v12 + 44));
      *(_OWORD *)std::string buf = *(_OWORD *)(v12 + 16);
      *(void *)&uint8_t buf[16] = *(void *)(v12 + 32);
      int v14 = *(unsigned __int8 *)(v12 + 40);
      os_unfair_lock_unlock(v13);
      if (v14)
      {
        *(void *)(a2 + 18_Block_object_dispose((const void *)(v1 - 232), 8) = *(void *)&buf[8];
        *(_DWORD *)(a2 + 196) = *(_DWORD *)&buf[16];
        sub_10074CFA4(*(void *)(a2 + 200), a2 + 188);
      }
    }
  }

  int v82 = -1082130432;
  if (*(float *)(a2 + 188) != 3.4028e38 && sub_10074C578(*(float32x2_t **)(a2 + 200), (uint64_t *)&v85 + 1))
  {
    if (!sub_10074D120( *(void *)(a2 + 200),  (uint64_t)&v76,  v21,  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v15,  v16,  v17,  v18,  v19,  v20)) {
      return;
    }
    double v75 = *(double *)&v85;
    unsigned int v29 = *(void **)(a2 + 200);
    uint64_t v30 = v29[205];
    int v31 = v30
        ? *(_DWORD *)(*(void *)(v29[201] + (((unint64_t)(v30 + v29[204] - 1) >> 7) & 0x1FFFFFFFFFFFFF8LL))
                    + 4 * ((v30 + v29[204] - 1) & 0x3FF))
        : 0;
    int v83 = v31;
    char v84 = *(_BYTE *)(a2 + 28);
    if (*(_BYTE *)(a2 + 185))
    {
      if (*((float *)&v79 + 2) < 0.0)
      {
        *(_BYTE *)(a2 + 185) = 0;
        uint64_t v36 = sub_1007C3B70();
        sub_1007C41E0(v36);
        unsigned int v29 = *(void **)(a2 + 200);
      }
    }

    else if (*((float *)&v79 + 2) >= 0.0)
    {
      *(_BYTE *)(a2 + 185) = 1;
    }

    int v37 = sub_10074DC30((uint64_t)v29);
    HIBYTE(v74) = v37;
    if (*(unsigned __int8 *)(a2 + 184) != v37)
    {
      sub_1006DD528(a2, 1LL, (uint64_t)&v74 + 7, 1LL);
      *(_BYTE *)(a2 + 184) = HIBYTE(v74);
      if (qword_101934580 != -1) {
        dispatch_once(&qword_101934580, &stru_10183E8C0);
      }
      __int16 v38 = (os_log_s *)qword_101934588;
      if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 136315650;
        *(void *)&uint8_t buf[4] = "CompassAlignment";
        *(_WORD *)&_BYTE buf[12] = 1024;
        *(_DWORD *)&_BYTE buf[14] = HIBYTE(v74);
        *(_WORD *)&buf[18] = 2048;
        *(void *)&buf[20] = v85;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "Type,%s,compassJustAlignedToStableField,%d,timestamp,%20.20f",  buf,  0x1Cu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934580 != -1) {
          dispatch_once(&qword_101934580, &stru_10183E8C0);
        }
        *(_DWORD *)uint64_t v87 = 136315650;
        *(void *)&v87[4] = "CompassAlignment";
        *(_WORD *)&v87[12] = 1024;
        *(_DWORD *)&v87[14] = HIBYTE(v74);
        *(_WORD *)&v87[18] = 2048;
        *(void *)&v87[20] = v85;
        int v71 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  2LL,  "Type,%s,compassJustAlignedToStableField,%d,timestamp,%20.20f",  v87,  28,  v73);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLCompass6::onMagnetometerData(const CLMagnetometer::Sample *, void *)",  "%s\n",  v71);
        if (v71 != buf) {
          free(v71);
        }
      }

      if (*(_BYTE *)(a2 + 29))
      {
        *(void *)uint64_t v87 = &off_101858708;
        *(void *)&v87[8] = CFAbsoluteTimeGetCurrent();
        *(void *)&v87[24] = v85;
        v88[0] = HIBYTE(v74);
        uint64_t v39 = sub_100E00E14();
        sub_100E022E0(v39, (uint64_t)v87);
        sub_101125260(buf);
        sub_10113A830(buf);
        v117 |= 1u;
        uint64_t v114 = *(void *)&v87[8];
        uint64_t v40 = v116;
        uint64_t v41 = v85;
        *(_BYTE *)(v116 + 20) |= 1u;
        *(void *)(v40 + _Block_object_dispose((const void *)(v1 - 232), 8) = v41;
        uint64_t v42 = v116;
        int v43 = HIBYTE(v74);
        *(_BYTE *)(v116 + 20) |= 2u;
        *(_DWORD *)(v42 + 16) = v43;
        if (qword_1019A1D00 != -1) {
          dispatch_once(&qword_1019A1D00, &stru_10183E900);
        }
        if (qword_1019A1D08) {
          sub_1011CF3D0(qword_1019A1D08, (uint64_t)buf);
        }
        sub_101127D00((PB::Base *)buf);
      }
    }

    LODWORD(v74) = 0;
    double v73 = 0.0;
    sub_10074DC1C(*(void *)(a2 + 200), (uint64_t)&v73);
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_10183E8C0);
    }
    double v44 = (os_log_s *)qword_101934588;
    if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 136318722;
      *(void *)&uint8_t buf[4] = "Compass";
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(double *)&_BYTE buf[14] = *(float *)&v79;
      *(_WORD *)&_BYTE buf[22] = 2048;
      *(double *)&buf[24] = *((float *)&v79 + 1);
      *(_WORD *)int v106 = 2048;
      *(double *)&v106[2] = *((float *)&v79 + 2);
      *(_WORD *)&v106[10] = 2048;
      *(double *)&v106[12] = *(float *)&v76;
      *(_WORD *)&v106[20] = 2048;
      *(double *)&v106[22] = *((float *)&v76 + 1);
      *(_WORD *)&v106[30] = 2048;
      *(double *)int v107 = *(float *)&v77;
      *(_WORD *)&v107[8] = 2048;
      *(double *)&v107[10] = *(float *)&v73;
      *(_WORD *)&v107[18] = 2048;
      *(double *)&v107[20] = *((float *)&v73 + 1);
      *(_WORD *)&v107[28] = 2048;
      *(double *)&v107[30] = *(float *)&v74;
      *(_WORD *)&v107[38] = 1024;
      *(_DWORD *)&v107[40] = HIDWORD(v79);
      *(_WORD *)&v107[44] = 2048;
      *(double *)&v107[46] = *(float *)v81;
      __int16 v108 = 2048;
      double v109 = *((float *)v81 + 1);
      __int16 v110 = 2048;
      double v111 = *(float *)&v81[1];
      __int16 v112 = 2048;
      double v113 = v75;
      _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "Type,%s,magneticHeading,%20.20f,trueHeading,%20.20f,accuracy,%20.20f,magneticField.x,%20.20f,magneticField.y,%20 .20f,magneticField.z,%20.20f,bias.x,%20.20f,bias.y,%20.20f,bias.z,%20.20f,level,%d,magnitude,%20.20f,inclination ,%20.20f,horizontal,%20.20f,timestamp,%20.20f",  buf,  0x94u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934580 != -1) {
        dispatch_once(&qword_101934580, &stru_10183E8C0);
      }
      *(_DWORD *)uint64_t v87 = 136318722;
      *(void *)&v87[4] = "Compass";
      *(_WORD *)&v87[12] = 2048;
      *(double *)&v87[14] = *(float *)&v79;
      *(_WORD *)&v87[22] = 2048;
      *(double *)&v87[24] = *((float *)&v79 + 1);
      *(_WORD *)uint64_t v88 = 2048;
      *(double *)&v88[2] = *((float *)&v79 + 2);
      *(_WORD *)&v88[10] = 2048;
      *(double *)&v88[12] = *(float *)&v76;
      *(_WORD *)uint64_t v89 = 2048;
      *(double *)&v89[2] = *((float *)&v76 + 1);
      *(_WORD *)&v89[10] = 2048;
      double v90 = *(float *)&v77;
      *(_WORD *)uint64_t v91 = 2048;
      *(double *)&v91[2] = *(float *)&v73;
      *(_WORD *)&v91[10] = 2048;
      double v92 = *((float *)&v73 + 1);
      __int16 v93 = 2048;
      double v94 = *(float *)&v74;
      __int16 v95 = 1024;
      int v96 = HIDWORD(v79);
      __int16 v97 = 2048;
      double v98 = *(float *)v81;
      __int16 v99 = 2048;
      double v100 = *((float *)v81 + 1);
      __int16 v101 = 2048;
      double v102 = *(float *)&v81[1];
      __int16 v103 = 2048;
      double v104 = v75;
      LODWORD(vsub_1000A56E8(v1 + 72) = 148;
      int v69 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  2LL,  "Type,%s,magneticHeading,%20.20f,trueHeading,%20.20f,accuracy,%20.20f,magneticField.x,%20.20f,magne ticField.y,%20.20f,magneticField.z,%20.20f,bias.x,%20.20f,bias.y,%20.20f,bias.z,%20.20f,level,%d,m agnitude,%20.20f,inclination,%20.20f,horizontal,%20.20f,timestamp,%20.20f",  v87,  v72,  v73,  v74,  v75,  v76,  v77,  v78,  *(double *)&v79,  *((double *)&v79 + 1),  v80,  *(double *)((char *)v81 + 4),  *(double *)((char *)&v81[1] + 4),  *(double *)((char *)&v81[2] + 4),  *(double *)((char *)&v81[3] + 4));
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLCompass6::onMagnetometerData(const CLMagnetometer::Sample *, void *)",  "%s\n",  v69);
      if (v69 != buf) {
        free(v69);
      }
    }

    if (*(_BYTE *)(a2 + 29))
    {
      *(void *)uint64_t v87 = &off_101857A60;
      *(void *)&v87[8] = CFAbsoluteTimeGetCurrent();
      *(double *)&v87[24] = v75;
      *(void *)&__int128 v45 = *(void *)((char *)&v79 + 4);
      *((double *)&v45 + 1) = v76;
      *(_OWORD *)&v88[4] = v45;
      *(_DWORD *)uint64_t v88 = v79;
      *(_DWORD *)uint64_t v89 = LODWORD(v77);
      *(double *)&v89[4] = v73;
      LODWORD(v9sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = LODWORD(v74);
      BYTE4(v9sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = BYTE12(v79);
      *(void *)uint64_t v91 = v81[0];
      *(_DWORD *)&v91[8] = v81[1];
      uint64_t v46 = sub_100E00E14();
      sub_100E022E0(v46, (uint64_t)v87);
      sub_101125260(buf);
      sub_10113A7DC(buf);
      v117 |= 1u;
      uint64_t v114 = *(void *)&v87[8];
      uint64_t v47 = v115;
      double v48 = v75;
      *(_WORD *)(v115 + 68) |= 1u;
      *(double *)(v47 + _Block_object_dispose((const void *)(v1 - 232), 8) = v48;
      uint64_t v49 = v115;
      *(_WORD *)(v115 + 68) |= 0x800u;
      int v50 = DWORD1(v79);
      *(_DWORD *)(v49 + 56) = v79;
      uint64_t v51 = v115;
      *(_WORD *)(v115 + 68) |= 0x2000u;
      *(_DWORD *)(v51 + 64) = v50;
      uint64_t v52 = v115;
      LODWORD(v4_Block_object_dispose((const void *)(v1 - 232), 8) = DWORD2(v79);
      *(_WORD *)(v115 + 68) |= 2u;
      *(_DWORD *)(v52 + 16) = LODWORD(v48);
      uint64_t v53 = v115;
      *(_WORD *)(v115 + 68) |= 0x100u;
      int v54 = HIDWORD(v76);
      *(_DWORD *)(v53 + 44) = LODWORD(v76);
      uint64_t v55 = v115;
      *(_WORD *)(v115 + 68) |= 0x200u;
      *(_DWORD *)(v55 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = v54;
      uint64_t v56 = v115;
      LODWORD(v4_Block_object_dispose((const void *)(v1 - 232), 8) = LODWORD(v77);
      *(_WORD *)(v115 + 68) |= 0x400u;
      *(_DWORD *)(v56 + 52) = LODWORD(v48);
      uint64_t v57 = v115;
      *(_WORD *)(v115 + 68) |= 4u;
      int v58 = HIDWORD(v73);
      *(_DWORD *)(v57 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = LODWORD(v73);
      uint64_t v59 = v115;
      *(_WORD *)(v115 + 68) |= 8u;
      *(_DWORD *)(v59 + 24) = v58;
      uint64_t v60 = v115;
      LODWORD(v4_Block_object_dispose((const void *)(v1 - 232), 8) = LODWORD(v74);
      *(_WORD *)(v115 + 68) |= 0x10u;
      *(_DWORD *)(v60 + 2_Block_object_dispose((const void *)(v1 - 232), 8) = LODWORD(v48);
      uint64_t v61 = v115;
      int v62 = HIDWORD(v79);
      *(_WORD *)(v115 + 68) |= 0x20u;
      *(_DWORD *)(v61 + 32) = v62;
      uint64_t v63 = v115;
      int v64 = HIDWORD(v81[0]);
      *(_DWORD *)(v115 + 6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v81[0];
      *(_WORD *)(v63 + 68) |= 0x1000u;
      uint64_t v65 = v115;
      *(_WORD *)(v115 + 68) |= 0x80u;
      *(_DWORD *)(v65 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v64;
      uint64_t v66 = v115;
      LODWORD(v4_Block_object_dispose((const void *)(v1 - 232), 8) = v81[1];
      *(_WORD *)(v115 + 68) |= 0x40u;
      *(_DWORD *)(v66 + 36) = LODWORD(v48);
      if (qword_1019A1D00 != -1) {
        dispatch_once(&qword_1019A1D00, &stru_10183E900);
      }
      if (qword_1019A1D08) {
        sub_1011CF3D0(qword_1019A1D08, (uint64_t)buf);
      }
      sub_101127D00((PB::Base *)buf);
    }

    if (SHIDWORD(v79) <= 0 && *(_DWORD *)(*(void *)(a2 + 200) + 376LL) <= dword_101996918) {
      return;
    }
    sub_1006DD528(a2, 0LL, (uint64_t)&v75, 112LL);
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_10183E8C0);
    }
    double v67 = (os_log_s *)qword_101934588;
    if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEBUG))
    {
      int v68 = *(_DWORD *)(*(void *)(a2 + 200) + 376LL);
      *(_DWORD *)std::string buf = 67109632;
      *(_DWORD *)&uint8_t buf[4] = v68;
      *(_WORD *)&uint8_t buf[8] = 1024;
      *(_DWORD *)&buf[10] = HIDWORD(v79);
      *(_WORD *)&_BYTE buf[14] = 2048;
      *(double *)&uint8_t buf[16] = v75;
      _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_DEBUG,  "notified clients. sampleCount,%d,compass.compass.calibrationLevel,%d,compass.timestamp,%f",  buf,  0x18u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_10183E8C0);
    }
    int v70 = *(_DWORD *)(*(void *)(a2 + 200) + 376LL);
    *(_DWORD *)uint64_t v87 = 67109632;
    *(_DWORD *)&v87[4] = v70;
    *(_WORD *)&v87[8] = 1024;
    *(_DWORD *)&v87[10] = HIDWORD(v79);
    *(_WORD *)&v87[14] = 2048;
    *(double *)&v87[16] = v75;
    __int16 v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  2LL,  "notified clients. sampleCount,%d,compass.compass.calibrationLevel,%d,compass.timestamp,%f",  v87,  24,  v73);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLCompass6::onMagnetometerData(const CLMagnetometer::Sample *, void *)",  "%s\n",  v35);
LABEL_67:
    if (v35 != buf) {
      free(v35);
    }
    return;
  }

  if (!*(_BYTE *)(a2 + 164) && *(_DWORD *)(*(void *)(a2 + 200) + 376LL) > dword_101996918)
  {
    *((void *)&v79 + 1) = 3212836864LL;
    *(void *)&__int128 v79 = 0LL;
    LODWORD(v77) = 0;
    LOBYTE(v8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
    memset(v81, 0, 12);
    int v83 = 0;
    char v84 = 0;
    double v75 = *(double *)&v85;
    double v76 = 0.0;
    *(_BYTE *)(a2 + 164) = 1;
    sub_1006DD528(a2, 0LL, (uint64_t)&v75, 112LL);
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_10183E8C0);
    }
    unsigned __int8 v32 = (os_log_s *)qword_101934588;
    if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_INFO))
    {
      double v33 = *(double *)(a2 + 168) * (double)*(int *)(*(void *)(a2 + 200) + 376LL);
      *(_DWORD *)std::string buf = 134349056;
      *(double *)&uint8_t buf[4] = v33;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_INFO,  "Notify after %{public}.3f seconds of no event.",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934580 != -1) {
        dispatch_once(&qword_101934580, &stru_10183E8C0);
      }
      double v34 = *(double *)(a2 + 168) * (double)*(int *)(*(void *)(a2 + 200) + 376LL);
      *(_DWORD *)uint64_t v87 = 134349056;
      *(double *)&v87[4] = v34;
      __int16 v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  1LL,  "Notify after %{public}.3f seconds of no event.",  v87,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLCompass6::onMagnetometerData(const CLMagnetometer::Sample *, void *)",  "%s\n",  v35);
      goto LABEL_67;
    }
  }

void sub_1005160F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,char a51)
{
}

void sub_100516124(uint64_t a1)
{
  if (qword_101934580 != -1) {
    dispatch_once(&qword_101934580, &stru_10183E8C0);
  }
  uint64_t v2 = (os_log_s *)qword_101934588;
  if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Legacy compass stopped.", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934580 != -1) {
      dispatch_once(&qword_101934580, &stru_10183E8C0);
    }
    v12[0] = 0;
    int v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  0LL,  "Legacy compass stopped.",  v12,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLCompass6::stop()", "%s\n", v11);
  }

  uint64_t v4 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = 0LL;
  if (v3)
  {
    uint64_t v5 = sub_1007C3B70();
    sub_1006DD2A0(v5, 0, *(void *)(a1 + 152));
    uint64_t v6 = *(void *)(a1 + 152);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    *(void *)(a1 + 152) = 0LL;
  }

  if (*(_BYTE *)(a1 + 186))
  {
    if (v4)
    {
      uint64_t v7 = sub_100DDA4D4();
      sub_100DDB140(v7, v4);
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
  }

  else if (*(void *)(a1 + 136))
  {
    uint64_t v8 = sub_1006E5C40();
    sub_1006DD2A0(v8, 0, *(void *)(a1 + 136));
    uint64_t v9 = *(void *)(a1 + 136);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    *(void *)(a1 + 136) = 0LL;
  }

  if (*(void *)(a1 + 200))
  {
    int v10 = (void *)sub_10074C574();
    operator delete(v10);
    *(void *)(a1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  }

  *(_DWORD *)(a1 + 18_Block_object_dispose((const void *)(v1 - 232), 8) = 2139095039;
}

float sub_100516360(uint64_t a1, double *a2)
{
  uint64_t v2 = *(void *)(a1 + 200);
  if (v2) {
    return sub_10074CFF8(v2, a2);
  }
  return result;
}

uint64_t sub_100516370(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 200);
  if (result) {
    return sub_10074D06C(result);
  }
  return result;
}

void sub_100516380(id a1)
{
  qword_101934588 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Compass");
}

void sub_1005163AC(id a1)
{
  qword_101934568 = (uint64_t)os_log_create("com.apple.locationd.Motion", "DeviceMotion");
}

void sub_1005163E0(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1011C07F8(a1);
  operator delete(v1);
}

void sub_1005163F4(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5 = (os_unfair_lock_s *)(a1 + 44);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 44));
  __int128 v6 = *a3;
  *(void *)(a1 + 32) = *((void *)a3 + 2);
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1;
  os_unfair_lock_unlock(v5);
}

void sub_100516444(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5 = (os_unfair_lock_s *)(a1 + 140);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 140));
  __int128 v6 = *a3;
  __int128 v7 = a3[1];
  __int128 v8 = a3[3];
  *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = a3[2];
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = v7;
  __int128 v9 = a3[4];
  __int128 v10 = a3[5];
  __int128 v11 = a3[6];
  *(_DWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 232), 8) = *((_DWORD *)a3 + 28);
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v9;
  *(_BYTE *)(a1 + 136) = 1;
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1005164AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, void))(a1 + 16))(a3, *(void *)(a1 + 24));
}

uint64_t sub_1005164B8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (!*a3) {
    return 4LL;
  }
  sub_100D2D9A4((uint64_t)v25);
  double v5 = sub_100841510((double *)(a1 + 4), a2, v25);
  if (v5 >= *((double *)sub_100D0ABD8() + 5))
  {
    else {
      uint64_t v6 = 2LL;
    }
  }

  else
  {
    uint64_t v6 = 3LL;
  }

  int v24 = v6;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_10183EA10);
  }
  __int128 v7 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *(char *)(a2 + 23) >= 0 ? a2 : *(void *)a2;
    uint64_t v9 = *(char *)(a2 + 47) >= 0 ? a2 + 24 : *(void *)(a2 + 24);
    sub_1005167D4(&v24, __p);
    __int128 v10 = v29 >= 0 ? __p : *(_BYTE **)__p;
    *(_DWORD *)std::string buf = 136315906;
    uint64_t v34 = v8;
    __int16 v35 = 2080;
    uint64_t v36 = v9;
    __int16 v37 = 2048;
    double v38 = v5;
    __int16 v39 = 2080;
    uint64_t v40 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "converging state change, fence, %s/%s, distance, %.2f, proximity state, %s",  buf,  0x2Au);
    if (SHIBYTE(v29) < 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_10183EA10);
    }
    uint64_t v12 = qword_101934878;
    else {
      uint64_t v13 = *(void *)a2;
    }
    int v14 = *(char *)(a2 + 47);
    uint64_t v17 = *(void *)(a2 + 24);
    uint64_t v16 = a2 + 24;
    uint64_t v15 = v17;
    if (v14 < 0) {
      uint64_t v16 = v15;
    }
    sub_1005167D4(&v24, v22);
    if (v23 >= 0) {
      uint64_t v18 = v22;
    }
    else {
      uint64_t v18 = (void **)v22[0];
    }
    *(_DWORD *)std::string __p = 136315906;
    *(void *)&__p[4] = v13;
    __int16 v27 = 2080;
    uint64_t v28 = v16;
    __int16 v29 = 2048;
    double v30 = v5;
    __int16 v31 = 2080;
    unsigned __int8 v32 = v18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  2LL,  "converging state change, fence, %s/%s, distance, %.2f, proximity state, %s",  __p,  42,  v21,  (const char *)v22[0]);
    uint64_t v20 = v19;
    if (v23 < 0) {
      operator delete(v22[0]);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLFenceProximityState CLFenceApproachingClassifier::getFenceProximityState(const CLDaemonLocation &, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &)",  "%s\n",  v20);
  }

  return v6;
}

void *sub_1005167D4@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  else {
    double v5 = off_10183EA30[v4];
  }
  return sub_1010DDBC0(a2, v5);
}

void sub_100516804(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

uint64_t sub_100516C80(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        LODWORD(v6) = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v6) = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((unsigned __int16)(v6 >> 3))
    {
      case 1u:
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0LL;
        *(_BYTE *)(a1 + 36) |= 4u;
        while (1)
        {
          uint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v17 = v16 + 1;
          if (v16 == -1 || v17 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v18 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17;
          v15 |= (unint64_t)(v18 & 0x7F) << v13;
          if ((v18 & 0x80) == 0) {
            goto LABEL_41;
          }
          v13 += 7;
          BOOL v10 = v14++ >= 9;
          if (v10)
          {
            LODWORD(v15) = 0;
            goto LABEL_43;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_41:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_43:
        uint64_t v28 = 32LL;
        goto LABEL_48;
      case 2u:
        *(_BYTE *)(a1 + 36) |= 1u;
        unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v20 <= 0xFFFFFFFFFFFFFFF7LL && v20 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v21 = 0LL;
        }

        *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v21;
        goto LABEL_51;
      case 3u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v15 = 0LL;
        *(_BYTE *)(a1 + 36) |= 2u;
        while (2)
        {
          uint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v26 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25;
            v15 |= (unint64_t)(v26 & 0x7F) << v22;
            if (v26 < 0)
            {
              v22 += 7;
              BOOL v10 = v23++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_47;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_47:
        uint64_t v28 = 16LL;
LABEL_48:
        *(_DWORD *)(a1 + v2_Block_object_dispose((const void *)(v1 - 232), 8) = v15;
        goto LABEL_51;
      case 4u:
        __int16 v27 = objc_alloc_init(&OBJC_CLASS___TRANSITPbRegionPreloadMarket);
        [(id)a1 addMarkets:v27];

        if (PBReaderPlaceMark(a2, v29) && (sub_1005D3124(v27, a2) & 1) != 0)
        {
          PBReaderRecallMark(a2, v29);
LABEL_51:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_51;
    }
  }

char *sub_1005177C0(char *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v3 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v3;
  }

  __dst[24] = 0;
  *((void *)__dst + 6) = 0LL;
  *((void *)__dst + 5) = 0LL;
  *((void *)__dst + 4) = __dst + 40;
  __dst[56] = 0;
  *((void *)__dst + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  __dst[72] = 0;
  *((_DWORD *)__dst + 19) = 0;
  return __dst;
}

char *sub_100517830(char *__dst, uint64_t a2, __int128 *a3)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a2, *(void *)(a2 + 8));
  }

  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    uint64_t v9 = *(void *)(a2 + 16);
  }

  sub_1005177C0(__dst, (__int128 *)__p);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  unsigned int v5 = __dst + 80;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1010DD48C(v5, *(void **)a3, *((void *)a3 + 1));
  }

  else
  {
    __int128 v6 = *a3;
    *((void *)__dst + 12) = *((void *)a3 + 2);
    *(_OWORD *)unsigned int v5 = v6;
  }

  return __dst;
}

void sub_1005178CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

uint64_t sub_1005178F8(uint64_t a1)
{
  return a1;
}

void *sub_100517934(void *result)
{
  result[1] = 0LL;
  *uint64_t result = result + 1;
  result[5] = 0LL;
  result[4] = 0LL;
  result[2] = 0LL;
  result[3] = result + 4;
  return result;
}

uint64_t *sub_100517954(uint64_t *result, int a2, unint64_t a3)
{
  if (a2 == 1) {
    return sub_1005179DC((uint64_t)result, a3);
  }
  if (!a2) {
    return sub_100517974(result, a3);
  }
  return result;
}

uint64_t *sub_100517974(uint64_t *result, unint64_t a2)
{
  unint64_t v7 = a2;
  uint64_t v2 = (void *)result[1];
  if (!v2) {
    return sub_1001145B0((uint64_t **)result, &v7, (uint64_t *)&v7);
  }
  __int128 v3 = result + 1;
  do
  {
    unint64_t v4 = v2[4];
    BOOL v5 = v4 >= a2;
    if (v4 >= a2) {
      __int128 v6 = v2;
    }
    else {
      __int128 v6 = v2 + 1;
    }
    if (v5) {
      __int128 v3 = v2;
    }
    uint64_t v2 = (void *)*v6;
  }

  while (*v6);
  if (v3 == result + 1 || v3[4] > a2) {
    return sub_1001145B0((uint64_t **)result, &v7, (uint64_t *)&v7);
  }
  return result;
}

uint64_t *sub_1005179DC(uint64_t a1, unint64_t a2)
{
  unint64_t v9 = a2;
  unint64_t v4 = *(void **)(a1 + 32);
  uint64_t result = (uint64_t *)(a1 + 32);
  __int128 v3 = v4;
  if (!v4) {
    return sub_1001145B0((uint64_t **)result - 1, &v9, (uint64_t *)&v9);
  }
  BOOL v5 = result;
  do
  {
    unint64_t v6 = v3[4];
    BOOL v7 = v6 >= a2;
    if (v6 >= a2) {
      unint64_t v8 = v3;
    }
    else {
      unint64_t v8 = v3 + 1;
    }
    if (v7) {
      BOOL v5 = v3;
    }
    __int128 v3 = (void *)*v8;
  }

  while (*v8);
  if (v5 == result || v5[4] > a2) {
    return sub_1001145B0((uint64_t **)result - 1, &v9, (uint64_t *)&v9);
  }
  return result;
}

void sub_100517A44(uint64_t a1, int a2, unint64_t a3)
{
  if (a2 == 1)
  {
    sub_100517AD4(a1, a3);
  }

  else if (!a2)
  {
    sub_100517A64(a1, a3);
  }

void sub_100517A64(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    __int128 v3 = (uint64_t *)(a1 + 8);
    do
    {
      unint64_t v4 = v2[4];
      BOOL v5 = v4 >= a2;
      if (v4 >= a2) {
        unint64_t v6 = v2;
      }
      else {
        unint64_t v6 = v2 + 1;
      }
      if (v5) {
        __int128 v3 = v2;
      }
      uint64_t v2 = (void *)*v6;
    }

    while (*v6);
    if (v3 != (uint64_t *)(a1 + 8) && v3[4] <= a2)
    {
      sub_1000087E8((uint64_t **)a1, v3);
      operator delete(v3);
    }
  }

void sub_100517AD4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t *)(a1 + 32);
  __int128 v3 = *(void **)(a1 + 32);
  if (v3)
  {
    unint64_t v4 = (uint64_t **)(a1 + 24);
    BOOL v5 = v2;
    do
    {
      unint64_t v6 = v3[4];
      BOOL v7 = v6 >= a2;
      if (v6 >= a2) {
        unint64_t v8 = v3;
      }
      else {
        unint64_t v8 = v3 + 1;
      }
      if (v7) {
        BOOL v5 = v3;
      }
      __int128 v3 = (void *)*v8;
    }

    while (*v8);
    if (v5 != v2 && v5[4] <= a2)
    {
      sub_1000087E8(v4, v5);
      operator delete(v5);
    }
  }

id sub_100517B48(uint64_t a1, uint64_t *a2, void *a3)
{
  if ([a3 objectForKey:@"associatedStoreIdentifiers"])
  {
    v23[0] = 0LL;
    v23[1] = 0LL;
    char v22 = v23;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    id v5 = [a3 objectForKey:@"associatedStoreIdentifiers"];
    id v6 = [v5 countByEnumeratingWithState:&v18 objects:v24 count:16];
    if (v6)
    {
      uint64_t v7 = *(void *)v19;
      do
      {
        for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v19 != v7) {
            objc_enumerationMutation(v5);
          }
          sub_1010DDBC0(__p, (char *)[*(id *)(*((void *)&v18 + 1) + 8 * (void)i) UTF8String]);
          sub_1003F9748((uint64_t **)&v22, (const void **)__p, (uint64_t)__p);
          if (v17 < 0) {
            operator delete(__p[0]);
          }
        }

        id v6 = [v5 countByEnumeratingWithState:&v18 objects:v24 count:16];
      }

      while (v6);
    }

    uint64_t v9 = *a2;
    sub_100518014((uint64_t *)&v14, (const void ***)&v22);
    *(_BYTE *)(v9 + 24) = 1;
    if ((void **)(v9 + 32) != &v14) {
      sub_1005180EC((uint64_t **)(v9 + 32), v14, &v15);
    }
    sub_1000229D4((uint64_t)&v14, v15);
    sub_1000229D4((uint64_t)&v22, v23[0]);
  }

  if ([a3 objectForKey:@"muid"]
    && objc_msgSend(objc_msgSend(a3, "objectForKey:", @"muid"), "unsignedLongLongValue"))
  {
    uint64_t v10 = *a2;
    id v11 = objc_msgSend(objc_msgSend(a3, "objectForKey:", @"muid"), "unsignedLongLongValue");
    *(_BYTE *)(v10 + 56) = 1;
    *(void *)(v10 + 64) = v11;
  }

  id result = [a3 objectForKey:@"resultProviderIdentifier"];
  if (result)
  {
    id result = objc_msgSend(objc_msgSend(a3, "objectForKey:", @"resultProviderIdentifier"), "intValue");
    if ((_DWORD)result)
    {
      uint64_t v13 = *a2;
      id result = objc_msgSend(objc_msgSend(a3, "objectForKey:", @"resultProviderIdentifier"), "intValue");
      *(_BYTE *)(v13 + sub_1000A56E8(v1 + 72) = 1;
      *(_DWORD *)(v13 + 76) = (_DWORD)result;
    }
  }

  return result;
}

void sub_100517D84( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char *a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26, char *a27)
{
}

void sub_100517DE0(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = sub_100518314((uint64_t)v33, (uint64_t)__p, &v35);
  if (v32 < 0) {
    operator delete(__p[0]);
  }
  if (v34 < 0) {
    operator delete(v33[0]);
  }
  unint64_t v8 = (std::__shared_weak_count *)v36;
  v30[0] = v35;
  v30[1] = v36;
  if (v36)
  {
    uint64_t v9 = (unint64_t *)(v36 + 8);
    do
      unint64_t v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }

  sub_100517B48(v7, v30, a4);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      unint64_t v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  uint64_t v15 = (void *)*a1;
  uint64_t v13 = a1 + 1;
  uint64_t v14 = v15;
  if (v15 != v13)
  {
    do
    {
      uint64_t v16 = v14[4];
      uint64_t v28 = v35;
      __int16 v29 = (std::__shared_weak_count *)v36;
      if (v36)
      {
        char v17 = (unint64_t *)(v36 + 8);
        do
          unint64_t v18 = __ldxr(v17);
        while (__stxr(v18 + 1, v17));
      }

      (*(void (**)(uint64_t, void, uint64_t *))(*(void *)v16 + 16LL))(v16, 0LL, &v28);
      __int128 v19 = v29;
      if (v29)
      {
        __int128 v20 = (unint64_t *)&v29->__shared_owners_;
        do
          unint64_t v21 = __ldaxr(v20);
        while (__stlxr(v21 - 1, v20));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }

      char v22 = (void *)v14[1];
      if (v22)
      {
        do
        {
          unsigned int v23 = v22;
          char v22 = (void *)*v22;
        }

        while (v22);
      }

      else
      {
        do
        {
          unsigned int v23 = (void *)v14[2];
          BOOL v24 = *v23 == (void)v14;
          uint64_t v14 = v23;
        }

        while (!v24);
      }

      uint64_t v14 = v23;
    }

    while (v23 != v13);
  }

  unint64_t v25 = (std::__shared_weak_count *)v36;
  if (v36)
  {
    char v26 = (unint64_t *)(v36 + 8);
    do
      unint64_t v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }

void sub_100517FBC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20, uint64_t a21, int a22, __int16 a23, char a24, char a25)
{
}

uint64_t *sub_100518014(uint64_t *a1, const void ***a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_100518068(a1, *a2, a2 + 1);
  return a1;
}

void sub_100518050(_Unwind_Exception *a1)
{
}

uint64_t *sub_100518068(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    unint64_t v4 = a2;
    id v5 = (uint64_t **)result;
    id v6 = result + 1;
    do
    {
      id result = sub_1003F9990(v5, v6, v4 + 4, (uint64_t)(v4 + 4));
      uint64_t v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          unint64_t v8 = (const void ***)v7;
          uint64_t v7 = (const void **)*v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          unint64_t v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          unint64_t v4 = (const void **)v8;
        }

        while (!v9);
      }

      unint64_t v4 = (const void **)v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t **sub_1005180EC(uint64_t **result, void *a2, void *a3)
{
  id v5 = result;
  if (result[2])
  {
    id v6 = *result;
    uint64_t v7 = result[1];
    *id result = (uint64_t *)(result + 1);
    void v7[2] = 0LL;
    result[1] = 0LL;
    result[2] = 0LL;
    if (v6[1]) {
      unint64_t v8 = (uint64_t *)v6[1];
    }
    else {
      unint64_t v8 = v6;
    }
    uint64_t v15 = result;
    uint64_t v16 = v8;
    char v17 = (const void **)v8;
    if (v8)
    {
      uint64_t v16 = sub_100115560((uint64_t)v8);
      if (a2 != a3)
      {
        BOOL v9 = a2;
        do
        {
          std::string::operator=((std::string *)(v8 + 4), (const std::string *)(v9 + 4));
          unint64_t v10 = (uint64_t **)sub_1000C3B68((uint64_t)v5, &v18, v17 + 4);
          sub_1000085FC(v5, v18, v10, (uint64_t *)v17);
          char v17 = (const void **)v16;
          if (v16) {
            uint64_t v16 = sub_100115560((uint64_t)v16);
          }
          id v11 = (void *)v9[1];
          if (v11)
          {
            do
            {
              a2 = v11;
              id v11 = (void *)*v11;
            }

            while (v11);
          }

          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v12 = *a2 == (void)v9;
              BOOL v9 = a2;
            }

            while (!v12);
          }

          unint64_t v8 = (uint64_t *)v17;
          if (v17) {
            BOOL v12 = a2 == a3;
          }
          else {
            BOOL v12 = 1;
          }
          BOOL v9 = a2;
        }

        while (!v12);
      }
    }

    id result = (uint64_t **)sub_10051826C((uint64_t)&v15);
  }

  if (a2 != a3)
  {
    do
    {
      id result = (uint64_t **)sub_1005182C0(v5, (uint64_t)(a2 + 4));
      uint64_t v13 = (void *)a2[1];
      if (v13)
      {
        do
        {
          uint64_t v14 = v13;
          uint64_t v13 = (void *)*v13;
        }

        while (v13);
      }

      else
      {
        do
        {
          uint64_t v14 = (void *)a2[2];
          BOOL v12 = *v14 == (void)a2;
          a2 = v14;
        }

        while (!v12);
      }

      a2 = v14;
    }

    while (v14 != a3);
  }

  return result;
}

void sub_100518258( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10051826C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = *(void *)(v3 + 16);
      }

      while (v3);
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = v2;
    }

    sub_1000229D4(*(void *)a1, (char *)v2);
  }

  return a1;
}

const void **sub_1005182C0(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t **)sub_1000C3B68((uint64_t)a1, &v5, v6 + 4);
  sub_1000085FC(a1, v5, v3, (uint64_t *)v6);
  return v6;
}

uint64_t sub_100518314@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  id v6 = (char *)operator new(0x80uLL);
  uint64_t result = sub_100518374((uint64_t)v6, a1, a2);
  *a3 = v6 + 24;
  a3[1] = v6;
  return result;
}

void sub_100518360(_Unwind_Exception *a1)
{
}

uint64_t sub_100518374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = off_10183EA68;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  sub_100518438((int)&v5, (char *)(a1 + 24), a2, a3);
  return a1;
}

void sub_1005183C4(_Unwind_Exception *a1)
{
}

void sub_1005183D8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10183EA68;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1005183EC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10183EA68;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100518410(uint64_t a1)
{
}

void sub_100518438(int a1, char *__dst, uint64_t a3, uint64_t a4)
{
  *(_OWORD *)id v6 = *(_OWORD *)a3;
  uint64_t v7 = *(void *)(a3 + 16);
  *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(a3 + 16) = 0LL;
  *(void *)a3 = 0LL;
  *(_OWORD *)std::string __p = *(_OWORD *)a4;
  uint64_t v5 = *(void *)(a4 + 16);
  *(void *)a4 = 0LL;
  *(void *)(a4 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  *(void *)(a4 + 16) = 0LL;
  sub_100517830(__dst, (uint64_t)v6, (__int128 *)__p);
  if (SHIBYTE(v5) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7) < 0) {
    operator delete(v6[0]);
  }
}

void sub_1005184C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1012241B4((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_1005184E8(uint64_t a1, uint64_t a2)
{
}

void *sub_100518538(void *a1, void *a2)
{
  *a1 = [a2 copy];
  return a1;
}

id *sub_100518564(id *a1)
{
  if (*a1) {

  }
  return a1;
}

void sub_100518598(void *a1, uint64_t a2, uint64_t a3)
{
  if (&_ADClientAddValueForScalarKey)
  {
    unint64_t v4 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"%@.%@", *a1, a2);
    ADClientAddValueForScalarKey(v4, a3);
  }

void sub_10051860C(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"%@.%@", *a1, a2);
  ADClientSetValueForScalarKey(v4, a3);
}

void sub_100518670(void *a1, uint64_t a2, double a3)
{
  unint64_t v4 = -[NSString initWithFormat:](objc_alloc(&OBJC_CLASS___NSString), "initWithFormat:", @"%@.%@", *a1, a2);
  ADClientPushValueForDistributionKey(v4, a3);
}

uint64_t sub_1005186D4(uint64_t result, unsigned int a2)
{
  else {
    unsigned int v2 = dword_1012F0064[(int)result - 1];
  }
  if (a2 - 1 > 2) {
    unsigned int v3 = 0;
  }
  else {
    unsigned int v3 = dword_1012F0064[a2 - 1];
  }
  if (v2 <= v3) {
    return a2;
  }
  else {
    return result;
  }
}

void *sub_100518718(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = 0LL;
  a1[1] = a2;
  a1[2] = 26LL;
  sub_10001A504((uint64_t)(a1 + 3), a3);
  return a1;
}

void sub_100518750(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *v1;
  uint64_t *v1 = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100518778(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100518790(void *a1)
{
  uint64_t result = (**(uint64_t (***)(void, void))*a1)(*a1, a1[1]);
  uint64_t v4 = result;
  if ((_DWORD)result)
  {
    uint64_t v5 = v3;
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183EAA8);
    }
    id v6 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 67109120;
      int v26 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutActiveStateDetector,sending event %d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183EAA8);
      }
      v24[0] = 67109120;
      v24[1] = v4;
      unint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutActiveStateDetector,sending event %d",  v24);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWorkoutActiveStateDetector::updateModel()", "%s\n", v8);
    }

    uint64_t v23 = 0LL;
    __int128 v22 = 0u;
    __int128 v21 = 0u;
    __int128 v20 = 0u;
    __int128 v19 = 0u;
    __int128 v18 = 0u;
    __int128 v17 = 0u;
    __int128 v16 = 0u;
    __int128 v15 = 0u;
    __int128 v14 = 0u;
    __int128 v13 = 0u;
    __int128 v12 = 0u;
    __int128 v11 = 0u;
    __int128 v10 = 0u;
    v9[0] = v4;
    v9[1] = v5;
    *(_DWORD *)std::string buf = 8;
    uint64_t v7 = a1[6];
    if (!v7) {
      sub_100008BDC();
    }
    return (*(uint64_t (**)(uint64_t, uint8_t *, void *))(*(void *)v7 + 48LL))(v7, buf, v9);
  }

  return result;
}

uint64_t sub_1005189C8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
    if ((result & 0x100) != 0) {
      return sub_100518790(a1);
    }
  }

  return result;
}

uint64_t sub_100518A0C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
    if ((result & 1) != 0) {
      return sub_100518790(a1);
    }
  }

  return result;
}

uint64_t sub_100518A50(uint64_t a1, int a2, double a3)
{
  if (a2) {
    int v5 = 2;
  }
  else {
    int v5 = 1;
  }
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183EAA8);
  }
  id v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67109120;
    int v28 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutActiveStateDetector,sending external active state %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183EAA8);
    }
    v26[0] = 67109120;
    v26[1] = v5;
    BOOL v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutActiveStateDetector,sending external active state %d",  v26);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutActiveStateDetector::feedExternalActiveState(BOOL, CFAbsoluteTime)",  "%s\n",  v9);
  }

  uint64_t v25 = 0LL;
  __int128 v24 = 0u;
  __int128 v23 = 0u;
  __int128 v22 = 0u;
  __int128 v21 = 0u;
  __int128 v20 = 0u;
  __int128 v19 = 0u;
  __int128 v18 = 0u;
  __int128 v17 = 0u;
  __int128 v16 = 0u;
  __int128 v15 = 0u;
  __int128 v14 = 0u;
  __int128 v13 = 0u;
  __int128 v12 = 0u;
  int v10 = v5;
  double v11 = a3;
  *(_DWORD *)std::string buf = 8;
  uint64_t v7 = *(void *)(a1 + 48);
  if (!v7) {
    sub_100008BDC();
  }
  return (*(uint64_t (**)(uint64_t, uint8_t *, int *))(*(void *)v7 + 48LL))(v7, buf, &v10);
}

void sub_100518C7C(uint64_t *a1, uint64_t a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183EAA8);
  }
  uint64_t v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 134349056;
    *(void *)&uint8_t buf[4] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutActiveStateDetector,setting workout type to,%{public}ld",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183EAA8);
    }
    int v17 = 134349056;
    uint64_t v18 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutActiveStateDetector,setting workout type to,%{public}ld",  &v17,  12);
    __int128 v15 = (char *)v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutActiveStateDetector::setWorkoutType(CMWorkoutType)",  "%s\n",  v14);
  }

  if (a1[2] == a2)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183EAA8);
    }
    int v5 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = a1[2];
      *(_DWORD *)std::string buf = 134349056;
      *(void *)&uint8_t buf[4] = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "CLWorkoutActiveStateDetector,workout type didn't change,%{public}ld",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183EAA8);
      }
      uint64_t v7 = a1[2];
      int v17 = 134349056;
      uint64_t v18 = v7;
      LODWORD(v16) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLWorkoutActiveStateDetector,workout type didn't change,%{public}ld",  &v17,  v16);
      BOOL v9 = (char *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutActiveStateDetector::setWorkoutType(CMWorkoutType)",  "%s\n",  v8);
    }

    return;
  }

  a1[2] = a2;
  if (a2 > 3)
  {
    if (a2 == 4)
    {
      sub_100519030(buf);
      uint64_t v12 = *(void *)buf;
      *(void *)std::string buf = 0LL;
      uint64_t v13 = *a1;
      *a1 = v12;
      if (!v13) {
        return;
      }
      (*(void (**)(uint64_t))(*(void *)v13 + 32LL))(v13);
      uint64_t v10 = *(void *)buf;
      *(void *)std::string buf = 0LL;
      if (!v10) {
        return;
      }
LABEL_18:
      (*(void (**)(uint64_t))(*(void *)v10 + 32LL))(v10);
      return;
    }

    if (a2 != 66) {
      return;
    }
  }

  else
  {
    if ((unint64_t)(a2 - 1) < 3)
    {
LABEL_17:
      uint64_t v10 = *a1;
      *a1 = 0LL;
      if (!v10) {
        return;
      }
      goto LABEL_18;
    }

    if (a2) {
      return;
    }
  }

  uint64_t v11 = *a1;
  *a1 = 0LL;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 32LL))(v11);
  }
  a1[2] = 0LL;
}

void sub_100519030(void *a1@<X8>)
{
  unsigned int v2 = operator new(0xB0uLL);
  sub_1003A406C((uint64_t)v2);
  *a1 = v2;
}

void sub_100519060(_Unwind_Exception *a1)
{
}

void sub_100519074(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

double sub_1005190A0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  sub_10051B470(&v6, &v7, v5);
  double result = v5[0];
  *a3 = *(_OWORD *)v5;
  return result;
}

uint64_t sub_1005190E4(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)a1 = off_10183EAD8;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0u;
  int v5 = (std::string::size_type *)(a1 + 8);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + sub_10000AE14(v25 - 56) = 0u;
  *(void *)(a1 + sub_1000A56E8(v1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = a2;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 232), 8) = a3;
  *(void *)(a1 + 96) = 0LL;
  uint64_t v6 = (void *)(a1 + 96);
  *(void *)(a1 + 104) = 0LL;
  sub_10034FF34((uint64_t)sub_10051976C, a2, a3, &v42);
  std::string::size_type v7 = v42.__r_.__value_.__r.__words[0];
  v42.__r_.__value_.__r.__words[0] = 0LL;
  std::string::size_type v8 = *v5;
  std::string::size_type *v5 = v7;
  if (v8)
  {
    (*(void (**)(std::string::size_type))(*(void *)v8 + 8LL))(v8);
    std::string::size_type v9 = v42.__r_.__value_.__r.__words[0];
    v42.__r_.__value_.__r.__words[0] = 0LL;
    if (v9) {
      (*(void (**)(std::string::size_type))(*(void *)v9 + 8LL))(v9);
    }
  }

  [*(id *)(*v5 + 16) register:*(void *)(*v5 + 8) forNotification:3 registrationInfo:0];
  [*(id *)(*v5 + 16) register:*(void *)(*v5 + 8) forNotification:1 registrationInfo:0];
  [*(id *)(*v5 + 16) register:*(void *)(*v5 + 8) forNotification:4 registrationInfo:0];
  [*(id *)(*v5 + 16) register:*(void *)(*v5 + 8) forNotification:5 registrationInfo:0];
  [*(id *)(*v5 + 16) register:*(void *)(*v5 + 8) forNotification:7 registrationInfo:0];
  [*(id *)(*v5 + 16) register:*(void *)(*v5 + 8) forNotification:6 registrationInfo:0];
  [*(id *)(*v5 + 16) register:*(void *)(*v5 + 8) forNotification:2 registrationInfo:0];
  sub_100583844((uint64_t)sub_100519954, *(void *)(a1 + 80), *(void **)(a1 + 88), &v42);
  std::string::size_type v10 = v42.__r_.__value_.__r.__words[0];
  v42.__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v11 = *(void *)(a1 + 48);
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = v10;
  if (v11)
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    std::string::size_type v12 = v42.__r_.__value_.__r.__words[0];
    v42.__r_.__value_.__r.__words[0] = 0LL;
    if (v12) {
      (*(void (**)(std::string::size_type))(*(void *)v12 + 8LL))(v12);
    }
  }

  [*(id *)(*(void *)(a1 + 48) + 16) register:*(void *)(*(void *)(a1 + 48) + 8) forNotification:4 registrationInfo:0];
  memset(&v42, 0, sizeof(v42));
  std::string::operator=(&v42, &stru_101996928);
  [*(id *)(*(void *)(a1 + 48) + 16) register:*(void *)(*(void *)(a1 + 48) + 8) forNotification:0 registrationInfo:sub_10120E548((uint64_t)&v42)];
  sub_1004BFDC0((uint64_t)sub_100519B3C, *(void *)(a1 + 80), *(void **)(a1 + 88), &v39);
  uint64_t v13 = v39;
  uint64_t v39 = 0LL;
  uint64_t v14 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v13;
  if (v14)
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
    uint64_t v15 = v39;
    uint64_t v39 = 0LL;
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
    }
  }

  sub_1003CC884((uint64_t)sub_100519D24, *(void *)(a1 + 80), *(void **)(a1 + 88), &v39);
  uint64_t v16 = v39;
  uint64_t v39 = 0LL;
  uint64_t v17 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v16;
  if (v17)
  {
    (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
    uint64_t v18 = v39;
    uint64_t v39 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
  }

  objc_msgSend( *(id *)(*(void *)(a1 + 24) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 24) + 8),  15,  0,  v39);
  [*(id *)(*(void *)(a1 + 24) + 16) register:*(void *)(*(void *)(a1 + 24) + 8) forNotification:16 registrationInfo:0];
  sub_100C6E054((uint64_t)sub_100519F0C, *(void *)(a1 + 80), *(void **)(a1 + 88), &v39);
  uint64_t v19 = v39;
  uint64_t v39 = 0LL;
  uint64_t v20 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = v19;
  if (v20)
  {
    (*(void (**)(uint64_t))(*(void *)v20 + 8LL))(v20);
    uint64_t v21 = v39;
    uint64_t v39 = 0LL;
    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
    }
  }

  objc_msgSend( *(id *)(*(void *)(a1 + 32) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 32) + 8),  5,  0,  v39);
  sub_10036B3B4((uint64_t)sub_10051A0F4, *(void *)(a1 + 80), *(void **)(a1 + 88), &v39);
  uint64_t v22 = v39;
  uint64_t v39 = 0LL;
  uint64_t v23 = *(void *)(a1 + 40);
  *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v22;
  if (v23)
  {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
    uint64_t v24 = v39;
    uint64_t v39 = 0LL;
    if (v24) {
      (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
    }
  }

  sub_1004EEF6C((uint64_t)sub_10051A2DC, *(void *)(a1 + 80), *(void **)(a1 + 88), &v39);
  uint64_t v25 = v39;
  uint64_t v39 = 0LL;
  uint64_t v26 = *(void *)(a1 + 56);
  *(void *)(a1 + sub_10000AE14(v25 - 56) = v25;
  if (v26)
  {
    (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
    uint64_t v27 = v39;
    uint64_t v39 = 0LL;
    if (v27) {
      (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
    }
  }

  objc_msgSend( *(id *)(*(void *)(a1 + 56) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 56) + 8),  5,  0,  v39);
  BOOL v41 = 0;
  sub_1002F0B04(&v39);
  sub_1002A6F64(v39, "IgnoreSignalEnvironment", &v41);
  int v28 = v40;
  if (v40)
  {
    p_shared_owners = (unint64_t *)&v40->__shared_owners_;
    do
      unint64_t v30 = __ldaxr(p_shared_owners);
    while (__stlxr(v30 - 1, p_shared_owners));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }

  if (!v41)
  {
    sub_100A1C6E0((uint64_t)sub_10051A4C4, *(void *)(a1 + 80), *(void **)(a1 + 88), &v39);
    uint64_t v31 = v39;
    uint64_t v39 = 0LL;
    uint64_t v32 = *(void *)(a1 + 64);
    *(void *)(a1 + 64) = v31;
    if (v32)
    {
      (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
      uint64_t v33 = v39;
      uint64_t v39 = 0LL;
      if (v33) {
        (*(void (**)(uint64_t))(*(void *)v33 + 8LL))(v33);
      }
    }

    objc_msgSend( *(id *)(*(void *)(a1 + 64) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 64) + 8),  0,  0,  v39);
  }

  sub_10027EB5C((uint64_t)sub_10051A6AC, *(void *)(a1 + 80), a3, &v39);
  uint64_t v34 = v39;
  uint64_t v39 = 0LL;
  uint64_t v35 = *(void *)(a1 + 72);
  *(void *)(a1 + sub_1000A56E8(v1 + 72) = v34;
  if (v35)
  {
    (*(void (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
    uint64_t v36 = v39;
    uint64_t v39 = 0LL;
    if (v36) {
      (*(void (**)(uint64_t))(*(void *)v36 + 8LL))(v36);
    }
  }

  id v37 =  objc_msgSend( objc_msgSend(*(id *)(a1 + 88), "vendor", v39),  "proxyForService:forClient:",  @"CLEmergencyController",  @"CLWifiLocationProvider");
  void *v6 = v37;
  [v37 startMonitoringEmergencyState:CLISP_ME_TOKEN];
  *(void *)(a1 + 104) =  objc_msgSend( objc_msgSend(*(id *)(a1 + 88), "vendor"),  "proxyForService:",  @"CLWifiService");
  return a1;
}

void sub_100519600( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  uint64_t v20 = v17[9];
  v17[9] = 0LL;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8LL))(v20);
  }
  uint64_t v21 = v17[8];
  v17[8] = 0LL;
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
  }
  uint64_t v22 = v17[7];
  v17[7] = 0LL;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  uint64_t v23 = v17[6];
  _WORD v17[6] = 0LL;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
  }
  uint64_t v24 = v17[5];
  void v17[5] = 0LL;
  if (v24) {
    (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
  }
  uint64_t v25 = v17[4];
  v17[4] = 0LL;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
  }
  uint64_t v26 = v17[3];
  v17[3] = 0LL;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
  }
  uint64_t v27 = v17[2];
  _OWORD v17[2] = 0LL;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
  }
  uint64_t v28 = *v18;
  *uint64_t v18 = 0LL;
  if (v28) {
    (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
  }
  _Unwind_Resume(exception_object);
}

void sub_10051976C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EBF0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWifiLocationProvider::onWifiNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EBF0);
    }
    std::string::size_type v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWifiLocationProvider::onWifiNotification, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10043FE80(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100519934( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100519954(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EBF0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWifiLocationProvider::onClientNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EBF0);
    }
    std::string::size_type v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWifiLocationProvider::onClientNotification, event:%{public, location:escape_only} s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10044185C(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100519B1C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100519B3C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EBF0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWifiLocationProvider::onNetworkLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EBF0);
    }
    std::string::size_type v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWifiLocationProvider::onNetworkLocationNotification, event:%{public, location:esc ape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100441E98(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100519D04( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100519D24(uint64_t a1, int *a2, int32x2_t *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EBF0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWifiLocationProvider::onStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EBF0);
    }
    std::string::size_type v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWifiLocationProvider::onStatusNotification, event:%{public, location:escape_only} s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100442100(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100519EEC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100519F0C(uint64_t a1, _DWORD *a2, uint8_t *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EBF0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWifiLocationProvider::onCompanionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EBF0);
    }
    std::string::size_type v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWifiLocationProvider::onCompanionNotification, event:%{public, location:escape_on ly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100442750(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10051A0D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10051A0F4(uint64_t a1, _DWORD *a2, _DWORD *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EBF0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWifiLocationProvider::onMotionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EBF0);
    }
    std::string::size_type v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWifiLocationProvider::onMotionNotification, event:%{public, location:escape_only} s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100441474(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10051A2BC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10051A2DC(uint64_t a1, _DWORD *a2, __int128 *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EBF0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWifiLocationProvider::onLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EBF0);
    }
    std::string::size_type v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWifiLocationProvider::onLocationNotification, event:%{public, location:escape_onl y}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100442988(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10051A4A4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10051A4C4(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EBF0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWifiLocationProvider::onSignalEnvironmentNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EBF0);
    }
    std::string::size_type v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWifiLocationProvider::onSignalEnvironmentNotification, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100441688(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10051A68C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10051A6AC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EBF0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    std::string::size_type v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWifiLocationProvider::onOdometerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EBF0);
    }
    std::string::size_type v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWifiLocationProvider::onOdometerNotification, event:%{public, location:escape_onl y}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100440F08(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10051A874( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10051A894(uint64_t a1)
{
  *(void *)a1 = off_10183EAD8;

  *(void *)(a1 + 104) = 0LL;
  [*(id *)(a1 + 96) stopMonitoringEmergencyState:CLISP_ME_TOKEN];

  uint64_t v2 = *(void *)(a1 + 72);
  *(void *)(a1 + sub_1000A56E8(v1 + 72) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 56);
  *(void *)(a1 + sub_10000AE14(v25 - 56) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 48);
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0LL;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 232), 8) = 0LL;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  return a1;
}

void sub_10051A9C8(uint64_t a1)
{
  char v1 = (void *)sub_10051A894(a1);
  operator delete(v1);
}

uint64_t sub_10051A9DC(void *a1)
{
  uint64_t v2 = a1[7];
  a1[7] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = a1[6];
  a1[6] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = a1[3];
  a1[3] = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = a1[1];
  a1[1] = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = a1[5];
  a1[5] = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t result = a1[9];
  a1[9] = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

id sub_10051AA90(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a2 != 12) {
    return [*(id *)(*(void *)(a1 + 8) + 16) register:*(void *)(*(void *)(a1 + 8) + 8) forNotification:a2 registrationInfo:0];
  }
  LODWORD(v3) = 3600;
  WORD2(v3) = 0;
  *((void *)&v3 + 1) = "wlp";
  return [*(id *)(*(void *)(a1 + 8) + 16) register:*(void *)(*(void *)(a1 + 8) + 8) forNotification:12 registrationInfo:sub_10039E77C(&v3)];
}

id sub_10051AB0C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 40) + 16) register:*(void *)(*(void *)(a1 + 40) + 8) forNotification:a2 registrationInfo:0];
}

id sub_10051AB20(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 72) + 16) register:*(void *)(*(void *)(a1 + 72) + 8) forNotification:a2 registrationInfo:0];
}

id sub_10051AB34(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 16) + 16) register:*(void *)(*(void *)(a1 + 16) + 8) forNotification:a2 registrationInfo:0];
}

id sub_10051AB48(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 24) + 16) register:*(void *)(*(void *)(a1 + 24) + 8) forNotification:a2 registrationInfo:0];
}

id sub_10051AB5C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 8) + 16) unregister:*(void *)(*(void *)(a1 + 8) + 8) forNotification:a2];
}

id sub_10051AB6C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 40) + 16) unregister:*(void *)(*(void *)(a1 + 40) + 8) forNotification:a2];
}

id sub_10051AB7C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 72) + 16) unregister:*(void *)(*(void *)(a1 + 72) + 8) forNotification:a2];
}

id sub_10051AB8C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 16) + 16) unregister:*(void *)(*(void *)(a1 + 16) + 8) forNotification:a2];
}

id sub_10051AB9C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 24) + 16) unregister:*(void *)(*(void *)(a1 + 24) + 8) forNotification:a2];
}

BOOL sub_10051ABAC(uint64_t a1)
{
  return objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 88), "vendor"),  "proxyForService:",  @"CLDataProtectionManager"),  "syncgetDataAvailability") == 0;
}

id sub_10051ABDC(uint64_t a1)
{
  return _[*(id *)(a1 + 104) syncgetIsAssociated];
}

void sub_10051ABE4(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((a2 & 1) != 0)
  {
    *(void *)std::string buf = qword_1019A1910;
    if (byte_1019A1918[23] < 0)
    {
      sub_1010DD48C(&__p, *(void **)byte_1019A1918, *(unint64_t *)&byte_1019A1918[8]);
    }

    else
    {
      __int128 __p = *(_OWORD *)byte_1019A1918;
      uint64_t v12 = *(void *)&byte_1019A1918[16];
    }

    __int128 v13 = xmmword_1019A1930;
    __int128 v14 = xmmword_1019A1940;
    __int128 v15 = xmmword_1019A1950;
    uint64_t v16 = qword_1019A1960;
    if ([*(id *)(a1 + 104) syncgetAssociatedNetwork:buf])
    {
      *(void *)a3 = *(void *)buf;
      uint64_t v6 = (_BYTE *)(a3 + 8);
      if (SHIBYTE(v12) < 0)
      {
        sub_1010DD48C(v6, (void *)__p, *((unint64_t *)&__p + 1));
      }

      else
      {
        *(_OWORD *)uint64_t v6 = __p;
        *(void *)(a3 + 24) = v12;
      }

      __int128 v7 = v14;
      *(_OWORD *)(a3 + 32) = v13;
      *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = v7;
      *(_OWORD *)(a3 + 64) = v15;
      *(void *)(a3 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v16;
      *(_BYTE *)(a3 + 8_Block_object_dispose((const void *)(v1 - 232), 8) = 1;
    }

    else
    {
      sub_1000C6980((_BYTE *)a3, (uint64_t)&byte_1019A18B0);
    }

    if (SHIBYTE(v12) < 0) {
      operator delete((void *)__p);
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183EC10);
    }
    uint64_t v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "WIFI_LOC: failed to get power state", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183EC10);
      }
      v9[0] = 0;
      uint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "WIFI_LOC: failed to get power state",  v9,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual CLWifiService_Type::AssociationState CLWifiLocationProviderExternal::getAssociatedState(BOOL) const",  "%s\n",  v8);
    }

    sub_1000C6980((_BYTE *)a3, (uint64_t)&byte_1019A18B0);
  }

void sub_10051AE74( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_10051AE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  unsigned int v7 = a2;
  id v8 = [*(id *)(a1 + 104) syncgetStartScanWithType:a2 lowPriority:a3 lowLatency:a4 passive:1 requester:"wlp" channels:a6];
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10183EC30);
  }
  uint64_t v9 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = sub_10099EBD8(v7);
    char v11 = a5;
    *(_DWORD *)std::string buf = 136446722;
    uint64_t v23 = v10;
    __int16 v24 = 2082;
    uint64_t v25 = v11;
    __int16 v26 = 1026;
    int v27 = (int)v8;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "@WifiFlow, scanreq, %{public}s, %{public}s, result, %{public}d",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183EC30);
    }
    uint64_t v13 = qword_101934868;
    __int128 v14 = sub_10099EBD8(v7);
    int v16 = 136446722;
    uint64_t v17 = v14;
    __int16 v18 = 2082;
    uint64_t v19 = a5;
    __int16 v20 = 1026;
    int v21 = (int)v8;
    __int128 v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v13,  0LL,  "@WifiFlow, scanreq, %{public}s, %{public}s, result, %{public}d",  &v16,  28);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLWifiLocationProviderExternal::startWifiScan(CLWifiService_Type::ScanType, BOOL, BOOL, std::string, const std::optional<CLWifiService_Type::Channels> &) const",  "%s\n",  v15);
  }

  return v8;
}

id sub_10051B0E4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 88), "vendor"),  "proxyForService:",  @"CLNetworkLocationProvider"),  "resetRetryCounters:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a2));
}

id sub_10051B130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return _objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 88), "vendor"),  "proxyForService:",  @"CLNetworkLocationProvider"),  "syncgetQueryLocationsForWifis:useCache:piggyback:config:",  a2,  a3,  a4,  a5);
}

uint64_t sub_10051B184(uint64_t a1, uint64_t a2)
{
  return 1LL;
}

id sub_10051B1A4(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 104) syncgetSetAutoJoin:a2];
}

BOOL sub_10051B1B4()
{
  return sub_1002958AC() == 1;
}

uint64_t sub_10051B1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 80) + 144LL))( *(void *)(a1 + 80),  a2,  a3,  0xFFFFFFFFLL);
}

uint64_t sub_10051B1E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 80) + 152LL))(*(void *)(a1 + 80));
}

__n128 sub_10051B1F4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = &v9;
  uint64_t v11 = 0xB812000000LL;
  uint64_t v12 = sub_10051B2E4;
  uint64_t v13 = nullsub_253;
  __int128 v14 = &unk_10175E27B;
  CLMotionActivity::init(&v15);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_10051B31C;
  v8[3] = &unk_101838B40;
  _DWORD v8[4] = &v9;
  sub_10036B47C((uint64_t)v8);
  uint64_t v2 = v10;
  __int128 v3 = *((_OWORD *)v10 + 10);
  *(_OWORD *)(a1 + 96) = *((_OWORD *)v10 + 9);
  *(_OWORD *)(a1 + 112) = v3;
  *(void *)(a1 + 12_Block_object_dispose((const void *)(v1 - 232), 8) = v2[22];
  __int128 v4 = *((_OWORD *)v2 + 6);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v2 + 5);
  *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 232), 8) = v4;
  __int128 v5 = *((_OWORD *)v2 + 8);
  *(_OWORD *)(a1 + 64) = *((_OWORD *)v2 + 7);
  *(_OWORD *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v5;
  __int128 v6 = *((_OWORD *)v2 + 4);
  *(_OWORD *)a1 = *((_OWORD *)v2 + 3);
  *(_OWORD *)(a1 + 16) = v6;
  _Block_object_dispose(&v9, 8);
  return result;
}

void sub_10051B2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

__n128 sub_10051B2E4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 4_Block_object_dispose(va, 8) = *(_OWORD *)(a2 + 48);
  __int128 v2 = *(_OWORD *)(a2 + 64);
  __int128 v3 = *(_OWORD *)(a2 + 80);
  __int128 v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  *(_OWORD *)(a1 + 64) = v2;
  *(_OWORD *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v3;
  __n128 result = *(__n128 *)(a2 + 128);
  __int128 v6 = *(_OWORD *)(a2 + 144);
  __int128 v7 = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v7;
  *(__n128 *)(a1 + 12_Block_object_dispose(va, 8) = result;
  return result;
}

uint64_t sub_10051B31C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 208LL))( a2,  *(void *)(*(void *)(a1 + 32) + 8LL) + 48LL);
}

id sub_10051B33C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 88), "vendor"), "proxyForService:", @"CLWifiTilesManager");
  __int128 v8 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v8;
  uint64_t v11 = *(void *)(a2 + 32);
  return [v7 requestTileDownloadForLat:v10 lon:a3 details:a4];
}

uint64_t sub_10051B3A4()
{
  return sub_1001B9A1C();
}

unint64_t sub_10051B3B8()
{
  return ((unint64_t)sub_1004F97F4() >> 22) & 1;
}

uint64_t sub_10051B3D0()
{
  return (sub_1004F64FC() >> 19) & 1;
}

void sub_10051B3EC(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_10051B418(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_10051B444(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void *sub_10051B470@<X0>(uint64_t *a1@<X1>, void **a2@<X2>, void *a3@<X8>)
{
  __int128 v6 = operator new(0x88uLL);
  __n128 result = sub_10051B4D0(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_10051B4BC(_Unwind_Exception *a1)
{
}

void *sub_10051B4D0(void *a1, uint64_t *a2, void **a3)
{
  a1[2] = 0LL;
  *a1 = off_10183EC60;
  a1[1] = 0LL;
  sub_1005190E4((uint64_t)(a1 + 3), *a2, *a3);
  return a1;
}

void sub_10051B510(_Unwind_Exception *a1)
{
}

void sub_10051B524(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10183EC60;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10051B538(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10183EC60;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_10051B55C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_10051B56C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_1012F0098;
      unsigned __int8 v1[3] = unk_1012F00A8;
      v1[4] = xmmword_1012F00B8;
      v1[0] = xmmword_1012F0078;
      v1[1] = unk_1012F0088;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_10051B640(_Unwind_Exception *a1)
{
}

void sub_10051B658()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_10051B6BC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_10051B730(_Unwind_Exception *a1)
{
}

void sub_10051B748()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      char v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)char v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_10051B7E4(_Unwind_Exception *a1)
{
}

void sub_10051B7FC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      char v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      _WORD *v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_10051B888(_Unwind_Exception *a1)
{
}

uint64_t sub_10051B8A0()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &stru_101996928, (void *)&_mh_execute_header);
}

LABEL_117:
  *(float *)&__int128 v6 = self->_firstCatherineStartTime;
  objc_msgSend( v3,  "setObject:forKey:",  +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v6),  @"firstCatherineStartTime");
  has = self->_has;
  if ((*(_BYTE *)&has & 8) == 0)
  {
LABEL_95:
    if ((*(_DWORD *)&has & 0x100000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_119;
  }

  closedir(v9);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  int v58 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    else {
      uint64_t v59 = *(void *)(a2 + 8);
    }
    uint64_t v60 = sub_100019240(a2 + 184);
    uint64_t v61 = sub_100603208(a2 + 184);
    LODWORD(buf.__r_.__value_.__l.__data_) = 136446722;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v59;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v60;
    HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
    __int16 v99 = *(double *)&v61;
    _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_INFO,  "TileCoarse, indexTiles, done, %{public}s, size, %{public}lu, unprotected, %{public}lu",  (uint8_t *)&buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v62 = qword_101934858;
    uint64_t v65 = *(void *)(a2 + 8);
    int v64 = a2 + 8;
    uint64_t v63 = v65;
    uint64_t v66 = *(char *)(v64 + 23) >= 0 ? v64 : v63;
    double v67 = v64 + 176;
    int v68 = sub_100019240(v64 + 176);
    int v69 = sub_100603208(v67);
    v97.st_dev = 136446722;
    *(void *)&v97.st_mode = v66;
    WORD2(v97.st_ino) = 2050;
    *(__darwin_ino64_t *)((char *)&v97.st_ino + 6) = v68;
    HIWORD(v97.st_gid) = 2050;
    *(void *)&v97.st_rdev = v69;
    LODWORD(v79) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v62,  1LL,  "TileCoarse, indexTiles, done, %{public}s, size, %{public}lu, unprotected, %{public}lu",  &v97,  v79);
    int v71 = (std::string *)v70;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v70);
    if (v71 != &buf) {
      goto LABEL_149;
    }
  }

  return v9 != 0LL;
}

      fclose(v5);
      operator delete[](v22);
      goto LABEL_57;
    }

    uint64_t v23 = operator new(0x60uLL);
    sub_10097E5C0();
    *(void *)(*v16 + 8 * v17) = v23;
    if ((sub_10097E5C4( *(void *)(*v16 + 8 * v17),  (char *)__ptr,  -1,  v53,  (uint64_t)v22,  v21,  1u,  __nitems[1],  *(float *)&__nitems[3]) & 1) == 0)
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862AE0);
      }
      std::string v42 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 67240192;
        int v58 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "#Warning Could not initialize prototype instance %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862AE0);
        }
        uint64_t v49 = 67240192;
        int v50 = v17;
        LODWORD(v46) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Could not initialize prototype instance %{public}d",  &v49,  v46);
        BOOL v41 = (uint8_t *)v45;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v45);
        goto LABEL_131;
      }

      goto LABEL_117;
    }

    if (v15 == ++v17) {
      goto LABEL_103;
    }
  }

  if (qword_101934530 != -1) {
    dispatch_once(&qword_101934530, &stru_101862AE0);
  }
  uint64_t v36 = (os_log_s *)qword_101934538;
  if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "#Warning Error reading max distance", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862AE0);
    }
    LOWORD(v49) = 0;
    LODWORD(v46) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Error reading max distance",  &v49,  v46);
    __int16 v29 = (uint8_t *)v37;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v37);
    goto LABEL_126;
  }

  if (!*a3)
  {
    sub_100AAC57C(a1, (uint64_t *)&v276);
    goto LABEL_120;
  }

  double v109 = v284;
  *(_OWORD *)(a1 + 104sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v283;
  *(_OWORD *)(a1 + 10sub_10000AE14(v25 - 56) = v109;
  *(_OWORD *)(a1 + 10sub_1000A56E8(v1 + 72) = *(_OWORD *)v285;
  *(_OWORD *)(a1 + 1084) = *(_OWORD *)&v285[12];
  __int16 v110 = v280;
  *int v107 = v279;
  *(_OWORD *)(a1 + 992) = v110;
  double v111 = v282;
  *(_OWORD *)(a1 + 100_Block_object_dispose(va, 8) = v281;
  *(_OWORD *)(a1 + 1024) = v111;
LABEL_119:
  sub_10069DEF4(a1 + 2272, *(_DWORD *)(a1 + 1104));
LABEL_120:
  __int16 v112 = (std::__shared_weak_count *)v277;
  if (v277)
  {
    double v113 = (unint64_t *)(v277 + 8);
    do
      uint64_t v114 = __ldaxr(v113);
    while (__stlxr(v114 - 1, v113));
    if (!v114)
    {
      ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
      std::__shared_weak_count::__release_weak(v112);
    }
  }

  return v18;
}

                        void *v7 = 1;
                        sub_1002F0B04(__p);
                        char v84 = sub_1002A6F64((uint64_t)__p[0], "EnableCyclingMapMatching", (BOOL *)&v189);
                        __int128 v85 = v84;
                        uint64_t v86 = (std::__shared_weak_count *)__p[1];
                        if (!__p[1]) {
                          goto LABEL_121;
                        }
                        uint64_t v87 = (unint64_t *)((char *)__p[1] + 8);
                        do
                          uint64_t v88 = __ldaxr(v87);
                        while (__stlxr(v88 - 1, v87));
                        if (!v88)
                        {
                          ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
                          std::__shared_weak_count::__release_weak(v86);
                          if (!v85)
                          {
LABEL_123:
                            if (qword_1019348B0 != -1) {
                              dispatch_once(&qword_1019348B0, &stru_101881F60);
                            }
                            uint64_t v89 = (os_log_s *)qword_1019348B8;
                            if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
                            {
                              double v90 = *v7;
                              LODWORD(__p[0]) = 67240192;
                              HIDWORD(__p[0]) = v90;
                              _os_log_impl( (void *)&_mh_execute_header,  v89,  OS_LOG_TYPE_DEBUG,  "CLMM,EnableCyclingMapMatching,%{public}d",  (uint8_t *)__p,  8u);
                            }

                            if (sub_1002921D0(115, 2))
                            {
                              bzero(__p, 0x65CuLL);
                              if (qword_1019348B0 != -1) {
                                dispatch_once(&qword_1019348B0, &stru_101881F60);
                              }
                              __int128 v156 = *v7;
                              LODWORD(v196[0]) = 67240192;
                              HIDWORD(v196[0]) = v156;
                              LODWORD(v185) = 8;
                              _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,EnableCyclingMapMatching,%{public}d",  v196,  v185);
                              __int128 v158 = (void **)v157;
                              sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMapMatchingEngine::CLMapMatchingEngine(id<CLIntersiloUniverse>, const std::string &)",  "%s\n",  v157);
                              if (v158 != __p) {
                                free(v158);
                              }
                            }

                            if (!*v7) {
                              goto LABEL_172;
                            }
                            LOBYTE(v194) = 1;
                            sub_100D82E74((char *)&v194, __p);
                            sub_10005F550((uint64_t)v186, (__int128 *)__p);
                            uint64_t v91 = (std::__shared_weak_count *)__p[1];
                            if (__p[1])
                            {
                              double v92 = (unint64_t *)((char *)__p[1] + 8);
                              do
                                __int16 v93 = __ldaxr(v92);
                              while (__stlxr(v93 - 1, v92));
                              if (!v93)
                              {
                                ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
                                std::__shared_weak_count::__release_weak(v91);
                              }
                            }

                            double v94 = *v186;
                            if (*v186)
                            {
                              __int16 v95 = operator new(0x8E8uLL);
                              int v96 = v95;
                              __int16 v97 = *(unint64_t **)(a1 + 624);
                              __p[0] = v94;
                              __p[1] = v97;
                              if (v97)
                              {
                                double v98 = v97 + 1;
                                do
                                  __int16 v99 = __ldxr(v98);
                                while (__stxr(v99 + 1, v98));
                              }

                              sub_100D82F78(v95, (uint64_t *)__p);
                              v196[0] = v96;
                              double v100 = (std::__shared_weak_count *)__p[1];
                              if (__p[1])
                              {
                                __int16 v101 = (unint64_t *)((char *)__p[1] + 8);
                                do
                                  double v102 = __ldaxr(v101);
                                while (__stlxr(v102 - 1, v101));
                                if (!v102)
                                {
                                  ((void (*)(std::__shared_weak_count *))v100->__on_zero_shared)(v100);
                                  std::__shared_weak_count::__release_weak(v100);
                                }
                              }

                              __int16 v103 = v196[0];
                              v196[0] = 0LL;
                              double v104 = *(void *)(a1 + 632);
                              *(void *)(a1 + 632) = v103;
                              if (v104)
                              {
                                (*(void (**)(uint64_t))(*(void *)v104 + 8LL))(v104);
                                __int16 v105 = v196[0];
                                v196[0] = 0LL;
                                if (v105) {
                                  sub_100D831F8((uint64_t)v196, (uint64_t)v105);
                                }
                                __int16 v103 = *(_BYTE **)(a1 + 632);
                              }

                              if (v103)
                              {
                                v103[9] = 1;
                                v103[10] = sub_1004F8468();
                                if (qword_1019348B0 == -1) {
                                  goto LABEL_149;
                                }
                                goto LABEL_289;
                              }

                              sub_10126DF68(__p);
                            }

                            else
                            {
                              sub_10126E0AC(__p);
                            }

                            goto LABEL_287;
                          }
                        }

                        else
                        {
LABEL_121:
                          if (!v84) {
                            goto LABEL_123;
                          }
                        }

                        void *v7 = v189;
                        goto LABEL_123;
                      }

                      sub_10126E1F0(__p);
                    }

                    else
                    {
                      sub_10126E334(__p);
                    }

  closedir(v9);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101883640);
  }
  int v58 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    else {
      uint64_t v59 = *(void *)(a2 + 8);
    }
    uint64_t v60 = sub_100019240(a2 + 184);
    uint64_t v61 = sub_100603208(a2 + 184);
    LODWORD(buf.__r_.__value_.__l.__data_) = 136446722;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v59;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v60;
    HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
    __int16 v99 = *(double *)&v61;
    _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_INFO,  "TileCell, indexTiles, done, %{public}s, size, %{public}lu, unprotected, %{public}lu",  (uint8_t *)&buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101883640);
    }
    int v62 = qword_101934858;
    uint64_t v65 = *(void *)(a2 + 8);
    int v64 = a2 + 8;
    uint64_t v63 = v65;
    uint64_t v66 = *(char *)(v64 + 23) >= 0 ? v64 : v63;
    double v67 = v64 + 176;
    int v68 = sub_100019240(v64 + 176);
    int v69 = sub_100603208(v67);
    v97.st_dev = 136446722;
    *(void *)&v97.st_mode = v66;
    WORD2(v97.st_ino) = 2050;
    *(__darwin_ino64_t *)((char *)&v97.st_ino + 6) = v68;
    HIWORD(v97.st_gid) = 2050;
    *(void *)&v97.st_rdev = v69;
    LODWORD(v79) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v62,  1LL,  "TileCell, indexTiles, done, %{public}s, size, %{public}lu, unprotected, %{public}lu",  &v97,  v79);
    int v71 = (std::string *)v70;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v70);
    if (v71 != &buf) {
      goto LABEL_149;
    }
  }

  return v9 != 0LL;
}

    if (v20 != buf) {
      free(v20);
    }
    return 0LL;
  }

  return v3;
}

  __n128 result = *(float *)(a2 + 204);
  v5 |= 0x10000000000uLL;
  uint64_t *v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 204) = result;
  id v7 = *v3;
  if ((*v3 & 0x100000000LL) == 0)
  {
LABEL_52:
    if ((v7 & 0x200000000000LL) == 0) {
      goto LABEL_53;
    }
    goto LABEL_119;
  }

  PB::TextFormatter::format(this, "lgArclengthXYOverEpoch", *(float *)(a1 + 236));
  __int128 v6 = *v5;
  id v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x2000000000000LL) == 0)
  {
LABEL_51:
    if ((v6 & 0x4000000000000LL) == 0) {
      goto LABEL_52;
    }
    goto LABEL_119;
  }

  __n128 result = PB::Writer::write(this, *(float *)(v3 + 204), 0x2Fu);
  __int128 v6 = *v4;
  if ((*v4 & 0x100000000LL) == 0)
  {
LABEL_52:
    if ((v6 & 0x200000000000LL) == 0) {
      goto LABEL_53;
    }
    goto LABEL_119;
  }

  __n128 result = *(float *)(a2 + 44);
  v5 |= 0x100uLL;
  uint64_t *v2 = v5;
  *(_WORD *)(a1 + 28_Block_object_dispose(va, 8) = v6;
  *(float *)(a1 + 44) = result;
  __int128 v4 = *v3;
  id v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 4) == 0)
  {
LABEL_44:
    if ((v4 & 0x20) == 0) {
      goto LABEL_45;
    }
    goto LABEL_119;
  }

  PB::TextFormatter::format(this, "isAudio", *(_BYTE *)(a1 + 269));
  __int128 v6 = *v5;
  id v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 4) == 0)
  {
LABEL_43:
    if ((v7 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_119;
  }

  __n128 result = PB::Writer::write(this, *(float *)(v3 + 32), 0x26u);
  __int128 v5 = *v4;
  __int128 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10) == 0)
  {
LABEL_43:
    if ((v5 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_119;
  }

  __n128 result = *(float *)(a2 + 136);
  v5 |= 0x80000000uLL;
  uint64_t *v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 136) = result;
  LOWORD(v_Block_object_dispose(va, 8) = *(_WORD *)(a2 + 324);
  __int128 v4 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_37:
    if ((v4 & 0x2000000000000000LL) == 0) {
      goto LABEL_38;
    }
    goto LABEL_119;
  }

  PB::TextFormatter::format(this, "kMaxAudioChaosRO", *(float *)(a1 + 108));
  id v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  __int128 v6 = *v5;
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_119;
  }

  __n128 result = PB::Writer::write(this, *(float *)(v3 + 136), 0xCFu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  __int128 v5 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_37:
    if ((v5 & 0x2000000000000000LL) == 0) {
      goto LABEL_38;
    }
    goto LABEL_119;
  }

  __n128 result = *(float *)(a2 + 224);
  v5 |= 0x400000000000uLL;
  uint64_t *v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 224) = result;
  __int128 v4 = *v3;
  id v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x200000000000LL) == 0)
  {
LABEL_12:
    if ((v4 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_119;
  }

  PB::TextFormatter::format(this, "escalationCandidateSuppressed", *(_BYTE *)(a1 + 318));
  id v7 = *v5;
  __int128 v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x20000) == 0)
  {
LABEL_16:
    if ((v7 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_119;
  }

  __n128 result = PB::Writer::write(this, *(float *)(v3 + 224), 7u);
  __int128 v5 = *v4;
  __int128 v6 = v4[1];
  if ((*v4 & 0x200000000000LL) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_119;
  }

  __int128 v45 = *(_BYTE *)(a2 + 162);
  v3 |= 0x8000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_BYTE *)(result + 162) = v45;
  __int128 v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000000000LL) == 0)
  {
LABEL_39:
    if ((v5 & 0x800) == 0) {
      goto LABEL_40;
    }
    goto LABEL_119;
  }

  PB::TextFormatter::format(this, "kEnergyMetRO2", *(_BYTE *)(a1 + 187));
  __int128 v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  __int128 v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20) == 0)
  {
LABEL_38:
    if ((v5 & 0x40) == 0) {
      goto LABEL_39;
    }
    goto LABEL_119;
  }

  __n128 result = PB::Writer::write(this, *(float *)(v3 + 48), 0x3F7u);
  __int128 v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  __int128 v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000) == 0)
  {
LABEL_39:
    if ((v4 & 0x4000000000000000LL) == 0) {
      goto LABEL_40;
    }
    goto LABEL_119;
  }

          *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v64;
          goto LABEL_129;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v15 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_129;
      }
    }

    uint64_t v19 = 0;
    __int16 v20 = 0;
    CLMotionActivity v15 = 0LL;
    if (v4 > v5) {
      __int128 v5 = v4;
    }
    while (v5 != v4)
    {
      int v21 = v4 + 1;
      uint64_t v22 = *(_BYTE *)(v12 + v4);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      __int128 v4 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        CLMotionActivity v15 = 0LL;
        goto LABEL_21;
      }
    }

    __int128 v6 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v6 == 0;
}

uint64_t sub_10051D368(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    __int128 v4 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    __int128 v5 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    __int128 v6 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    id v7 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    __int128 v8 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    uint64_t v9 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    uint64_t v10 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    uint64_t v11 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    uint64_t v12 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    uint64_t v13 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    __int128 v14 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    CLMotionActivity v15 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
    do
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        break;
      }
      char v16 = 0;
      unsigned int v17 = 0;
      unint64_t v18 = 0LL;
      while (1)
      {
        uint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v21 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20;
        v18 |= (unint64_t)(v21 & 0x7F) << v16;
        if ((v21 & 0x80) == 0) {
          goto LABEL_12;
        }
        v16 += 7;
        BOOL v22 = v17++ >= 9;
        if (v22)
        {
          unint64_t v18 = 0LL;
          int v23 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_14;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
      int v23 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v18 = 0LL;
      }
LABEL_14:
      if (v23 || (v18 & 7) == 4) {
        break;
      }
      switch((v18 >> 3))
      {
        case 1u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0LL;
          while (1)
          {
            uint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v29 = v28 + 1;
            if (v28 == -1 || v29 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v30 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if ((v30 & 0x80) == 0) {
              goto LABEL_135;
            }
            v25 += 7;
            BOOL v22 = v26++ >= 9;
            if (v22)
            {
              LODWORD(v27) = 0;
              goto LABEL_137;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_135:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v27) = 0;
          }
LABEL_137:
          uint64_t v102 = *((int *)v4 + 991);
          goto LABEL_178;
        case 2u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v27 = 0LL;
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x100u;
          while (2)
          {
            uint64_t v40 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v42 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v40);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v41;
              v27 |= (unint64_t)(v42 & 0x7F) << v38;
              if (v42 < 0)
              {
                v38 += 7;
                BOOL v22 = v39++ >= 9;
                if (v22)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_141;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v27) = 0;
          }
LABEL_141:
          uint64_t v102 = *((int *)v6 + 969);
          goto LABEL_178;
        case 3u:
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v27 = 0LL;
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x10000u;
          while (2)
          {
            uint64_t v45 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v47 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v45);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v46;
              v27 |= (unint64_t)(v47 & 0x7F) << v43;
              if (v47 < 0)
              {
                v43 += 7;
                BOOL v22 = v44++ >= 9;
                if (v22)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_145;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v27) = 0;
          }
LABEL_145:
          uint64_t v102 = *((int *)v7 + 970);
          goto LABEL_178;
        case 4u:
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v27 = 0LL;
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x2000u;
          while (2)
          {
            uint64_t v50 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v52 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v50);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v51;
              v27 |= (unint64_t)(v52 & 0x7F) << v48;
              if (v52 < 0)
              {
                v48 += 7;
                BOOL v22 = v49++ >= 9;
                if (v22)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_149;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v27) = 0;
          }
LABEL_149:
          uint64_t v102 = *((int *)v8 + 971);
          goto LABEL_178;
        case 5u:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v27 = 0LL;
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x800u;
          while (2)
          {
            uint64_t v55 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v57 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v55);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v56;
              v27 |= (unint64_t)(v57 & 0x7F) << v53;
              if (v57 < 0)
              {
                v53 += 7;
                BOOL v22 = v54++ >= 9;
                if (v22)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_153;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v27) = 0;
          }
LABEL_153:
          uint64_t v102 = *((int *)v9 + 972);
          goto LABEL_178;
        case 6u:
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v27 = 0LL;
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x8000u;
          while (2)
          {
            uint64_t v60 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v62 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v60);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v61;
              v27 |= (unint64_t)(v62 & 0x7F) << v58;
              if (v62 < 0)
              {
                v58 += 7;
                BOOL v22 = v59++ >= 9;
                if (v22)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_157;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v27) = 0;
          }
LABEL_157:
          uint64_t v102 = *((int *)v10 + 973);
          goto LABEL_178;
        case 7u:
          char v63 = 0;
          unsigned int v64 = 0;
          uint64_t v27 = 0LL;
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x400u;
          while (2)
          {
            uint64_t v65 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v67 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v65);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v66;
              v27 |= (unint64_t)(v67 & 0x7F) << v63;
              if (v67 < 0)
              {
                v63 += 7;
                BOOL v22 = v64++ >= 9;
                if (v22)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_161;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v27) = 0;
          }
LABEL_161:
          uint64_t v102 = *((int *)v11 + 974);
          goto LABEL_178;
        case 8u:
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v27 = 0LL;
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x1000u;
          while (2)
          {
            uint64_t v70 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v72 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v70);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v71;
              v27 |= (unint64_t)(v72 & 0x7F) << v68;
              if (v72 < 0)
              {
                v68 += 7;
                BOOL v22 = v69++ >= 9;
                if (v22)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_165;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v27) = 0;
          }
LABEL_165:
          uint64_t v102 = *((int *)v12 + 975);
          goto LABEL_178;
        case 9u:
          char v73 = 0;
          unsigned int v74 = 0;
          uint64_t v27 = 0LL;
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x4000u;
          while (2)
          {
            uint64_t v75 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v77 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v75);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v76;
              v27 |= (unint64_t)(v77 & 0x7F) << v73;
              if (v77 < 0)
              {
                v73 += 7;
                BOOL v22 = v74++ >= 9;
                if (v22)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_169;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v27) = 0;
          }
LABEL_169:
          uint64_t v102 = *((int *)v13 + 976);
          goto LABEL_178;
        case 0xAu:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x80u;
          unint64_t v78 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v78 <= 0xFFFFFFFFFFFFFFFBLL && v78 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v78);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v78 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = *((int *)v14 + 977);
          goto LABEL_203;
        case 0xBu:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x10u;
          unint64_t v80 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v80 <= 0xFFFFFFFFFFFFFFFBLL && v80 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v80);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v80 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = *((int *)v15 + 978);
          goto LABEL_203;
        case 0xCu:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x20u;
          unint64_t v81 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v81 <= 0xFFFFFFFFFFFFFFFBLL && v81 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v81);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v81 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = 36LL;
          goto LABEL_203;
        case 0xDu:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x40u;
          unint64_t v82 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v82 <= 0xFFFFFFFFFFFFFFFBLL && v82 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v82);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v82 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = 40LL;
          goto LABEL_203;
        case 0xEu:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 2u;
          unint64_t v83 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v83 <= 0xFFFFFFFFFFFFFFFBLL && v83 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v83);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v83 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = 20LL;
          goto LABEL_203;
        case 0xFu:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 4u;
          unint64_t v84 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v84 <= 0xFFFFFFFFFFFFFFFBLL && v84 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v84);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v84 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = 24LL;
          goto LABEL_203;
        case 0x10u:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 8u;
          unint64_t v85 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v85 <= 0xFFFFFFFFFFFFFFFBLL && v85 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v85);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v85 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = 28LL;
          goto LABEL_203;
        case 0x11u:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x100000u;
          unint64_t v86 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v86 <= 0xFFFFFFFFFFFFFFFBLL && v86 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v86);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v86 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = 96LL;
          goto LABEL_203;
        case 0x12u:
          char v87 = 0;
          unsigned int v88 = 0;
          uint64_t v27 = 0LL;
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x200u;
          while (2)
          {
            uint64_t v89 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v91 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v89);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v90;
              v27 |= (unint64_t)(v91 & 0x7F) << v87;
              if (v91 < 0)
              {
                v87 += 7;
                BOOL v22 = v88++ >= 9;
                if (v22)
                {
                  LODWORD(v27) = 0;
                  goto LABEL_173;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v27) = 0;
          }
LABEL_173:
          uint64_t v102 = 52LL;
          goto LABEL_178;
        case 0x13u:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 1u;
          unint64_t v92 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v92 <= 0xFFFFFFFFFFFFFFF7LL && v92 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v93 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v92);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v92 + 8;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v93 = 0LL;
          }

          *(void *)(a1 + _Block_object_dispose(va, 8) = v93;
          continue;
        case 0x14u:
          char v94 = 0;
          unsigned int v95 = 0;
          uint64_t v27 = 0LL;
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x40000u;
          break;
        case 0x15u:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x20000u;
          unint64_t v99 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v99 <= 0xFFFFFFFFFFFFFFFBLL && v99 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v99);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v99 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = 84LL;
          goto LABEL_203;
        case 0x16u:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x200000u;
          unint64_t v100 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v100 <= 0xFFFFFFFFFFFFFFFBLL && v100 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v100);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v100 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = 100LL;
          goto LABEL_203;
        case 0x17u:
          *(_DWORD *)(a1 + *((int *)v5 + 968)) |= 0x80000u;
          unint64_t v101 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v101 <= 0xFFFFFFFFFFFFFFFBLL && v101 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v79 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v101);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v101 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v79 = 0;
          }

          uint64_t v103 = 92LL;
LABEL_203:
          *(_DWORD *)(a1 + v103) = v79;
          continue;
        default:
          uint64_t v31 = v4;
          uint64_t v32 = v6;
          uint64_t v33 = v5;
          uint64_t v34 = v7;
          uint64_t v35 = v8;
          uint64_t v36 = a1;
          uint64_t result = PBReaderSkipValueWithTag(a2);
          CLMotionActivity v15 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
          a1 = v36;
          uint64_t v9 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
          __int128 v8 = v35;
          uint64_t v10 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
          id v7 = v34;
          uint64_t v11 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
          __int128 v5 = v33;
          __int128 v14 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
          __int128 v6 = v32;
          uint64_t v13 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
          __int128 v4 = v31;
          uint64_t v12 = &selRef_resetClientForBundleId_orBundlePath_withReplyBlock_;
          if (!(_DWORD)result) {
            return result;
          }
          continue;
      }

      while (1)
      {
        uint64_t v96 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v97 = v96 + 1;
        if (v96 == -1 || v97 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v98 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v96);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v97;
        v27 |= (unint64_t)(v98 & 0x7F) << v94;
        if ((v98 & 0x80) == 0) {
          goto LABEL_175;
        }
        v94 += 7;
        BOOL v22 = v95++ >= 9;
        if (v22)
        {
          LODWORD(v27) = 0;
          goto LABEL_177;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_175:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v27) = 0;
      }
LABEL_177:
      uint64_t v102 = 88LL;
LABEL_178:
      *(_DWORD *)(a1 + v102) = v27;
    }

    while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length));
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10051FBB4(uint64_t a1, void *a2)
{
  __int128 v3 = sub_100E91A38(a1, a2);
  void *v3 = off_10183ECD8;
  *((_OWORD *)v3 + 7) = 0u;
  v3[21] = 0LL;
  v3[20] = v3 + 21;
  v3[22] = 0LL;
  *((_OWORD *)v3 + _Block_object_dispose(va, 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_DWORD *)v3 + 46) = -1;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_WORD *)v3 + 144) = 0;
  *((_WORD *)v3 + 14_Block_object_dispose(va, 8) = 0;
  *((_BYTE *)v3 + 29_Block_object_dispose(va, 8) = 0;
  v3[38] = v3 + 39;
  v3[39] = 0LL;
  v3[40] = 0LL;
  v3[41] = 0LL;
  v3[43] = off_10182F180;
  __int128 v4 = operator new(0x20uLL);
  v4[1] = 0LL;
  void v4[2] = 0LL;
  *__int128 v4 = off_10182F1B8;
  *((_DWORD *)v4 + 6) = 31337;
  *(void *)(a1 + 344) = off_10183EE40;
  *(void *)(a1 + 352) = v4 + 3;
  *(void *)(a1 + 36sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v4;
  *(void *)(a1 + 36_Block_object_dispose(va, 8) = 0LL;
  sub_100ACD980((uint64_t)sub_100520328, a1, *(void **)(a1 + 32), buf);
  uint64_t v5 = *(void *)buf;
  *(void *)std::string buf = 0LL;
  uint64_t v6 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = v5;
  if (v6)
  {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    uint64_t v7 = *(void *)buf;
    *(void *)std::string buf = 0LL;
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
  }

  [*(id *)(*(void *)(a1 + 136) + 16) register:*(void *)(*(void *)(a1 + 136) + 8) forNotification:0 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 136) + 16) register:*(void *)(*(void *)(a1 + 136) + 8) forNotification:1 registrationInfo:0];
  id v8 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLClientManager");
  *(void *)(a1 + 336) = v8;
  objc_msgSend(v8, "registerDelegate:inSilo:", sub_100520500(a1 + 344), objc_msgSend(*(id *)(a1 + 32), "silo"));
  sub_100583844((uint64_t)sub_100520544, a1, *(void **)(a1 + 32), buf);
  uint64_t v9 = *(void *)buf;
  *(void *)std::string buf = 0LL;
  uint64_t v10 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = v9;
  if (v10)
  {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    uint64_t v11 = *(void *)buf;
    *(void *)std::string buf = 0LL;
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    }
  }

  [*(id *)(*(void *)(a1 + 144) + 16) register:*(void *)(*(void *)(a1 + 144) + 8) forNotification:4 registrationInfo:0];
  sub_100D96A2C((uint64_t)sub_10052071C, a1, *(void **)(a1 + 32), buf);
  uint64_t v12 = *(void *)buf;
  *(void *)std::string buf = 0LL;
  uint64_t v13 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = v12;
  if (v13)
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    uint64_t v14 = *(void *)buf;
    *(void *)std::string buf = 0LL;
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
    }
  }

  [*(id *)(*(void *)(a1 + 152) + 16) register:*(void *)(*(void *)(a1 + 152) + 8) forNotification:4 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 152) + 16) register:*(void *)(*(void *)(a1 + 152) + 8) forNotification:3 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 152) + 16) register:*(void *)(*(void *)(a1 + 152) + 8) forNotification:2 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 152) + 16) register:*(void *)(*(void *)(a1 + 152) + 8) forNotification:1 registrationInfo:0];
  double v29 = 60.0;
  sub_1002F0B04(buf);
  int v15 = sub_1002A82BC(*(uint64_t *)buf, "FenceStartDelay", &v29);
  char v16 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    unsigned int v17 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }

  if (v15)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    uint64_t v19 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 134283521;
      *(double *)&uint8_t buf[4] = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "#Warning Overriding FenceStartDelay,%{private}.2f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183EE90);
      }
      int v30 = 134283521;
      double v31 = v29;
      unsigned int v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  0LL,  "#Warning Overriding FenceStartDelay,%{private}.2f",  &v30,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLBTLEFenceManagerConcrete::CLBTLEFenceManagerConcrete(id<CLIntersiloUniverse>)",  "%s\n",  v26);
      if (v26 != buf) {
        free(v26);
      }
    }
  }

  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10183EE90);
  }
  unint64_t v20 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v21 = *(void *)(a1 + 40);
    *(_DWORD *)std::string buf = 134283777;
    *(double *)&uint8_t buf[4] = v29;
    *(_WORD *)&_BYTE buf[12] = 2049;
    *(void *)&_BYTE buf[14] = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "iB: Scheduling initialization delay,%{private}.2f, silo,%{private}p",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    uint64_t v24 = *(void *)(a1 + 40);
    int v30 = 134283777;
    double v31 = v29;
    __int16 v32 = 2049;
    uint64_t v33 = v24;
    LODWORD(v27) = 22;
    char v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Scheduling initialization delay,%{private}.2f, silo,%{private}p",  &v30,  v27);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLBTLEFenceManagerConcrete::CLBTLEFenceManagerConcrete(id<CLIntersiloUniverse>)",  "%s\n",  v25);
    if (v25 != buf) {
      free(v25);
    }
  }

  BOOL v22 = *(void **)(a1 + 40);
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472LL;
  v28[2] = sub_1005208F4;
  v28[3] = &unk_10181D3D0;
  _DWORD v28[4] = a1;
  [v22 afterInterval:v28 async:v29];
  return a1;
}

void sub_1005201FC(_Unwind_Exception *a1)
{
  uint64_t v7 = *(void *)(v1 + 152);
  *(void *)(v1 + 152) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = *(void *)(v1 + 144);
  *(void *)(v1 + 144) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  uint64_t v9 = *(void *)(v1 + 136);
  *(void *)(v1 + 136) = 0LL;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  uint64_t v10 = *(void *)(v1 + 128);
  *(void *)(v1 + 12_Block_object_dispose(va, 8) = 0LL;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  uint64_t v11 = *(void *)(v1 + 120);
  *(void *)(v1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
  }
  uint64_t v12 = *v5;
  uint64_t *v5 = 0LL;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
  }
  sub_100E91B00(v1);
  _Unwind_Resume(a1);
}

void sub_100520328(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EE70);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBTLEFenceManagerConcrete::onDataProtectionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      unsigned int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBTLEFenceManagerConcrete::onDataProtectionNotification, event:%{public, location: escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100525C9C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1005204E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_100520500(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 24);
  if (!v1)
  {
    uint64_t v3 = objc_alloc_init(&OBJC_CLASS___CLCallbackDropNullDelegate);
    *(void *)(a1 + 24) = v3;
    -[CLCallbackDropNullDelegate setValid:](v3, "setValid:", 1LL);
    uint64_t v1 = *(void **)(a1 + 24);
  }

  return v1;
}

void sub_100520544(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EE70);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBTLEFenceManagerConcrete::onClientManagerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      unsigned int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBTLEFenceManagerConcrete::onClientManagerNotification, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10052469C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1005206FC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10052071C(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EE70);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBTLEFenceManagerConcrete::onAppMonitorNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      unsigned int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBTLEFenceManagerConcrete::onAppMonitorNotification, event:%{public, location:esca pe_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100524880(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1005208D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1005208F4(uint64_t a1)
{
}

void sub_1005208FC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 296))
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    uint64_t v1 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "iB: Already initialized", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183EE90);
      }
      v16[0] = 0;
      uint64_t v2 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: Already initialized",  v16,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLBTLEFenceManagerConcrete::unlockedInitialize()", "%s\n", v2);
    }
  }

  else
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    uint64_t v4 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = *(unsigned __int8 *)(a1 + 297);
      BOOL v6 = *(void *)(a1 + 328) == 0LL;
      *(_DWORD *)std::string buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      __int16 v20 = 1026;
      int v21 = v5;
      __int16 v22 = 1026;
      BOOL v23 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:iB: Initializing, unlocked:%{public}d, awaiting:%{public}d}",  buf,  0x1Eu);
    }

    sub_100F0247C((uint64_t)sub_100520E28, a1, *(void **)(a1 + 32), buf);
    uint64_t v7 = *(void *)buf;
    *(void *)std::string buf = 0LL;
    uint64_t v8 = *(void *)(a1 + 112);
    *(void *)(a1 + 112) = v7;
    if (v8)
    {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
      uint64_t v9 = *(void *)buf;
      *(void *)std::string buf = 0LL;
      if (v9) {
        (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
      }
    }

    [*(id *)(*(void *)(a1 + 112) + 16) register:*(void *)(*(void *)(a1 + 112) + 8) forNotification:0 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 112) + 16) register:*(void *)(*(void *)(a1 + 112) + 8) forNotification:1 registrationInfo:0];
    sub_100EDF1F0((uint64_t)sub_100521000, a1, *(void **)(a1 + 32), buf);
    uint64_t v10 = *(void *)buf;
    *(void *)std::string buf = 0LL;
    uint64_t v11 = *(void *)(a1 + 120);
    *(void *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v10;
    if (v11)
    {
      (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
      uint64_t v12 = *(void *)buf;
      *(void *)std::string buf = 0LL;
      if (v12) {
        (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
      }
    }

    [*(id *)(*(void *)(a1 + 120) + 16) register:*(void *)(*(void *)(a1 + 120) + 8) forNotification:1 registrationInfo:0];
    sub_1003CC884((uint64_t)sub_1005211D8, a1, *(void **)(a1 + 32), buf);
    uint64_t v13 = *(void *)buf;
    *(void *)std::string buf = 0LL;
    uint64_t v14 = *(void *)(a1 + 128);
    *(void *)(a1 + 12_Block_object_dispose(va, 8) = v13;
    if (v14)
    {
      (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
      uint64_t v15 = *(void *)buf;
      *(void *)std::string buf = 0LL;
      if (v15) {
        (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
      }
    }

    [*(id *)(*(void *)(a1 + 128) + 16) register:*(void *)(*(void *)(a1 + 128) + 8) forNotification:10 registrationInfo:0];
    *(_BYTE *)(a1 + 296) = 1;
  }

uint64_t sub_100520C7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100520CE0(uint64_t a1)
{
  *(void *)a1 = off_10183ECD8;
  sub_1005213B0(a1);
  sub_100527AF4(a1 + 344);
  sub_100527E2C((uint64_t *)(a1 + 328), 0LL);
  sub_100527D18(a1 + 304, *(void **)(a1 + 312));
  sub_100527C80(a1 + 160, *(void **)(a1 + 168));
  uint64_t v2 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 128);
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 120);
  *(void *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  return sub_100E91B00(a1);
}

void sub_100520E14(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100520CE0(a1);
  operator delete(v1);
}

void sub_100520E28(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EE70);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBTLEFenceManagerConcrete::onAuthorizationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      unsigned int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBTLEFenceManagerConcrete::onAuthorizationNotification, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100523480(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100520FE0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100521000(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EE70);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBTLEFenceManagerConcrete::onBeaconNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      unsigned int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBTLEFenceManagerConcrete::onBeaconNotification, event:%{public, location:escape_o nly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100522B7C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1005211B8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1005211D8(uint64_t a1, _DWORD *a2, _BYTE *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EE70);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLBTLEFenceManagerConcrete::onDaemonStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      unsigned int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLBTLEFenceManagerConcrete::onDaemonStatusNotification, event:%{public, location:es cape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1005249F4(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100521390( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1005213B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 120);
  *(void *)(a1 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 128);
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }

  *(void *)(a1 + 336) = 0LL;
}

uint64_t sub_100521438(uint64_t a1, uint64_t a2)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10183EE90);
  }
  uint64_t v4 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
    uint64_t v5 = v11 >= 0 ? __p : (void **)__p[0];
    uint64_t v6 = *(void *)(a1 + 176);
    *(_DWORD *)std::string buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)int v13 = 2082;
    *(void *)&uint64_t v13[2] = "";
    *(_WORD *)&v13[10] = 2081;
    *(void *)&void v13[12] = v5;
    *(_WORD *)&v13[20] = 2050;
    *(void *)&v13[22] = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:@iB: Adding monitored region, region:%{private, location:escape_only}s, totalRegion s:%{public}lu}",  buf,  0x26u);
    if (v11 < 0) {
      operator delete(__p[0]);
    }
  }

  objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLBeaconFenceAuthorizationManager"),  "syncgetRemoveFence:",  a2);
  unsigned __int8 v7 = objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLBeaconFenceAuthorizationManager"),  "syncgetAddFence:",  a2);
  memset(v13, 0, sizeof(v13));
  *(void *)std::string buf = off_10182CDC8;
  memset(v14, 0, sizeof(v14));
  memset(&v15, 0, sizeof(v15));
  int v17 = 0;
  __int16 v18 = &off_10182CE18;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  int v21 = 1;
  std::string::operator=((std::string *)v13, (const std::string *)(a2 + 8));
  *(void *)&v13[24] = *(void *)(a2 + 32);
  std::string::operator=(v14, (const std::string *)(a2 + 40));
  std::string::operator=(&v14[1], (const std::string *)(a2 + 64));
  std::string::operator=(&v15, (const std::string *)(a2 + 88));
  int v16 = *(_DWORD *)(a2 + 112);
  if ((v7 & 1) != 0)
  {
    if (sub_100E575B0())
    {
      sub_1002A5370(v9);
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
      sub_1002AEC14((uint64_t)v9, "btle_fence_installed", (char *)__p);
      if (v11 < 0) {
        operator delete(__p[0]);
      }
      sub_100E57614((uint64_t)v9, (uint64_t)"locationd");
      sub_1002A5590(v9);
    }

    sub_10091C3D0(a2, (unsigned __int8 *)(a1 + 192), *(void **)(a1 + 32));
  }

  else
  {
    int v17 = 3;
  }

  LODWORD(__p[0]) = 0;
  (*(void (**)(uint64_t, void **, uint8_t *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  __p,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
  __int16 v18 = &off_10182CE18;
  if (SBYTE7(v20) < 0) {
    operator delete((void *)v19);
  }
  return sub_1002722AC((uint64_t)buf);
}

void sub_100521720( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
}

uint64_t sub_100521770(uint64_t a1)
{
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = &off_10182CE18;
  return sub_1002722AC(a1);
}

void sub_1005217B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  id v5 = objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLBeaconFenceAuthorizationManager");
  else {
    uint64_t v6 = (uint64_t *)*a2;
  }
  objc_msgSend( v5,  "syncgetFences:forBundle:",  a3,  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v6));
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10183EE90);
  }
  unsigned __int8 v7 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = *(void *)(a3 + 16);
    else {
      uint64_t v9 = (uint64_t *)*a2;
    }
    v10[0] = 68289538;
    v10[1] = 0;
    __int16 v11 = 2082;
    uint64_t v12 = "";
    __int16 v13 = 2050;
    uint64_t v14 = v8;
    __int16 v15 = 2082;
    int v16 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Retrieved monitored regions, numRegions:%{public}lu, bundle:%{public, locatio n:escape_only}s}",  (uint8_t *)v10,  0x26u);
  }

BOOL sub_100521900(uint64_t a1, uint64_t a2)
{
  v4[0] = (uint64_t)v4;
  v4[1] = (uint64_t)v4;
  uint64_t v5 = 0LL;
  (*(void (**)(uint64_t, uint64_t, uint64_t *))(*(void *)a1 + 224LL))(a1, a2, v4);
  BOOL v2 = v5 != 0;
  sub_100527B44(v4);
  return v2;
}

void sub_100521954(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100521968(uint64_t a1, uint64_t a2)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10183EE90);
  }
  uint64_t v4 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
    uint64_t v5 = v11 >= 0 ? __p : (void **)__p[0];
    uint64_t v6 = *(void *)(a1 + 176);
    *(_DWORD *)std::string buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)__int16 v13 = 2082;
    *(void *)&uint64_t v13[2] = "";
    *(_WORD *)&v13[10] = 2081;
    *(void *)&void v13[12] = v5;
    *(_WORD *)&v13[20] = 2050;
    *(void *)&v13[22] = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:@iB: Removing monitored region, region:%{private, location:escape_only}s, totalRegi ons:%{public}lu}",  buf,  0x26u);
    if (v11 < 0) {
      operator delete(__p[0]);
    }
  }

  unsigned __int8 v7 = objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLBeaconFenceAuthorizationManager"),  "syncgetRemoveFence:",  a2);
  memset(v13, 0, sizeof(v13));
  *(void *)std::string buf = off_10182CDC8;
  memset(v14, 0, sizeof(v14));
  memset(&v15, 0, sizeof(v15));
  int v17 = 0;
  __int16 v18 = &off_10182CE18;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  int v21 = 1;
  std::string::operator=((std::string *)v13, (const std::string *)(a2 + 8));
  *(void *)&v13[24] = *(void *)(a2 + 32);
  std::string::operator=(v14, (const std::string *)(a2 + 40));
  std::string::operator=(&v14[1], (const std::string *)(a2 + 64));
  std::string::operator=(&v15, (const std::string *)(a2 + 88));
  int v16 = *(_DWORD *)(a2 + 112);
  if ((v7 & 1) != 0)
  {
    if (sub_100E575B0())
    {
      sub_1002A5370(v9);
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
      sub_1002AEC14((uint64_t)v9, "btle_fence_uninstalled", (char *)__p);
      if (v11 < 0) {
        operator delete(__p[0]);
      }
      sub_100E57614((uint64_t)v9, (uint64_t)"locationd");
      sub_1002A5590(v9);
    }

    sub_10091C7F8(a2, *(void **)(a1 + 32));
  }

  else
  {
    int v17 = 3;
  }

  LODWORD(__p[0]) = 1;
  (*(void (**)(uint64_t, void **, uint8_t *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  __p,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
  __int16 v18 = &off_10182CE18;
  if (SBYTE7(v20) < 0) {
    operator delete((void *)v19);
  }
  return sub_1002722AC((uint64_t)buf);
}

void sub_100521C30( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
}

uint64_t sub_100521C80(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLBeaconFenceAuthorizationManager");
  else {
    uint64_t v5 = *(void *)(a2 + 40);
  }
  uint64_t v6 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
  else {
    uint64_t v7 = *(void *)(a2 + 64);
  }
  unsigned int v8 = objc_msgSend( v4,  "syncgetCanBundle:performFenceOperationFor:",  v6,  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v7));
  if (v8)
  {
    unsigned int v9 = v8;
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    uint64_t v10 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 16LL))(&__p, a2);
      char v11 = SHIBYTE(v40[1]) >= 0 ? &__p : (void **)__p;
      *(_DWORD *)std::string buf = 67240451;
      *(_DWORD *)&uint8_t buf[4] = v9;
      LOWORD(v51) = 2081;
      *(void *)((char *)&v51 + 2) = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "#Warning Authorization error,%{public}d, while requesting state for region,%{private}s",  buf,  0x12u);
      if (SHIBYTE(v40[1]) < 0) {
        operator delete(__p);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&__p, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183EE90);
      }
      uint64_t v23 = qword_101934848;
      (*(void (**)(uint8_t *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(buf, a2);
      if (v51 >= 0) {
        uint64_t v24 = buf;
      }
      else {
        uint64_t v24 = *(uint8_t **)buf;
      }
      *(_DWORD *)uint64_t v33 = 67240451;
      *(_DWORD *)&v33[4] = v9;
      *(_WORD *)&v33[8] = 2081;
      *(void *)&v33[10] = v24;
      char v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v23,  1LL,  "#Warning Authorization error,%{public}d, while requesting state for region,%{private}s",  v33,  18);
      if (SHIBYTE(v51) < 0) {
        operator delete(*(void **)buf);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLBTLEFenceManagerConcrete::requestRegionState(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  v25);
    }

    __int128 v41 = 0u;
    *(_OWORD *)uint64_t v40 = 0u;
    __int128 __p = off_10182CDC8;
    memset(v42, 0, sizeof(v42));
    memset(&v43, 0, sizeof(v43));
    int v45 = 0;
    unint64_t v46 = &off_10182CE18;
    __int128 v47 = 0u;
    __int128 v48 = 0u;
    int v49 = 1;
    std::string::operator=((std::string *)v40, (const std::string *)(a2 + 8));
    *((void *)&v41 + 1) = *(void *)(a2 + 32);
    std::string::operator=(v42, (const std::string *)(a2 + 40));
    std::string::operator=(&v42[1], (const std::string *)(a2 + 64));
    std::string::operator=(&v43, (const std::string *)(a2 + 88));
    int v12 = *(_DWORD *)(a2 + 112);
    int v49 = 1;
    if (v9 == 2) {
      int v13 = 2;
    }
    else {
      int v13 = 3;
    }
    if (v9 == 1) {
      int v13 = 1;
    }
    int v44 = v12;
    int v45 = v13;
    *(_DWORD *)std::string buf = 3;
    (*(void (**)(uint64_t, uint8_t *, void **, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &__p,  0LL,  0xFFFFFFFFLL,  0LL);
    unint64_t v46 = &off_10182CE18;
    if (SBYTE7(v48) < 0) {
      operator delete((void *)v47);
    }
    p_p = &__p;
  }

  else
  {
    __int128 v52 = 0u;
    __int128 v51 = 0u;
    memset(v53, 0, sizeof(v53));
    memset(&v54, 0, sizeof(v54));
    *(void *)std::string buf = off_10182CDC8;
    int v56 = 0;
    char v57 = &off_10182CE18;
    __int128 v58 = 0u;
    int v60 = 1;
    __int128 v59 = 0u;
    std::string::operator=((std::string *)&v51, (const std::string *)(a2 + 8));
    *((void *)&v52 + 1) = *(void *)(a2 + 32);
    std::string::operator=(v53, (const std::string *)(a2 + 40));
    std::string::operator=(&v53[1], (const std::string *)(a2 + 64));
    std::string::operator=(&v54, (const std::string *)(a2 + 88));
    int v55 = *(_DWORD *)(a2 + 112);
    __int128 __p = &off_10182CE18;
    if (*(char *)(a2 + 31) < 0)
    {
      sub_1010DD48C(v40, *(void **)(a2 + 8), *(void *)(a2 + 16));
    }

    else
    {
      *(_OWORD *)uint64_t v40 = *(_OWORD *)(a2 + 8);
      *(void *)&__int128 v41 = *(void *)(a2 + 24);
    }

    *((void *)&v41 + 1) = *(void *)(a2 + 32);
    std::string v15 = sub_100528D38(a1 + 160, (uint64_t)&__p);
    __int128 __p = &off_10182CE18;
    if (SBYTE7(v41) < 0) {
      operator delete(v40[0]);
    }
    if ((void *)(a1 + 168) == v15)
    {
      uint64_t v19 = *(void *)(a1 + 328);
      if (v19)
      {
        int v60 = sub_10050F880(v19, a2);
      }

      else
      {
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10183EE90);
        }
        __int128 v20 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
        {
          (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 16LL))(&__p, a2);
          int v21 = SHIBYTE(v40[1]) >= 0 ? &__p : (void **)__p;
          *(_DWORD *)uint64_t v33 = 136380675;
          *(void *)&v33[4] = v21;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "#Warning Unable to find region,%{private}s, in the cache",  v33,  0xCu);
          if (SHIBYTE(v40[1]) < 0) {
            operator delete(__p);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&__p, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10183EE90);
          }
          uint64_t v30 = qword_101934848;
          (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v33, a2);
          if (v34 >= 0) {
            double v31 = v33;
          }
          else {
            double v31 = *(_BYTE **)v33;
          }
          int v35 = 136380675;
          uint64_t v36 = v31;
          __int16 v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v30,  0LL,  "#Warning Unable to find region,%{private}s, in the cache",  &v35,  12);
          if (v34 < 0) {
            operator delete(*(void **)v33);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLBTLEFenceManagerConcrete::requestRegionState(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  v32);
        }

        int v60 = 1;
        int v56 = 3;
      }
    }

    else
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183EE90);
      }
      int v16 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
      {
        (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 16LL))(&__p, a2);
        int v17 = SHIBYTE(v40[1]) >= 0 ? &__p : (void **)__p;
        int v18 = *((_DWORD *)v15 + 24);
        *(_DWORD *)uint64_t v33 = 136380931;
        *(void *)&v33[4] = v17;
        *(_WORD *)&v33[12] = 1025;
        *(_DWORD *)&v33[14] = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "iB: Region,%{private}s, has state,%{private}d",  v33,  0x12u);
        if (SHIBYTE(v40[1]) < 0) {
          operator delete(__p);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&__p, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10183EE90);
        }
        uint64_t v26 = qword_101934848;
        (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(v33, a2);
        if (v34 >= 0) {
          uint64_t v27 = v33;
        }
        else {
          uint64_t v27 = *(_BYTE **)v33;
        }
        int v28 = *((_DWORD *)v15 + 24);
        int v35 = 136380931;
        uint64_t v36 = v27;
        __int16 v37 = 1025;
        int v38 = v28;
        double v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v26,  2LL,  "iB: Region,%{private}s, has state,%{private}d",  &v35,  18);
        if (v34 < 0) {
          operator delete(*(void **)v33);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLBTLEFenceManagerConcrete::requestRegionState(const CLBTLEBeaconRegion_Type::MonitoredRegion &)",  "%s\n",  v29);
      }

      int v60 = *((_DWORD *)v15 + 24);
    }

    LODWORD(__p) = 3;
    (*(void (**)(uint64_t, void **, uint8_t *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &__p,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
    char v57 = &off_10182CE18;
    if (SBYTE7(v59) < 0) {
      operator delete((void *)v58);
    }
    p_p = buf;
  }

  return sub_1002722AC((uint64_t)p_p);
}

void sub_10052256C(_Unwind_Exception *a1)
{
}

uint64_t sub_1005225DC(uint64_t a1, uint64_t a2)
{
  id v4 = +[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set");
  uint64_t v5 = *(void **)(a1 + 160);
  uint64_t v6 = (void *)(a1 + 168);
  if (v5 != v6)
  {
    do
    {
      if (*((_DWORD *)v5 + 24) == 2)
      {
        uint64_t v7 = (void *)v5[9];
        if (v7 != v5 + 10)
        {
          do
          {
            if ((v7[18] & 5) != 0)
            {
              unsigned int v8 = v7 + 9;
              objc_msgSend( v4,  "addObject:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v8));
            }

            unsigned int v9 = (void *)v7[1];
            if (v9)
            {
              do
              {
                uint64_t v10 = v9;
                unsigned int v9 = (void *)*v9;
              }

              while (v9);
            }

            else
            {
              do
              {
                uint64_t v10 = (void *)v7[2];
                BOOL v11 = *v10 == (void)v7;
                uint64_t v7 = v10;
              }

              while (!v11);
            }

            uint64_t v7 = v10;
          }

          while (v10 != v5 + 10);
        }
      }

      int v12 = (void *)v5[1];
      if (v12)
      {
        do
        {
          int v13 = v12;
          int v12 = (void *)*v12;
        }

        while (v12);
      }

      else
      {
        do
        {
          int v13 = (void *)v5[2];
          BOOL v11 = *v13 == (void)v5;
          uint64_t v5 = v13;
        }

        while (!v11);
      }

      uint64_t v5 = v13;
    }

    while (v13 != v6);
  }

  return (*(uint64_t (**)(uint64_t, id))(a2 + 16))(a2, v4);
}

uint64_t sub_100522704()
{
  return 1LL;
}

void sub_10052270C(uint64_t a1, const std::string *a2, int a3, int a4, int a5)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10183EE90);
  }
  uint64_t v10 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
  {
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      BOOL v11 = a2;
    }
    else {
      BOOL v11 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string buf = 136315906;
    char v34 = v11;
    __int16 v35 = 1024;
    int v36 = a3;
    __int16 v37 = 1024;
    int v38 = a4;
    __int16 v39 = 1024;
    int v40 = a5;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "@iB: Simulating Beacon : %s.%d.%d  RegionState : %d",  buf,  0x1Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string v15 = a2;
    }
    else {
      std::string v15 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t v24 = 136315906;
    *(void *)&_DWORD v24[4] = v15;
    *(_WORD *)&v24[12] = 1024;
    *(_DWORD *)&v24[14] = a3;
    *(_WORD *)&v24[18] = 1024;
    *(_DWORD *)&v24[20] = a4;
    LOWORD(v25) = 1024;
    *(_DWORD *)((char *)&v25 + 2) = a5;
    int v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  1LL,  "@iB: Simulating Beacon : %s.%d.%d  RegionState : %d",  v24,  30,  v19[0],  v19[2]);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLBTLEFenceManagerConcrete::simulateBeaconEvent(const std::string &, int, int, CLBTLEBeaconRegion_Typ e::RegionStates)",  "%s\n",  v16);
  }

  int v23 = 1;
  *(void *)uint64_t v24 = v24;
  *(void *)&v24[8] = v24;
  *(void *)&v24[16] = 0LL;
  char v25 = &off_10182CE18;
  *(_OWORD *)uint64_t v26 = 0u;
  __int128 v27 = 0u;
  int v28 = &off_10182CE18;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  char v32 = 1;
  if (a5 == 4) {
    int v12 = 4;
  }
  else {
    int v12 = 1;
  }
  if (a5 == 2) {
    int v12 = 2;
  }
  int v31 = v12;
  __int128 v20 = &off_10182CE18;
  *(_OWORD *)__int128 __p = 0uLL;
  __int128 v22 = 0uLL;
  std::string::operator=((std::string *)__p, a2);
  WORD4(v22) = a3;
  WORD5(v22) = a4;
  HIDWORD(v22) = 7;
  std::string::operator=((std::string *)v26, (const std::string *)__p);
  *((void *)&v27 + 1) = *((void *)&v22 + 1);
  sub_100522B7C(a1, v13, &v23, (uint64_t)v24);
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10183EE90);
  }
  uint64_t v14 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "@iB: Simulating Beacon : beacon notification sent",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    LOWORD(v19[0]) = 0;
    LODWORD(v1_Block_object_dispose(va, 8) = 2;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  1LL,  "@iB: Simulating Beacon : beacon notification sent",  v19,  v18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLBTLEFenceManagerConcrete::simulateBeaconEvent(const std::string &, int, int, CLBTLEBeaconRegion_Typ e::RegionStates)",  "%s\n",  v17);
  }

  __int128 v20 = &off_10182CE18;
  if (SBYTE7(v22) < 0) {
    operator delete(__p[0]);
  }
  int v28 = &off_10182CE18;
  if (SBYTE7(v30) < 0) {
    operator delete((void *)v29);
  }
  char v25 = &off_10182CE18;
  if (SBYTE7(v27) < 0) {
    operator delete(v26[0]);
  }
  sub_100527BBC((uint64_t *)v24);
}

void sub_100522B44( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, char a22)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_100523424((uint64_t)&a22);
  _Unwind_Resume(a1);
}

uint64_t sub_100522B7C(uint64_t result, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 != 1) {
    return result;
  }
  uint64_t v5 = result;
  __int128 v52 = 0u;
  __int128 v51 = 0u;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  memset(&v56, 0, sizeof(v56));
  uint64_t v50 = off_10182CDC8;
  int v58 = 0;
  __int128 v59 = &off_10182CE18;
  __int128 __src = 0u;
  __int128 v61 = 0u;
  int v6 = *(_DWORD *)(a4 + 104);
  if (v6 == 4) {
    goto LABEL_6;
  }
  if (v6 != 2)
  {
    int v6 = 1;
LABEL_6:
    LODWORD(v62) = v6;
    goto LABEL_7;
  }

  LODWORD(v62) = 2;
  std::string::operator=((std::string *)&__src, (const std::string *)(a4 + 72));
  *((void *)&v61 + 1) = *(void *)(a4 + 96);
LABEL_7:
  uint64_t v7 = a4 + 24;
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10183EE90);
  }
  unsigned int v8 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v7 + 16LL))(__p, a4 + 24);
    int v9 = v49;
    uint64_t v10 = (void **)__p[0];
    uint64_t v64 = a4 + 24;
    int v11 = *((_DWORD *)sub_100529190((uint64_t **)(v5 + 160), a4 + 24, (uint64_t)&unk_1012CF090, &v64) + 24);
    int v12 = __p;
    if (v9 < 0) {
      int v12 = v10;
    }
    uint64_t v13 = *(void *)(v5 + 176);
    *(_DWORD *)std::string buf = 68290051;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)unint64_t v66 = 2082;
    *(void *)&v66[2] = "";
    *(_WORD *)&v66[10] = 2081;
    *(void *)&v66[12] = v12;
    __int16 v67 = 1025;
    int v68 = v11;
    __int16 v69 = 1025;
    int v70 = v62;
    __int16 v71 = 2050;
    uint64_t v72 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:@iB: Zone state transition, region:%{private, location:escape_only}s, fromState:% {private}d, toState:%{private}d, totalRegions:%{public}lu}",  buf,  0x32u);
    if (v49 < 0) {
      operator delete(__p[0]);
    }
  }

  *(void *)std::string buf = a4 + 24;
  BOOL v39 = 0;
  int v14 = *((_DWORD *)sub_100529190((uint64_t **)(v5 + 160), a4 + 24, (uint64_t)&unk_1012CF090, (uint64_t *)buf) + 24);
  int v15 = v62;
  int v16 = v62;
  if (v14 != 1 && (_DWORD)v62 != 1)
  {
    *(void *)std::string buf = a4 + 24;
    int v17 = sub_100529190((uint64_t **)(v5 + 160), a4 + 24, (uint64_t)&unk_1012CF090, (uint64_t *)buf);
    int v16 = v62;
    BOOL v39 = *((_DWORD *)v17 + 24) != v62;
  }

  *(void *)std::string buf = a4 + 24;
  *((_DWORD *)sub_100529190((uint64_t **)(v5 + 160), a4 + 24, (uint64_t)&unk_1012CF090, (uint64_t *)buf) + 24) = v16;
  v63[0] = *(_DWORD *)(a4 + 108);
  *(void *)std::string buf = a4 + 24;
  uint64_t v18 = (uint64_t *)sub_100529190((uint64_t **)(v5 + 160), a4 + 24, (uint64_t)&unk_1012CF090, (uint64_t *)buf)[9];
  BOOL v19 = v14 != 1 || v15 == 1;
  char v20 = v19;
  char v38 = v20;
  while (1)
  {
    int v21 = v18;
    *(void *)std::string buf = v7;
    std::string::operator=((std::string *)&v51, (const std::string *)(v21 + 5));
    *((void *)&v52 + 1) = v21[8];
    std::string::operator=((std::string *)&v53, (const std::string *)v21 + 3);
    std::string::operator=((std::string *)((char *)&v54 + 8), (const std::string *)v21 + 4);
    std::string::operator=(&v56, (const std::string *)v21 + 5);
    int v57 = *((_DWORD *)v21 + 36);
    sub_10091CB00((uint64_t)&v50, (unsigned __int8 *)(v5 + 192));
    if (v39)
    {
      if ((int v22 = *((_DWORD *)v21 + 36), (v22 & 1) != 0) && (_DWORD)v62 == 2 || (v22 & 2) != 0 && (_DWORD)v62 == 4)
      {
        *(void *)std::string buf = buf;
        *(void *)unint64_t v66 = buf;
        *(void *)&v66[8] = 0LL;
        id v23 = objc_msgSend( objc_msgSend(*(id *)(v5 + 32), "vendor"),  "proxyForService:",  @"CLBeaconFenceAuthorizationManager");
        if ((SBYTE7(v54) & 0x80u) == 0) {
          uint64_t v24 = &v53;
        }
        else {
          uint64_t v24 = (__int128 *)v53;
        }
        char v25 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v24);
        if (v55 >= 0) {
          uint64_t v26 = (char *)&v54 + 8;
        }
        else {
          uint64_t v26 = (char *)*((void *)&v54 + 1);
        }
        objc_msgSend( v23,  "syncgetFences:forBundle:onBehalfOf:",  buf,  v25,  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v26));
        HIDWORD(v62) = *(_DWORD *)&v66[8];
        sub_100527B44((uint64_t *)buf);
        *(void *)std::string buf = v21 + 4;
        __int128 v27 = sub_100529690((uint64_t **)(v5 + 304), (uint64_t)(v21 + 4), (uint64_t)&unk_1012CF090, (uint64_t *)buf);
        *(void *)std::string buf = CFAbsoluteTimeGetCurrent();
        LODWORD(__p[0]) = 0;
        int v28 = sub_1005297FC( (uint64_t)(v27 + 19),  0LL,  0LL,  (int *)&v62,  (uint64_t)&v59,  (int *)&v62 + 1,  v63,  (double *)buf,  (int *)__p);
        v28[1] = v27 + 19;
        uint64_t v29 = v27[19];
        void *v28 = v29;
        *(void *)(v29 + _Block_object_dispose(va, 8) = v28;
        v27[19] = (uint64_t)v28;
        ++v27[21];
        __int128 v30 = *(void **)(v5 + 336);
        if ((SBYTE7(v54) & 0x80u) == 0) {
          int v31 = &v53;
        }
        else {
          int v31 = (__int128 *)v53;
        }
        char v32 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v31);
        v40[0] = _NSConcreteStackBlock;
        v40[1] = 3321888768LL;
        double v40[2] = sub_100524440;
        v40[3] = &unk_10183EDE8;
        v40[4] = v5;
        sub_100272138((uint64_t)v41, (uint64_t)&v50);
        v41[30] = v58;
        char v42 = &off_10182CE18;
        if (SBYTE7(v61) < 0)
        {
          sub_1010DD48C(&v43, (void *)__src, *((unint64_t *)&__src + 1));
        }

        else
        {
          __int128 v43 = __src;
          uint64_t v44 = v61;
        }

        uint64_t v45 = *((void *)&v61 + 1);
        uint64_t v46 = v62;
        int v47 = v63[0];
        [v30 handleProvisionalIntermediationForService:0 forClientKey:v32 at:0 withReply:v40];
        char v42 = &off_10182CE18;
        if (SHIBYTE(v44) < 0) {
          operator delete((void *)v43);
        }
        sub_1002722AC((uint64_t)v41);
LABEL_47:
        if (v15 == 1) {
          goto LABEL_55;
        }
        goto LABEL_48;
      }
    }

    if ((v38 & 1) != 0) {
      goto LABEL_47;
    }
    *(_DWORD *)std::string buf = 3;
    (*(void (**)(uint64_t, uint8_t *, uint64_t (***)(), void, uint64_t, void))(*(void *)v5 + 152LL))( v5,  buf,  &v50,  0LL,  0xFFFFFFFFLL,  0LL);
LABEL_48:
    uint64_t v33 = *(void *)(v5 + 328);
    if (v33)
    {
      sub_10050DEBC(v33, (uint64_t)(v21 + 4), v62);
    }

    else
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183EE90);
      }
      char v34 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "#Warning iB: state changed before first unlock",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10183EE90);
        }
        LOWORD(__p[0]) = 0;
        LODWORD(v37) = 2;
        int v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  0LL,  "#Warning iB: state changed before first unlock",  __p,  v37);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEFenceManagerConcrete::onBeaconNotification(int, const CLBTLEBeaconProvider_Type::Notification &, co nst CLBTLEBeaconProvider_Type::NotificationData &)",  "%s\n",  v36);
      }
    }

void sub_1005233A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,uint64_t a57,char a58)
{
}

uint64_t sub_100523424(uint64_t a1)
{
  *(void *)(a1 + 64) = &off_10182CE18;
  *(void *)(a1 + 24) = &off_10182CE18;
  sub_100527BBC((uint64_t *)a1);
  return a1;
}

uint64_t sub_100523480(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 8);
  if (v6 != a4)
  {
    uint64_t v7 = (uint64_t **)(a1 + 160);
    uint64_t v46 = (void *)(a1 + 168);
    while (1)
    {
      int v47 = &off_10182CE18;
      else {
        std::string v48 = *(std::string *)(v6 + 24);
      }
      uint64_t v8 = v6 + 16;
      uint64_t v49 = *(void *)(v6 + 48);
      if (*a3 == 1) {
        break;
      }
      if (!*a3)
      {
        int v9 = sub_100528D38((uint64_t)v7, (uint64_t)&v47);
        if (v46 == v9 || !sub_100528EF4((uint64_t)(v9 + 9), v6 + 16))
        {
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10183EE90);
          }
          int v22 = (os_log_s *)qword_101934848;
          if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
          {
            (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v8 + 16LL))(buf, v6 + 16);
            id v23 = buf;
            if (buf[23] < 0) {
              id v23 = *(_BYTE **)buf;
            }
            __int128 __p = (void *)68289283;
            __int16 v55 = 2082;
            std::string v56 = "";
            __int16 v57 = 2081;
            int v58 = v23;
            _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Resuming monitoring for fence, region:%{private, location:escape_only}s}",  (uint8_t *)&__p,  0x1Cu);
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }

          *(void *)std::string buf = &off_10182CE18;
          *(_OWORD *)&uint8_t buf[8] = 0u;
          __int128 v60 = 0u;
          std::string::operator=((std::string *)&buf[8], &v48);
          *((void *)&v60 + 1) = v49;
          if ((objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLBTLEBeaconProvider"),  "syncgetAddProximityZone:",  buf) & 1) == 0)
          {
            if (qword_101934840 != -1) {
              dispatch_once(&qword_101934840, &stru_10183EE90);
            }
            uint64_t v24 = (os_log_s *)qword_101934848;
            if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_FAULT))
            {
              (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v8 + 16LL))(&__p, v6 + 16);
              p_p = &__p;
              if (SBYTE3(v58) < 0) {
                p_p = __p;
              }
              *(_DWORD *)uint64_t v50 = 136380675;
              *(void *)&v50[4] = p_p;
              _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "Unable to monitor the zone for region,%{private}s",  v50,  0xCu);
              if (SBYTE3(v58) < 0) {
                operator delete(__p);
              }
            }

            if (sub_1002921D0(115, 0))
            {
              bzero(&__p, 0x65CuLL);
              if (qword_101934840 != -1) {
                dispatch_once(&qword_101934840, &stru_10183EE90);
              }
              uint64_t v36 = qword_101934848;
              (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v8 + 16LL))(v50, v6 + 16);
              uint64_t v37 = v50;
              if (v51 < 0) {
                uint64_t v37 = *(_BYTE **)v50;
              }
              int v52 = 136380675;
              __int128 v53 = v37;
              LODWORD(v44) = 12;
              char v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v36,  17LL,  "Unable to monitor the zone for region,%{private}s",  &v52,  v44);
              if (v51 < 0) {
                operator delete(*(void **)v50);
              }
              sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLBTLEFenceManagerConcrete::onAuthorizationNotification(int, const CLBeaconFenceAuthorizationManage r_Type::Notification &, const CLBeaconFenceAuthorizationManager_Type::NotificationData &)",  "%s\n",  v38);
            }
          }

          __int128 __p = &v47;
          uint64_t v26 = sub_100529190(v7, (uint64_t)&v47, (uint64_t)&unk_1012CF090, (uint64_t *)&__p);
          sub_1005293EC((uint64_t **)v26 + 9, v6 + 16, v6 + 16);
          __int128 __p = &v47;
          uint64_t v27 = *(void *)(a1 + 328);
          if (v27)
          {
            int v28 = sub_10050F880(v27, v6 + 16);
            __int128 __p = &v47;
            *((_DWORD *)sub_100529190(v7, (uint64_t)&v47, (uint64_t)&unk_1012CF090, (uint64_t *)&__p) + 24) = v28;
LABEL_96:
            *(void *)std::string buf = &off_10182CE18;
            if (SBYTE7(v60) < 0) {
              operator delete(*(void **)&buf[8]);
            }
            goto LABEL_98;
          }

          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10183EE90);
          }
          uint64_t v33 = (os_log_s *)qword_101934848;
          if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(__p) = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "#Warning iB: state kNotificationFenceResume, before first unlock",  (uint8_t *)&__p,  2u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_96;
          }
          bzero(&__p, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10183EE90);
          }
          *(_WORD *)uint64_t v50 = 0;
          LODWORD(v44) = 2;
          char v34 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  qword_101934848,  0LL,  "#Warning iB: state kNotificationFenceResume, before first unlock",  v50,  v44);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEFenceManagerConcrete::onAuthorizationNotification(int, const CLBeaconFenceAuthorizationManager_Ty pe::Notification &, const CLBeaconFenceAuthorizationManager_Type::NotificationData &)",  "%s\n",  v34);
          goto LABEL_121;
        }

        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10183EE90);
        }
        uint64_t v10 = (os_log_s *)qword_101934848;
        if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
        {
          (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v8 + 16LL))(&__p, v6 + 16);
          int v11 = &__p;
          if (SBYTE3(v58) < 0) {
            int v11 = __p;
          }
          *(_DWORD *)std::string buf = 136380675;
          *(void *)&uint8_t buf[4] = v11;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "iB: Already resumed monitoring for fence,%{private}s",  buf,  0xCu);
          if (SBYTE3(v58) < 0) {
            operator delete(__p);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&__p, 0x65CuLL);
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10183EE90);
          }
          uint64_t v12 = qword_101934848;
          (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)v8 + 16LL))(buf, v6 + 16);
          uint64_t v13 = buf;
          if (buf[23] < 0) {
            uint64_t v13 = *(_BYTE **)buf;
          }
          *(_DWORD *)uint64_t v50 = 136380675;
          *(void *)&v50[4] = v13;
          LODWORD(v44) = 12;
          int v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v12,  2LL,  "iB: Already resumed monitoring for fence,%{private}s",  v50,  v44);
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
LABEL_81:
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEFenceManagerConcrete::onAuthorizationNotification(int, const CLBeaconFenceAuthorizationManager_Ty pe::Notification &, const CLBeaconFenceAuthorizationManager_Type::NotificationData &)",  "%s\n",  v14);
        }
      }

LABEL_131:
        uint64_t v43 = *(void *)(v43 + 8);
        if (v43 == a4) {
          goto LABEL_132;
        }
      }

      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)(v43 + 16) + 16LL))(&__p, v43 + 16);
      sub_1002AEC14((uint64_t)&v47, "btle_fence_suspend", (char *)&__p);
LABEL_129:
      if (SBYTE3(v58) < 0) {
        operator delete(__p);
      }
      goto LABEL_131;
    }

  __int128 v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
  if ((v41 & 0x80000000) != 0)
  {
    char v42 = 10;
  }

  else if (v41 >= 0x80)
  {
    char v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41, a2);
    uint64_t v3 = *(_DWORD *)(a1 + 148);
  }

  else
  {
    char v42 = 1;
  }

  id v4 = (v4 + v42 + 2);
  if ((v3 & 0x80000) == 0)
  {
LABEL_114:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_143;
  }

      if (!*(_BYTE *)(a1 + 333)) {
        goto LABEL_183;
      }
      return !*(_BYTE *)(a1 + 333)
          && *(_BYTE *)(a1 + 184)
          && *((float *)&v151 + 1) > (float)((float)(v13 + 1.0) * 0.1875);
    }

    unint64_t v82 = *(float *)(a1 + 1224);
    if (v82 > 80.0
      && v25 > 78.0
      && v72 < (float)*(int *)(a1 + 248)
      && v75 > 13.75
      && v74 < 0.45
      && (v76 * 3.5 < (double)*(int *)(a1 + 240) || v79 >= v78))
    {
      if (qword_101934580 != -1) {
        dispatch_once(&qword_101934580, &stru_10184F718);
      }
      uint64_t v93 = (os_log_s *)qword_101934588;
      if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v93,  OS_LOG_TYPE_DEBUG,  "Steep inclination. Likely bad interference or bad database lookup. Resetting. ",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934580 != -1) {
          dispatch_once(&qword_101934580, &stru_10184F718);
        }
        LOWORD(v152) = 0;
        LODWORD(v141) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  2LL,  "Steep inclination. Likely bad interference or bad database lookup. Resetting. ",  &v152,  *(void *)&v141);
        uint64_t v136 = (uint8_t *)v135;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLAttitudeDependentKFCalibrator::handleInterference(const CLVector3d<float> &, const CLVector3d<float> &, BOOL, BOOL)",  "%s\n",  v135);
        if (v136 != buf) {
          free(v136);
        }
      }

      *(_DWORD *)(a1 + 24_Block_object_dispose(va, 8) = 0;
      (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
      return 1LL;
    }

    unint64_t v80 = v13 * 13.75;
    unint64_t v81 = v13 * 0.1875;
    if (*(_BYTE *)(a1 + 184)) {
      goto LABEL_98;
    }
    if (v82 <= 13.75 && *((float *)&v151 + 1) <= 0.45)
    {
LABEL_129:
      char v87 = 0;
      goto LABEL_142;
    }

    unsigned int v88 = v143 + 0.8;
    if (*((float *)&v147 + 1) < (float)(v88 * 13.75)
      && (*((float *)&v147 + 1) <= 13.75 || *((float *)&v151 + 1) < (float)(v88 * 0.1875)))
    {
      else {
        char v94 = a5;
      }
      unsigned int v95 = *(_DWORD *)(a1 + 228);
      if (*((float *)&v147 + 1) <= v80 || !v94)
      {
        __int16 v105 = __OFSUB__(v95, 1);
        int v106 = v95 - 1;
        if (v106 < 0 == v105)
        {
          char v87 = 0;
          *(_DWORD *)(a1 + 22_Block_object_dispose(va, 8) = v106;
          goto LABEL_142;
        }

        goto LABEL_129;
      }

      *(_DWORD *)(a1 + 22_Block_object_dispose(va, 8) = v95 + 1;
      uint64_t v96 = *(unsigned __int8 *)(a1 + 333);
      if (qword_101934580 != -1) {
        dispatch_once(&qword_101934580, &stru_10184F718);
      }
      unint64_t v97 = (os_log_s *)qword_101934588;
      if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134218752;
        __int128 v167 = *((float *)&v147 + 1);
        __int128 v168 = 2048;
        *(double *)__int128 v169 = v26;
        *(_WORD *)&v169[8] = 2048;
        *(double *)&v169[10] = *((float *)&v151 + 1);
        *(_WORD *)&v169[18] = 2048;
        *(double *)&v169[20] = *(float *)&v147;
        _os_log_impl( (void *)&_mh_execute_header,  v97,  OS_LOG_TYPE_DEBUG,  "**INTERFERENCE-0 dAngle=%.3f,dHeading=%.3f,magDiff=%.3f,incDiff=%.3f",  buf,  0x2Au);
      }

      char v87 = v96 ^ 1;
      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934580 != -1) {
          dispatch_once(&qword_101934580, &stru_10184F718);
        }
        char v152 = 134218752;
        int v153 = *((float *)&v147 + 1);
        int v154 = 2048;
        *(double *)unint64_t v155 = v26;
        *(_WORD *)&v155[8] = 2048;
        *(double *)&v155[10] = *((float *)&v151 + 1);
        *(_WORD *)&v155[18] = 2048;
        *(double *)&v155[20] = *(float *)&v147;
        LODWORD(v141) = 42;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  2LL,  "**INTERFERENCE-0 dAngle=%.3f,dHeading=%.3f,magDiff=%.3f,incDiff=%.3f",  COERCE_DOUBLE(&v152),  v141,  v143,  v145);
        unint64_t v99 = (uint8_t *)v98;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLAttitudeDependentKFCalibrator::handleInterference(const CLVector3d<float> &, const CLVector3d<float> &, BOOL, BOOL)",  "%s\n",  v98);
        if (v99 != buf) {
          free(v99);
        }
      }
    }

    else
    {
      *(_DWORD *)(a1 + 228) += 5;
      if (qword_101934580 != -1) {
        dispatch_once(&qword_101934580, &stru_10184F718);
      }
      uint64_t v89 = (os_log_s *)qword_101934588;
      if (os_log_type_enabled((os_log_t)qword_101934588, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 134218752;
        __int128 v167 = *((float *)&v147 + 1);
        __int128 v168 = 2048;
        *(double *)__int128 v169 = v26;
        *(_WORD *)&v169[8] = 2048;
        *(double *)&v169[10] = *((float *)&v151 + 1);
        *(_WORD *)&v169[18] = 2048;
        *(double *)&v169[20] = *(float *)&v147;
        _os_log_impl( (void *)&_mh_execute_header,  v89,  OS_LOG_TYPE_DEBUG,  "**INTERFERENCE-1 dAngle=%.3f,dHeading=%.3f,magDiff=%.3f,incDiff=%.3f",  buf,  0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934580 != -1) {
          dispatch_once(&qword_101934580, &stru_10184F718);
        }
        char v152 = 134218752;
        int v153 = *((float *)&v147 + 1);
        int v154 = 2048;
        *(double *)unint64_t v155 = v26;
        *(_WORD *)&v155[8] = 2048;
        *(double *)&v155[10] = *((float *)&v151 + 1);
        *(_WORD *)&v155[18] = 2048;
        *(double *)&v155[20] = *(float *)&v147;
        LODWORD(v141) = 42;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934588,  2LL,  "**INTERFERENCE-1 dAngle=%.3f,dHeading=%.3f,magDiff=%.3f,incDiff=%.3f",  COERCE_DOUBLE(&v152),  v141,  v143,  v145);
        uint64_t v138 = (uint8_t *)v137;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLAttitudeDependentKFCalibrator::handleInterference(const CLVector3d<float> &, const CLVector3d<float> &, BOOL, BOOL)",  "%s\n",  v137);
        if (v138 != buf) {
          free(v138);
        }
      }

      char v87 = 1;
    }

  sub_1009F2B58(a1);
  sub_100A0BD78(a1 + 904, *(unsigned __int8 *)(a1 + 612));
  *(void *)(a1 + 1832) = objc_alloc_init(&OBJC_CLASS___GEOLocationShifter);
  return a1;
}

  *(_DWORD *)(a1 + 396) |= 0x200000u;
  int v47 = *(_BYTE **)(a1 + 168);
  if (!v47)
  {
    int v47 = operator new(0x18uLL);
    *(void *)int v47 = off_101875D98;
    v47[8] = 0;
    *((void *)v47 + 2) = 0LL;
    *((_DWORD *)v47 + 3) = 0;
    *(void *)(a1 + 16_Block_object_dispose(va, 8) = v47;
  }

  std::string v48 = *(void *)(a2 + 168);
  if (!v48) {
    std::string v48 = *(void *)(qword_1019A1D38 + 168);
  }
  sub_100BB993C((uint64_t)v47, v48);
  uint64_t v7 = *(_DWORD *)(a2 + 396);
  if ((v7 & 0x400000) == 0)
  {
LABEL_104:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_141;
  }

              *(_DWORD *)(a1 + _Block_object_dispose(va, 8) = v24;
              goto LABEL_147;
            case 2u:
              *(_DWORD *)(a1 + 72) |= 0x20000u;
              BOOL v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                int v28 = 0;
                *((_BYTE *)this + 24) = 1;
              }

              else
              {
                uint64_t v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                int v28 = v27 != 0;
              }

              *(_BYTE *)(a1 + 7sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v28;
              goto LABEL_147;
            case 3u:
              *(_DWORD *)(a1 + 72) |= 2u;
              uint64_t v29 = *((void *)this + 1);
              BOOL v2 = *((void *)this + 2);
              __int128 v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5LL || v29 + 10 > v2)
              {
                __int16 v55 = 0;
                std::string v56 = 0;
                uint64_t v33 = 0LL;
                if (v2 <= v29) {
                  BOOL v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    LODWORD(v33) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_136;
                  }

                  __int16 v57 = v29++;
                  int v58 = *(_BYTE *)(v30 + v57);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  int v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v33) = 0;
LABEL_135:
                    BOOL v2 = v57 + 1;
                    goto LABEL_136;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v33) = 0;
                }
                goto LABEL_135;
              }

              uint64_t v31 = 0;
              char v32 = 0;
              uint64_t v33 = 0LL;
              do
              {
                BOOL v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(_BYTE *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_136;
                }
                v31 += 7;
                uint64_t v29 = v2;
                int v14 = v32++ > 8;
              }

              while (!v14);
              LODWORD(v33) = 0;
LABEL_136:
              *(_DWORD *)(a1 + 12) = v33;
              goto LABEL_147;
            case 4u:
              *(_DWORD *)(a1 + 72) |= 0x2000u;
              __int16 v35 = *((void *)this + 1);
              BOOL v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5LL || v35 + 10 > v2)
              {
                __int128 v59 = 0;
                __int128 v60 = 0;
                uint64_t v39 = 0LL;
                if (v2 <= v35) {
                  BOOL v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_141;
                  }

                  __int128 v61 = v35++;
                  uint64_t v62 = *(_BYTE *)(v36 + v61);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  int v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_140:
                    BOOL v2 = v61 + 1;
                    goto LABEL_141;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_140;
              }

              uint64_t v37 = 0;
              char v38 = 0;
              uint64_t v39 = 0LL;
              do
              {
                BOOL v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                int v40 = *(_BYTE *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_141;
                }
                v37 += 7;
                __int16 v35 = v2;
                int v14 = v38++ > 8;
              }

              while (!v14);
              LODWORD(v39) = 0;
LABEL_141:
              *(_DWORD *)(a1 + 6sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v39;
              goto LABEL_147;
            case 5u:
              *(_DWORD *)(a1 + 72) |= 0x4000u;
              __int128 v41 = *((void *)this + 1);
              BOOL v2 = *((void *)this + 2);
              char v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5LL || v41 + 10 > v2)
              {
                char v63 = 0;
                uint64_t v64 = 0;
                uint64_t v45 = 0LL;
                if (v2 <= v41) {
                  BOOL v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((_BYTE *)this + 24) = 1;
                    goto LABEL_146;
                  }

                  uint64_t v65 = v41++;
                  unint64_t v66 = *(_BYTE *)(v42 + v65);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  int v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_145:
                    BOOL v2 = v65 + 1;
                    goto LABEL_146;
                  }
                }

                if (*((_BYTE *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_145;
              }

              uint64_t v43 = 0;
              uint64_t v44 = 0;
              uint64_t v45 = 0LL;
              do
              {
                BOOL v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                uint64_t v46 = *(_BYTE *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_146;
                }
                v43 += 7;
                __int128 v41 = v2;
                int v14 = v44++ > 8;
              }

              while (!v14);
              LODWORD(v45) = 0;
LABEL_146:
              *(_DWORD *)(a1 + 64) = v45;
LABEL_147:
              uint64_t v3 = *((void *)this + 2);
              id v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(_DWORD *)(a1 + 72) |= 4u;
              BOOL v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 7u:
              *(_DWORD *)(a1 + 72) |= 0x20u;
              BOOL v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 8u:
              *(_DWORD *)(a1 + 72) |= 8u;
              BOOL v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 9u:
              *(_DWORD *)(a1 + 72) |= 0x10u;
              BOOL v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xAu:
              *(_DWORD *)(a1 + 72) |= 0x1000u;
              BOOL v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + sub_10000AE14(v25 - 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xBu:
              *(_DWORD *)(a1 + 72) |= 0x800u;
              BOOL v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xCu:
              *(_DWORD *)(a1 + 72) |= 0x400u;
              BOOL v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 4_Block_object_dispose(va, 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xDu:
              *(_DWORD *)(a1 + 72) |= 0x200u;
              BOOL v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xEu:
              *(_DWORD *)(a1 + 72) |= 0x40u;
              BOOL v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0xFu:
              *(_DWORD *)(a1 + 72) |= 0x80u;
              BOOL v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_86;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_126;
            case 0x10u:
              *(_DWORD *)(a1 + 72) |= 0x100u;
              BOOL v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_DWORD *)(*(void *)this + v2);
LABEL_126:
                BOOL v2 = *((void *)this + 1) + 4LL;
                *((void *)this + 1) = v2;
              }

              else
              {
LABEL_86:
                *((_BYTE *)this + 24) = 1;
              }

              goto LABEL_147;
            case 0x11u:
              *(_DWORD *)(a1 + 72) |= 0x10000u;
              BOOL v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                std::string v48 = 0;
                *((_BYTE *)this + 24) = 1;
              }

              else
              {
                int v47 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                std::string v48 = v47 != 0;
              }

              *(_BYTE *)(a1 + 69) = v48;
              goto LABEL_147;
            case 0x12u:
              *(_DWORD *)(a1 + 72) |= 0x8000u;
              BOOL v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                uint64_t v50 = 0;
                *((_BYTE *)this + 24) = 1;
              }

              else
              {
                uint64_t v49 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                uint64_t v50 = v49 != 0;
              }

              *(_BYTE *)(a1 + 6_Block_object_dispose(va, 8) = v50;
              goto LABEL_147;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!(_DWORD)result) {
                return result;
              }
              BOOL v2 = *((void *)this + 1);
              goto LABEL_147;
          }
        }

        id v4 = 0;
      }

      break;
    }
  }

  return v4 == 0;
}

  uint64_t result = *(float *)(a2 + 264);
  v5 |= 0x80000000000000uLL;
  char *v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 264) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x1000000000LL) == 0)
  {
LABEL_66:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_133;
  }

  PB::TextFormatter::format(this, "lgDurationXYBiggestImpact", *(float *)(a1 + 292));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x8000000000000000LL) == 0)
  {
LABEL_65:
    if ((v7 & 1) == 0) {
      goto LABEL_66;
    }
    goto LABEL_133;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 264), 0x3Du);
  uint64_t v6 = *v4;
  if ((*v4 & 0x1000000000LL) == 0)
  {
LABEL_66:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_133;
  }

  uint64_t result = *(float *)(a2 + 136);
  v5 |= 0x80000000uLL;
  char *v2 = v5;
  *(_WORD *)(a1 + 28_Block_object_dispose(va, 8) = v6;
  *(float *)(a1 + 136) = result;
  id v4 = *v3;
  uint64_t v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000000000LL) == 0)
  {
LABEL_58:
    if ((v4 & 0x4000000000LL) == 0) {
      goto LABEL_59;
    }
    goto LABEL_133;
  }

  PB::TextFormatter::format(this, "lowSenseWithAudioMaxPulseThreshold", *(float *)(a1 + 180));
  uint64_t v6 = *v5;
  uint64_t v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80000000000LL) == 0)
  {
LABEL_57:
    if ((v6 & 0x100000000000LL) == 0) {
      goto LABEL_58;
    }
    goto LABEL_133;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164), 0x34u);
  uint64_t v5 = *v4;
  uint64_t v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x20) == 0)
  {
LABEL_57:
    if ((v5 & 0x1000000000000000LL) == 0) {
      goto LABEL_58;
    }
    goto LABEL_133;
  }

  uint64_t result = *(float *)(a2 + 56);
  v5 |= 0x800uLL;
  char *v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + sub_10000AE14(v25 - 56) = result;
  LOWORD(v_Block_object_dispose(va, 8) = *(_WORD *)(a2 + 324);
  id v4 = *v3;
  if ((*v3 & 0x200) == 0)
  {
LABEL_51:
    if ((v4 & 0x100) == 0) {
      goto LABEL_52;
    }
    goto LABEL_133;
  }

  PB::TextFormatter::format(this, "kRegimeNormThresholdROWOASF", *(float *)(a1 + 164));
  uint64_t v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000LL) == 0)
  {
LABEL_50:
    if ((v6 & 0x10000000000LL) == 0) {
      goto LABEL_51;
    }
    goto LABEL_133;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0xF1u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200) == 0)
  {
LABEL_51:
    if ((v5 & 0x100) == 0) {
      goto LABEL_52;
    }
    goto LABEL_133;
  }

  char v20 = *(void *)(a2 + 8);
  v5 |= 1uLL;
  char *v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(void *)(a1 + _Block_object_dispose(va, 8) = v20;
  id v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_26:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_133;
  }

  PB::TextFormatter::format(this, "isLowSensRolloverCrashDetected", *(_BYTE *)(a1 + 329));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x80000) == 0)
  {
LABEL_30:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_133;
  }

  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0x66u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x4000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_133;
  }

  uint64_t v62 = *(_DWORD *)(a2 + 120);
  v3 |= 0x1000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v62;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  BOOL v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100000) == 0)
  {
LABEL_53:
    if ((v2 & 0x100000000LL) == 0) {
      goto LABEL_54;
    }
    goto LABEL_133;
  }

  PB::TextFormatter::format(this, "kPassthruRO0", *(_BYTE *)(a1 + 189));
  uint64_t v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 8) == 0)
  {
LABEL_52:
    if ((v6 & 0x10) == 0) {
      goto LABEL_53;
    }
    goto LABEL_133;
  }

  uint64_t result = PB::Writer::write(this, *(_BYTE *)(v3 + 158), 0x455u);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  id v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x8000) == 0)
  {
LABEL_53:
    if ((v4 & 0x8000000000LL) == 0) {
      goto LABEL_54;
    }
    goto LABEL_133;
  }

          id v4 = *((void *)this + 1);
          uint64_t v5 = *((void *)this + 2);
          uint64_t v6 = *((unsigned __int8 *)this + 24);
          if (v4 >= v5 || v6 != 0) {
            return v6 == 0;
          }
          break;
        case 7u:
          *(_WORD *)(a1 + 76) |= 0x40u;
          uint64_t v45 = *((void *)this + 1);
          if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v45);
          goto LABEL_129;
        case 8u:
          *(_WORD *)(a1 + 76) |= 0x80u;
          uint64_t v46 = *((void *)this + 1);
          if (v46 > 0xFFFFFFFFFFFFFFFBLL || v46 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 6_Block_object_dispose(va, 8) = *(_DWORD *)(*(void *)this + v46);
          goto LABEL_129;
        case 9u:
          *(_WORD *)(a1 + 76) |= 0x100u;
          int v47 = *((void *)this + 1);
          std::string v48 = *((void *)this + 2);
          uint64_t v49 = *(void *)this;
          if (v47 <= 0xFFFFFFFFFFFFFFF5LL && v47 + 10 <= v48)
          {
            uint64_t v50 = 0;
            char v51 = 0;
            int v52 = 0LL;
            do
            {
              __int128 v53 = v47 + 1;
              *((void *)this + 1) = v47 + 1;
              __int128 v54 = *(_BYTE *)(v49 + v47);
              v52 |= (unint64_t)(v54 & 0x7F) << v50;
              if ((v54 & 0x80) == 0) {
                goto LABEL_113;
              }
              v50 += 7;
              int v47 = v53;
              uint64_t v18 = v51++ > 8;
            }

            while (!v18);
LABEL_93:
            LODWORD(v52) = 0;
            goto LABEL_113;
          }

          unint64_t v66 = 0;
          __int16 v67 = 0;
          int v52 = 0LL;
          if (v48 <= v47) {
            std::string v48 = *((void *)this + 1);
          }
          while (2)
          {
            if (v48 == v47)
            {
              LODWORD(v52) = 0;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              int v68 = v47 + 1;
              __int16 v69 = *(_BYTE *)(v49 + v47);
              *((void *)this + 1) = v68;
              v52 |= (unint64_t)(v69 & 0x7F) << v66;
              if (v69 < 0)
              {
                v66 += 7;
                int v47 = v68;
                uint64_t v18 = v67++ > 8;
                if (v18) {
                  goto LABEL_93;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v52) = 0;
              }
            }

            break;
          }

void sub_100524370( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, void *a32, uint64_t a33, int a34, __int16 a35, char a36, char a37)
{
  *(void *)(v38 - 144) = v37 + 16;
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id **sub_100524440(id **result, int a2)
{
  if (a2)
  {
    BOOL v2 = result;
    uint64_t v3 = result[4];
    v8[0] = 2;
    (*((void (**)(id *, _DWORD *, id **, void, uint64_t, void))*v3 + 19))( v3,  v8,  result + 5,  0LL,  0xFFFFFFFFLL,  0LL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    id v4 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = v2 + 10;
      v8[0] = 68289283;
      v8[1] = 0;
      __int16 v9 = 2082;
      uint64_t v10 = "";
      __int16 v11 = 2081;
      uint64_t v12 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:@iB: Launching application for notification (if necessary), bundle:%{private, locat ion:escape_only}s}",  (uint8_t *)v8,  0x1Cu);
    }

    id v6 = objc_msgSend(objc_msgSend(v3[4], "vendor"), "proxyForService:", @"CLApplicationLifecycleManager");
    uint64_t v7 = v2 + 10;
    return (id **)objc_msgSend( v6,  "launchApplication:requiringAuthForServiceMask:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v7),  1);
  }

  return result;
}

_BYTE *sub_1005245B4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_DWORD *)(a2 + 160);
  *(void *)(a1 + 16_Block_object_dispose(va, 8) = &off_10182CE18;
  uint64_t result = (_BYTE *)(a1 + 176);
  if (*(char *)(a2 + 199) < 0)
  {
    uint64_t result = sub_1010DD48C(result, *(void **)(a2 + 176), *(void *)(a2 + 184));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 176);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(_OWORD *)uint64_t result = v5;
  }

  *(void *)(a1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(a2 + 200);
  uint64_t v6 = *(void *)(a2 + 208);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(void *)(a1 + 20_Block_object_dispose(va, 8) = v6;
  return result;
}

void sub_100524648(_Unwind_Exception *a1)
{
}

uint64_t sub_10052465C(uint64_t a1)
{
  *(void *)(a1 + 16_Block_object_dispose(va, 8) = &off_10182CE18;
  return sub_1002722AC(a1 + 40);
}

void sub_10052469C(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 4 && *(_DWORD *)(a4 + 188) == 0)
  {
    uint64_t v6 = *(void *)(a1 + 328);
    if (v6)
    {
      sub_10050DBBC(v6);
    }

    else
    {
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183EE90);
      }
      uint64_t v7 = (os_log_s *)qword_101934848;
      if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "iB: Warning data can't be cleared yet",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934840 != -1) {
          dispatch_once(&qword_101934840, &stru_10183EE90);
        }
        v9[0] = 0;
        uint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  0LL,  "iB: Warning data can't be cleared yet",  v9,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEFenceManagerConcrete::onClientManagerNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v8);
      }

      *(_BYTE *)(a1 + 29_Block_object_dispose(va, 8) = 1;
    }
  }

void sub_100524880(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if ((*a3 - 1) >= 3)
  {
    if (*a3 == 4)
    {
      *(_DWORD *)(a1 + 184) = *(_DWORD *)a4;
      std::string::operator=((std::string *)(a1 + 192), (const std::string *)(a4 + 8));
      std::string::operator=((std::string *)(a1 + 216), (const std::string *)(a4 + 32));
      std::string::operator=((std::string *)(a1 + 240), (const std::string *)(a4 + 56));
      std::string::operator=((std::string *)(a1 + 264), (const std::string *)(a4 + 80));
      *(_WORD *)(a1 + 28_Block_object_dispose(va, 8) = *(_WORD *)(a4 + 104);
    }

    return;
  }

  uint64_t v6 = *(unsigned __int8 *)(a4 + 31);
  if ((v6 & 0x80u) == 0LL) {
    uint64_t v7 = *(unsigned __int8 *)(a4 + 31);
  }
  else {
    uint64_t v7 = *(void *)(a4 + 16);
  }
  uint64_t v8 = *(unsigned __int8 *)(a1 + 215);
  int v9 = (char)v8;
  if ((v8 & 0x80u) != 0LL) {
    uint64_t v8 = *(void *)(a1 + 200);
  }
  if (v7 != v8) {
    return;
  }
  uint64_t v10 = (const void **)(a4 + 8);
  uint64_t v12 = (void *)(a1 + 192);
  __int16 v11 = *(void **)(a1 + 192);
  if (v9 >= 0) {
    uint64_t v13 = (unsigned __int8 *)(a1 + 192);
  }
  else {
    uint64_t v13 = *(unsigned __int8 **)(a1 + 192);
  }
  if ((v6 & 0x80) != 0)
  {
    if (memcmp(*v10, v13, *(void *)(a4 + 16))) {
      return;
    }
    goto LABEL_19;
  }

  if (!*(_BYTE *)(a4 + 31))
  {
LABEL_19:
    *(_DWORD *)(a1 + 184) = -1;
    if (v9 < 0) {
      operator delete(v11);
    }
    int v14 = (void **)(a1 + 216);
    *uint64_t v12 = 0LL;
    *(void *)(a1 + 20sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
    *(void *)(a1 + 20_Block_object_dispose(va, 8) = 0LL;
    int v15 = (void **)(a1 + 240);
    *int v14 = 0LL;
    *(void *)(a1 + 224) = 0LL;
    *(void *)(a1 + 232) = 0LL;
    int v16 = (void **)(a1 + 264);
    void *v15 = 0LL;
    *(void *)(a1 + 24_Block_object_dispose(va, 8) = 0LL;
    *(void *)(a1 + sub_1004C7BE0(v1 - 256) = 0LL;
    os_log_s *v16 = 0LL;
    *(void *)(a1 + 2sub_1000A56E8(v1 + 72) = 0LL;
    *(_WORD *)(a1 + 28_Block_object_dispose(va, 8) = 0;
    *(void *)(a1 + 28sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
    return;
  }

  while (*(unsigned __int8 *)v10 == *v13)
  {
    uint64_t v10 = (const void **)((char *)v10 + 1);
    ++v13;
    if (!--v6) {
      goto LABEL_19;
    }
  }

void sub_1005249F4(uint64_t a1, uint64_t a2, _DWORD *a3, _BYTE *a4)
{
  BOOL v4 = *a3 != 10 || *a4 == 0;
  if (!v4)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    uint64_t v6 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v33 = 2082;
      *(void *)&unsigned int v33[2] = "";
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Received display on notification}",  buf,  0x12u);
    }

    v31[0] = 0LL;
    v31[1] = 0LL;
    __int128 v30 = v31;
    uint64_t v7 = *(void **)(a1 + 160);
    if (v7 != (void *)(a1 + 168))
    {
      do
      {
        if (*((_DWORD *)v7 + 24) == 2)
        {
          uint64_t v8 = (void *)v7[9];
          if (v8 != v7 + 10)
          {
            do
            {
              if ((v8[18] & 4) != 0)
              {
                if (qword_101934840 != -1) {
                  dispatch_once(&qword_101934840, &stru_10183EE90);
                }
                int v9 = (os_log_s *)qword_101934848;
                if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
                {
                  (*(void (**)(void **__return_ptr, void *))(v8[4] + 16LL))(__p, v8 + 4);
                  uint64_t v10 = __p;
                  if (v29 < 0) {
                    uint64_t v10 = (void **)__p[0];
                  }
                  *(_DWORD *)std::string buf = 68289283;
                  *(_DWORD *)&uint8_t buf[4] = 0;
                  *(_WORD *)uint64_t v33 = 2082;
                  *(void *)&unsigned int v33[2] = "";
                  *(_WORD *)&v33[10] = 2081;
                  *(void *)&v33[12] = v10;
                  _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:@iB: Display turned on, notifying region, region:%{private, location:escape_only}s}",  buf,  0x1Cu);
                  if (v29 < 0) {
                    operator delete(__p[0]);
                  }
                }

                memset(v33, 0, sizeof(v33));
                *(void *)std::string buf = off_10182CDC8;
                memset(v34, 0, sizeof(v34));
                memset(&v35, 0, sizeof(v35));
                uint64_t v38 = &off_10182CE18;
                __int128 v39 = 0u;
                __int128 v40 = 0u;
                int v37 = 0;
                v41[0] = 1;
                std::string::operator=((std::string *)v33, (const std::string *)(v8 + 5));
                *(void *)&_BYTE v33[24] = v8[8];
                std::string::operator=(v34, (const std::string *)v8 + 3);
                std::string::operator=(&v34[1], (const std::string *)v8 + 4);
                std::string::operator=(&v35, (const std::string *)v8 + 5);
                int v36 = *((_DWORD *)v8 + 36);
                v41[0] = 2;
                LODWORD(__p[0]) = 3;
                (*(void (**)(uint64_t, void **, uint8_t *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  __p,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
                __p[0] = v8 + 4;
                __int16 v11 = sub_100529690((uint64_t **)(a1 + 304), (uint64_t)(v8 + 4), (uint64_t)&unk_1012CF090, (uint64_t *)__p);
                int v26 = -1;
                int v27 = -1;
                __p[0] = COERCE_VOID_(CFAbsoluteTimeGetCurrent());
                int v25 = 1;
                uint64_t v12 = sub_1005297FC((uint64_t)(v11 + 19), 0LL, 0LL, v41, (uint64_t)&v38, &v27, &v26, (double *)__p, &v25);
                v12[1] = v11 + 19;
                uint64_t v13 = v11[19];
                *uint64_t v12 = v13;
                *(void *)(v13 + _Block_object_dispose(va, 8) = v12;
                v11[19] = (uint64_t)v12;
                ++v11[21];
                sub_10002276C((uint64_t **)&v30, (const void **)v8 + 9, (uint64_t)(v8 + 9));
                uint64_t v38 = &off_10182CE18;
                if (SBYTE7(v40) < 0) {
                  operator delete((void *)v39);
                }
                sub_1002722AC((uint64_t)buf);
              }

              int v14 = (void *)v8[1];
              if (v14)
              {
                do
                {
                  int v15 = v14;
                  int v14 = (void *)*v14;
                }

                while (v14);
              }

              else
              {
                do
                {
                  int v15 = (void *)v8[2];
                  BOOL v4 = *v15 == (void)v8;
                  uint64_t v8 = v15;
                }

                while (!v4);
              }

              uint64_t v8 = v15;
            }

            while (v15 != v7 + 10);
          }
        }

        int v16 = (void *)v7[1];
        if (v16)
        {
          do
          {
            int v17 = v16;
            int v16 = (void *)*v16;
          }

          while (v16);
        }

        else
        {
          do
          {
            int v17 = (void *)v7[2];
            BOOL v4 = *v17 == (void)v7;
            uint64_t v7 = v17;
          }

          while (!v4);
        }

        uint64_t v7 = v17;
      }

      while (v17 != (void *)(a1 + 168));
      uint64_t v18 = (uint64_t *)v30;
      if (v30 != v31)
      {
        do
        {
          if (qword_101934840 != -1) {
            dispatch_once(&qword_101934840, &stru_10183EE90);
          }
          BOOL v19 = (os_log_s *)qword_101934848;
          if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEFAULT))
          {
            char v20 = v18 + 4;
            *(_DWORD *)std::string buf = 68289283;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)uint64_t v33 = 2082;
            *(void *)&unsigned int v33[2] = "";
            *(_WORD *)&v33[10] = 2081;
            *(void *)&v33[12] = v20;
            _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:@iB: Launching application for notification (if necessary), bundle:%{private, location:escape_only}s}",  buf,  0x1Cu);
          }

          id v21 = objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLApplicationLifecycleManager");
          int v22 = v18 + 4;
          objc_msgSend( v21,  "launchApplication:requiringAuthForServiceMask:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v22),  1);
          id v23 = (char *)v18[1];
          if (v23)
          {
            do
            {
              uint64_t v24 = (char **)v23;
              id v23 = *(char **)v23;
            }

            while (v23);
          }

          else
          {
            do
            {
              uint64_t v24 = (char **)v18[2];
              BOOL v4 = *v24 == (char *)v18;
              uint64_t v18 = (uint64_t *)v24;
            }

            while (!v4);
          }

          uint64_t v18 = (uint64_t *)v24;
        }

        while (v24 != v31);
      }
    }

    sub_1000229D4((uint64_t)&v30, v31[0]);
  }

void sub_100524FB0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28, char *a29)
{
}

void *sub_100524FE8@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_100525060(uint64_t **a1, unsigned int a2, int *a3, const std::string *a4)
{
  HIDWORD(v35) = sub_1005256EC((uint64_t)a1, a2, a3, a4);
  if (HIDWORD(v35))
  {
    std::string::size_type size = a4->__r_.__value_.__s.__size_;
    if ((size & 0x80u) != 0LL) {
      std::string::size_type size = a4->__r_.__value_.__l.__size_;
    }
    BOOL v7 = size && *a3 == 2;
    if (v7)
    {
      double Current = CFAbsoluteTimeGetCurrent();
      int v9 = a1[38];
      if (v9 != (uint64_t *)(a1 + 39))
      {
        double v10 = Current;
        while (1)
        {
          __int16 v11 = (double *)v9[20];
LABEL_62:
          if (v9[21])
          {
            char v32 = (uint64_t *)v9[1];
            if (v32)
            {
              do
              {
                uint64_t v33 = v32;
                char v32 = (uint64_t *)*v32;
              }

              while (v32);
            }

            else
            {
              do
              {
                uint64_t v33 = (uint64_t *)v9[2];
                BOOL v7 = *v33 == (void)v9;
                int v9 = v33;
              }

              while (!v7);
            }
          }

          else
          {
            uint64_t v33 = sub_100529AD4(a1 + 38, v9);
          }

          int v9 = v33;
        }

        while (1)
        {
          if (v11[9] + 20.0 >= v10)
          {
            uint64_t v18 = *((unsigned __int8 *)v9 + 95);
            if ((v18 & 0x80u) == 0LL) {
              uint64_t v19 = *((unsigned __int8 *)v9 + 95);
            }
            else {
              uint64_t v19 = v9[10];
            }
            std::string::size_type v20 = a4->__r_.__value_.__s.__size_;
            int v21 = (char)v20;
            if ((v20 & 0x80u) != 0LL) {
              std::string::size_type v20 = a4->__r_.__value_.__l.__size_;
            }
            if (v19 == v20)
            {
              if (v21 >= 0) {
                int v22 = a4;
              }
              else {
                int v22 = (const std::string *)a4->__r_.__value_.__r.__words[0];
              }
              if ((v18 & 0x80) != 0)
              {
                if (!memcmp((const void *)v9[9], v22, v9[10]))
                {
LABEL_39:
                  if (qword_101934840 != -1) {
                    dispatch_once(&qword_101934840, &stru_10183EE90);
                  }
                  uint64_t v24 = (os_log_s *)qword_101934848;
                  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_INFO))
                  {
                    sub_100271C40((uint64_t)(v9 + 4), &buf);
                    p_std::stringbuf::string_type buf = &buf;
                    if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
                    }
                    int v26 = *((_DWORD *)v11 + 4);
                    int v27 = *((_DWORD *)v11 + 20);
                    __int128 __p = (void *)68289795;
                    *(_WORD *)uint64_t v44 = 2082;
                    *(void *)&v44[2] = "";
                    *(_WORD *)&v44[10] = 2081;
                    *(void *)&v44[12] = p_buf;
                    *(_WORD *)&v44[20] = 1025;
                    *(_DWORD *)&v44[22] = v26;
                    *(_WORD *)&v44[26] = 1025;
                    *(_DWORD *)&v44[28] = v27;
                    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:iB: Sending cached notification for fence, region:%{private, location :escape_only}s, state:%{private}d, type:%{private}d}",  (uint8_t *)&__p,  0x28u);
                  }

                  memset(v44, 0, sizeof(v44));
                  __int128 __p = off_10182CDC8;
                  memset(v45, 0, sizeof(v45));
                  memset(&v46, 0, sizeof(v46));
                  int v48 = 0;
                  uint64_t v49 = &off_10182CE18;
                  __int128 v50 = 0u;
                  __int128 v51 = 0u;
                  int v52 = 1;
                  std::string::operator=((std::string *)v44, (const std::string *)(v9 + 5));
                  *(void *)&v44[24] = v9[8];
                  std::string::operator=(v45, (const std::string *)v9 + 3);
                  std::string::operator=(&v45[1], (const std::string *)v9 + 4);
                  std::string::operator=(&v46, (const std::string *)v9 + 5);
                  int v47 = *((_DWORD *)v9 + 36);
                  int v52 = *((_DWORD *)v11 + 4);
                  uint64_t v53 = *((void *)v11 + 8);
                  if (*((_DWORD *)v11 + 20))
                  {
                    LODWORD(buf.__r_.__value_.__l.__data_) = 3;
                  }

                  else
                  {
                    std::string::operator=((std::string *)&v50, (const std::string *)(v11 + 4));
                    *((double *)&v51 + 1) = v11[7];
                    LODWORD(buf.__r_.__value_.__l.__data_) = 2;
                  }

                  ((void (*)(uint64_t **, std::stringbuf::string_type *, void **, void, void, void))(*a1)[19])( a1,  &buf,  &__p,  0LL,  a2,  0LL);
                  __int16 v11 = (double *)*((void *)v11 + 1);
                  uint64_t v49 = &off_10182CE18;
                  if (SBYTE7(v51) < 0) {
                    operator delete((void *)v50);
                  }
                  sub_1002722AC((uint64_t)&__p);
                  goto LABEL_52;
                }
              }

              else
              {
                if (!*((_BYTE *)v9 + 95)) {
                  goto LABEL_39;
                }
                id v23 = (unsigned __int8 *)(v9 + 9);
                while (*v23 == v22->__r_.__value_.__s.__data_[0])
                {
                  ++v23;
                  int v22 = (const std::string *)((char *)v22 + 1);
                  if (!--v18) {
                    goto LABEL_39;
                  }
                }
              }
            }

            __int16 v11 = (double *)*((void *)v11 + 1);
          }

          else
          {
            if (qword_101934840 != -1) {
              dispatch_once(&qword_101934840, &stru_10183EE90);
            }
            uint64_t v12 = (int *)(v11 + 2);
            uint64_t v13 = (os_log_s *)qword_101934848;
            if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
            {
              sub_100271C40((uint64_t)(v9 + 4), (std::stringbuf::string_type *)&__p);
              p_p = &__p;
              if (v44[15] < 0) {
                p_p = __p;
              }
              int v15 = *v12;
              LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
              WORD2(buf.__r_.__value_.__r.__words[1]) = 1025;
              *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "iB: Pending notification for fence,%{private}s, state,%{private}d, has expired",  (uint8_t *)&buf,  0x12u);
              if ((v44[15] & 0x80000000) != 0) {
                operator delete(__p);
              }
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(&__p, 0x65CuLL);
              if (qword_101934840 != -1) {
                dispatch_once(&qword_101934840, &stru_10183EE90);
              }
              uint64_t v28 = qword_101934848;
              sub_100271C40((uint64_t)(v9 + 4), &buf);
              char v29 = &buf;
              if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                char v29 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
              }
              int v30 = *v12;
              int v39 = 136380931;
              __int128 v40 = v29;
              __int16 v41 = 1025;
              int v42 = v30;
              LODWORD(v35) = 18;
              uint64_t v31 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v28,  2LL,  "iB: Pending notification for fence,%{private}s, state,%{private}d, has expired",  &v39,  v35);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLBTLEFenceManagerConcrete::registerForNotification(int, const CLBTLEFenceManager_Type::Not ification &, const std::string &)",  "%s\n",  v31);
            }

            uint64_t v16 = *(void *)v11;
            int v17 = (double *)*((void *)v11 + 1);
            *(void *)(v16 + _Block_object_dispose(va, 8) = v17;
            **((void **)v11 + 1) = v16;
            --v9[21];
            sub_100527DDC((uint64_t)(v11 + 2));
            operator delete(v11);
            __int16 v11 = v17;
          }

void sub_1005256C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
}

BOOL sub_1005256EC(uint64_t a1, int a2, int *a3, const std::string *a4)
{
  int v40 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        uint64_t v13 = (uint64_t *)v7;
      }
      else {
        uint64_t v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v39 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          id v23 = (uint64_t *)v17;
        }
        else {
          id v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }

      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          uint64_t v28 = (uint64_t *)v24;
        }
        else {
          uint64_t v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }

      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        *(void *)__int16 v41 = v25;
        uint64_t v33 = *(void *)(v25 + 56);
        *(void *)std::stringbuf::string_type buf = &v40;
        char v34 = sub_1004C2E20((uint64_t **)(v25 + 40), &v40, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        std::string::operator=((std::string *)(v34 + 5), a4);
        __int128 v45 = 0u;
        *(_OWORD *)&uint8_t buf[8] = 0u;
        *(void *)std::stringbuf::string_type buf = off_10182CDC8;
        __int128 v46 = 0u;
        __int128 v47 = 0u;
        __int128 v48 = 0u;
        __int128 v49 = 0u;
        uint64_t v50 = 0LL;
        int v52 = &off_10182CE18;
        __int128 v53 = 0u;
        __int128 v54 = 0u;
        int v51 = 0;
        int v55 = 1;
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          uint64_t v35 = sub_100529984((uint64_t)buf);
          sub_100528394((_BYTE *)a1, (uint64_t)&v39, (uint64_t)v41, v35);
        }

        int v52 = &off_10182CE18;
        if (SBYTE7(v54) < 0) {
          operator delete((void *)v53);
        }
        sub_1002722AC((uint64_t)buf);
        if (v33) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        *(void *)__int16 v41 = a1 + 64;
        char v29 = byte_101938610;
        HIDWORD(v3_Block_object_dispose(va, 8) = v16;
        *(void *)std::stringbuf::string_type buf = (char *)&v38 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v38 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v29;
        HIDWORD(v3_Block_object_dispose(va, 8) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v38 + 4;
        int v30 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v38 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v30 + 8);
        HIDWORD(v3_Block_object_dispose(va, 8) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v38 + 4;
        uint64_t v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v38 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::stringbuf::string_type buf = &v40;
        char v32 = sub_1004C2E20(v31 + 5, &v40, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        std::string::operator=((std::string *)(v32 + 5), a4);
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v20 == v18)
      {
        *(_DWORD *)std::stringbuf::string_type buf = *a3;
        sub_10004A8FC((uint64_t **)(v39 + 40), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183EE70);
  }
  int v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    int v15 = (void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&_BYTE buf[14] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    int v36 = (void *)(a1 + 8);
    *(_DWORD *)__int16 v41 = 136446466;
    *(void *)&int v41[4] = v36;
    __int16 v42 = 1026;
    int v43 = a2;
    LODWORD(v3_Block_object_dispose(va, 8) = 18;
    int v37 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                    v41,
                    v38);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLBTLEFenceManager_Type::Notification, CLBTLEFenceManager_Type::NotificationData, char, st d::string>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLB TLEFenceManager_Type::Notification, NotificationData_T = CLBTLEFenceManager_Type::NotificationData, NotificationIn fo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v37);
    if (v37 != buf) {
      free(v37);
    }
    return 0LL;
  }

  return result;
}

void sub_100525BC8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

BOOL sub_100525BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6)
{
  uint64_t v6 = a6[23];
  uint64_t v7 = *((void *)a6 + 1);
  if ((v6 & 0x80u) == 0LL) {
    uint64_t v8 = a6[23];
  }
  else {
    uint64_t v8 = *((void *)a6 + 1);
  }
  uint64_t v9 = *(unsigned __int8 *)(a4 + 63);
  int v10 = (char)v9;
  if ((v9 & 0x80u) != 0LL) {
    uint64_t v9 = *(void *)(a4 + 48);
  }
  if (v8 != v9) {
    return v8 == 0;
  }
  uint64_t v13 = *(unsigned __int8 **)(a4 + 40);
  int v11 = (unsigned __int8 *)(a4 + 40);
  BOOL v12 = v13;
  if (v10 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v12;
  }
  if ((v6 & 0x80) != 0)
  {
    int v15 = memcmp(*(const void **)a6, v14, *((void *)a6 + 1));
    uint64_t v8 = v7;
    if (!v15) {
      return 1LL;
    }
    return v8 == 0;
  }

  if (a6[23])
  {
    while (*a6 == *v14)
    {
      ++a6;
      ++v14;
      if (!--v6) {
        return 1LL;
      }
    }

    return v8 == 0;
  }

  return 1LL;
}

uint64_t sub_100525C8C()
{
  return 1LL;
}

uint64_t sub_100525C94()
{
  return 1LL;
}

void sub_100525C9C(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 1)
  {
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    uint64_t v6 = (os_log_s *)qword_101934848;
    if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *(unsigned __int8 *)(a1 + 297);
      int v8 = *(unsigned __int8 *)(a4 + 4);
      BOOL v9 = *(void *)(a1 + 328) == 0LL;
      *(_DWORD *)std::stringbuf::string_type buf = 67240704;
      *(_DWORD *)&uint8_t buf[4] = v7;
      LOWORD(v3sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1026;
      *(_DWORD *)((char *)&v30 + 2) = v8;
      HIWORD(v3sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 1026;
      LODWORD(v31) = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "iB: state kNotificationDeviceUnlockedSinceBoot, from, %{public}d, to, %{public}d, start, %{public}d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934840 != -1) {
        dispatch_once(&qword_101934840, &stru_10183EE90);
      }
      int v20 = *(unsigned __int8 *)(a1 + 297);
      int v21 = *(unsigned __int8 *)(a4 + 4);
      BOOL v22 = *(void *)(a1 + 328) == 0LL;
      LODWORD(v24) = 67240704;
      HIDWORD(v24) = v20;
      __int16 v25 = 1026;
      int v26 = v21;
      __int16 v27 = 1026;
      BOOL v28 = v22;
      id v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: state kNotificationDeviceUnlockedSinceBoot, from, %{public}d, to, %{public}d, start, %{public}d",  &v24,  20);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEFenceManagerConcrete::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notificat ion &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v23);
    }

    int v10 = *(unsigned __int8 *)(a4 + 4);
    *(_BYTE *)(a1 + 297) = v10;
    if (v10)
    {
      [*(id *)(*(void *)(a1 + 136) + 16) unregister:*(void *)(*(void *)(a1 + 136) + 8) forNotification:1];
      sub_100525FFC(a1, (uint64_t)"kNotificationDeviceUnlockedSinceBoot");
      if (*(void *)(a1 + 176))
      {
        *(void *)std::stringbuf::string_type buf = 0LL;
        unint64_t v30 = 0LL;
        unint64_t v31 = 0LL;
        int v11 = *(void **)(a1 + 160);
        if (v11 != (void *)(a1 + 168))
        {
          unint64_t v12 = 0LL;
          do
          {
            uint64_t v13 = (void *)v11[9];
            if (v13 != v11 + 10)
            {
              do
              {
                uint64_t v14 = (uint64_t)(v13 + 4);
                if (v12 >= v31)
                {
                  unint64_t v12 = sub_100529BAC((uint64_t *)buf, v14);
                }

                else
                {
                  sub_100272138(v12, v14);
                  v12 += 120LL;
                }

                unint64_t v30 = v12;
                int v15 = (void *)v13[1];
                if (v15)
                {
                  do
                  {
                    int v16 = v15;
                    int v15 = (void *)*v15;
                  }

                  while (v15);
                }

                else
                {
                  do
                  {
                    int v16 = (void *)v13[2];
                    BOOL v17 = *v16 == (void)v13;
                    uint64_t v13 = v16;
                  }

                  while (!v17);
                }

                uint64_t v13 = v16;
              }

              while (v16 != v11 + 10);
            }

            uint64_t v18 = (void *)v11[1];
            if (v18)
            {
              do
              {
                uint64_t v19 = v18;
                uint64_t v18 = (void *)*v18;
              }

              while (v18);
            }

            else
            {
              do
              {
                uint64_t v19 = (void *)v11[2];
                BOOL v17 = *v19 == (void)v11;
                int v11 = v19;
              }

              while (!v17);
            }

            int v11 = v19;
          }

          while (v19 != (void *)(a1 + 168));
        }

        sub_10050F1B4(*(void *)(a1 + 328), (uint64_t *)buf);
        uint64_t v24 = buf;
        sub_100529B20((void ***)&v24);
      }
    }
  }

void sub_100525FC8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  a11 = (void **)&a15;
  sub_100529B20(&a11);
  _Unwind_Resume(a1);
}

void sub_100525FFC(uint64_t a1, uint64_t a2)
{
  if (qword_101934840 != -1) {
    dispatch_once(&qword_101934840, &stru_10183EE90);
  }
  BOOL v4 = (os_log_s *)qword_101934848;
  if (os_log_type_enabled((os_log_t)qword_101934848, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 328);
    int v6 = *(unsigned __int8 *)(a1 + 297);
    *(_DWORD *)std::stringbuf::string_type buf = 134284035;
    uint64_t v18 = v5;
    __int16 v19 = 1026;
    int v20 = v6;
    __int16 v21 = 2082;
    uint64_t v22 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "iB: createStateDatabase, fStateDatabase, %{private}p, fDeviceUnlockedSinceBoot, %{public}d, reason, %{public}s",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934840 != -1) {
      dispatch_once(&qword_101934840, &stru_10183EE90);
    }
    uint64_t v8 = *(void *)(a1 + 328);
    int v9 = *(unsigned __int8 *)(a1 + 297);
    int v11 = 134284035;
    uint64_t v12 = v8;
    __int16 v13 = 1026;
    int v14 = v9;
    __int16 v15 = 2082;
    uint64_t v16 = a2;
    int v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934848,  2LL,  "iB: createStateDatabase, fStateDatabase, %{private}p, fDeviceUnlockedSinceBoot, %{public}d, reason, %{public}s",  &v11,  28);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLBTLEFenceManagerConcrete::createStateDatabase(const char *)",  "%s\n",  v10);
  }

  if (!*(void *)(a1 + 328) && *(_BYTE *)(a1 + 297))
  {
    int v7 = operator new(0x88uLL);
    sub_10050D970((uint64_t)v7);
    sub_100527E2C((uint64_t *)(a1 + 328), (uint64_t)v7);
    if (*(_BYTE *)(a1 + 298))
    {
      sub_10050DBBC(*(void *)(a1 + 328));
      *(_BYTE *)(a1 + 29_Block_object_dispose(va, 8) = 0;
    }
  }

void sub_10052622C(_Unwind_Exception *a1)
{
}

void sub_100526248(uint64_t a1, uint64_t a2)
{
  HIDWORD(v14) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v14 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183EE70);
      }
      int v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        int v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        int v20 = v11;
        __int16 v21 = 1026;
        int v22 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10183EE70);
        }
        uint64_t v12 = (void *)(a1 + 8);
        int v15 = 136446466;
        uint64_t v16 = v12;
        __int16 v17 = 1026;
        int v18 = a2;
        LODWORD(v14) = 18;
        __int16 v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                        &v15,
                        v14);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLBTLEFenceManager_Type::Notification, CLBTLEFenceManager_Type::NotificationData, char , std::string>::removeClient(int) [Notification_T = CLBTLEFenceManager_Type::Notification, NotificationData_T = CLBTLEFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v13);
      }
    }
  }

uint64_t sub_1005264BC(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v7 = sub_100529E0C(a4);
  if (v7)
  {
    int v10 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *, id))(*(void *)a1 + 96LL))(a1, a2, &v10, v7);
  }

  else
  {
    int v9 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 88LL))(a1, a2, &v9);
  }

uint64_t sub_10052653C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_101938630);
  if ((v3 & 1) == 0)
  {
    uint64_t v9 = a1;
    uint64_t v8 = a3;
    unsigned int v7 = a2;
    int v5 = __cxa_guard_acquire(&qword_101938630);
    a2 = v7;
    a3 = v8;
    int v6 = v5;
    a1 = v9;
    if (v6)
    {
      qword_101938618 = 0LL;
      unk_101938620 = 0LL;
      qword_101938628 = 0LL;
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101938618, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101938630);
      a1 = v9;
      a2 = v7;
      a3 = v8;
    }
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &qword_101938618);
}

BOOL sub_1005265E4(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      uint64_t v9 = (uint64_t *)v5;
    }
    else {
      uint64_t v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        __int16 v21 = (uint64_t *)v15;
      }
      else {
        __int16 v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    int v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      char v29 = v11;
      __int16 v30 = 1026;
      int v31 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183EE70);
      }
      int v22 = (void *)(a1 + 8);
      int v24 = 136446466;
      __int16 v25 = v22;
      __int16 v26 = 1026;
      int v27 = a2;
      id v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                      &v24,
                      18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLBTLEFenceManager_Type::Notification, CLBTLEFenceManager_Type::NotificationData, char, std::string>::clientRegistered(int, const Notification_T &) [Notification_T = CLBTLEFenceManager_Type::Notificat ion, NotificationData_T = CLBTLEFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo _T = std::string]",  "%s\n",  v23);
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100526864(char *a1, int a2, int *a3)
{
  HIDWORD(v33) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        __int16 v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            __int16 v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                __int16 v25 = (uint64_t *)v20;
              }
              else {
                __int16 v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_10052A02C((uint64_t)(v22 + 40), (int *)&v33 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10183EE70);
              }
              __int16 v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v27 = a1 + 8;
                if (a1[31] < 0) {
                  int v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v43 >= 0) {
                  BOOL v28 = __p;
                }
                else {
                  BOOL v28 = (void **)__p[0];
                }
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v35 = 2082;
                int v36 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v43 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10183EE70);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v37 >= 0) {
                  int v31 = buf;
                }
                else {
                  int v31 = *(_BYTE **)buf;
                }
                int v38 = 136446466;
                uint64_t v39 = v29;
                __int16 v40 = 2082;
                __int16 v41 = v31;
                LODWORD(v33) = 22;
                char v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                                &v38,
                                v33);
                if (v37 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLBTLEFenceManager_Type::Notification, CLBTLEFenceManager_Type::NotificationDa ta, char, std::string>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLBTL EFenceManager_Type::Notification, NotificationData_T = CLBTLEFenceManager_Type::NotificationData, Noti ficationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v32);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100526BEC(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      int v11 = (uint64_t *)v4;
    }
    else {
      int v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }

  while (*v11);
  if (v8 == v3) {
    return 0LL;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0LL;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0LL;
  }
  std::string::operator=((std::string *)(a3 + 8), (const std::string *)(v12 + 8));
  *(void *)(a3 + 32) = *(void *)(v12 + 32);
  std::string::operator=((std::string *)(a3 + 40), (const std::string *)(v12 + 40));
  std::string::operator=((std::string *)(a3 + 64), (const std::string *)(v12 + 64));
  std::string::operator=((std::string *)(a3 + 88), (const std::string *)(v12 + 88));
  *(_DWORD *)(a3 + 112) = *(_DWORD *)(v12 + 112);
  *(_DWORD *)(a3 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_DWORD *)(v12 + 120);
  std::string::operator=((std::string *)(a3 + 136), (const std::string *)(v12 + 136));
  *(void *)(a3 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(v12 + 160);
  uint64_t v13 = *(void *)(v12 + 168);
  *(_DWORD *)(a3 + 176) = *(_DWORD *)(v12 + 176);
  *(void *)(a3 + 16_Block_object_dispose(va, 8) = v13;
  return 1LL;
}

uint64_t sub_100526CC8(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = *a2;
  uint64_t v12 = &v10;
  uint64_t v5 = sub_10023347C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_1012CF090, &v12);
  sub_10005F550((uint64_t)(v5 + 8), &v11);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    int v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  return 1LL;
}

void sub_100526D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100526D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  uint64_t v5 = off_10182CDC8;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  uint64_t v12 = 0LL;
  int v13 = 0;
  uint64_t v14 = &off_10182CE18;
  __int128 v16 = 0u;
  __int128 __p = 0u;
  int v17 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t (***)(), uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  &v5,  a3,  a4,  0LL);
  uint64_t v14 = &off_10182CE18;
  if (SBYTE7(v16) < 0) {
    operator delete((void *)__p);
  }
  return sub_1002722AC((uint64_t)&v5);
}

void sub_100526E2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100526E40(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    __int128 v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    __int128 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = (void *)(a1 + 8);
      int v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)uint64_t v65 = 0;
      *(_WORD *)&v65[4] = 2082;
      *(void *)&v65[6] = "";
      *(_WORD *)&v65[14] = 2082;
      *(void *)&v65[16] = "activity";
      __int16 v66 = 2082;
      __int16 v67 = v12;
      __int16 v68 = 2050;
      __int16 v69 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)int v70 = &v70[8];
      memset(&v70[8], 0, 24);
      __int16 v71 = 0LL;
      sub_1005285AC((uint64_t)buf, a2, (uint64_t)v70);
      int v17 = sub_100528470((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v69;
      if (v69)
      {
        p_shared_owners = (unint64_t *)&v69->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100528854((uint64_t)&v65[4], *(char **)&v65[12]);
      BOOL v24 = v71;
      if (v71)
      {
        __int16 v25 = (unint64_t *)&v71->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100528854((uint64_t)v70, *(char **)&v70[8]);
    }

    if (a4)
    {
      sub_1005288A4(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      int v27 = *(std::__shared_weak_count **)&v65[4];
      if (*(void *)&v65[4])
      {
        BOOL v28 = (unint64_t *)(*(void *)&v65[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    uint64_t v30 = sub_100527EC4(a3);
    if (a5 == -1)
    {
      sub_100527FC0((void *)a1, (int *)a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          int v36 = (uint64_t *)v32;
        }
        else {
          int v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v62 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      uint64_t v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          __int16 v42 = (unint64_t *)v37;
        }
        else {
          __int16 v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          uint64_t v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        __int128 v61 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10183EE70);
        }
        char v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v70, a1, a2);
          if (v70[23] >= 0) {
            __int128 v45 = v70;
          }
          else {
            __int128 v45 = *(_BYTE **)v70;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)uint64_t v65 = v44;
          *(_WORD *)&v65[8] = 1024;
          *(_DWORD *)&v65[10] = a5;
          *(_WORD *)&v65[14] = 2080;
          *(void *)&v65[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v70[23] & 0x80000000) != 0) {
            operator delete(*(void **)v70);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_10183EE70);
          }
          __int128 v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v60 >= 0) {
            __int128 v48 = __p;
          }
          else {
            __int128 v48 = (void **)__p[0];
          }
          *(_DWORD *)int v70 = 136315650;
          *(void *)&v70[4] = v46;
          *(_WORD *)&v70[12] = 1024;
          *(_DWORD *)&v70[14] = a5;
          *(_WORD *)&v70[18] = 2080;
          *(void *)&v70[20] = v48;
          __int128 v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
                          v70,
                          28,
                          v58);
          if (v60 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBTLEFenceManager_Type::Notification, CLBTLEFenceManager_Type::NotificationData, ch ar, std::string>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLBTLEFenceManager_Type::Notification, NotificationData_T = CLBTLEFenceManager_Type::Noti ficationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v49);
        }

        goto LABEL_83;
      }

      __int128 v61 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v52 = v39[3].n128_i64[0];
      uint64_t v50 = v39 + 3;
      int v51 = (__n128 *)v52;
      if (!v52) {
        goto LABEL_60;
      }
      int v53 = *(_DWORD *)(v33 + 32);
      __int128 v54 = v50;
      do
      {
        int v55 = v51[2].n128_i32[0];
        BOOL v56 = v55 < v53;
        if (v55 >= v53) {
          __int16 v57 = v51;
        }
        else {
          __int16 v57 = (__n128 *)&v51->n128_i8[8];
        }
        if (!v56) {
          __int128 v54 = v51;
        }
        int v51 = (__n128 *)v57->n128_u64[0];
      }

      while (v57->n128_u64[0]);
      sub_100528394((_BYTE *)a1, (uint64_t)&v62, (uint64_t)&v61, v30);
    }

void sub_10052745C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_1005274A8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    BOOL v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      int v34 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183EE70);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v29 = 136315138;
      uint64_t v30 = v4;
      uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
                     (const char *)&v29);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBTLEFenceManager_Type::Notification, CLBTLEFenceManager_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLBTLEFenceManager_Type::Notification, NotificationData_T = CLBTLE FenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v5);
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183EE70);
    }
    __int128 v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v7 = (void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      int v34 = v7;
      __int16 v35 = 2048;
      v36[0] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183EE70);
      }
      __int16 v25 = (void *)(a1 + 8);
      uint64_t v26 = *(void *)(a1 + 96);
      int v29 = 136315394;
      uint64_t v30 = v25;
      __int16 v31 = 2048;
      v32[0] = v26;
      int v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
                      (const char *)&v29,
                      22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBTLEFenceManager_Type::Notification, CLBTLEFenceManager_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLBTLEFenceManager_Type::Notification, NotificationData_T = CLBTLE FenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v27);
    }

    __int128 v9 = *(void **)(a1 + 80);
    if (v9 != (void *)(a1 + 88))
    {
      __int128 v10 = (void *)(a1 + 8);
      do
      {
        __int128 v11 = (void *)v9[5];
        if (v11 != v9 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_10183EE70);
            }
            uint64_t v12 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              int v13 = (void *)(a1 + 8);
              int v14 = *((_DWORD *)v9 + 8);
              int v15 = *((_DWORD *)v11 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              int v34 = v13;
              __int16 v35 = 1024;
              LODWORD(v36[0]) = v14;
              WORD2(v36[0]) = 1024;
              *(_DWORD *)((char *)v36 + 6) = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10183EE70);
              }
              BOOL v19 = (void *)(a1 + 8);
              int v20 = *((_DWORD *)v9 + 8);
              int v21 = *((_DWORD *)v11 + 7);
              int v29 = 136315650;
              uint64_t v30 = v19;
              __int16 v31 = 1024;
              LODWORD(v32[0]) = v20;
              WORD2(v32[0]) = 1024;
              *(_DWORD *)((char *)v32 + 6) = v21;
              int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                              (const char *)&v29,
                              24,
                              v28);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLBTLEFenceManager_Type::Notification, CLBTLEFenceManager_Type::NotificationData , char, std::string>::listClients() [Notification_T = CLBTLEFenceManager_Type::Notification, Notificatio nData_T = CLBTLEFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v22);
            }

            signed __int32 v16 = (void *)v11[1];
            if (v16)
            {
              do
              {
                int v17 = v16;
                signed __int32 v16 = (void *)*v16;
              }

              while (v16);
            }

            else
            {
              do
              {
                int v17 = (void *)v11[2];
                BOOL v18 = *v17 == (void)v11;
                __int128 v11 = v17;
              }

              while (!v18);
            }

            __int128 v11 = v17;
          }

          while (v17 != v9 + 6);
        }

        unint64_t v23 = (void *)v9[1];
        if (v23)
        {
          do
          {
            BOOL v24 = v23;
            unint64_t v23 = (void *)*v23;
          }

          while (v23);
        }

        else
        {
          do
          {
            BOOL v24 = (void *)v9[2];
            BOOL v18 = *v24 == (void)v9;
            __int128 v9 = v24;
          }

          while (!v18);
        }

        __int128 v9 = v24;
      }

      while (v24 != (void *)(a1 + 88));
    }
  }

void sub_100527A50(uint64_t a1)
{
  uint64_t v1 = sub_100527AF4(a1);
  operator delete(v1);
}

void sub_100527A64(uint64_t a1)
{
  *(void *)(a1 + 24) = 0LL;
}

void sub_100527A9C(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100527AC8(id a1)
{
  qword_101934848 = (uint64_t)os_log_create("com.apple.locationd.Position", "Proximity");
}

void *sub_100527AF4(uint64_t a1)
{
  *(void *)a1 = off_10183EE40;
  sub_1002B70AC(a1);
  [*(id *)(a1 + 24) setValid:0];

  *(void *)(a1 + 24) = 0LL;
  return sub_1002B729C((void *)a1);
}

void sub_100527B44(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v2 = *a1;
    uint64_t v3 = (uint64_t *)a1[1];
    uint64_t v4 = *v3;
    *(void *)(v4 + _Block_object_dispose(va, 8) = *(void *)(*a1 + 8);
    **(void **)(v2 + _Block_object_dispose(va, 8) = v4;
    a1[2] = 0LL;
    if (v3 != a1)
    {
      do
      {
        uint64_t v5 = (uint64_t *)v3[1];
        (*(void (**)(uint64_t *))v3[2])(v3 + 2);
        operator delete(v3);
        uint64_t v3 = v5;
      }

      while (v5 != a1);
    }
  }

void sub_100527BBC(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v2 = *a1;
    uint64_t v3 = (uint64_t *)a1[1];
    uint64_t v4 = *v3;
    *(void *)(v4 + _Block_object_dispose(va, 8) = *(void *)(*a1 + 8);
    **(void **)(v2 + _Block_object_dispose(va, 8) = v4;
    a1[2] = 0LL;
    if (v3 != a1)
    {
      do
      {
        uint64_t v5 = (uint64_t *)v3[1];
        sub_100527C2C((uint64_t)(v3 + 2));
        operator delete(v3);
        uint64_t v3 = v5;
      }

      while (v5 != a1);
    }
  }

void sub_100527C2C(uint64_t a1)
{
  *(void *)(a1 + 32) = &off_10182CE18;
}

void sub_100527C80(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100527C80(a1, *a2);
    sub_100527C80(a1, a2[1]);
    sub_100527CC8((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100527CC8(uint64_t a1)
{
  *(void *)a1 = &off_10182CE18;
}

void sub_100527D18(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100527D18(a1, *a2);
    sub_100527D18(a1, a2[1]);
    sub_100527D6C(a2 + 19);
    sub_1002722AC((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100527D6C(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v2 = *a1;
    uint64_t v3 = (uint64_t *)a1[1];
    uint64_t v4 = *v3;
    *(void *)(v4 + _Block_object_dispose(va, 8) = *(void *)(*a1 + 8);
    **(void **)(v2 + _Block_object_dispose(va, 8) = v4;
    a1[2] = 0LL;
    if (v3 != a1)
    {
      do
      {
        uint64_t v5 = (uint64_t *)v3[1];
        sub_100527DDC((uint64_t)(v3 + 2));
        operator delete(v3);
        uint64_t v3 = v5;
      }

      while (v5 != a1);
    }
  }

uint64_t sub_100527DDC(uint64_t a1)
{
  *(void *)(a1 + sub_1000A56E8(v1 + 72) = 0LL;
  *(void *)(a1 + _Block_object_dispose(va, 8) = &off_10182CE18;
  return a1;
}

void sub_100527E2C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_1003D4448(v3);
    operator delete(v4);
  }

uint64_t sub_100527E58(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  sub_10000AE14(a1 + 32);
  sub_100528854(v2, *(char **)(a1 + 16));
  return a1;
}

uint64_t sub_100527E90(uint64_t a1)
{
  return a1;
}

CLCppContainer *sub_100527EC4(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0xB8uLL);
  sub_100272138((uint64_t)v2, a1);
  *((_DWORD *)v2 + 3sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_DWORD *)(a1 + 120);
  *((void *)v2 + 16) = &off_10182CE18;
  uint64_t v3 = v2 + 136;
  if (*(char *)(a1 + 159) < 0)
  {
    sub_1010DD48C(v3, *(void **)(a1 + 136), *(void *)(a1 + 144));
  }

  else
  {
    *(_OWORD *)uint64_t v3 = *(_OWORD *)(a1 + 136);
    *((void *)v2 + 19) = *(void *)(a1 + 152);
  }

  uint64_t v4 = *(void *)(a1 + 168);
  *((void *)v2 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(a1 + 160);
  *((void *)v2 + 21) = v4;
  *((_DWORD *)v2 + 44) = *(_DWORD *)(a1 + 176);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _WORD v6[2] = sub_100528A98;
  unsigned __int8 v6[3] = &unk_10181D3D0;
  _DWORD v6[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v6,  0LL,  184LL);
}

void sub_100527F9C(_Unwind_Exception *a1)
{
}

void sub_100527FC0(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      __int128 v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          __int128 v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        uint64_t v50 = v9;
        id v13 = sub_100528AEC(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        int v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          signed __int32 v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 8);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              __int128 v49 = v19;
              sub_100528394(a1, (uint64_t)&v49, (uint64_t)&v50, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              int v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  uint64_t v32 = (uint64_t *)v27;
                }
                else {
                  uint64_t v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  int v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              uint64_t v50 = v29;
              uint64_t v34 = v29[6];
              int v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                __int16 v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 32);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    uint64_t v39 = (uint64_t *)v36;
                  }
                  else {
                    uint64_t v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    __int16 v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 8))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 32);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      __int16 v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      __int16 v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      int v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  char v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      int v14 = v43;
                      char v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      int v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      __int16 v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              __int128 v49 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10183EE70);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 8);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                BOOL v56 = v25;
                __int16 v57 = 1026;
                int v58 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10183EE70);
                }
                __int128 v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 8);
                int v51 = 136446466;
                uint64_t v52 = v45;
                __int16 v53 = 1026;
                int v54 = v46;
                LODWORD(v4_Block_object_dispose(va, 8) = 18;
                uint64_t v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                                &v51,
                                v48);
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLBTLEFenceManager_Type::Notification, CLBTLEFenceManager_Type::NotificationData, char , std::string>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLBT LEFenceManager_Type::Notification, NotificationData_T = CLBTLEFenceManager_Type::NotificationData, Not ificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v47);
              }
            }
          }

          while (v14 != v50 + 6);
        }
      }
    }
  }

_BYTE *sub_100528394(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    __int128 v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100528AEC(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    int v14 = (int *)(*(void *)a2 + 32LL);
    uint64_t v12 = sub_1004C2E20(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    BOOL result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 5);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

__n128 *sub_100528470(uint64_t **a1, __n128 *a2)
{
  uint64_t v4 = a1 + 1;
  uint64_t v5 = (__n128 *)operator new(0x58uLL);
  BOOL v11 = v4;
  sub_10023438C(v5 + 2, a2);
  char v12 = 1;
  __int128 v6 = a1[1];
  if (v6)
  {
    signed __int32 v7 = v5[2].n128_i32[0];
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v6;
        signed __int32 v9 = *((_DWORD *)v6 + 8);
        if (v7 >= v9) {
          break;
        }
        __int128 v6 = *v8;
        uint64_t v4 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (v9 >= v7) {
        break;
      }
      __int128 v6 = v8[1];
      if (!v6)
      {
        uint64_t v4 = v8 + 1;
        goto LABEL_10;
      }
    }

    sub_100528558((uint64_t)&v11, (char **)v5);
    return (__n128 *)v8;
  }

  else
  {
    uint64_t v8 = v4;
LABEL_10:
    sub_1000085FC(a1, (uint64_t)v8, v4, (uint64_t *)v5);
  }

  return v5;
}

void sub_100528558(uint64_t a1, char **a2)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_10000AE14((uint64_t)(a2 + 8));
    sub_100528854((uint64_t)(a2 + 5), a2[6]);
  }

  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

uint64_t sub_1005285AC(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_DWORD *)a1 = *a2;
  sub_100528608((uint64_t *)(a1 + 8), a3);
  uint64_t v5 = *(void *)(a3 + 32);
  *(void *)(a1 + 32) = *(void *)(a3 + 24);
  *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v5;
  if (v5)
  {
    __int128 v6 = (unint64_t *)(v5 + 8);
    do
      unint64_t v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }

  *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = *(_BYTE *)(a3 + 40);
  return a1;
}

uint64_t *sub_100528608(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_10052865C(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_100528644(_Unwind_Exception *a1)
{
}

uint64_t *sub_10052865C(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    __int128 v6 = result + 1;
    do
    {
      BOOL result = sub_1005286E0(v5, v6, v4 + 8, (uint64_t)(v4 + 8));
      unint64_t v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          unint64_t v7 = *(int **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          uint64_t v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }

        while (!v9);
      }

      uint64_t v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t *sub_1005286E0(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  __int128 v6 = (uint64_t **)sub_1000EBE2C(a1, a2, &v10, &v9, a3);
  BOOL result = *v6;
  if (!*v6)
  {
    sub_100528760((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1000085FC(a1, (uint64_t)v10, v6, v8);
    return v8;
  }

  return result;
}

void *sub_100528760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  __int128 v6 = operator new(0x40uLL);
  *(void *)(a3 + _Block_object_dispose(va, 8) = v5;
  *(void *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  _WORD v6[8] = *(_DWORD *)a2;
  BOOL result = v6 + 10;
  if (*(char *)(a2 + 31) < 0)
  {
    BOOL result = sub_1010DD48C(result, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    *(_OWORD *)BOOL result = *(_OWORD *)(a2 + 8);
    result[2] = *(void *)(a2 + 24);
  }

  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1005287EC(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_100528808(v3, v2);
  _Unwind_Resume(a1);
}

void sub_100528808(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
  }

  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_100528854(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_100528854(a1, *(void *)a2);
    sub_100528854(a1, *((void *)a2 + 1));
    if (a2[63] < 0) {
      operator delete(*((void **)a2 + 5));
    }
    operator delete(a2);
  }

void *sub_1005288A4@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0xD0uLL);
  BOOL result = sub_1005288FC(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1005288E8(_Unwind_Exception *a1)
{
}

void *sub_1005288FC(void *a1, uint64_t a2)
{
  a1[2] = 0LL;
  *a1 = off_10183EEC0;
  a1[1] = 0LL;
  sub_1005289BC((uint64_t)&v4, (uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_100528948(_Unwind_Exception *a1)
{
}

void sub_10052895C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10183EEC0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100528970(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10183EEC0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100528994(uint64_t a1)
{
  return sub_100528A58((uint64_t)&v2, a1 + 24);
}

_BYTE *sub_1005289BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a2 + 12sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_DWORD *)(a3 + 120);
  *(void *)(a2 + 12_Block_object_dispose(va, 8) = &off_10182CE18;
  BOOL result = (_BYTE *)(a2 + 136);
  if (*(char *)(a3 + 159) < 0)
  {
    BOOL result = sub_1010DD48C(result, *(void **)(a3 + 136), *(void *)(a3 + 144));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a3 + 136);
    *(void *)(a2 + 152) = *(void *)(a3 + 152);
    *(_OWORD *)BOOL result = v6;
  }

  *(void *)(a2 + 16sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(a3 + 160);
  uint64_t v7 = *(void *)(a3 + 168);
  *(_DWORD *)(a2 + 176) = *(_DWORD *)(a3 + 176);
  *(void *)(a2 + 16_Block_object_dispose(va, 8) = v7;
  return result;
}

void sub_100528A44(_Unwind_Exception *a1)
{
}

uint64_t sub_100528A58(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 12_Block_object_dispose(va, 8) = &off_10182CE18;
  return sub_1002722AC(a2);
}

void sub_100528A98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    *(void *)(v1 + 12_Block_object_dispose(va, 8) = &off_10182CE18;
    char v2 = (void *)sub_1002722AC(v1);
    operator delete(v2);
  }

id sub_100528AEC(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100528B38(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100528B38(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183EF00);
    }
    uint64_t v3 = qword_101934478;
    if (!os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
    int v8 = 134218498;
    id v9 = v2;
    __int16 v10 = 2048;
    uint64_t v11 = 0LL;
    __int16 v12 = 2080;
    unint64_t v13 = 0x80000001012F022ELL & 0x7FFFFFFFFFFFFFFFLL;
    char v4 = (os_log_s *)v3;
    os_log_type_t v5 = OS_LOG_TYPE_ERROR;
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183EF00);
    }
    uint64_t v7 = qword_101934478;
    if (!os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT)) {
      return 0LL;
    }
    int v8 = 134218498;
    id v9 = v2;
    __int16 v10 = 2048;
    uint64_t v11 = 0LL;
    __int16 v12 = 2080;
    unint64_t v13 = 0x80000001012F022ELL & 0x7FFFFFFFFFFFFFFFLL;
    char v4 = (os_log_s *)v7;
    os_log_type_t v5 = OS_LOG_TYPE_FAULT;
  }

  _os_log_impl( (void *)&_mh_execute_header,  v4,  v5,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has cha nged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  (uint8_t *)&v8,  0x20u);
  return 0LL;
}

void sub_100528D0C(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

void *sub_100528D38(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  os_log_type_t v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = sub_100528DB0((uint64_t)(v3 + 4), a2);
    uint64_t v7 = v3 + 1;
    if (!v6)
    {
      uint64_t v7 = v3;
      os_log_type_t v5 = v3;
    }

    uint64_t v3 = (void *)*v7;
  }

  while (*v7);
  return v5;
}

BOOL sub_100528DB0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 36);
  int v3 = *(_DWORD *)(a2 + 36);
  if (v2 != v3) {
    return v2 < v3;
  }
  if ((v2 & 1) == 0) {
    goto LABEL_3;
  }
  __int16 v10 = (const void **)(a1 + 8);
  char v11 = *(_BYTE *)(a1 + 31);
  if (v11 >= 0) {
    size_t v12 = *(unsigned __int8 *)(a1 + 31);
  }
  else {
    size_t v12 = *(void *)(a1 + 16);
  }
  int v13 = *(char *)(a2 + 31);
  if (v13 >= 0) {
    size_t v14 = *(unsigned __int8 *)(a2 + 31);
  }
  else {
    size_t v14 = *(void *)(a2 + 16);
  }
  if (v13 >= 0) {
    int v15 = (unsigned __int8 *)(a2 + 8);
  }
  else {
    int v15 = *(unsigned __int8 **)(a2 + 8);
  }
  if (v12 != v14) {
    goto LABEL_29;
  }
  if ((*(_BYTE *)(a1 + 31) & 0x80) != 0)
  {
    if (!memcmp(*v10, v15, *(void *)(a1 + 16))) {
      goto LABEL_3;
    }
LABEL_29:
    if (v11 >= 0) {
      BOOL v19 = (const void *)(a1 + 8);
    }
    else {
      BOOL v19 = *v10;
    }
    if (v14 >= v12) {
      size_t v20 = v12;
    }
    else {
      size_t v20 = v14;
    }
    int v21 = memcmp(v19, v15, v20);
    if (v21) {
      return v21 < 0;
    }
    else {
      return v12 < v14;
    }
  }

  if (*(_BYTE *)(a1 + 31))
  {
    signed __int32 v16 = v15;
    uint64_t v17 = (unsigned __int8 *)(a1 + 8);
    uint64_t v18 = *(unsigned __int8 *)(a1 + 31);
    while (*v17 == *v16)
    {
      ++v17;
      ++v16;
      if (!--v18) {
        goto LABEL_3;
      }
    }

    goto LABEL_29;
  }

LABEL_3:
  if ((v2 & 2) == 0
    || (v6 = *(unsigned __int16 *)(a1 + 32), v7 = *(unsigned __int16 *)(a2 + 32), BOOL v8 = v6 >= v7, v6 == v7))
  {
    if ((v2 & 4) == 0) {
      return 0LL;
    }
    BOOL v8 = *(unsigned __int16 *)(a1 + 34) >= *(unsigned __int16 *)(a2 + 34);
  }

  return !v8;
}

  BOOL v8 = 0LL;
LABEL_39:
  int v30 = vabdd_f64(*(double *)(a2 + 56), *(double *)(a1 + 720));
  if (v30 > sub_1006AC0C0(a1))
  {
    BOOL v31 = sub_1006AC0F4(a1, a3);
    BOOL v8 = v8 & 2 | v31;
    if (v31) {
      *(void *)(a1 + 72sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(a2 + 56);
    }
  }

  return v8;
}

  size_t v20 = fabs(v19);
  int v21 = 2.22044605e-16;
  if (v20 >= 1.0) {
    int v21 = v20 * 2.22044605e-16;
  }
  int v22 = (*(void *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL && v20 <= v21;
  int v23 = v19 == 0.0 || v22;
  BOOL v24 = vabdd_f64(v12, v16);
  __int16 v25 = 180.0;
  if (v24 == 180.0) {
    goto LABEL_12;
  }
  int v26 = v12 - v16;
  if (COERCE__INT64(fabs(v12 - v16)) <= 0x7FEFFFFFFFFFFFFFLL)
  {
    int v54 = fabs(v24 + -180.0);
    __int16 v25 = 180.0;
    if (v24 < 180.0) {
      BOOL v24 = 180.0;
    }
    int v55 = v24 >= 1.0 ? v24 * 2.22044605e-16 : 2.22044605e-16;
    if (v54 <= v55) {
      goto LABEL_12;
    }
  }

  __int16 v25 = 180.0;
  if (v26 <= 180.0)
  {
    if (v26 >= -180.0) {
      goto LABEL_13;
    }
    __int16 v25 = fmod(v26 + -180.0, 360.0) + 180.0;
LABEL_12:
    int v26 = v25;
    goto LABEL_13;
  }

  int v26 = fmod(v26 + 180.0, 360.0) + -180.0;
  if (v26 == -180.0) {
    goto LABEL_12;
  }
  BOOL v56 = ((*(void *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000LL) >> 53 > 0x3FE
     && (*(void *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) - 1 > 0xFFFFFFFFFFFFELL;
  if (!v56 || *(void *)&v26 == 0LL)
  {
    __int16 v25 = 180.0;
    int v58 = fabs(v26 + 180.0);
    __int128 v59 = fabs(v26);
    if (v59 < 180.0) {
      __int128 v59 = 180.0;
    }
    char v60 = v59 >= 1.0 ? v59 * 2.22044605e-16 : 2.22044605e-16;
    if (v58 <= v60) {
      goto LABEL_12;
    }
  }

    ++*(_DWORD *)(result + 68);
    goto LABEL_4;
  }

  if (*(_BYTE *)(result + 16) != 7)
  {
    if (*(_DWORD *)(a2 + 24) == 128) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

uint64_t sub_100528EF4(uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)(a1 + 8);
  if (v2)
  {
    uint64_t v4 = 1LL;
    do
    {
      if ((sub_100528F5C(a2, (uint64_t)(v2 + 4)) & 1) == 0)
      {
        ++v2;
      }

      int v2 = (void *)*v2;
    }

    while (v2);
  }

  return 0LL;
}

uint64_t sub_100528F5C(uint64_t a1, uint64_t a2)
{
  int v2 = (const void **)(a1 + 64);
  char v3 = *(_BYTE *)(a1 + 87);
  if (v3 >= 0) {
    size_t v4 = *(unsigned __int8 *)(a1 + 87);
  }
  else {
    size_t v4 = *(void *)(a1 + 72);
  }
  int v5 = *(char *)(a2 + 87);
  if (v5 >= 0) {
    size_t v6 = *(unsigned __int8 *)(a2 + 87);
  }
  else {
    size_t v6 = *(void *)(a2 + 72);
  }
  if (v5 >= 0) {
    unsigned int v7 = (unsigned __int8 *)(a2 + 64);
  }
  else {
    unsigned int v7 = *(unsigned __int8 **)(a2 + 64);
  }
  if (v4 != v6) {
    goto LABEL_35;
  }
  if ((*(_BYTE *)(a1 + 87) & 0x80) != 0)
  {
    if (memcmp(*v2, v7, *(void *)(a1 + 72))) {
      goto LABEL_35;
    }
  }

  else if (*(_BYTE *)(a1 + 87))
  {
    __int16 v10 = v7;
    char v11 = (unsigned __int8 *)(a1 + 64);
    uint64_t v12 = *(unsigned __int8 *)(a1 + 87);
    while (*v11 == *v10)
    {
      ++v11;
      ++v10;
      if (!--v12) {
        goto LABEL_18;
      }
    }

    goto LABEL_35;
  }

uint64_t *sub_100529190(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  size_t v6 = (uint64_t **)sub_100529238((uint64_t)a1, &v11, a2);
  unsigned int v7 = *v6;
  if (!*v6)
  {
    BOOL v8 = v6;
    sub_1005292C8((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000085FC(a1, v11, v8, v10[0]);
    unsigned int v7 = v10[0];
    v10[0] = 0LL;
    sub_1005293A8((uint64_t)v10, 0LL);
  }

  return v7;
}

void *sub_100529238(uint64_t a1, void *a2, uint64_t a3)
{
  int v5 = (void *)(a1 + 8);
  size_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        unsigned int v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        size_t v4 = (void *)*v7;
        int v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      if (!sub_100528DB0(v8, a3)) {
        break;
      }
      int v5 = v7 + 1;
      size_t v4 = (void *)v7[1];
    }

    while (v4);
  }

  else
  {
    unsigned int v7 = (void *)(a1 + 8);
  }

uint64_t sub_1005292C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = operator new(0x68uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(va, 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_100529330((uint64_t)v6 + 32, *a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100529318(_Unwind_Exception *a1)
{
}

uint64_t sub_100529330(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_10182CE18;
  uint64_t v4 = a1 + 8;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C((_BYTE *)v4, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 8);
    *(void *)(v4 + 16) = *(void *)(a2 + 24);
    *(_OWORD *)uint64_t v4 = v5;
  }

  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + sub_10000AE14(v25 - 56) = 0LL;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = a1 + 48;
  *(_DWORD *)(a1 + 64) = 1;
  return a1;
}

void sub_1005293A8(uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100527CC8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t *sub_1005293EC(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  __int128 v5 = (uint64_t **)sub_100529468((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    sub_1005294F8((uint64_t)a1, a3, (uint64_t)&v7);
    sub_1000085FC(a1, v8, v5, v7);
    return v7;
  }

  return result;
}

void *sub_100529468(uint64_t a1, void *a2, uint64_t a3)
{
  __int128 v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        unsigned int v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        uint64_t v4 = (void *)*v7;
        __int128 v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      __int128 v5 = v7 + 1;
      uint64_t v4 = (void *)v7[1];
    }

    while (v4);
  }

  else
  {
    unsigned int v7 = (void *)(a1 + 8);
  }

uint64_t sub_1005294F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x98uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(va, 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_100272138((uint64_t)v6 + 32, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100529548(_Unwind_Exception *a1)
{
}

uint64_t sub_100529560(uint64_t **a1, uint64_t a2)
{
  char v3 = sub_1005295C0((uint64_t)a1, a2);
  uint64_t v4 = v3;
  sub_1000087E8(a1, v3);
  (*(void (**)(uint64_t *))v4[4])(v4 + 4);
  operator delete(v4);
  return 1LL;
}

void *sub_1005295C0(uint64_t a1, uint64_t a2)
{
  int v2 = (void *)(a1 + 8);
  char v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = (void *)(a1 + 8);
  do
  {
    int v6 = sub_100528F5C((uint64_t)(v3 + 4), a2);
    unsigned int v7 = v3 + 1;
    if (!v6)
    {
      unsigned int v7 = v3;
      uint64_t v5 = v3;
    }

    char v3 = (void *)*v7;
  }

  while (*v7);
  return v5;
}

uint64_t sub_100529638(uint64_t **a1, uint64_t a2)
{
  char v3 = sub_100528D38((uint64_t)a1, a2);
  uint64_t v4 = v3;
  sub_1000087E8(a1, v3);
  sub_100527CC8((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1LL;
}

uint64_t *sub_100529690(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int v6 = (uint64_t **)sub_100529468((uint64_t)a1, &v9, a2);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_100529724((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1000085FC(a1, v9, v6, v8);
    return v8;
  }

  return result;
}

uint64_t sub_100529724@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0xB0uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(va, 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_100272138((uint64_t)(v6 + 4), *a2);
  v6[19] = v6 + 19;
  v6[20] = v6 + 19;
  v6[21] = 0LL;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100529794(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  sub_1005297B0(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1005297B0(uint64_t a1, uint64_t *__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
    sub_100527D6C(__p + 19);
    sub_1002722AC((uint64_t)(__p + 4));
  }

  if (__p) {
    operator delete(__p);
  }
}

void *sub_1005297FC( uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, int *a6, int *a7, double *a8, int *a9)
{
  uint64_t v16 = operator new(0x60uLL);
  void *v16 = a2;
  v16[1] = a3;
  sub_100529898((uint64_t)(v16 + 2), *a4, a5, *a6, *a7, *a9, *a8);
  return v16;
}

void sub_100529884(_Unwind_Exception *a1)
{
}

uint64_t sub_100529898(uint64_t a1, int a2, uint64_t a3, int a4, int a5, int a6, double a7)
{
  *(_DWORD *)a1 = a2;
  *(void *)(a1 + _Block_object_dispose(va, 8) = &off_10182CE18;
  if (*(char *)(a3 + 31) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 16), *(void **)(a3 + 8), *(void *)(a3 + 16));
  }

  else
  {
    __int128 v13 = *(_OWORD *)(a3 + 8);
    *(void *)(a1 + 32) = *(void *)(a3 + 24);
    *(_OWORD *)(a1 + 16) = v13;
  }

  *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(a3 + 32);
  *(_DWORD *)(a1 + 4_Block_object_dispose(va, 8) = a4;
  *(_DWORD *)(a1 + 52) = a5;
  *(double *)(a1 + sub_10000AE14(v25 - 56) = a7;
  *(_DWORD *)(a1 + 64) = a6;
  *(void *)(a1 + sub_1000A56E8(v1 + 72) = -[CLOSTransaction initWithDescription:]( objc_alloc(&OBJC_CLASS___CLOSTransaction),  "initWithDescription:",  "Pending iBeacon notification");
  return a1;
}

void sub_100529960(_Unwind_Exception *exception_object)
{
  *(void *)(v1 + _Block_object_dispose(va, 8) = v3 + 16;
  _Unwind_Resume(exception_object);
}

CLCppContainer *sub_100529984(uint64_t a1)
{
  int v2 = (char *)operator new(0xB8uLL);
  sub_100272138((uint64_t)v2, a1);
  *((_DWORD *)v2 + 3sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_DWORD *)(a1 + 120);
  *((void *)v2 + 16) = &off_10182CE18;
  uint64_t v3 = v2 + 136;
  if (*(char *)(a1 + 159) < 0)
  {
    sub_1010DD48C(v3, *(void **)(a1 + 136), *(void *)(a1 + 144));
  }

  else
  {
    *(_OWORD *)uint64_t v3 = *(_OWORD *)(a1 + 136);
    *((void *)v2 + 19) = *(void *)(a1 + 152);
  }

  uint64_t v4 = *(void *)(a1 + 168);
  *((void *)v2 + 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(void *)(a1 + 160);
  *((void *)v2 + 21) = v4;
  *((_DWORD *)v2 + 44) = *(_DWORD *)(a1 + 176);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _WORD v6[2] = sub_100529A80;
  unsigned __int8 v6[3] = &unk_10181D3D0;
  _DWORD v6[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v6,  0LL,  184LL);
}

void sub_100529A5C(_Unwind_Exception *a1)
{
}

void sub_100529A80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    *(void *)(v1 + 12_Block_object_dispose(va, 8) = &off_10182CE18;
    int v2 = (void *)sub_1002722AC(v1);
    operator delete(v2);
  }

uint64_t *sub_100529AD4(uint64_t **a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000087E8(a1, a2);
  sub_100527D6C(a2 + 19);
  sub_1002722AC((uint64_t)(a2 + 4));
  operator delete(a2);
  return v3;
}

void sub_100529B20(void ***a1)
{
  uint64_t v1 = *a1;
  int v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      int v6 = v4 - 120;
      unsigned int v7 = v4 - 120;
      do
      {
        uint64_t v8 = *(void (***)(char *))v7;
        v7 -= 120;
        (*v8)(v6);
        BOOL v9 = v6 == v2;
        int v6 = v7;
      }

      while (!v9);
      uint64_t v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

uint64_t sub_100529BAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x222222222222222LL) {
    sub_100007008();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xEEEEEEEEEEEEEEEFLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x111111111111111LL) {
    unint64_t v9 = 0x222222222222222LL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    __int16 v10 = (char *)sub_1000BAE04(v7, v9);
  }
  else {
    __int16 v10 = 0LL;
  }
  __int128 v13 = v10;
  size_t v14 = &v10[120 * v4];
  uint64_t v16 = &v10[120 * v9];
  sub_100272138((uint64_t)v14, a2);
  int v15 = v14 + 120;
  sub_100529CB0(a1, &v13);
  uint64_t v11 = a1[1];
  sub_100529DBC((uint64_t)&v13);
  return v11;
}

void sub_100529C9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100529CB0(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100529D24((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100529D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = a7 - 120;
  while (a3 + v10 != a5)
  {
    uint64_t v12 = v11 + v10;
    v10 -= 120LL;
    sub_100272138(v12, v10 + a3);
  }

  return a6;
}

uint64_t sub_100529DBC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = *(void (***)(void))(i - 120);
    *(void *)(a1 + 16) = i - 120;
    (*v4)();
  }

  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

id sub_100529E0C(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100529E58(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100529E58(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183EF00);
    }
    uint64_t v3 = qword_101934478;
    if (!os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
    int v8 = 134218498;
    id v9 = v2;
    __int16 v10 = 2048;
    uint64_t v11 = 0LL;
    __int16 v12 = 2080;
    unint64_t v13 = 0x800000010132C5F8LL & 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v4 = (os_log_s *)v3;
    os_log_type_t v5 = OS_LOG_TYPE_ERROR;
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183EF00);
    }
    uint64_t v7 = qword_101934478;
    if (!os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT)) {
      return 0LL;
    }
    int v8 = 134218498;
    id v9 = v2;
    __int16 v10 = 2048;
    uint64_t v11 = 0LL;
    __int16 v12 = 2080;
    unint64_t v13 = 0x800000010132C5F8LL & 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v4 = (os_log_s *)v7;
    os_log_type_t v5 = OS_LOG_TYPE_FAULT;
  }

  _os_log_impl( (void *)&_mh_execute_header,  v4,  v5,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has cha nged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  (uint8_t *)&v8,  0x20u);
  return 0LL;
}

uint64_t sub_10052A02C(uint64_t a1, int *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    return 0LL;
  }
  int v3 = *a2;
  uint64_t v4 = a1 + 8;
  do
  {
    int v5 = *(_DWORD *)(v2 + 32);
    BOOL v6 = v5 < v3;
    if (v5 >= v3) {
      uint64_t v7 = (uint64_t *)v2;
    }
    else {
      uint64_t v7 = (uint64_t *)(v2 + 8);
    }
    if (!v6) {
      uint64_t v4 = v2;
    }
    uint64_t v2 = *v7;
  }

  while (*v7);
  if (v4 == a1 + 8 || v3 < *(_DWORD *)(v4 + 32)) {
    return 0LL;
  }
  sub_10052A090((uint64_t **)a1, v4);
  return 1LL;
}

uint64_t *sub_10052A090(uint64_t **a1, uint64_t a2)
{
  int v3 = sub_1000087E8(a1, (uint64_t *)a2);
  operator delete((void *)a2);
  return v3;
}

void sub_10052A0D0(uint64_t a1)
{
  else {
    BOOL v2 = *(double *)(a1 + 8) > (double)*(int *)(a1 + 44) || *(_BYTE *)(a1 + 16) != 0;
  }
  if (*(double *)(a1 + 24) < 0.0
    || (v3 = sub_10080E94C(), *(_DWORD *)std::stringbuf::string_type buf = 1, vabdd_f64(sub_10080EB58(v3, buf), *(double *)(a1 + 24)) > 5.0))
  {
    BOOL v2 = 0;
  }

  uint64_t v4 = sub_10042CC1C();
  if (v4)
  {
    int v5 = v4;
    if (v4[1])
    {
      if (v2 == (*v4 != 0)) {
        return;
      }
    }

    else if (!v2)
    {
      return;
    }

    *(double *)(a1 + 32) = sub_101171D4C();
    v5[1] = v2;
  }

  else
  {
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_10183EF20);
    }
    BOOL v6 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "#fusion,CLLCFusionCarPlayFlags unexpectedly returned nullptr",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_10183EF20);
      }
      v9[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  16LL,  "#fusion,CLLCFusionCarPlayFlags unexpectedly returned nullptr",  v9,  2);
      int v8 = (uint8_t *)v7;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLLCFusionCarPlayConditions::updateConditions()", "%s\n", v7);
      if (v8 != buf) {
        free(v8);
      }
    }
  }

void sub_10052A314(id a1)
{
  qword_101934968 = (uint64_t)os_log_create("com.apple.locationd.Position", "LCFusion");
}

uint64_t sub_10052A340(uint64_t a1)
{
  return a1;
}

uint64_t *sub_10052A368(uint64_t a1, int a2, double a3)
{
  HIDWORD(v13) = a2;
  *(_BYTE *)a1 = 1;
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_10183EF40);
  }
  BOOL v6 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    LODWORD(v19) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "AmbientLightDecisionTreeOutput,%{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183EF40);
    }
    int v14 = 67240192;
    LODWORD(v15) = a2;
    LODWORD(v13) = 8;
    __int16 v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "AmbientLightDecisionTreeOutput,%{public}d",  &v14,  v13);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLGnssAvailabilityPredictor::ALSProcessor::measurementInput(const CLAmbientLightDecisionTreeOutput, const CFTimeInterval)",  "%s\n",  v10);
  }

  if (vabdd_f64(a3, *(double *)(a1 + 16)) > 1.0)
  {
    *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
    *(_BYTE *)a1 = 0;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183EF40);
    }
    uint64_t v7 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = *(void *)(a1 + 16);
      *(_DWORD *)std::stringbuf::string_type buf = 134349312;
      double v19 = a3;
      __int16 v20 = 2050;
      uint64_t v21 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "ALSProcessor,FilterReset,timestamp,%{public}.2f,lastTimestamp,%{public}.2f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183EF40);
      }
      uint64_t v11 = *(void *)(a1 + 16);
      int v14 = 134349312;
      double v15 = a3;
      __int16 v16 = 2050;
      uint64_t v17 = v11;
      LODWORD(v13) = 22;
      __int16 v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "ALSProcessor,FilterReset,timestamp,%{public}.2f,lastTimestamp,%{public}.2f",  &v14,  v13);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLGnssAvailabilityPredictor::ALSProcessor::measurementInput(const CLAmbientLightDecisionTreeOutput, const CFTimeInterval)",  "%s\n",  v12);
    }
  }

  *(double *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 24) = a2;
  uint64_t result = sub_10000C6DC((uint64_t)&unk_1019A1150, (int *)&v13 + 1);
  *(double *)(a1 + _Block_object_dispose(va, 8) = *(double *)(a1 + 8) * 0.9 + *(double *)result * 0.1;
  return result;
}

void *sub_10052A6EC(void *a1, uint64_t a2, uint64_t a3)
{
  a1[1] = 0LL;
  int v5 = a1 + 1;
  *a1 = 0LL;
  sub_10001A504((uint64_t)(a1 + 2), a3);
  sub_1004F2598();
  if (sub_1004F7000())
  {
    BOOL v6 = operator new(0x20uLL);
    _OWORD *v6 = 0u;
    v6[1] = 0u;
    uint64_t v7 = (void *)*a1;
    *a1 = v6;
    if (v7) {
      operator delete(v7);
    }
    uint64_t v8 = operator new(0x38uLL);
    v12[0] = &off_10183EF70;
    v12[1] = a1;
    uint64_t v13 = v12;
    sub_100911EE0(v8, a2, v12);
    id v9 = v13;
    if (v13 == v12)
    {
      uint64_t v10 = 4LL;
      id v9 = v12;
    }

    else
    {
      if (!v13)
      {
LABEL_9:
        sub_10052AAAC(v5, (uint64_t)v8);
        return a1;
      }

      uint64_t v10 = 5LL;
    }

    (*(void (**)(void))(*v9 + 8 * v10))();
    goto LABEL_9;
  }

  return a1;
}

void sub_10052A804( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  double v19 = a13;
  if (a13 == v17)
  {
    uint64_t v20 = 4LL;
    double v19 = &a10;
  }

  else
  {
    if (!a13) {
      goto LABEL_6;
    }
    uint64_t v20 = 5LL;
  }

  (*(void (**)(void))(*(void *)v19 + 8 * v20))();
LABEL_6:
  operator delete(v16);
  uint64_t v21 = *(void **)(v13 + 40);
  if (v21 == v15)
  {
    uint64_t v22 = 4LL;
    uint64_t v21 = v15;
  }

  else
  {
    if (!v21) {
      goto LABEL_11;
    }
    uint64_t v22 = 5LL;
  }

  (*(void (**)(void))(*v21 + 8 * v22))();
LABEL_11:
  sub_10052AAAC(v14, 0LL);
  int v23 = *(void **)v13;
  *(void *)uint64_t v13 = 0LL;
  if (v23) {
    operator delete(v23);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10052A8A8(uint64_t a1)
{
  BOOL v2 = (void *)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 40);
  *(void *)(a1 + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
  }

  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
  int v5 = *(void **)(a1 + 40);
  if (v5 == v2)
  {
    uint64_t v6 = 4LL;
  }

  else
  {
    if (!v5) {
      goto LABEL_10;
    }
    uint64_t v6 = 5LL;
    BOOL v2 = *(void **)(a1 + 40);
  }

  (*(void (**)(void *))(*v2 + 8 * v6))(v2);
LABEL_10:
  sub_10052AAAC((uint64_t *)(a1 + 8), 0LL);
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = 0LL;
  if (v7) {
    operator delete(v7);
  }
  return a1;
}

uint64_t sub_10052A94C(uint64_t *a1, double a2)
{
  uint64_t result = a1[5];
  if (result)
  {
    int v10 = 0;
    double v11 = 0.0;
    int v13 = 0;
    double v12 = a2;
    uint64_t v4 = *a1;
    if (v4)
    {
      double v5 = *(double *)(v4 + 16);
      double v6 = vabdd_f64(a2, v5);
      double v7 = 0.0;
      if (v6 <= 1.0 && *(_BYTE *)v4)
      {
        double v8 = *(double *)(v4 + 8);
        int v9 = 2 * (v8 > 0.8);
        double v7 = v5;
      }

      else
      {
        int v9 = 0;
        double v8 = 0.0;
      }

      int v10 = v9;
      double v11 = v8;
      double v12 = v7;
    }

    return (*(uint64_t (**)(uint64_t, int *))(*(void *)result + 48LL))(result, &v10);
  }

  return result;
}

double sub_10052A9E8(uint64_t *a1, _DWORD *a2, double *a3)
{
  uint64_t v3 = *a1;
  if (*a1)
  {
    *a2 = *(_DWORD *)(v3 + 24);
    double result = *(double *)(v3 + 16);
    *a3 = result;
  }

  return result;
}

void sub_10052AA04(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_10052AA30(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 16 * a3;
    do
    {
      sub_1000EBDA8((uint64_t **)a1, v4, a2, a2);
      a2 += 4;
      v6 -= 16LL;
    }

    while (v6);
  }

  return a1;
}

void sub_10052AA94(_Unwind_Exception *a1)
{
}

void sub_10052AAAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_100911F44(v3);
    operator delete(v4);
  }

void *sub_10052AAE0(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = &off_10183EF70;
  result[1] = v3;
  return result;
}

uint64_t sub_10052AB14(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183EF70;
  a2[1] = v2;
  return result;
}

uint64_t sub_10052AB30(uint64_t a1, int *a2, double *a3)
{
  double v3 = *a3;
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  sub_10052A368(*v4, *a2, *a3);
  return sub_10052A94C(v4, v3);
}

uint64_t sub_10052AB70(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_10052ABAC()
{
}

uint64_t sub_10052ABB8()
{
  v1[4] = xmmword_1012F02A0;
  _OWORD v1[5] = unk_1012F02B0;
  v1[6] = xmmword_1012F02C0;
  v1[0] = xmmword_1012F0260;
  v1[1] = unk_1012F0270;
  v1[2] = xmmword_1012F0280;
  unsigned __int8 v1[3] = unk_1012F0290;
  sub_10052AA30((uint64_t)&unk_1019A1150, (int *)v1, 7LL);
  return __cxa_atexit((void (*)(void *))sub_10052A340, &unk_1019A1150, (void *)&_mh_execute_header);
}

uint64_t sub_10052BE84(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0LL;
        uint64_t v11 = OBJC_IVAR___PBDataReader__error;
        int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    uint64_t v11 = OBJC_IVAR___PBDataReader__error;
    int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v12 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0LL;
        while (1)
        {
          uint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v18 = v17 + 1;
          if (v17 == -1 || v18 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v19 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18;
          v16 |= (unint64_t)(v19 & 0x7F) << v14;
          if ((v19 & 0x80) == 0) {
            goto LABEL_64;
          }
          v14 += 7;
          BOOL v10 = v15++ >= 9;
          if (v10)
          {
            LODWORD(v16) = 0;
            goto LABEL_66;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_64:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_66:
        uint64_t v44 = 24LL;
        goto LABEL_79;
      case 2u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0LL;
        while (2)
        {
          uint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v26 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if (v26 < 0)
            {
              v21 += 7;
              BOOL v10 = v22++ >= 9;
              if (v10)
              {
                uint64_t v23 = 0LL;
                goto LABEL_70;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v23 = 0LL;
        }
LABEL_70:
        *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = v23 != 0;
        continue;
      case 3u:
        unint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v27 <= 0xFFFFFFFFFFFFFFF7LL && v27 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v28 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + v11) = 1;
          uint64_t v28 = 0LL;
        }

        uint64_t v45 = 16LL;
        goto LABEL_84;
      case 4u:
        unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v29 <= 0xFFFFFFFFFFFFFFF7LL && v29 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v28 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + v11) = 1;
          uint64_t v28 = 0LL;
        }

        uint64_t v45 = 8LL;
LABEL_84:
        *(void *)(a1 + v45) = v28;
        continue;
      case 5u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v16 = 0LL;
        *(_BYTE *)(a1 + 52) |= 0x10u;
        while (2)
        {
          uint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v34 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v33;
            v16 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v10 = v31++ >= 9;
              if (v10)
              {
                LODWORD(v16) = 0;
                goto LABEL_74;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_74:
        uint64_t v44 = 44LL;
        goto LABEL_79;
      case 6u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v16 = 0LL;
        *(_BYTE *)(a1 + 52) |= 8u;
        break;
      case 7u:
        *(_BYTE *)(a1 + 52) |= 2u;
        unint64_t v40 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v41 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v40);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40 + 4;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v41 = 0;
        }

        uint64_t v46 = 32LL;
        goto LABEL_91;
      case 8u:
        *(_BYTE *)(a1 + 52) |= 4u;
        unint64_t v42 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v42 <= 0xFFFFFFFFFFFFFFFBLL && v42 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v41 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v42);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v42 + 4;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v41 = 0;
        }

        uint64_t v46 = 36LL;
        goto LABEL_91;
      case 9u:
        *(_BYTE *)(a1 + 52) |= 1u;
        unint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v43 <= 0xFFFFFFFFFFFFFFFBLL && v43 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v41 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v43 + 4;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v41 = 0;
        }

        uint64_t v46 = 28LL;
LABEL_91:
        *(_DWORD *)(a1 + v46) = v41;
        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        continue;
    }

    while (1)
    {
      uint64_t v37 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v38 = v37 + 1;
      if (v37 == -1 || v38 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v39 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v37);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v38;
      v16 |= (unint64_t)(v39 & 0x7F) << v35;
      if ((v39 & 0x80) == 0) {
        goto LABEL_76;
      }
      v35 += 7;
      BOOL v10 = v36++ >= 9;
      if (v10)
      {
        LODWORD(v16) = 0;
        goto LABEL_78;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_76:
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v16) = 0;
    }
LABEL_78:
    uint64_t v44 = 40LL;
LABEL_79:
    *(_DWORD *)(a1 + v44) = v16;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

CFRunLoopTimerRef *sub_10052CE08(CFRunLoopTimerRef *a1)
{
  uint64_t result = sub_1007154B8(a1, 1, 1);
  *uint64_t result = (CFRunLoopTimerRef)off_10183F028;
  return result;
}

void sub_10052CE38(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10071558C(a1);
  operator delete(v1);
}

void *sub_10052CE4C(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = v9;
  if (v9 == v8)
  {
    uint64_t v6 = 4LL;
    unsigned int v5 = v8;
    goto LABEL_5;
  }

  if (v9)
  {
    uint64_t v6 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }

  *a1 = &off_10183F060;
  return a1;
}

void sub_10052CF04( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  unsigned int v15 = a13;
  if (a13 == v13)
  {
    uint64_t v16 = 4LL;
    unsigned int v15 = &a10;
  }

  else
  {
    if (!a13) {
      goto LABEL_6;
    }
    uint64_t v16 = 5LL;
  }

  (*(void (**)(void))(*(void *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t sub_10052CF48(uint64_t result, double a2)
{
  *(double *)(result + 4sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = a2;
  return result;
}

void *sub_10052CF5C(uint64_t a1)
{
  __int16 v17 = 0;
  uint64_t v15 = 0LL;
  double v16 = 0.0;
  uint64_t v2 = (double *)(a1 + 40);
  double v3 = operator new(0x20uLL);
  void *v3 = &off_10183F0B0;
  v3[1] = &v16;
  v3[2] = (char *)&v17 + 1;
  void v3[3] = &v17;
  char v19 = v3;
  v4.n128_u64[0] = 0x404E000000000000LL;
  char v5 = sub_1004CA418(a1, v2, &v15, (uint64_t)v18, v4);
  uint64_t result = v19;
  if (v19 == v18)
  {
    uint64_t v7 = 4LL;
    uint64_t result = v18;
  }

  else
  {
    if (!v19) {
      goto LABEL_6;
    }
    uint64_t v7 = 5LL;
  }

  uint64_t result = (void *)(*(uint64_t (**)(void))(*result + 8 * v7))();
LABEL_6:
  if ((v5 & 1) != 0)
  {
    if (v16 / 60.0 >= 4.40208912)
    {
      double v9 = *(double *)(a1 + 40) + 60.0;
      v11[0] = *(void *)(a1 + 40);
      *(double *)&v11[1] = v9;
      *(double *)&void v11[2] = v16 / 60.0;
      __int16 v12 = 2;
      char v13 = HIBYTE(v17);
      char v14 = v17;
      uint64_t v10 = *(void *)(a1 + 32);
      if (!v10) {
        sub_100008BDC();
      }
      uint64_t result = (void *)(*(uint64_t (**)(uint64_t, void *, double))(*(void *)v10 + 48LL))( v10,  v11,  v16 / 60.0);
      double v8 = *v2 + 60.0;
    }

    else
    {
      double v8 = *(double *)(v15 + 8);
    }

    double *v2 = v8;
  }

  return result;
}

void sub_10052D0CC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
}

__n128 sub_10052D114(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &off_10183F0B0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + _Block_object_dispose(va, 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_10052D154(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_10183F0B0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + _Block_object_dispose(va, 8) = result;
  return result;
}

uint64_t sub_10052D17C(uint64_t result, uint64_t a2, double *a3)
{
  double v3 = *(BOOL **)(result + 16);
  **(double **)(result + _Block_object_dispose(va, 8) = **(double **)(result + 8) + *(double *)(a2 + 16) * *a3;
  BOOL *v3 = (*v3 | *(unsigned __int8 *)(a2 + 28)) != 0;
  **(_BYTE **)(result + 24) = (**(unsigned __int8 **)(result + 24) | *(unsigned __int8 *)(a2 + 29)) != 0;
  return result;
}

uint64_t sub_10052D1CC(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_10052D208()
{
}

uint64_t sub_10052D214(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  *(void *)(a1 + 104) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  sub_100531300((uint64_t *)(a1 + 96), 0LL);
  return a1;
}

char *sub_10052D28C(char *__dst, __int128 *a2, __int128 *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }

  if (*((char *)a3 + 23) < 0)
  {
    sub_1010DD48C(__dst + 24, *(void **)a3, *((void *)a3 + 1));
  }

  else
  {
    __int128 v6 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)(__dst + 24) = v6;
  }

  *((void *)__dst + 6) = 0x100000002LL;
  *((_WORD *)__dst + 2_Block_object_dispose(va, 8) = 0;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1010DD48C(__dst + 64, *(void **)a3, *((void *)a3 + 1));
  }

  else
  {
    __int128 v7 = *a3;
    *((void *)__dst + 1sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *((void *)a3 + 2);
    *((_OWORD *)__dst + 4) = v7;
  }

  *((void *)__dst + 11) = 0LL;
  double v8 = operator new(0x80uLL);
  sub_1010DDBC0(__p, "WifiTileBlobs");
  sub_1006A0144(v8);
  *((void *)__dst + 12) = v8;
  if (v15 < 0) {
    operator delete(__p[0]);
  }
  *((void *)__dst + 13) = 0LL;
  sub_10052D5C8((uint64_t)__dst);
  uint64_t v9 = *((void *)__dst + 13);
  if (!v9 || !sub_1003C1048(v9))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    uint64_t v10 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      LOWORD(__p[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "not connected to wifi #tile header table",  (uint8_t *)__p,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      v13[0] = 0;
      __int16 v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "not connected to wifi #tile header table",  v13,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiTileHeaderDatabase::CLWifiTileHeaderDatabase(const std::string &, const std::string &)",  "%s\n",  v12);
    }
  }

  return __dst;
}

void sub_10052D524( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  uint64_t v23 = *(void *)(v18 + 104);
  *(void *)(v18 + 104) = 0LL;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
  }
  sub_100531300(v21, 0LL);
  _Unwind_Resume(a1);
}

uint64_t sub_10052D5C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  if (!v2 || !sub_1003C1048(v2))
  {
    sub_100530B08((char *)a1, (const char **)qword_101996940, a1 + 48, &v5);
    uint64_t v3 = *(void *)(a1 + 104);
    *(void *)(a1 + 104) = v5;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
  }

  uint64_t result = sub_1006A0134(*(void *)(a1 + 96));
  if ((result & 1) == 0) {
    return sub_1006A00CC(*(void *)(a1 + 96));
  }
  return result;
}

uint64_t sub_10052D650(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 104);
  if (result) {
    return sub_1003C1048(result);
  }
  return result;
}

uint64_t sub_10052D664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 104);
  if (!v3 || !sub_1003C1048(v3))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_1010DDBC0(&v7, "No connection to database when attempting to open transaction.");
    std::runtime_error::runtime_error(exception, &v7);
    exception->__vftable = (std::runtime_error_vtbl *)&off_1018191C8;
  }

  return sub_1003C0F7C(*(void *)(a1 + 104), a2);
}

void sub_10052D708( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }

  else if (!v16)
  {
    goto LABEL_6;
  }

  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t sub_10052D740(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 104);
  if (v5 && sub_1003C1048(v5))
  {
    v56.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
    *(_OWORD *)&v56.__r_.__value_.__r.__words[1] = xmmword_1012C8520;
    strcpy(v56.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
    int v9 = *(char *)(a1 + 23);
    if (v9 >= 0) {
      uint64_t v10 = (const std::string::value_type *)a1;
    }
    else {
      uint64_t v10 = *(const std::string::value_type **)a1;
    }
    if (v9 >= 0) {
      std::string::size_type v11 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      std::string::size_type v11 = *(void *)(a1 + 8);
    }
    __int16 v12 = std::string::append(&v56, v10, v11);
    __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v57.__r_.__value_.__l.__cap_ = v12->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0LL;
    v12->__r_.__value_.__l.__cap_ = 0LL;
    v12->__r_.__value_.__r.__words[0] = 0LL;
    char v14 = std::string::append(&v57, " (");
    __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v58.__r_.__value_.__l.__cap_ = v14->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0LL;
    v14->__r_.__value_.__l.__cap_ = 0LL;
    v14->__r_.__value_.__r.__words[0] = 0LL;
    sub_10052DF10(&__p);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = __p.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v18 = std::string::append(&v58, (const std::string::value_type *)p_p, size);
    __int128 v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v61.__r_.__value_.__l.__cap_ = v18->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v61.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0LL;
    v18->__r_.__value_.__l.__cap_ = 0LL;
    v18->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v20 = std::string::append(&v61, ") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
    __int128 v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    int64_t cap = v20->__r_.__value_.__l.__cap_;
    *(_OWORD *)__int128 v59 = v21;
    v20->__r_.__value_.__l.__size_ = 0LL;
    v20->__r_.__value_.__l.__cap_ = 0LL;
    v20->__r_.__value_.__r.__words[0] = 0LL;
    if (cap >= 0) {
      unsigned int v22 = (char *)v59;
    }
    else {
      unsigned int v22 = (char *)v59[0];
    }
    sub_1003C0D54(*(void *)(a1 + 104), v22, &v61);
    std::string::size_type v23 = v61.__r_.__value_.__r.__words[0];
    uint64_t v24 = (sqlite3_stmt *)sub_100019240((uint64_t)v61.__r_.__value_.__l.__data_);
    double v25 = sub_100924318((uint64_t)a2);
    int v26 = sub_100924320((uint64_t)a2);
    double v27 = sub_100924330((uint64_t)a2);
    double v28 = sub_100924338((uint64_t)a2);
    sqlite3_int64 v29 = sub_100924328((uint64_t)a2);
    int v30 = sub_100496E10(a2);
    if (!sub_1003C28BC(v24, 1, v30)) {
      goto LABEL_52;
    }
    int v31 = sub_100924300((uint64_t)a2);
    if (!sub_1003C28BC(v24, 2, v31)) {
      goto LABEL_52;
    }
    double v32 = sub_100924308((uint64_t)a2);
    if (!sub_1003B7480(v24, 3, v32)) {
      goto LABEL_52;
    }
    double v33 = sub_1007C37E0((uint64_t)a2);
    if (!sub_1003B7480(v24, 4, v33)) {
      goto LABEL_52;
    }
    double v34 = sub_1007C37E8((uint64_t)a2);
    if (!sub_1003B7480(v24, 5, v34)) {
      goto LABEL_52;
    }
    double v35 = sub_1007C37F0((uint64_t)a2);
    if (sub_1003B7480(v24, 6, v35)
      && (double v36 = sub_100496E38((uint64_t)a2), sub_1003B7480(v24, 7, v36))
      && (double v37 = sub_100924310((uint64_t)a2), sub_1003B7480(v24, 8, v37))
      && (double v38 = sub_10067FEA0((uint64_t)a2), sub_1003B7480(v24, 9, v38))
      && sub_1003C2D24(v24, 10, (uint64_t)v25)
      && sub_1003C28BC(v24, 11, v26)
      && (int v39 = sub_10008CFEC((uint64_t)a2), sub_1003C28BC(v24, 12, v39))
      && sub_1003C2D24(v24, 13, v29)
      && (int v40 = sub_100207688((uint64_t)a2), sub_1003C28BC(v24, 14, v40))
      && sub_1003C2D24(v24, 15, (uint64_t)v27)
      && sub_1003C2D24(v24, 16, (uint64_t)v28)
      && (int v41 = sub_100207690((uint64_t)a2), sub_1003C2AF0(v24, 17, v41)))
    {
      sub_1003BB2BC(*(void *)(a1 + 104), v24);
      uint64_t v42 = *(void *)(a1 + 96);
      v61.__r_.__value_.__r.__words[0] = sub_100924404((uint64_t)a2);
      v61.__r_.__value_.__l.__size_ = v43;
      uint64_t v44 = sub_1006A05F0(v42, (unsigned int *)&v61, a3, a4);
    }

    else
    {
LABEL_52:
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      uint64_t v46 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_FAULT))
      {
        int v47 = sub_100496E10(a2);
        int v48 = sub_100924300((uint64_t)a2);
        v61.__r_.__value_.__r.__words[0] = 68289539LL;
        LOWORD(v61.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&v61.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        WORD1(v61.__r_.__value_.__r.__words[2]) = 1025;
        HIDWORD(v61.__r_.__value_.__r.__words[2]) = v47;
        __int16 v62 = 1025;
        int v63 = v48;
        _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:@TileHeader, wifi, failed to bind values for #tile save header, x:%{private}d,  y:%{private}d}",  (uint8_t *)&v61,  0x1Eu);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10183F120);
        }
      }

      __int128 v49 = (os_log_s *)qword_101934868;
      if (os_signpost_enabled((os_log_t)qword_101934868))
      {
        int v50 = sub_100496E10(a2);
        int v51 = sub_100924300((uint64_t)a2);
        v61.__r_.__value_.__r.__words[0] = 68289539LL;
        LOWORD(v61.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&v61.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        WORD1(v61.__r_.__value_.__r.__words[2]) = 1025;
        HIDWORD(v61.__r_.__value_.__r.__words[2]) = v50;
        __int16 v62 = 1025;
        int v63 = v51;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v49,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "@TileHeader, wifi, failed to bind values for #tile save header",  "{msg%{public}.0s:@TileHeader, wifi, failed to bind values for #tile save header, x:%{private}d,  y:%{private}d}",  (uint8_t *)&v61,  0x1Eu);
      }

      uint64_t v44 = 0LL;
    }

    if (v23) {
      (*(void (**)(std::string::size_type))(*(void *)v23 + 8LL))(v23);
    }
    if (SHIBYTE(cap) < 0) {
      operator delete(v59[0]);
    }
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    uint64_t v45 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      LOWORD(v61.__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_INFO,  "not connected to wifi #tile header table",  (uint8_t *)&v61,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&v61, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      LOWORD(v59[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &v61,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "not connected to wifi #tile header table",  v59,  2);
      int v54 = (std::string *)v53;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTileHeaderDatabase::saveWifiTileHeader(const CLWifiTileHeaderEntry &, std::optional<CLWifiTileParser: :MemoryMappedFileHandle *>)",  "%s\n",  v53);
      if (v54 != &v61) {
        free(v54);
      }
    }

    return 0LL;
  }

  return v44;
}

void sub_10052DE38( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, void *a30, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, void *__p, uint64_t a38, int a39, __int16 a40, char a41, char a42, uint64_t a43, void *a44, uint64_t a45, int a46, __int16 a47, char a48, char a49)
{
  if (v49) {
    (*(void (**)(uint64_t))(*(void *)v49 + 8LL))(v49);
  }
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10052DF10(std::string *a1@<X8>)
{
  uint64_t v2 = 0LL;
  a1->__r_.__value_.__r.__words[0] = 0LL;
  a1->__r_.__value_.__l.__size_ = 0LL;
  a1->__r_.__value_.__l.__cap_ = 0LL;
  do
  {
    uint64_t v3 = (const std::string::value_type **)&qword_101996940[v2];
    if (LODWORD(qword_101996940[v2 + 1]) != 4)
    {
      std::string::size_type size = a1->__r_.__value_.__s.__size_;
      if ((size & 0x80u) != 0LL) {
        std::string::size_type size = a1->__r_.__value_.__l.__size_;
      }
      if (size)
      {
        v9.__r_.__value_.__s.__size_ = 2;
        strcpy((char *)&v9, ", ");
        uint64_t v5 = std::string::append(&v9, *v3);
        __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
        int64_t cap = v5->__r_.__value_.__l.__cap_;
        *(_OWORD *)std::string __p = v6;
        v5->__r_.__value_.__l.__size_ = 0LL;
        v5->__r_.__value_.__l.__cap_ = 0LL;
        v5->__r_.__value_.__r.__words[0] = 0LL;
        if (cap >= 0) {
          std::string v7 = __p;
        }
        else {
          std::string v7 = (void **)__p[0];
        }
        if (cap >= 0) {
          std::string::size_type v8 = HIBYTE(cap);
        }
        else {
          std::string::size_type v8 = (std::string::size_type)__p[1];
        }
        std::string::append(a1, (const std::string::value_type *)v7, v8);
        if (SHIBYTE(cap) < 0) {
          operator delete(__p[0]);
        }
      }

      else
      {
        std::string::append(a1, *v3);
      }
    }

    v2 += 6LL;
  }

  while (v2 != 102);
}

void sub_10052E018( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
}

uint64_t sub_10052E064(uint64_t a1, int *a2)
{
  uint64_t v3 = *(void *)(a1 + 104);
  if (v3 && sub_1003C1048(v3))
  {
    v32.__r_.__value_.__s.__size_ = 12;
    strcpy((char *)&v32, "DELETE FROM ");
    int v5 = *(char *)(a1 + 23);
    if (v5 >= 0) {
      __int128 v6 = (const std::string::value_type *)a1;
    }
    else {
      __int128 v6 = *(const std::string::value_type **)a1;
    }
    if (v5 >= 0) {
      std::string::size_type v7 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      std::string::size_type v7 = *(void *)(a1 + 8);
    }
    std::string::size_type v8 = std::string::append(&v32, v6, v7);
    __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__l.__cap_ = v8->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0LL;
    v8->__r_.__value_.__l.__cap_ = 0LL;
    v8->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v10 = std::string::append(&v33, " WHERE ");
    __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__l.__cap_ = v10->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0LL;
    v10->__r_.__value_.__l.__cap_ = 0LL;
    v10->__r_.__value_.__r.__words[0] = 0LL;
    __int16 v12 = std::string::append(&v34, "TileX");
    __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__l.__cap_ = v12->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0LL;
    v12->__r_.__value_.__l.__cap_ = 0LL;
    v12->__r_.__value_.__r.__words[0] = 0LL;
    char v14 = std::string::append(&v35, " = ? AND ");
    __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__l.__cap_ = v14->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0LL;
    v14->__r_.__value_.__l.__cap_ = 0LL;
    v14->__r_.__value_.__r.__words[0] = 0LL;
    int v16 = std::string::append(&v36, "TileY");
    __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__l.__cap_ = v16->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0LL;
    v16->__r_.__value_.__l.__cap_ = 0LL;
    v16->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v18 = std::string::append(&v39, " = ? ");
    __int128 v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    int64_t cap = v18->__r_.__value_.__l.__cap_;
    __int128 __p = v19;
    v18->__r_.__value_.__l.__size_ = 0LL;
    v18->__r_.__value_.__l.__cap_ = 0LL;
    v18->__r_.__value_.__r.__words[0] = 0LL;
    if (cap >= 0) {
      p_p = (char *)&__p;
    }
    else {
      p_p = (char *)__p;
    }
    sub_1003C0D54(*(void *)(a1 + 104), p_p, &v39);
    std::string::size_type v21 = v39.__r_.__value_.__r.__words[0];
    unsigned int v22 = (sqlite3_stmt *)sub_100019240((uint64_t)v39.__r_.__value_.__l.__data_);
    int v24 = *a2;
    int v23 = a2[1];
    if (sub_1003C28BC(v22, 1, *a2) && sub_1003C28BC(v22, 2, v23))
    {
      sub_1003BB2BC(*(void *)(a1 + 104), v22);
      uint64_t v25 = sub_1006A19A8(*(void *)(a1 + 96), a2);
      if (!v21)
      {
LABEL_43:
        if (SHIBYTE(cap) < 0) {
          operator delete((void *)__p);
        }
        return v25;
      }
    }

    else
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      double v27 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_FAULT))
      {
        v39.__r_.__value_.__r.__words[0] = 68289539LL;
        LOWORD(v39.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&v39.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        WORD1(v39.__r_.__value_.__r.__words[2]) = 1025;
        HIDWORD(v39.__r_.__value_.__r.__words[2]) = v24;
        __int16 v40 = 1025;
        int v41 = v23;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:@TileHeader, wifi, failed to bind values for deleting #tile, x:%{private}d, y:%{private}d}",  (uint8_t *)&v39,  0x1Eu);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10183F120);
        }
      }

      double v28 = (os_log_s *)qword_101934868;
      if (os_signpost_enabled((os_log_t)qword_101934868))
      {
        v39.__r_.__value_.__r.__words[0] = 68289539LL;
        LOWORD(v39.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&v39.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        WORD1(v39.__r_.__value_.__r.__words[2]) = 1025;
        HIDWORD(v39.__r_.__value_.__r.__words[2]) = v24;
        __int16 v40 = 1025;
        int v41 = v23;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v28,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "@TileHeader, wifi, failed to bind values for deleting #tile",  "{msg%{public}.0s:@TileHeader, wifi, failed to bind values for deleting #tile, x:%{private}d, y:%{private}d}",  (uint8_t *)&v39,  0x1Eu);
      }

      uint64_t v25 = 0LL;
      if (!v21) {
        goto LABEL_43;
      }
    }

    (*(void (**)(std::string::size_type))(*(void *)v21 + 8LL))(v21);
    goto LABEL_43;
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10183F120);
  }
  int v26 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
  {
    LOWORD(v39.__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_INFO,  "not connected to wifi #tile header table",  (uint8_t *)&v39,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v39, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    LOWORD(__p) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &v39,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "not connected to wifi #tile header table",  &__p,  2);
    int v31 = (std::string *)v30;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTileHeaderDatabase::deleteByTileXY(const WifiTileXY &)",  "%s\n",  v30);
    if (v31 != &v39) {
      free(v31);
    }
  }

  return 0LL;
}

void sub_10052E588( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, void *a32, uint64_t a33, int a34, __int16 a35, char a36, char a37, uint64_t a38, void *a39, uint64_t a40, int a41, __int16 a42, char a43, char a44, uint64_t a45, void *__p, uint64_t a47, int a48, __int16 a49, char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (v58) {
    (*(void (**)(uint64_t))(*(void *)v58 + 8LL))(v58);
  }
  if (a51 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10052E658(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = 0;
  *(_BYTE *)(a3 + 144) = 0;
  uint64_t v5 = *(void *)(a1 + 104);
  if (v5 && sub_1003C1048(v5))
  {
    v64.__r_.__value_.__s.__size_ = 7;
    strcpy((char *)&v64, "SELECT ");
    sub_10052DF10(&__p);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = __p.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    __int128 v9 = std::string::append(&v64, (const std::string::value_type *)p_p, size);
    __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v65.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v65.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    v9->__r_.__value_.__r.__words[0] = 0LL;
    char v62 = 6;
    strcpy(__s, " FROM ");
    __int128 v11 = std::string::append(&v65, __s, 6uLL);
    __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v66.__r_.__value_.__l.__cap_ = v11->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    v11->__r_.__value_.__r.__words[0] = 0LL;
    int v13 = *(char *)(a1 + 23);
    if (v13 >= 0) {
      char v14 = (const std::string::value_type *)a1;
    }
    else {
      char v14 = *(const std::string::value_type **)a1;
    }
    if (v13 >= 0) {
      std::string::size_type v15 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      std::string::size_type v15 = *(void *)(a1 + 8);
    }
    int v16 = std::string::append(&v66, v14, v15);
    __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v67.__r_.__value_.__l.__cap_ = v16->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v67.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0LL;
    v16->__r_.__value_.__l.__cap_ = 0LL;
    v16->__r_.__value_.__r.__words[0] = 0LL;
    char v60 = 7;
    strcpy(v59, " WHERE ");
    uint64_t v18 = std::string::append(&v67, v59, 7uLL);
    __int128 v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v68.__r_.__value_.__l.__cap_ = v18->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v68.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0LL;
    v18->__r_.__value_.__l.__cap_ = 0LL;
    v18->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v20 = std::string::append(&v68, "TileX");
    __int128 v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v69.__r_.__value_.__l.__cap_ = v20->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0LL;
    v20->__r_.__value_.__l.__cap_ = 0LL;
    v20->__r_.__value_.__r.__words[0] = 0LL;
    char v58 = 7;
    strcpy(v57, "=? AND ");
    unsigned int v22 = std::string::append(&v69, v57, 7uLL);
    __int128 v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v70.__r_.__value_.__l.__cap_ = v22->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0LL;
    v22->__r_.__value_.__l.__cap_ = 0LL;
    v22->__r_.__value_.__r.__words[0] = 0LL;
    int v24 = std::string::append(&v70, "TileY");
    __int128 v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    *(void *)&v73[16] = v24->__r_.__value_.__l.__cap_;
    *(_OWORD *)char v73 = v25;
    v24->__r_.__value_.__l.__size_ = 0LL;
    v24->__r_.__value_.__l.__cap_ = 0LL;
    v24->__r_.__value_.__r.__words[0] = 0LL;
    char v56 = 2;
    strcpy(v55, "=?");
    int v26 = std::string::append((std::string *)v73, v55, 2uLL);
    __int128 v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
    int64_t cap = v26->__r_.__value_.__l.__cap_;
    *(_OWORD *)__int16 v71 = v27;
    v26->__r_.__value_.__l.__size_ = 0LL;
    v26->__r_.__value_.__l.__cap_ = 0LL;
    v26->__r_.__value_.__r.__words[0] = 0LL;
    if (v56 < 0) {
      operator delete(*(void **)v55);
    }
    if ((v73[23] & 0x80000000) != 0) {
      operator delete(*(void **)v73);
    }
    if (v58 < 0) {
      operator delete(*(void **)v57);
    }
    if (v60 < 0) {
      operator delete(*(void **)v59);
    }
    if (v62 < 0) {
      operator delete(*(void **)__s);
    }
    if (cap >= 0) {
      double v28 = (char *)v71;
    }
    else {
      double v28 = (char *)v71[0];
    }
    sub_1003C0D54(*(void *)(a1 + 104), v28, v73);
    uint64_t v29 = *(void *)v73;
    int v30 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v73);
    int v31 = a2[1];
    if (sub_1003C28BC(v30, 1, *a2) && sub_1003C28BC(v30, 2, v31) && j__sqlite3_step(v30) == 100)
    {
      int v54 = sqlite3_column_int(v30, 0);
      int v53 = sqlite3_column_int(v30, 1);
      double v32 = sqlite3_column_double(v30, 2);
      double v33 = sqlite3_column_double(v30, 3);
      double v34 = sqlite3_column_double(v30, 4);
      double v35 = sqlite3_column_double(v30, 5);
      double v36 = sqlite3_column_double(v30, 6);
      double v37 = sqlite3_column_double(v30, 7);
      double v38 = sqlite3_column_double(v30, 8);
      sqlite3_int64 v52 = sqlite3_column_int64(v30, 9);
      int v39 = sqlite3_column_int(v30, 10);
      int v51 = sqlite3_column_int(v30, 11);
      sqlite3_int64 v40 = sqlite3_column_int64(v30, 12);
      int v41 = sqlite3_column_int(v30, 13);
      sqlite3_int64 v42 = sqlite3_column_int64(v30, 14);
      sqlite3_int64 v43 = sqlite3_column_int64(v30, 15);
      int v44 = sqlite3_column_int(v30, 16);
      sub_1006A12B4(*(void *)(a1 + 96), a2, &v70);
      if (v70.__r_.__value_.__s.__data_[16])
      {
        sub_1009242C0( (uint64_t)v73,  v54,  v53,  v39,  v51,  v40,  v41,  v44,  v32,  v33,  v34,  v35,  v36,  v37,  v38,  (double)v52,  COERCE__INT64((double)v42),  COERCE__INT64((double)v43),  (uint64_t)v70.__r_.__value_.__l.__data_,  v70.__r_.__value_.__l.__size_);
        __int128 v45 = v79;
        *(_OWORD *)(a3 + 96) = v78;
        *(_OWORD *)(a3 + 112) = v45;
        *(_OWORD *)(a3 + 12_Block_object_dispose(va, 8) = v80;
        __int128 v46 = v75;
        *(_OWORD *)(a3 + 32) = v74;
        *(_OWORD *)(a3 + 4_Block_object_dispose(va, 8) = v46;
        __int128 v47 = v77;
        *(_OWORD *)(a3 + 64) = v76;
        *(_OWORD *)(a3 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v47;
        __int128 v48 = *(_OWORD *)&v73[16];
        *(_OWORD *)a3 = *(_OWORD *)v73;
        *(_OWORD *)(a3 + 16) = v48;
        *(_BYTE *)(a3 + 144) = 1;
      }
    }

    if (v29) {
      (*(void (**)(uint64_t))(*(void *)v29 + 8LL))(v29);
    }
    if (SHIBYTE(cap) < 0) {
      operator delete(v71[0]);
    }
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    uint64_t v49 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)char v73 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_INFO,  "not connected to wifi #tile header table",  v73,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(v73, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      LOWORD(v71[0]) = 0;
      int v50 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v73,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "not connected to wifi #tile header table",  v71,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::optional<CLWifiTileHeaderEntry> CLWifiTileHeaderDatabase::selectByTileXY(const WifiTileXY &)",  "%s\n",  v50);
      if (v50 != v73) {
        free(v50);
      }
    }
  }

void sub_10052ED50( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, void *a26, uint64_t a27, uint64_t a28, void *a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, void *a35, uint64_t a36, uint64_t a37, uint64_t a38, void *a39, uint64_t a40, uint64_t a41, uint64_t a42, void *a43, uint64_t a44, uint64_t a45, uint64_t a46, void *a47, uint64_t a48, uint64_t a49, uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,uint64_t a58,void *__p,uint64_t a60,int a61,__int16 a62,char a63)
{
  if (v64) {
    (*(void (**)(uint64_t))(*(void *)v64 + 8LL))(v64);
  }
  if (a64 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10052EEF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  if (v2 && sub_1003C1048(v2))
  {
    v21.__r_.__value_.__s.__size_ = 21;
    strcpy((char *)&v21, "SELECT COUNT(*) FROM ");
    int v3 = *(char *)(a1 + 23);
    if (v3 >= 0) {
      __n128 v4 = (const std::string::value_type *)a1;
    }
    else {
      __n128 v4 = *(const std::string::value_type **)a1;
    }
    if (v3 >= 0) {
      std::string::size_type v5 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      std::string::size_type v5 = *(void *)(a1 + 8);
    }
    __int128 v6 = std::string::append(&v21, v4, v5);
    __int128 v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v24.__r_.__value_.__l.__cap_ = v6->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0LL;
    v6->__r_.__value_.__l.__cap_ = 0LL;
    v6->__r_.__value_.__r.__words[0] = 0LL;
    std::string::size_type v8 = std::string::append(&v24, ";");
    __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    int64_t cap = v8->__r_.__value_.__l.__cap_;
    *(_OWORD *)std::string __p = v9;
    v8->__r_.__value_.__l.__size_ = 0LL;
    v8->__r_.__value_.__l.__cap_ = 0LL;
    v8->__r_.__value_.__r.__words[0] = 0LL;
    if (cap >= 0) {
      __int128 v10 = (char *)__p;
    }
    else {
      __int128 v10 = (char *)__p[0];
    }
    sub_1003C0D54(*(void *)(a1 + 104), v10, &v24);
    std::string::size_type v11 = v24.__r_.__value_.__r.__words[0];
    __int128 v12 = (sqlite3_stmt *)sub_100019240((uint64_t)v24.__r_.__value_.__l.__data_);
    if (j__sqlite3_step(v12) == 100)
    {
      uint64_t v13 = sqlite3_column_int(v12, 0);
      if (!v11) {
        goto LABEL_19;
      }
    }

    else
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      int v16 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
      {
        LOWORD(v24.__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "failed to select count(*) from wifi #tile header table",  (uint8_t *)&v24,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&v24, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10183F120);
        }
        LOWORD(v21.__r_.__value_.__l.__data_) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &v24,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "failed to select count(*) from wifi #tile header table",  &v21,  2);
        uint64_t v20 = (std::string *)v19;
        sub_10029211C("Generic", 1LL, 0, 0LL, "int CLWifiTileHeaderDatabase::countTileHeaders()", "%s\n", v19);
        if (v20 != &v24) {
          free(v20);
        }
      }

      uint64_t v13 = 0LL;
      if (!v11) {
        goto LABEL_19;
      }
    }

    (*(void (**)(std::string::size_type))(*(void *)v11 + 8LL))(v11);
LABEL_19:
    if (SHIBYTE(cap) < 0) {
      operator delete(__p[0]);
    }
    return v13;
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10183F120);
  }
  char v14 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
  {
    LOWORD(v24.__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "not connected to wifi #tile header table",  (uint8_t *)&v24,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v24, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    LOWORD(__p[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &v24,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "not connected to wifi #tile header table",  __p,  2);
    uint64_t v18 = (std::string *)v17;
    sub_10029211C("Generic", 1LL, 0, 2LL, "int CLWifiTileHeaderDatabase::countTileHeaders()", "%s\n", v17);
    if (v18 != &v24) {
      free(v18);
    }
  }

  return 0LL;
}

void sub_10052F2F0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30)
{
  if (v30) {
    (*(void (**)(uint64_t))(*(void *)v30 + 8LL))(v30);
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10052F364(uint64_t a1, int *a2, double a3)
{
  uint64_t v6 = sub_10052F3F0(a1, a2, &__p, a3);
  return v6;
}

void sub_10052F3D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10052F3F0(uint64_t a1, int *a2, std::string *this, double a4)
{
  if (std::string::compare(this, "AccessTimestamp") && std::string::compare(this, "GizmoSyncTimestamp")) {
    sub_10123C748();
  }
  uint64_t v8 = *(void *)(a1 + 104);
  if (v8 && sub_1003C1048(v8))
  {
    v49.__r_.__value_.__s.__size_ = 7;
    strcpy((char *)&v49, "UPDATE ");
    int v9 = *(char *)(a1 + 23);
    if (v9 >= 0) {
      __int128 v10 = (const std::string::value_type *)a1;
    }
    else {
      __int128 v10 = *(const std::string::value_type **)a1;
    }
    if (v9 >= 0) {
      std::string::size_type v11 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      std::string::size_type v11 = *(void *)(a1 + 8);
    }
    __int128 v12 = std::string::append(&v49, v10, v11);
    __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__l.__cap_ = v12->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0LL;
    v12->__r_.__value_.__l.__cap_ = 0LL;
    v12->__r_.__value_.__r.__words[0] = 0LL;
    char v14 = std::string::append(&v50, " SET ");
    __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__l.__cap_ = v14->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0LL;
    v14->__r_.__value_.__l.__cap_ = 0LL;
    v14->__r_.__value_.__r.__words[0] = 0LL;
    int size = (char)this->__r_.__value_.__s.__size_;
    if (size >= 0) {
      __int128 v17 = this;
    }
    else {
      __int128 v17 = (std::string *)this->__r_.__value_.__r.__words[0];
    }
    if (size >= 0) {
      std::string::size_type v18 = this->__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type v18 = this->__r_.__value_.__l.__size_;
    }
    __int128 v19 = std::string::append(&v51, (const std::string::value_type *)v17, v18);
    __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__l.__cap_ = v19->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0LL;
    v19->__r_.__value_.__l.__cap_ = 0LL;
    v19->__r_.__value_.__r.__words[0] = 0LL;
    std::string v21 = std::string::append(&v52, " = ? WHERE ");
    __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v53.__r_.__value_.__l.__cap_ = v21->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0LL;
    v21->__r_.__value_.__l.__cap_ = 0LL;
    v21->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v23 = std::string::append(&v53, "TileX");
    __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v54.__r_.__value_.__l.__cap_ = v23->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0LL;
    v23->__r_.__value_.__l.__cap_ = 0LL;
    v23->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v25 = std::string::append(&v54, " = ? AND ");
    __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v55.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v26;
    v25->__r_.__value_.__l.__size_ = 0LL;
    v25->__r_.__value_.__l.__cap_ = 0LL;
    v25->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v27 = std::string::append(&v55, "TileY");
    __int128 v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
    *(void *)&v58[16] = v27->__r_.__value_.__l.__cap_;
    *(_OWORD *)char v58 = v28;
    v27->__r_.__value_.__l.__size_ = 0LL;
    v27->__r_.__value_.__l.__cap_ = 0LL;
    v27->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v29 = std::string::append((std::string *)v58, " = ?");
    __int128 v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
    int64_t cap = v29->__r_.__value_.__l.__cap_;
    __int128 __p = v30;
    v29->__r_.__value_.__l.__size_ = 0LL;
    v29->__r_.__value_.__l.__cap_ = 0LL;
    v29->__r_.__value_.__r.__words[0] = 0LL;
    if ((v58[23] & 0x80000000) != 0) {
      operator delete(*(void **)v58);
    }
    if (cap >= 0) {
      p_p = (char *)&__p;
    }
    else {
      p_p = (char *)__p;
    }
    sub_1003C0D54(*(void *)(a1 + 104), p_p, v58);
    uint64_t v32 = *(void *)v58;
    double v33 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v58);
    if ((uint64_t)a4)
    {
      double v34 = v33;
      int v36 = *a2;
      int v35 = a2[1];
      if (!sub_1003C2D24(v33, 1, (uint64_t)a4) || !sub_1003C28BC(v34, 2, v36) || !sub_1003C28BC(v34, 3, v35))
      {
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10183F120);
        }
        int v39 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_FAULT))
        {
          *(void *)char v58 = 68289795LL;
          *(_WORD *)&v58[8] = 2082;
          *(void *)&v58[10] = "";
          *(_WORD *)&v58[18] = 2049;
          *(void *)&v58[20] = (uint64_t)a4;
          __int16 v59 = 1025;
          int v60 = v36;
          __int16 v61 = 1025;
          int v62 = v35;
          _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:@TileHeader, wifi, failed to bind values for #tile to update timestamp, timestamp :%{private}lld, x:%{private}d, y:%{private}d}",  v58,  0x28u);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10183F120);
          }
        }

        sqlite3_int64 v40 = (os_log_s *)qword_101934868;
        if (os_signpost_enabled((os_log_t)qword_101934868))
        {
          *(void *)char v58 = 68289795LL;
          *(_WORD *)&v58[8] = 2082;
          *(void *)&v58[10] = "";
          *(_WORD *)&v58[18] = 2049;
          *(void *)&v58[20] = (uint64_t)a4;
          __int16 v59 = 1025;
          int v60 = v36;
          __int16 v61 = 1025;
          int v62 = v35;
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v40,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "@TileHeader, wifi, failed to bind values for #tile to update timestamp",  "{msg%{public}.0s:@TileHeader, wifi, failed to bind values for #tile to update timestamp, timestamp :%{private}lld, x:%{private}d, y:%{private}d}",  v58,  0x28u);
        }

        goto LABEL_60;
      }

      if (j__sqlite3_step(v34) == 101)
      {
        uint64_t v37 = 1LL;
LABEL_61:
        if (v32) {
          (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
        }
        if (SHIBYTE(cap) < 0) {
          operator delete((void *)__p);
        }
        return v37;
      }

      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      sqlite3_int64 v43 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)char v58 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_ERROR,  "failed to update timestamp of #tile header",  v58,  2u);
      }

      if (!sub_1002921D0(115, 0))
      {
LABEL_60:
        uint64_t v37 = 0LL;
        goto LABEL_61;
      }

      bzero(v58, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      LOWORD(v55.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  v58,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "failed to update timestamp of #tile header",  &v55,  2);
      __int128 v45 = (char *)v44;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLWifiTileHeaderDatabase::updateTimestampByTileXY(cl::chrono::CFAbsoluteTimeClock::time_point, const WifiTi leXY &, const std::string &)",  "%s\n",  v44);
    }

    else
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      int v41 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)char v58 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "@TileList, touch, ignoring, 0, #CloneMe",  v58,  2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_60;
      }
      bzero(v58, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      LOWORD(v55.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  v58,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "@TileList, touch, ignoring, 0, #CloneMe",  &v55,  2);
      __int128 v45 = (char *)v48;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLWifiTileHeaderDatabase::updateTimestampByTileXY(cl::chrono::CFAbsoluteTimeClock::time_point, const WifiTi leXY &, const std::string &)",  "%s\n",  v48);
    }

    if (v45 != v58) {
      free(v45);
    }
    goto LABEL_60;
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10183F120);
  }
  double v38 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)char v58 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_INFO,  "not connected to wifi #tile header table",  v58,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(v58, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    LOWORD(__p) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  v58,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "not connected to wifi #tile header table",  &__p,  2);
    __int128 v47 = (char *)v46;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiTileHeaderDatabase::updateTimestampByTileXY(cl::chrono::CFAbsoluteTimeClock::time_point, const WifiTile XY &, const std::string &)",  "%s\n",  v46);
    if (v47 != v58) {
      free(v47);
    }
  }

  return 0LL;
}

void sub_10052FC5C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, void *a31, uint64_t a32, uint64_t a33, uint64_t a34, void *a35, uint64_t a36, uint64_t a37, uint64_t a38, void *__p, uint64_t a40, int a41, __int16 a42, char a43, char a44)
{
  if (v44) {
    (*(void (**)(uint64_t))(*(void *)v44 + 8LL))(v44);
  }
  if (a44 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10052FD64(uint64_t a1, int *a2, double a3)
{
  uint64_t v6 = sub_10052F3F0(a1, a2, &__p, a3);
  return v6;
}

void sub_10052FDD4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_10052FDF0(uint64_t a1, int *a2)
{
  uint64_t v3 = *(void *)(a1 + 104);
  if (v3 && sub_1003C1048(v3))
  {
    v37.__r_.__value_.__s.__size_ = 7;
    strcpy((char *)&v37, "SELECT ");
    std::string::size_type v5 = std::string::append(&v37, "AccessTimestamp");
    __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0LL;
    v5->__r_.__value_.__l.__cap_ = 0LL;
    v5->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v7 = std::string::append(&v38, " FROM ");
    __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__l.__cap_ = v7->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v8;
    v7->__r_.__value_.__l.__size_ = 0LL;
    v7->__r_.__value_.__l.__cap_ = 0LL;
    v7->__r_.__value_.__r.__words[0] = 0LL;
    int v9 = *(char *)(a1 + 23);
    if (v9 >= 0) {
      __int128 v10 = (const std::string::value_type *)a1;
    }
    else {
      __int128 v10 = *(const std::string::value_type **)a1;
    }
    if (v9 >= 0) {
      std::string::size_type v11 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      std::string::size_type v11 = *(void *)(a1 + 8);
    }
    __int128 v12 = std::string::append(&v39, v10, v11);
    __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__l.__cap_ = v12->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0LL;
    v12->__r_.__value_.__l.__cap_ = 0LL;
    v12->__r_.__value_.__r.__words[0] = 0LL;
    char v14 = std::string::append(&v40, " WHERE ");
    __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__l.__cap_ = v14->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0LL;
    v14->__r_.__value_.__l.__cap_ = 0LL;
    v14->__r_.__value_.__r.__words[0] = 0LL;
    int v16 = std::string::append(&v41, "TileX");
    __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__l.__cap_ = v16->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0LL;
    v16->__r_.__value_.__l.__cap_ = 0LL;
    v16->__r_.__value_.__r.__words[0] = 0LL;
    std::string::size_type v18 = std::string::append(&v42, " = ? AND ");
    __int128 v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__l.__cap_ = v18->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0LL;
    v18->__r_.__value_.__l.__cap_ = 0LL;
    v18->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v20 = std::string::append(&v43, "TileY");
    __int128 v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__l.__cap_ = v20->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0LL;
    v20->__r_.__value_.__l.__cap_ = 0LL;
    v20->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v22 = std::string::append(&v46, " = ?");
    __int128 v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    int64_t cap = v22->__r_.__value_.__l.__cap_;
    __int128 __p = v23;
    v22->__r_.__value_.__l.__size_ = 0LL;
    v22->__r_.__value_.__l.__cap_ = 0LL;
    v22->__r_.__value_.__r.__words[0] = 0LL;
    if (cap >= 0) {
      p_p = (char *)&__p;
    }
    else {
      p_p = (char *)__p;
    }
    sub_1003C0D54(*(void *)(a1 + 104), p_p, &v46);
    std::string::size_type v25 = v46.__r_.__value_.__r.__words[0];
    __int128 v26 = (sqlite3_stmt *)sub_100019240((uint64_t)v46.__r_.__value_.__l.__data_);
    int v28 = *a2;
    int v27 = a2[1];
    if (sub_1003C28BC(v26, 1, v28) && sub_1003C28BC(v26, 2, v27))
    {
      if (j__sqlite3_step(v26) == 100)
      {
        double v29 = (double)sqlite3_column_int64(v26, 0);
        unint64_t v30 = *(void *)&v29 & 0xFFFFFFFFFFFFFF00LL;
LABEL_46:
        if (v25) {
          (*(void (**)(std::string::size_type))(*(void *)v25 + 8LL))(v25);
        }
        if (SHIBYTE(cap) < 0) {
          operator delete((void *)__p);
        }
        return v30 & 0xFFFFFFFFFFFFFF00LL | LOBYTE(v29);
      }
    }

    else
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      uint64_t v32 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_FAULT))
      {
        v46.__r_.__value_.__r.__words[0] = 68289539LL;
        LOWORD(v46.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&v46.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        WORD1(v46.__r_.__value_.__r.__words[2]) = 1025;
        HIDWORD(v46.__r_.__value_.__r.__words[2]) = v28;
        __int16 v47 = 1025;
        int v48 = v27;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:@TileHeader, wifi, failed to bind values for #tile to select timestamp, x:%{priva te}d, y:%{private}d}",  (uint8_t *)&v46,  0x1Eu);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10183F120);
        }
      }

      double v33 = (os_log_s *)qword_101934868;
      if (os_signpost_enabled((os_log_t)qword_101934868))
      {
        v46.__r_.__value_.__r.__words[0] = 68289539LL;
        LOWORD(v46.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&v46.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        WORD1(v46.__r_.__value_.__r.__words[2]) = 1025;
        HIDWORD(v46.__r_.__value_.__r.__words[2]) = v28;
        __int16 v47 = 1025;
        int v48 = v27;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v33,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "@TileHeader, wifi, failed to bind values for #tile to select timestamp",  "{msg%{public}.0s:@TileHeader, wifi, failed to bind values for #tile to select timestamp, x:%{priva te}d, y:%{private}d}",  (uint8_t *)&v46,  0x1Eu);
      }
    }

    LOBYTE(v29) = 0;
    unint64_t v30 = 0LL;
    goto LABEL_46;
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10183F120);
  }
  int v31 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
  {
    LOWORD(v46.__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_INFO,  "not connected to wifi #tile header table",  (uint8_t *)&v46,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v46, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    LOWORD(__p) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &v46,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "not connected to wifi #tile header table",  &__p,  2);
    int v36 = (std::string *)v35;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::optional<cl::chrono::CFAbsoluteTimeClock::time_point> CLWifiTileHeaderDatabase::selectAccessTimestampByTileXY (const WifiTileXY &)",  "%s\n",  v35);
    if (v36 != &v46) {
      free(v36);
    }
  }

  LOBYTE(v29) = 0;
  unint64_t v30 = 0LL;
  return v30 & 0xFFFFFFFFFFFFFF00LL | LOBYTE(v29);
}

void sub_1005303A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, void *a31, uint64_t a32, uint64_t a33, uint64_t a34, void *a35, uint64_t a36, uint64_t a37, uint64_t a38, void *__p, uint64_t a40, int a41, __int16 a42, char a43, char a44)
{
  if (v44) {
    (*(void (**)(uint64_t))(*(void *)v44 + 8LL))(v44);
  }
  if (a44 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1005304A8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  uint64_t v4 = *(void *)(a1 + 104);
  if (v4 && sub_1003C1048(v4))
  {
    v45.__r_.__value_.__s.__size_ = 7;
    strcpy((char *)&v45, "SELECT ");
    sub_10052DF10(&__p);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type size = __p.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    __int128 v7 = std::string::append(&v45, (const std::string::value_type *)p_p, size);
    __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__l.__cap_ = v7->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v8;
    v7->__r_.__value_.__l.__size_ = 0LL;
    v7->__r_.__value_.__l.__cap_ = 0LL;
    v7->__r_.__value_.__r.__words[0] = 0LL;
    char v43 = 6;
    strcpy(__s, " FROM ");
    int v9 = std::string::append(&v46, __s, 6uLL);
    __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__l.__cap_ = v9->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    v9->__r_.__value_.__r.__words[0] = 0LL;
    int v11 = *(char *)(a1 + 23);
    if (v11 >= 0) {
      __int128 v12 = (const std::string::value_type *)a1;
    }
    else {
      __int128 v12 = *(const std::string::value_type **)a1;
    }
    if (v11 >= 0) {
      std::string::size_type v13 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      std::string::size_type v13 = *(void *)(a1 + 8);
    }
    char v14 = std::string::append(&v47, v12, v13);
    __int128 v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    int64_t cap = v14->__r_.__value_.__l.__cap_;
    *(_OWORD *)std::stringbuf::string_type buf = v15;
    v14->__r_.__value_.__l.__size_ = 0LL;
    v14->__r_.__value_.__l.__cap_ = 0LL;
    v14->__r_.__value_.__r.__words[0] = 0LL;
    if (v43 < 0) {
      operator delete(*(void **)__s);
    }
    if (cap >= 0) {
      int v16 = (char *)buf;
    }
    else {
      int v16 = *(char **)buf;
    }
    sub_1003C0D54(*(void *)(a1 + 104), v16, &v47);
    std::string::size_type v17 = v47.__r_.__value_.__r.__words[0];
    std::string::size_type v18 = (sqlite3_stmt *)sub_100019240((uint64_t)v47.__r_.__value_.__l.__data_);
    while (j__sqlite3_step(v18) == 100)
    {
      int v41 = sqlite3_column_int(v18, 0);
      int v40 = sqlite3_column_int(v18, 1);
      v47.__r_.__value_.__r.__words[0] = sqlite3_column_double(v18, 2);
      v46.__r_.__value_.__r.__words[0] = sqlite3_column_double(v18, 3);
      v45.__r_.__value_.__r.__words[0] = sqlite3_column_double(v18, 4);
      __p.__r_.__value_.__r.__words[0] = sqlite3_column_double(v18, 5);
      *(void *)__s = sqlite3_column_double(v18, 6);
      double v39 = sqlite3_column_double(v18, 7);
      double v38 = sqlite3_column_double(v18, 8);
      sqlite3_int64 v19 = sqlite3_column_int64(v18, 9);
      int v20 = sqlite3_column_int(v18, 10);
      int v37 = sqlite3_column_int(v18, 11);
      sqlite3_int64 v36 = sqlite3_column_int64(v18, 12);
      int v35 = sqlite3_column_int(v18, 13);
      sqlite3_int64 v21 = sqlite3_column_int64(v18, 14);
      sqlite3_int64 v22 = sqlite3_column_int64(v18, 15);
      sqlite3_int64 v23 = sqlite3_column_int64(v18, 16);
      sqlite3_int64 v34 = v23;
      double v24 = (double)v19;
      double v33 = (double)v19;
      uint64_t v32 = v20;
      double v30 = (double)v22;
      double v31 = (double)v21;
      unint64_t v25 = a2[1];
      if (v25 >= a2[2])
      {
        uint64_t v26 = sub_10053132C( a2,  &v41,  &v40,  (double *)&v47,  (double *)&v46,  (double *)&v45,  (double *)&__p,  (double *)__s,  &v39,  &v38,  &v33,  &v32,  &v37,  &v36,  &v35,  (uint64_t *)&v31,  (uint64_t *)&v30,  (int *)&v34);
      }

      else
      {
        sub_100924284( v25,  v41,  v40,  v20,  v37,  v36,  v35,  v23,  *(double *)&v47.__r_.__value_.__l.__data_,  *(double *)&v46.__r_.__value_.__l.__data_,  *(double *)&v45.__r_.__value_.__l.__data_,  *(double *)&__p.__r_.__value_.__l.__data_,  *(double *)__s,  v39,  v38,  v24,  COERCE__INT64((double)v21),  COERCE__INT64((double)v22));
        uint64_t v26 = v25 + 144;
        a2[1] = v25 + 144;
      }

      a2[1] = v26;
    }

    if (v17) {
      (*(void (**)(std::string::size_type))(*(void *)v17 + 8LL))(v17);
    }
    if (SHIBYTE(cap) < 0) {
      operator delete(*(void **)buf);
    }
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    int v27 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_INFO,  "not connected to wifi #tile header table",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      LOWORD(v47.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "not connected to wifi #tile header table",  &v47,  2);
      double v29 = (uint8_t *)v28;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::vector<CLWifiTileHeaderEntry> CLWifiTileHeaderDatabase::selectAll()",  "%s\n",  v28);
      if (v29 != buf) {
        free(v29);
      }
    }
  }

void sub_1005309F0(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(va, 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(a1);
}

void sub_100530B08(char *a1@<X0>, const char **a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  __int128 v8 = operator new(0x88uLL);
  sub_1003B35F4(v8, a3);
  *a4 = v8;
  if (!sub_1003C1048((uint64_t)v8))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    std::string::size_type v13 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "failed to connect to wifi #tile header database",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_24;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    v16[0] = 0;
    __int128 v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "failed to connect to wifi #tile header database",  v16,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::unique_ptr<CLSqliteDatabase> CLWifiTileHeaderDatabase::connectAndCreateTableIfNotExistsIfNecessary(con st std::string &, const CLSqliteDatabase::ColumnInfo *, const CLSqliteDatabase::SqliteProperties &)",  "%s\n",  v15);
    goto LABEL_37;
  }

  if (a1[23] >= 0) {
    int v9 = a1;
  }
  else {
    int v9 = *(char **)a1;
  }
  if ((sub_1003B59A0((uint64_t)v8, v9, a2, 0LL, 0) & 1) == 0)
  {
    __int128 v10 = a1[23] >= 0 ? a1 : *(char **)a1;
    if ((sub_1003B747C(v8, v10) & 1) == 0)
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      char v14 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "failed to connect to wifi #tile heeaders table",  buf,  2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_24;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      v16[0] = 0;
      __int128 v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "failed to connect to wifi #tile heeaders table",  v16,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static std::unique_ptr<CLSqliteDatabase> CLWifiTileHeaderDatabase::connectAndCreateTableIfNotExistsIfNecessary(c onst std::string &, const CLSqliteDatabase::ColumnInfo *, const CLSqliteDatabase::SqliteProperties &)",  "%s\n",  v15);
LABEL_37:
LABEL_24:
      *a4 = 0LL;
      (*(void (**)(void *))(*(void *)v8 + 8LL))(v8);
      return;
    }
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10183F120);
  }
  int v11 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "successfully created wifi #tile headers table",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183F120);
    }
    v16[0] = 0;
    __int128 v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "successfully created wifi #tile headers table",  v16,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::unique_ptr<CLSqliteDatabase> CLWifiTileHeaderDatabase::connectAndCreateTableIfNotExistsIfNecessary(con st std::string &, const CLSqliteDatabase::ColumnInfo *, const CLSqliteDatabase::SqliteProperties &)",  "%s\n",  v12);
  }

void sub_100530F70(_Unwind_Exception *a1)
{
  void *v2 = 0LL;
  (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_100530FB0(uint64_t a1, int *a2)
{
  return sub_1006A1018(*(void *)(a1 + 96), a2);
}

void sub_100530FCC(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, void *a6@<X8>)
{
}

void sub_100530FD4(uint64_t a1@<X0>, int *a2@<X1>, std::string::size_type *a3@<X8>)
{
}

uint64_t sub_100530FDC(uint64_t a1)
{
  sqlite3_int64 v19 = 0LL;
  int v20 = 0LL;
  unint64_t v21 = 0LL;
  sub_1010DDBC0(buf, "SELECT NAME FROM sqlite_master WHERE type='table' AND name LIKE 'wifi_tile_%'");
  if (SBYTE3(v26) >= 0) {
    uint64_t v2 = (char *)buf;
  }
  else {
    uint64_t v2 = *(char **)buf;
  }
  sub_1003C0D54(*(void *)(a1 + 104), v2, &v18);
  uint64_t v3 = (sqlite3_stmt *)sub_100019240(v18);
  while (j__sqlite3_step(v3) == 100)
  {
    uint64_t v4 = (char *)sqlite3_column_text(v3, 0);
    sub_1010DDBC0(__p, v4);
    std::string::size_type v5 = v20;
    if ((unint64_t)v20 >= v21)
    {
      __int128 v7 = (_BYTE *)sub_10112142C((uint64_t *)&v19, (__int128 *)__p);
    }

    else
    {
      if (SHIBYTE(v17) < 0)
      {
        sub_1010DD48C(v20, __p[0], (unint64_t)__p[1]);
      }

      else
      {
        __int128 v6 = *(_OWORD *)__p;
        *((void *)v20 + 2) = v17;
        _OWORD *v5 = v6;
      }

      __int128 v7 = (char *)v5 + 24;
    }

    int v20 = v7;
    if (SHIBYTE(v17) < 0) {
      operator delete(__p[0]);
    }
  }

  sqlite3_reset(v3);
  uint64_t v8 = v18;
  uint64_t v18 = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  if (SBYTE3(v26) < 0) {
    operator delete(*(void **)buf);
  }
  int v9 = v19;
  __int128 v10 = v20;
  if (v19 == v20)
  {
    uint64_t v11 = 0LL;
  }

  else
  {
    LODWORD(v11) = 0;
    do
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183F120);
      }
      __int128 v12 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
      {
        std::string::size_type v13 = v9;
        *(_DWORD *)std::stringbuf::string_type buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v23 = 2082;
        double v24 = "";
        __int16 v25 = 2081;
        uint64_t v26 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:@TileHeader, wifi, dropping legacy tile table, tableName:%{private, location:escape_only}s}",  buf,  0x1Cu);
      }

      char v14 = v9;
      sub_1003C0200(*(void *)(a1 + 104), v14);
      uint64_t v11 = (v11 + 1);
      v9 += 24;
    }

    while (v9 != v10);
  }

  *(void *)std::stringbuf::string_type buf = &v19;
  sub_1000129D4((void ***)buf);
  return v11;
}

void sub_100531250( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, char a19, uint64_t a20, uint64_t a21, char *__p, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  std::string __p = &a19;
  sub_1000129D4((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1005312D4(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_100531300(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_10069FA74();
    operator delete(v4);
  }

uint64_t sub_10053132C( uint64_t *a1, int *a2, int *a3, double *a4, double *a5, double *a6, double *a7, double *a8, double *a9, double *a10, double *a11, uint64_t *a12, int *a13, uint64_t *a14, int *a15, uint64_t *a16, uint64_t *a17, int *a18)
{
  sqlite3_int64 v19 = (char *)*a1;
  unint64_t v20 = 0x8E38E38E38E38E39LL * ((a1[1] - *a1) >> 4);
  unint64_t v21 = v20 + 1;
  if (v20 + 1 > 0x1C71C71C71C71C7LL) {
    sub_100007008();
  }
  double v29 = a17;
  int v28 = a18;
  double v30 = a16;
  double v31 = a13;
  double v33 = a11;
  uint64_t v32 = a12;
  uint64_t v34 = (uint64_t)(a1 + 2);
  unint64_t v35 = 0x8E38E38E38E38E39LL * ((a1[2] - (uint64_t)v19) >> 4);
  if (2 * v35 > v21) {
    unint64_t v21 = 2 * v35;
  }
  if (v35 >= 0xE38E38E38E38E3LL) {
    unint64_t v36 = 0x1C71C71C71C71C7LL;
  }
  else {
    unint64_t v36 = v21;
  }
  if (v36)
  {
    char v58 = a5;
    __int16 v59 = a7;
    int v37 = a6;
    double v38 = a4;
    std::string v57 = a8;
    double v39 = a3;
    int v40 = a2;
    unint64_t v41 = v20;
    std::string v42 = sub_1002B4F00(v34, v36);
    double v30 = a16;
    a5 = v58;
    double v29 = a17;
    unint64_t v20 = v41;
    int v28 = a18;
    a2 = v40;
    double v33 = a11;
    uint64_t v32 = a12;
    a3 = v39;
    double v31 = a13;
    a8 = v57;
    a4 = v38;
    a6 = v37;
    a7 = v59;
    char v43 = v42;
    uint64_t v34 = (uint64_t)(a1 + 2);
    uint64_t v45 = v44;
  }

  else
  {
    char v43 = 0LL;
    uint64_t v45 = 0LL;
  }

  uint64_t v46 = (uint64_t)v43 + 144 * v20;
  sub_100531568(v34, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, v33, v32, v31, a14, a15, v30, v29, v28);
  uint64_t v47 = v46 + 144;
  std::string v49 = (char *)*a1;
  int v48 = (char *)a1[1];
  if (v48 != (char *)*a1)
  {
    do
    {
      *(_OWORD *)(v46 - 144) = *((_OWORD *)v48 - 9);
      __int128 v50 = *((_OWORD *)v48 - 8);
      __int128 v51 = *((_OWORD *)v48 - 7);
      __int128 v52 = *((_OWORD *)v48 - 5);
      *(_OWORD *)(v46 - 96) = *((_OWORD *)v48 - 6);
      *(_OWORD *)(v46 - 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v52;
      *(_OWORD *)(v46 - 12_Block_object_dispose(va, 8) = v50;
      *(_OWORD *)(v46 - 112) = v51;
      __int128 v53 = *((_OWORD *)v48 - 4);
      __int128 v54 = *((_OWORD *)v48 - 3);
      __int128 v55 = *((_OWORD *)v48 - 2);
      *(_OWORD *)(v46 - 2sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = *(_OWORD *)(v48 - 20);
      *(_OWORD *)(v46 - 4_Block_object_dispose(va, 8) = v54;
      *(_OWORD *)(v46 - 32) = v55;
      *(_OWORD *)(v46 - 64) = v53;
      v46 -= 144LL;
      v48 -= 144;
    }

    while (v48 != v49);
    int v48 = (char *)*a1;
  }

  *a1 = v46;
  a1[1] = v47;
  a1[2] = (uint64_t)v43 + 144 * v45;
  if (v48) {
    operator delete(v48);
  }
  return v47;
}

void sub_100531550(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100531568( uint64_t a1, uint64_t a2, int *a3, int *a4, double *a5, double *a6, double *a7, double *a8, double *a9, double *a10, double *a11, double *a12, uint64_t *a13, int *a14, uint64_t *a15, int *a16, uint64_t *a17, uint64_t *a18, int *a19)
{
  return sub_100924284( a2,  *a3,  *a4,  *a13,  *a14,  *a15,  *a16,  *a19,  *a5,  *a6,  *a7,  *a8,  *a9,  *a10,  *a11,  *a12,  *a17,  *a18);
}

  ;
}

void sub_10053160C()
{
  qword_101996940 = (uint64_t)"TileX";
  dword_101996948 = 1;
  word_10199694C = 1;
  byte_101996950 = 0;
  byte_101996968 = 0;
  qword_101996970 = (uint64_t)"TileY";
  dword_101996978 = 1;
  word_10199697C = 1;
  byte_101996980 = 0;
  byte_101996998 = 0;
  qword_1019969A0 = (uint64_t)"SouthwestLatitude";
  dword_1019969A8 = 2;
  word_1019969AC = 0;
  byte_1019969B0 = 0;
  byte_1019969C8 = 0;
  qword_1019969D0 = (uint64_t)"SouthwestLongitude";
  dword_1019969D8 = 2;
  word_1019969DC = 0;
  byte_1019969E0 = 0;
  byte_1019969F8 = 0;
  qword_101996A00 = (uint64_t)"DeltaLatitude";
  dword_101996A08 = 2;
  word_101996A0C = 0;
  byte_101996A10 = 0;
  byte_101996A28 = 0;
  qword_101996A30 = (uint64_t)"DeltaLongitude";
  dword_101996A38 = 2;
  word_101996A3C = 0;
  byte_101996A40 = 0;
  byte_101996A58 = 0;
  qword_101996A60 = (uint64_t)"Altitude";
  dword_101996A68 = 2;
  word_101996A6C = 0;
  byte_101996A70 = 0;
  byte_101996A88 = 0;
  qword_101996A90 = (uint64_t)"MinimumAltitude";
  dword_101996A98 = 2;
  word_101996A9C = 0;
  byte_101996AA0 = 0;
  byte_101996AB8 = 0;
  qword_101996AC0 = (uint64_t)"MaximumAltitude";
  dword_101996AC8 = 2;
  word_101996ACC = 0;
  byte_101996AD0 = 0;
  byte_101996AE8 = 0;
  qword_101996AF0 = (uint64_t)"GenerationTimestamp";
  dword_101996AF8 = 1;
  word_101996AFC = 0;
  byte_101996B00 = 0;
  byte_101996B18 = 0;
  qword_101996B20 = (uint64_t)"ExpirationAge";
  dword_101996B28 = 1;
  word_101996B2C = 0;
  byte_101996B30 = 0;
  byte_101996B48 = 0;
  qword_101996B50 = (uint64_t)"Version";
  dword_101996B58 = 1;
  word_101996B5C = 0;
  byte_101996B60 = 0;
  byte_101996B78 = 0;
  qword_101996B80 = (uint64_t)"Flags";
  dword_101996B88 = 1;
  word_101996B8C = 0;
  byte_101996B90 = 0;
  byte_101996BA8 = 0;
  qword_101996BB0 = (uint64_t)"NumberOfIndexEntries";
  dword_101996BB8 = 1;
  word_101996BBC = 0;
  byte_101996BC0 = 0;
  byte_101996BD8 = 0;
  qword_101996BE0 = (uint64_t)"AccessTimestamp";
  dword_101996BE8 = 1;
  word_101996BEC = 0;
  byte_101996BF0 = 0;
  byte_101996C08 = 0;
  qword_101996C10 = (uint64_t)"GizmoSyncTimestamp";
  dword_101996C18 = 1;
  word_101996C1C = 0;
  byte_101996C20 = 0;
  byte_101996C38 = 0;
  qword_101996C40 = (uint64_t)"NumberOfInputPoints";
  dword_101996C48 = 1;
  word_101996C4C = 0;
  byte_101996C50 = 0;
  byte_101996C68 = 0;
  qword_101996C70 = 0LL;
  dword_101996C78 = 5;
  word_101996C7C = 0;
  byte_101996C80 = 0;
  byte_101996C98 = 0;
}

uint64_t sub_100531814(uint64_t a1)
{
  uint64_t v2 = operator new(0x1A0uLL);
  sub_100C46968(v2, 0LL);
  sub_100531CDC((void *)a1, (uint64_t)v2);
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose(va, 8) = 0u;
  uuid_parse("00000000-0000-0000-0000-000000000000", (unsigned __int8 *)(a1 + 16));
  return a1;
}

void sub_10053187C(_Unwind_Exception *a1)
{
}

uint64_t sub_1005318A8@<X0>(uint64_t **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0LL;
  *(void *)(a3 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a3 + 16) = 0LL;
  return sub_100C469A4(*a1, a2, (void **)a3);
}

void sub_1005318D8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(va, 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

double sub_1005318F4(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 88) + *(double *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 80);
  double v5 = *(double *)(a1 + 120) + *(double *)(a2 + 88);
  memset(v10, 0, 40);
  *(_OWORD *)&v10[40] = *(_OWORD *)(a2 + 40);
  *(double *)&v10[56] = v3;
  __int128 v11 = *(_OWORD *)(a2 + 64);
  *(void *)&__int128 v12 = v4;
  *((double *)&v12 + 1) = v5;
  uuid_copy(&v10[24], (const unsigned __int8 *)(a1 + 16));
  sub_100C47818(*(uint64_t **)a1, (uint64_t)v10);
  __int128 v6 = *(_OWORD *)&v10[48];
  *(_OWORD *)(a1 + 64) = *(_OWORD *)&v10[32];
  *(_OWORD *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v6;
  __int128 v7 = v12;
  *(_OWORD *)(a1 + 96) = v11;
  *(_OWORD *)(a1 + 112) = v7;
  double result = *(double *)v10;
  __int128 v9 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v10;
  *(_OWORD *)(a1 + 4_Block_object_dispose(va, 8) = v9;
  return result;
}

void sub_1005319C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 == 1)
  {
    uuid_parse("00000000-0000-0000-0000-000000000000", (unsigned __int8 *)(a1 + 16));
  }

  else if (!v3)
  {
    uuid_copy((unsigned __int8 *)(a1 + 16), (const unsigned __int8 *)(a2 + 64));
    sub_100531A20(a1);
  }

void sub_100531A20(uint64_t a1)
{
  std::string __p = 0LL;
  std::string::size_type v13 = 0LL;
  uint64_t v14 = 0LL;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  if (sub_100C48108(*(void *)a1, 1, (char **)&__p) != 100 || __p == v13)
  {
    uint64_t v24 = 0LL;
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    uint64_t v17 = 0LL;
  }

  else
  {
    __int128 v3 = *(v13 - 5);
    __int128 v22 = *(v13 - 6);
    __int128 v23 = v3;
    uint64_t v24 = *((void *)v13 - 8);
    __int128 v4 = *(_OWORD *)((char *)v13 - 24);
    __int128 v15 = *(_OWORD *)((char *)v13 - 40);
    __int128 v16 = v4;
    uint64_t v17 = *((void *)v13 - 1);
  }

  *(_OWORD *)std::stringbuf::string_type buf = v22;
  __int128 v19 = v23;
  *(_OWORD *)&v21[8] = v15;
  *(void *)&__int128 v20 = v24;
  *(_OWORD *)&v21[24] = v16;
  *(void *)&v21[40] = v17;
  *((CFAbsoluteTime *)&v20 + 1) = Current;
  *(CFAbsoluteTime *)unint64_t v21 = Current;
  uuid_copy((unsigned __int8 *)&v19 + 8, (const unsigned __int8 *)(a1 + 16));
  sub_100C47818(*(uint64_t **)a1, (uint64_t)buf);
  __int128 v5 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + 64) = v20;
  *(_OWORD *)(a1 + 8sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = v5;
  __int128 v6 = *(_OWORD *)&v21[32];
  *(_OWORD *)(a1 + 96) = *(_OWORD *)&v21[16];
  *(_OWORD *)(a1 + 112) = v6;
  __int128 v7 = v19;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)buf;
  *(_OWORD *)(a1 + 4_Block_object_dispose(va, 8) = v7;
  if (qword_101934660 != -1) {
    dispatch_once(&qword_101934660, &stru_10183F140);
  }
  uint64_t v8 = (os_log_s *)qword_101934668;
  if (os_log_type_enabled((os_log_t)qword_101934668, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Setting up first session entry", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934660 != -1) {
      dispatch_once(&qword_101934660, &stru_10183F140);
    }
    __int16 v11 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934668,  1LL,  "Setting up first session entry",  &v11,  2);
    __int128 v10 = (uint8_t *)v9;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSkiDataStore::setupFirstEntry()", "%s\n", v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  if (__p)
  {
    std::string::size_type v13 = __p;
    operator delete(__p);
  }

void sub_100531C90( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100531CB0(id a1)
{
  qword_101934668 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Skiing");
}

void *sub_100531CDC(void *a1, uint64_t a2)
{
  *a1 = a2;
  __int128 v4 = operator new(0x20uLL);
  *__int128 v4 = &off_10183F170;
  v4[1] = 0LL;
  uint64_t v4[2] = 0LL;
  unsigned __int8 v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100531D24(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 24LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100531D44(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 24LL))(result);
  }
  return result;
}

uint64_t sub_100531D5C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void sub_100531E40(id a1)
{
  qword_101996CB8 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLCountryTrackerSilo");
}

void sub_1005324C4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, void *__p, uint64_t a34, int a35, __int16 a36, char a37, char a38)
{
  if (a38 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_100532508(uint64_t a1)
{
  return [*(id *)(a1 + 32) refreshSettings];
}

id sub_100532510(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return _[a4 onManagerNotification:a2 data:a3];
}

id sub_100532520(uint64_t a1)
{
  return _[*(id *)(a1 + 32) onLocationUnknownTimer];
}

id sub_100532528(uint64_t a1)
{
  if (qword_101934930 != -1) {
    dispatch_once(&qword_101934930, &stru_10183F288);
  }
  uint64_t v2 = (os_log_s *)qword_101934938;
  if (os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    __int128 v6 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:reverting to cheap location only}",  (uint8_t *)v4,  0x12u);
  }

  return [*(id *)(a1 + 32) requestLocationWithDesiredAccuracy:kCLLocationAccuracyBystander];
}

void sub_100532614(id a1, NSString *a2, NSDictionary *a3)
{
  if (a3 && -[NSDictionary count](a3, "count"))
  {
    __int16 v5 = -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  -[NSDictionary objectForKeyedSubscript:]( a3,  "objectForKeyedSubscript:",  @"com.apple.RegulatoryDomain.peer_status.countryCode"),  4LL);
    objc_msgSend( -[NSDictionary objectForKeyedSubscript:]( a3,  "objectForKeyedSubscript:",  @"com.apple.RegulatoryDomain.peer_status.priority"),  "getBytes:length:",  &v16,  4);
    objc_msgSend( -[NSDictionary objectForKeyedSubscript:]( a3,  "objectForKeyedSubscript:",  @"com.apple.RegulatoryDomain.peer_status.timestamp"),  "getBytes:length:",  &v15,  8);
    __int128 v6 = +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v15);
    id v7 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
    [v7 setObject:v5 forKeyedSubscript:@"com.apple.RegulatoryDomain.peer_status.countryCode"];
    objc_msgSend( v7,  "setObject:forKeyedSubscript:",  +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v16),  @"com.apple.RegulatoryDomain.peer_status.priority");
    [v7 setObject:v6 forKeyedSubscript:@"com.apple.RegulatoryDomain.peer_status.timestamp"];
    unsigned __int8 v14 = 0;
    objc_msgSend( -[NSDictionary objectForKeyedSubscript:]( a3,  "objectForKeyedSubscript:",  @"com.apple.RegulatoryDomain.peer_status.isDisputed"),  "getBytes:length:",  &v14,  1);
    objc_msgSend( v7,  "setObject:forKeyedSubscript:",  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v14),  @"com.apple.RegulatoryDomain.peer_status.isDisputed");
    if (qword_101934930 != -1) {
      dispatch_once(&qword_101934930, &stru_10183F288);
    }
    uint64_t v8 = (os_log_s *)qword_101934938;
    if (os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v9 = -[NSString UTF8String](a2, "UTF8String");
      __int128 v10 = -[NSString UTF8String](v5, "UTF8String");
      double v11 = v15;
      uint64_t v12 = v16;
      std::string::size_type v13 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v14);
      *(_DWORD *)std::stringbuf::string_type buf = 68290562;
      int v19 = 0;
      __int16 v20 = 2082;
      unint64_t v21 = "";
      __int16 v22 = 2082;
      __int128 v23 = v9;
      __int16 v24 = 2082;
      __int16 v25 = v10;
      __int16 v26 = 2114;
      int v27 = v6;
      __int16 v28 = 2050;
      double v29 = v11;
      __int16 v30 = 2050;
      uint64_t v31 = v12;
      __int16 v32 = 2114;
      double v33 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:received a peer update, forwarding..., deviceID:%{public, location:escape_only}s,  country:%{public, location:escape_only}s, timestamp:%{public, location:escape_only}@, timestampVal:% {public}f, priority:%{public}lu, disputed?:%{public, location:escape_only}@}",  buf,  0x4Eu);
    }

    id v17 = v7;
    RDUpdateCountryCodeFromPeerInfo( a2,  +[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v17, 1LL));
  }

  else
  {
    RDUpdateCountryCodeFromPeer(a2, 0LL);
  }

id sub_100532900(uint64_t a1)
{
  if (qword_101934930 != -1) {
    dispatch_once(&qword_101934930, &stru_10183F288);
  }
  uint64_t v2 = (os_log_s *)qword_101934938;
  if (os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_DEFAULT))
  {
    [*(id *)(a1 + 32) timeToActiveGiveup];
    v7[0] = 68289282;
    v7[1] = 0;
    __int16 v8 = 2082;
    __int128 v9 = "";
    __int16 v10 = 1026;
    int v11 = (int)v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:timeout elapsed with no locations for current country, requesting low-cost active update, duration:%{public}d}",  (uint8_t *)v7,  0x18u);
  }

  [*(id *)(a1 + 32) requestLocationWithDesiredAccuracy:kCLLocationAccuracyKilometer];
  __int128 v4 = *(void **)(a1 + 32);
  __int16 v5 = (void *)v4[4];
  [v4 timeToActiveGiveup];
  return objc_msgSend(v5, "setNextFireDelay:");
}

void sub_100532C00(uint64_t a1)
{
}

void sub_100534278( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

void sub_100534298(uint64_t a1, uint64_t a2)
{
}

void sub_1005342A8(uint64_t a1)
{
}

void sub_1005342B4(uint64_t a1, void *a2, uint64_t a3)
{
  if (qword_101934930 != -1) {
    dispatch_once(&qword_101934930, &stru_10183F288);
  }
  __int128 v6 = (os_log_s *)qword_101934938;
  if (os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 68289539;
    int v75 = 0;
    __int16 v76 = 2082;
    __int128 v77 = "";
    __int16 v78 = 2113;
    *(void *)__int128 v79 = a2;
    *(_WORD *)&v79[8] = 2114;
    *(void *)&v79[10] = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:response from fetchPossibleTerritoriesForLocation, results:%{private, location:escape _only}@, error:%{public, location:escape_only}@}",  buf,  0x26u);
  }

  if (a3)
  {
    if (qword_101934930 != -1) {
      dispatch_once(&qword_101934930, &stru_10183F288);
    }
    id v7 = (os_log_s *)qword_101934938;
    if (os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v75 = 0;
      __int16 v76 = 2082;
      __int128 v77 = "";
      __int16 v78 = 2114;
      *(void *)__int128 v79 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:error getting country info, error:%{public, location:escape_only}@}",  buf,  0x1Cu);
      if (qword_101934930 != -1) {
        dispatch_once(&qword_101934930, &stru_10183F288);
      }
    }

    __int16 v8 = (os_log_s *)qword_101934938;
    if (os_signpost_enabled((os_log_t)qword_101934938))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v75 = 0;
      __int16 v76 = 2082;
      __int128 v77 = "";
      __int16 v78 = 2114;
      *(void *)__int128 v79 = a3;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v8,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "error getting country info",  "{msg%{public}.0s:error getting country info, error:%{public, location:escape_only}@}",  buf,  0x1Cu);
    }

    goto LABEL_85;
  }

  uint64_t v58 = a1;
  if (!a2)
  {
    if (qword_101934930 != -1) {
      dispatch_once(&qword_101934930, &stru_10183F288);
    }
    uint64_t v34 = (os_log_s *)qword_101934938;
    if (os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v75 = 0;
      __int16 v76 = 2082;
      __int128 v77 = "";
      __int16 v78 = 2114;
      *(void *)__int128 v79 = @"XZ";
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:no country info found, defaulting to international waters, code:%{public, location:escape_only}@}",  buf,  0x1Cu);
    }

    __int128 v9 = +[NSMutableArray arrayWithObject:](&OBJC_CLASS___NSMutableArray, "arrayWithObject:", @"XZ", a1);
    goto LABEL_68;
  }

  __int128 v9 = +[NSMutableArray arrayWithCapacity:]( NSMutableArray,  "arrayWithCapacity:",  [a2 count]);
  __int128 v68 = 0u;
  __int128 v69 = 0u;
  __int128 v70 = 0u;
  __int128 v71 = 0u;
  id v10 = [a2 countByEnumeratingWithState:&v68 objects:v82 count:16];
  if (!v10)
  {
LABEL_68:
    char v12 = 0;
    goto LABEL_69;
  }

  id v11 = v10;
  char v12 = 0;
  uint64_t v13 = *(void *)v69;
  uint64_t v62 = *(void *)v69;
  int v60 = a2;
  do
  {
    id v14 = 0LL;
    id v61 = v11;
    do
    {
      if (*(void *)v69 != v13) {
        objc_enumerationMutation(a2);
      }
      int v63 = (char *)v14;
      double v15 = *(void **)(*((void *)&v68 + 1) + 8LL * (void)v14);
      if (v15)
      {
        if ([v15 isDisputed])
        {
          if (qword_101934930 != -1) {
            dispatch_once(&qword_101934930, &stru_10183F288);
          }
          unsigned int v16 = (os_log_s *)qword_101934938;
          if (os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_INFO))
          {
            id v17 = objc_msgSend(objc_msgSend(v15, "disputedTerritoryName"), "UTF8String");
            *(_DWORD *)std::stringbuf::string_type buf = 68289283;
            int v75 = 0;
            __int16 v76 = 2082;
            __int128 v77 = "";
            __int16 v78 = 2081;
            *(void *)__int128 v79 = v17;
            _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:result is a disputed territory, adding all interested parties, name:%{private , location:escape_only}s}",  buf,  0x1Cu);
          }

          __int128 v66 = 0u;
          __int128 v67 = 0u;
          __int128 v64 = 0u;
          __int128 v65 = 0u;
          id v18 = objc_msgSend(v15, "interestedPartyIso3166CountryCodes2", v58);
          id v19 = [v18 countByEnumeratingWithState:&v64 objects:v81 count:16];
          if (v19)
          {
            id v20 = v19;
            uint64_t v21 = *(void *)v65;
            do
            {
              for (uint64_t i = 0LL; i != v20; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v65 != v21) {
                  objc_enumerationMutation(v18);
                }
                id v23 = [*(id *)(*((void *)&v64 + 1) + 8 * (void)i) copy];
                -[NSMutableArray addObject:](v9, "addObject:", v23);
                if (qword_101934930 != -1) {
                  dispatch_once(&qword_101934930, &stru_10183F288);
                }
                __int16 v24 = (os_log_s *)qword_101934938;
                if (os_log_type_enabled((os_log_t)qword_101934938, OS_LOG_TYPE_INFO))
                {
                  id v25 = [v23 UTF8String];
                  *(_DWORD *)std::stringbuf::string_type buf = 68289283;
                  int v75 = 0;
                  __int16 v76 = 2082;
                  __int128 v77 = "";
                  __int16 v78 = 2081;
                  *(void *)__int128 v79 = v25;
                  _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:adding interested party, countryCode:%{private, location:escape_only}s}",  buf,  0x1Cu);
                }
              }

              id v20 = [v18 countByEnumeratingWithState:&v64 objects:v81 count:16];
            }

            while (v20);
            char v12 = 1;
            a2 = v60;
            id v11 = v61;
            uint64_t v13 = v62;
          }

          else
          {
            char v12 = 1;
          }

void sub_100535C24(id a1)
{
  qword_101934938 = (uint64_t)os_log_create("com.apple.locationd.Position", "Country");
}

uint64_t sub_100535C50()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101996CA0, (void *)&_mh_execute_header);
}

void *sub_100535C94(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)sub_100FF66AC(a1, a2);
  *uint64_t result = &off_10183F2B8;
  return result;
}

void *sub_100535CB8(void *result)
{
  *uint64_t result = &off_10183F330;
  return result;
}

float sub_100535CCC()
{
  return 0.0;
}

uint64_t sub_100535CD4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_10027CB4C(a1, a2);
  *(void *)uint64_t v4 = off_10183F380;
  *(void *)(v4 + 92sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = off_10183F490;
  *(_OWORD *)(v4 + 984) = 0u;
  *(_OWORD *)(v4 + 936) = 0u;
  *(_OWORD *)(v4 + 952) = 0u;
  *(_OWORD *)(v4 + 96_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v4 + 100sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v4 + 1016) = 0u;
  *(_OWORD *)(v4 + 1032) = 0u;
  *(_OWORD *)(v4 + 104_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v4 + 1064) = 0u;
  *(_OWORD *)(v4 + 108sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0u;
  *(_OWORD *)(v4 + 1096) = 0u;
  *(void *)(v4 + 1112) = 0LL;
  *(void *)(v4 + 92_Block_object_dispose(va, 8) = 0xFFEFFFFFFFFFFFFFLL;
  *(void *)(v4 + 992) = 0xFFEFFFFFFFFFFFFFLL;
  *(void *)(v4 + 1152) = 0LL;
  *(_DWORD *)(v4 + 116sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0;
  *(void *)(v4 + 116_Block_object_dispose(va, 8) = 0LL;
  *(_DWORD *)(v4 + 112_Block_object_dispose(va, 8) = 0;
  *(void *)(v4 + 112sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(_DWORD *)(v4 + 1144) = 0;
  sub_100AEB404(v4 + 1176, "MotionCalibration", *(void *)(v4 + 32));
  __int16 v5 = *(std::__shared_weak_count **)(a1 + 120);
  uint64_t v32 = *(void *)(a1 + 112);
  double v33 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }

  __int16 v8 = *(std::__shared_weak_count **)(a1 + 136);
  uint64_t v30 = *(void *)(a1 + 128);
  id v31 = v8;
  if (v8)
  {
    __int128 v9 = (unint64_t *)&v8->__shared_owners_;
    do
      unint64_t v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }

  sub_100E57D98(a1 + 1368, a2, &v32, &v30);
  id v11 = v31;
  if (v31)
  {
    char v12 = (unint64_t *)&v31->__shared_owners_;
    do
      unint64_t v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }

  id v14 = v33;
  if (v33)
  {
    double v15 = (unint64_t *)&v33->__shared_owners_;
    do
      unint64_t v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

  *(_OWORD *)(a1 + 376_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 3784) = 0u;
  *(_OWORD *)(a1 + 3752) = 0u;
  sub_100A87B7C(a1 + 3800, a1 + 920);
  *(void *)(a1 + 392sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = 0LL;
  *(_OWORD *)(a1 + 3904) = 0u;
  *(_OWORD *)(a1 + 388_Block_object_dispose(va, 8) = 0u;
  uint64_t v34 = 0x40AC200000000000LL;
  sub_101204164((unsigned __int8 *)(a1 + 3928), "PressureSensorSettlingTime", &v34, 0);
  uint64_t v34 = 0x402E000000000000LL;
  sub_101204164((unsigned __int8 *)(a1 + 3952), "ElevationSourceTimeoutInterval", &v34, 0);
  LOBYTE(v34) = 0;
  sub_1012049AC((unsigned __int8 *)(a1 + 3976), "LogAllDayElevationFromAllSources", (unsigned __int8 *)&v34, 0);
  sub_100536190(a1);
  sub_1003A09BC((uint64_t)sub_100536368, a1, *(void **)(a1 + 32), &v34);
  uint64_t v17 = v34;
  uint64_t v34 = 0LL;
  uint64_t v18 = *(void *)(a1 + 1168);
  *(void *)(a1 + 116_Block_object_dispose(va, 8) = v17;
  if (v18)
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    uint64_t v19 = v34;
    uint64_t v34 = 0LL;
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
    }
  }

  [*(id *)(*(void *)(a1 + 1168) + 16) register:*(void *)(*(void *)(a1 + 1168) + 8) forNotification:6 registrationInfo:0];
  uint64_t v20 = sub_1008FA854(0);
  if (v20 && (*(unsigned int (**)(uint64_t))(*(void *)(v20 + 72) + 16LL))(v20 + 72))
  {
    uint64_t v21 = sub_1008FA854(0);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472LL;
    v29[2] = sub_100536540;
    v29[3] = &unk_10183F4E0;
    v29[4] = a1;
    (*(void (**)(uint64_t, void *))(*(void *)(v21 + 72) + 24LL))(v21 + 72, v29);
    uint64_t v22 = sub_1008FA854(0);
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472LL;
    v28[2] = sub_10053688C;
    v28[3] = &unk_10183F530;
    _DWORD v28[4] = a1;
    (*(void (**)(uint64_t, void *))(*(void *)(v22 + 72) + 32LL))(v22 + 72, v28);
  }

  int v23 = sub_10027E878(a1);
  sub_100536B90((unsigned __int8 *)a1, v23);
  sub_100468458((uint64_t)sub_100536D8C, a1, *(void **)(a1 + 32), &v34);
  uint64_t v24 = v34;
  uint64_t v34 = 0LL;
  uint64_t v25 = *(void *)(a1 + 3904);
  *(void *)(a1 + 3904) = v24;
  if (v25)
  {
    (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
    uint64_t v26 = v34;
    uint64_t v34 = 0LL;
    if (v26) {
      (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
    }
  }

  [*(id *)(*(void *)(a1 + 3904) + 16) register:*(void *)(*(void *)(a1 + 3904) + 8) forNotification:2 registrationInfo:0];
  *(void *)(a1 + 388sub_100222B94(v19, (uint64_t)"clearAlsDatabaseEntries", 0) = objc_opt_new(&OBJC_CLASS___NSMutableSet);
  return a1;
}

void sub_100536090(_Unwind_Exception *a1)
{
  uint64_t v6 = v1[490];
  v1[490] = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = v1[489];
  v1[489] = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = v1[488];
  v1[488] = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  __int128 v9 = v1 + 486;
  uint64_t v10 = v1[487];
  v1[487] = 0LL;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  uint64_t v11 = *v9;
  uint64_t *v9 = 0LL;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
  }
  sub_100536F64(v4);
  sub_100E57E40(v3);
  sub_1008AF1C4(v2);
  uint64_t v12 = v1[146];
  v1[146] = 0LL;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
  }
  sub_10027D5F8((uint64_t)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100536190(uint64_t a1)
{
  uint64_t v2 = a1 + 1176;
  sub_100AEB408(a1 + 1176, (uint64_t)sub_1005385B4, a1, *(void **)(a1 + 32), &v13);
  uint64_t v3 = v13;
  uint64_t v13 = 0LL;
  uint64_t v4 = *(void *)(a1 + 3888);
  *(void *)(a1 + 388_Block_object_dispose(va, 8) = v3;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    uint64_t v5 = v13;
    uint64_t v13 = 0LL;
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  [*(id *)(*(void *)(a1 + 3888) + 16) register:*(void *)(*(void *)(a1 + 3888) + 8) forNotification:14 registrationInfo:0];
  sub_1008B1934(v2, 1LL);
  sub_100A1C6E0((uint64_t)sub_10053878C, a1, *(void **)(a1 + 32), &v13);
  uint64_t v6 = v13;
  uint64_t v13 = 0LL;
  uint64_t v7 = *(void *)(a1 + 3896);
  *(void *)(a1 + 3896) = v6;
  if (v7)
  {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    uint64_t v8 = v13;
    uint64_t v13 = 0LL;
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
  }

  [*(id *)(*(void *)(a1 + 3896) + 16) register:*(void *)(*(void *)(a1 + 3896) + 8) forNotification:0 registrationInfo:0];
  *(void *)(a1 + 1136) =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:forClient:",  @"CLStreamingAwareLocationProvider",  @"CLOdometerNotifier");
  sub_10043AC3C((uint64_t)sub_1005385B4, a1, *(void **)(a1 + 32), &v13);
  uint64_t v9 = v13;
  uint64_t v13 = 0LL;
  uint64_t v10 = *(void *)(a1 + 3912);
  *(void *)(a1 + 3912) = v9;
  if (v10)
  {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    uint64_t v11 = v13;
    uint64_t v13 = 0LL;
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    }
  }

  sub_1004F2598();
  uint64_t result = sub_1004F64FC();
  if ((result & 8) != 0) {
    sub_100A9E608();
  }
  return result;
}

void sub_100536368(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183F598);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLOdometerNotifierWatch::onCompanionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183F598);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLOdometerNotifierWatch::onCompanionNotification, event:%{public, location:escape_o nly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100538B3C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100536520( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100536540(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = [*(id *)(v3 + 32) silo];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3321888768LL;
  _DWORD v12[2] = sub_100536624;
  void v12[3] = &unk_10183F4B0;
  uint64_t v6 = *a2;
  uint64_t v5 = (std::__shared_weak_count *)a2[1];
  _DWORD v12[4] = v3;
  void v12[5] = v6;
  int v13 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      unint64_t v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }

  [v4 async:v12];
  uint64_t v9 = v13;
  if (v13)
  {
    uint64_t v10 = (unint64_t *)&v13->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

void sub_100536610(_Unwind_Exception *a1)
{
}

void sub_100536624(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(__int128 ***)(a1 + 48);
  v8[0] = *(__int128 ***)(a1 + 40);
  v8[1] = v3;
  if (v3)
  {
    id v4 = (unint64_t *)(v3 + 1);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

  sub_1005366C8(v2, v8);
  if (v3)
  {
    uint64_t v6 = (unint64_t *)(v3 + 1);
    do
      unint64_t v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      (*((void (**)(__int128 **))*v3 + 2))(v3);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v3);
    }
  }

void sub_1005366B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1005366C8(uint64_t a1, __int128 ***a2)
{
  __int16 v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t v2 = **a2;
  if (v2 != (*a2)[1])
  {
    uint64_t v5 = a1 + 1368;
    uint64_t v6 = **a2;
    do
    {
      __int128 v15 = *v6;
      __int128 v16 = v6[1];
      uint64_t v17 = *((void *)v6 + 4);
      __int128 v13 = *(__int128 *)((char *)v6 + 44);
      int v14 = *((_DWORD *)v6 + 15);
      __int128 v21 = v15;
      __int128 v22 = v16;
      *(void *)int v23 = v17;
      *(_DWORD *)&v23[8] = 1;
      *(_OWORD *)&v23[12] = v13;
      *(_DWORD *)&v23[28] = v14;
      int v12 = 8;
      (*(void (**)(uint64_t, int *, __int128 *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v12,  &v21,  0LL,  0xFFFFFFFFLL,  0LL);
      sub_100E58510(v5, v2, (void **)&v18);
      v2 += 4;
      v6 += 4;
    }

    while (v6 != (*a2)[1]);
    unint64_t v8 = v18;
    unint64_t v7 = v19;
    if (v18 != v19)
    {
      do
      {
        if (*((_BYTE *)v8 + 61))
        {
          __int128 v9 = *v8;
          __int128 v10 = v8[1];
          __int128 v11 = v8[3];
          *(_OWORD *)int v23 = v8[2];
          *(_OWORD *)&v23[16] = v11;
          __int128 v21 = v9;
          __int128 v22 = v10;
          LODWORD(v15) = 7;
          (*(void (**)(uint64_t, __int128 *, __int128 *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v15,  &v21,  0LL,  0xFFFFFFFFLL,  0LL);
        }

        v8 += 4;
      }

      while (v8 != v7);
      unint64_t v7 = v18;
    }

    if (v7)
    {
      uint64_t v19 = v7;
      operator delete(v7);
    }
  }