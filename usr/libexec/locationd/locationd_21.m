void sub_1009D24F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, void *a30, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, void *a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, void *a47, uint64_t a48, uint64_t a49, uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a60 < 0) {
    operator delete(a55);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1009D2818(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  v16[1] = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v17 = 256;
  if (!sub_100D8A92C(v6))
  {
LABEL_12:
    uint64_t v14 = 0LL;
    goto LABEL_13;
  }

  uuid_unparse((const unsigned __int8 *)(a2 + 8), out);
  sub_1003C0D54( *(void *)(a1 + 80),  "UPDATE CyclingSessionSummary SET end_time = ?, hr_min = ?, hr_max = ? where session_id = ?;",
    v16);
  uint64_t v7 = v16[0];
  v8 = (sqlite3_stmt *)sub_100019240(v16[0]);
  if (!sub_1003B7480(v8, 1, *(double *)(a2 + 32))
    || (v9 = (sqlite3_stmt *)sub_100019240(v7), !sub_1003B7480(v9, 2, *(double *)(a2 + 64)))
    || (v10 = (sqlite3_stmt *)sub_100019240(v7), !sub_1003B7480(v10, 3, *(double *)(a2 + 56)))
    || (v11 = (sqlite3_stmt *)sub_100019240(v7), !sub_1003BC1F0(v11, 4, out))
    || (uint64_t v12 = *(void *)(a1 + 80), v13 = (sqlite3_stmt *)sub_100019240(v7), !sub_1003BB2BC(v12, v13)))
  {
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    goto LABEL_12;
  }

  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v14 = 1LL;
LABEL_13:
  (*(void (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
  return v14;
}

void sub_1009D298C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1009D29D4(uint64_t a1, const unsigned __int8 *a2, sqlite3_int64 a3)
{
  uint64_t v7 = a1 + 112;
  uint64_t v6 = *(void *)(a1 + 112);
  uint64_t v8 = a1 + 72;
  v16[1] = a1 + 112;
  (*(void (**)(uint64_t))(v6 + 16))(a1 + 112);
  __int16 v17 = 256;
  if (!sub_100D8A92C(v8))
  {
LABEL_10:
    uint64_t v14 = 0LL;
    goto LABEL_11;
  }

  uuid_unparse(a2, out);
  sub_1003C0D54(*(void *)(a1 + 80), "UPDATE CyclingSessionSummary SET power_meter_id = ? where session_id = ?;", v16);
  uint64_t v9 = v16[0];
  v10 = (sqlite3_stmt *)sub_100019240(v16[0]);
  if (!sub_1003C2D24(v10, 1, a3)
    || (v11 = (sqlite3_stmt *)sub_100019240(v9), !sub_1003BC1F0(v11, 2, out))
    || (uint64_t v12 = *(void *)(a1 + 80), v13 = (sqlite3_stmt *)sub_100019240(v9), !sub_1003BB2BC(v12, v13)))
  {
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    goto LABEL_10;
  }

  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  uint64_t v14 = 1LL;
LABEL_11:
  (*(void (**)(uint64_t))(*(void *)v7 + 24LL))(v7);
  return v14;
}

void sub_1009D2B24(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1009D2B6C(uint64_t a1, const unsigned __int8 *a2, double a3, double a4, double a5)
{
  uint64_t v11 = a1 + 112;
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v12 = a1 + 72;
  v22[1] = a1 + 112;
  (*(void (**)(uint64_t))(v10 + 16))(a1 + 112);
  __int16 v23 = 256;
  if (!sub_100D8A92C(v12))
  {
LABEL_12:
    uint64_t v20 = 0LL;
    goto LABEL_13;
  }

  uuid_unparse(a2, out);
  sub_1003C0D54( *(void *)(a1 + 80),  "UPDATE CyclingSessionSummary SET ftp = ?, ftp_calculation_average_time = ?, ftp_raw = ? where session_id = ?;",
    v22);
  uint64_t v13 = v22[0];
  uint64_t v14 = (sqlite3_stmt *)sub_100019240(v22[0]);
  if (!sub_1003B7480(v14, 1, a3)
    || (v15 = (sqlite3_stmt *)sub_100019240(v13), !sub_1003B7480(v15, 2, a5))
    || (v16 = (sqlite3_stmt *)sub_100019240(v13), !sub_1003B7480(v16, 3, a4))
    || (__int16 v17 = (sqlite3_stmt *)sub_100019240(v13), !sub_1003BC1F0(v17, 4, out))
    || (uint64_t v18 = *(void *)(a1 + 80), v19 = (sqlite3_stmt *)sub_100019240(v13), !sub_1003BB2BC(v18, v19)))
  {
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    }
    goto LABEL_12;
  }

  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  uint64_t v20 = 1LL;
LABEL_13:
  (*(void (**)(uint64_t))(*(void *)v11 + 24LL))(v11);
  return v20;
}

void sub_1009D2CFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

double sub_1009D2D44(uint64_t a1, double a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  uint64_t v19 = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v20 = 256;
  double v7 = 0.0;
  if (sub_100D8A92C(v6))
  {
    else {
      size_t v8 = *(void *)(a1 + 424);
    }
    uint64_t v9 = __p;
    sub_1000392EC((uint64_t)__p, v8 + 102);
    if (v18 < 0) {
      uint64_t v9 = (void **)__p[0];
    }
    if (v8)
    {
      else {
        uint64_t v10 = *(const void **)(a1 + 416);
      }
      memmove(v9, v10, v8);
    }

    strcpy( (char *)v9 + v8,  " WHERE ftp > 0 and ftp_calculation_average_time < ? ORDER BY ftp_calculation_average_time DESC LIMIT 1");
    if (v18 >= 0) {
      uint64_t v11 = (char *)__p;
    }
    else {
      uint64_t v11 = (char *)__p[0];
    }
    sub_1003C0D54(*(void *)(a1 + 80), v11, v21);
    uint64_t v12 = v21[0];
    uint64_t v16 = v21[0];
    uint64_t v13 = (sqlite3_stmt *)sub_100019240(v21[0]);
    if (sub_1003B7480(v13, 1, a2) && !sub_1009CFE00(&v16, (uint64_t)v21))
    {
      float v15 = v22;
      if (v12) {
        (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
      }
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      double v7 = v15;
    }

    else
    {
      if (v12) {
        (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
      }
      if (v18 < 0) {
        operator delete(__p[0]);
      }
    }
  }

  (*(void (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
  return v7;
}

void sub_1009D2F2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1011C52D0((uint64_t)&a16);
  _Unwind_Resume(a1);
}

double sub_1009D2F8C(uint64_t a1, double a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  uint64_t v19 = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v20 = 256;
  double v7 = 0.0;
  if (sub_100D8A92C(v6))
  {
    else {
      size_t v8 = *(void *)(a1 + 424);
    }
    uint64_t v9 = __p;
    sub_1000392EC((uint64_t)__p, v8 + 66);
    if (v18 < 0) {
      uint64_t v9 = (void **)__p[0];
    }
    if (v8)
    {
      else {
        uint64_t v10 = *(const void **)(a1 + 416);
      }
      memmove(v9, v10, v8);
    }

    strcpy((char *)v9 + v8, " WHERE ftp > 0 and start_time < ? ORDER BY start_time DESC LIMIT 1");
    if (v18 >= 0) {
      uint64_t v11 = (char *)__p;
    }
    else {
      uint64_t v11 = (char *)__p[0];
    }
    sub_1003C0D54(*(void *)(a1 + 80), v11, v21);
    uint64_t v12 = v21[0];
    uint64_t v16 = v21[0];
    uint64_t v13 = (sqlite3_stmt *)sub_100019240(v21[0]);
    if (sub_1003B7480(v13, 1, a2) && !sub_1009CFE00(&v16, (uint64_t)v21))
    {
      float v15 = v22;
      if (v12) {
        (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
      }
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      double v7 = v15;
    }

    else
    {
      if (v12) {
        (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
      }
      if (v18 < 0) {
        operator delete(__p[0]);
      }
    }
  }

  (*(void (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
  return v7;
}

void sub_1009D316C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1011C52D0((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_1009D31CC(void *a1, void **a2, double a3, double a4)
{
  size_t v8 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v48);
  if ((SHIBYTE(v49) & 0x80000000) == 0)
  {
    if (HIBYTE(v49)) {
      goto LABEL_3;
    }
LABEL_39:
    sub_101256F04(v8);
    __break(1u);
  }

  v43 = v48[1];
  operator delete(v48[0]);
  if (!v43) {
    goto LABEL_39;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v48);
  uint64_t v9 = sub_10000CF44(&v49, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(_BYTE *__return_ptr, void *))(*a1 + 64LL))(v52, a1);
  if (v52[23] >= 0) {
    uint64_t v10 = v52;
  }
  else {
    uint64_t v10 = *(_BYTE **)v52;
  }
  if (v52[23] >= 0) {
    uint64_t v11 = v52[23];
  }
  else {
    uint64_t v11 = *(void *)&v52[8];
  }
  uint64_t v12 = sub_10000CF44(v9, (uint64_t)v10, v11);
  sub_10000CF44(v12, (uint64_t)" WHERE startTime > ? and startTime <= ? ORDER BY rowid ASC", 58LL);
  if ((v52[23] & 0x80000000) != 0) {
    operator delete(*(void **)v52);
  }
  uint64_t v13 = a1[10];
  std::stringbuf::str((std::stringbuf::string_type *)v52, &v50);
  if (v52[23] >= 0) {
    uint64_t v14 = v52;
  }
  else {
    uint64_t v14 = *(char **)v52;
  }
  sub_1003C0D54(v13, v14, &v46);
  uint64_t v15 = v46;
  uint64_t v46 = 0LL;
  uint64_t v47 = v15;
  if ((v52[23] & 0x80000000) != 0) {
    operator delete(*(void **)v52);
  }
  uint64_t v16 = (sqlite3_stmt *)sub_100019240(v15);
  if (sub_1003B7480(v16, 1, a3) && (__int16 v17 = (sqlite3_stmt *)sub_100019240(v15), sub_1003B7480(v17, 2, a4)))
  {
    while (1)
    {
      uint64_t v18 = sub_1001BA11C((uint64_t)a1, &v47, (uint64_t)v52);
      if ((_DWORD)v18) {
        break;
      }
      uint64_t v19 = a2[1];
      unint64_t v20 = (unint64_t)a2[2];
      if ((unint64_t)v19 >= v20)
      {
        unint64_t v26 = 0xAAAAAAAAAAAAAAABLL * (((char *)v19 - (_BYTE *)*a2) >> 5);
        unint64_t v27 = v26 + 1;
        if (v26 + 1 > 0x2AAAAAAAAAAAAAALL) {
          sub_100007008();
        }
        unint64_t v28 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - (void)*a2) >> 5);
        if (2 * v28 > v27) {
          unint64_t v27 = 2 * v28;
        }
        if (v28 >= 0x155555555555555LL) {
          unint64_t v29 = 0x2AAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v29 = v27;
        }
        if (v29) {
          v30 = (char *)sub_1003F6AEC((uint64_t)(a2 + 2), v29);
        }
        else {
          v30 = 0LL;
        }
        v31 = &v30[96 * v26];
        __int128 v32 = *(_OWORD *)&v52[16];
        *(_OWORD *)v31 = *(_OWORD *)v52;
        *((_OWORD *)v31 + 1) = v32;
        __int128 v33 = v53;
        __int128 v34 = v54;
        __int128 v35 = v56;
        *((_OWORD *)v31 + 4) = v55;
        *((_OWORD *)v31 + 5) = v35;
        *((_OWORD *)v31 + 2) = v33;
        *((_OWORD *)v31 + 3) = v34;
        v37 = (char *)*a2;
        v36 = (char *)a2[1];
        v38 = v31;
        if (v36 != *a2)
        {
          do
          {
            __int128 v39 = *((_OWORD *)v36 - 5);
            *((_OWORD *)v38 - 6) = *((_OWORD *)v36 - 6);
            *((_OWORD *)v38 - 5) = v39;
            __int128 v40 = *((_OWORD *)v36 - 4);
            __int128 v41 = *((_OWORD *)v36 - 3);
            __int128 v42 = *((_OWORD *)v36 - 1);
            *((_OWORD *)v38 - 2) = *((_OWORD *)v36 - 2);
            *((_OWORD *)v38 - 1) = v42;
            *((_OWORD *)v38 - 4) = v40;
            *((_OWORD *)v38 - 3) = v41;
            v38 -= 96;
            v36 -= 96;
          }

          while (v36 != v37);
          v36 = (char *)*a2;
        }

        v25 = v31 + 96;
        *a2 = v38;
        a2[1] = v31 + 96;
        a2[2] = &v30[96 * v29];
        if (v36) {
          operator delete(v36);
        }
      }

      else
      {
        __int128 v21 = *(_OWORD *)&v52[16];
        _OWORD *v19 = *(_OWORD *)v52;
        v19[1] = v21;
        __int128 v22 = v53;
        __int128 v23 = v54;
        __int128 v24 = v56;
        v19[4] = v55;
        v19[5] = v24;
        v19[2] = v22;
        v19[3] = v23;
        v25 = v19 + 6;
      }

      a2[1] = v25;
    }

    uint64_t v15 = v47;
  }

  else
  {
    uint64_t v18 = 2LL;
  }

  uint64_t v47 = 0LL;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
  }
  *(void **)((char *)v48
  uint64_t v49 = v44;
  std::streambuf::~streambuf(&v50);
  std::ios::~ios(&v51);
  return v18;
}

void sub_1009D3558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_1009D35C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v2 = a1 + 112;
  uint64_t v4 = v2 - 40;
  uint64_t v40 = v2;
  (*(void (**)(void))(v3 + 16))();
  if (sub_100D8A92C(v4))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101866278);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = (void *)(a1 + 88);
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)uint64_t v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      uint64_t v46 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Database is already opened., name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    if (*(void *)(a1 + 216))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866278);
      }
      double v7 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v8 = *(void *)(a1 + 216);
        *(_DWORD *)buf = 134349056;
        *(void *)uint64_t v44 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101866278);
        }
        uint64_t v35 = *(void *)(a1 + 216);
        int v41 = 134349056;
        uint64_t v42 = v35;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  &v41,  12);
        v37 = (uint8_t *)v36;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::set DatabaseAccessible() [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v36);
        if (v37 != buf) {
          free(v37);
        }
      }
    }

    uint64_t v9 = 1LL;
    goto LABEL_63;
  }

  sub_1001BA070(a1);
  uint64_t v9 = sub_100D8A92C(v4);
  if ((_DWORD)v9)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101866278);
    }
    uint64_t v10 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = (void *)(a1 + 88);
      uint64_t v12 = *(void *)(a1 + 216);
      *(_DWORD *)buf = 68289539;
      *(_DWORD *)uint64_t v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      uint64_t v46 = v11;
      __int16 v47 = 2049;
      uint64_t v48 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Inserting entries into database, name:%{public, location:escape_only}s, size:%{private}llu}",  buf,  0x26u);
    }

    sub_1003C0454(*(void *)(a1 + 80));
    unint64_t v13 = *(void *)(a1 + 208);
    uint64_t v14 = *(void *)(a1 + 184);
    uint64_t v15 = *(void *)(a1 + 192);
    uint64_t v16 = (void *)(v14 + 8 * (v13 / 0x2A));
    unsigned int v39 = v9;
    if (v15 == v14) {
      unint64_t v17 = 0LL;
    }
    else {
      unint64_t v17 = *v16 + 96 * (v13 % 0x2A);
    }
    while (1)
    {
      if (v15 == v14)
      {
        unint64_t v23 = 0LL;
      }

      else
      {
        unint64_t v22 = *(void *)(a1 + 216) + *(void *)(a1 + 208);
        unint64_t v23 = *(void *)(v14 + 8 * (v22 / 0x2A)) + 96 * (v22 % 0x2A);
      }

      if (v17 == v23) {
        break;
      }
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101866298);
      }
      __int128 v24 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "Adding from buffer to db.", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101866298);
        }
        LOWORD(v41) = 0;
        LODWORD(v38) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Adding from buffer to db.",  &v41,  v38);
        unint64_t v27 = (uint8_t *)v26;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::set DatabaseAccessible() [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v26);
        if (v27 != buf) {
          free(v27);
        }
      }

      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)a1 + 80LL))(a1, v17, 1LL);
      v17 += 96LL;
      if (v17 - *v16 == 4032)
      {
        unint64_t v25 = v16[1];
        ++v16;
        unint64_t v17 = v25;
      }

      uint64_t v14 = *(void *)(a1 + 184);
      uint64_t v15 = *(void *)(a1 + 192);
    }

    sub_1003C05BC(*(void *)(a1 + 80));
    uint64_t v9 = v39;
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101866278);
    }
    uint64_t v18 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
    {
      uint64_t v19 = (void *)(a1 + 88);
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)uint64_t v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      uint64_t v46 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866278);
      }
    }

    unint64_t v20 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      __int128 v21 = (void *)(a1 + 88);
      *(_DWORD *)buf = 68289282;
      *(_DWORD *)uint64_t v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      uint64_t v46 = v21;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v20,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Unexpected error condition! Device has been unlocked but database remains unreadable!",  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    *(_BYTE *)(a1 + 128) = 1;
  }

  unint64_t v28 = *(void ***)(a1 + 184);
  uint64_t v29 = *(void *)(a1 + 192);
  *(void *)(a1 + 216) = 0LL;
  unint64_t v30 = v29 - (void)v28;
  if (v30 >= 0x11)
  {
    do
    {
      operator delete(*v28);
      uint64_t v31 = *(void *)(a1 + 192);
      unint64_t v28 = (void **)(*(void *)(a1 + 184) + 8LL);
      *(void *)(a1 + 184) = v28;
      unint64_t v30 = v31 - (void)v28;
    }

    while (v30 > 0x10);
  }

  if (v30 >> 3 == 1)
  {
    uint64_t v32 = 21LL;
  }

  else
  {
    if (v30 >> 3 != 2) {
      goto LABEL_61;
    }
    uint64_t v32 = 42LL;
  }

  *(void *)(a1 + 208) = v32;
LABEL_61:
  __int128 v33 = *(void **)(a1 + 144);
  if (v33)
  {

    *(void *)(a1 + 144) = 0LL;
  }

void sub_1009D3D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

__n128 sub_1009D3D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v3 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_OWORD *)(a2 + 16) = v3;
  __n128 result = *(__n128 *)(a3 + 32);
  __int128 v5 = *(_OWORD *)(a3 + 48);
  __int128 v6 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(a2 + 80) = v6;
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v5;
  return result;
}

uint64_t sub_1009D3D54(uint64_t a1)
{
  return sub_1009D35C8(a1 - 72);
}

void sub_1009D3D5C(id a1)
{
  qword_1019347A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CyclingPower");
}

uint64_t sub_1009D3D88(uint64_t *a1, char **a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v42);
  if ((SHIBYTE(v43) & 0x80000000) == 0)
  {
    if (HIBYTE(v43)) {
      goto LABEL_3;
    }
LABEL_43:
    sub_101257070(v4);
    __break(1u);
  }

  unsigned int v39 = v42[1];
  operator delete(v42[0]);
  if (!v39) {
    goto LABEL_43;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    a2[1] = *a2;
    sub_10000CE18((uint64_t)v42);
    __int128 v6 = sub_10000CF44(&v43, (uint64_t)"SELECT * from ", 14LL);
    (*(void (**)(_BYTE *__return_ptr, uint64_t *))(*a1 + 64))(v46, a1);
    if (v46[23] >= 0) {
      double v7 = v46;
    }
    else {
      double v7 = *(_BYTE **)v46;
    }
    if (v46[23] >= 0) {
      uint64_t v8 = v46[23];
    }
    else {
      uint64_t v8 = *(void *)&v46[8];
    }
    uint64_t v9 = sub_10000CF44(v6, (uint64_t)v7, v8);
    sub_10000CF44(v9, (uint64_t)" ORDER BY id ASC", 16LL);
    if ((v46[23] & 0x80000000) != 0) {
      operator delete(*(void **)v46);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str((std::stringbuf::string_type *)v46, &v44);
    if (v46[23] >= 0) {
      uint64_t v11 = v46;
    }
    else {
      uint64_t v11 = *(char **)v46;
    }
    sub_1003C0D54(v10, v11, &v40);
    uint64_t v12 = v40;
    uint64_t v40 = 0LL;
    uint64_t v41 = v12;
    if ((v46[23] & 0x80000000) != 0) {
      operator delete(*(void **)v46);
    }
    sub_1003C0454(a1[10]);
    while (!sub_1001BA11C((uint64_t)a1, &v41, (uint64_t)v46))
    {
      unint64_t v13 = a2[1];
      unint64_t v14 = (unint64_t)a2[2];
      if ((unint64_t)v13 >= v14)
      {
        unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((v13 - *a2) >> 5);
        unint64_t v21 = v20 + 1;
        if (v20 + 1 > 0x2AAAAAAAAAAAAAALL) {
          sub_100007008();
        }
        unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v14 - (void)*a2) >> 5);
        if (2 * v22 > v21) {
          unint64_t v21 = 2 * v22;
        }
        if (v22 >= 0x155555555555555LL) {
          unint64_t v23 = 0x2AAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v23 = v21;
        }
        if (v23) {
          __int128 v24 = (char *)sub_1003F6AEC((uint64_t)(a2 + 2), v23);
        }
        else {
          __int128 v24 = 0LL;
        }
        unint64_t v25 = &v24[96 * v20];
        __int128 v26 = *(_OWORD *)&v46[16];
        *(_OWORD *)unint64_t v25 = *(_OWORD *)v46;
        *((_OWORD *)v25 + 1) = v26;
        __int128 v27 = v47;
        __int128 v28 = v48;
        __int128 v29 = v50;
        *((_OWORD *)v25 + 4) = v49;
        *((_OWORD *)v25 + 5) = v29;
        *((_OWORD *)v25 + 2) = v27;
        *((_OWORD *)v25 + 3) = v28;
        uint64_t v31 = *a2;
        unint64_t v30 = a2[1];
        uint64_t v32 = v25;
        if (v30 != *a2)
        {
          do
          {
            __int128 v33 = *((_OWORD *)v30 - 5);
            *((_OWORD *)v32 - 6) = *((_OWORD *)v30 - 6);
            *((_OWORD *)v32 - 5) = v33;
            __int128 v34 = *((_OWORD *)v30 - 4);
            __int128 v35 = *((_OWORD *)v30 - 3);
            __int128 v36 = *((_OWORD *)v30 - 1);
            *((_OWORD *)v32 - 2) = *((_OWORD *)v30 - 2);
            *((_OWORD *)v32 - 1) = v36;
            *((_OWORD *)v32 - 4) = v34;
            *((_OWORD *)v32 - 3) = v35;
            v32 -= 96;
            v30 -= 96;
          }

          while (v30 != v31);
          unint64_t v30 = *a2;
        }

        uint64_t v19 = v25 + 96;
        *a2 = v32;
        a2[1] = v25 + 96;
        a2[2] = &v24[96 * v23];
        if (v30) {
          operator delete(v30);
        }
      }

      else
      {
        __int128 v15 = *(_OWORD *)&v46[16];
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v46;
        *((_OWORD *)v13 + 1) = v15;
        __int128 v16 = v47;
        __int128 v17 = v48;
        __int128 v18 = v50;
        *((_OWORD *)v13 + 4) = v49;
        *((_OWORD *)v13 + 5) = v18;
        *((_OWORD *)v13 + 2) = v16;
        *((_OWORD *)v13 + 3) = v17;
        uint64_t v19 = v13 + 96;
      }

      a2[1] = v19;
    }

    sub_1003C05BC(a1[10]);
    uint64_t v37 = v41;
    uint64_t v41 = 0LL;
    if (v37) {
      (*(void (**)(uint64_t))(*(void *)v37 + 8LL))(v37);
    }
    *(void **)((char *)v42
    uint64_t v43 = v38;
    std::streambuf::~streambuf(&v44);
    return std::ios::~ios(&v45);
  }

  return result;
}

void sub_1009D40CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  sub_1011F8850((uint64_t)va);
  _Unwind_Resume(a1);
}

id *sub_1009D413C(uint64_t a1, uint64_t a2, char a3)
{
  v35[0] = (id)os_transaction_create("CLActivityRecorderDb::sanitizeAndStoreRecordUL");
  v35[1] = 0LL;
  if (*(double *)(a1 + 248) > 0.0
    && (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136LL))(a1, a1 + 224, a2))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 72LL))(a1, a1 + 224, a2);
    return sub_1001BA1BC(v35);
  }

  if ((a3 & 1) == 0) {
    sub_1003C0454(*(void *)(a1 + 80));
  }
  int v6 = (*(uint64_t (**)(uint64_t, _BYTE *))(*(void *)a1 + 104LL))(a1, v44);
  if (v6 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

  else
  {
    if (v6)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866278);
      }
      unint64_t v14 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Failed to insert record due to failure from reading the most recent entry.",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101866278);
        }
        LOWORD(v36) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "Failed to insert record due to failure from reading the most recent entry.",  &v36,  2);
        __int128 v16 = (uint8_t *)v15;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::san itizeAndStoreRecordUL(const T &, BOOL) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB: :ClassBDataProtectionPolicy]",  "%s\n",  v15);
        if (v16 != buf) {
          free(v16);
        }
      }

      goto LABEL_43;
    }

    double v7 = *(double *)(a2 + 24);
    double v8 = v45;
    double v9 = v7 - v45;
    if (v7 - v45 < 0.0) {
      double v9 = -(v7 - v45);
    }
    if (v9 > 604800.0)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866278);
      }
      uint64_t v10 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a2 + 24);
        *(_DWORD *)buf = 134349312;
        double v41 = v45;
        __int16 v42 = 2050;
        uint64_t v43 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101866278);
        }
        uint64_t v26 = *(void *)(a2 + 24);
        int v36 = 134349312;
        double v37 = v45;
        __int16 v38 = 2050;
        uint64_t v39 = v26;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  &v36,  22);
        __int128 v28 = (uint8_t *)v27;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::san itizeAndStoreRecordUL(const T &, BOOL) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB: :ClassBDataProtectionPolicy]",  "%s\n",  v27);
        if (v28 != buf) {
          free(v28);
        }
      }

      CLWriteStackshot("Potential CM database inconsistency, time jump", 0LL);
      double v7 = *(double *)(a2 + 24);
      double v8 = v45;
    }

    if (v7 < v8)
    {
      if (v8 - v7 < 10.0)
      {
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101866278);
        }
        uint64_t v12 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
        {
          double v13 = *(double *)(a2 + 24);
          *(_DWORD *)buf = 134217984;
          double v41 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_101866278);
          }
          double v29 = *(double *)(a2 + 24);
          int v36 = 134217984;
          double v37 = v29;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  COERCE_DOUBLE(&v36));
          uint64_t v31 = (uint8_t *)v30;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::s anitizeAndStoreRecordUL(const T &, BOOL) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivit yDB::ClassBDataProtectionPolicy]",  "%s\n",  v30);
          if (v31 != buf) {
            free(v31);
          }
        }

        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 88LL))(a1, a2);
        goto LABEL_42;
      }

      double v17 = v7 - v8;
      double v18 = *(float *)(a1 + 136);
      if (qword_1019344B0 != -1)
      {
        double v34 = *(float *)(a1 + 136);
        dispatch_once(&qword_1019344B0, &stru_101866278);
        double v18 = v34;
      }

      double v19 = v17 - v18;
      unint64_t v20 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 134217984;
        double v41 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101866278);
        }
        int v36 = 134217984;
        double v37 = v19;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  COERCE_DOUBLE(&v36));
        __int128 v33 = (uint8_t *)v32;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::san itizeAndStoreRecordUL(const T &, BOOL) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB: :ClassBDataProtectionPolicy]",  "%s\n",  v32);
        if (v33 != buf) {
          free(v33);
        }
      }

      (*(void (**)(uint64_t, double))(*(void *)a1 + 96LL))(a1, v19);
    }

    (*(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(*(void *)a1 + 144LL))(a1, v44, a1 + 224, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

void sub_1009D4888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_1009D48B4(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v23);
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    if (HIBYTE(v24)) {
      goto LABEL_3;
    }
LABEL_29:
    unint64_t v20 = (_Unwind_Exception *)sub_1012571DC(v4);
    sub_1011F8850((uint64_t)v23);
    _Unwind_Resume(v20);
  }

  double v19 = v23[1];
  operator delete(v23[0]);
  if (!v19) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120LL))(a1, a2, 1LL);
    sub_10000CE18((uint64_t)v23);
    int v6 = sub_10000CF44(&v24, (uint64_t)"DELETE FROM ", 12LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" WHERE startTime > ?", 20LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v25);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v21);
    uint64_t v12 = v21;
    uint64_t v21 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, *(double *)(a2 + 24)))
    {
      uint64_t v14 = a1[10];
      __int128 v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    uint64_t v16 = a1[10];
    else {
      uint64_t v17 = *(void *)(v16 + 88);
    }
    sub_1003C1EC0(v16, v17);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v23
    uint64_t v24 = v18;
    std::streambuf::~streambuf(&v25);
    return std::ios::~ios(&v26);
  }

  return result;
}

uint64_t sub_1009D4B14(void *a1, double a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v21);
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22)) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v18 = (_Unwind_Exception *)sub_101257348(v4);
    sub_1011F8850((uint64_t)v21);
    _Unwind_Resume(v18);
  }

  uint64_t v17 = v21[1];
  operator delete(v21[0]);
  if (!v17) {
    goto LABEL_26;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v21);
    int v6 = sub_10000CF44(&v22, (uint64_t)"UPDATE ", 7LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" SET startTime = startTime + ?", 30LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v23);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v19);
    uint64_t v12 = v19;
    uint64_t v19 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, a2))
    {
      uint64_t v14 = a1[10];
      __int128 v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v21
    uint64_t v22 = v16;
    std::streambuf::~streambuf(&v23);
    return std::ios::~ios(&v24);
  }

  return result;
}

uint64_t sub_1009D4D4C(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v22);
  if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    if (HIBYTE(v23)) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t v17 = (_Unwind_Exception *)sub_1012574B4(v4);
    uint64_t v18 = v20;
    uint64_t v20 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
    sub_1011F8850((uint64_t)v22);
    _Unwind_Resume(v17);
  }

  uint64_t v16 = v22[1];
  operator delete(v22[0]);
  if (!v16) {
    goto LABEL_25;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v22);
  __int128 v5 = sub_10000CF44(&v23, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  double v8 = sub_10000CF44(v5, (uint64_t)p_p, size);
  sub_10000CF44(v8, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28LL);
  uint64_t v9 = a1[10];
  std::stringbuf::str(&__p, &v24);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = &__p;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v9, (char *)v10, &v19);
  uint64_t v11 = v19;
  uint64_t v19 = 0LL;
  uint64_t v20 = v11;
  uint64_t v12 = sub_1001BA11C((uint64_t)a1, &v20, a2);
  uint64_t v13 = v20;
  uint64_t v20 = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  *(void **)((char *)v22
  uint64_t v23 = v14;
  std::streambuf::~streambuf(&v24);
  std::ios::~ios(&v25);
  return v12;
}

void sub_1009D4F74(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_1009D4FA0(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  __int128 v3 = (void **)a1[2];
  a1[5] = 0LL;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      __int128 v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 21LL;
  }

  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 42LL;
  }

  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    double v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000EA11C((uint64_t)a1);
}

__n128 sub_1009D5034(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 42 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1009D5120(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x2A)) + 96 * (v7 % 0x2A);
  __int128 v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v9;
  __n128 result = *(__n128 *)(a2 + 32);
  __int128 v11 = *(_OWORD *)(a2 + 48);
  __int128 v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v8 + 80) = v12;
  *(__n128 *)(v8 + 32) = result;
  *(_OWORD *)(v8 + 48) = v11;
  ++a1[5];
  return result;
}

void sub_1009D50F4(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void sub_1009D5120(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x2A;
  unint64_t v4 = v2 - 42;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    __int128 v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      double v34 = (char *)sub_1000071BC(v5, v33);
      __int128 v35 = &v34[8 * (v33 >> 2)];
      double v37 = &v34[8 * v36];
      __int16 v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        double v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)double v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_1009D53E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_1009D5434(uint64_t a1, uint64_t a2)
{
  int v3 = 2;
  __n128 result = (void *)sub_100595C90(a1, &v3, qword_101999B10, a2);
  *__n128 result = off_1018662C8;
  return result;
}

uint64_t sub_1009D5474(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101866390);
  }
  unint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16LL))(__p, a1);
    int v3 = v14 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)buf = 136315138;
    *(void *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "TILE: clear, tile, %sd", buf, 0xCu);
    if (v14 < 0) {
      operator delete(__p[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101866390);
    }
    uint64_t v5 = qword_101934A78;
    (*(void (**)(_BYTE *__return_ptr, uint64_t))(*(void *)a1 + 16LL))(buf, a1);
    if (v10 >= 0) {
      uint64_t v6 = buf;
    }
    else {
      uint64_t v6 = *(_BYTE **)buf;
    }
    int v11 = 136315138;
    uint64_t v12 = v6;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v5,  2LL,  "TILE: clear, tile, %sd",  (const char *)&v11);
    unint64_t v8 = v7;
    if (v10 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLHRSETile::clear()", "%s\n", v8);
  }

  return sub_100C0CB8C(a1);
}

void sub_1009D569C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 296) = 0;
}

void sub_1009D56C4(uint64_t a1)
{
  v1 = (void *)sub_100C0CB28(a1);
  operator delete(v1);
}

double sub_1009D56D8()
{
  return 0.05;
}

uint64_t sub_1009D56E4()
{
  return 90LL;
}

void sub_1009D56EC(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_1009D5718()
{
  v0 = operator new(0x10uLL);
  uint64_t result = sub_1002E4C3C(v0, "CLHRSETile-Mutex", 1LL, 1LL);
  qword_101999B10 = (uint64_t)v0;
  return result;
}

void sub_1009D5758(_Unwind_Exception *a1)
{
}

uint64_t sub_1009D576C(uint64_t a1, void *a2)
{
  int v3 = (void *)sub_1009D5AA4(a1, "CLFenceDataDownloadManager", a2);
  *int v3 = off_1018663C0;
  v3[14] = 0LL;
  unint64_t v4 = v3 + 14;
  v3[15] = 0LL;
  v3[16] = 0LL;
  sub_100F76854(v3 + 17);
  *(void *)(a1 + 152) = 0LL;
  *(void *)(a1 + 160) = a1 + 160;
  *(void *)(a1 + 176) = 0LL;
  *(void *)(a1 + 184) = 0LL;
  *(void *)(a1 + 168) = a1 + 160;
  *(_WORD *)(a1 + 192) = 0;
  sub_100922994((char *)(a1 + 200));
  *(_BYTE *)(a1 + 448) = 0;
  sub_1004BFDC0((uint64_t)sub_1009D5B40, a1, *(void **)(a1 + 32), __p);
  uint64_t v5 = __p[0];
  __p[0] = 0LL;
  uint64_t v6 = *v4;
  *unint64_t v4 = v5;
  if (v6)
  {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    unint64_t v7 = __p[0];
    __p[0] = 0LL;
    if (v7) {
      (*(void (**)(void *))(*(void *)v7 + 8LL))(v7);
    }
  }

  [*(id *)(*v4 + 16) register:*(void *)(*v4 + 8) forNotification:2 registrationInfo:0];
  [*(id *)(*v4 + 16) register:*(void *)(*v4 + 8) forNotification:3 registrationInfo:0];
  sub_1003CC884((uint64_t)sub_1009D5D18, a1, *(void **)(a1 + 32), __p);
  unint64_t v8 = __p[0];
  __p[0] = 0LL;
  uint64_t v9 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    char v10 = __p[0];
    __p[0] = 0LL;
    if (v10) {
      (*(void (**)(void *))(*(void *)v10 + 8LL))(v10);
    }
  }

  [*(id *)(*(void *)(a1 + 120) + 16) register:*(void *)(*(void *)(a1 + 120) + 8) forNotification:6 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 120) + 16) register:*(void *)(*(void *)(a1 + 120) + 8) forNotification:9 registrationInfo:0];
  sub_100C6E054((uint64_t)sub_1009D5EF0, a1, *(void **)(a1 + 32), __p);
  int v11 = __p[0];
  __p[0] = 0LL;
  uint64_t v12 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = v11;
  if (v12)
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    uint64_t v13 = __p[0];
    __p[0] = 0LL;
    if (v13) {
      (*(void (**)(void *))(*(void *)v13 + 8LL))(v13);
    }
  }

  [*(id *)(*(void *)(a1 + 128) + 16) register:*(void *)(*(void *)(a1 + 128) + 8) forNotification:5 registrationInfo:0];
  char v14 = operator new(0x38uLL);
  sub_1010DDBC0(__p, "FenceDownloadTimer");
  uint64_t v15 = *(void *)(a1 + 40);
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  sub_1006B5FBC(v14, __p, sub_1009D60C8, a1, v15, 1LL, Current + 900.0 + 300.0, 1.79769313e308, 0.9);
  *(void *)(a1 + 152) = v14;
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_1009D59D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v22 = *(void *)(v15 + 128);
  *(void *)(v15 + 128) = 0LL;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  uint64_t v23 = *(void *)(v15 + 120);
  *(void *)(v15 + 120) = 0LL;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
  }
  uint64_t v24 = *v20;
  *int64_t v20 = 0LL;
  if (v24) {
    (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
  }
  sub_1009D6298(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1009D5AA4(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101866568;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_1009D5B24(_Unwind_Exception *exception_object)
{
}

void sub_1009D5B40(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101866518);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceDataDownloadManager::onNetworkLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101866518);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceDataDownloadManager::onNetworkLocationNotification, event:%{public, location :escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1009D9D78(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009D5CF8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009D5D18(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101866518);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceDataDownloadManager::onStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101866518);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceDataDownloadManager::onStatusNotification, event:%{public, location:escape_o nly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1009DA360(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009D5ED0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009D5EF0(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101866518);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceDataDownloadManager::onCompanionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101866518);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceDataDownloadManager::onCompanionNotification, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1009DA844(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009D60A8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009D60C8(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101866518);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    unint64_t v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceDataDownloadManager::onFenceDownloadTimer",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101866518);
    }
    uint64_t v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      int v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceDataDownloadManager::onFenceDownloadTimer, event:%{public, location:escape_o nly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  sub_1009D9F8C(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009D6278( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009D6298(uint64_t a1)
{
  *(void *)a1 = off_101866568;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_1009D6310(uint64_t a1)
{
  *(void *)a1 = off_1018663C0;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866538);
  }
  unint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Fence: delete CLFenceDataDownloadManager", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    v13[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: delete CLFenceDataDownloadManager",  v13,  2);
    __int16 v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLFenceDataDownloadManager::~CLFenceDataDownloadManager()",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  uint64_t v3 = *(void *)(a1 + 152);
  if (v3)
  {
    sub_1006B6294(v3);
    uint64_t v4 = *(void *)(a1 + 152);
    if (v4)
    {
      uint64_t v5 = (void *)sub_1006B6010(v4);
      operator delete(v5);
    }

    *(void *)(a1 + 152) = 0LL;
  }

  uint64_t v6 = *(void **)(a1 + 424);
  if (v6)
  {
    *(void *)(a1 + 432) = v6;
    operator delete(v6);
  }

  sub_1009DC9D8((uint64_t *)(a1 + 160));
  sub_10000AE14(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  uint64_t v9 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  sub_1009D6298(a1);
  return a1;
}

void sub_1009D6588(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100006BB8(a1);
  }
  _Unwind_Resume(a1);
}

void sub_1009D659C(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009D6310(a1);
  operator delete(v1);
}

uint64_t sub_1009D65B0()
{
  return 1LL;
}

uint64_t sub_1009D65B8()
{
  return 1LL;
}

void *sub_1009D65C0@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

void sub_1009D6638(void *a1, __int128 **a2)
{
  if (qword_101934870 != -1) {
LABEL_79:
  }
    dispatch_once(&qword_101934870, &stru_101866538);
  uint64_t v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    unint64_t v5 = 0xEF7BDEF7BDEF7BDFLL * (((char *)a2[1] - (char *)*a2) >> 3);
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 134349056;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Fence: Adding %{public}ld fences for download",  (uint8_t *)buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    unint64_t v34 = 0xEF7BDEF7BDEF7BDFLL * (((char *)a2[1] - (char *)*a2) >> 3);
    *(_DWORD *)__dst = 134349056;
    *(void *)&__dst[4] = v34;
    LODWORD(v39) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Adding %{public}ld fences for download",  __dst,  v39);
    uint64_t v36 = (std::stringbuf::string_type *)v35;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::addFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v35);
    if (v36 != buf) {
      free(v36);
    }
  }

  uint64_t v42 = -[CLOSTransaction initWithDescription:]( objc_alloc(&OBJC_CLASS___CLOSTransaction),  "initWithDescription:",  "CLFenceDataDownloadManager.AddFenceForDataDownload");
  context = objc_autoreleasePoolPush();
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v40 = a1[22];
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  if (*a2 != v7)
  {
    a2 = (__int128 **)(a1 + 20);
    while (1)
    {
      sub_1002718F0(__dst, v8);
      uint64_t v9 = v60;
      if (v61 == v60) {
        break;
      }
      if (v60) {
        goto LABEL_9;
      }
LABEL_10:

      if (v58 < 0) {
        operator delete(__p);
      }
      if (v51 < 0) {
        operator delete(v50);
      }
      if (v49 < 0) {
        operator delete(v48);
      }
      if (v47 < 0) {
        operator delete(*(void **)__dst);
      }
      uint64_t v8 = (__int128 *)((char *)v8 + 248);
      if (v8 == v7) {
        goto LABEL_68;
      }
    }

    if (v56 == -1)
    {
      sub_101257620(qword_101934870 == -1);
      abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Core/Fence/CLFenceDataDownloadManager.mm",  128,  "addFencesForDataDownload");
      __break(1u);
      goto LABEL_79;
    }

    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    __int16 v10 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      sub_100923668((uint64_t)__dst, buf);
      char v11 = buf;
      if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
        char v11 = (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
      }
      LODWORD(v43.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v43.__r_.__value_.__r.__words + 4) = (std::string::size_type)v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "Adding fence to download, %{private}s",  (uint8_t *)&v43,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866538);
      }
      uint64_t v26 = qword_101934878;
      sub_100923668((uint64_t)__dst, &v43);
      __int128 v27 = &v43;
      if ((v43.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        __int128 v27 = (std::stringbuf::string_type *)v43.__r_.__value_.__r.__words[0];
      }
      int v44 = 136380675;
      uint64_t v45 = v27;
      LODWORD(v39) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v26,  2LL,  "Adding fence to download, %{private}s",  &v44,  v39);
      double v29 = v28;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::addFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  (const char *)v29);
      if (v29 != buf) {
        free(v29);
      }
    }

    uint64_t v12 = a1[17];
    double v13 = v52;
    double v14 = v53;
    double v15 = v54;
    int v16 = sub_100923FF0((uint64_t)__dst);
    sub_100F7B41C(v12, v16, -1, 0, &buf[0].__r_.__value_.__l.__data_, v13, v14, v15, -1.0);
    uint64_t v17 = (void *)buf[0].__r_.__value_.__r.__words[0];
    if (buf[0].__r_.__value_.__r.__words[0] == buf[0].__r_.__value_.__l.__size_)
    {
      if (v55 >= 0.0)
      {
        double v55 = Current + -172800.0 + 900.0;
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        uint64_t v24 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          sub_100923668((uint64_t)__dst, buf);
          unint64_t v25 = buf;
          if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
            unint64_t v25 = (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
          }
          LODWORD(v43.__r_.__value_.__l.__data_) = 136380675;
          *(std::string::size_type *)((char *)v43.__r_.__value_.__r.__words + 4) = (std::string::size_type)v25;
          _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "Fence: Adding fence to download, restored fence, %{private}s",  (uint8_t *)&v43,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866538);
          }
          uint64_t v30 = qword_101934878;
          sub_100923668((uint64_t)__dst, &v43);
          __int128 v31 = &v43;
          if ((v43.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            __int128 v31 = (std::stringbuf::string_type *)v43.__r_.__value_.__r.__words[0];
          }
          int v44 = 136380675;
          uint64_t v45 = v31;
          LODWORD(v39) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v30,  2LL,  "Fence: Adding fence to download, restored fence, %{private}s",  &v44,  v39);
          uint64_t v23 = v32;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::addFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  (const char *)v23);
          goto LABEL_66;
        }
      }
    }

    else
    {
      double v55 = *(double *)(buf[0].__r_.__value_.__r.__words[0] + 64);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866538);
      }
      __int16 v18 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        CFAbsoluteTime v19 = CFAbsoluteTimeGetCurrent();
        LODWORD(buf[0].__r_.__value_.__l.__data_) = 134283521;
        *(double *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v19 - v55;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "Fence: Already have fence data, download age %{private}.1f",  (uint8_t *)buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        uint64_t v20 = qword_101934878;
        CFAbsoluteTime v21 = CFAbsoluteTimeGetCurrent();
        LODWORD(v43.__r_.__value_.__l.__data_) = 134283521;
        *(double *)((char *)v43.__r_.__value_.__r.__words + 4) = v21 - v55;
        LODWORD(v39) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v20,  2LL,  "Fence: Already have fence data, download age %{private}.1f",  &v43,  v39);
        uint64_t v23 = (std::stringbuf::string_type *)v22;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::addFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v22);
LABEL_66:
        if (v23 != buf) {
          free(v23);
        }
      }
    }

    sub_1006FF068(a1 + 20, (uint64_t)__dst, 0);
    if (v17) {
      operator delete(v17);
    }
    uint64_t v9 = v60;
    if (!v60) {
      goto LABEL_10;
    }
LABEL_9:
    v61 = v9;
    operator delete(v9);
    goto LABEL_10;
  }

void sub_1009D6FF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25)
{
  if (v25) {
    operator delete(v25);
  }
  sub_10026EDA4((uint64_t)&a25);
  _Unwind_Resume(a1);
}

void sub_1009D7068(uint64_t a1)
{
  if (sub_1002958AC() != 1)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    unint64_t v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Fence: avoid download check, isLocationServicesEnabled, %{public}d",  buf,  8u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    *(_DWORD *)v135 = 67240192;
    *(_DWORD *)&v135[4] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: avoid download check, isLocationServicesEnabled, %{public}d",  v135,  8);
    uint64_t v7 = (char *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v6);
LABEL_217:
    if (v7 != buf) {
      free(v7);
    }
    return;
  }

  if (!*(_BYTE *)(a1 + 193) && !*(_BYTE *)(a1 + 192) && !*(_BYTE *)(a1 + 448))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    v93 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v93,  OS_LOG_TYPE_DEBUG,  "Fence: no reachability, download not possible",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    *(_WORD *)v135 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: no reachability, download not possible",  v135,  2);
    uint64_t v7 = (char *)v94;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v94);
    goto LABEL_217;
  }

  uint64_t v2 = a1 + 160;
  uint64_t v3 = *(void *)(a1 + 168);
  if (v3 == a1 + 160)
  {
    int v4 = 0;
  }

  else
  {
    int v4 = 0;
    do
    {
      v4 += *(_DWORD *)(v3 + 320) >= 0;
      uint64_t v3 = *(void *)(v3 + 8);
    }

    while (v3 != v2);
  }

  double Current = CFAbsoluteTimeGetCurrent();
  double v9 = Current - *(double *)(a1 + 184);
  if (v9 <= 900.0)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    v87 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134283521;
      *(double *)&uint8_t buf[4] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v87,  OS_LOG_TYPE_DEBUG,  "Download error too fresh, avoid new downloads, dt, %{private}.1lf",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    *(_DWORD *)v135 = 134283521;
    *(double *)&v135[4] = v9;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Download error too fresh, avoid new downloads, dt, %{private}.1lf",  v135,  12);
    uint64_t v7 = (char *)v88;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v88);
    goto LABEL_217;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866538);
  }
  __int16 v10 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v11 = *(void *)(a1 + 176);
    int v12 = *(unsigned __int8 *)(a1 + 193);
    int v13 = *(unsigned __int8 *)(a1 + 192);
    int v14 = *(unsigned __int8 *)(a1 + 448);
    *(_DWORD *)buf = 67175681;
    *(_DWORD *)&uint8_t buf[4] = v4;
    *(_WORD *)&buf[8] = 2049;
    *(void *)&buf[10] = v11;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)v145 = v12;
    *(_WORD *)&v145[4] = 1026;
    *(_DWORD *)v146 = v13;
    *(_WORD *)&v146[4] = 1026;
    *(_DWORD *)v147 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "checkDownloadState, currentQueries, %{private}d, numCombined, %{private}lu, reachability, %{public}d,%{public}d,%{public}d",  buf,  0x24u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    uint64_t v95 = *(void *)(a1 + 176);
    int v96 = *(unsigned __int8 *)(a1 + 193);
    int v97 = *(unsigned __int8 *)(a1 + 192);
    int v98 = *(unsigned __int8 *)(a1 + 448);
    *(_DWORD *)v135 = 67175681;
    *(_DWORD *)&v135[4] = v4;
    *(_WORD *)&v135[8] = 2049;
    *(void *)&v135[10] = v95;
    *(_WORD *)&v135[18] = 1026;
    *(_DWORD *)v136 = v96;
    *(_WORD *)&v136[4] = 1026;
    *(_DWORD *)v137 = v97;
    *(_WORD *)&v137[4] = 1026;
    *(_DWORD *)v138 = v98;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "checkDownloadState, currentQueries, %{private}d, numCombined, %{private}lu, reachability, %{public}d,%{public}d,%{public}d",  v135,  36);
    v100 = (char *)v99;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v99);
    if (v100 != buf) {
      free(v100);
    }
  }

  CFAbsoluteTime v15 = CFAbsoluteTimeGetCurrent();
  sub_100D2D9A4((uint64_t)v130);
  uint64_t v16 = *(void *)(a1 + 168);
  if (v16 == v2)
  {
    unint64_t v109 = 0LL;
    int v17 = 0;
    goto LABEL_191;
  }

  int v17 = 0;
  unint64_t v109 = 0LL;
  uint64_t v108 = a1 + 200;
  while ((v17 + v4) < 6)
  {
    if ((*(_DWORD *)(v16 + 320) & 0x80000000) == 0)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866538);
      }
      __int16 v18 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        sub_100923668(v16 + 16, (std::stringbuf::string_type *)buf);
        CFAbsoluteTime v19 = buf;
        if (v145[3] < 0) {
          CFAbsoluteTime v19 = *(_BYTE **)buf;
        }
        *(_DWORD *)v135 = 136380675;
        *(void *)&v135[4] = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "already downloading fence, %{private}s",  v135,  0xCu);
        if ((v145[3] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_83;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866538);
      }
      uint64_t v20 = qword_101934878;
      sub_100923668(v16 + 16, (std::stringbuf::string_type *)v135);
      CFAbsoluteTime v21 = v135;
      if (v136[3] < 0) {
        CFAbsoluteTime v21 = *(_BYTE **)v135;
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v21;
      LODWORD(v104) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v20,  2LL,  "already downloading fence, %{private}s",  &__p,  v104);
      uint64_t v23 = v22;
      if ((v136[3] & 0x80000000) != 0) {
        operator delete(*(void **)v135);
      }
      goto LABEL_42;
    }

    double v24 = vabdd_f64(Current, *(double *)(v16 + 128));
    double v25 = *(double *)(v16 + 112);
    if (v25 > 400.0
      || *(_BYTE *)(v16 + 204)
      || *(_DWORD *)(v16 + 196) == 2
      || *(void *)(v16 + 248) != *(void *)(v16 + 240)
      || (*(_BYTE *)(v16 + 176) & 0x20) != 0)
    {
      if (v25 < 7000.0 && v24 >= 3600.0)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        __int128 v32 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
        {
          sub_100923668(v16 + 16, (std::stringbuf::string_type *)buf);
          unint64_t v33 = buf;
          if (v145[3] < 0) {
            unint64_t v33 = *(_BYTE **)buf;
          }
          *(_DWORD *)v135 = 136380675;
          *(void *)&v135[4] = v33;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_INFO,  "Fence: request tile download, %{private}s",  v135,  0xCu);
          if ((v145[3] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866538);
          }
          uint64_t v72 = qword_101934878;
          sub_100923668(v16 + 16, (std::stringbuf::string_type *)v135);
          v73 = v135;
          if (v136[3] < 0) {
            v73 = *(_BYTE **)v135;
          }
          LODWORD(__p.__r_.__value_.__l.__data_) = 136380675;
          *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v73;
          LODWORD(v104) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v72,  1LL,  "Fence: request tile download, %{private}s",  &__p,  v104);
          v75 = v74;
          if ((v136[3] & 0x80000000) != 0) {
            operator delete(*(void **)v135);
          }
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v75);
          if (v75 != buf) {
            free(v75);
          }
        }

        id v34 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLWifiTilesManager");
        double v35 = *(double *)(v16 + 88);
        double v36 = *(double *)(v16 + 96);
        __int16 v120 = 0;
        char v121 = 0;
        int v122 = v133;
        char v123 = v134;
        unint64_t v124 = 0xBFF0000000000000LL;
        int v125 = 0;
        CFAbsoluteTime v126 = v15;
        __int16 v127 = 257;
        int v128 = v131;
        __int16 v129 = v132;
        [v34 requestTileDownloadForLat:&v120 lon:v35 details:v36];
        *(double *)(v16 + 128) = Current;
      }

      goto LABEL_83;
    }

    if (*(double *)(a1 + 296) <= 0.0 || v24 < 43200.0)
    {
      if ((*(_BYTE *)(a1 + 192) || *(_BYTE *)(a1 + 448)) && v24 < 345600.0)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        double v37 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          sub_100923668(v16 + 16, (std::stringbuf::string_type *)v135);
          __int16 v38 = v135;
          if (v136[3] < 0) {
            __int16 v38 = *(_BYTE **)v135;
          }
          int v39 = *(unsigned __int8 *)(a1 + 193);
          int v40 = *(unsigned __int8 *)(a1 + 192);
          int v41 = *(unsigned __int8 *)(a1 + 448);
          *(_DWORD *)buf = 136381955;
          *(void *)&uint8_t buf[4] = v38;
          *(_WORD *)&_BYTE buf[12] = 1026;
          *(_DWORD *)&buf[14] = v39;
          *(_WORD *)&buf[18] = 1026;
          *(_DWORD *)v145 = v40;
          *(_WORD *)&v145[4] = 1026;
          *(_DWORD *)v146 = v41;
          *(_WORD *)&v146[4] = 2050;
          *(double *)v147 = v24;
          *(_WORD *)&v147[8] = 2050;
          *(void *)&v147[10] = 0x4115180000000000LL;
          _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "fence, %{private}s, is fresh for reachability, %{public}d,%{public}d,%{public}d, age, %{public}.1lf, thresh, %{public}.1lf",  buf,  0x32u);
          if ((v136[3] & 0x80000000) != 0) {
            operator delete(*(void **)v135);
          }
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_83;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        uint64_t v42 = qword_101934878;
        sub_100923668(v16 + 16, &__p);
        p_p = &__p;
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        }
        int v44 = *(unsigned __int8 *)(a1 + 193);
        int v45 = *(unsigned __int8 *)(a1 + 192);
        int v46 = *(unsigned __int8 *)(a1 + 448);
        *(_DWORD *)v135 = 136381955;
        *(void *)&v135[4] = p_p;
        *(_WORD *)&v135[12] = 1026;
        *(_DWORD *)&v135[14] = v44;
        *(_WORD *)&v135[18] = 1026;
        *(_DWORD *)v136 = v45;
        *(_WORD *)&v136[4] = 1026;
        *(_DWORD *)v137 = v46;
        *(_WORD *)&v137[4] = 2050;
        *(double *)v138 = v24;
        *(_WORD *)&v138[8] = 2050;
        *(void *)&v138[10] = 0x4115180000000000LL;
        LODWORD(v104) = 50;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v42,  2LL,  "fence, %{private}s, is fresh for reachability, %{public}d,%{public}d,%{public}d, age, %{public}.1lf, thresh, %{public}.1lf",  v135,  v104);
        uint64_t v23 = v47;
        goto LABEL_42;
      }

      if (*(_BYTE *)(a1 + 193) && v24 < 172800.0)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        __int128 v48 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          sub_100923668(v16 + 16, (std::stringbuf::string_type *)v135);
          char v49 = v135;
          if (v136[3] < 0) {
            char v49 = *(_BYTE **)v135;
          }
          int v50 = *(unsigned __int8 *)(a1 + 193);
          int v51 = *(unsigned __int8 *)(a1 + 192);
          int v52 = *(unsigned __int8 *)(a1 + 448);
          *(_DWORD *)buf = 136381955;
          *(void *)&uint8_t buf[4] = v49;
          *(_WORD *)&_BYTE buf[12] = 1026;
          *(_DWORD *)&buf[14] = v50;
          *(_WORD *)&buf[18] = 1026;
          *(_DWORD *)v145 = v51;
          *(_WORD *)&v145[4] = 1026;
          *(_DWORD *)v146 = v52;
          *(_WORD *)&v146[4] = 2050;
          *(double *)v147 = v24;
          *(_WORD *)&v147[8] = 2050;
          *(void *)&v147[10] = 0x4105180000000000LL;
          _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEBUG,  "fence, %{private}s, is fresh for reachability, %{public}d,%{public}d,%{public}d, age, %{public}.1lf, thresh, %{public}.1lf",  buf,  0x32u);
          if ((v136[3] & 0x80000000) != 0) {
            operator delete(*(void **)v135);
          }
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_83;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        uint64_t v53 = qword_101934878;
        sub_100923668(v16 + 16, &__p);
        double v54 = &__p;
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          double v54 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        }
        int v55 = *(unsigned __int8 *)(a1 + 193);
        int v56 = *(unsigned __int8 *)(a1 + 192);
        int v57 = *(unsigned __int8 *)(a1 + 448);
        *(_DWORD *)v135 = 136381955;
        *(void *)&v135[4] = v54;
        *(_WORD *)&v135[12] = 1026;
        *(_DWORD *)&v135[14] = v55;
        *(_WORD *)&v135[18] = 1026;
        *(_DWORD *)v136 = v56;
        *(_WORD *)&v136[4] = 1026;
        *(_DWORD *)v137 = v57;
        *(_WORD *)&v137[4] = 2050;
        *(double *)v138 = v24;
        *(_WORD *)&v138[8] = 2050;
        *(void *)&v138[10] = 0x4105180000000000LL;
        LODWORD(v104) = 50;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v53,  2LL,  "fence, %{private}s, is fresh for reachability, %{public}d,%{public}d,%{public}d, age, %{public}.1lf, thresh, %{public}.1lf",  v135,  v104);
        uint64_t v23 = v58;
LABEL_42:
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v23);
LABEL_43:
        if (v23 != buf) {
          free(v23);
        }
        goto LABEL_83;
      }
    }

    else
    {
      double v26 = sub_100D2DBDC( v130,  *(double *)(a1 + 272),  *(double *)(a1 + 280),  *(double *)(v16 + 88),  *(double *)(v16 + 96),  0.0);
      double v27 = *(double *)(a1 + 296);
      if (v27 <= 400.0
        && !*(_BYTE *)(a1 + 388)
        && *(_DWORD *)(a1 + 380) != 2
        && *(void *)(a1 + 432) == *(void *)(a1 + 424)
        && (*(_BYTE *)(a1 + 360) & 0x20) == 0
        && v26 - *(double *)(v16 + 112) - v27 <= 0.0)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        uint64_t v28 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
        {
          sub_100923668(v108, (std::stringbuf::string_type *)buf);
          double v29 = buf;
          if (v145[3] < 0) {
            double v29 = *(_BYTE **)buf;
          }
          *(_DWORD *)v135 = 136380675;
          *(void *)&v135[4] = v29;
          _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_INFO,  "Fence: Urgent refresh, %{private}s",  v135,  0xCu);
          if ((v145[3] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866538);
          }
          uint64_t v83 = qword_101934878;
          sub_100923668(v108, (std::stringbuf::string_type *)v135);
          v84 = v135;
          if (v136[3] < 0) {
            v84 = *(_BYTE **)v135;
          }
          LODWORD(__p.__r_.__value_.__l.__data_) = 136380675;
          *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v84;
          LODWORD(v104) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v83,  1LL,  "Fence: Urgent refresh, %{private}s",  &__p,  v104);
          v86 = v85;
          if ((v136[3] & 0x80000000) != 0) {
            operator delete(*(void **)v135);
          }
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v86);
          if (v86 != buf) {
            free(v86);
          }
        }

        *(void *)(a1 + 296) = 0xBFF0000000000000LL;
        if (v24 < 345600.0) {
          int v30 = HIDWORD(v109) + 1;
        }
        else {
          int v30 = HIDWORD(v109) + 2;
        }
        unsigned int v31 = v109;
        if (v24 >= 172800.0) {
          unsigned int v31 = v109 + 1;
        }
        unint64_t v109 = __PAIR64__(v30, v31);
        int v107 = 1;
        goto LABEL_134;
      }
    }

    if (v24 < 172800.0) {
      int v59 = v109;
    }
    else {
      int v59 = v109 + 1;
    }
    if (v24 < 345600.0) {
      int v60 = HIDWORD(v109);
    }
    else {
      int v60 = HIDWORD(v109) + 1;
    }
    if (v24 >= 345600.0 && ((++HIDWORD(v109), *(_BYTE *)(a1 + 192)) || *(_BYTE *)(a1 + 193) || *(_BYTE *)(a1 + 448)))
    {
      int v107 = 0;
      LODWORD(v109) = v59;
    }

    else
    {
      if (v24 < 172800.0 || (LODWORD(v109) = v109 + 1, !*(_BYTE *)(a1 + 193)))
      {
        HIDWORD(v109) = v60;
        goto LABEL_83;
      }

      int v107 = 0;
      HIDWORD(v109) = v60;
    }

LABEL_191:
  uint64_t v90 = *(void *)(a1 + 168);
  if (v90 == v2)
  {
    int v91 = 0;
  }

  else
  {
    int v91 = 0;
    do
    {
      v91 += *(_DWORD *)(v90 + 320) >= 0;
      uint64_t v90 = *(void *)(v90 + 8);
    }

    while (v90 != v2);
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866538);
  }
  v92 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67241216;
    *(_DWORD *)&uint8_t buf[4] = v4;
    *(_WORD *)&buf[8] = 1026;
    *(_DWORD *)&buf[10] = v91;
    *(_WORD *)&buf[14] = 1026;
    *(_DWORD *)&buf[16] = v17;
    *(_WORD *)v145 = 1026;
    *(_DWORD *)&v145[2] = HIDWORD(v109);
    *(_WORD *)v146 = 1026;
    *(_DWORD *)&v146[2] = v109;
    _os_log_impl( (void *)&_mh_execute_header,  v92,  OS_LOG_TYPE_DEBUG,  "checkDownloadState, currentNumOfQueries, %{public}d, newNumOfQueries, %{public}d, numOfStartedQueries, %{public}d, nSmall, %{public}d, nLarge, %{public}d",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    *(_DWORD *)v135 = 67241216;
    *(_DWORD *)&v135[4] = v4;
    *(_WORD *)&v135[8] = 1026;
    *(_DWORD *)&v135[10] = v91;
    *(_WORD *)&v135[14] = 1026;
    *(_DWORD *)&v135[16] = v17;
    *(_WORD *)v136 = 1026;
    *(_DWORD *)&v136[2] = HIDWORD(v109);
    *(_WORD *)v137 = 1026;
    *(_DWORD *)&v137[2] = v109;
    LODWORD(v104) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "checkDownloadState, currentNumOfQueries, %{public}d, newNumOfQueries, %{public}d, numOfStartedQueries, %{public}d, nSmall, %{public}d, nLarge, %{public}d",  v135,  v104);
    uint64_t v7 = (char *)v101;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v101);
    goto LABEL_217;
  }

                uint64_t result = 0LL;
                *a2 = -9999.0;
                *a3 = 9999.0;
                return result;
              }

              *a2 = -9999.0;
              *a3 = 9999.0;
              if ((v76 & 1) != 0) {
                return 1LL;
              }
              double v37 = v36
                  + (((double)v48 - v40) * ((v38 - (double)v39) * v78)
                   + ((double)(int)v46 - v38) * v80 * ((double)v48 - v40)
                   + ((double)(int)v46 - v38) * v79 * (v40 - (double)v41)
                   + (v38 - (double)v39) * v77 * (v40 - (double)v41))
                  / (((double)v48 - (double)v41)
              break;
            default:
              if (qword_101934880 != -1) {
                dispatch_once(&qword_101934880, &stru_10187F990);
              }
              v85 = (os_log_s *)qword_101934888;
              if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_INFO,  "#Warning,DEM,Reached unexpected case",  buf,  2u);
              }

              if (!sub_1002921D0(115, 2)) {
                goto LABEL_191;
              }
              bzero(buf, 0x65CuLL);
              if (qword_101934880 != -1) {
                dispatch_once(&qword_101934880, &stru_10187F990);
              }
              *(_WORD *)uint64_t v90 = 0;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,DEM,Reached unexpected case",  v90,  2,  *(void *)v90);
              goto LABEL_222;
          }

          goto LABEL_67;
        }

        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10187F990);
        }
        v71 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 134349056;
          v92 = *(double *)&v43;
          _os_log_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_INFO,  "#Warning,DEM,invalidIndex,%{public}zu",  buf,  0xCu);
        }

        uint64_t result = sub_1002921D0(115, 2);
        if (!result) {
          return result;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934880 == -1) {
          goto LABEL_162;
        }
      }

      else if (v48 == v23)
      {
        std::stringbuf::string_type v43 = v42 + v46;
        if (v45 > v42 + v46)
        {
          int v50 = *(unsigned __int8 *)(v44 + v43);
          int v51 = v50;
          int v52 = v47;
          goto LABEL_141;
        }

        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10187F990);
        }
        v81 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 134349056;
          v92 = *(double *)&v43;
          _os_log_impl( (void *)&_mh_execute_header,  v81,  OS_LOG_TYPE_INFO,  "#Warning,DEM,invalidIndex,%{public}zu",  buf,  0xCu);
        }

        uint64_t result = sub_1002921D0(115, 2);
        if (!result) {
          return result;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934880 == -1)
        {
LABEL_162:
          *(_DWORD *)uint64_t v90 = 134349056;
          *(void *)&v90[4] = v43;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,DEM,invalidIndex,%{public}zu",  v90,  12,  *(_OWORD *)v90,  *(void *)&v90[16]);
LABEL_124:
          v70 = (uint8_t *)v10;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLDigitalElevationModel::getAltitude(CLDEMTile &, double, double, double &, double &)",  "%s\n",  v10);
          if (v70 != buf) {
            free(v70);
          }
          return 0LL;
        }
      }

      else
      {
        std::stringbuf::string_type v43 = v39 + (uint64_t)(int)(v48 * v30);
        if (v45 > v43)
        {
          *(void *)&uint64_t v72 = v42 + (int)v46;
          if (v45 <= *(void *)&v72)
          {
            if (qword_101934880 != -1) {
              dispatch_once(&qword_101934880, &stru_10187F990);
            }
            v87 = (os_log_s *)qword_101934888;
            if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 134349056;
              v92 = v72;
              _os_log_impl( (void *)&_mh_execute_header,  v87,  OS_LOG_TYPE_INFO,  "#Warning,DEM,invalidIndex,%{public}zu",  buf,  0xCu);
            }

            uint64_t result = sub_1002921D0(115, 2);
            if (result)
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934880 != -1) {
                dispatch_once(&qword_101934880, &stru_10187F990);
              }
              *(_DWORD *)uint64_t v90 = 134349056;
              *(double *)&v90[4] = v72;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,DEM,invalidIndex,%{public}zu",  v90,  12,  *(_OWORD *)v90,  *(void *)&v90[16]);
              goto LABEL_124;
            }

            return result;
          }

          v73 = (int)(v48 * v30) + (uint64_t)(int)v46;
          if (v45 <= v73)
          {
            if (qword_101934880 != -1) {
              dispatch_once(&qword_101934880, &stru_10187F990);
            }
            v88 = (os_log_s *)qword_101934888;
            if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)buf = 134349056;
              v92 = *(double *)&v73;
              _os_log_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_INFO,  "#Warning,DEM,invalidIndex,%{public}zu",  buf,  0xCu);
            }

            uint64_t result = sub_1002921D0(115, 2);
            if (result)
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934880 != -1) {
                dispatch_once(&qword_101934880, &stru_10187F990);
              }
              *(_DWORD *)uint64_t v90 = 134349056;
              *(void *)&v90[4] = v73;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,DEM,invalidIndex,%{public}zu",  v90,  12,  *(_OWORD *)v90,  *(void *)&v90[16]);
              goto LABEL_124;
            }

            return result;
          }

          int v52 = *(unsigned __int8 *)(v44 + v43);
          int v51 = *(unsigned __int8 *)(v44 + *(void *)&v72);
          int v50 = *(unsigned __int8 *)(v44 + v73);
          goto LABEL_141;
        }

        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10187F990);
        }
        v82 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 134349056;
          v92 = *(double *)&v43;
          _os_log_impl( (void *)&_mh_execute_header,  v82,  OS_LOG_TYPE_INFO,  "#Warning,DEM,invalidIndex,%{public}zu",  buf,  0xCu);
        }

        uint64_t result = sub_1002921D0(115, 2);
        if (!result) {
          return result;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934880 == -1) {
          goto LABEL_162;
        }
      }
    }

    else
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10187F990);
      }
      double v69 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 134349056;
        v92 = *(double *)&v43;
        _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_INFO,  "#Warning,DEM,invalidIndex,%{public}zu",  buf,  0xCu);
      }

      uint64_t result = sub_1002921D0(115, 2);
      if (!result) {
        return result;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934880 == -1) {
        goto LABEL_162;
      }
    }

    dispatch_once(&qword_101934880, &stru_10187F990);
    goto LABEL_162;
  }

  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10187F990);
  }
  uint64_t v8 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "#Warning,DEM,cellsize == 0", buf, 2u);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10187F990);
    }
    *(_WORD *)uint64_t v90 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,DEM,cellsize == 0",  v90,  2,  *(_OWORD *)v90,  *(void *)&v90[16]);
    goto LABEL_124;
  }

  return result;
}

  uint64_t result = *(float *)(a2 + 72);
  v5 |= 0x100uLL;
  *uint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 72) = result;
  int v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x10000) == 0)
  {
LABEL_86:
    if ((v7 & 4) == 0) {
      goto LABEL_87;
    }
    goto LABEL_193;
  }

  PB::TextFormatter::format(this, "shouldEnableHighSensBecauseOfDistanceToRoadCondition", *(_BYTE *)(a1 + 353));
  uint64_t v7 = *v5;
  if ((*v5 & 0x8000000000000LL) == 0)
  {
LABEL_90:
    if ((v7 & 0x10000000000000LL) == 0) {
      goto LABEL_91;
    }
    goto LABEL_193;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x385u);
  unint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000) == 0)
  {
LABEL_86:
    if ((v6 & 4) == 0) {
      goto LABEL_87;
    }
    goto LABEL_193;
  }

            PB::Reader::recallMark(this, v170);
          }

          else
          {
            v130 = *(char **)(a1 + 16);
            __int16 v129 = *(void *)(a1 + 24);
            if ((unint64_t)v130 >= v129)
            {
              v137 = (char *)*v10;
              v138 = (v130 - (_BYTE *)*v10) >> 2;
              __int16 v139 = v138 + 1;
              if ((unint64_t)(v138 + 1) >> 62) {
LABEL_285:
              }
                sub_100007008();
              int v140 = v129 - (void)v137;
              if (v140 >> 1 > v139) {
                __int16 v139 = v140 >> 1;
              }
              else {
                __int16 v141 = v139;
              }
              if (v141)
              {
                int v142 = (char *)sub_10000956C((uint64_t)v11, v141);
                v137 = *(char **)(a1 + 8);
                v130 = *(char **)(a1 + 16);
              }

              else
              {
                int v142 = 0LL;
              }

              v156 = &v142[4 * v138];
              *(_DWORD *)v156 = 0;
              CFAbsoluteTime v116 = v156 + 4;
              while (v130 != v137)
              {
                v157 = *((_DWORD *)v130 - 1);
                v130 -= 4;
                *((_DWORD *)v156 - 1) = v157;
                v156 -= 4;
              }

              *(void *)(a1 + 8) = v156;
              *(void *)(a1 + 16) = v116;
              *(void *)(a1 + 24) = &v142[4 * v141];
              if (v137) {
                operator delete(v137);
              }
            }

            else
            {
              *(_DWORD *)v130 = 0;
              CFAbsoluteTime v116 = v130 + 4;
            }

            *(void *)(a1 + 16) = v116;
            v158 = *((void *)this + 1);
            v159 = *((void *)this + 2);
            v160 = *(void *)this;
            v161 = 0;
            v162 = 0;
            if (v158 > 0xFFFFFFFFFFFFFFF5LL || v158 + 10 > v159)
            {
              v153 = 0LL;
              if (v159 <= v158) {
                v159 = *((void *)this + 1);
              }
              while (v159 != v158)
              {
                v164 = v158 + 1;
                v165 = *(_BYTE *)(v160 + v158);
                *((void *)this + 1) = v164;
                v153 |= (unint64_t)(v165 & 0x7F) << v161;
                if ((v165 & 0x80) == 0)
                {
LABEL_271:
                  if (*((_BYTE *)this + 24)) {
                    LODWORD(v153) = 0;
                  }
                  goto LABEL_273;
                }

                v161 += 7;
                v158 = v164;
                char v47 = v162++ > 8;
                if (v47)
                {
LABEL_269:
                  LODWORD(v153) = 0;
                  goto LABEL_273;
                }
              }

void sub_1009D8A04(uint64_t *a1, uint64_t *a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866538);
  }
  int v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    unint64_t v5 = 0xEF7BDEF7BDEF7BDFLL * ((a2[1] - *a2) >> 3);
    *(_DWORD *)buf = 134349056;
    __int128 v32 = (void *)v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Fence: Removing %{public}ld fences for download",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    unint64_t v18 = 0xEF7BDEF7BDEF7BDFLL * ((a2[1] - *a2) >> 3);
    int v25 = 134349056;
    double v26 = (void *)v18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Removing %{public}ld fences for download",  &v25,  12);
    uint64_t v20 = (uint8_t *)v19;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::removeFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v19);
    if (v20 != buf) {
      free(v20);
    }
  }

  uint64_t v24 = a1[22];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  if (*a2 != v7)
  {
    do
    {
      if (*(void *)(v6 + 232) == *(void *)(v6 + 224))
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        uint64_t v8 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          double v9 = (void *)(v6 + 48);
          uint64_t v10 = v6;
          uint64_t v11 = (void *)(v6 + 24);
          *(_DWORD *)buf = 136381187;
          __int128 v32 = v9;
          __int16 v33 = 2081;
          uint64_t v34 = v10;
          __int16 v35 = 2081;
          double v36 = v11;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Removing fence from download, [%{private}s]/%{private}s/%{private}s",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866538);
          }
          int v12 = (void *)(v6 + 48);
          uint64_t v13 = v6;
          int v14 = (void *)(v6 + 24);
          int v25 = 136381187;
          double v26 = v12;
          __int16 v27 = 2081;
          uint64_t v28 = v13;
          __int16 v29 = 2081;
          int v30 = v14;
          LODWORD(v23) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Removing fence from download, [%{private}s]/%{private}s/%{private}s",  &v25,  v23);
          uint64_t v16 = (uint8_t *)v15;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::removeFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v15);
          if (v16 != buf) {
            free(v16);
          }
        }

        sub_1006FE6EC(a1 + 20, v6, v6 + 24);
      }

      v6 += 248LL;
    }

    while (v6 != v7);
  }

  if (v24 && !a1[22] && a1[19])
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    int v17 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "Fence: last fence removed, disabled download timer",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866538);
      }
      LOWORD(v25) = 0;
      LODWORD(v23) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: last fence removed, disabled download timer",  &v25,  v23);
      uint64_t v22 = (uint8_t *)v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::removeFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v21);
      if (v22 != buf) {
        free(v22);
      }
    }

    sub_1006B6014(a1[19], 1.79769313e308);
  }

  sub_1009D7068((uint64_t)a1);
}

void sub_1009D8F68(uint64_t a1, uint64_t a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866538);
  }
  int v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    sub_100923668(a2, __p);
    unint64_t v5 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
       ? __p
       : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Fence: refreshDataForFence, %{private}s",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    uint64_t v15 = qword_101934878;
    sub_100923668(a2, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v20 = 136380675;
    CFAbsoluteTime v21 = p_buf;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v15,  1LL,  "Fence: refreshDataForFence, %{private}s",  &v20,  12);
    unint64_t v18 = v17;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::refreshDataForFence(const CLFenceManager_Type::Fence &)",  "%s\n",  (const char *)v18);
    if (v18 != __p) {
      free(v18);
    }
  }

  BOOL v7 = *(double *)(a2 + 96) > 400.0 || *(_BYTE *)(a2 + 188) != 0 || *(_DWORD *)(a2 + 180) == 2;
  if (!v7 && *(void *)(a2 + 232) == *(void *)(a2 + 224) && (*(_BYTE *)(a2 + 160) & 0x20) == 0)
  {
    std::string::operator=((std::string *)(a1 + 200), (const std::string *)a2);
    std::string::operator=((std::string *)(a1 + 224), (const std::string *)(a2 + 24));
    std::string::operator=((std::string *)(a1 + 248), (const std::string *)(a2 + 48));
    __int128 v8 = *(_OWORD *)(a2 + 72);
    __int128 v9 = *(_OWORD *)(a2 + 88);
    __int128 v10 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 320) = v10;
    *(_OWORD *)(a1 + 272) = v8;
    *(_OWORD *)(a1 + 288) = v9;
    __int128 v11 = *(_OWORD *)(a2 + 136);
    __int128 v12 = *(_OWORD *)(a2 + 152);
    __int128 v13 = *(_OWORD *)(a2 + 168);
    *(void *)(a1 + 381) = *(void *)(a2 + 181);
    *(_OWORD *)(a1 + 352) = v12;
    *(_OWORD *)(a1 + 368) = v13;
    *(_OWORD *)(a1 + 336) = v11;
    std::string::operator=((std::string *)(a1 + 392), (const std::string *)(a2 + 192));
    int v14 = *(void **)(a1 + 416);
    *(void *)(a1 + 416) = *(id *)(a2 + 216);

    if (a1 + 200 != a2) {
      sub_10009B244( (char *)(a1 + 424),  *(char **)(a2 + 224),  *(void *)(a2 + 232),  (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
    }
    sub_1009D7068(a1);
  }

void sub_1009D9268(void *a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866538);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = a1[22];
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    uint64_t v11 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "Fence: Removing all fences for download, fences, %{public}lu",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    uint64_t v5 = a1[22];
    int v8 = 134349056;
    uint64_t v9 = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Removing all fences for download, fences, %{public}lu",  &v8,  12);
    BOOL v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::removeAllFencesForDataDownload()",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  sub_1009DC9D8(a1 + 20);
  uint64_t v4 = a1[19];
  if (v4) {
    sub_1006B6014(v4, 1.79769313e308);
  }
  sub_1009D7068((uint64_t)a1);
}

uint64_t sub_1009D943C(uint64_t a1, uint64_t a2)
{
  int v17 = 0xFFFF;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v20 = xmmword_1012EA5D0;
  __int128 v21 = _Q0;
  __int128 v22 = _Q0;
  unint64_t v23 = 0xBFF0000000000000LL;
  int v24 = 0;
  uint64_t v27 = 0LL;
  unint64_t v25 = 0xBFF0000000000000LL;
  uint64_t v26 = 0LL;
  unint64_t v29 = 0xBFF0000000000000LL;
  int v28 = 0;
  int v30 = 0x7FFFFFFF;
  uint64_t v32 = 0LL;
  uint64_t v33 = 0LL;
  uint64_t v31 = 0LL;
  char v34 = 0;
  __int128 v18 = *(_OWORD *)(a2 + 72);
  double v19 = *(double *)(a2 + 96) + 200.0;
  uint64_t v16 = 0LL;
  int v9 = sub_100923FF0(a2);
  __int128 v10 = sub_10000956C((uint64_t)&v16, 1uLL);
  _DWORD *v10 = v9;
  std::stringbuf::string_type __p = v10;
  uint64_t v15 = v10 + 1;
  uint64_t v16 = &v10[v11];
  uint64_t v15 = v10 + 1;
  id v12 = objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLNetworkLocationProvider"),  "syncgetQueryNearbys:forFenceKeys:",  &v17,  &__p);
  if (__p)
  {
    uint64_t v15 = __p;
    operator delete(__p);
  }

  return (uint64_t)v12;
}

void sub_1009D9588( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009D95A8(uint64_t a1, int a2, int a3, int a4, int a5)
{
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v9 = a1 + 160;
  uint64_t v10 = *(void *)(a1 + 168);
  if (v10 == a1 + 160)
  {
LABEL_5:
    int v12 = 0;
    int v13 = 0;
  }

  else
  {
    double v11 = Current;
    while (*(_DWORD *)(v10 + 320) != a2)
    {
      uint64_t v10 = *(void *)(v10 + 8);
      if (v10 == v9) {
        goto LABEL_5;
      }
    }

    *(_DWORD *)(v10 + 320) = -1;
    char v49 = 0LL;
    uint64_t v50 = 0LL;
    __int128 v48 = (uint64_t *)&v49;
    int v14 = *(void **)(v10 + 264);
    if (v14 != (void *)(v10 + 272))
    {
      do
      {
        sub_100922994((char *)&v78);
        std::string::operator=(&v78, (const std::string *)(v14 + 4));
        uint64_t v15 = v14 + 7;
        std::string::operator=(&v79, (const std::string *)(v14 + 7));
        std::string::operator=(&v80, (const std::string *)(v14 + 10));
        __int128 v16 = *(_OWORD *)(v14 + 23);
        __int128 v85 = *(_OWORD *)(v14 + 21);
        __int128 v86 = v16;
        *(_OWORD *)v87 = *(_OWORD *)(v14 + 25);
        *(void *)&v87[13] = *(void *)((char *)v14 + 213);
        __int128 v17 = *(_OWORD *)(v14 + 15);
        __int128 v81 = *(_OWORD *)(v14 + 13);
        __int128 v82 = v17;
        __int128 v18 = *(_OWORD *)(v14 + 19);
        __int128 v83 = *(_OWORD *)(v14 + 17);
        __int128 v84 = v18;
        std::string::operator=(&v88, (const std::string *)(v14 + 28));
        id v19 = v89;
        id v89 = (id)v14[31];

        if (&v78 != (std::string *)(v14 + 4)) {
          sub_10009B244((char *)__p, (char *)v14[32], v14[33], (uint64_t)(v14[33] - v14[32]) >> 4);
        }
        BOOL v91 = *(double *)(v10 + 128) < 0.0;
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        __int128 v20 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          int v21 = sub_100923FF0((uint64_t)(v14 + 4));
          __int128 v22 = v14 + 7;
          int v23 = *((_DWORD *)v14 + 54);
          *(_DWORD *)std::stringbuf::string_type buf = 67241731;
          int v65 = a2;
          __int16 v66 = 1026;
          int v67 = a3;
          __int16 v68 = 1026;
          int v69 = a4;
          __int16 v70 = 1026;
          int v71 = a5;
          __int16 v72 = 1026;
          int v73 = v21;
          __int16 v74 = 1026;
          int v75 = v23;
          __int16 v76 = 2081;
          v77 = v22;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "Fence: networkQueryDone,tag,%{public}d,isSuccess,%{public}d,numOfAps,%{public}d,numOfCells,%{public}d,key,%{ public}d,%{public}d,%{private}s",  buf,  0x30u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866538);
          }
          uint64_t v27 = qword_101934878;
          int v28 = sub_100923FF0((uint64_t)(v14 + 4));
          int v29 = *((_DWORD *)v14 + 54);
          v51[0] = 67241731;
          v51[1] = a2;
          __int16 v52 = 1026;
          int v53 = a3;
          __int16 v54 = 1026;
          int v55 = a4;
          __int16 v56 = 1026;
          int v57 = a5;
          __int16 v58 = 1026;
          int v59 = v28;
          __int16 v60 = 1026;
          int v61 = v29;
          __int16 v62 = 2081;
          v63 = v15;
          LODWORD(v45) = 48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v27,  2LL,  "Fence: networkQueryDone,tag,%{public}d,isSuccess,%{public}d,numOfAps,%{public}d,numOfCells,%{public}d,key,%{ public}d,%{public}d,%{private}s",  v51,  v45);
          uint64_t v31 = (uint8_t *)v30;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::networkQueryDone(int, BOOL, int, int)",  "%s\n",  v30);
          if (v31 != buf) {
            free(v31);
          }
        }

        if (a3)
        {
          *(double *)(v10 + 128) = v11;
          *((double *)&v83 + 1) = v11;
          if (v11 < 0.0) {
            *(void *)(v10 + 128) = 0LL;
          }
          sub_100700BFC(&v48, (unsigned __int8 *)&v78, (__int128 *)&v78);
          *(_DWORD *)std::stringbuf::string_type buf = 0;
          (*(void (**)(uint64_t, uint8_t *, std::string *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &v78,  0LL,  0xFFFFFFFFLL,  0LL);
        }

        else
        {
          *(_DWORD *)std::stringbuf::string_type buf = 1;
          (*(void (**)(uint64_t, uint8_t *, std::string *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &v78,  0LL,  0xFFFFFFFFLL,  0LL);
        }

        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }

        int v24 = (void *)v14[1];
        if (v24)
        {
          do
          {
            unint64_t v25 = v24;
            int v24 = (void *)*v24;
          }

          while (v24);
        }

        else
        {
          do
          {
            unint64_t v25 = (void *)v14[2];
            BOOL v26 = *v25 == (void)v14;
            int v14 = v25;
          }

          while (!v26);
        }

        int v14 = v25;
      }

      while (v25 != (void *)(v10 + 272));
      if (v50)
      {
        uint64_t v32 = v48;
        if (v48 == (uint64_t *)&v49)
        {
          double v36 = (unsigned __int8 *)&v49;
          uint64_t v33 = (uint64_t *)(v10 + 264);
        }

        else
        {
          uint64_t v33 = (uint64_t *)(v10 + 264);
          do
          {
            sub_100700B2C((uint64_t **)(v10 + 264), (unsigned __int8 *)v32 + 32);
            char v34 = (uint64_t *)v32[1];
            if (v34)
            {
              do
              {
                __int16 v35 = v34;
                char v34 = (uint64_t *)*v34;
              }

              while (v34);
            }

            else
            {
              do
              {
                __int16 v35 = (uint64_t *)v32[2];
                BOOL v26 = *v35 == (void)v32;
                uint64_t v32 = v35;
              }

              while (!v26);
            }

            uint64_t v32 = v35;
          }

          while (v35 != (uint64_t *)&v49);
          double v36 = (unsigned __int8 *)v48;
        }

        sub_1007007E4(v33, v36, (unsigned __int8 *)&v49);
      }
    }

    sub_1007005F0((uint64_t)&v48, v49);
    double v37 = 0.0;
    if (!a3) {
      double v37 = v11;
    }
    int v12 = a3 ^ 1;
    *(double *)(a1 + 184) = v37;
    int v13 = 1;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866538);
  }
  __int16 v38 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v39 = *(void *)(a1 + 168);
    if (v39 == v9)
    {
      int v40 = 0;
    }

    else
    {
      int v40 = 0;
      do
      {
        v40 += *(_DWORD *)(v39 + 320) >= 0;
        uint64_t v39 = *(void *)(v39 + 8);
      }

      while (v39 != v9);
    }

    *(_DWORD *)std::stringbuf::string_type buf = 67240704;
    int v65 = v40;
    __int16 v66 = 1026;
    int v67 = v12;
    __int16 v68 = 1026;
    int v69 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "networkQueryDone, newNumOfQueries, %{public}u, isAvoidUpcomingFenceDownloads, %{public}d, doesTagBelongToFence, %{public}d",  buf,  0x14u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    uint64_t v41 = *(void *)(a1 + 168);
    if (v41 == v9)
    {
      int v42 = 0;
    }

    else
    {
      int v42 = 0;
      do
      {
        v42 += *(_DWORD *)(v41 + 320) >= 0;
        uint64_t v41 = *(void *)(v41 + 8);
      }

      while (v41 != v9);
    }

    LODWORD(v78.__r_.__value_.__l.__data_) = 67240704;
    HIDWORD(v78.__r_.__value_.__r.__words[0]) = v42;
    LOWORD(v78.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&v78.__r_.__value_.__r.__words[1] + 2) = v12;
    HIWORD(v78.__r_.__value_.__r.__words[1]) = 1026;
    LODWORD(v78.__r_.__value_.__r.__words[2]) = v13;
    LODWORD(v45) = 20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "networkQueryDone, newNumOfQueries, %{public}u, isAvoidUpcomingFenceDownloads, %{public}d, doesTagBelongToFence, %{public}d",  &v78,  v45);
    int v44 = (uint8_t *)v43;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::networkQueryDone(int, BOOL, int, int)",  "%s\n",  v43);
    if (v44 != buf) {
      free(v44);
    }
  }

  sub_1009D7068(a1);
}

void sub_1009D9D1C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, void *a23)
{
}

void sub_1009D9D78(uint64_t a1, uint64_t a2, int *a3, int *a4)
{
  int v4 = *a3;
  if (*a3 == 3)
  {
    int v5 = 0;
    int v6 = 0;
    goto LABEL_5;
  }

  if (v4 == 2)
  {
    int v6 = a4[1];
    int v5 = a4[2];
LABEL_5:
    sub_1009D95A8(a1, *a4, v4 != 3, v6, v5);
    return;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866538);
  }
  int v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = *a3;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v15 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#Warning Got unknown notification %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    int v10 = *a3;
    v13[0] = 67240192;
    v13[1] = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Got unknown notification %{public}d",  v13,  8);
    int v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Notifica tion &, const CLNetworkLocationProvider_Type::NotificationData &)",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

void sub_1009D9F8C(uint64_t a1, uint64_t a2)
{
  if (a2 && *(void *)(a1 + 152) == a2)
  {
    unsigned __int8 v6 = atomic_load((unsigned __int8 *)&qword_101999B20);
    if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_101999B20))
    {
      qword_101999B18 = CFAbsoluteTimeGetCurrent();
      __cxa_guard_release(&qword_101999B20);
    }

    double Current = CFAbsoluteTimeGetCurrent();
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    int v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134283521;
      double v14 = Current - *(double *)&qword_101999B18;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Fence: onFenceDownloadTimer, since last, %{private}.1lf",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866538);
      }
      int v11 = 134283521;
      double v12 = Current - *(double *)&qword_101999B18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence: onFenceDownloadTimer, since last, %{private}.1lf",  &v11,  12);
      int v10 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::onFenceDownloadTimer(CLPersistentTimer *)",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }

    sub_1009DA304(a1);
    sub_1009D7068(a1);
    qword_101999B18 = *(void *)&Current;
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    uint64_t v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Fence: ignore onFenceDownloadTimer, shutdown?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866538);
      }
      LOWORD(v11) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: ignore onFenceDownloadTimer, shutdown?",  &v11,  2);
      int v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::onFenceDownloadTimer(CLPersistentTimer *)",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

void sub_1009DA2E4(_Unwind_Exception *a1)
{
}

id sub_1009DA304(uint64_t a1)
{
  id result = (id)sub_1002958AC();
  if (*(void *)(a1 + 152))
  {
    int v3 = (int)result;
    double v4 = CFAbsoluteTimeGetCurrent() + 43200.0;
    if (v3 != 1) {
      double v4 = 1.79769313e308;
    }
    return sub_1006B6014(*(void *)(a1 + 152), v4);
  }

  return result;
}

void sub_1009DA360(uint64_t a1, uint64_t a2, int *a3, int *a4)
{
  if (*a3 != 9)
  {
    if (*a3 != 6) {
      return;
    }
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    BOOL v7 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *a3;
      int v9 = *a4;
      int v10 = a4[1];
      *(_DWORD *)std::stringbuf::string_type buf = 67175169;
      int v30 = v8;
      __int16 v31 = 1025;
      int v32 = v9;
      __int16 v33 = 1025;
      int v34 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Fence: kNotificationReachability, notification, %{private}d, reachability, from, %{private}d, to, %{private}d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866538);
      }
      int v16 = *a3;
      int v17 = *a4;
      int v18 = a4[1];
      v24[0] = 67175169;
      v24[1] = v16;
      __int16 v25 = 1025;
      int v26 = v17;
      __int16 v27 = 1025;
      int v28 = v18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: kNotificationReachability, notification, %{private}d, reachability, from, %{private}d, to, %{private}d",  v24,  20);
      __int128 v20 = (uint8_t *)v19;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDa emonStatus_Type::NotificationData &)",  "%s\n",  v19);
      if (v20 != buf) {
        free(v20);
      }
    }

    int v11 = a4[1];
    if (v11 == 2)
    {
      if (*(_BYTE *)(a1 + 193)) {
        return;
      }
      *(_WORD *)(a1 + 192) = 256;
    }

    else
    {
      if (v11 != 1)
      {
        if (v11)
        {
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866538);
          }
          int v13 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)std::stringbuf::string_type buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "Unhandled reachability notification",  buf,  2u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866538);
            }
            LOWORD(v24[0]) = 0;
            LODWORD(v23) = 2;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  16LL,  "Unhandled reachability notification",  v24,  v23);
            int v15 = (uint8_t *)v14;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceDataDownloadManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, cons t CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v14);
            if (v15 != buf) {
              free(v15);
            }
          }
        }

        else
        {
          *(_WORD *)(a1 + 192) = 0;
        }

        return;
      }

      if (*(_BYTE *)(a1 + 192)) {
        return;
      }
      *(_WORD *)(a1 + 192) = 1;
      if (*a4 != 1000) {
        return;
      }
    }

    sub_1009D7068(a1);
    return;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866538);
  }
  double v12 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Fence: kNotificationMigration", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866538);
    }
    LOWORD(v24[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: kNotificationMigration",  v24,  2);
    __int128 v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaem onStatus_Type::NotificationData &)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  sub_1009D7068(a1);
  *(_DWORD *)std::stringbuf::string_type buf = 2;
  (*(void (**)(uint64_t, uint8_t *, void, uint64_t))(*(void *)a1 + 144LL))(a1, buf, 0LL, 0xFFFFFFFFLL);
}

void sub_1009DA844(uint64_t a1, uint64_t a2, _DWORD *a3, unsigned __int8 *a4)
{
  if (*a3 == 5)
  {
    sub_1004F2598();
    if (sub_1001B9A1C())
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866538);
      }
      unsigned __int8 v6 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        int v7 = *(unsigned __int8 *)(a1 + 448);
        int v8 = *a4;
        *(_DWORD *)std::stringbuf::string_type buf = 67240448;
        int v18 = v7;
        __int16 v19 = 1026;
        int v20 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Fence: kNotificationCompanionConnectionUpdate, isNearby, from, %{public}d, to, %{public}d",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866538);
        }
        int v10 = *(unsigned __int8 *)(a1 + 448);
        int v11 = *a4;
        v14[0] = 67240448;
        v14[1] = v10;
        __int16 v15 = 1026;
        int v16 = v11;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: kNotificationCompanionConnectionUpdate, isNearby, from, %{public}d, to, %{public}d",  v14,  14);
        int v13 = (uint8_t *)v12;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceDataDownloadManager::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v12);
        if (v13 != buf) {
          free(v13);
        }
      }

      int v9 = *a4;
      *(_BYTE *)(a1 + 448) = v9;
      if (v9) {
        sub_1009D7068(a1);
      }
    }
  }

uint64_t sub_1009DAA44@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  int v10 = operator new(0x30uLL);
  uint64_t result = sub_1009DAAC8((uint64_t)v10, a1, a4, a2, a3);
  void *v10 = off_1018664A0;
  *a5 = v10;
  return result;
}

void sub_1009DAAB4(_Unwind_Exception *a1)
{
}

uint64_t sub_1009DAAC8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = &off_1018666B8;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = a5;
  [a3 silo];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 80LL))(a2);
  __int16 v19 = &OBJC_PROTOCOL___CLIntersiloServiceProtocol;
  objc_msgSend( +[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface"),  "extendSelectorInfoWithProtocol:bases:",  &OBJC_PROTOCOL___CLNotifierServiceProtocol,  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v19, 1));
  int v18 = &OBJC_PROTOCOL___CLIntersiloClientProtocol;
  objc_msgSend( +[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface"),  "extendSelectorInfoWithProtocol:bases:",  &OBJC_PROTOCOL___CLNotifierServiceClientProtocol,  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v18, 1));
  id v11 = [a3 silo];
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C(__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 24);
  }

  if (v17 >= 0) {
    double v12 = __p;
  }
  else {
    double v12 = (void **)__p[0];
  }
  id v13 = +[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:]( &OBJC_CLASS___CLIntersiloProxy,  "proxyForRecipientObject:inSilo:recipientName:",  v10,  v11,  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v12, __p[0], __p[1], v17));
  *(void *)(a1 + 16) = v13;
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    id v13 = *(id *)(a1 + 16);
  }

  id v14 = v13;
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a3, "silo"));
  return a1;
}

void sub_1009DACC4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009DACE8(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101866518);
      }
      uint64_t v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        id v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        int v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101866518);
        }
        double v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        uint64_t v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::Notifi cationData, char, char>::removeClient(int) [Notification_T = CLFenceDataDownloadManager_Type::Notification, No tificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_1009DAF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_10198EB50);
}

BOOL sub_1009DAF70(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v40 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }

      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          int v28 = (uint64_t *)v24;
        }
        else {
          int v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }

      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        *(void *)int v42 = v25;
        uint64_t v33 = *(void *)(v25 + 56);
        char v34 = *a4;
        *(void *)std::stringbuf::string_type buf = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v25 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v34;
        sub_100922994(buf);
        char v58 = 0;
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          __int16 v35 = sub_1009DD668((uint64_t)buf);
          sub_1009DCEEC((_BYTE *)a1, (uint64_t)&v40, (uint64_t)v42, v35);
        }

        if (v56)
        {
          int v57 = v56;
          operator delete(v56);
        }

        if (v54 < 0) {
          operator delete(v53);
        }
        if (v52 < 0) {
          operator delete(__p);
        }
        if (v50 < 0) {
          operator delete(v49);
        }
        if (v48 < 0) {
          operator delete(*(void **)buf);
        }
        if (v33) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        *(void *)int v42 = a1 + 64;
        char v29 = byte_10198EB51;
        HIDWORD(v39) = v16;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 80) = v29;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        int v30 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v30 + 8);
        char v31 = *a4;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        int v32 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::stringbuf::string_type buf = &v41;
        *((_BYTE *)sub_1004EF3D4(v32 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v31;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v20 == v18)
      {
        *(_DWORD *)std::stringbuf::string_type buf = *a3;
        sub_10004A8FC((uint64_t **)(v40 + 40), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101866518);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v46 = 1026;
    int v47 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101866518);
    }
    double v36 = (void *)(a1 + 8);
    *(_DWORD *)int v42 = 136446466;
    *(void *)&v42[4] = v36;
    __int16 v43 = 1026;
    int v44 = v41;
    LODWORD(v39) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v42,
      v39);
    __int16 v38 = (char *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::Notificati onData, char, char>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notificatio n_T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Type::Notific ationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v37);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

void sub_1009DB43C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

BOOL sub_1009DB46C(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101866518);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      int v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101866518);
      }
      BOOL v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      int v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::Notifica tionData, char, char>::clientRegistered(int, const Notification_T &) [Notification_T = CLFenceDataDownloadManage r_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_1009DB6EC(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101866518);
              }
              int v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                double v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101866518);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                int v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type ::NotificationData, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_ T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Typ e::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_1009DBA74(uint64_t a1, int *a2, std::string *this)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      int v11 = (uint64_t *)v4;
    }
    else {
      int v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }

  while (*v11);
  if (v8 == v3) {
    return 0LL;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0LL;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0LL;
  }
  std::string::operator=(this, *(const std::string **)(v8 + 64));
  std::string::operator=(this + 1, (const std::string *)(v12 + 24));
  std::string::operator=(this + 2, (const std::string *)(v12 + 48));
  __int128 v13 = *(_OWORD *)(v12 + 88);
  __int128 v14 = *(_OWORD *)(v12 + 104);
  __int128 v15 = *(_OWORD *)(v12 + 120);
  *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = *(_OWORD *)(v12 + 72);
  *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = v15;
  *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = v14;
  *(_OWORD *)&this[3].__r_.__value_.__r.__words[2] = v13;
  __int128 v16 = *(_OWORD *)(v12 + 152);
  __int128 v17 = *(_OWORD *)(v12 + 168);
  std::string::size_type v18 = *(void *)(v12 + 181);
  *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = *(_OWORD *)(v12 + 136);
  *(std::string::size_type *)((char *)&this[7].__r_.__value_.__r.__words[1] + 5) = v18;
  *(_OWORD *)&this[7].__r_.__value_.__l.__data_ = v17;
  *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v16;
  std::string::operator=(this + 8, (const std::string *)(v12 + 192));
  std::string::pointer data = this[9].__r_.__value_.__l.__data_;
  this[9].__r_.__value_.__r.__words[0] = (std::string::size_type)*(id *)(v12 + 216);

  if ((std::string *)v12 != this) {
    sub_10009B244( &this[9].__r_.__value_.__s.__data_[8],  *(char **)(v12 + 224),  *(void *)(v12 + 232),  (uint64_t)(*(void *)(v12 + 232) - *(void *)(v12 + 224)) >> 4);
  }
  this[10].__r_.__value_.__s.__data_[8] = *(_BYTE *)(v12 + 248);
  return 1LL;
}

uint64_t sub_1009DBB94(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = *a2;
  uint64_t v12 = &v10;
  uint64_t v5 = sub_10023347C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_1012CF090, &v12);
  sub_10005F550((uint64_t)(v5 + 8), &v11);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    int v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  return 1LL;
}

void sub_1009DBC40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1009DBC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v19 = 0;
  (*(void (**)(uint64_t, uint64_t, void **, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v8,  a3,  a4,  0LL);
  if (__p)
  {
    std::string::size_type v18 = __p;
    operator delete(__p);
  }

  if (v15 < 0) {
    operator delete(v14);
  }
  if (v13 < 0) {
    operator delete(v12);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
  if (v9 < 0) {
    operator delete(v8[0]);
  }
}

void sub_1009DBD20( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1009DBD34(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101866518);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = (void *)(a1 + 8);
      char v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)__int16 v66 = 0;
      *(_WORD *)&v66[4] = 2082;
      *(void *)&v66[6] = "";
      *(_WORD *)&v66[14] = 2082;
      *(void *)&v66[16] = "activity";
      __int16 v67 = 2082;
      __int16 v68 = v12;
      __int16 v69 = 2050;
      __int16 v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    char v15 = (__n128 *)(a1 + 64);
    __int128 v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    __int128 v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        __int128 v17 = v14;
      }
      __int128 v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)int v71 = &v71[8];
      memset(&v71[8], 0, 24);
      __int16 v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      __int128 v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&v66[4], *(void **)&v66[12]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      sub_1009DCFC8(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      __int16 v27 = *(std::__shared_weak_count **)&v66[4];
      if (*(void *)&v66[4])
      {
        int v28 = (unint64_t *)(*(void *)&v66[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    uint64_t v30 = sub_1009DCA74(a3);
    if (a5 == -1)
    {
      sub_1009DCB14((void *)a1, (int *)a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          __int16 v36 = (uint64_t *)v32;
        }
        else {
          __int16 v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v63 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      int v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          int v42 = (unint64_t *)v37;
        }
        else {
          int v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          int v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        __int16 v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101866518);
        }
        __int16 v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          char v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            uint64_t v45 = v71;
          }
          else {
            uint64_t v45 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)__int16 v66 = v44;
          *(_WORD *)&v66[8] = 1024;
          *(_DWORD *)&v66[10] = a5;
          *(_WORD *)&v66[14] = 2080;
          *(void *)&v66[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101866518);
          }
          __int16 v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            char v48 = __p;
          }
          else {
            char v48 = (void **)__p[0];
          }
          *(_DWORD *)int v71 = 136315650;
          *(void *)&v71[4] = v46;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v59);
          char v50 = v49;
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::Noti ficationData, char, char>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, i nt, BOOL) [Notification_T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataD ownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v50);
        }

        goto LABEL_83;
      }

      __int16 v62 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v53 = v39[3].n128_i64[0];
      int v51 = v39 + 3;
      char v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v33 + 32);
      id v55 = v51;
      do
      {
        int v56 = v52[1].n128_i32[3];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          char v58 = v52;
        }
        else {
          char v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          id v55 = v52;
        }
        char v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_1009DCEEC((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v30);
    }

void sub_1009DC350( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_1009DC39C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101866518);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      unint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101866518);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::Notifica tionData, char, char>::listClients() [Notification_T = CLFenceDataDownloadManager_Type::Notification, Notificati onData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101866518);
    }
    int v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      unint64_t v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101866518);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      uint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::Notifica tionData, char, char>::listClients() [Notification_T = CLFenceDataDownloadManager_Type::Notification, Notificati onData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    int v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      char v11 = (void *)(a1 + 8);
      do
      {
        uint64_t v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101866518);
            }
            char v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              unint64_t v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101866518);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type:: NotificationData, char, char>::listClients() [Notification_T = CLFenceDataDownloadManager_Type::Notifica tion, NotificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            __int128 v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                __int128 v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                uint64_t v12 = v18;
              }

              while (!v19);
            }

            uint64_t v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            int v10 = v26;
          }

          while (!v19);
        }

        int v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_1009DC94C(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009DD608(a1);
  operator delete(v1);
}

id sub_1009DC960(uint64_t a1, int a2, void *a3)
{
  id result = sub_1009DD1E4(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_1009DC9AC(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1009DC9D8(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v2 = *a1;
    uint64_t v3 = (uint64_t *)a1[1];
    uint64_t v4 = *v3;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v2 + 8) = v4;
    a1[2] = 0LL;
    if (v3 != a1)
    {
      do
      {
        uint64_t v5 = (uint64_t *)v3[1];
        sub_100700568((uint64_t)(v3 + 2));
        operator delete(v3);
        uint64_t v3 = v5;
      }

      while (v5 != a1);
    }
  }

void sub_1009DCA48(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

CLCppContainer *sub_1009DCA74(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x100uLL);
  sub_1002718F0(v2, (__int128 *)a1);
  v2[248] = *(_BYTE *)(a1 + 248);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1009DD158;
  v4[3] = &unk_10181D3D0;
  v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  256LL);
}

void sub_1009DCB00(_Unwind_Exception *a1)
{
}

void sub_1009DCB14(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        int v51 = v9;
        id v13 = sub_1009DD1E4(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        __int128 v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              char v50 = v19;
              sub_1009DCEEC(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              unint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  unint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              int v51 = v29;
              uint64_t v34 = v29[6];
              __int128 v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                BOOL v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    BOOL v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      int v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      int v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      __int128 v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int16 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      __int128 v14 = v43;
                      __int16 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      __int128 v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      BOOL v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              char v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101866518);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                BOOL v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101866518);
                }
                uint64_t v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                char v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::Notifi cationData, char, char>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification _T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Ty pe::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_1009DCEEC(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    int v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_1009DD1E4(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    __int128 v14 = (int *)(*(void *)a2 + 32LL);
    uint64_t v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

uint64_t sub_1009DCFC8@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x118uLL);
  uint64_t result = sub_1009DD020((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_1009DD00C(_Unwind_Exception *a1)
{
}

uint64_t sub_1009DD020(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = off_101866648;
  *(void *)(a1 + 8) = 0LL;
  sub_1002718F0((char *)(a1 + 24), (__int128 *)a2);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 248);
  return a1;
}

void sub_1009DD064(_Unwind_Exception *a1)
{
}

void sub_1009DD078(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101866648;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1009DD08C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101866648;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_1009DD0B0(uint64_t a1)
{
}

void sub_1009DD0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 224);
  if (v3)
  {
    *(void *)(a2 + 232) = v3;
    operator delete(v3);
  }
}

void sub_1009DD158(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 224);
    if (v2)
    {
      *(void *)(v1 + 232) = v2;
      operator delete(v2);
    }

    operator delete((void *)v1);
  }

id sub_1009DD1E4(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_1009DD230(a1);
  }
  else {
    return 0LL;
  }
}

id sub_1009DD230(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101866688);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013431D1LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101866688);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101866688);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013431D1LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101866688);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  int v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLFenceDataDownloadManager_Type::NotificationDat a, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_1009DD5DC(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_1009DD608(uint64_t a1)
{
  *(void *)a1 = &off_1018666B8;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *id v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_1009DD668(uint64_t a1)
{
  id v2 = (char *)operator new(0x100uLL);
  sub_1002718F0(v2, (__int128 *)a1);
  v2[248] = *(_BYTE *)(a1 + 248);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1009DD708;
  v4[3] = &unk_10181D3D0;
  v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  256LL);
}

void sub_1009DD6F4(_Unwind_Exception *a1)
{
}

void sub_1009DD708(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id v2 = *(void **)(v1 + 224);
    if (v2)
    {
      *(void *)(v1 + 232) = v2;
      operator delete(v2);
    }

    operator delete((void *)v1);
  }

void sub_1009DD794()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_1009DD7F8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_1009DD86C(_Unwind_Exception *a1)
{
}

void sub_1009DD928(id a1)
{
  qword_101999C48 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLPressureStatsCollectorSilo");
}

void sub_1009DD998(id a1)
{
  if ((sub_1004FAB40() & 0x10) != 0)
  {
    sub_1004F2598();
    char v1 = sub_1001B9A1C();
  }

  else
  {
    char v1 = 0;
  }

  byte_101999C58 = v1;
}

void sub_1009DDD40(_Unwind_Exception *a1)
{
}

id sub_1009DDD54(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return _[a4 onDaemonStatus:a2 data:a3];
}

id sub_1009DDD64(uint64_t a1, void *a2)
{
  return _[a2 onPressureData:a1];
}

void sub_1009DE68C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, uint64_t a37, char a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,uint64_t a55,void *a56,uint64_t a57)
{
  if (v58 < 0) {
    operator delete(v57);
  }
  sub_100210578(&a47);
  if (__p)
  {
    a54 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a56)
  {
    a57 = (uint64_t)a56;
    operator delete(a56);
  }

  _Unwind_Resume(a1);
}

float sub_1009DE744(uint64_t a1)
{
  int v7 = 0LL;
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  sub_10001B72C(&v7, *(const void **)a1, *(void *)(a1 + 8), (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 2);
  unint64_t v1 = v8 - v7;
  if (v8 != v7)
  {
    if (v1 <= 1) {
      uint64_t v2 = 1LL;
    }
    else {
      uint64_t v2 = v8 - v7;
    }
    float v3 = 0.0;
    uint64_t v4 = v7;
    do
    {
      float v5 = *v4++;
      float v3 = v3 + v5;
      --v2;
    }

    while (v2);
    goto LABEL_9;
  }

  float v3 = 0.0;
  if (v7)
  {
LABEL_9:
    uint64_t v8 = v7;
    operator delete(v7);
  }

  return v3 / (float)v1;
}

void sub_1009DF5E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009DFE14( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_1009E014C(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

void sub_1009E0238(id a1)
{
  qword_1019345B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pressure");
}

uint64_t sub_1009E0264(uint64_t a1)
{
  id v10 = (void **)(a1 + 208);
  sub_1000129D4(&v10);
  uint64_t v2 = *(void **)(a1 + 184);
  if (v2)
  {
    *(void *)(a1 + 192) = v2;
    operator delete(v2);
  }

  float v3 = *(void **)(a1 + 160);
  if (v3)
  {
    *(void *)(a1 + 168) = v3;
    operator delete(v3);
  }

  uint64_t v4 = *(void **)(a1 + 136);
  if (v4)
  {
    *(void *)(a1 + 144) = v4;
    operator delete(v4);
  }

  float v5 = *(void **)(a1 + 112);
  if (v5)
  {
    *(void *)(a1 + 120) = v5;
    operator delete(v5);
  }

  int v6 = *(void **)(a1 + 88);
  if (v6)
  {
    *(void *)(a1 + 96) = v6;
    operator delete(v6);
  }

  int v7 = *(void **)(a1 + 64);
  if (v7)
  {
    *(void *)(a1 + 72) = v7;
    operator delete(v7);
  }

  uint64_t v8 = *(void **)(a1 + 40);
  if (v8)
  {
    *(void *)(a1 + 48) = v8;
    operator delete(v8);
  }

  return a1;
}

void sub_1009E031C(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

unsigned __int8 *sub_1009E0348(unsigned __int8 *a1, const char *a2, void *a3, unsigned __int8 a4)
{
  *a1 = 0;
  *((void *)a1 + 1) = *a3;
  int v6 = a1 + 8;
  a1[16] = a4;
  uint64_t v7 = sub_1006E27E8();
  sub_100413284(v7, buf);
  *a1 = sub_1002A7F54(*(uint64_t *)buf, a2, v6);
  uint64_t v8 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v9 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  sub_10000CE18((uint64_t)v37);
  std::ostream::operator<<(&v38, *v6);
  if (!a1[16])
  {
    if (*a1)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866730);
      }
      int v16 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        int v17 = *a1;
        std::stringbuf::str((std::stringbuf::string_type *)v41, &v39);
        int v18 = v41[23] >= 0 ? v41 : *(_BYTE **)v41;
        *(_DWORD *)std::stringbuf::string_type buf = 136315650;
        *(void *)&uint8_t buf[4] = a2;
        *(_WORD *)&_BYTE buf[12] = 1024;
        *(_DWORD *)&buf[14] = v17;
        __int16 v43 = 2080;
        BOOL v44 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "motion default,%s,set,%d,value,%s",  buf,  0x1Cu);
        if ((v41[23] & 0x80000000) != 0) {
          operator delete(*(void **)v41);
        }
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_53;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866730);
      }
      uint64_t v19 = qword_1019344B8;
      int v20 = *a1;
      std::stringbuf::str(&v36, &v39);
      if ((v36.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        BOOL v21 = &v36;
      }
      else {
        BOOL v21 = (std::stringbuf::string_type *)v36.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)BOOL v41 = 136315650;
      *(void *)&v41[4] = a2;
      *(_WORD *)&v41[12] = 1024;
      *(_DWORD *)&v41[14] = v20;
      *(_WORD *)&v41[18] = 2080;
      *(void *)&v41[20] = v21;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v19,  0LL,  "motion default,%s,set,%d,value,%s",  v41,  28,  v36.__r_.__value_.__l.__data_);
      int v15 = v22;
    }

    else
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866730);
      }
      uint64_t v27 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
      {
        int v28 = *a1;
        std::stringbuf::str((std::stringbuf::string_type *)v41, &v39);
        unint64_t v29 = v41[23] >= 0 ? v41 : *(_BYTE **)v41;
        *(_DWORD *)std::stringbuf::string_type buf = 136315650;
        *(void *)&uint8_t buf[4] = a2;
        *(_WORD *)&_BYTE buf[12] = 1024;
        *(_DWORD *)&buf[14] = v28;
        __int16 v43 = 2080;
        BOOL v44 = v29;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_INFO,  "motion default,%s,set,%d,value,%s",  buf,  0x1Cu);
        if ((v41[23] & 0x80000000) != 0) {
          operator delete(*(void **)v41);
        }
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_53;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866730);
      }
      uint64_t v32 = qword_1019344B8;
      int v33 = *a1;
      std::stringbuf::str(&v36, &v39);
      if ((v36.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v34 = &v36;
      }
      else {
        uint64_t v34 = (std::stringbuf::string_type *)v36.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)BOOL v41 = 136315650;
      *(void *)&v41[4] = a2;
      *(_WORD *)&v41[12] = 1024;
      *(_DWORD *)&v41[14] = v33;
      *(_WORD *)&v41[18] = 2080;
      *(void *)&v41[20] = v34;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v32,  1LL,  "motion default,%s,set,%d,value,%s",  v41,  28,  v36.__r_.__value_.__l.__data_);
      int v15 = v35;
    }

    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMotionDefaultsWrite<long>::CLMotionDefaultsWrite(const char *, const T &, const BOOL) [T = long]",  "%s\n",  v15);
    if (v15 == buf) {
      goto LABEL_53;
    }
    goto LABEL_64;
  }

  if (*a1)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101866730);
    }
    __int16 v11 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = *a1;
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      *(void *)&uint8_t buf[4] = a2;
      *(_WORD *)&_BYTE buf[12] = 1024;
      *(_DWORD *)&buf[14] = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "motion default,%s,set,%d", buf, 0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866730);
      }
      int v13 = *a1;
      *(_DWORD *)BOOL v41 = 136315394;
      *(void *)&v41[4] = a2;
      *(_WORD *)&v41[12] = 1024;
      *(_DWORD *)&v41[14] = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "motion default,%s,set,%d",  v41,  18);
      int v15 = (char *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMotionDefaultsWrite<long>::CLMotionDefaultsWrite(const char *, const T &, const BOOL) [T = long]",  "%s\n",  v14);
      goto LABEL_42;
    }
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101866730);
    }
    int v23 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
    {
      int v24 = *a1;
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      *(void *)&uint8_t buf[4] = a2;
      *(_WORD *)&_BYTE buf[12] = 1024;
      *(_DWORD *)&buf[14] = v24;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "motion default,%s,set,%d", buf, 0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866730);
      }
      int v25 = *a1;
      *(_DWORD *)BOOL v41 = 136315394;
      *(void *)&v41[4] = a2;
      *(_WORD *)&v41[12] = 1024;
      *(_DWORD *)&v41[14] = v25;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "motion default,%s,set,%d",  v41,  18);
      int v15 = (char *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMotionDefaultsWrite<long>::CLMotionDefaultsWrite(const char *, const T &, const BOOL) [T = long]",  "%s\n",  v26);
LABEL_42:
      if (v15 == buf) {
        goto LABEL_53;
      }
LABEL_64:
      free(v15);
    }
  }

void sub_1009E0B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

uint64_t sub_1009E0B64()
{
  if (byte_101999B3F >= 0) {
    size_t v0 = byte_101999B3F;
  }
  else {
    size_t v0 = qword_101999B30;
  }
  uint64_t v1 = sub_1000392EC((uint64_t)&qword_101999B40, v0 + 11);
  else {
    uint64_t v2 = *(void **)v1;
  }
  if (v0)
  {
    if (byte_101999B3F >= 0) {
      float v3 = &qword_101999B28;
    }
    else {
      float v3 = (uint64_t *)qword_101999B28;
    }
    memmove(v2, v3, v0);
  }

  strcpy((char *)v2 + v0, "_LastUpdate");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999B40, (void *)&_mh_execute_header);
  if (byte_101999B3F >= 0) {
    size_t v4 = byte_101999B3F;
  }
  else {
    size_t v4 = qword_101999B30;
  }
  uint64_t v5 = sub_1000392EC((uint64_t)&qword_101999B58, v4 + 12);
  else {
    int v6 = *(void **)v5;
  }
  if (v4)
  {
    if (byte_101999B3F >= 0) {
      uint64_t v7 = &qword_101999B28;
    }
    else {
      uint64_t v7 = (uint64_t *)qword_101999B28;
    }
    memmove(v6, v7, v4);
  }

  strcpy((char *)v6 + v4, "_MeanAbsPErr");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999B58, (void *)&_mh_execute_header);
  if (byte_101999B3F >= 0) {
    size_t v8 = byte_101999B3F;
  }
  else {
    size_t v8 = qword_101999B30;
  }
  uint64_t v9 = sub_1000392EC((uint64_t)&qword_101999B70, v8 + 8);
  else {
    unint64_t v10 = *(void **)v9;
  }
  if (v8)
  {
    if (byte_101999B3F >= 0) {
      __int16 v11 = &qword_101999B28;
    }
    else {
      __int16 v11 = (uint64_t *)qword_101999B28;
    }
    memmove(v10, v11, v8);
  }

  strcpy((char *)v10 + v8, "_VarPErr");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999B70, (void *)&_mh_execute_header);
  if (byte_101999B3F >= 0) {
    size_t v12 = byte_101999B3F;
  }
  else {
    size_t v12 = qword_101999B30;
  }
  uint64_t v13 = sub_1000392EC((uint64_t)&qword_101999B88, v12 + 14);
  else {
    unint64_t v14 = *(void **)v13;
  }
  if (v12)
  {
    if (byte_101999B3F >= 0) {
      int v15 = &qword_101999B28;
    }
    else {
      int v15 = (uint64_t *)qword_101999B28;
    }
    memmove(v14, v15, v12);
  }

  strcpy((char *)v14 + v12, "_DeltaPressure");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999B88, (void *)&_mh_execute_header);
  if (byte_101999B3F >= 0) {
    size_t v16 = byte_101999B3F;
  }
  else {
    size_t v16 = qword_101999B30;
  }
  uint64_t v17 = sub_1000392EC((uint64_t)&qword_101999BA0, v16 + 17);
  else {
    int v18 = *(void **)v17;
  }
  if (v16)
  {
    if (byte_101999B3F >= 0) {
      uint64_t v19 = &qword_101999B28;
    }
    else {
      uint64_t v19 = (uint64_t *)qword_101999B28;
    }
    memmove(v18, v19, v16);
  }

  strcpy((char *)v18 + v16, "_DeltaTemperature");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999BA0, (void *)&_mh_execute_header);
  if (byte_101999B3F >= 0) {
    size_t v20 = byte_101999B3F;
  }
  else {
    size_t v20 = qword_101999B30;
  }
  uint64_t v21 = sub_1000392EC((uint64_t)&qword_101999BB8, v20 + 4);
  else {
    int v22 = *(void **)v21;
  }
  if (v20)
  {
    if (byte_101999B3F >= 0) {
      int v23 = &qword_101999B28;
    }
    else {
      int v23 = (uint64_t *)qword_101999B28;
    }
    memmove(v22, v23, v20);
  }

  strcpy((char *)v22 + v20, "_TCO");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999BB8, (void *)&_mh_execute_header);
  if (byte_101999B3F >= 0) {
    size_t v24 = byte_101999B3F;
  }
  else {
    size_t v24 = qword_101999B30;
  }
  uint64_t v25 = sub_1000392EC((uint64_t)&qword_101999BD0, v24 + 18);
  else {
    int v26 = *(void **)v25;
  }
  if (v24)
  {
    if (byte_101999B3F >= 0) {
      uint64_t v27 = &qword_101999B28;
    }
    else {
      uint64_t v27 = (uint64_t *)qword_101999B28;
    }
    memmove(v26, v27, v24);
  }

  strcpy((char *)v26 + v24, "_MedianAbsDevOfTCO");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999BD0, (void *)&_mh_execute_header);
  if (byte_101999B3F >= 0) {
    size_t v28 = byte_101999B3F;
  }
  else {
    size_t v28 = qword_101999B30;
  }
  uint64_t v29 = sub_1000392EC((uint64_t)&qword_101999BE8, v28 + 15);
  else {
    uint64_t v30 = *(void **)v29;
  }
  if (v28)
  {
    if (byte_101999B3F >= 0) {
      BOOL v31 = &qword_101999B28;
    }
    else {
      BOOL v31 = (uint64_t *)qword_101999B28;
    }
    memmove(v30, v31, v28);
  }

  strcpy((char *)v30 + v28, "_FlightOfStairs");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999BE8, (void *)&_mh_execute_header);
  if (byte_101999B3F >= 0) {
    size_t v32 = byte_101999B3F;
  }
  else {
    size_t v32 = qword_101999B30;
  }
  uint64_t v33 = sub_1000392EC((uint64_t)&qword_101999C00, v32 + 12);
  else {
    uint64_t v34 = *(void **)v33;
  }
  if (v32)
  {
    if (byte_101999B3F >= 0) {
      BOOL v35 = &qword_101999B28;
    }
    else {
      BOOL v35 = (uint64_t *)qword_101999B28;
    }
    memmove(v34, v35, v32);
  }

  strcpy((char *)v34 + v32, "_FactoryTime");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999C00, (void *)&_mh_execute_header);
  if (byte_101999B3F >= 0) {
    size_t v36 = byte_101999B3F;
  }
  else {
    size_t v36 = qword_101999B30;
  }
  uint64_t v37 = sub_1000392EC((uint64_t)&qword_101999C18, v36 + 18);
  else {
    uint64_t v38 = *(void **)v37;
  }
  if (v36)
  {
    if (byte_101999B3F >= 0) {
      std::stringbuf v39 = &qword_101999B28;
    }
    else {
      std::stringbuf v39 = (uint64_t *)qword_101999B28;
    }
    memmove(v38, v39, v36);
  }

  strcpy((char *)v38 + v36, "_LastAwdSubmission");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999C18, (void *)&_mh_execute_header);
  if (byte_101999B3F >= 0) {
    size_t v40 = byte_101999B3F;
  }
  else {
    size_t v40 = qword_101999B30;
  }
  uint64_t v41 = sub_1000392EC((uint64_t)&qword_101999C30, v40 + 19);
  else {
    int v42 = *(void **)v41;
  }
  if (v40)
  {
    if (byte_101999B3F >= 0) {
      __int16 v43 = &qword_101999B28;
    }
    else {
      __int16 v43 = (uint64_t *)qword_101999B28;
    }
    memmove(v42, v43, v40);
  }

  strcpy((char *)v42 + v40, "_CAEnabledTimestamp");
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999C30, (void *)&_mh_execute_header);
}

uint64_t sub_1009E121C(uint64_t a1, void *a2)
{
  float v3 = (void *)sub_1009E1590(a1, "FenceAuthorizationManager", a2);
  *float v3 = off_101866760;
  v3[14] = 0LL;
  sub_100F76854(v3 + 15);
  *(_OWORD *)(a1 + 144) = 0u;
  uint64_t v4 = a1 + 144;
  *(_BYTE *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(void *)(a1 + 176) =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:forClient:",  @"CLClientAuthorizationCache",  @"CLFenceManager");
  sub_100583844((uint64_t)sub_1009E162C, a1, *(void **)(a1 + 32), &v19);
  std::string::size_type v5 = v19.__r_.__value_.__r.__words[0];
  v19.__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v6 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = v5;
  if (v6)
  {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    std::string::size_type v7 = v19.__r_.__value_.__r.__words[0];
    v19.__r_.__value_.__r.__words[0] = 0LL;
    if (v7) {
      (*(void (**)(std::string::size_type))(*(void *)v7 + 8LL))(v7);
    }
  }

  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:1 registrationInfo:0];
  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:4 registrationInfo:0];
  memset(&v19, 0, sizeof(v19));
  std::string::operator=(&v19, &stru_101999C68);
  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:0 registrationInfo:sub_10120E548((uint64_t)&v19)];
  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:2 registrationInfo:0];
  sub_1003CC884((uint64_t)sub_1009E1804, a1, *(void **)(a1 + 32), &v18);
  uint64_t v8 = v18;
  uint64_t v18 = 0LL;
  uint64_t v9 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    uint64_t v10 = v18;
    uint64_t v18 = 0LL;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
  }

  objc_msgSend( *(id *)(*(void *)(a1 + 152) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 152) + 8),  9,  0,  v18);
  sub_100ACD980((uint64_t)sub_1009E19D4, a1, *(void **)(a1 + 32), &v18);
  uint64_t v11 = v18;
  uint64_t v18 = 0LL;
  uint64_t v12 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = v11;
  if (v12)
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    uint64_t v13 = v18;
    uint64_t v18 = 0LL;
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    }
  }

  objc_msgSend( *(id *)(*(void *)(a1 + 160) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 160) + 8),  0,  0,  v18);
  sub_1006666AC((uint64_t)sub_1009E1BAC, a1, *(void **)(a1 + 32), &v18);
  uint64_t v14 = v18;
  uint64_t v18 = 0LL;
  uint64_t v15 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = v14;
  if (v15)
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
    uint64_t v16 = v18;
    uint64_t v18 = 0LL;
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
    }
  }

  objc_msgSend( *(id *)(*(void *)(a1 + 168) + 16),  "register:forNotification:registrationInfo:",  *(void *)(*(void *)(a1 + 168) + 8),  10,  0,  v18);
  *(_BYTE *)(a1 + 136) = 1;
  sub_1009E1D84(a1, (uint64_t)"CLFenceAuthorizationManager");
  return a1;
}

void sub_1009E14C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  uint64_t v19 = v15[21];
  v15[21] = 0LL;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  uint64_t v20 = v15[20];
  v15[20] = 0LL;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8LL))(v20);
  }
  uint64_t v21 = v15[19];
  v15[19] = 0LL;
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
  }
  uint64_t v22 = *v17;
  *uint64_t v17 = 0LL;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  sub_10000AE14(v16);
  sub_1009E1FC4((uint64_t)v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1009E1590(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101866958;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_1009E1610(_Unwind_Exception *exception_object)
{
}

void sub_1009E162C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018668E8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceAuthorizationManager::onClientNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018668E8);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceAuthorizationManager::onClientNotification, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1009E3BA0((uint64_t *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009E17E4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009E1804(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018668E8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceAuthorizationManager::onStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018668E8);
    }
    uint64_t v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceAuthorizationManager::onStatusNotification, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  sub_1009E217C(a4, v6, a2);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009E19B4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009E19D4(uint64_t a1, _DWORD *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018668E8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceAuthorizationManager::onDataProtectionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018668E8);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceAuthorizationManager::onDataProtectionNotification, event:%{public, location :escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1009E5ECC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009E1B8C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009E1BAC(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018668E8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceAuthorizationManager::onFenceManagerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018668E8);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceAuthorizationManager::onFenceManagerNotification, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1009E338C((uint64_t *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009E1D64( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009E1D84(uint64_t a1, uint64_t a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 112);
    int v6 = *(unsigned __int8 *)(a1 + 136);
    *(_DWORD *)std::stringbuf::string_type buf = 134284035;
    uint64_t v19 = v5;
    __int16 v20 = 1026;
    int v21 = v6;
    __int16 v22 = 2082;
    uint64_t v23 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: createFenceDatabase, fFenceDatabase, %{private}p, fWasUnlockedSinceBoot, %{public}d, reason, %{public}s",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v8 = *(void *)(a1 + 112);
    int v9 = *(unsigned __int8 *)(a1 + 136);
    int v12 = 134284035;
    uint64_t v13 = v8;
    __int16 v14 = 1026;
    int v15 = v9;
    __int16 v16 = 2082;
    uint64_t v17 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: createFenceDatabase, fFenceDatabase, %{private}p, fWasUnlockedSinceBoot, %{public}d, reason, %{public}s",  &v12,  28);
    char v11 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::createFenceDatabase(const char *)",  "%s\n",  v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  if (!*(void *)(a1 + 112))
  {
    if (*(_BYTE *)(a1 + 136))
    {
      uint64_t v7 = operator new(0x198uLL);
      sub_10068D7B0((uint64_t)v7);
      *(void *)(a1 + 112) = v7;
      _os_feature_enabled_impl("CoreLocation", "cl_fence_handoff");
    }
  }

void sub_1009E1FA8(_Unwind_Exception *a1)
{
}

uint64_t sub_1009E1FC4(uint64_t a1)
{
  *(void *)a1 = off_101866958;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_1009E203C(uint64_t a1)
{
  *(void *)a1 = off_101866760;

  uint64_t v2 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = 0LL;
  *(void *)(a1 + 176) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  sub_10000AE14(a1 + 120);
  return sub_1009E1FC4(a1);
}

void sub_1009E20E0(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009E203C(a1);
  operator delete(v1);
}

uint64_t sub_1009E20F4()
{
  return 1LL;
}

uint64_t sub_1009E20FC()
{
  return 1LL;
}

void *sub_1009E2104@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

void sub_1009E217C(uint64_t a1, uint64_t a2, int *a3)
{
  if (*a3 == 9)
  {
    if (*(void *)(a1 + 112)) {
      goto LABEL_9;
    }
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      int v21 = "kNotificationMigration";
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      int v18 = 136446210;
      uint64_t v19 = "kNotificationMigration";
      p_vtable = buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  &v18,  12);
      __int16 v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceAuthorizationManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLD aemonStatus_Type::NotificationData &)",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }

    if (*(void *)(a1 + 112))
    {
LABEL_9:
      p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
      if (qword_101934870 == -1)
      {
LABEL_10:
        int v6 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: Got kNotificationMigration", buf, 2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (p_vtable[270] != -1LL) {
            dispatch_once(&qword_101934870, &stru_101866908);
          }
          LOWORD(v18) = 0;
          LODWORD(v17) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Got kNotificationMigration",  &v18,  v17);
          __int16 v14 = (uint8_t *)v13;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v13);
          if (v14 != buf) {
            free(v14);
          }
        }

        sub_1009E25E4(a1);
        return;
      }
    }

    else
    {
      sub_1012577AC();
    }

    dispatch_once(&qword_101934870, &stru_101866908);
    goto LABEL_10;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = *a3;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    LODWORD(v21) = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: unknown notification, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    int v10 = *a3;
    int v18 = 67240192;
    LODWORD(v19) = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: unknown notification, %{public}d",  &v18,  8);
    int v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDae monStatus_Type::NotificationData &)",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

void sub_1009E25E4(uint64_t a1)
{
  if (*(void *)(a1 + 112))
  {
    int v2 = sub_1002958AC();
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v2 == 1;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Fence: updateAuthorizedClients, locationServicesEnabled, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      LODWORD(v19) = 67240192;
      HIDWORD(v19) = v2 == 1;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: updateAuthorizedClients, locationServicesEnabled, %{public}d",  &v19,  8);
      uint64_t v13 = (char *)v12;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceAuthorizationManager::updateAuthorizedClients()", "%s\n", v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    uint64_t v19 = 0LL;
    uint64_t v20 = 0LL;
    uint64_t v21 = 0LL;
    sub_1006981CC(*(void *)(a1 + 112), &v19);
    if (v20 != v19)
    {
      uint64_t v4 = 0LL;
      unint64_t v5 = 0LL;
      do
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866908);
        }
        int v6 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v7 = (void *)(v19 + v4);
          *(_DWORD *)std::stringbuf::string_type buf = 136446210;
          *(void *)&uint8_t buf[4] = v7;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "checkClientStatus, %{public}s", buf, 0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866908);
          }
          uint64_t v8 = (void *)(v19 + v4);
          int v17 = 136446210;
          int v18 = v8;
          LODWORD(v16) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "checkClientStatus, %{public}s",  &v17,  v16);
          int v10 = (char *)v9;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::updateAuthorizedClients()",  "%s\n",  v9);
          if (v10 != buf) {
            free(v10);
          }
        }

        sub_1009E326C(a1, (__int128 *)(v19 + v4), v2 == 1);
        ++v5;
        v4 += 24LL;
      }

      while (v5 < 0xAAAAAAAAAAAAAAABLL * ((v20 - v19) >> 3));
    }

    *(void *)std::stringbuf::string_type buf = &v19;
    sub_1000129D4((void ***)buf);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    char v11 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "Fence: updateAuthorizedClients, can't add fence before the first unlock",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      LOWORD(v19) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: updateAuthorizedClients, can't add fence before the first unlock",  &v19,  2);
      int v15 = (char *)v14;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLFenceAuthorizationManager::updateAuthorizedClients()", "%s\n", v14);
      if (v15 != buf) {
        free(v15);
      }
    }
  }

void sub_1009E2AD4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void **a19)
{
  a19 = (void **)&a15;
  sub_1000129D4(&a19);
  _Unwind_Resume(a1);
}

void sub_1009E2B00(uint64_t *a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  int v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v30 = 2082;
    BOOL v31 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:CLFenceAuthorizationManager::reinitFenceMonitoring}",  buf,  0x12u);
  }

  if (a1[14])
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Fetching all fences for reinit", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      LOWORD(v19) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fetching all fences for reinit",  &v19,  2);
      int v15 = (uint8_t *)v14;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceAuthorizationManager::reinitFenceMonitoring()", "%s\n", v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    uint64_t v26 = 0LL;
    uint64_t v27 = 0LL;
    uint64_t v28 = 0LL;
    if ((sub_100690D5C(a1[14], &v26) & 1) == 0)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      uint64_t v4 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Unable to fetch fences", buf, 2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866908);
        }
        LOWORD(v19) = 0;
        LODWORD(v18) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  16LL,  "Unable to fetch fences",  &v19,  v18);
        int v17 = (uint8_t *)v16;
        sub_10029211C("Generic", 1LL, 0, 0LL, "void CLFenceAuthorizationManager::reinitFenceMonitoring()", "%s\n", v16);
        if (v17 != buf) {
          free(v17);
        }
      }
    }

    __int16 v22 = 0LL;
    uint64_t v23 = 0LL;
    __int16 v25 = 0;
    unint64_t v24 = 0LL;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    int v21 = 1065353216;
    uint64_t v5 = v26;
    uint64_t v6 = v27;
    if (v26 != v27)
    {
      do
      {
        if (sub_1009E30CC((uint64_t)a1, (uint64_t *)v5))
        {
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866908);
          }
          uint64_t v7 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v8 = (void *)(v5 + 24);
            uint64_t v9 = v5;
            int v10 = (void *)(v5 + 48);
            *(_DWORD *)std::stringbuf::string_type buf = 68289795;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v30 = 2082;
            BOOL v31 = "";
            __int16 v32 = 2081;
            uint64_t v33 = v8;
            __int16 v34 = 2082;
            uint64_t v35 = v9;
            __int16 v36 = 2082;
            uint64_t v37 = v10;
            _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Fence: Adding authorized Fence, fenceName:%{private, location:escape_only}s, bundleId:%{public, location:escape_only}s, onBehalfOf:%{public, location:escape_only}s}",  buf,  0x30u);
          }

          char v11 = v23;
          if ((unint64_t)v23 >= v24)
          {
            int v12 = (char *)sub_100669E18((uint64_t *)&v22, (__int128 *)v5);
          }

          else
          {
            sub_1002718F0(v23, (__int128 *)v5);
            int v12 = v11 + 248;
          }

          uint64_t v23 = v12;
          sub_1000B9764((uint64_t)&v19, (unsigned __int8 *)v5, v5);
        }

        v5 += 248LL;
      }

      while (v5 != v6);
      if (v23 != v22)
      {
        HIBYTE(v25) = sub_1002958AC() == 1;
        *(_DWORD *)std::stringbuf::string_type buf = 0;
        (*(void (**)(uint64_t *, uint8_t *, char **, void, uint64_t, void))(*a1 + 152))( a1,  buf,  &v22,  0LL,  0xFFFFFFFFLL,  0LL);
      }
    }

    sub_10004AD90((uint64_t)&v19);
    *(void *)std::stringbuf::string_type buf = &v22;
    sub_1006684D8((void ***)buf);
    *(void *)std::stringbuf::string_type buf = &v26;
    sub_1006684D8((void ***)buf);
  }

void sub_1009E306C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, void **a25)
{
  a25 = (void **)&a22;
  sub_1006684D8(&a25);
  _Unwind_Resume(a1);
}

uint64_t sub_1009E30CC(uint64_t a1, uint64_t *a2)
{
  if (!sub_1009E82A4(a1, a2))
  {
    uint64_t v4 = 0LL;
LABEL_7:
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    goto LABEL_9;
  }

  uint64_t v4 = sub_1009E5D74(a1, a2 + 6);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v5 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v8 = 68289282;
    int v9 = 0;
    __int16 v10 = 2082;
    char v11 = "";
    __int16 v12 = 1026;
    int v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#FenceHandoff isOnBehalfBundleAuthorized, isAuthorized:%{public}hhd}",  (uint8_t *)&v8,  0x18u);
    goto LABEL_7;
  }

void sub_1009E326C(uint64_t a1, __int128 *a2, char a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(&__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 __dst = *a2;
    uint64_t v11 = *((void *)a2 + 2);
  }

  uint64_t v5 = *(void **)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3321888768LL;
  v6[2] = sub_1009E8CCC;
  v6[3] = &unk_101866830;
  v6[4] = a1;
  if (SHIBYTE(v11) < 0)
  {
    sub_1010DD48C(&__p, (void *)__dst, *((unint64_t *)&__dst + 1));
  }

  else
  {
    __int128 __p = __dst;
    uint64_t v8 = v11;
  }

  char v9 = a3;
  [v5 async:v6];
  if (SHIBYTE(v8) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v11) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_1009E3358( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

void sub_1009E338C(uint64_t *a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 10)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      sub_100923668(a4, __p);
      uint64_t v7 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
         ? __p
         : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Received notification to remove failed fence, %s",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      uint64_t v9 = qword_101934878;
      sub_100923668(a4, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v16 = 136315138;
      int v17 = p_buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v9,  2LL,  "Received notification to remove failed fence, %s",  (const char *)&v16);
      __int16 v12 = v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onFenceManagerNotification(int, const CLFenceManager_Type::Notification &, con st CLFenceManager_Type::NotificationData &)",  "%s\n",  (const char *)v12);
      if (v12 != __p) {
        free(v12);
      }
    }

    if (!sub_1009E3714(a1, a4))
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      uint64_t v8 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(__p[0].__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)"onFenceManagerNotification";
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%s, failed to remove fence without centroid",  (uint8_t *)__p,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866908);
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)"onFenceManagerNotification";
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "%s, failed to remove fence without centroid",  (const char *)&buf);
        __int16 v14 = (std::stringbuf::string_type *)v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onFenceManagerNotification(int, const CLFenceManager_Type::Notification &, c onst CLFenceManager_Type::NotificationData &)",  "%s\n",  v13);
        if (v14 != __p) {
          free(v14);
        }
      }
    }
  }

BOOL sub_1009E3714(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = a1[14];
  if (v2)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      else {
        uint64_t v6 = *(void *)a2;
      }
      else {
        uint64_t v7 = *(void *)(a2 + 24);
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136446467;
      *(void *)&uint8_t buf[4] = v6;
      __int16 v22 = 2081;
      uint64_t v23 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Removing fence %{public}s/%{private}s",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      else {
        uint64_t v12 = *(void *)a2;
      }
      else {
        uint64_t v13 = *(void *)(a2 + 24);
      }
      LODWORD(v19[0]) = 136446467;
      *(uint64_t *)((char *)v19 + 4) = v12;
      WORD2(v19[1]) = 2081;
      *(uint64_t *)((char *)&v19[1] + 6) = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Removing fence %{public}s/%{private}s",  v19,  22);
      int v15 = (char *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceAuthorizationManager::removeFence(const CLFenceManager_Type::Fence &)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    sub_1002718F0(buf, (__int128 *)a2);
    int v29 = sub_100922F28((uint64_t)buf);
    sub_10068FE70(a1[14], (uint64_t)buf);
    memset(v19, 0, sizeof(v19));
    __int16 v20 = 0;
    uint64_t v8 = sub_100669E18(v19, (__int128 *)a2);
    uint64_t v9 = *(void (**)(uint64_t *, void ***, uint64_t *, void, uint64_t, void))(*a1 + 152);
    v19[1] = v8;
    LOBYTE(v20) = 1;
    LODWORD(v18) = 1;
    v9(a1, &v18, v19, 0LL, 0xFFFFFFFFLL, 0LL);
    sub_1009E326C((uint64_t)a1, (__int128 *)a2, 0);
    uint64_t v18 = (void **)v19;
    sub_1006684D8(&v18);
    if (v33)
    {
      __int16 v34 = v33;
      operator delete(v33);
    }

    if (v31 < 0) {
      operator delete(v30);
    }
    if (v28 < 0) {
      operator delete(__p);
    }
    if (v26 < 0) {
      operator delete(v25);
    }
    if (v24 < 0) {
      operator delete(*(void **)buf);
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    __int16 v10 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "Fence: removeFence, can't remove fence before the first unlock",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      LOWORD(v19[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: removeFence, can't remove fence before the first unlock",  v19,  2);
      int v17 = (char *)v16;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLFenceAuthorizationManager::removeFence(const CLFenceManager_Type::Fence &)",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }
  }

  return v2 != 0;
}

void sub_1009E3B54( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009E3BA0(uint64_t *a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (*((_BYTE *)a1 + 136))
  {
    if (a1[14]) {
      goto LABEL_255;
    }
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v5 = &OBJC_METACLASS___CLPrivacyManager.vtable;
    __int16 v10 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      *(void *)&uint8_t buf[4] = "onClientNotification";
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      LODWORD(v176[0]) = 136446210;
      *(uint64_t *)((char *)v176 + 4) = (uint64_t)"onClientNotification";
      LODWORD(v154) = 12;
      p_vtable = buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  v176);
      uint64_t v108 = (uint8_t *)v107;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CL ClientManager_Type::NotificationData &)",  "%s\n",  v107);
      if (v108 != buf) {
        free(v108);
      }
    }

    if (a1[14])
    {
LABEL_255:
      sub_100FE3FB4(a4, (uint64_t)v170);
      switch(*a3)
      {
        case 0:
          if (!a1[14])
          {
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            uint64_t v11 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 136446210;
              *(void *)&uint8_t buf[4] = "kNotificationReset";
              _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  buf,  0xCu);
            }

            if (sub_1002921D0(115, 0))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101866908);
              }
              LODWORD(v176[0]) = 136446210;
              *(uint64_t *)((char *)v176 + 4) = (uint64_t)"kNotificationReset";
              LODWORD(v154) = 12;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  v176);
              unint64_t v124 = (uint8_t *)v123;
              sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v123);
              if (v124 != buf) {
                free(v124);
              }
            }

            if (!a1[14])
            {
              sub_101257C30( (uint64_t)buf,  v12,  v13,  v14,  v15,  v16,  v17,  v18,  v153,  v154,  v155,  v156,  (uint64_t)v157,  (uint64_t)v158,  v159,  (uint64_t)v160,  (uint64_t)v161,  v162,  v163,  (uint64_t)v164,  v165,  v166,  (uint64_t)v167,  (uint64_t)v168);
              goto LABEL_181;
            }
          }

          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866908);
          }
          __int128 v19 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)std::stringbuf::string_type buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "#Warning Reset received; sending reset notification",
              buf,
              2u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            LOWORD(v176[0]) = 0;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Reset received; sending reset notification",
              v176,
              2);
            __int16 v110 = (uint8_t *)v109;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, co nst CLClientManager_Type::NotificationData &)",  "%s\n",  v109);
            if (v110 != buf) {
              free(v110);
            }
          }

          *(_DWORD *)std::stringbuf::string_type buf = 2;
          (*(void (**)(uint64_t *, uint8_t *, uint64_t, uint64_t))(*a1 + 144))(a1, buf, 1LL, 0xFFFFFFFFLL);
          goto LABEL_159;
        case 1:
          if (!a1[14])
          {
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
            __int16 v76 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 136446210;
              *(void *)&uint8_t buf[4] = "kNotificationUninstallation";
              _os_log_impl( (void *)&_mh_execute_header,  v76,  OS_LOG_TYPE_FAULT,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  buf,  0xCu);
            }

            if (sub_1002921D0(115, 0))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101866908);
              }
              LODWORD(v176[0]) = 136446210;
              *(uint64_t *)((char *)v176 + 4) = (uint64_t)"kNotificationUninstallation";
              LODWORD(v154) = 12;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  v176);
              CFAbsoluteTime v126 = (uint8_t *)v125;
              sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v125);
              if (v126 != buf) {
                free(v126);
              }
            }

            if (!a1[14])
            {
              sub_101257EF8( (uint64_t)buf,  v77,  v78,  v79,  v80,  v81,  v82,  v83,  v153,  v154,  v155,  v156,  (uint64_t)v157,  (uint64_t)v158,  v159,  (uint64_t)v160,  (uint64_t)v161,  v162,  v163,  (uint64_t)v164,  v165,  v166,  (uint64_t)v167,  (uint64_t)v168);
              goto LABEL_181;
            }
          }

          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866908);
          }
          __int128 v84 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            sub_100FE370C(a4);
            uint64_t v85 = a4 + 104;
            *(_DWORD *)std::stringbuf::string_type buf = 136446210;
            *(void *)&uint8_t buf[4] = v85;
            _os_log_impl( (void *)&_mh_execute_header,  v84,  OS_LOG_TYPE_DEBUG,  "Removing fences for uninstalled app %{public}s",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            uint64_t v114 = qword_101934878;
            sub_100FE370C(a4);
            uint64_t v115 = a4 + 104;
            LODWORD(v176[0]) = 136446210;
            *(uint64_t *)((char *)v176 + 4) = v115;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v114,  2LL,  "Removing fences for uninstalled app %{public}s",  v176,  12);
            __int16 v117 = (uint8_t *)v116;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, co nst CLClientManager_Type::NotificationData &)",  "%s\n",  v116);
            if (v117 != buf) {
              free(v117);
            }
          }

          sub_100FE370C(a4);
          sub_1009E5770(a1, (char *)(a4 + 104));
          sub_1009E326C((uint64_t)a1, (__int128 *)v170, 0);
          goto LABEL_159;
        case 2:
          uint64_t v24 = a1[14];
          if (!v24)
          {
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
            __int16 v25 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 136446210;
              *(void *)&uint8_t buf[4] = "kNotificationAuthorization";
              _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_FAULT,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  buf,  0xCu);
            }

            if (sub_1002921D0(115, 0))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101866908);
              }
              LODWORD(v176[0]) = 136446210;
              *(uint64_t *)((char *)v176 + 4) = (uint64_t)"kNotificationAuthorization";
              LODWORD(v154) = 12;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  v176);
              int v122 = (uint8_t *)v121;
              sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v121);
              if (v122 != buf) {
                free(v122);
              }
            }

            uint64_t v24 = a1[14];
            if (!v24)
            {
              sub_101257D94( (uint64_t)buf,  v26,  v27,  v28,  v29,  v30,  v31,  v32,  v153,  v154,  v155,  v156,  (uint64_t)v157,  (uint64_t)v158,  v159,  (uint64_t)v160,  (uint64_t)v161,  v162,  v163,  (uint64_t)v164,  v165,  v166,  (uint64_t)v167,  (uint64_t)v168);
              goto LABEL_181;
            }
          }

          v167 = 0LL;
          v168 = 0LL;
          uint64_t v169 = 0LL;
          if ((sub_100695168(v24, (char *)v170, (uint64_t *)&v167) & 1) == 0)
          {
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            v102 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
            {
              v103 = v170;
              if (v171 < 0) {
                v103 = (void **)v170[0];
              }
              *(_DWORD *)std::stringbuf::string_type buf = 136446210;
              *(void *)&uint8_t buf[4] = v103;
              _os_log_impl( (void *)&_mh_execute_header,  v102,  OS_LOG_TYPE_DEFAULT,  "#Warning Could not retrieve fences from database for client %{public}s",  buf,  0xCu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101866908);
              }
              int v118 = v170;
              if (v171 < 0) {
                int v118 = (void **)v170[0];
              }
              LODWORD(v176[0]) = 136446210;
              *(uint64_t *)((char *)v176 + 4) = (uint64_t)v118;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Could not retrieve fences from database for client %{public}s",  v176,  12);
              __int16 v120 = (uint8_t *)v119;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v119);
              if (v120 != buf) {
                free(v120);
              }
            }

            goto LABEL_157;
          }

          if (v168 == v167) {
            goto LABEL_157;
          }
          p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866908);
          }
          uint64_t v5 = &OBJC_METACLASS___CLPrivacyManager.vtable;
          uint64_t v33 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v35 = v167;
            __int16 v34 = v168;
            uint64_t v36 = *(void *)(a4 + 24);
            int v37 = *(char *)(a4 + 47);
            sub_100FE370C(a4);
            if (v37 >= 0) {
              uint64_t v38 = a4 + 24;
            }
            else {
              uint64_t v38 = v36;
            }
            uint64_t v39 = *(void *)(a4 + 104);
            uint64_t v40 = a4 + 48;
            uint64_t v41 = (void **)v170[0];
            *(_DWORD *)std::stringbuf::string_type buf = 134219010;
            if (v171 >= 0) {
              uint64_t v41 = v170;
            }
            *(void *)&uint8_t buf[4] = 0xEF7BDEF7BDEF7BDFLL * (((char *)v34 - (char *)v35) >> 3);
            *(_WORD *)&_BYTE buf[12] = 2082;
            *(void *)&buf[14] = v38;
            *(_WORD *)&buf[22] = 2082;
            *(void *)__int128 __p = v39;
            *(_WORD *)&__p[8] = 2082;
            uint64_t v184 = v40;
            __int16 v185 = 2082;
            v186 = v41;
            _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "kNotificationAuthorization, %lu, fences for, exec, %{public}s, bundleId, %{public}s, bundlePath, %{public} s, clientKey, %{public}s",  buf,  0x34u);
            p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
            uint64_t v5 = &OBJC_METACLASS___CLPrivacyManager.vtable;
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            uint64_t v129 = qword_101934878;
            int v131 = v167;
            v130 = v168;
            uint64_t v132 = *(void *)(a4 + 24);
            int v133 = *(char *)(a4 + 47);
            sub_100FE370C(a4);
            if (v133 >= 0) {
              uint64_t v134 = a4 + 24;
            }
            else {
              uint64_t v134 = v132;
            }
            uint64_t v137 = *(void *)(a4 + 104);
            uint64_t v136 = a4 + 104;
            uint64_t v135 = v137;
            int v138 = *(char *)(v136 - 33);
            uint64_t v141 = *(void *)(v136 - 56);
            uint64_t v140 = v136 - 56;
            uint64_t v139 = v141;
            if (v138 >= 0) {
              uint64_t v139 = v140;
            }
            int v142 = v170;
            LODWORD(v176[0]) = 134219010;
            if (v171 < 0) {
              int v142 = (void **)v170[0];
            }
            *(uint64_t *)((char *)v176 + 4) = 0xEF7BDEF7BDEF7BDFLL * (((char *)v130 - (char *)v131) >> 3);
            WORD2(v176[1]) = 2082;
            *(uint64_t *)((char *)&v176[1] + 6) = v134;
            HIWORD(v176[2]) = 2082;
            uint64_t v177 = v135;
            __int16 v178 = 2082;
            uint64_t v179 = v139;
            __int16 v180 = 2082;
            v181 = v142;
            LODWORD(v154) = 52;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v129,  2LL,  "kNotificationAuthorization, %lu, fences for, exec, %{public}s, bundleId, %{public}s, bundlePath, %{public} s, clientKey, %{public}s",  v176);
            v144 = (uint8_t *)v143;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, co nst CLClientManager_Type::NotificationData &)",  "%s\n",  v143);
            if (v144 != buf) {
              free(v144);
            }
            p_vtable = (void *)(&OBJC_METACLASS___CLPrivacyManager + 24);
          }

          memset(v176, 0, sizeof(v176));
          LOWORD(v177) = 0;
          uint64_t v163 = 0LL;
          v164 = 0LL;
          LOWORD(v166) = 0;
          unint64_t v165 = 0LL;
          uint64_t v6 = (uint64_t *)&v161;
          v161 = 0LL;
          uint64_t v162 = 0LL;
          uint64_t v159 = 0LL;
          v160 = (uint64_t *)&v161;
          v157 = &v158;
          v158 = 0LL;
          int v42 = sub_1009E5D74((uint64_t)a1, (uint64_t *)v170);
          __int16 v43 = v167;
          BOOL v44 = v168;
          if (v42)
          {
            if (v167 != v168)
            {
              do
              {
                sub_100158FAC((char *)buf, (__int128 *)v43, (__int128 *)&v43[2]);
                if (sub_1009EB514((uint64_t)&v160, (const void **)buf))
                {
                  uint64_t v45 = v176[1];
                  if (v176[1] >= (unint64_t)v176[2])
                  {
                    uint64_t v46 = sub_100669E18(v176, (__int128 *)v43);
                  }

                  else
                  {
                    sub_1002718F0((char *)v176[1], (__int128 *)v43);
                    uint64_t v46 = v45 + 248;
                  }

                  v176[1] = v46;
                }

                else if (sub_1009EB514((uint64_t)&v157, (const void **)buf))
                {
                  if (LODWORD(v43[7].__r_.__value_.__r.__words[2]) == -1)
                  {
                    sub_1012581C0( (uint64_t)&v172,  v47,  v48,  v49,  v50,  v51,  v52,  v53,  v153,  v154,  v155,  v156,  (uint64_t)v157,  (uint64_t)v158,  v159,  (uint64_t)v160,  (uint64_t)v161,  v162,  v163,  (uint64_t)v164,  v165,  v166,  (uint64_t)v167,  (uint64_t)v168);
LABEL_237:
                    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Core/Fence/CLFenceAuthorizationManager.mm",  v172,  "onClientNotification");
                    goto LABEL_238;
                  }

                  __int16 v54 = v164;
                  if ((unint64_t)v164 >= v165)
                  {
                    int v55 = (char *)sub_100669E18(&v163, (__int128 *)v43);
                  }

                  else
                  {
                    sub_1002718F0(v164, (__int128 *)v43);
                    int v55 = v54 + 248;
                  }

                  v164 = v55;
                }

                else
                {
                  if (sub_1009E30CC((uint64_t)a1, (uint64_t *)v43))
                  {
                    if (LODWORD(v43[7].__r_.__value_.__r.__words[2]) == -1)
                    {
                      sub_10125805C( (uint64_t)&v172,  v56,  v57,  v58,  v59,  v60,  v61,  v62,  v153,  v154,  v155,  v156,  (uint64_t)v157,  (uint64_t)v158,  v159,  (uint64_t)v160,  (uint64_t)v161,  v162,  v163,  (uint64_t)v164,  v165,  v166,  (uint64_t)v167,  (uint64_t)v168);
                      goto LABEL_237;
                    }

                    uint64_t v63 = v164;
                    if ((unint64_t)v164 >= v165)
                    {
                      int v64 = (char *)sub_100669E18(&v163, (__int128 *)v43);
                    }

                    else
                    {
                      sub_1002718F0(v164, (__int128 *)v43);
                      int v64 = v63 + 248;
                    }

                    v164 = v64;
                    __int16 v67 = (uint64_t **)&v157;
                  }

                  else
                  {
                    uint64_t v65 = v176[1];
                    if (v176[1] >= (unint64_t)v176[2])
                    {
                      uint64_t v66 = sub_100669E18(v176, (__int128 *)v43);
                    }

                    else
                    {
                      sub_1002718F0((char *)v176[1], (__int128 *)v43);
                      uint64_t v66 = v65 + 248;
                    }

                    v176[1] = v66;
                    __int16 v67 = &v160;
                  }

                  sub_1009EB6B8(v67, (const void **)buf, (__int128 *)buf);
                }

                if (SBYTE3(v186) < 0) {
                  operator delete(*(void **)__p);
                }
                __int16 v43 = (std::string *)((char *)v43 + 248);
              }

              while (v43 != v44);
            }
          }

          else
          {
            sub_1009EB890( (uint64_t)v176,  v167,  (__int128 *)v168,  0xEF7BDEF7BDEF7BDFLL * (((char *)v168 - (char *)v167) >> 3));
            uint64_t v104 = (__int128 *)v167;
            v105 = v168;
            while (v104 != (__int128 *)v105)
            {
              v106 = v104 + 3;
              sub_100158FAC((char *)buf, v104, v104 + 3);
              if (SBYTE3(v186) < 0) {
                operator delete(*(void **)__p);
              }
              uint64_t v104 = (__int128 *)((char *)v106 + 200);
            }
          }

          if (v176[1] == v176[0]) {
            goto LABEL_98;
          }
          if (p_vtable[270] == -1LL) {
            goto LABEL_85;
          }
          goto LABEL_239;
        case 4:
          p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
          if (a1[14]) {
            goto LABEL_130;
          }
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866908);
          }
          __int128 v86 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 136446210;
            *(void *)&uint8_t buf[4] = "kNotificationLocationServicesStatus";
            _os_log_impl( (void *)&_mh_execute_header,  v86,  OS_LOG_TYPE_FAULT,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            LODWORD(v176[0]) = 136446210;
            *(uint64_t *)((char *)v176 + 4) = (uint64_t)"kNotificationLocationServicesStatus";
            LODWORD(v154) = 12;
            uint64_t v5 = buf;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  v176);
            int v128 = (uint8_t *)v127;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, co nst CLClientManager_Type::NotificationData &)",  "%s\n",  v127);
            if (v128 != buf) {
              free(v128);
            }
          }

          if (a1[14])
          {
LABEL_130:
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            v94 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
            {
              if (*(_DWORD *)(a4 + 188) == 1) {
                uint64_t v95 = "enabled";
              }
              else {
                uint64_t v95 = "disabled";
              }
              *(_DWORD *)std::stringbuf::string_type buf = 136446210;
              *(void *)&uint8_t buf[4] = v95;
              _os_log_impl( (void *)&_mh_execute_header,  v94,  OS_LOG_TYPE_DEBUG,  "Location services is now %{public}s; sending enable/disable notification",
                buf,
                0xCu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101866908);
              }
              if (*(_DWORD *)(a4 + 188) == 1) {
                char v111 = "enabled";
              }
              else {
                char v111 = "disabled";
              }
              LODWORD(v176[0]) = 136446210;
              *(uint64_t *)((char *)v176 + 4) = (uint64_t)v111;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Location services is now %{public}s; sending enable/disable notification",
                v176,
                12);
              char v113 = (uint8_t *)v112;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v112);
              if (v113 != buf) {
                free(v113);
              }
            }

            *(_WORD *)__int128 __p = 256;
            memset(buf, 0, sizeof(buf));
            if (*(_DWORD *)(a4 + 188) != 1)
            {
              __p[1] = 0;
              sub_100697944(a1[14]);
            }

            LODWORD(v176[0]) = 3;
            (*(void (**)(uint64_t *, uint64_t *, uint8_t *, uint64_t, uint64_t, void))(*a1 + 152))( a1,  v176,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
            sub_1009E25E4((uint64_t)a1);
            v176[0] = (uint64_t)buf;
            int v96 = (void ***)v176;
            goto LABEL_158;
          }

          sub_101257ACC( (uint64_t)buf,  v87,  v88,  v89,  v90,  v91,  v92,  v93,  v153,  v154,  v155,  v156,  (uint64_t)v157,  (uint64_t)v158,  v159,  (uint64_t)v160,  (uint64_t)v161,  v162,  v163,  (uint64_t)v164,  v165,  v166,  (uint64_t)v167,  (uint64_t)v168);
LABEL_181:
          abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Core/Fence/CLFenceAuthorizationManager.mm",  *(_DWORD *)buf,  "onClientNotification");
          goto LABEL_238;
        default:
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866908);
          }
          int v97 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
          {
            int v98 = *a3;
            *(_DWORD *)std::stringbuf::string_type buf = 67240192;
            *(_DWORD *)&uint8_t buf[4] = v98;
            _os_log_impl( (void *)&_mh_execute_header,  v97,  OS_LOG_TYPE_DEFAULT,  "#Warning Got unknown client notification %{public}d",  buf,  8u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            int v99 = *a3;
            LODWORD(v176[0]) = 67240192;
            HIDWORD(v176[0]) = v99;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Got unknown client notification %{public}d",  v176,  8);
            v101 = (uint8_t *)v100;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, co nst CLClientManager_Type::NotificationData &)",  "%s\n",  v100);
            if (v101 != buf) {
              free(v101);
            }
          }

          goto LABEL_159;
      }
    }

    sub_101257938();
LABEL_238:
    __break(1u);
LABEL_239:
    dispatch_once(&qword_101934870, &stru_101866908);
LABEL_85:
    __int16 v68 = (os_log_s *)*((void *)v5 + 271);
    if (os_log_type_enabled(v68, OS_LOG_TYPE_DEBUG))
    {
      __int16 v69 = v170;
      if (v171 < 0) {
        __int16 v69 = (void **)v170[0];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 134349314;
      *(void *)&uint8_t buf[4] = 0xEF7BDEF7BDEF7BDFLL * ((v176[1] - v176[0]) >> 3);
      *(_WORD *)&_BYTE buf[12] = 2082;
      *(void *)&buf[14] = v69;
      _os_log_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_DEBUG,  "Fence: Removing denied fences,%{public}lu, for bundle,%{public}s.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (p_vtable[270] != -1LL) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      uint64_t v145 = *((void *)v5 + 271);
      v146 = v170;
      if (v171 < 0) {
        v146 = (void **)v170[0];
      }
      int v172 = 134349314;
      unint64_t v173 = 0xEF7BDEF7BDEF7BDFLL * ((v176[1] - v176[0]) >> 3);
      __int16 v174 = 2082;
      v175 = v146;
      LODWORD(v154) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v145,  2LL,  "Fence: Removing denied fences,%{public}lu, for bundle,%{public}s.",  &v172,  v154);
      __int16 v148 = (uint8_t *)v147;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CL ClientManager_Type::NotificationData &)",  "%s\n",  v147);
      if (v148 != buf) {
        free(v148);
      }
    }

    __int16 v70 = v160;
    if (v160 != v6)
    {
      do
      {
        sub_100697C58(a1[14], (std::string::size_type)(v70 + 4), (char *)v70 + 56);
        int v71 = (uint64_t *)v70[1];
        if (v71)
        {
          do
          {
            __int16 v72 = v71;
            int v71 = (uint64_t *)*v71;
          }

          while (v71);
        }

        else
        {
          do
          {
            __int16 v72 = (uint64_t *)v70[2];
            BOOL v73 = *v72 == (void)v70;
            __int16 v70 = v72;
          }

          while (!v73);
        }

        __int16 v70 = v72;
      }

      while (v72 != v6);
    }

    *(_DWORD *)std::stringbuf::string_type buf = 1;
    (*(void (**)(uint64_t *, uint8_t *, uint64_t *, void, uint64_t, void))(*a1 + 152))( a1,  buf,  v176,  0LL,  0xFFFFFFFFLL,  0LL);
    sub_1009E326C((uint64_t)a1, (__int128 *)v170, 0);
LABEL_98:
    if (v164 != (char *)v163)
    {
      if (p_vtable[270] != -1LL) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      __int16 v74 = (os_log_s *)*((void *)v5 + 271);
      if (os_log_type_enabled(v74, OS_LOG_TYPE_DEBUG))
      {
        int v75 = v170;
        if (v171 < 0) {
          int v75 = (void **)v170[0];
        }
        *(_DWORD *)std::stringbuf::string_type buf = 134349314;
        *(void *)&uint8_t buf[4] = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)&v164[-v163] >> 3);
        *(_WORD *)&_BYTE buf[12] = 2082;
        *(void *)&buf[14] = v75;
        _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_DEBUG,  "Fence: Adding authorized fences,%{public}lu, for bundle,%{public}s.",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (p_vtable[270] != -1LL) {
          dispatch_once(&qword_101934870, &stru_101866908);
        }
        uint64_t v149 = *((void *)v5 + 271);
        __int16 v150 = v170;
        if (v171 < 0) {
          __int16 v150 = (void **)v170[0];
        }
        int v172 = 134349314;
        unint64_t v173 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)&v164[-v163] >> 3);
        __int16 v174 = 2082;
        v175 = v150;
        LODWORD(v154) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v149,  2LL,  "Fence: Adding authorized fences,%{public}lu, for bundle,%{public}s.",  &v172,  v154);
        v152 = (uint8_t *)v151;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v151);
        if (v152 != buf) {
          free(v152);
        }
      }

      *(_DWORD *)std::stringbuf::string_type buf = 0;
      (*(void (**)(uint64_t *, uint8_t *, uint64_t *, void, uint64_t, void))(*a1 + 152))( a1,  buf,  &v163,  0LL,  0xFFFFFFFFLL,  0LL);
      sub_1009E326C((uint64_t)a1, (__int128 *)v170, 1);
    }

    sub_1009EB4CC((uint64_t)&v157, v158);
    sub_1009EB4CC((uint64_t)&v160, v161);
    *(void *)std::stringbuf::string_type buf = &v163;
    sub_1006684D8((void ***)buf);
    *(void *)std::stringbuf::string_type buf = v176;
    sub_1006684D8((void ***)buf);
LABEL_157:
    *(void *)std::stringbuf::string_type buf = &v167;
    int v96 = (void ***)buf;
LABEL_158:
    sub_1006684D8(v96);
LABEL_159:
    if (v171 < 0)
    {
      uint64_t v23 = v170[0];
      goto LABEL_161;
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    __int16 v20 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      int v21 = *((unsigned __int8 *)a1 + 136);
      sub_100FE3FB4(a4, (uint64_t)v176);
      __int16 v22 = v176[2] >= 0 ? v176 : (uint64_t *)v176[0];
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 1026;
      *(_DWORD *)&_BYTE buf[20] = v21;
      *(_WORD *)__int128 __p = 2082;
      *(void *)&__p[2] = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Ignoring notification, WasUnlockedSinceBoot:%{public}hhd, client:%{public, loca tion:escape_only}s}",  buf,  0x22u);
      if (SHIBYTE(v176[2]) < 0)
      {
        uint64_t v23 = (void *)v176[0];
LABEL_161:
        operator delete(v23);
      }
    }
  }

void sub_1009E5638( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, void *a14, uint64_t a15, char a16, void *a17, uint64_t a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, void *__p, uint64_t a27, int a28, __int16 a29, char a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, char *a44)
{
  a44 = &a19;
  sub_1006684D8((void ***)&a44);
  a44 = (char *)&a36;
  sub_1006684D8((void ***)&a44);
  a44 = &a23;
  sub_1006684D8((void ***)&a44);
  if (a31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1009E5770(uint64_t *a1, char *a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf) = 136315138;
    *(void *)((char *)&buf + 4) = "removeFences";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)&buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    LODWORD(__p) = 136315138;
    *(void *)((char *)&__p + 4) = "removeFences";
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "%s",  (const char *)&__p);
    uint64_t v24 = (char *)v23;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceAuthorizationManager::removeFences(const std::string &)",  "%s\n",  v23);
  }

  if (a1[14])
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      if (a2[23] >= 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = *(char **)a2;
      }
      LODWORD(buf) = 136446210;
      *(void *)((char *)&buf + 4) = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Removing all fences for %{public}s",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      if (a2[23] >= 0) {
        __int16 v25 = a2;
      }
      else {
        __int16 v25 = *(char **)a2;
      }
      LODWORD(__p) = 136446210;
      *(void *)((char *)&__p + 4) = v25;
      LODWORD(v30) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Removing all fences for %{public}s",  &__p,  v30);
      uint64_t v27 = (char *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceAuthorizationManager::removeFences(const std::string &)",  "%s\n",  v26);
    }

    __int128 buf = 0uLL;
    __int16 v35 = 0;
    uint64_t v34 = 0LL;
    sub_100695168(a1[14], a2, (uint64_t *)&buf);
    __int128 __p = 0uLL;
    uint64_t v32 = 0LL;
    uint64_t v8 = *((void *)&buf + 1);
    for (uint64_t i = buf; i != v8; i += 248LL)
    {
      int v9 = sub_100922F28(i);
      int v10 = v9;
      uint64_t v11 = (char *)*((void *)&__p + 1);
      if (*((void *)&__p + 1) >= (unint64_t)v32)
      {
        uint64_t v13 = (char *)__p;
        uint64_t v14 = (uint64_t)(*((void *)&__p + 1) - __p) >> 2;
        unint64_t v15 = v14 + 1;
        uint64_t v16 = (uint64_t)&v32[-__p];
        else {
          unint64_t v17 = v15;
        }
        if (v17)
        {
          uint64_t v18 = (char *)sub_10000956C((uint64_t)&v32, v17);
          uint64_t v11 = (char *)*((void *)&__p + 1);
          uint64_t v13 = (char *)__p;
        }

        else
        {
          uint64_t v18 = 0LL;
        }

        __int128 v19 = &v18[4 * v14];
        *(_DWORD *)__int128 v19 = v10;
        uint64_t v12 = v19 + 4;
        while (v11 != v13)
        {
          int v20 = *((_DWORD *)v11 - 1);
          v11 -= 4;
          *((_DWORD *)v19 - 1) = v20;
          v19 -= 4;
        }

        *(void *)&__int128 __p = v19;
        *((void *)&__p + 1) = v12;
        uint64_t v32 = &v18[4 * v17];
        if (v13) {
          operator delete(v13);
        }
      }

      else
      {
        **((_DWORD **)&__p + 1) = v9;
        uint64_t v12 = v11 + 4;
      }

      *((void *)&__p + 1) = v12;
    }

    sub_100690910(a1[14], a2, (int **)&__p);
    LOBYTE(v35) = 1;
    HIDWORD(v30) = 1;
    (*(void (**)(uint64_t *, char *, __int128 *, void, uint64_t, void))(*a1 + 152))( a1,  (char *)&v30 + 4,  &buf,  0LL,  0xFFFFFFFFLL,  0LL);
    if ((void)__p)
    {
      *((void *)&__p + 1) = __p;
      operator delete((void *)__p);
    }

    *(void *)&__int128 __p = &buf;
    sub_1006684D8((void ***)&__p);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    int v21 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_FAULT,  "Fence: removeFences, can't remove fence before the first unlock",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      LOWORD(__p) = 0;
      LODWORD(v30) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: removeFences, can't remove fence before the first unlock",  &__p,  v30);
      uint64_t v29 = (char *)v28;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLFenceAuthorizationManager::removeFences(const std::string &)",  "%s\n",  v28);
    }
  }

  return 0LL;
}

void sub_1009E5D2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *__p, char *a12, uint64_t a13, uint64_t a14, char a15)
{
  if (__p)
  {
    a12 = __p;
    operator delete(__p);
  }

  __int128 __p = &a15;
  sub_1006684D8((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1009E5D74(uint64_t a1, uint64_t *a2)
{
  if ((*((char *)a2 + 23) & 0x80000000) == 0)
  {
    uint64_t v3 = a2;
    if (!*((_BYTE *)a2 + 23)) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v4 = (uint64_t)objc_msgSend( objc_msgSend( *(id *)(a1 + 176),  "syncgetAuthorizationContextIfClientIsNonZonal:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v3)),  "isAuthorizedForServiceType:",  14);
    goto LABEL_8;
  }

  if (a2[1])
  {
    uint64_t v3 = (uint64_t *)*a2;
    goto LABEL_6;
  }

void sub_1009E5ECC(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  if (!*a3)
  {
    int v6 = *a4;
    if (*(void *)(a1 + 112)) {
      BOOL v7 = 0;
    }
    else {
      BOOL v7 = v6 == 1;
    }
    int v8 = v7;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    __int16 v9 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v10 = *a4;
      int v11 = *(unsigned __int8 *)(a1 + 136);
      *(_DWORD *)__int128 buf = 67240960;
      *(_DWORD *)&uint8_t buf[4] = v10;
      LOWORD(v26) = 1026;
      *(_DWORD *)((char *)&v26 + 2) = v11;
      HIWORD(v26) = 1026;
      LODWORD(v27[0]) = v6 == 1;
      WORD2(v27[0]) = 1026;
      *(_DWORD *)((char *)v27 + 6) = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "Fence: notification, kNotificationEncryptedDataAvailability, data.availability, %{public}d, unlockedSinceBoot, f rom, %{public}d, to, %{public}d, isStartMonitoring, %{public}d",  buf,  0x1Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      int v14 = *a4;
      int v15 = *(unsigned __int8 *)(a1 + 136);
      LODWORD(v18) = 67240960;
      HIDWORD(v18) = v14;
      __int16 v19 = 1026;
      int v20 = v15;
      __int16 v21 = 1026;
      BOOL v22 = v6 == 1;
      __int16 v23 = 1026;
      int v24 = v8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: notification, kNotificationEncryptedDataAvailability, data.availability, %{public}d, unlockedSinceBoot, f rom, %{public}d, to, %{public}d, isStartMonitoring, %{public}d",  &v18,  26);
      unint64_t v17 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notifica tion &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }

    if (*(_BYTE *)(a1 + 136)) {
      BOOL v12 = 1;
    }
    else {
      BOOL v12 = v6 == 1;
    }
    int v13 = v12;
    *(_BYTE *)(a1 + 136) = v13;
    if (!*(void *)(a1 + 112) && v13) {
      sub_1009E1D84(a1, (uint64_t)"kNotificationEncryptedDataAvailability");
    }
    if (v8)
    {
      *(void *)__int128 buf = 0LL;
      uint64_t v26 = 0LL;
      memset(v27, 0, 10);
      BYTE1(v27[1]) = sub_1002958AC() == 1;
      LODWORD(v18) = 3;
      (*(void (**)(uint64_t, uint8_t **, uint8_t *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v18,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
      sub_1009E25E4(a1);
      uint64_t v18 = buf;
      sub_1006684D8((void ***)&v18);
    }
  }

void sub_1009E6188( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  a11 = (void **)&a15;
  sub_1006684D8(&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_1009E61B0(uint64_t *a1, uint64_t a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 136315138;
    *(void *)&uint8_t buf[4] = "addFence";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    *(_DWORD *)__int128 __dst = 136315138;
    *(void *)&__dst[4] = "addFence";
    _os_log_send_and_compose_impl(2LL, 0LL, buf, 1628LL, &_mh_execute_header, qword_101934878, 0LL, "%s", __dst);
    uint64_t v18 = (char *)v17;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceAuthorizationManager::addFence(const CLFenceManager_Type::Fence &)",  "%s\n",  v17);
    if (v18 != buf) {
      free(v18);
    }
  }

  if (a1[14])
  {
    if (*(void *)(a2 + 232) == *(void *)(a2 + 224))
    {
      if (qword_101934A90 != -1) {
        dispatch_once(&qword_101934A90, &stru_101866928);
      }
      uint64_t v5 = (os_log_s *)qword_101934A98;
      if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v6 = *(void *)(a2 + 72);
        uint64_t v7 = *(void *)(a2 + 80);
        uint64_t v8 = *(void *)(a2 + 96);
        else {
          uint64_t v9 = *(void *)a2;
        }
        else {
          uint64_t v10 = *(void *)(a2 + 24);
        }
        *(_DWORD *)__int128 buf = 136316674;
        *(void *)&uint8_t buf[4] = "Fence";
        *(_WORD *)&_BYTE buf[12] = 1024;
        *(_DWORD *)&buf[14] = 1;
        *(_WORD *)&_BYTE buf[18] = 2048;
        *(void *)&_BYTE buf[20] = v6;
        __int16 v54 = 2048;
        uint64_t v55 = v7;
        __int16 v56 = 2048;
        uint64_t v57 = v8;
        __int16 v58 = 2080;
        uint64_t v59 = v9;
        __int16 v60 = 2080;
        uint64_t v61 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Add,1,BundleId,%s,Name,%s,",  buf,  0x44u);
      }

      if (sub_1002921D0(117, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A90 != -1) {
          dispatch_once(&qword_101934A90, &stru_101866928);
        }
        uint64_t v25 = *(void *)(a2 + 72);
        uint64_t v26 = *(void *)(a2 + 80);
        uint64_t v27 = *(void *)(a2 + 96);
        else {
          uint64_t v28 = *(void *)a2;
        }
        else {
          uint64_t v29 = *(void *)(a2 + 24);
        }
        *(_DWORD *)__int128 __dst = 136316674;
        *(void *)&__dst[4] = "Fence";
        __int16 v37 = 1024;
        int v38 = 1;
        __int16 v39 = 2048;
        *(void *)uint64_t v40 = v25;
        *(_WORD *)&v40[8] = 2048;
        *(void *)&v40[10] = v26;
        __int16 v41 = 2048;
        uint64_t v42 = v27;
        *(_WORD *)__int128 __p = 2080;
        *(void *)&__p[2] = v28;
        __int16 v44 = 2080;
        uint64_t v45 = v29;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A98,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Add,1,BundleId,%s,Name,%s,",  __dst,  68,  *(double *)&v33.__r_.__value_.__l.__data_,  *(double *)&v33.__r_.__value_.__l.__size_,  *(double *)&v33.__r_.__value_.__l.__cap_,  v34,  *(const char **)v35);
        uint64_t v31 = (char *)v30;
        sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "BOOL CLFenceAuthorizationManager::addFence(const CLFenceManager_Type::Fence &)",  "%s\n",  v30);
        if (v31 != buf) {
          free(v31);
        }
      }
    }

    int v11 = sub_100922F28(a2);
    uint64_t v12 = sub_10068F2DC(a1[14], a2, v11);
    if ((_DWORD)v12)
    {
      sub_1002718F0(__dst, (__int128 *)a2);
      int v47 = v11;
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      int v13 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        sub_100923668(a2, (std::stringbuf::string_type *)buf);
        int v14 = buf[23] >= 0 ? buf : *(_BYTE **)buf;
        LODWORD(v33.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)v33.__r_.__value_.__r.__words + 4) = (std::string::size_type)v14;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "Adding fence to db, %{private}s",  (uint8_t *)&v33,  0xCu);
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866908);
        }
        uint64_t v21 = qword_101934878;
        sub_100923668(a2, &v33);
        if ((v33.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          BOOL v22 = &v33;
        }
        else {
          BOOL v22 = (std::stringbuf::string_type *)v33.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)__int16 v35 = 136380675;
        *(void *)&v35[4] = v22;
        LODWORD(v32) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v21,  2LL,  "Adding fence to db, %{private}s",  v35,  v32);
        int v24 = v23;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceAuthorizationManager::addFence(const CLFenceManager_Type::Fence &)",  "%s\n",  v24);
        if (v24 != buf) {
          free(v24);
        }
      }

      memset(buf, 0, 26);
      *(void *)&uint8_t buf[8] = sub_100669E18((uint64_t *)buf, (__int128 *)__dst);
      buf[25] = sub_1002958AC() == 1;
      LODWORD(v33.__r_.__value_.__l.__data_) = 0;
      (*(void (**)(uint64_t *, std::stringbuf::string_type *, _BYTE *, void, uint64_t, void))(*a1 + 152))( a1,  &v33,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
      sub_1009E326C((uint64_t)a1, (__int128 *)a2, 1);
      v33.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
      sub_1006684D8((void ***)&v33);
      if (v51)
      {
        uint64_t v52 = v51;
        operator delete(v51);
      }

      if (v49 < 0) {
        operator delete(v48);
      }
      if (v46 < 0) {
        operator delete(*(void **)__p);
      }
      if (SHIBYTE(v42) < 0) {
        operator delete(*(void **)&v40[4]);
      }
      if ((v40[3] & 0x80000000) != 0) {
        operator delete(*(void **)__dst);
      }
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    int v15 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_FAULT,  "Fence: addFence, can't add fence before the first unlock",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      *(_WORD *)__int128 __dst = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: addFence, can't add fence before the first unlock",  __dst,  2);
      int v20 = (char *)v19;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLFenceAuthorizationManager::addFence(const CLFenceManager_Type::Fence &)",  "%s\n",  v19);
      if (v20 != buf) {
        free(v20);
      }
    }

    return 0LL;
  }

  return v12;
}

void sub_1009E69A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

BOOL sub_1009E69F8(uint64_t a1, std::string::size_type a2, char *a3, std::string::size_type a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 112);
  if (v5) {
    return sub_100691F34(v5, a3, a4, a2, a5);
  }
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v7 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Fence: getFence, can't add/remove fence before the first unlock",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    v10[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: getFence, can't add/remove fence before the first unlock",  v10,  2);
    uint64_t v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLFenceAuthorizationManager::getFence(const std::string &, const std::string &, const std::string &, CLFenceM anager_Type::Fence &)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  return 0LL;
}

uint64_t sub_1009E6BC4(uint64_t a1, char *a2)
{
  uint64_t v4 = *(void *)(a1 + 112);
  if (!v4)
  {
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934870 != -1) {
      goto LABEL_9;
    }
    while (1)
    {
      uint64_t v6 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)__int128 buf = 136446210;
        int v14 = "numFences";
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (p_vtable[270] != -1LL) {
          dispatch_once(&qword_101934870, &stru_101866908);
        }
        int v11 = 136446210;
        uint64_t v12 = "numFences";
        LODWORD(v10) = 12;
        p_vtable = buf;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: sMessage, %{public}s, fFenceDatabase is NULL",  &v11,  v10);
        uint64_t v9 = (uint8_t *)v8;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "int CLFenceAuthorizationManager::numFences(const std::string &, BOOL)",  "%s\n",  v8);
        if (v9 != buf) {
          free(v9);
        }
      }

      uint64_t v4 = *(void *)(a1 + 112);
      if (v4) {
        break;
      }
      sub_101258324();
LABEL_9:
      dispatch_once(&qword_101934870, &stru_101866908);
    }
  }

  return sub_100696BD0(v4, a2);
}

void sub_1009E6D9C(uint64_t a1, void **a2, int a3)
{
  p_vtable = a2;
  uint64_t v7 = *a2;
  uint64_t v6 = (uint64_t)a2[1];
  if ((void *)v6 != *a2)
  {
    do
    {
      v6 -= 248LL;
      sub_10066855C((uint64_t)(p_vtable + 2), v6);
    }

    while ((void *)v6 != v7);
  }

  p_vtable[1] = v7;
  if (!*(void *)(a1 + 112))
  {
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934870 != -1) {
      goto LABEL_53;
    }
    goto LABEL_8;
  }

  if (sub_1002958AC() == 1)
  {
    if (a3)
    {
      uint64_t v8 = *(void **)(a1 + 176);
      v31[0] = _NSConcreteStackBlock;
      v31[1] = 3221225472LL;
      v31[2] = sub_1009E74B4;
      v31[3] = &unk_10181D3D0;
      v31[4] = a1;
      [v8 notifyWhenCacheIsPopulatedWithReply:v31];
      return;
    }

    sub_100690D5C(*(void *)(a1 + 112), (uint64_t *)p_vtable);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    int v13 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v14 = 0xEF7BDEF7BDEF7BDFLL * (((_BYTE *)p_vtable[1] - (_BYTE *)*p_vtable) >> 3);
      *(_DWORD *)__int128 buf = 134349056;
      unint64_t v37 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "Retrieved %{public}ld fences from database",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      unint64_t v27 = 0xEF7BDEF7BDEF7BDFLL * (((_BYTE *)p_vtable[1] - (_BYTE *)*p_vtable) >> 3);
      int v32 = 134349056;
      unint64_t v33 = v27;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Retrieved %{public}ld fences from database",  &v32,  12);
      uint64_t v29 = (uint8_t *)v28;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::getAuthorizedFences(std::vector<CLFenceManager_Type::Fence> &, BOOL)",  "%s\n",  v28);
      if (v29 != buf) {
        free(v29);
      }
    }

    uint64_t v15 = (uint64_t)*p_vtable;
    if (*p_vtable != p_vtable[1])
    {
      do
      {
        if ((sub_1009E30CC(a1, (uint64_t *)v15) & 1) != 0)
        {
          if (*(_DWORD *)(v15 + 184) == -1)
          {
            sub_1012584B0();
            __break(1u);
LABEL_53:
            dispatch_once(&qword_101934870, &stru_101866908);
LABEL_8:
            uint64_t v9 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)__int128 buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "Fence: getAuthorizedFences, no region monitoring before the first unlock",  buf,  2u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              LOWORD(v32) = 0;
              LODWORD(v30) = 2;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: getAuthorizedFences, no region monitoring before the first unlock",  &v32,  v30);
              int v11 = (uint8_t *)v10;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::getAuthorizedFences(std::vector<CLFenceManager_Type::Fence> &, BOOL)",  "%s\n",  v10);
              goto LABEL_57;
            }

            return;
          }

          v15 += 248LL;
          uint64_t v16 = p_vtable[1];
        }

        else
        {
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866908);
          }
          unint64_t v17 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v18 = v15;
            __int16 v19 = (void *)(v15 + 24);
            *(_DWORD *)__int128 buf = 136446467;
            unint64_t v37 = v18;
            __int16 v38 = 2081;
            __int16 v39 = v19;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "%{public}s/%{private}s is not authorized; removing from authorized fences list",
              buf,
              0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866908);
            }
            uint64_t v22 = v15;
            __int16 v23 = (void *)(v15 + 24);
            int v32 = 136446467;
            unint64_t v33 = v22;
            __int16 v34 = 2081;
            __int16 v35 = v23;
            LODWORD(v30) = 22;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "%{public}s/%{private}s is not authorized; removing from authorized fences list",
              &v32,
              v30);
            uint64_t v25 = (uint8_t *)v24;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::getAuthorizedFences(std::vector<CLFenceManager_Type::Fence> &, BOOL)",  "%s\n",  v24);
            if (v25 != buf) {
              free(v25);
            }
          }

          sub_1009EBB90((__int128 *)(v15 + 248), (__int128 *)p_vtable[1], v15);
          uint64_t v16 = v20;
          p_vtable[1] = v16;
        }
      }

      while ((void *)v15 != v16);
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v12 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Location services are disabled; no monitored fences",
        buf,
        2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      LOWORD(v32) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Location services are disabled; no monitored fences",
        &v32,
        2);
      int v11 = (uint8_t *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::getAuthorizedFences(std::vector<CLFenceManager_Type::Fence> &, BOOL)",  "%s\n",  v26);
LABEL_57:
      if (v11 != buf) {
        free(v11);
      }
    }
  }

void sub_1009E74B4(uint64_t a1)
{
}

void sub_1009E74BC(uint64_t a1, char *a2, uint64_t *a3)
{
  uint64_t v7 = *a3;
  uint64_t v6 = a3[1];
  if (v6 != *a3)
  {
    do
    {
      v6 -= 248LL;
      sub_10066855C((uint64_t)(a3 + 2), v6);
    }

    while (v6 != v7);
  }

  a3[1] = v7;
  uint64_t v8 = *(void *)(a1 + 112);
  if (v8)
  {
    sub_100694004(v8, a2, a3);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v9 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "Fence: getFencesForBundle, no region monitoring before the first unlock",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      v12[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: getFencesForBundle, no region monitoring before the first unlock",  v12,  2);
      int v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::getFencesForBundle(const std::string &, std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

uint64_t sub_1009E76D0(uint64_t a1, char *a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    int v8 = 68289026;
    int v9 = 0;
    __int16 v10 = 2082;
    int v11 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Fence: getCountOfAllFencesForBundle}",  (uint8_t *)&v8,  0x12u);
  }

  uint64_t v5 = *(void *)(a1 + 112);
  if (v5) {
    return sub_100696F80(v5, a2);
  }
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v7 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v8 = 68289026;
    int v9 = 0;
    __int16 v10 = 2082;
    int v11 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Fence: getCountOfAllFencesForBundle, no region monitoring before the first unlock}",  (uint8_t *)&v8,  0x12u);
  }

  return 0x7FFFFFFFLL;
}

void sub_1009E7854(uint64_t a1, char *a2, uint64_t *a3)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v6 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 136315138;
    uint64_t v18 = "getAllFencesForBundle";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    int v15 = 136315138;
    uint64_t v16 = "getAllFencesForBundle";
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "%s",  (const char *)&v15);
    uint64_t v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::getAllFencesForBundle(const std::string &, std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  uint64_t v8 = *a3;
  uint64_t v7 = a3[1];
  if (v7 != *a3)
  {
    do
    {
      v7 -= 248LL;
      sub_10066855C((uint64_t)(a3 + 2), v7);
    }

    while (v7 != v8);
  }

  a3[1] = v8;
  uint64_t v9 = *(void *)(a1 + 112);
  if (v9)
  {
    sub_100695168(v9, a2, a3);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    __int16 v10 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "Fence: getAllFencesForBundle, no region monitoring before the first unlock",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      LOWORD(v15) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: getAllFencesForBundle, no region monitoring before the first unlock",  &v15,  2);
      unint64_t v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::getAllFencesForBundle(const std::string &, std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

void sub_1009E7B94(uint64_t a1, uint64_t *a2, _BYTE *a3, _BYTE *a4)
{
  uint64_t v5 = *(void *)(a1 + 112);
  if (v5)
  {
    *a3 = 0;
    *a4 = 0;
    uint64_t v9 = a2 + 6;
    __int16 v10 = a2 + 3;
    BOOL v11 = sub_100696344(v5, (char *)a2, (std::string::size_type)(a2 + 6), a2 + 3);
    *a3 = v11;
    if (v11) {
      *a4 = sub_1009E30CC(a1, a2);
    }
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v12 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      else {
        int v13 = (uint64_t *)a2[6];
      }
      else {
        unint64_t v14 = (uint64_t *)*a2;
      }
      else {
        int v15 = (uint64_t *)a2[3];
      }
      int v16 = *a3;
      int v17 = *a4;
      *(_DWORD *)__int128 buf = 136447235;
      uint64_t v31 = v13;
      __int16 v32 = 2082;
      unint64_t v33 = v14;
      __int16 v34 = 2081;
      __int16 v35 = v15;
      __int16 v36 = 1024;
      int v37 = v16;
      __int16 v38 = 1024;
      int v39 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "isFenceRegisteredAndAuthorized, [%{public}s]/%{public}s/%{private}s, isRegistered, %d, isAuthorized, %d",  buf,  0x2Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      else {
        uint64_t v18 = (uint64_t *)a2[6];
      }
      else {
        __int16 v19 = (uint64_t *)*a2;
      }
      else {
        uint64_t v20 = a2[3];
      }
      int v21 = *a3;
      int v22 = *a4;
      *(_DWORD *)uint64_t v26 = 136447235;
      *(void *)&v26[4] = v18;
      *(_WORD *)&v26[12] = 2082;
      *(void *)&v26[14] = v19;
      *(_WORD *)&v26[22] = 2081;
      LOWORD(v28) = 1024;
      *(_DWORD *)((char *)&v28 + 2) = v21;
      HIWORD(v28) = 1024;
      LODWORD(v29) = v22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "isFenceRegisteredAndAuthorized, [%{public}s]/%{public}s/%{private}s, isRegistered, %d, isAuthorized, %d",  v26,  44,  *(_OWORD *)v26,  *(void *)&v26[16],  v20,  v28,  v29);
LABEL_39:
      uint64_t v25 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::isFenceRegisteredAndAuthorized(const CLFenceManager_Type::Fence &, BOOL &, BOOL &)",  "%s\n",  v23);
      if (v25 != buf) {
        free(v25);
      }
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    int v24 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "Fence: isFenceRegisteredAndAuthorized, no region monitoring before the first unlock",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      *(_WORD *)uint64_t v26 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: isFenceRegisteredAndAuthorized, no region monitoring before the first unlock",  v26,  2,  *(_OWORD *)v26,  *(void *)&v26[16],  v27,  v28,  v29);
      goto LABEL_39;
    }
  }

void sub_1009E7F30( uint64_t a1, std::string::size_type a2, std::string::size_type a3, std::string::size_type a4, double *a5)
{
  uint64_t v5 = *(void *)(a1 + 112);
  if (v5)
  {
    sub_1006972B0(v5, a2, a3, a4, *a5);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Fence: lastDownloadTimeChanged, no region monitoring before the first unlock",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      v9[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: lastDownloadTimeChanged, no region monitoring before the first unlock",  v9,  2);
      uint64_t v8 = (uint8_t *)v7;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::lastDownloadTimeChanged(const std::string &, const std::string &, const std::s tring &, const double &)",  "%s\n",  v7);
      if (v8 != buf) {
        free(v8);
      }
    }
  }

void sub_1009E80EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 112);
  if (v1)
  {
    sub_100697944(v1);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v2 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Fence: markDataDownloadInvalid, no region monitoring before the first unlock",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      v5[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: markDataDownloadInvalid, no region monitoring before the first unlock",  v5,  2);
      uint64_t v4 = (uint8_t *)v3;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceAuthorizationManager::markDataDownloadInvalid()", "%s\n", v3);
      if (v4 != buf) {
        free(v4);
      }
    }
  }

id sub_1009E82A4(uint64_t a1, uint64_t *a2)
{
  else {
    uint64_t v3 = (uint64_t *)*a2;
  }
  id v4 = objc_msgSend( objc_msgSend( *(id *)(a1 + 176),  "syncgetAuthorizationContextIfClientIsNonZonal:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v3)),  "isAuthorizedForServiceType:",  1);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v5 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    else {
      uint64_t v6 = (uint64_t *)*a2;
    }
    v8[0] = 68289538;
    v8[1] = 0;
    __int16 v9 = 2082;
    __int16 v10 = "";
    __int16 v11 = 2082;
    uint64_t v12 = v6;
    __int16 v13 = 1026;
    int v14 = (int)v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Fence: isClientAuthorized, key:%{public, location:escape_only}s, authorized:%{public}hhd}",  (uint8_t *)v8,  0x22u);
  }

  return v4;
}

uint64_t sub_1009E83E4(uint64_t a1, char *a2)
{
  if (*(void *)(a1 + 112))
  {
    int v4 = sub_1009E6BC4(a1, a2);
    unsigned int v5 = sub_1009E82A4(a1, (uint64_t *)a2);
    unsigned int v6 = v5;
    if (v4 > 0) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = 0LL;
    }
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    uint64_t v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      if (a2[23] >= 0) {
        __int16 v9 = a2;
      }
      else {
        __int16 v9 = *(char **)a2;
      }
      *(_DWORD *)__int128 buf = 67240706;
      int v23 = v4;
      __int16 v24 = 2082;
      uint64_t v25 = v9;
      __int16 v26 = 1026;
      unsigned int v27 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "%{public}d fences for %{public}s; authorized %{public}d",
        buf,
        0x18u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      if (a2[23] >= 0) {
        __int16 v10 = a2;
      }
      else {
        __int16 v10 = *(char **)a2;
      }
      v17[0] = 67240706;
      v17[1] = v4;
      __int16 v18 = 2082;
      __int16 v19 = v10;
      __int16 v20 = 1026;
      unsigned int v21 = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "%{public}d fences for %{public}s; authorized %{public}d",
        v17,
        24);
      uint64_t v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceAuthorizationManager::hasMonitoredFences(const std::string &)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    __int16 v13 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "Fence: hasMonitoredFences, no region monitoring before the first unlock",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      LOWORD(v17[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: hasMonitoredFences, no region monitoring before the first unlock",  v17,  2);
      int v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceAuthorizationManager::hasMonitoredFences(const std::string &)",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }

    return 0LL;
  }

  return v7;
}

void sub_1009E874C(uint64_t a1, std::string *a2, int a3)
{
  uint64_t v6 = sub_1009E83E4(a1, (char *)a2);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866908);
  }
  uint64_t v7 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 buf = 136446722;
    __int16 v43 = v8;
    __int16 v44 = 1026;
    int v45 = v6;
    __int16 v46 = 1026;
    int v47 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%{public}s: hasMonitoredFences %{public}d, monitoringAdded %{public}d",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v16 = a2;
    }
    else {
      int v16 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    int v36 = 136446722;
    int v37 = v16;
    __int16 v38 = 1026;
    int v39 = v6;
    __int16 v40 = 1026;
    int v41 = a3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "%{public}s: hasMonitoredFences %{public}d, monitoringAdded %{public}d",  &v36,  24);
    __int16 v18 = (uint8_t *)v17;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::checkClientStatusInternal(const std::string &, BOOL)",  "%s\n",  v17);
    if (v18 != buf) {
      free(v18);
    }
  }

  if ((_DWORD)v6)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    __int16 v9 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v10 = a2;
      }
      else {
        __int16 v10 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)__int128 buf = 136446210;
      __int16 v43 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "%{public}s is now a fence client", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v11 = a2;
      }
      else {
        __int16 v11 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      int v36 = 136446210;
      int v37 = v11;
      LODWORD(v21) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "%{public}s is now a fence client",  &v36,  v21);
      __int16 v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::checkClientStatusInternal(const std::string &, BOOL)",  "%s\n",  v12);
LABEL_60:
      if (v13 != buf) {
        free(v13);
      }
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866908);
    }
    int v14 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v15 = a2;
      }
      else {
        int v15 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)__int128 buf = 136446210;
      __int16 v43 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "%{public}s is no longer a fence client",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866908);
      }
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v19 = a2;
      }
      else {
        __int16 v19 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      int v36 = 136446210;
      int v37 = v19;
      LODWORD(v21) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "%{public}s is no longer a fence client",  &v36,  v21);
      __int16 v13 = (uint8_t *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceAuthorizationManager::checkClientStatusInternal(const std::string &, BOOL)",  "%s\n",  v20);
      goto LABEL_60;
    }
  }

  sub_100575184(*(void *)(a1 + 144), (__int128 *)v22, 1LL, v6);
  if (v35 < 0) {
    operator delete(__p);
  }
  if (v33 < 0) {
    operator delete(v32);
  }
  if (v31 < 0) {
    operator delete(v30);
  }
  if (v29 < 0) {
    operator delete(v28);
  }
  if (v27 < 0) {
    operator delete(v26);
  }
  if (v25 < 0) {
    operator delete(v24);
  }
  if (v23 < 0) {
    operator delete(v22[0]);
  }
}

void sub_1009E8CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1009E8CCC(uint64_t a1)
{
}

uint64_t sub_1009E8CE0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  __int16 v10 = operator new(0x30uLL);
  uint64_t result = sub_1009E8D64((uint64_t)v10, a1, a4, a2, a3);
  void *v10 = off_101866870;
  *a5 = v10;
  return result;
}

void sub_1009E8D50(_Unwind_Exception *a1)
{
}

uint64_t sub_1009E8D64(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = &off_101866AA8;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = a5;
  [a3 silo];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 80LL))(a2);
  __int16 v19 = &OBJC_PROTOCOL___CLIntersiloServiceProtocol;
  objc_msgSend( +[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface"),  "extendSelectorInfoWithProtocol:bases:",  &OBJC_PROTOCOL___CLNotifierServiceProtocol,  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v19, 1));
  __int16 v18 = &OBJC_PROTOCOL___CLIntersiloClientProtocol;
  objc_msgSend( +[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface"),  "extendSelectorInfoWithProtocol:bases:",  &OBJC_PROTOCOL___CLNotifierServiceClientProtocol,  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v18, 1));
  id v11 = [a3 silo];
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C(__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    *(_OWORD *)__int128 __p = *(_OWORD *)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 24);
  }

  if (v17 >= 0) {
    uint64_t v12 = __p;
  }
  else {
    uint64_t v12 = (void **)__p[0];
  }
  id v13 = +[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:]( &OBJC_CLASS___CLIntersiloProxy,  "proxyForRecipientObject:inSilo:recipientName:",  v10,  v11,  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v12, __p[0], __p[1], v17));
  *(void *)(a1 + 16) = v13;
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    id v13 = *(id *)(a1 + 16);
  }

  id v14 = v13;
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a3, "silo"));
  return a1;
}

void sub_1009E8F60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009E8F84(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        __int16 v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)__int128 buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018668E8);
      }
      uint64_t v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        id v11 = (void *)(a1 + 8);
        *(_DWORD *)__int128 buf = 136446466;
        uint64_t v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_1018668E8);
        }
        uint64_t v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        uint64_t v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::Noti ficationData>::removeClient(int) [Notification_T = CLFenceAuthorizationManager_Type::Notification, Notificatio nData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_1009E91F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_10198EC18);
}

BOOL sub_1009E920C(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v40 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }

      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          uint64_t v28 = (uint64_t *)v24;
        }
        else {
          uint64_t v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }

      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        uint64_t v39 = v25;
        uint64_t v33 = *(void *)(v25 + 56);
        char v34 = *a4;
        *(void *)__int128 buf = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v25 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v34;
        memset(buf, 0, sizeof(buf));
        __int16 v46 = 0;
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, uint8_t *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          char v35 = sub_1009EBC4C((uint64_t)buf);
          sub_1009EB024((_BYTE *)a1, (uint64_t)&v40, (uint64_t)&v39, v35);
        }

        *(void *)uint64_t v42 = buf;
        sub_1006684D8((void ***)v42);
        if (v33) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v39 = a1 + 64;
        char v29 = byte_10198EC19;
        *(_DWORD *)uint64_t v42 = v16;
        *(void *)__int128 buf = v42;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 80) = v29;
        *(_DWORD *)uint64_t v42 = *a3;
        *(void *)__int128 buf = v42;
        uint64_t v30 = sub_10023347C((uint64_t **)(a1 + 56), (int *)v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v30 + 8);
        char v31 = *a4;
        *(_DWORD *)uint64_t v42 = *a3;
        *(void *)__int128 buf = v42;
        __int16 v32 = sub_10023347C((uint64_t **)(a1 + 56), (int *)v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)__int128 buf = &v41;
        *((_BYTE *)sub_1004EF3D4(v32 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v31;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v20 == v18)
      {
        *(_DWORD *)__int128 buf = *a3;
        sub_10004A8FC((uint64_t **)(v40 + 40), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018668E8);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)__int128 buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018668E8);
    }
    int v36 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t v42 = 136446466;
    *(void *)&v42[4] = v36;
    __int16 v43 = 1026;
    int v44 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v42,
      18);
    __int16 v38 = (uint8_t *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::Notifica tionData>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLFe nceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationDat a, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v37);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

void sub_1009E9688( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  a15 = (void **)&a19;
  sub_1006684D8(&a15);
  _Unwind_Resume(a1);
}

BOOL sub_1009E96B0(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      __int16 v9 = (uint64_t *)v5;
    }
    else {
      __int16 v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018668E8);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)__int128 buf = 136446466;
      uint64_t v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018668E8);
      }
      BOOL v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      int v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::Notifi cationData>::clientRegistered(int, const Notification_T &) [Notification_T = CLFenceAuthorizationManager_Type::N otification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_1009E9930(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_1018668E8);
              }
              int v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)__int128 buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                int v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_1018668E8);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                uint64_t v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Ty pe::NotificationData>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLFenc eAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::Notif icationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_1009E9CB8(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      int v11 = (uint64_t *)v4;
    }
    else {
      int v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }

  while (*v11);
  if (v8 == v3) {
    return 0LL;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0LL;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0LL;
  }
  if (v12 != a3) {
    sub_1009EB890( a3,  *(std::string **)v12,  *(__int128 **)(v12 + 8),  0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(v12 + 8) - *(void *)v12) >> 3));
  }
  *(_WORD *)(a3 + 24) = *(_WORD *)(v12 + 24);
  return 1LL;
}

uint64_t sub_1009E9D60(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = *a2;
  uint64_t v12 = &v10;
  uint64_t v5 = sub_10023347C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_1012CF090, &v12);
  sub_10005F550((uint64_t)(v5 + 8), &v11);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    int v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  return 1LL;
}

void sub_1009E9E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1009E9E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int16 v5 = 0;
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v4,  a3,  a4,  0LL);
  uint64_t v6 = (void **)v4;
  sub_1006684D8(&v6);
}

void sub_1009E9E78( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  *(void *)(v10 - 24) = &a10;
  sub_1006684D8((void ***)(v10 - 24));
  _Unwind_Resume(a1);
}

void sub_1009E9E94(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018668E8);
    }
    __int128 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = (void *)(a1 + 8);
      id v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)__int128 buf = 68289794;
      *(_DWORD *)uint64_t v66 = 0;
      *(_WORD *)&v66[4] = 2082;
      *(void *)&v66[6] = "";
      *(_WORD *)&v66[14] = 2082;
      *(void *)&v66[16] = "activity";
      __int16 v67 = 2082;
      __int16 v68 = v12;
      __int16 v69 = 2050;
      __int16 v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)int v71 = &v71[8];
      memset(&v71[8], 0, 24);
      __int16 v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&v66[4], *(void **)&v66[12]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      sub_1009EB100(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      __int16 v27 = *(std::__shared_weak_count **)&v66[4];
      if (*(void *)&v66[4])
      {
        int v28 = (unint64_t *)(*(void *)&v66[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    uint64_t v30 = sub_1009EAB8C(a3);
    if (a5 == -1)
    {
      sub_1009EAC50((void *)a1, (int *)a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          __int16 v36 = (uint64_t *)v32;
        }
        else {
          __int16 v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v63 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      int v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          uint64_t v42 = (unint64_t *)v37;
        }
        else {
          uint64_t v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          int v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        uint64_t v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_1018668E8);
        }
        __int16 v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          char v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            int v45 = v71;
          }
          else {
            int v45 = *(_BYTE **)v71;
          }
          *(_DWORD *)__int128 buf = 136315650;
          *(void *)uint64_t v66 = v44;
          *(_WORD *)&v66[8] = 1024;
          *(_DWORD *)&v66[10] = a5;
          *(_WORD *)&v66[14] = 2080;
          *(void *)&v66[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_1018668E8);
          }
          __int16 v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            uint64_t v48 = __p;
          }
          else {
            uint64_t v48 = (void **)__p[0];
          }
          *(_DWORD *)int v71 = 136315650;
          *(void *)&v71[4] = v46;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v59);
          id v50 = v49;
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::No tificationData>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationM anager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v50);
        }

        goto LABEL_83;
      }

      uint64_t v62 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v53 = v39[3].n128_i64[0];
      uint64_t v51 = v39 + 3;
      uint64_t v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v33 + 32);
      uint64_t v55 = v51;
      do
      {
        int v56 = v52[1].n128_i32[3];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          __int16 v58 = v52;
        }
        else {
          __int16 v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          uint64_t v55 = v52;
        }
        uint64_t v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_1009EB024((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v30);
    }

void sub_1009EA4B0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_1009EA4FC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018668E8);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)__int128 buf = 136315138;
      unint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018668E8);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::Notifi cationData>::listClients() [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018668E8);
    }
    int v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)__int128 buf = 136315394;
      unint64_t v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018668E8);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      uint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::Notifi cationData>::listClients() [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    uint64_t v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      __int128 v11 = (void *)(a1 + 8);
      do
      {
        uint64_t v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_1018668E8);
            }
            id v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)__int128 buf = 136315650;
              unint64_t v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_1018668E8);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type ::NotificationData>::listClients() [Notification_T = CLFenceAuthorizationManager_Type::Notification, Not ificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, Registr ationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                uint64_t v12 = v18;
              }

              while (!v19);
            }

            uint64_t v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            uint64_t v10 = v26;
          }

          while (!v19);
        }

        uint64_t v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_1009EAAA8(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009EBBEC(a1);
  operator delete(v1);
}

id sub_1009EAABC(uint64_t a1, int a2, void *a3)
{
  id result = sub_1009EB280(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_1009EAB08(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1009EAB34(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_1009EAB60(id a1)
{
  qword_101934A98 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

CLCppContainer *sub_1009EAB8C(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *((void *)v2 + 1) = 0LL;
  *((void *)v2 + 2) = 0LL;
  *(void *)uint64_t v2 = 0LL;
  sub_1006692E8( v2,  *(__int128 **)a1,  *(__int128 **)(a1 + 8),  0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3));
  *((_WORD *)v2 + 12) = *(_WORD *)(a1 + 24);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1009EB244;
  void v4[3] = &unk_10181D3D0;
  v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  32LL);
}

void sub_1009EAC3C(_Unwind_Exception *a1)
{
}

void sub_1009EAC50(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    __int16 v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        uint64_t v51 = v9;
        id v13 = sub_1009EB280(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              id v50 = v19;
              sub_1009EB024(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              unint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  unint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              uint64_t v51 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                BOOL v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    BOOL v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      uint64_t v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      uint64_t v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int16 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      __int16 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      BOOL v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              id v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_1018668E8);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)__int128 buf = 136446466;
                BOOL v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_1018668E8);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                uint64_t v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::Noti ficationData>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLFen ceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::Noti ficationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_1009EB024(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    int v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_1009EB280(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    uint64_t v14 = (int *)(*(void *)a2 + 32LL);
    uint64_t v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

uint64_t sub_1009EB100@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x38uLL);
  uint64_t result = sub_1009EB158((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_1009EB144(_Unwind_Exception *a1)
{
}

uint64_t sub_1009EB158(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  *(void *)a1 = off_101866A38;
  *(_OWORD *)(a1 + 32) = 0u;
  *(void *)(a1 + 24) = 0LL;
  sub_1006692E8( (char *)(a1 + 24),  *(__int128 **)a2,  *(__int128 **)(a2 + 8),  0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3));
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 24);
  return a1;
}

void sub_1009EB1CC(_Unwind_Exception *a1)
{
}

void sub_1009EB1E0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101866A38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1009EB1F4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101866A38;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_1009EB218(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 24);
  sub_1006684D8(&v1);
}

void sub_1009EB244(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = *(void ***)(a1 + 32);
    sub_1006684D8(&v2);
    operator delete(v1);
  }

id sub_1009EB280(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_1009EB2CC(a1);
  }
  else {
    return 0LL;
  }
}

id sub_1009EB2CC(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101866A78);
    }
    uint64_t v3 = qword_101934478;
    if (!os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR)) {
      return 0LL;
    }
    int v8 = 134218498;
    id v9 = v2;
    __int16 v10 = 2048;
    uint64_t v11 = 0LL;
    __int16 v12 = 2080;
    unint64_t v13 = 0x80000001013433BALL & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v4 = (os_log_s *)v3;
    os_log_type_t v5 = OS_LOG_TYPE_ERROR;
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101866A78);
    }
    uint64_t v7 = qword_101934478;
    if (!os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT)) {
      return 0LL;
    }
    int v8 = 134218498;
    id v9 = v2;
    __int16 v10 = 2048;
    uint64_t v11 = 0LL;
    __int16 v12 = 2080;
    unint64_t v13 = 0x80000001013433BALL & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v4 = (os_log_s *)v7;
    os_log_type_t v5 = OS_LOG_TYPE_FAULT;
  }

  _os_log_impl( (void *)&_mh_execute_header,  v4,  v5,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has cha nged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  (uint8_t *)&v8,  0x20u);
  return 0LL;
}

void sub_1009EB4A0(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

void sub_1009EB4CC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1009EB4CC(a1, *a2);
    sub_1009EB4CC(a1, a2[1]);
    sub_100100BFC((uint64_t)(a2 + 4));
    operator delete(a2);
  }

uint64_t sub_1009EB514(uint64_t a1, const void **a2)
{
  id v2 = *(const void ***)(a1 + 8);
  if (v2)
  {
    uint64_t v4 = a1 + 16;
    uint64_t v5 = 1LL;
    do
    {
      if ((sub_1009EB590(v4, a2, v2 + 4) & 1) == 0)
      {
        ++v2;
      }

      id v2 = (const void **)*v2;
    }

    while (v2);
  }

  return 0LL;
}

uint64_t sub_1009EB590(uint64_t a1, const void **a2, const void **a3)
{
  int v5 = *((char *)a3 + 23);
  int v6 = *((char *)a2 + 23);
  if (v6 >= 0) {
    size_t v7 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v7 = (size_t)a2[1];
  }
  if (v6 >= 0) {
    int v8 = a2;
  }
  else {
    int v8 = *a2;
  }
  if (v5 >= 0) {
    size_t v9 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v9 = (size_t)a3[1];
  }
  if (v5 >= 0) {
    __int16 v10 = a3;
  }
  else {
    __int16 v10 = *a3;
  }
  if (v9 >= v7) {
    size_t v11 = v7;
  }
  else {
    size_t v11 = v9;
  }
  int v12 = memcmp(v8, v10, v11);
  BOOL v13 = v7 < v9;
  if (v12) {
    BOOL v13 = v12 < 0;
  }
  if (v13) {
    return 1LL;
  }
  int v15 = memcmp(v10, v8, v11);
  BOOL v16 = v9 < v7;
  if (v15) {
    BOOL v16 = v15 < 0;
  }
  if (v16) {
    return 0LL;
  }
  BOOL v19 = (const void **)a3[3];
  int v18 = a3 + 3;
  uint64_t v17 = v19;
  int v20 = *((char *)v18 + 23);
  int v23 = (const void **)a2[3];
  int v22 = a2 + 3;
  BOOL v21 = v23;
  int v24 = *((char *)v22 + 23);
  if (v24 >= 0) {
    size_t v25 = *((unsigned __int8 *)v22 + 23);
  }
  else {
    size_t v25 = (size_t)v22[1];
  }
  if (v24 >= 0) {
    int v26 = v22;
  }
  else {
    int v26 = v21;
  }
  if (v20 >= 0) {
    size_t v27 = *((unsigned __int8 *)v18 + 23);
  }
  else {
    size_t v27 = (size_t)v18[1];
  }
  if (v20 >= 0) {
    int v28 = v18;
  }
  else {
    int v28 = v17;
  }
  if (v27 >= v25) {
    size_t v29 = v25;
  }
  else {
    size_t v29 = v27;
  }
  int v30 = memcmp(v26, v28, v29);
  if (v30) {
    return v30 < 0;
  }
  else {
    return v25 < v27;
  }
}

uint64_t *sub_1009EB6B8(uint64_t **a1, const void **a2, __int128 *a3)
{
  int v5 = (uint64_t **)sub_1009EB748((uint64_t)a1, &v10, a2);
  int v6 = *v5;
  if (!*v5)
  {
    size_t v7 = v5;
    sub_1009EB7E4((uint64_t)a1, a3, (uint64_t)v9);
    sub_1000085FC(a1, v10, v7, v9[0]);
    int v6 = v9[0];
    v9[0] = 0LL;
    sub_1009EB84C((uint64_t)v9, 0LL);
  }

  return v6;
}

void *sub_1009EB748(uint64_t a1, void *a2, const void **a3)
{
  int v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        int v8 = (void *)v4;
        size_t v9 = (const void **)(v4 + 32);
        uint64_t v4 = *v8;
        int v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      int v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }

    while (v4);
  }

  else
  {
    int v8 = (void *)(a1 + 8);
  }

char *sub_1009EB7E4@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = (char *)operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = sub_1001598C4(v6 + 32, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1009EB834(_Unwind_Exception *a1)
{
}

void sub_1009EB84C(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100100BFC((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

void sub_1009EB890(uint64_t a1, std::string *__str, __int128 *a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  size_t v9 = *(std::string **)a1;
  if (0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_1009EBA30((void **)a1);
    if (a4 > 0x108421084210842LL) {
      sub_100007008();
    }
    unint64_t v10 = 0xDEF7BDEF7BDEF7BELL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_10066936C((void *)a1, v11);
    int v12 = sub_100669408(v8, (__int128 *)__str, a3, *(char **)(a1 + 8));
    goto LABEL_11;
  }

  if (0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    BOOL v13 = (std::string *)((char *)__str + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3));
    sub_1009EBA9C((int)&v17, __str, v13, v9);
    int v12 = sub_100669408(v8, (__int128 *)v13, a3, *(char **)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v12;
    return;
  }

  sub_1009EBA9C((int)&v18, __str, (std::string *)a3, v9);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      v16 -= 248LL;
      sub_10066855C(v8, v16);
    }

    while (v16 != v15);
  }

  *(void *)(a1 + 8) = v15;
}

void sub_1009EBA20(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1009EBA28(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1009EBA30(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 248LL;
        sub_10066855C((uint64_t)(a1 + 2), v3);
      }

      while ((void *)v3 != v1);
      uint64_t v4 = *a1;
    }

    a1[1] = v1;
    operator delete(v4);
    *a1 = 0LL;
    a1[1] = 0LL;
    a1[2] = 0LL;
  }

std::string *sub_1009EBA9C(int a1, std::string *__str, std::string *a3, std::string *this)
{
  uint64_t v5 = __str;
  if (__str == a3) {
    return __str;
  }
  int v6 = a3;
  do
  {
    std::string::operator=(this, v5);
    std::string::operator=(this + 1, v5 + 1);
    std::string::operator=(this + 2, v5 + 2);
    __int128 v7 = *(_OWORD *)&v5[3].__r_.__value_.__r.__words[2];
    __int128 v8 = *(_OWORD *)&v5[4].__r_.__value_.__r.__words[1];
    __int128 v9 = *(_OWORD *)&v5[5].__r_.__value_.__l.__data_;
    *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = *(_OWORD *)&v5[3].__r_.__value_.__l.__data_;
    *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = v9;
    *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = v8;
    *(_OWORD *)&this[3].__r_.__value_.__r.__words[2] = v7;
    __int128 v10 = *(_OWORD *)&v5[6].__r_.__value_.__r.__words[1];
    __int128 v11 = *(_OWORD *)&v5[7].__r_.__value_.__l.__data_;
    std::string::size_type v12 = *(std::string::size_type *)((char *)&v5[7].__r_.__value_.__r.__words[1] + 5);
    *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = *(_OWORD *)&v5[5].__r_.__value_.__r.__words[2];
    *(std::string::size_type *)((char *)&this[7].__r_.__value_.__r.__words[1] + 5) = v12;
    *(_OWORD *)&this[7].__r_.__value_.__l.__data_ = v11;
    *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v10;
    std::string::operator=(this + 8, v5 + 8);
    std::string::pointer data = this[9].__r_.__value_.__l.__data_;
    this[9].__r_.__value_.__r.__words[0] = (std::string::size_type)v5[9].__r_.__value_.__l.__data_;

    if (this != v5) {
      sub_10009B244( &this[9].__r_.__value_.__s.__data_[8],  (char *)v5[9].__r_.__value_.__l.__size_,  v5[9].__r_.__value_.__l.__cap_,  (uint64_t)(v5[9].__r_.__value_.__l.__cap_ - v5[9].__r_.__value_.__l.__size_) >> 4);
    }
    this = (std::string *)((char *)this + 248);
    uint64_t v5 = (std::string *)((char *)v5 + 248);
  }

  while (v5 != v6);
  return v6;
}

__int128 *sub_1009EBB90(__int128 *a1, __int128 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_10065E968(a3, v4);
      uint64_t v4 = (__int128 *)((char *)v4 + 248);
      a3 += 248LL;
    }

    while (v4 != a2);
    return a2;
  }

  return v4;
}

uint64_t sub_1009EBBEC(uint64_t a1)
{
  *(void *)a1 = &off_101866AA8;
  uint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *uint64_t v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_1009EBC4C(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *((void *)v2 + 1) = 0LL;
  *((void *)v2 + 2) = 0LL;
  *(void *)uint64_t v2 = 0LL;
  sub_1006692E8( v2,  *(__int128 **)a1,  *(__int128 **)(a1 + 8),  0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3));
  *((_WORD *)v2 + 12) = *(_WORD *)(a1 + 24);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1009EBD10;
  void v4[3] = &unk_10181D3D0;
  v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  32LL);
}

void sub_1009EBCFC(_Unwind_Exception *a1)
{
}

void sub_1009EBD10(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = *(void ***)(a1 + 32);
    sub_1006684D8(&v2);
    operator delete(v1);
  }

BOOL sub_1009EBD4C()
{
  return os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT);
}

  ;
}

BOOL sub_1009EBD6C()
{
  return os_log_type_enabled(*(os_log_t *)(v0 + 2168), OS_LOG_TYPE_INFO);
}

BOOL sub_1009EBD7C()
{
  return os_signpost_enabled(*(os_log_t *)(v0 + 2168));
}

void sub_1009EBD88(int a1@<W8>)
{
  _DWORD *v1 = a1;
}

uint64_t sub_1009EBD94()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &stru_101999C68, (void *)&_mh_execute_header);
}

void sub_1009EC014(id a1)
{
  qword_101934748 = (uint64_t)os_log_create("com.apple.locationd.Motion", "RunningForm");
}

uint64_t sub_1009EC784(uint64_t a1, __int128 *a2, uint64_t *a3, void *a4)
{
  uint64_t v6 = sub_100400554(a1, a3, a4);
  *(void *)uint64_t v6 = off_101866AF0;
  __int128 v7 = (char *)(v6 + 232);
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C((_BYTE *)(v6 + 232), *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v8 = *a2;
    *(void *)(v6 + 248) = *((void *)a2 + 2);
    *(_OWORD *)__int128 v7 = v8;
  }

  nullsub_10(a1 + 256);
  *(_BYTE *)(a1 + 257) = 0;
  if (sub_1003C1048(a1 + 64))
  {
    __int128 v9 = v7;
    sub_1003B59A0(a1 + 64, v9, (const char **)&qword_101999C98, 0LL, 0);
    sub_100400684(a1);
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101866B30);
    }
    __int128 v10 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#Warning CLWifiAssociatedApCentroidDatabase is not valid, not initializing. Please re-initialize if needed",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      v14[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "#Warning CLWifiAssociatedApCentroidDatabase is not valid, not initializing. Please re-initialize if needed",  v14,  2);
      BOOL v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiAssociatedApCentroidDatabase::CLWifiAssociatedApCentroidDatabase(const std::string &, const CLSqliteDataba se::SqliteProperties &, const CFTimeInterval &)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }
  }

  return a1;
}

void sub_1009EC9B0(_Unwind_Exception *a1)
{
}

char *sub_1009EC9E0@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0x100000002LL;
  *(_WORD *)(a2 + 8) = 256;
  uint64_t v3 = a2 + 16;
  if (result[23] < 0)
  {
    uint64_t result = (char *)sub_1010DD48C((_BYTE *)v3, *(void **)result, *((void *)result + 1));
  }

  else
  {
    *(_OWORD *)uint64_t v3 = *(_OWORD *)result;
    *(void *)(v3 + 16) = *((void *)result + 2);
  }

  *(void *)(a2 + 40) = 0LL;
  return result;
}

uint64_t sub_1009ECA40(uint64_t a1, char *a2)
{
  unint64_t v4 = 0xBFF0000000000000LL;
  sub_1009EC784(a1, &xmmword_101999C80, v5, &v4);
  if (v6 < 0) {
    operator delete((void *)v5[2]);
  }
  return a1;
}

void sub_1009ECAA4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009ECAC0(uint64_t a1, uint64_t a2)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)v66);
    unint64_t v4 = sub_10000CF44(&v67, (uint64_t)"INSERT OR REPLACE INTO ", 23LL);
    int v5 = *(char *)(a1 + 255);
    if (v5 >= 0) {
      uint64_t v6 = a1 + 232;
    }
    else {
      uint64_t v6 = *(void *)(a1 + 232);
    }
    if (v5 >= 0) {
      uint64_t v7 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v7 = *(void *)(a1 + 240);
    }
    __int128 v8 = sub_10000CF44(v4, v6, v7);
    __int128 v9 = sub_10000CF44(v8, (uint64_t)"(", 3LL);
    __int128 v10 = sub_10000CF44(v9, (uint64_t)"MAC", 3LL);
    __int128 v11 = sub_10000CF44(v10, (uint64_t)",", 1LL);
    size_t v12 = strlen("Latitude");
    BOOL v13 = sub_10000CF44(v11, (uint64_t)"Latitude", v12);
    uint64_t v14 = sub_10000CF44(v13, (uint64_t)",", 1LL);
    size_t v15 = strlen("Longitude");
    uint64_t v16 = sub_10000CF44(v14, (uint64_t)"Longitude", v15);
    char v17 = sub_10000CF44(v16, (uint64_t)",", 1LL);
    size_t v18 = strlen("HorizontalAccuracy");
    BOOL v19 = sub_10000CF44(v17, (uint64_t)"HorizontalAccuracy", v18);
    int v20 = sub_10000CF44(v19, (uint64_t)",", 1LL);
    size_t v21 = strlen("Altitude");
    int v22 = sub_10000CF44(v20, (uint64_t)"Altitude", v21);
    int v23 = sub_10000CF44(v22, (uint64_t)",", 1LL);
    size_t v24 = strlen("VerticalAccuracy");
    size_t v25 = sub_10000CF44(v23, (uint64_t)"VerticalAccuracy", v24);
    int v26 = sub_10000CF44(v25, (uint64_t)",", 1LL);
    size_t v27 = strlen("Reach");
    int v28 = sub_10000CF44(v26, (uint64_t)"Reach", v27);
    size_t v29 = sub_10000CF44(v28, (uint64_t)",", 1LL);
    int v30 = sub_10000CF44(v29, (uint64_t)"LastUpdatedTimestamp", 20LL);
    BOOL v31 = sub_10000CF44(v30, (uint64_t)",", 1LL);
    int v32 = sub_10000CF44(v31, (uint64_t)"StationaryTimeInSeconds", 23LL);
    uint64_t v33 = sub_10000CF44(v32, (uint64_t)",", 1LL);
    uint64_t v34 = sub_10000CF44(v33, (uint64_t)"LoiType", 7LL);
    BOOL v35 = sub_10000CF44(v34, (uint64_t)",", 1LL);
    uint64_t v36 = sub_10000CF44(v35, (uint64_t)"CKRecordName", 12LL);
    int v37 = sub_10000CF44(v36, (uint64_t)",", 1LL);
    BOOL v38 = sub_10000CF44(v37, (uint64_t)"CKSystemFields", 14LL);
    int v39 = sub_10000CF44(v38, (uint64_t)") VALUES ", 9LL);
    sub_10000CF44(v39, (uint64_t)"(?,?,?,?,?,?,?,?,?,?,?,?);", 26LL);
    std::stringbuf::str(&v65, &v68);
    if ((v65.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v40 = &v65;
    }
    else {
      int v40 = (std::stringbuf::string_type *)v65.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v40, &v64);
    BOOL v41 = (sqlite3_stmt *)sub_100019240(v64);
    if (*(char *)(a2 + 103) < 0)
    {
      sub_1010DD48C(__p, *(void **)(a2 + 80), *(void *)(a2 + 88));
    }

    else
    {
      *(_OWORD *)__int128 __p = *(_OWORD *)(a2 + 80);
      uint64_t v63 = *(void *)(a2 + 96);
    }

    buf[0].__r_.__value_.__r.__words[0] = *(void *)a2;
    sqlite3_int64 v44 = sub_1005B46E8((uint64_t)buf);
    if (sub_1003C2D24(v41, 1, v44)
      && sub_1003B7480(v41, 2, *(double *)(a2 + 8))
      && sub_1003B7480(v41, 3, *(double *)(a2 + 16))
      && sub_1003B7480(v41, 4, *(double *)(a2 + 32))
      && sub_1003B7480(v41, 5, *(double *)(a2 + 24))
      && sub_1003B7480(v41, 6, *(double *)(a2 + 40))
      && sub_1003C28BC(v41, 7, *(_DWORD *)(a2 + 48))
      && sub_1003B7480(v41, 8, *(double *)(a2 + 72))
      && sub_1003B7480(v41, 9, *(double *)(a2 + 56))
      && sub_1003C28BC(v41, 10, *(_DWORD *)(a2 + 64))
      && (v63 >= 0 ? (int v45 = (char *)__p) : (int v45 = (char *)__p[0]),
          sub_1003BC1F0(v41, 11, v45) && sub_1003C2F58(v41, 12, *(void **)(a2 + 104))))
    {
      sub_1003BB2BC(a1 + 64, v41);
      if (sub_1003C10E4(a1 + 64) > 0)
      {
        *(_BYTE *)(a1 + 257) = 1;
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101866B30);
        }
        int v46 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1006083F0(a2, buf);
          uint64_t v47 = (buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0
              ? buf
              : (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
          LODWORD(v70.__r_.__value_.__l.__data_) = 136380675;
          *(std::string::size_type *)((char *)v70.__r_.__value_.__r.__words + 4) = (std::string::size_type)v47;
          _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "CLWifiAssociatedApCentroidDatabase, success, insertOrReplace, %{private}s",  (uint8_t *)&v70,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101866B30);
          }
          uint64_t v58 = qword_101934858;
          sub_1006083F0(a2, &v70);
          if ((v70.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            int v59 = &v70;
          }
          else {
            int v59 = (std::stringbuf::string_type *)v70.__r_.__value_.__r.__words[0];
          }
          int v71 = 136380675;
          __int16 v72 = v59;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v58,  2LL,  "CLWifiAssociatedApCentroidDatabase, success, insertOrReplace, %{private}s",  &v71,  12);
          char v61 = v60;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiAssociatedApCentroidDatabase::insertOrReplace(const CLWifiAssociatedApCentroidDatabaseEntry &)",  "%s\n",  (const char *)v61);
          if (v61 != buf) {
            free(v61);
          }
        }

        uint64_t v43 = 1LL;
        goto LABEL_52;
      }

      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      int v56 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_ERROR,  "Could not successfully insert or replace CLWifiAssociatedApCentroidDatabaseEntry in CLWifiAssociatedApCentroidDatabase!",  (uint8_t *)buf,  2u);
      }

      if (!sub_1002921D0(115, 0))
      {
LABEL_51:
        uint64_t v43 = 0LL;
LABEL_52:
        if (SHIBYTE(v63) < 0) {
          operator delete(__p[0]);
        }
        uint64_t v49 = v64;
        uint64_t v64 = 0LL;
        if (v49) {
          (*(void (**)(uint64_t))(*(void *)v49 + 8LL))(v49);
        }
        *(void *)((char *)v66
        uint64_t v67 = v50;
        std::streambuf::~streambuf(&v68);
        std::ios::~ios(&v69);
        return v43;
      }

      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      LOWORD(v70.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "Could not successfully insert or replace CLWifiAssociatedApCentroidDatabaseEntry in CLWifiAssociatedApCentroidDatabase!",  &v70,  2);
      int v55 = (std::stringbuf::string_type *)v57;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLWifiAssociatedApCentroidDatabase::insertOrReplace(const CLWifiAssociatedApCentroidDatabaseEntry &)",  "%s\n",  v57);
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      uint64_t v48 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_ERROR,  "Could not bind CLWifiAssociatedApCentroidDatabaseEntry fields when addding to CLWifiAssociatedApCentroidDatabase!",  (uint8_t *)buf,  2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_51;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      LOWORD(v70.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "Could not bind CLWifiAssociatedApCentroidDatabaseEntry fields when addding to CLWifiAssociatedApCentroidDatabase!",  &v70,  2);
      int v55 = (std::stringbuf::string_type *)v54;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLWifiAssociatedApCentroidDatabase::insertOrReplace(const CLWifiAssociatedApCentroidDatabaseEntry &)",  "%s\n",  v54);
    }

    if (v55 != buf) {
      free(v55);
    }
    goto LABEL_51;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101866B30);
  }
  uint64_t v42 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call insertOrReplace() without a backing database in CLWifiAssociatedApCentroidDatabase!",  (uint8_t *)buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101866B30);
    }
    LOWORD(v66[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "#Warning Attempt to call insertOrReplace() without a backing database in CLWifiAssociatedApCentroidDatabase!",  v66,  2);
    uint64_t v53 = (std::stringbuf::string_type *)v52;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiAssociatedApCentroidDatabase::insertOrReplace(const CLWifiAssociatedApCentroidDatabaseEntry &)",  "%s\n",  v52);
    if (v53 != buf) {
      free(v53);
    }
  }

  return 0LL;
}

void sub_1009ED528( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, int a21, __int16 a22, char a23, char a24, char a25)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a18) {
    (*(void (**)(uint64_t))(*(void *)a18 + 8LL))(a18);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  sub_1011F8850((uint64_t)&a25);
  _Unwind_Resume(a1);
}

void sub_1009ED5B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)v58);
    uint64_t v6 = sub_10000CF44(&v59, (uint64_t)"SELECT * FROM ", 14LL);
    int v7 = *(char *)(a1 + 255);
    if (v7 >= 0) {
      uint64_t v8 = a1 + 232;
    }
    else {
      uint64_t v8 = *(void *)(a1 + 232);
    }
    if (v7 >= 0) {
      uint64_t v9 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v9 = *(void *)(a1 + 240);
    }
    sub_10000CF44(v6, v8, v9);
    if (*(_BYTE *)a2)
    {
      __int128 v10 = sub_1009F034C((int *)(a2 + 8));
      {
        __int128 v11 = sub_10000CF44(&v59, (uint64_t)" WHERE ", 7LL);
        size_t v12 = "MAC";
        uint64_t v13 = 3LL;
      }

      else
      {
        if (!*(_BYTE *)a2) {
          goto LABEL_21;
        }
        size_t v15 = sub_1009F034C((int *)(a2 + 8));
        __int128 v11 = sub_10000CF44(&v59, (uint64_t)" WHERE ", 7LL);
        size_t v12 = "CKRecordName";
        uint64_t v13 = 12LL;
      }

      uint64_t v16 = sub_10000CF44(v11, (uint64_t)v12, v13);
      sub_10000CF44(v16, (uint64_t)" = ?", 4LL);
    }

void sub_1009EDDBC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, void *__p, uint64_t a25, int a26, __int16 a27, char a28, char a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a23) {
    (*(void (**)(uint64_t))(*(void *)a23 + 8LL))(a23);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a30);
  _Unwind_Resume(a1);
}

_BYTE *sub_1009EDE9C(_BYTE *a1)
{
  if (!*a1)
  {
    std::logic_error::logic_error(&v2, "Attempted to access the value of an uninitialized optional object.");
    v2.__vftable = (std::logic_error_vtbl *)&off_101866C38;
    sub_1009F0398(&v2);
  }

  return a1 + 8;
}

void sub_1009EDEF4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::logic_error a9)
{
}

void sub_1009EDF08(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v2[0] = 0;
  sub_1009ED5B4(a1, (uint64_t)v2, a2);
  if (v2[0]) {
    sub_1009F0C24((uint64_t)&v3);
  }
}

void sub_1009EDF74( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, uint64_t a10)
{
  if (a9) {
    sub_1009F0C24((uint64_t)&a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009EDF94(uint64_t a1@<X0>, void ****a2@<X1>, _BYTE *a3@<X8>)
{
  size_t v12 = *a2;
  LODWORD(v11) = 0;
  char v13 = 0;
  sub_1009F0C68((uint64_t)v14, (uint64_t)&v11);
  char v13 = 1;
  sub_1009F0C24((uint64_t)&v11);
  v9[0] = 0;
  if (v13)
  {
    sub_1009F02B8(v10, (uint64_t)v14);
    v9[0] = 1;
  }

  sub_1009ED5B4(a1, (uint64_t)v9, (uint64_t *)&v11);
  if (v9[0])
  {
    sub_1009F0C24((uint64_t)v10);
    v9[0] = 0;
  }

  uint64_t v6 = v11;
  int v7 = v12;
  while (1)
  {
    if (v6 == v7)
    {
      uint64_t v8 = (void **)&v11;
      sub_10068CDBC(&v8);
      *a3 = 0;
      a3[112] = 0;
      goto LABEL_11;
    }

    uint64_t v8 = *v6;
    if (sub_1007EC0B0(&v8, a2)) {
      break;
    }
    v6 += 14;
  }

  sub_100607A34(a3, v6);
  a3[112] = 1;
  uint64_t v8 = (void **)&v11;
  sub_10068CDBC(&v8);
LABEL_11:
  if (v13) {
    sub_1009F0C24((uint64_t)v14);
  }
}

void sub_1009EE0F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  a9 = (void **)&a15;
  sub_10068CDBC(&a9);
  if (a19) {
    sub_1009F0C24(v19);
  }
  _Unwind_Resume(a1);
}

void sub_1009EE150(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  if (SHIBYTE(v19) < 0)
  {
    sub_1010DD48C(&v23, v18[0], (unint64_t)v18[1]);
  }

  else
  {
    __int128 v23 = *(_OWORD *)v18;
    uint64_t v24 = v19;
  }

  LODWORD(v22) = 1;
  char v25 = 0;
  sub_1009F0C68((uint64_t)v26, (uint64_t)&v22);
  char v25 = 1;
  sub_1009F0C24((uint64_t)&v22);
  v20[0] = 0;
  if (v25)
  {
    sub_1009F02B8(v21, (uint64_t)v26);
    v20[0] = 1;
  }

  sub_1009ED5B4(a1, (uint64_t)v20, &v22);
  if (v20[0])
  {
    sub_1009F0C24((uint64_t)v21);
    v20[0] = 0;
  }

  uint64_t v5 = v22;
  uint64_t v6 = v23;
  if (v22 == (void)v23)
  {
LABEL_35:
    __p[0] = &v22;
    sub_10068CDBC((void ***)__p);
    *a3 = 0;
    a3[112] = 0;
    goto LABEL_37;
  }

  while (1)
  {
    if (*(char *)(v5 + 103) < 0)
    {
      sub_1010DD48C(__p, *(void **)(v5 + 80), *(void *)(v5 + 88));
    }

    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)(v5 + 80);
      uint64_t v17 = *(void *)(v5 + 96);
    }

    if (v17 >= 0) {
      int v7 = (void *)HIBYTE(v17);
    }
    else {
      int v7 = __p[1];
    }
    uint64_t v8 = (void *)HIBYTE(v19);
    if (v19 < 0) {
      uint64_t v8 = v18[1];
    }
    if (v7 != v8)
    {
      if (v17 < 0) {
        operator delete(__p[0]);
      }
      goto LABEL_34;
    }

    uint64_t v9 = v19 >= 0 ? v18 : (void **)v18[0];
    if ((v17 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v14 = __p[0];
    int v15 = memcmp(__p[0], v9, (size_t)__p[1]);
    operator delete(v14);
    if (!v15) {
      goto LABEL_36;
    }
LABEL_34:
    v5 += 112LL;
    if (v5 == v6) {
      goto LABEL_35;
    }
  }

  if (HIBYTE(v17))
  {
    uint64_t v10 = 0LL;
    do
    {
      int v11 = *((unsigned __int8 *)__p + v10);
      int v12 = *((unsigned __int8 *)v9 + v10);
    }

    while (v11 == v12 && HIBYTE(v17) - 1LL != v10++);
    if (v11 != v12) {
      goto LABEL_34;
    }
  }

void sub_1009EE3C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28)
{
  a9 = &a24;
  sub_10068CDBC((void ***)&a9);
  if (a28) {
    sub_1009F0C24(v28);
  }
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1009EE440(uint64_t a1, uint64_t a2)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)buf);
    unint64_t v4 = sub_10000CF44(&v26, (uint64_t)"DELETE FROM ", 12LL);
    int v5 = *(char *)(a1 + 255);
    if (v5 >= 0) {
      uint64_t v6 = a1 + 232;
    }
    else {
      uint64_t v6 = *(void *)(a1 + 232);
    }
    if (v5 >= 0) {
      uint64_t v7 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v7 = *(void *)(a1 + 240);
    }
    uint64_t v8 = sub_10000CF44(v4, v6, v7);
    uint64_t v9 = sub_10000CF44(v8, (uint64_t)" WHERE ", 7LL);
    uint64_t v10 = sub_10000CF44(v9, (uint64_t)"MAC", 3LL);
    sub_10000CF44(v10, (uint64_t)" = ?;", 5LL);
    std::stringbuf::str(&v24, &v27);
    if ((v24.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v11 = &v24;
    }
    else {
      int v11 = (std::stringbuf::string_type *)v24.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v11, &v23);
    uint64_t v12 = v23;
    char v13 = (sqlite3_stmt *)sub_100019240(v23);
    sqlite3_int64 v14 = sub_1005B46E8(a2);
    if (sub_1003C2D24(v13, 1, v14) && (int v15 = (sqlite3_stmt *)sub_100019240(v12), j__sqlite3_step(v15) == 101))
    {
      else {
        uint64_t v16 = *(void *)(a1 + 152);
      }
      sub_1003C1EC0(a1 + 64, v16);
      uint64_t v17 = 1LL;
      if (!v12) {
        goto LABEL_26;
      }
    }

    else
    {
      uint64_t v17 = 0LL;
      if (!v12)
      {
LABEL_26:
        uint64_t v26 = v19;
        std::streambuf::~streambuf(&v27);
        std::ios::~ios(&v28);
        return v17;
      }
    }

    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    goto LABEL_26;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101866B30);
  }
  size_t v18 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call deleteByMac() without a backing database in CLWifiAssociatedApCentroidDatabase!",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101866B30);
    }
    LOWORD(v24.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "#Warning Attempt to call deleteByMac() without a backing database in CLWifiAssociatedApCentroidDatabase!",  &v24,  2);
    uint64_t v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiAssociatedApCentroidDatabase::deleteByMac(const CLMacAddress &)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  return 0LL;
}

void sub_1009EE784( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_1009EE7D8(uint64_t a1, void *a2)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)buf);
    unint64_t v4 = sub_10000CF44(&v27, (uint64_t)"DELETE FROM ", 12LL);
    int v5 = *(char *)(a1 + 255);
    if (v5 >= 0) {
      uint64_t v6 = a1 + 232;
    }
    else {
      uint64_t v6 = *(void *)(a1 + 232);
    }
    if (v5 >= 0) {
      uint64_t v7 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v7 = *(void *)(a1 + 240);
    }
    uint64_t v8 = sub_10000CF44(v4, v6, v7);
    uint64_t v9 = sub_10000CF44(v8, (uint64_t)" WHERE ", 7LL);
    uint64_t v10 = sub_10000CF44(v9, (uint64_t)"CKRecordName", 12LL);
    sub_10000CF44(v10, (uint64_t)" = ?;", 5LL);
    std::stringbuf::str(&v25, &v28);
    if ((v25.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v11 = &v25;
    }
    else {
      int v11 = (std::stringbuf::string_type *)v25.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v11, __p);
    uint64_t v12 = __p[0];
    sub_1010DDBC0(__p, (char *)objc_msgSend(objc_msgSend(a2, "recordName"), "UTF8String"));
    char v13 = (sqlite3_stmt *)sub_100019240((uint64_t)v12);
    if (v24 >= 0) {
      sqlite3_int64 v14 = (char *)__p;
    }
    else {
      sqlite3_int64 v14 = (char *)__p[0];
    }
    if (sub_1003BC1F0(v13, 1, v14) && (int v15 = (sqlite3_stmt *)sub_100019240((uint64_t)v12), j__sqlite3_step(v15) == 101))
    {
      else {
        uint64_t v16 = *(void *)(a1 + 152);
      }
      sub_1003C1EC0(a1 + 64, v16);
      uint64_t v17 = 1LL;
    }

    else
    {
      uint64_t v17 = 0LL;
    }

    if (v24 < 0) {
      operator delete(__p[0]);
    }
    if (v12) {
      (*(void (**)(void *))(*(void *)v12 + 8LL))(v12);
    }
    uint64_t v27 = v19;
    std::streambuf::~streambuf(&v28);
    std::ios::~ios(&v29);
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101866B30);
    }
    size_t v18 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call deleteByCKRecordID() without a backing database in CLWifiAssociatedApCentroidDatabase!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      LOWORD(v25.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "#Warning Attempt to call deleteByCKRecordID() without a backing database in CLWifiAssociatedApCentroidDatabase!",  &v25,  2);
      uint64_t v22 = (uint8_t *)v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiAssociatedApCentroidDatabase::deleteByCKRecordID(CKRecordID *)",  "%s\n",  v21);
      if (v22 != buf) {
        free(v22);
      }
    }

    return 0LL;
  }

  return v17;
}

void sub_1009EEB38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, char a25)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a25);
  _Unwind_Resume(a1);
}

BOOL sub_1009EEBA4(uint64_t a1)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)buf);
    std::logic_error v2 = sub_10000CF44(&v21, (uint64_t)"DELETE FROM ", 12LL);
    int v3 = *(char *)(a1 + 255);
    if (v3 >= 0) {
      uint64_t v4 = a1 + 232;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 232);
    }
    if (v3 >= 0) {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v5 = *(void *)(a1 + 240);
    }
    uint64_t v6 = sub_10000CF44(v2, v4, v5);
    sub_10000CF44(v6, (uint64_t)";", 1LL);
    std::stringbuf::str(&v19, &v22);
    if ((v19.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v7 = &v19;
    }
    else {
      uint64_t v7 = (std::stringbuf::string_type *)v19.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v7, &v18);
    uint64_t v8 = v18;
    uint64_t v9 = (sqlite3_stmt *)sub_100019240(v18);
    int v10 = j__sqlite3_step(v9);
    BOOL v11 = v10 == 101;
    if (v10 == 101)
    {
      else {
        uint64_t v12 = *(void *)(a1 + 152);
      }
      sub_1003C1EC0(a1 + 64, v12);
    }

    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
    uint64_t v21 = v13;
    std::streambuf::~streambuf(&v22);
    std::ios::~ios(&v23);
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101866B30);
    }
    sqlite3_int64 v14 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call deleteAllRecords() without a backing database in CLWifiAssociatedApCentroidDatabase!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      LOWORD(v19.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "#Warning Attempt to call deleteAllRecords() without a backing database in CLWifiAssociatedApCentroidDatabase!",  &v19,  2);
      uint64_t v17 = (uint8_t *)v16;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLWifiAssociatedApCentroidDatabase::deleteAllRecords()", "%s\n", v16);
      if (v17 != buf) {
        free(v17);
      }
    }

    return 0LL;
  }

  return v11;
}

void sub_1009EEE88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a20);
  _Unwind_Resume(a1);
}

CKRecord *sub_1009EEEDC(uint64_t a1, void *a2)
{
  if (v15)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101866B30);
    }
    int v3 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_1006083F0((uint64_t)v14, __p);
      uint64_t v4 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
         ? __p
         : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v4;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2113;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)a2;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "CLWifiAssociatedApCentroidDatabase, found entry %{private}s for record ID %{private}@",  (uint8_t *)&buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      uint64_t v8 = qword_101934858;
      sub_1006083F0((uint64_t)v14, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v17 = 136380931;
      uint64_t v18 = p_buf;
      __int16 v19 = 2113;
      int v20 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v8,  2LL,  "CLWifiAssociatedApCentroidDatabase, found entry %{private}s for record ID %{private}@",  &v17,  22);
      BOOL v11 = v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CKRecord *CLWifiAssociatedApCentroidDatabase::ckRecordForRecordID(CKRecordID *) const",  "%s\n",  (const char *)v11);
      if (v11 != __p) {
        free(v11);
      }
    }

    uint64_t v5 = sub_100607C84((uint64_t)v14);
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101866B30);
    }
    uint64_t v6 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(__p[0].__r_.__value_.__l.__data_) = 138477827;
      *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "CLWifiAssociatedApCentroidDatabase, warning, entry is not found, no CKRecord is provided for record ID %{private}@",  (uint8_t *)__p,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 138477827;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CLWifiAssociatedApCentroidDatabase, warning, entry is not found, no CKRecord is provided for record ID %{private}@",  &buf,  12);
      uint64_t v13 = (std::stringbuf::string_type *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CKRecord *CLWifiAssociatedApCentroidDatabase::ckRecordForRecordID(CKRecordID *) const",  "%s\n",  v12);
      if (v13 != __p) {
        free(v13);
      }
    }

    uint64_t v5 = 0LL;
  }

  if (v15) {
    sub_100607C80(v14);
  }
  return v5;
}

void sub_1009EF280( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
  if (a26) {
    sub_100607C80(&a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009EF2B4(uint64_t a1, void *a2, void *a3)
{
  if (!v8) {
    return 0LL;
  }
  sub_100608384(v7, a3);
  if (!v8) {
    sub_100036CD8();
  }
  uint64_t v5 = sub_1009ECAC0(a1, (uint64_t)v7);
  if (v8) {
    sub_100607C80(v7);
  }
  return v5;
}

void sub_1009EF334( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  if (a24) {
    sub_100607C80(&a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009EF350(uint64_t a1)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)v22);
    std::logic_error v2 = sub_10000CF44(&v23, (uint64_t)"SELECT COUNT(*) FROM ", 21LL);
    int v3 = *(char *)(a1 + 255);
    if (v3 >= 0) {
      uint64_t v4 = a1 + 232;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 232);
    }
    if (v3 >= 0) {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v5 = *(void *)(a1 + 240);
    }
    uint64_t v6 = sub_10000CF44(v2, v4, v5);
    sub_10000CF44(v6, (uint64_t)";", 1LL);
    std::stringbuf::str(&v21, &v24);
    if ((v21.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v7 = &v21;
    }
    else {
      uint64_t v7 = (std::stringbuf::string_type *)v21.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1 + 64, (char *)v7, buf);
    uint64_t v8 = *(void *)buf;
    uint64_t v9 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)buf);
    if (j__sqlite3_step(v9) == 100)
    {
      int v10 = (sqlite3_stmt *)sub_100019240(v8);
      uint64_t v11 = sqlite3_column_int(v10, 0);
      if (!v8) {
        goto LABEL_27;
      }
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      uint64_t v13 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "invalid return value getting size of CLWifiAssociatedApCentroidDatabase",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101866B30);
        }
        __int16 v20 = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "invalid return value getting size of CLWifiAssociatedApCentroidDatabase",  &v20,  2);
        __int16 v19 = (uint8_t *)v18;
        sub_10029211C("Generic", 1LL, 0, 0LL, "uint32_t CLWifiAssociatedApCentroidDatabase::count() const", "%s\n", v18);
        if (v19 != buf) {
          free(v19);
        }
      }

      uint64_t v11 = 0LL;
      if (!v8) {
        goto LABEL_27;
      }
    }

    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
LABEL_27:
    *(void *)((char *)v22
    uint64_t v23 = v14;
    std::streambuf::~streambuf(&v24);
    std::ios::~ios(&v25);
    return v11;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101866B30);
  }
  uint64_t v12 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call count() without a backing database in CLWifiAssociatedApCentroidDatabase!",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101866B30);
    }
    LOWORD(v22[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "#Warning Attempt to call count() without a backing database in CLWifiAssociatedApCentroidDatabase!",  v22,  2);
    int v17 = (uint8_t *)v16;
    sub_10029211C("Generic", 1LL, 0, 2LL, "uint32_t CLWifiAssociatedApCentroidDatabase::count() const", "%s\n", v16);
    if (v17 != buf) {
      free(v17);
    }
  }

  return 0LL;
}

void sub_1009EF764( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
  }
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_1009EF7BC(uint64_t a1@<X0>, double *a2@<X1>, double *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = v7;
  sub_10068CDBC((void ***)&v9);
  sub_100828664(v8, a2, a3, a4);
  v7[0] = (void **)v8;
  sub_10068CDBC(v7);
}

void sub_1009EF838(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1009EF860(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v9 = v7;
  sub_10068CDBC((void ***)&v9);
  sub_100828730(v8, a2, a3, a4);
  v7[0] = (void **)v8;
  sub_10068CDBC(v7);
}

void sub_1009EF8E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1009EF90C(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)(a1 + 257)) {
    return 0LL;
  }
  uint64_t result = sub_100400B64(a1);
  if ((_DWORD)result)
  {
    uint64_t result = sub_100869780(a2);
    if ((_DWORD)result)
    {
      double v5 = *((double *)sub_100F4BF44() + 10);
      sub_1009EF860(a1, a2, (uint64_t *)&v31, v5);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      uint64_t v6 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = (uint64_t)v31;
        uint64_t v7 = v32;
        sub_1008698F8(a2, &__p);
        uint64_t v9 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
           ? &__p
           : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        LODWORD(buf.__r_.__value_.__l.__data_) = 134349571;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = 0x6DB6DB6DB6DB6DB7LL
                                                                               * (((uint64_t)v7 - v8) >> 4);
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v9;
        HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
        double v37 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "CLWifiAssociatedApCentroidDatabase, purging %{public}lu records with location %{private}s and threshold %{public}.1f",  (uint8_t *)&buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101866B30);
        }
        uint64_t v24 = qword_101934858;
        uint64_t v26 = (uint64_t)v31;
        uint64_t v25 = v32;
        sub_1008698F8(a2, &v33);
        if ((v33.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v27 = &v33;
        }
        else {
          uint64_t v27 = (std::stringbuf::string_type *)v33.__r_.__value_.__r.__words[0];
        }
        LODWORD(__p.__r_.__value_.__l.__data_) = 134349571;
        *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = 0x6DB6DB6DB6DB6DB7LL
                                                                               * (((uint64_t)v25 - v26) >> 4);
        WORD2(__p.__r_.__value_.__r.__words[1]) = 2081;
        *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v27;
        HIWORD(__p.__r_.__value_.__r.__words[2]) = 2050;
        double v35 = v5;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v24,  0LL,  "CLWifiAssociatedApCentroidDatabase, purging %{public}lu records with location %{private}s and threshold %{public}.1f",  &__p,  32);
        uint64_t v29 = v28;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiAssociatedApCentroidDatabase::purgeRecordsWithDistanceLargerThanThreshold(const CLDaemonLocation &)",  "%s\n",  (const char *)v29);
        if (v29 != &buf) {
          free(v29);
        }
      }

      int v10 = v31;
      for (uint64_t i = v32; v10 != i; v10 += 14)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101866B30);
        }
        uint64_t v12 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          sub_1006083F0((uint64_t)v10, &buf);
          int size = (char)buf.__r_.__value_.__s.__size_;
          std::string::size_type v14 = buf.__r_.__value_.__r.__words[0];
          sub_1006088AC((uint64_t)v10, a2);
          LODWORD(__p.__r_.__value_.__l.__data_) = 136380931;
          p_std::stringbuf::string_type buf = &buf;
          if (size < 0) {
            p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)v14;
          }
          *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_buf;
          WORD2(__p.__r_.__value_.__r.__words[1]) = 2050;
          *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "CLWifiAssociatedApCentroidDatabase, purging record %{private}s with distance %{public}.1f",  (uint8_t *)&__p,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101866B30);
          }
          uint64_t v17 = qword_101934858;
          sub_1006083F0((uint64_t)v10, &__p);
          int v18 = (char)__p.__r_.__value_.__s.__size_;
          std::string::size_type v19 = __p.__r_.__value_.__r.__words[0];
          sub_1006088AC((uint64_t)v10, a2);
          LODWORD(v33.__r_.__value_.__l.__data_) = 136380931;
          p_p = &__p;
          if (v18 < 0) {
            p_p = (std::stringbuf::string_type *)v19;
          }
          *(std::string::size_type *)((char *)v33.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
          WORD2(v33.__r_.__value_.__r.__words[1]) = 2050;
          *(std::string::size_type *)((char *)&v33.__r_.__value_.__r.__words[1] + 6) = v20;
          LODWORD(v30) = 22;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v17,  2LL,  "CLWifiAssociatedApCentroidDatabase, purging record %{private}s with distance %{public}.1f",  &v33,  v30);
          uint64_t v23 = v22;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiAssociatedApCentroidDatabase::purgeRecordsWithDistanceLargerThanThreshold(const CLDaemonLocation &)",  "%s\n",  (const char *)v23);
          if (v23 != &buf) {
            free(v23);
          }
        }

        buf.__r_.__value_.__r.__words[0] = *v10;
        sub_1009EE440(a1, (uint64_t)&buf);
      }

      *(_BYTE *)(a1 + 257) = 0;
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v31;
      sub_10068CDBC((void ***)&buf);
      return 1LL;
    }
  }

  return result;
}

void sub_1009EFE08( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26, uint64_t a27, char *a28, uint64_t a29, int a30, __int16 a31, char a32, char a33)
{
  a28 = &a14;
  sub_10068CDBC((void ***)&a28);
  _Unwind_Resume(a1);
}

void sub_1009EFE78(uint64_t a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  double v5 = v3;
  sub_10068CDBC((void ***)&v5);
  sub_100828974(v4, a2);
  v3[0] = (void **)v4;
  sub_10068CDBC(v3);
}

void sub_1009EFEDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1009EFF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 256;
  if (sub_100EA8FE0())
  {
    sub_1009EDF08(a1, (uint64_t *)__p);
    sub_100828370(v15, (uint64_t *)__p);
    buf.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
    sub_10068CDBC((void ***)&buf);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101866B30);
    }
    double v5 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_100828974(v15, __p);
      uint64_t v6 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
         ? __p
         : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLWifiAssociatedApCentroidDatabase, metrics, %{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101866B30);
      }
      uint64_t v11 = qword_101934858;
      sub_100828974(v15, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v17 = 136380675;
      int v18 = p_buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v11,  2LL,  "CLWifiAssociatedApCentroidDatabase, metrics, %{private}s",  &v17,  12);
      std::string::size_type v14 = v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiAssociatedApCentroidDatabase::submitMetricsIfPossible(const BOOL)",  "%s\n",  (const char *)v14);
      if (v14 != __p) {
        free(v14);
      }
    }

    uint64_t v7 = sub_100828BD4(v15);
    sub_1008283C0((uint64_t *)v15);
    double v9 = v8;
    double v10 = sub_100828458((uint64_t *)v15);
    sub_100EA901C(v9, v10, v4, v7, a2);
    __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v15;
    sub_10068CDBC((void ***)__p);
  }

void sub_1009F01A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void **a22)
{
  a22 = (void **)&a12;
  sub_10068CDBC(&a22);
  _Unwind_Resume(a1);
}

char *sub_1009F01E4@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[255] < 0) {
    return (char *)sub_1010DD48C((_BYTE *)a2, *((void **)result + 29), *((void *)result + 30));
  }
  *(_OWORD *)a2 = *(_OWORD *)(result + 232);
  *(void *)(a2 + 16) = *((void *)result + 31);
  return result;
}

uint64_t sub_1009F0210(uint64_t a1)
{
  *(void *)a1 = off_101866AF0;
  return sub_10040063C(a1);
}

void sub_1009F024C(uint64_t a1)
{
  *(void *)a1 = off_101866AF0;
  std::logic_error v2 = (void *)sub_10040063C(a1);
  operator delete(v2);
}

void sub_1009F028C(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

int *sub_1009F02B8(int *a1, uint64_t a2)
{
  std::logic_error v2 = (void *)(a2 + 8);
  double v5 = a1 + 2;
  switch(*(_DWORD *)a2 ^ (*(int *)a2 >> 31))
  {
    case 0:
      *(void *)double v5 = *v2;
      break;
    case 1:
      if (*(char *)(a2 + 31) < 0)
      {
        sub_1010DD48C(v5, *(void **)(a2 + 8), *(void *)(a2 + 16));
      }

      else
      {
        __int128 v6 = *(_OWORD *)v2;
        *((void *)v5 + 2) = *(void *)(a2 + 24);
        *(_OWORD *)double v5 = v6;
      }

      break;
    default:
      sub_1002DDAB0();
  }

  *a1 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  return a1;
}

_UNKNOWN **sub_1009F034C(int *a1)
{
  int v1 = *a1 ^ (*a1 >> 31);
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      break;
    default:
      sub_1002DDAB0();
  }

  return result;
}

void sub_1009F0398(const std::logic_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1009F03EC((uint64_t)exception, a1);
}

void sub_1009F03D4(_Unwind_Exception *a1)
{
}

uint64_t sub_1009F03EC(uint64_t a1, const std::logic_error *a2)
{
  *(void *)a1 = &off_101818AB8;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 48) = 0LL;
  *(_DWORD *)(a1 + 56) = -1;
  *(void *)a1 = &off_101866BC0;
  *(void *)(a1 + 8) = off_101866BF0;
  *(void *)(a1 + 24) = off_101866C18;
  *(void *)(a1 + 32) = 0LL;
  return a1;
}

uint64_t sub_1009F0448(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_101818AE8;
  sub_10001233C((uint64_t *)(a1 + 32));
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));
  return a1;
}

char *sub_1009F0488(uint64_t a1)
{
  std::logic_error v2 = (char *)operator new(0x40uLL);
  *(void *)std::logic_error v2 = &off_101818AB8;
  std::logic_error::logic_error((std::logic_error *)(v2 + 8), (const std::logic_error *)(a1 + 8));
  *((void *)v2 + 1) = &off_101866C38;
  *((void *)v2 + 3) = &off_101818AE8;
  uint64_t v3 = *(void *)(a1 + 32);
  *((void *)v2 + 4) = v3;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 24LL))(v3);
  }
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a1 + 40);
  *((_DWORD *)v2 + 14) = *(_DWORD *)(a1 + 56);
  *(void *)std::logic_error v2 = &off_101866BC0;
  *((void *)v2 + 1) = off_101866BF0;
  *((void *)v2 + 3) = off_101866C18;
  sub_10001242C((uint64_t)(v2 + 24), a1 + 24);
  return v2;
}

void sub_1009F0550(_Unwind_Exception *a1)
{
}

void sub_1009F0584(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1009F0720((uint64_t)exception, a1);
}

void sub_1009F05C0(_Unwind_Exception *a1)
{
}

void sub_1009F05D4(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_101818AE8;
  sub_10001233C((uint64_t *)(a1 + 32));
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));
  operator delete((void *)a1);
}

void sub_1009F0614(uint64_t a1)
{
  *(void *)(a1 + 16) = &off_101818AE8;
  sub_10001233C((uint64_t *)(a1 + 24));
  std::logic_error::~logic_error((std::logic_error *)a1);
}

void sub_1009F064C(uint64_t a1)
{
  std::logic_error v2 = (void *)(a1 - 8);
  *(void *)(a1 + 16) = &off_101818AE8;
  sub_10001233C((uint64_t *)(a1 + 24));
  std::logic_error::~logic_error((std::logic_error *)a1);
  operator delete(v2);
}

void sub_1009F0690(void *a1)
{
  *a1 = &off_101818AE8;
  sub_10001233C(a1 + 1);
  std::logic_error::~logic_error((std::logic_error *)a1 - 1);
}

void sub_1009F06C8(void *a1)
{
  std::logic_error v2 = a1 - 3;
  *a1 = &off_101818AE8;
  sub_10001233C(a1 + 1);
  std::logic_error::~logic_error((std::logic_error *)a1 - 1);
  operator delete(v2);
}

void sub_1009F070C(std::logic_error *a1)
{
}

uint64_t sub_1009F0720(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_101818AB8;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(void *)(a1 + 8) = &off_101866C38;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_101818AE8;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  }
  __int128 v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_101866BC0;
  *(void *)(a1 + 8) = off_101866BF0;
  *(void *)(a1 + 24) = off_101866C18;
  return a1;
}

void sub_1009F07CC(_Unwind_Exception *a1)
{
}

void sub_1009F07E0()
{
  exception = __cxa_allocate_exception(0x38uLL);
  exception[4] = 0LL;
  exception[5] = 0LL;
  *((_DWORD *)exception + 12) = -1;
  void *exception = &off_101866CC0;
  exception[1] = off_101866CF0;
  exception[2] = off_101866D18;
  exception[3] = 0LL;
}

_DWORD *sub_1009F0830(int *a1)
{
  int v2 = *a1;
  uint64_t result = a1 + 2;
  switch(v2 ^ (v2 >> 31))
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0LL;
      break;
    default:
      sub_1002DDAB0();
  }

  return result;
}

void *sub_1009F0870(uint64_t a1)
{
  int v2 = operator new(0x38uLL);
  *int v2 = &off_101818AB8;
  v2[1] = &off_101866D38;
  v2[2] = &off_101818AE8;
  uint64_t v3 = *(void *)(a1 + 24);
  v2[3] = v3;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 24LL))(v3);
  }
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_DWORD *)v2 + 12) = *(_DWORD *)(a1 + 48);
  *int v2 = &off_101866CC0;
  v2[1] = off_101866CF0;
  v2[2] = off_101866D18;
  sub_10001242C((uint64_t)(v2 + 2), a1 + 16);
  return v2;
}

void sub_1009F092C(_Unwind_Exception *a1)
{
}

void sub_1009F0960(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_1009F09BC((uint64_t)exception, a1);
}

void sub_1009F099C(_Unwind_Exception *a1)
{
}

const char *sub_1009F09B0()
{
  return "boost::bad_get: failed value get using boost::get";
}

uint64_t sub_1009F09BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_101818AB8;
  *(void *)(a1 + 8) = &off_101866D38;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_101818AE8;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  }
  __int128 v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_101866CC0;
  *(void *)(a1 + 8) = off_101866CF0;
  *(void *)(a1 + 16) = off_101866D18;
  return a1;
}

void sub_1009F0A5C(_Unwind_Exception *a1)
{
}

_DWORD *sub_1009F0A70(int *a1)
{
  int v1 = 0LL;
  switch(*a1 ^ (*a1 >> 31))
  {
    case 0:
      return v1;
    case 1:
      int v1 = a1 + 2;
      break;
    default:
      sub_1002DDAB0();
  }

  return v1;
}

uint64_t sub_1009F0AB8( uint64_t *a1, void *a2, uint64_t a3, int *a4, double *a5, double *a6, uint64_t *a7, const std::string *a8, uint64_t *a9)
{
  uint64_t v10 = *a1;
  uint64_t v11 = 0x6DB6DB6DB6DB6DB7LL * ((a1[1] - *a1) >> 4);
  unint64_t v12 = v11 + 1;
  uint64_t v20 = (uint64_t)(a1 + 2);
  unint64_t v21 = 0x6DB6DB6DB6DB6DB7LL * ((a1[2] - v10) >> 4);
  if (2 * v21 > v12) {
    unint64_t v12 = 2 * v21;
  }
  if (v21 >= 0x124924924924924LL) {
    unint64_t v22 = 0x249249249249249LL;
  }
  else {
    unint64_t v22 = v12;
  }
  uint64_t v30 = a1 + 2;
  if (v22) {
    uint64_t v23 = (char *)sub_10005057C(v20, v22);
  }
  else {
    uint64_t v23 = 0LL;
  }
  uint64_t v26 = v23;
  uint64_t v27 = &v23[112 * v11];
  uint64_t v28 = (uint64_t)v27;
  uint64_t v29 = &v23[112 * v22];
  sub_100607090((uint64_t)v27, a2, a3, *a4, *a7, a8, *a9, *a5, *a6);
  uint64_t v28 = (uint64_t)(v27 + 112);
  sub_100828E18(a1, &v26);
  uint64_t v24 = a1[1];
  sub_100828E9C((uint64_t)&v26);
  return v24;
}

void sub_1009F0C10(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1009F0C24(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (*(int *)a1 >> 31);
  if (v1)
  {
    if (v1 != 1) {
      sub_1002DDAB0();
    }
  }

uint64_t sub_1009F0C68(uint64_t result, uint64_t a2)
{
  int v2 = (_OWORD *)(result + 8);
  uint64_t v3 = (__int128 *)(a2 + 8);
  int v4 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  if (v4 == 1)
  {
    __int128 v5 = *v3;
    *(void *)(result + 24) = *(void *)(a2 + 24);
    *int v2 = v5;
    *(void *)(a2 + 16) = 0LL;
    *(void *)(a2 + 24) = 0LL;
    *(void *)uint64_t v3 = 0LL;
    int v4 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  }

  else
  {
    if (v4) {
      sub_1002DDAB0();
    }
    *(void *)int v2 = *(void *)v3;
  }

  *(_DWORD *)uint64_t result = v4;
  return result;
}

void sub_1009F0CD0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      int v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)int v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_1009F0D6C(_Unwind_Exception *a1)
{
}

void sub_1009F0D84()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      int v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      _WORD *v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_1009F0E10(_Unwind_Exception *a1)
{
}

uint64_t sub_1009F0E28()
{
  uint64_t result = __cxa_atexit( (void (*)(void *))&std::string::~string,  &xmmword_101999C80,  (void *)&_mh_execute_header);
  qword_101999C98 = (uint64_t)"MAC";
  dword_101999CA0 = 1;
  word_101999CA4 = 1;
  byte_101999CA8 = 0;
  byte_101999CC0 = 0;
  qword_101999CC8 = (uint64_t)"Latitude";
  dword_101999CD0 = 2;
  word_101999CD4 = 0;
  byte_101999CD8 = 0;
  byte_101999CF0 = 0;
  qword_101999CF8 = (uint64_t)"Longitude";
  dword_101999D00 = 2;
  word_101999D04 = 0;
  byte_101999D08 = 0;
  byte_101999D20 = 0;
  qword_101999D28 = (uint64_t)"HorizontalAccuracy";
  dword_101999D30 = 2;
  word_101999D34 = 0;
  byte_101999D38 = 0;
  byte_101999D50 = 0;
  qword_101999D58 = (uint64_t)"Altitude";
  dword_101999D60 = 2;
  word_101999D64 = 0;
  byte_101999D68 = 0;
  byte_101999D80 = 0;
  qword_101999D88 = (uint64_t)"VerticalAccuracy";
  dword_101999D90 = 2;
  word_101999D94 = 0;
  byte_101999D98 = 0;
  byte_101999DB0 = 0;
  qword_101999DB8 = (uint64_t)"Reach";
  dword_101999DC0 = 1;
  word_101999DC4 = 0;
  byte_101999DC8 = 0;
  byte_101999DE0 = 0;
  qword_101999DE8 = (uint64_t)"LastUpdatedTimestamp";
  dword_101999DF0 = 2;
  word_101999DF4 = 0;
  byte_101999DF8 = 0;
  byte_101999E10 = 0;
  qword_101999E18 = (uint64_t)"StationaryTimeInSeconds";
  dword_101999E20 = 2;
  word_101999E24 = 0;
  byte_101999E28 = 0;
  byte_101999E40 = 0;
  qword_101999E48 = (uint64_t)"LoiType";
  dword_101999E50 = 1;
  word_101999E54 = 0;
  byte_101999E58 = 0;
  byte_101999E70 = 0;
  qword_101999E78 = (uint64_t)"CKRecordName";
  dword_101999E80 = 3;
  word_101999E84 = 0;
  byte_101999E88 = 0;
  byte_101999EA0 = 0;
  qword_101999EA8 = (uint64_t)"CKSystemFields";
  dword_101999EB0 = 4;
  word_101999EB4 = 0;
  byte_101999EB8 = 0;
  byte_101999ED0 = 0;
  qword_101999ED8 = 0LL;
  dword_101999EE0 = 5;
  word_101999EE4 = 0;
  byte_101999EE8 = 0;
  byte_101999F00 = 0;
  return result;
}

uint64_t sub_1009F1004(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)a1 = off_101866D60;
  uint64_t v6 = a1 + 48;
  sub_100D2D9A4(a1 + 8);
  LODWORD(v159) = *((_DWORD *)sub_100D0ABD8() + 13);
  *((void *)&v159 + 1) = *((void *)sub_100D0ABD8() + 7);
  uint64_t v160 = *((void *)sub_100D0ABD8() + 8);
  sub_1006DC674(v6, &v159);
  *(_OWORD *)(a1 + 144) = 0u;
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0xBFF0000000000000LL;
  *(void *)(a1 + 248) = 0LL;
  *(void *)(a1 + 240) = a1 + 248;
  *(void *)(a1 + 256) = 0LL;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(void *)(a1 + 272) = 0LL;
  *(void *)(a1 + 264) = a1 + 272;
  *(void *)(a1 + 280) = 0LL;
  *(_DWORD *)(a1 + 288) = 0xFFFF;
  *(void *)(a1 + 300) = 0LL;
  *(void *)(a1 + 292) = 0LL;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 308) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 324) = _Q1;
  *(_OWORD *)(a1 + 340) = _Q1;
  *(_OWORD *)(a1 + 356) = _Q1;
  *(_DWORD *)(a1 + 372) = 0;
  *(_DWORD *)(a1 + 400) = 0;
  *(void *)(a1 + 376) = 0xBFF0000000000000LL;
  *(void *)(a1 + 384) = 0LL;
  *(void *)(a1 + 392) = 0LL;
  *(void *)(a1 + 404) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 412) = 0x7FFFFFFF;
  *(void *)(a1 + 424) = 0LL;
  *(void *)(a1 + 432) = 0LL;
  *(void *)(a1 + 416) = 0LL;
  *(_BYTE *)(a1 + 440) = 0;
  *(void *)(a1 + 444) = 0xFFFF00000000LL;
  *(void *)(a1 + 452) = 0LL;
  *(void *)(a1 + 460) = 0LL;
  *(_OWORD *)(a1 + 468) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 484) = _Q1;
  *(_OWORD *)(a1 + 500) = _Q1;
  *(_OWORD *)(a1 + 516) = _Q1;
  __int128 v158 = _Q1;
  *(_DWORD *)(a1 + 532) = 0;
  *(_DWORD *)(a1 + 560) = 0;
  *(void *)(a1 + 536) = 0xBFF0000000000000LL;
  *(void *)(a1 + 544) = 0LL;
  *(void *)(a1 + 552) = 0LL;
  *(void *)(a1 + 564) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 572) = 0x7FFFFFFF;
  *(_BYTE *)(a1 + 600) = 0;
  *(void *)(a1 + 576) = 0LL;
  *(void *)(a1 + 584) = 0LL;
  *(void *)(a1 + 592) = 0LL;
  *(void *)(a1 + 604) = 0LL;
  *(_BYTE *)(a1 + 612) = sub_1002958AC() == 1;
  *(_WORD *)(a1 + 613) = 0;
  unint64_t v12 = (unsigned __int8 *)(a1 + 615);
  *(_DWORD *)(a1 + 615) = 16843009;
  *(_BYTE *)(a1 + 619) = *((_BYTE *)sub_100D0ABB4() + 2);
  *(_BYTE *)(a1 + 620) = 1;
  sub_1004F2598();
  *(_BYTE *)(a1 + 621) = sub_1001B9A1C() ^ 1;
  uint64_t v13 = (uint64_t *)(a1 + 712);
  *(void *)(a1 + 680) = 0LL;
  *(_DWORD *)(a1 + 688) = 0;
  *(void *)(a1 + 696) = 0LL;
  *(_OWORD *)(a1 + 622) = 0u;
  *(_DWORD *)(a1 + 637) = 0;
  *(void *)(a1 + 648) = 0LL;
  *(_OWORD *)(a1 + 656) = 0u;
  *(void *)(a1 + 704) = 0x300000000LL;
  *(_OWORD *)(a1 + 712) = xmmword_101343550;
  *(_DWORD *)(a1 + 728) = 0;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_WORD *)(a1 + 752) = 257;
  *(_OWORD *)(a1 + 760) = xmmword_101343560;
  *(void *)(a1 + 776) = 0LL;
  *(_BYTE *)(a1 + 784) = 0;
  *(void *)(a1 + 808) = 0LL;
  *(void *)(a1 + 800) = 0LL;
  *(void *)(a1 + 792) = a1 + 800;
  *(void *)(a1 + 832) = 0LL;
  *(void *)(a1 + 824) = 0LL;
  *(void *)(a1 + 816) = a1 + 824;
  *(_OWORD *)(a1 + 840) = 0u;
  *(_OWORD *)(a1 + 856) = 0u;
  *(_OWORD *)(a1 + 872) = 0u;
  *(_OWORD *)(a1 + 888) = 0u;
  sub_1004F2598();
  unsigned int v14 = sub_1004F64FC();
  sub_100A0BB84(a1 + 904, a1, (v14 >> 15) & 1);
  sub_100B58B14(a1 + 1312);
  *(_BYTE *)(a1 + 1648) = 1;
  *(void *)(a1 + 1656) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 1664) = v158;
  *(_OWORD *)(a1 + 1680) = v158;
  *(_OWORD *)(a1 + 1696) = v158;
  *(_OWORD *)(a1 + 1712) = v158;
  *(_OWORD *)(a1 + 1728) = v158;
  *(_OWORD *)(a1 + 1744) = v158;
  *(void *)(a1 + 1760) = 0xBFF0000000000000LL;
  *(void *)(a1 + 1768) = a2;
  sub_100D2D9A4(a1 + 1776);
  *(_DWORD *)(a1 + 1816) = a3;
  *(void *)(a1 + 1824) = 0LL;
  *(_WORD *)(a1 + 1872) = 0;
  *(_OWORD *)(a1 + 1888) = 0u;
  *(void *)(a1 + 1880) = a1 + 1888;
  *(_OWORD *)(a1 + 1912) = 0u;
  *(void *)(a1 + 1904) = a1 + 1912;
  *(_OWORD *)(a1 + 1928) = 0u;
  sub_1002F0B04(buf);
  int v15 = sub_1002A6F64(*(uint64_t *)&buf[0], "FenceUseCellPositioning", (BOOL *)(a1 + 615));
  int v16 = v15;
  int v17 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
  if (!*((void *)&buf[0] + 1)) {
    goto LABEL_5;
  }
  int v18 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
  do
    unint64_t v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    if (!v16) {
      goto LABEL_11;
    }
  }

  else
  {
LABEL_5:
    if (!v15) {
      goto LABEL_11;
    }
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  uint64_t v20 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    int v21 = *v12;
    LODWORD(buf[0]) = 67174657;
    DWORD1(buf[0]) = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Fence: Overriding cell positioning usage to %{private}d",  (uint8_t *)buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v118 = *v12;
    int v161 = 67174657;
    LODWORD(v162) = v118;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence: Overriding cell positioning usage to %{private}d",  &v161,  8,  a1 + 1904,  a1 + 824,  a1 + 800,  a1 + 240,  a1 + 1888);
    __int16 v120 = (char *)v119;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)",  "%s\n",  v119);
  }

void sub_1009F29DC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, void **a13, uint64_t a14, void **a15)
{
  int v21 = *(void **)(v15 + 216);
  if (v21)
  {
    *(void *)(v15 + 224) = v21;
    operator delete(v21);
  }

  sub_100210A94((void *)(v19 + 24));
  unint64_t v22 = *(void **)v19;
  if (*(void *)v19)
  {
    *(void *)(v15 + 152) = v22;
    operator delete(v22);
  }

  sub_10049108C((void *)(v15 + 72));
  _Unwind_Resume(a1);
}

uint64_t sub_1009F2B58(uint64_t a1)
{
  if (*((_BYTE *)sub_100D0ABB4() + 377))
  {
    sub_1004F2598();
    char v2 = sub_1004F8A40();
  }

  else
  {
    char v2 = 0;
  }

  char v3 = _os_feature_enabled_impl("CoreLocation", "cl_fence_home_loi_exit_metrics");
  BOOL v4 = 1;
  if ((v3 & 1) == 0 && (v2 & 1) == 0) {
    BOOL v4 = *((_BYTE *)sub_100D0ABB4() + 378) != 0;
  }
  *(_BYTE *)(a1 + 1874) = v4;
  sub_1004F2598();
  char v5 = sub_1004FAA50();
  uint64_t result = (uint64_t)sub_100D0ABB4();
  if (*(_BYTE *)(result + 376))
  {
    char v7 = 1;
  }

  else
  {
    uint64_t result = _os_feature_enabled_impl("CoreLocation", "cl_fence_milo_home");
    char v7 = result | v5 ^ 1;
  }

  *(_BYTE *)(a1 + 1875) = v7;
  return result;
}

uint64_t sub_1009F2C0C(uint64_t a1)
{
  *(void *)a1 = off_101866D60;

  sub_100A0B0DC(a1 + 1904, *(void **)(a1 + 1912));
  sub_100A0B014(a1 + 1880, *(void **)(a1 + 1888));
  sub_100527E2C((uint64_t *)(a1 + 1824), 0LL);
  sub_100A0BD74(a1 + 904);
  sub_100A0AF40(a1 + 816, *(void **)(a1 + 824));
  sub_100A0AE5C(a1 + 792, *(void **)(a1 + 800));
  sub_1007005F0(a1 + 264, *(void **)(a1 + 272));
  sub_100A0AD94(a1 + 240, *(void **)(a1 + 248));
  char v2 = *(void **)(a1 + 216);
  if (v2)
  {
    *(void *)(a1 + 224) = v2;
    operator delete(v2);
  }

  sub_100210A94((void *)(a1 + 168));
  char v3 = *(void **)(a1 + 144);
  if (v3)
  {
    *(void *)(a1 + 152) = v3;
    operator delete(v3);
  }

  sub_10049108C((void *)(a1 + 72));
  return a1;
}

void sub_1009F2CD4(uint64_t a1)
{
  int v1 = (void *)sub_1009F2C0C(a1);
  operator delete(v1);
}

void sub_1009F2CE8(uint64_t a1, char a2)
{
  *(_DWORD *)(a1 + 288) = 0xFFFF;
  *(void *)(a1 + 300) = 0LL;
  *(void *)(a1 + 292) = 0LL;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 308) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 324) = _Q1;
  *(_OWORD *)(a1 + 340) = _Q1;
  *(_OWORD *)(a1 + 356) = _Q1;
  *(_DWORD *)(a1 + 372) = 0;
  *(void *)(a1 + 384) = 0LL;
  *(void *)(a1 + 392) = 0LL;
  *(void *)(a1 + 376) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 400) = 0;
  *(void *)(a1 + 404) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 412) = 0x7FFFFFFF;
  *(void *)(a1 + 424) = 0LL;
  *(void *)(a1 + 432) = 0LL;
  *(void *)(a1 + 416) = 0LL;
  *(_BYTE *)(a1 + 440) = 0;
  *(_DWORD *)(a1 + 448) = 0xFFFF;
  *(void *)(a1 + 460) = 0LL;
  *(void *)(a1 + 452) = 0LL;
  *(_OWORD *)(a1 + 468) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 484) = _Q1;
  *(_OWORD *)(a1 + 500) = _Q1;
  *(_OWORD *)(a1 + 516) = _Q1;
  *(_DWORD *)(a1 + 532) = 0;
  *(void *)(a1 + 536) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 560) = 0;
  *(void *)(a1 + 544) = 0LL;
  *(void *)(a1 + 552) = 0LL;
  *(void *)(a1 + 564) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 572) = 0x7FFFFFFF;
  *(void *)(a1 + 592) = 0LL;
  *(void *)(a1 + 576) = 0LL;
  *(void *)(a1 + 584) = 0LL;
  *(_BYTE *)(a1 + 600) = 0;
  nullsub_10(a1 + 1312);
  *(void *)(a1 + 152) = *(void *)(a1 + 144);
  if ((a2 & 1) == 0)
  {
    uint64_t v9 = *(void *)(a1 + 1824);
    if (v9)
    {
      sub_1003D444C(v9);
    }

    else
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v10 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Fence: Warning data can't be cleared yet",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        v13[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence: Warning data can't be cleared yet",  v13,  2);
        unint64_t v12 = (uint8_t *)v11;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::clearLocationData(BOOL)", "%s\n", v11);
        if (v12 != buf) {
          free(v12);
        }
      }

      *(_BYTE *)(a1 + 614) = 1;
    }
  }

void sub_1009F2F70(uint64_t a1, int a2)
{
  if (*(unsigned __int8 *)(a1 + 612) != a2)
  {
    *(_BYTE *)(a1 + 612) = a2;
    sub_100A0BD78(a1 + 904, a2);
    sub_1009F2FB4(a1);
  }

void sub_1009F2FB4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 612) && *(_BYTE *)(a1 + 613))
  {
    uint64_t v9 = 0LL;
    uint64_t v10 = 0LL;
    unint64_t v11 = 0LL;
    char v2 = *(void **)(a1 + 240);
    char v3 = (void *)(a1 + 248);
    if (v2 != (void *)(a1 + 248))
    {
      BOOL v4 = 0LL;
      do
      {
        char v5 = (__int128 *)(v2 + 4);
        if ((unint64_t)v4 >= v11)
        {
          BOOL v4 = (char *)sub_100669E18(&v9, v5);
        }

        else
        {
          sub_1002718F0(v4, v5);
          v4 += 248;
        }

        uint64_t v10 = v4;
        uint64_t v6 = (void *)v2[1];
        if (v6)
        {
          do
          {
            char v7 = v6;
            uint64_t v6 = (void *)*v6;
          }

          while (v6);
        }

        else
        {
          do
          {
            char v7 = (void *)v2[2];
            BOOL v8 = *v7 == (void)v2;
            char v2 = v7;
          }

          while (!v8);
        }

        char v2 = v7;
      }

      while (v7 != v3);
    }

    (*(void (**)(void, uint64_t *))(**(void **)(a1 + 1768) + 408LL))(*(void *)(a1 + 1768), &v9);
    unint64_t v12 = (void **)&v9;
    sub_1006684D8(&v12);
  }

void sub_1009F3098( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_1006684D8(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_1009F30C4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 1313) = a2;
  return result;
}

void sub_1009F30CC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_100700B84(a1 + 240, (unsigned __int8 *)a2);
  if (a1 + 248 == v6)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    unsigned int v14 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v15 = a2 + 24;
      *(_DWORD *)std::stringbuf::string_type buf = 136380675;
      uint64_t v23 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "#Warning didn't find fence for location type, %{private}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v18 = *(void *)(a2 + 24);
      uint64_t v17 = a2 + 24;
      uint64_t v16 = v18;
      *(_DWORD *)uint64_t v20 = 136380675;
      *(void *)&v20[4] = v16;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "#Warning didn't find fence for location type, %{private}s",  v20,  12,  *(_OWORD *)v20,  *(void *)&v20[16],  v21);
      goto LABEL_28;
    }
  }

  else
  {
    uint64_t v7 = *(int *)(v6 + 204);
    if ((_DWORD)v7 != a3)
    {
      *(_DWORD *)(v6 + 204) = a3;
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      BOOL v8 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v9 = a2 + 24;
        *(_DWORD *)std::stringbuf::string_type buf = 134284035;
        uint64_t v23 = v7;
        __int16 v24 = 2049;
        uint64_t v25 = a3;
        __int16 v26 = 2081;
        uint64_t v27 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Setting fence location type from %{private}lu to %{private}lu for %{private}s",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        uint64_t v12 = *(void *)(a2 + 24);
        uint64_t v11 = a2 + 24;
        uint64_t v10 = v12;
        *(_DWORD *)uint64_t v20 = 134284035;
        *(void *)&v20[4] = v7;
        *(_WORD *)&v20[12] = 2049;
        *(void *)&v20[14] = a3;
        *(_WORD *)&v20[22] = 2081;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Setting fence location type from %{private}lu to %{private}lu for %{private}s",  v20,  32,  *(_OWORD *)v20,  *(void *)&v20[16],  v10);
LABEL_28:
        uint64_t v19 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::setFenceLocationTypeForFence(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, co nst CLFenceManager_Type::FenceLocationType)",  "%s\n",  v13);
        if (v19 != buf) {
          free(v19);
        }
      }
    }
  }

void sub_1009F3418(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_100700B84(a1 + 240, (unsigned __int8 *)a2);
  if (a1 + 248 == v6)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v7 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = a2 + 24;
      *(_DWORD *)std::stringbuf::string_type buf = 136380675;
      uint64_t v17 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "#Warning didn't find fence for environment type, %{private}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v11 = *(void *)(a2 + 24);
      uint64_t v10 = a2 + 24;
      uint64_t v9 = v11;
      int v14 = 136380675;
      uint64_t v15 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "#Warning didn't find fence for environment type, %{private}s",  &v14,  12);
      uint64_t v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::setEnvironmentTypeForFence(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, CLFenc eManager_Type::FenceEnvironmentType)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }
  }

  else
  {
    *(_DWORD *)(v6 + 200) = a3;
  }

void sub_1009F3608(uint64_t a1, uint64_t *a2, double a3)
{
  uint64_t p_vtable = (uint64_t)&OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934870 != -1) {
    goto LABEL_15;
  }
  while (1)
  {
    uint64_t v7 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = *a2;
      uint64_t v8 = a2[1];
      sub_10083FA1C((uint64_t)v19, __p);
      uint64_t v10 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
          ? __p
          : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 134349315;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = 0xEF7BDEF7BDEF7BDFLL * ((v8 - v9) >> 3);
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v10;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Fence: startMonitoringFences, fences, %{public}lu, status, %{private}s",  (uint8_t *)&buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (*(void *)(p_vtable + 2160) != -1LL) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v12 = qword_101934878;
      uint64_t v14 = *a2;
      uint64_t v13 = a2[1];
      sub_10083FA1C((uint64_t)v19, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v21 = 134349315;
      unint64_t v22 = 0xEF7BDEF7BDEF7BDFLL * ((v13 - v14) >> 3);
      __int16 v23 = 2081;
      __int16 v24 = p_buf;
      LODWORD(v18) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v12,  2LL,  "Fence: startMonitoringFences, fences, %{public}lu, status, %{private}s",  &v21,  v18);
      uint64_t v17 = v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::startMonitoringFences(const CFAbsoluteTime, const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  (const char *)v17);
      if (v17 != __p) {
        free(v17);
      }
    }

    uint64_t v11 = *a2;
    a2 = (uint64_t *)a2[1];
    uint64_t p_vtable = 0xFFFFFFFFLL;
    while (*(_DWORD *)(v11 + 184) != -1)
    {
      sub_1009F38E8(a1, v11, (uint64_t)v19, a3);
      v11 += 248LL;
    }

    sub_101258644();
    __break(1u);
LABEL_15:
    dispatch_once(&qword_101934870, &stru_101866E28);
  }

uint64_t sub_1009F38E8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  uint64_t v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    sub_100923668(a2, __p);
    uint64_t v9 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
       ? __p
       : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: startMonitoring, fence, %{private}s",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v12 = qword_101934878;
    sub_100923668(a2, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v17 = 136380675;
    uint64_t v18 = p_buf;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v12,  2LL,  "Fence: startMonitoring, fence, %{private}s",  &v17,  12);
    uint64_t v15 = v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::startMonitoring(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonito rLogic::FenceMonitoringStatus &, BOOL)",  "%s\n",  (const char *)v15);
    if (v15 != __p) {
      free(v15);
    }
  }

  if (*(_DWORD *)(a2 + 184) == -1)
  {
    sub_1012587AC();
    __break(1u);
  }

  uint64_t v10 = *(void *)(a1 + 256);
  sub_100A02C78(a1, a2, a3, a4);
  return (*(uint64_t (**)(void, uint64_t, void))(**(void **)(a1 + 1768) + 104LL))( *(void *)(a1 + 1768),  v10,  *(void *)(a1 + 256));
}

void sub_1009F3B68(uint64_t a1, unsigned __int8 **a2, int a3, double a4)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  uint64_t v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    unint64_t v9 = 0xEF7BDEF7BDEF7BDFLL * ((a2[1] - *a2) >> 3);
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    unint64_t v20 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: stopMonitoringFences, fences, %{public}lu",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    unint64_t v14 = 0xEF7BDEF7BDEF7BDFLL * ((a2[1] - *a2) >> 3);
    int v17 = 134349056;
    unint64_t v18 = v14;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: stopMonitoringFences, fences, %{public}lu",  &v17,  12);
    uint64_t v16 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::stopMonitoringFences(const CFAbsoluteTime, const std::vector<CLFenceManager_Type::Fence> &, BOOL)",  "%s\n",  v15);
    if (v16 != buf) {
      free(v16);
    }
  }

  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  if (*a2 != v11)
  {
    do
    {
      uint64_t v12 = sub_100700B84(a1 + 240, v10);
      if (a1 + 248 == v12)
      {
        if (a3)
        {
          uint64_t v13 = *(void *)(a1 + 1824);
          if (v13) {
            sub_1003D4FAC(v13, (uint64_t)v10);
          }
        }
      }

      else
      {
        sub_1009F3DE4(a1, (unsigned __int8 *)(v12 + 32), a3, a4);
      }

      v10 += 248;
    }

    while (v10 != v11);
    if (a2[1] != *a2) {
      sub_1009F3E60(a1, a4);
    }
  }

uint64_t sub_1009F3DE4(uint64_t a1, unsigned __int8 *a2, int a3, double a4)
{
  uint64_t v8 = *(void *)(a1 + 256);
  if ((a2[160] & 0x80) != 0) {
    sub_100A04B80((uint64_t **)a1, a2, a4);
  }
  sub_100A04F24(a1, (uint64_t)a2, a3, a4);
  return (*(uint64_t (**)(void, uint64_t, void))(**(void **)(a1 + 1768) + 104LL))( *(void *)(a1 + 1768),  v8,  *(void *)(a1 + 256));
}

void sub_1009F3E60(uint64_t a1, double a2)
{
  int v4 = sub_100A0D1F8(a1 + 904);
  if (*(_BYTE *)(a1 + 612) && ((int v5 = v4, !*(_BYTE *)(a1 + 730)) || *(_BYTE *)(a1 + 731)))
  {
    if (v4)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v6 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Fence: FenceMonitorWifi needs tracking",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        LOWORD(v33) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: FenceMonitorWifi needs tracking",  &v33,  2);
        int v29 = (uint8_t *)v28;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::engageContinuousTrackingIfNeeded(const CFAbsoluteTime)",  "%s\n",  v28);
        if (v29 != buf) {
          free(v29);
        }
      }
    }

    int v7 = *(_DWORD *)(a1 + 256);
    BOOL v8 = sub_1009F4C34(a1);
    BOOL v9 = v8;
    if (v7 < 1) {
      int v10 = 1;
    }
    else {
      int v10 = v5;
    }
    if (v10) {
      int v11 = v5;
    }
    else {
      int v11 = v8 | v5;
    }
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v12 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67240704;
      *(_DWORD *)unint64_t v38 = v11;
      *(_WORD *)&v38[4] = 1026;
      *(_DWORD *)&v38[6] = v7;
      __int16 v39 = 1026;
      BOOL v40 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Fence: engageContinuousTrackingIfNeeded, isEngageContinousTracking, %{public}d, numOfMonitoredFences, %{public}d, %{public}d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v33 = 67240704;
      *(_DWORD *)uint64_t v34 = v11;
      *(_WORD *)&v34[4] = 1026;
      *(_DWORD *)&v34[6] = v7;
      __int16 v35 = 1026;
      BOOL v36 = v9;
      LODWORD(v32) = 20;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: engageContinuousTrackingIfNeeded, isEngageContinousTracking, %{public}d, numOfMonitoredFences, %{public}d, %{public}d",  &v33,  v32);
      uint64_t v27 = (uint8_t *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::engageContinuousTrackingIfNeeded(const CFAbsoluteTime)",  "%s\n",  v26);
      if (v27 != buf) {
        free(v27);
      }
    }

    *(_BYTE *)(a1 + 623) = v11;
    if (v11)
    {
      double v13 = *(double *)(a1 + 624);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      double v14 = v13 - a2;
      uint64_t v15 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134349056;
        *(double *)unint64_t v38 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "engageContinuousTrackingIfNeeded, timeToNextTimer, %{public}lf",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v33 = 134349056;
        *(double *)uint64_t v34 = v14;
        LODWORD(v32) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "engageContinuousTrackingIfNeeded, timeToNextTimer, %{public}lf",  &v33,  v32);
        int v31 = (uint8_t *)v30;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::engageContinuousTrackingIfNeeded(const CFAbsoluteTime)",  "%s\n",  v30);
        if (v31 != buf) {
          free(v31);
        }
      }

      uint64_t v16 = *(void (**)(void))(**(void **)(a1 + 1768) + 312LL);
    }

    else
    {
      *(double *)(a1 + 624) = (*(double (**)(void))(**(void **)(a1 + 1768) + 144LL))(*(void *)(a1 + 1768));
      uint64_t v16 = *(void (**)(void))(**(void **)(a1 + 1768) + 320LL);
    }

    v16();
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v17 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      int v18 = *(unsigned __int8 *)(a1 + 612);
      int v19 = *(unsigned __int8 *)(a1 + 728);
      int v20 = *(unsigned __int8 *)(a1 + 730);
      *(_DWORD *)std::stringbuf::string_type buf = 67240704;
      *(_DWORD *)unint64_t v38 = v18;
      *(_WORD *)&v38[4] = 1026;
      *(_DWORD *)&v38[6] = v19;
      __int16 v39 = 1026;
      BOOL v40 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Fence: location services disabled, no continous tracking, %{public}d, isAirplaneMode, %{public}d, cConnected, %{public}d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v21 = *(unsigned __int8 *)(a1 + 612);
      int v22 = *(unsigned __int8 *)(a1 + 728);
      int v23 = *(unsigned __int8 *)(a1 + 730);
      int v33 = 67240704;
      *(_DWORD *)uint64_t v34 = v21;
      *(_WORD *)&v34[4] = 1026;
      *(_DWORD *)&v34[6] = v22;
      __int16 v35 = 1026;
      BOOL v36 = v23;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence: location services disabled, no continous tracking, %{public}d, isAirplaneMode, %{public}d, cConnected, %{public}d",  &v33,  20);
      uint64_t v25 = (uint8_t *)v24;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::engageContinuousTrackingIfNeeded(const CFAbsoluteTime)",  "%s\n",  v24);
      if (v25 != buf) {
        free(v25);
      }
    }

    *(_BYTE *)(a1 + 623) = 0;
    *(double *)(a1 + 624) = (*(double (**)(void))(**(void **)(a1 + 1768) + 144LL))(*(void *)(a1 + 1768));
  }

void sub_1009F4514(uint64_t a1, double a2)
{
  int v11 = 0LL;
  uint64_t v12 = 0LL;
  unint64_t v13 = 0LL;
  int v4 = *(void **)(a1 + 240);
  int v5 = (void *)(a1 + 248);
  if (v4 != (void *)(a1 + 248))
  {
    uint64_t v6 = 0LL;
    do
    {
      int v7 = (__int128 *)(v4 + 4);
      if ((unint64_t)v6 >= v13)
      {
        uint64_t v6 = (char *)sub_100669E18((uint64_t *)&v11, v7);
      }

      else
      {
        sub_1002718F0(v6, v7);
        v6 += 248;
      }

      uint64_t v12 = v6;
      BOOL v8 = (void *)v4[1];
      if (v8)
      {
        do
        {
          BOOL v9 = v8;
          BOOL v8 = (void *)*v8;
        }

        while (v8);
      }

      else
      {
        do
        {
          BOOL v9 = (void *)v4[2];
          BOOL v10 = *v9 == (void)v4;
          int v4 = v9;
        }

        while (!v10);
      }

      int v4 = v9;
    }

    while (v9 != v5);
  }

  sub_1009F3B68(a1, &v11, 1, a2);
  double v14 = &v11;
  sub_1006684D8((void ***)&v14);
}

void sub_1009F45F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_1006684D8(&a12);
  _Unwind_Resume(a1);
}

BOOL sub_1009F4620(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 1824);
  if (v2) {
    return sub_1003D57C8(v2, a2);
  }
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  int v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: state scrub prior unlock",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    v7[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: state scrub prior unlock",  v7,  2);
    uint64_t v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitor::scrubFenceStates(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  return 0LL;
}

uint64_t sub_1009F47DC(uint64_t a1, uint64_t a2, int a3)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  uint64_t v6 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    else {
      uint64_t v7 = *(void *)a2;
    }
    else {
      uint64_t v8 = *(void *)(a2 + 24);
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136380931;
    uint64_t v39 = v7;
    __int16 v40 = 2081;
    uint64_t v41 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Fence: requestRegionState, %{private}s/%{private}s",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    else {
      uint64_t v16 = *(void *)a2;
    }
    else {
      uint64_t v17 = *(void *)(a2 + 24);
    }
    int v30 = 136380931;
    uint64_t v31 = v16;
    __int16 v32 = 2081;
    uint64_t v33 = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: requestRegionState, %{private}s/%{private}s",  &v30,  22);
    int v19 = (uint8_t *)v18;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFenceManager_Type::FenceStatus CLFenceMonitor::getCurrentFenceState(const CLFenceManager_Type::Fence &, const BOOL)",  "%s\n",  v18);
    if (v19 != buf) {
      free(v19);
    }
  }

  uint64_t v9 = sub_100700B84(a1 + 240, (unsigned __int8 *)a2);
  if (a1 + 248 != v9) {
    return *(unsigned int *)(v9 + 280);
  }
  uint64_t v11 = *(void *)(a1 + 1824);
  if (v11 && a3 && (!*(_BYTE *)(a1 + 730) || *(_BYTE *)(a1 + 731))) {
    return sub_1003D5EA4(v11, a2);
  }
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  uint64_t v12 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    else {
      uint64_t v13 = *(void *)a2;
    }
    uint64_t v14 = a2 + 24;
    BOOL v15 = *(void *)(a1 + 1824) != 0LL;
    *(_DWORD *)std::stringbuf::string_type buf = 136446978;
    uint64_t v39 = v13;
    __int16 v40 = 2082;
    uint64_t v41 = v14;
    __int16 v42 = 1026;
    BOOL v43 = v15;
    __int16 v44 = 1026;
    int v45 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: requestRegionState, %{public}s/%{public}s, NOT FOUND, %{public}d, %{public}d",  buf,  0x22u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    else {
      uint64_t v20 = *(void *)a2;
    }
    int v21 = *(char *)(a2 + 47);
    uint64_t v24 = *(void *)(a2 + 24);
    uint64_t v23 = a2 + 24;
    uint64_t v22 = v24;
    if (v21 >= 0) {
      uint64_t v25 = v23;
    }
    else {
      uint64_t v25 = v22;
    }
    BOOL v26 = *(void *)(a1 + 1824) != 0LL;
    int v30 = 136446978;
    uint64_t v31 = v20;
    __int16 v32 = 2082;
    uint64_t v33 = v25;
    __int16 v34 = 1026;
    BOOL v35 = v26;
    __int16 v36 = 1026;
    int v37 = a3;
    LODWORD(v29) = 34;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: requestRegionState, %{public}s/%{public}s, NOT FOUND, %{public}d, %{public}d",  &v30,  v29);
    uint64_t v28 = (uint8_t *)v27;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFenceManager_Type::FenceStatus CLFenceMonitor::getCurrentFenceState(const CLFenceManager_Type::Fence &, const BOOL)",  "%s\n",  v27);
    if (v28 != buf) {
      free(v28);
    }
  }

  return 0xFFFFFFFFLL;
}

uint64_t sub_1009F4C1C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 730);
}

uint64_t sub_1009F4C24(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 613);
}

uint64_t sub_1009F4C2C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 612);
}

BOOL sub_1009F4C34(uint64_t a1)
{
  int v1 = *(void **)(a1 + 240);
  uint64_t v2 = (void *)(a1 + 248);
  if (v1 == (void *)(a1 + 248)) {
    return 0LL;
  }
  do
  {
    BOOL result = (v1[24] & 0x20LL) == 0;
    if ((v1[24] & 0x20) == 0) {
      break;
    }
    int v4 = (void *)v1[1];
    if (v4)
    {
      do
      {
        int v5 = v4;
        int v4 = (void *)*v4;
      }

      while (v4);
    }

    else
    {
      do
      {
        int v5 = (void *)v1[2];
        BOOL v6 = *v5 == (void)v1;
        int v1 = v5;
      }

      while (!v6);
    }

    int v1 = v5;
  }

  while (v5 != v2);
  return result;
}

uint64_t sub_1009F4C98(uint64_t a1)
{
  int v1 = *(void **)(a1 + 240);
  uint64_t v2 = (void *)(a1 + 248);
  if (v1 == (void *)(a1 + 248)) {
    return 0LL;
  }
  do
  {
    unint64_t v3 = v1[24];
    uint64_t result = (v3 >> 4) & 1;
    if ((v3 & 0x10) != 0) {
      break;
    }
    int v5 = (void *)v1[1];
    if (v5)
    {
      do
      {
        BOOL v6 = v5;
        int v5 = (void *)*v5;
      }

      while (v5);
    }

    else
    {
      do
      {
        BOOL v6 = (void *)v1[2];
        BOOL v7 = *v6 == (void)v1;
        int v1 = v6;
      }

      while (!v7);
    }

    int v1 = v6;
  }

  while (v6 != v2);
  return result;
}

uint64_t sub_1009F4CF8(uint64_t result, int a2, double a3)
{
  if (*(unsigned __int8 *)(result + 730) != a2)
  {
    uint64_t v5 = result;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    BOOL v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      int v7 = *(unsigned __int8 *)(v5 + 730);
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      BOOL v15 = "";
      __int16 v16 = 1026;
      int v17 = v7;
      __int16 v18 = 1026;
      int v19 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Connected state of watch changed, from:%{public}hhd, to:%{public}hhd}",  buf,  0x1Eu);
    }

    *(_BYTE *)(v5 + 730) = a2;
    sub_100A0BD8C(v5 + 904, a2);
    if (*(_BYTE *)(v5 + 730) && !*(_BYTE *)(v5 + 731))
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v8 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Stop monitoring, nearby", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        v11[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Stop monitoring, nearby",  v11,  2);
        BOOL v10 = (uint8_t *)v9;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::updateCompanionConnectedState(const CFAbsoluteTime, BOOL)",  "%s\n",  v9);
        if (v10 != buf) {
          free(v10);
        }
      }

      (*(void (**)(void))(**(void **)(v5 + 1768) + 344LL))(*(void *)(v5 + 1768));
      (*(void (**)(void))(**(void **)(v5 + 1768) + 280LL))(*(void *)(v5 + 1768));
      *(double *)(v5 + 624) = (*(double (**)(void))(**(void **)(v5 + 1768) + 144LL))(*(void *)(v5 + 1768));
      (*(void (**)(void))(**(void **)(v5 + 1768) + 216LL))(*(void *)(v5 + 1768));
      (*(void (**)(void))(**(void **)(v5 + 1768) + 288LL))(*(void *)(v5 + 1768));
      (*(void (**)(void))(**(void **)(v5 + 1768) + 328LL))(*(void *)(v5 + 1768));
      return sub_1009F4FEC(v5);
    }

    else
    {
      return (*(uint64_t (**)(uint64_t, const char *, uint64_t, double))(*(void *)v5 + 96LL))( v5,  "kNotificationCompanionConnectionUpdate",  1LL,  a3);
    }
  }

  return result;
}

uint64_t sub_1009F4FEC(uint64_t result)
{
  int v1 = *(void **)(result + 240);
  if (v1 != (void *)(result + 248))
  {
    do
    {
      v1[40] = 0xBFF0000000000000LL;
      *((_DWORD *)v1 + 82) = 0;
      uint64_t v2 = (void *)v1[1];
      if (v2)
      {
        do
        {
          unint64_t v3 = v2;
          uint64_t v2 = (void *)*v2;
        }

        while (v2);
      }

      else
      {
        do
        {
          unint64_t v3 = (void *)v1[2];
          BOOL v4 = *v3 == (void)v1;
          int v1 = v3;
        }

        while (!v4);
      }

      int v1 = v3;
    }

    while (v3 != (void *)(result + 248));
  }

  return result;
}

void sub_1009F5044(_BYTE *a1, int a2, double a3)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  BOOL v6 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v11 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Fence: Got kNotificationAirplaneMode, airplaneMode, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    v9[0] = 67240192;
    v9[1] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Got kNotificationAirplaneMode, airplaneMode, %{public}d",  v9,  8);
    uint64_t v8 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::updateAirplaneMode(const CFAbsoluteTime, BOOL)",  "%s\n",  v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  a1[728] = a2;
  sub_100B5A324((uint64_t)(a1 + 1312), a2);
  sub_100A0C138((uint64_t)(a1 + 904), a1[728]);
  sub_1009F3E60((uint64_t)a1, a3);
  if ((a2 & 1) == 0) {
    (*(void (**)(_BYTE *, const char *, uint64_t, double))(*(void *)a1 + 96LL))( a1,  "kNotificationAirplaneMode",  1LL,  a3);
  }
}

void sub_1009F5248(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t *a4)
{
  *(void *)std::stringbuf::string_type buf = a2;
  uint64_t v8 = sub_100A0B1A4((uint64_t **)(a1 + 240), (unsigned __int8 *)a2, (uint64_t)&unk_1012CF090, (__int128 **)buf);
  uint64_t v9 = v8;
  int v10 = *((_DWORD *)v8 + 70);
  if (*a3 != -1) {
    *((_DWORD *)v8 + 70) = *a3;
  }
  *((_DWORD *)v8 + 87) = 1;
  sub_1009CDA54((char *)&v18);
  std::string::operator=(&v18, (const std::string *)a2);
  std::string::operator=(&v19, (const std::string *)(a2 + 24));
  std::string::operator=(&v20, (const std::string *)(a2 + 48));
  __int128 v25 = *(_OWORD *)(a2 + 136);
  __int128 v26 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)(a2 + 168);
  *(void *)&v27[13] = *(void *)(a2 + 181);
  __int128 v11 = *(_OWORD *)(a2 + 88);
  __int128 v21 = *(_OWORD *)(a2 + 72);
  __int128 v22 = v11;
  __int128 v12 = *(_OWORD *)(a2 + 120);
  __int128 v23 = *(_OWORD *)(a2 + 104);
  __int128 v24 = v12;
  std::string::operator=(&v28, (const std::string *)(a2 + 192));
  id v13 = v29;
  id v29 = *(id *)(a2 + 216);

  if (&v18 != (std::string *)a2) {
    sub_10009B244( (char *)__p,  *(char **)(a2 + 224),  *(void *)(a2 + 232),  (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  int v31 = *((_DWORD *)v9 + 70);
  int v32 = v10;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  __int16 v14 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v15 = a4;
    *(_DWORD *)std::stringbuf::string_type buf = 136380675;
    *(void *)&uint8_t buf[4] = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: notify state, reason, %{private}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v33 = 136380675;
    __int16 v34 = a4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion: notify state, reason, %{private}s",  &v33,  12);
    int v17 = (char *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::notifySignificantRegionState(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const std::string)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

  *(_DWORD *)std::stringbuf::string_type buf = 1;
  sub_1009F55C0(a1, buf, (uint64_t)&v18);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_1009F558C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1009F55C0(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (*a2)
  {
    if (!*(_DWORD *)(a3 + 248)) {
      goto LABEL_8;
    }
LABEL_6:
    sub_100B5A578(a1 + 1312);
    goto LABEL_11;
  }

  int v6 = *(_DWORD *)(a3 + 136);
  if (*(_DWORD *)(a3 + 248))
  {
    if ((v6 & 0x2000) == 0) {
      goto LABEL_6;
    }
    sub_100B5A598(a1 + 1312);
  }

  else
  {
    if ((v6 & 0x2000) == 0)
    {
LABEL_8:
      sub_100B5A568(a1 + 1312);
      goto LABEL_11;
    }

    sub_100B5A588(a1 + 1312);
  }

void sub_1009F57F8(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t *a5, double a6)
{
  *(void *)std::stringbuf::string_type buf = a2;
  __int128 v12 = sub_100A0B1A4((uint64_t **)(a1 + 240), (unsigned __int8 *)a2, (uint64_t)&unk_1012CF090, (__int128 **)buf);
  if (!*a3)
  {
    if (sub_1006DC718((void *)(a1 + 48)))
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      id v13 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "converging state, declaring entry during attempt",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        LOWORD(v62.__r_.__value_.__l.__data_) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "converging state, declaring entry during attempt",  &v62,  2);
        std::stringbuf v60 = (uint8_t *)v59;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::notifySignificantRegionTransition(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &, const std::string)",  "%s\n",  v59);
        if (v60 != buf) {
          free(v60);
        }
      }

      sub_1006DC6B0((void *)(a1 + 48), buf);
      *(_BYTE *)(*(void *)buf + 56LL) = 1;
      char v14 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 176LL))(*(void *)(a1 + 1768));
      *(_BYTE *)(*(void *)buf + 16sub_100527E2C((uint64_t *)(v15 + 1824), 0LL) = v14;
      (*(void (**)(void, uint64_t, double))(**(void **)(a1 + 1768) + 208LL))( *(void *)(a1 + 1768),  2LL,  a6);
      BOOL v15 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        __int16 v16 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v17 = __ldaxr(v16);
        while (__stlxr(v17 - 1, v16));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
    }

    if (!*a3)
    {
      (*(void (**)(void, uint64_t, double))(**(void **)(a1 + 1768) + 208LL))( *(void *)(a1 + 1768),  7LL,  a6);
      if (sub_1006DC69C((int *)(a1 + 48)) && !sub_1006DC718((void *)(a1 + 48))) {
        (*(void (**)(void, uint64_t, double))(**(void **)(a1 + 1768) + 208LL))( *(void *)(a1 + 1768),  6LL,  a6);
      }
    }
  }

  double v18 = sub_1008414E0((double *)(a4 + 4), a2, (double *)(a1 + 1776));
  __asm { FMOV            V0.2D, #-1.0 }

  __src[1] = _Q0;
  __src[2] = _Q0;
  __src[3] = _Q0;
  __src[4] = _Q0;
  __src[5] = _Q0;
  __src[6] = _Q0;
  __src[7] = _Q0;
  *(void *)((char *)&__src[9] + 4) = 0LL;
  *(void *)((char *)&__src[8] + 12) = 0LL;
  *(_OWORD *)((char *)&__src[9] + 12) = xmmword_1012E0070;
  *(_OWORD *)((char *)&__src[10] + 12) = _Q0;
  *(_OWORD *)((char *)&__src[11] + 12) = _Q0;
  *(_OWORD *)((char *)&__src[12] + 12) = _Q0;
  DWORD2(__src[8]) = 0xFFFF;
  HIDWORD(__src[13]) = 0;
  *(void *)&__src[14] = 0xBFF0000000000000LL;
  __src[20] = xmmword_1012EA5D0;
  __src[21] = _Q0;
  __int128 v24 = *(_OWORD *)(a1 + 288);
  __int128 v25 = *(_OWORD *)(a1 + 304);
  __src[22] = _Q0;
  *(_OWORD *)((char *)&__src[17] + 4) = *(_OWORD *)(a4 + 140);
  *(_OWORD *)((char *)&__src[16] + 8) = *(_OWORD *)(a4 + 128);
  __int128 v26 = *(_OWORD *)(a4 + 96);
  *(_OWORD *)((char *)&__src[15] + 8) = *(_OWORD *)(a4 + 112);
  *(_OWORD *)((char *)&__src[14] + 8) = v26;
  __int128 v27 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)((char *)&__src[10] + 8) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)((char *)&__src[11] + 8) = v27;
  __int128 v28 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)((char *)&__src[12] + 8) = *(_OWORD *)(a4 + 64);
  __int128 v29 = *(_OWORD *)a4;
  *(_OWORD *)((char *)&__src[9] + 8) = *(_OWORD *)(a4 + 16);
  DWORD1(__src[18]) = 0xFFFF;
  *(void *)&__src[19] = 0LL;
  *((void *)&__src[18] + 1) = 0LL;
  *((void *)&__src[19] + 1) = 0xBFF0000000000000LL;
  *(_OWORD *)((char *)&__src[8] + 8) = v29;
  *(_OWORD *)((char *)&__src[13] + 8) = v28;
  __int128 v30 = *(_OWORD *)(a1 + 560);
  *(_OWORD *)((char *)&__src[24] + 4) = *(_OWORD *)(a1 + 544);
  *(_OWORD *)((char *)&__src[25] + 4) = v30;
  *(_OWORD *)((char *)&__src[26] + 4) = *(_OWORD *)(a1 + 576);
  __int128 v31 = *(_OWORD *)(a1 + 496);
  *(_OWORD *)((char *)&__src[20] + 4) = *(_OWORD *)(a1 + 480);
  *(_OWORD *)((char *)&__src[21] + 4) = v31;
  __int128 v32 = *(_OWORD *)(a1 + 528);
  *(_OWORD *)((char *)&__src[22] + 4) = *(_OWORD *)(a1 + 512);
  *(_OWORD *)((char *)&__src[23] + 4) = v32;
  __int128 v33 = *(_OWORD *)(a1 + 464);
  *(_OWORD *)((char *)&__src[18] + 4) = *(_OWORD *)(a1 + 448);
  *(_OWORD *)((char *)&__src[19] + 4) = v33;
  *(_OWORD *)((char *)&__src[36] + 12) = *(_OWORD *)(a1 + 428);
  __int128 v34 = *(_OWORD *)(a1 + 400);
  __src[34] = *(_OWORD *)(a1 + 384);
  __src[35] = v34;
  __src[36] = *(_OWORD *)(a1 + 416);
  __int128 v35 = *(_OWORD *)(a1 + 336);
  __src[30] = *(_OWORD *)(a1 + 320);
  __src[31] = v35;
  __int128 v36 = *(_OWORD *)(a1 + 368);
  __src[32] = *(_OWORD *)(a1 + 352);
  __src[33] = v36;
  BYTE8(__src[0]) = 1;
  *(double *)&__src[8] = a6;
  __src[28] = v24;
  __src[27] = *(_OWORD *)(a1 + 588);
  __src[29] = v25;
  DWORD1(__src[38]) = *(_DWORD *)(a1 + 604);
  (*(void (**)(uint8_t *__return_ptr))(**(void **)(a1 + 1768) + 128LL))(buf);
  __src[48] = v95;
  __src[49] = v96;
  *(void *)&__src[50] = v97;
  __src[44] = v91;
  __src[45] = v92;
  __src[47] = v94;
  __src[46] = v93;
  __src[43] = v90;
  __src[42] = *(_OWORD *)buf;
  (*(void (**)(uint8_t *__return_ptr))(**(void **)(a1 + 1768) + 136LL))(buf);
  *(_OWORD *)((char *)&__src[56] + 8) = v95;
  *(_OWORD *)((char *)&__src[57] + 8) = v96;
  *(_OWORD *)((char *)&__src[52] + 8) = v91;
  *(_OWORD *)((char *)&__src[53] + 8) = v92;
  *(_OWORD *)((char *)&__src[54] + 8) = v93;
  *(_OWORD *)((char *)&__src[55] + 8) = v94;
  *(_OWORD *)((char *)&__src[50] + 8) = *(_OWORD *)buf;
  *(_OWORD *)((char *)&__src[51] + 8) = v90;
  *((void *)&__src[58] + 1) = v97;
  __n128 v37 = sub_100869DC8(buf);
  int v38 = (*(uint64_t (**)(void, __n128))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768), v37);
  uint64_t v39 = (int *)(v12 + 35);
  sub_1008415AC(a4, v18, (uint64_t)buf, a2, (int *)v12 + 70, v38, (uint64_t)__src);
  __int16 v40 = v100;
  if (v100)
  {
    p_shared_owners = (unint64_t *)&v100->__shared_owners_;
    do
      unint64_t v42 = __ldaxr(p_shared_owners);
    while (__stlxr(v42 - 1, p_shared_owners));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }

  int v43 = *v39;
  if (*a3 != -1) {
    *uint64_t v39 = *a3;
  }
  *((_DWORD *)v12 + 87) = 1;
  sub_1009CDA54((char *)&v62);
  std::string::operator=(&v62, (const std::string *)a2);
  std::string::operator=(&v63, (const std::string *)(a2 + 24));
  std::string::operator=(&v64, (const std::string *)(a2 + 48));
  __int128 v69 = *(_OWORD *)(a2 + 136);
  __int128 v70 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)int v71 = *(_OWORD *)(a2 + 168);
  *(void *)&v71[13] = *(void *)(a2 + 181);
  __int128 v65 = *(_OWORD *)(a2 + 72);
  __int128 v66 = *(_OWORD *)(a2 + 88);
  __int128 v67 = *(_OWORD *)(a2 + 104);
  __int128 v68 = *(_OWORD *)(a2 + 120);
  std::string::operator=(&v72, (const std::string *)(a2 + 192));
  id v44 = v73;
  id v73 = *(id *)(a2 + 216);

  if (&v62 != (std::string *)a2) {
    sub_10009B244( (char *)v74,  *(char **)(a2 + 224),  *(void *)(a2 + 232),  (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  *((void *)&v68 + 1) = v12[40];
  memcpy(v86, __src, sizeof(v86));
  int v45 = *((_DWORD *)v12 + 70);
  *(_OWORD *)&v84[12] = *(_OWORD *)(a4 + 140);
  __int128 v46 = *(_OWORD *)(a4 + 128);
  __int128 v83 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)uint64_t v84 = v46;
  __int128 v47 = *(_OWORD *)(a4 + 96);
  __int128 v81 = *(_OWORD *)(a4 + 80);
  __int128 v82 = v47;
  __int128 v48 = *(_OWORD *)(a4 + 64);
  __int128 v79 = *(_OWORD *)(a4 + 48);
  __int128 v80 = v48;
  __int128 v49 = *(_OWORD *)(a4 + 32);
  __int128 v50 = *(_OWORD *)a4;
  __int128 v77 = *(_OWORD *)(a4 + 16);
  __int128 v78 = v49;
  __int128 v76 = v50;
  int v75 = v45;
  int v85 = v43;
  *(void *)&__int128 v46 = v12[42];
  double v51 = a6 - *(double *)&v46;
  BOOL v52 = *(double *)&v46 <= 0.0;
  double v53 = -1.0;
  if (!v52) {
    double v53 = v51;
  }
  *(double *)&__int128 v70 = v53;
  DWORD2(v69) = sub_100A0D208(a1 + 904, (unsigned __int8 *)a2);
  DWORD1(v69) = sub_100A0D244(a1 + 904);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  int v54 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    int v55 = a5;
    *(_DWORD *)std::stringbuf::string_type buf = 136380675;
    *(void *)&uint8_t buf[4] = v55;
    _os_log_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: notify event, reason, %{private}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    v88.type = 136380675;
    *(void *)&v88.confidence = a5;
    LODWORD(v61) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion: notify event, reason, %{private}s",  &v88,  v61);
    uint64_t v58 = (uint8_t *)v57;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::notifySignificantRegionTransition(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, c onst CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &, const std::string)",  "%s\n",  v57);
    if (v58 != buf) {
      free(v58);
    }
  }

  *(_DWORD *)std::stringbuf::string_type buf = 0;
  sub_1009F55C0(a1, buf, (uint64_t)&v62);
  *(_DWORD *)std::stringbuf::string_type buf = 6;
  sub_1009F55C0(a1, buf, (uint64_t)&v62);
  if (sub_100B58B88((_BYTE *)(a1 + 1312)))
  {
    (*(void (**)(CLMotionActivity *__return_ptr))(**(void **)(a1 + 1768) + 128LL))(&v88);
    char v56 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768));
    sub_100B5AD68( (uint64_t)buf,  (uint64_t)&v62,  (double *)v12 + 35,  (__int128 *)(a1 + 1648),  &v88,  a4,  a1 + 144,  v56,  a6,  *(_BYTE *)(a1 + 613),  *(_BYTE *)(a1 + 728));
    sub_100B5AD7C((uint64_t)buf);
    if (__p)
    {
      int v99 = __p;
      operator delete(__p);
    }

    if (SHIBYTE(v90) < 0) {
      operator delete(*(void **)&buf[8]);
    }
  }

  *((double *)v12 + 42) = a6;
  *((_DWORD *)v12 + 86) = *(_DWORD *)(a4 + 96);
  if (v74[0])
  {
    v74[1] = v74[0];
    operator delete(v74[0]);
  }
}

void sub_1009F615C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1009F61C8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 240);
  if (v2)
  {
    *(void *)(a1 + 248) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_1009F6208(uint64_t a1, double a2)
{
  uint64_t v4 = *(void *)(a1 + 256);
  double v5 = vabdd_f64(a2, *(double *)(a1 + 744));
  double v6 = *(double *)(a1 + 736) + v5 * -45.0;
  if (v5 >= 855.0) {
    double v6 = 0.0;
  }
  if (v6 > 0.0) {
    double v7 = v6;
  }
  else {
    double v7 = 0.0;
  }
  double v8 = *(double *)(a1 + 720);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  uint64_t v9 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    int v10 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768));
    int v11 = *(unsigned __int8 *)(a1 + 612);
    int v12 = *(unsigned __int8 *)(a1 + 728);
    int v13 = *(unsigned __int8 *)(a1 + 730);
    int v14 = *(unsigned __int8 *)(a1 + 640);
    uint64_t v15 = *(void *)(a1 + 736);
    *(_DWORD *)std::stringbuf::string_type buf = 67242241;
    *(_DWORD *)double v53 = v10;
    *(_WORD *)&v53[4] = 1026;
    *(_DWORD *)&v53[6] = v11;
    __int16 v54 = 2050;
    uint64_t v55 = v4;
    __int16 v56 = 1026;
    int v57 = v12;
    __int16 v58 = 1025;
    int v59 = v13;
    __int16 v60 = 1025;
    int v61 = v14;
    __int16 v62 = 2049;
    uint64_t v63 = v15;
    __int16 v64 = 2049;
    double v65 = v7;
    __int16 v66 = 2049;
    double v67 = v7 + v8 * -45.0;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Fence: triggerReceivedNow, isWifiPowered, %{public}d, isLocationEnabled, %{public}d, numOfFences, %{public}lu, air plane, %{public}d, connected, %{private}d, watchdogNeeded, %{private}d, minDist, %{private}.1lf, %{private}.1lf, m inDistNextWake, %{private}.1lf",  buf,  0x48u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v20 = qword_101934878;
    int v21 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768));
    int v22 = *(unsigned __int8 *)(a1 + 612);
    int v23 = *(unsigned __int8 *)(a1 + 728);
    int v24 = *(unsigned __int8 *)(a1 + 730);
    int v25 = *(unsigned __int8 *)(a1 + 640);
    uint64_t v26 = *(void *)(a1 + 736);
    int v36 = 67242241;
    *(_DWORD *)__n128 v37 = v21;
    *(_WORD *)&v37[4] = 1026;
    *(_DWORD *)&v37[6] = v22;
    __int16 v38 = 2050;
    uint64_t v39 = v4;
    __int16 v40 = 1026;
    int v41 = v23;
    __int16 v42 = 1025;
    int v43 = v24;
    __int16 v44 = 1025;
    int v45 = v25;
    __int16 v46 = 2049;
    uint64_t v47 = v26;
    __int16 v48 = 2049;
    double v49 = v7;
    __int16 v50 = 2049;
    double v51 = v7 + v8 * -45.0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v20,  1LL,  "Fence: triggerReceivedNow, isWifiPowered, %{public}d, isLocationEnabled, %{public}d, numOfFences, %{public}lu, air plane, %{public}d, connected, %{private}d, watchdogNeeded, %{private}d, minDist, %{private}.1lf, %{private}.1lf, m inDistNextWake, %{private}.1lf",  &v36,  72);
    __int128 v28 = (uint8_t *)v27;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::triggerReceivedNow(const CFAbsoluteTime)", "%s\n", v27);
    if (v28 != buf) {
      free(v28);
    }
  }

  if (v7 + v8 * -45.0 > 0.0 || !*(_BYTE *)(a1 + 612) || *(_BYTE *)(a1 + 730) && !*(_BYTE *)(a1 + 731) || !v4) {
    goto LABEL_32;
  }
  double v16 = *(double *)(a1 + 648);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768)))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    unint64_t v17 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134283521;
      *(double *)double v53 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "Fence: Trigger received; performing WiFi scan, minDistanceToFence, %{private}.1lf",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v36 = 134283521;
      *(double *)__n128 v37 = v7;
      LODWORD(v35) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Trigger received; performing WiFi scan, minDistanceToFence, %{private}.1lf",
        &v36,
        v35);
      __int128 v32 = (uint8_t *)v31;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::triggerReceivedNow(const CFAbsoluteTime)",  "%s\n",  v31);
      if (v32 != buf) {
        free(v32);
      }
    }

    sub_1009F696C(a1, a2);
    return;
  }

  if (+[CLGnssProviderAdapter isSupported](&OBJC_CLASS___CLGnssProviderAdapter, "isSupported")
    && ((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 400LL))(*(void *)(a1 + 1768)) & 1) == 0
    && vabdd_f64(a2, v16) > 756.0)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    double v18 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134283521;
      *(double *)double v53 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "Fence: Trigger received; schedule watchdog for GPS, minDistanceToFence, %{private}.1lf",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v36 = 134283521;
      *(double *)__n128 v37 = v7;
      LODWORD(v35) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Trigger received; schedule watchdog for GPS, minDistanceToFence, %{private}.1lf",
        &v36,
        v35);
      __int128 v34 = (uint8_t *)v33;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::triggerReceivedNow(const CFAbsoluteTime)",  "%s\n",  v33);
      if (v34 != buf) {
        free(v34);
      }
    }

    *(double *)(a1 + 648) = a2;
    *(void *)(a1 + 684) = 0x300000001LL;
    (*(void (**)(void, void *))(**(void **)(a1 + 1768) + 240LL))(*(void *)(a1 + 1768), &unk_1013435F8);
  }

  else
  {
LABEL_32:
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    std::string v19 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "Fence: ignoring trigger event", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      LOWORD(v36) = 0;
      LODWORD(v35) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: ignoring trigger event",  &v36,  v35);
      __int128 v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::triggerReceivedNow(const CFAbsoluteTime)",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }
  }

void sub_1009F696C(uint64_t a1, double a2)
{
  if (*(void *)(a1 + 256))
  {
    if (*(_BYTE *)(a1 + 730)) {
      BOOL v4 = *(_BYTE *)(a1 + 731) != 0;
    }
    else {
      BOOL v4 = 1;
    }
  }

  else
  {
    BOOL v4 = 0;
  }

  double v5 = *(double *)(a1 + 632);
  double v6 = vabdd_f64(a2, *(double *)(a1 + 696));
  uint64_t v7 = 0x403E000000000000LL;
  uint64_t v22 = 0x403E000000000000LL;
  if (v6 <= *(double *)(a1 + 720) * 1.5)
  {
    uint64_t v7 = 0x4034000000000000LL;
    uint64_t v22 = 0x4034000000000000LL;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v8 = a2 - v5;
  uint64_t v9 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    int v10 = *(_DWORD *)(a1 + 684);
    int v11 = *(_DWORD *)(a1 + 688);
    int v12 = *(unsigned __int8 *)(a1 + 640);
    *(_DWORD *)std::stringbuf::string_type buf = 67241473;
    int v35 = v10;
    __int16 v36 = 1026;
    int v37 = v11;
    __int16 v38 = 2049;
    double v39 = v8;
    __int16 v40 = 2049;
    double v41 = v6;
    __int16 v42 = 2049;
    uint64_t v43 = v7;
    __int16 v44 = 1026;
    int v45 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Fence: need a scan, count, %{public}d, %{public}d, dt_scan, %{private}.1lf, dt_watchdog, %{private}.1lf, interval, %{private}.1lf, needWatchdog, %{public}d",  buf,  0x32u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v14 = *(_DWORD *)(a1 + 684);
    int v15 = *(_DWORD *)(a1 + 688);
    int v16 = *(unsigned __int8 *)(a1 + 640);
    v23[0] = 67241473;
    v23[1] = v14;
    __int16 v24 = 1026;
    int v25 = v15;
    __int16 v26 = 2049;
    double v27 = v8;
    __int16 v28 = 2049;
    double v29 = v6;
    __int16 v30 = 2049;
    uint64_t v31 = v7;
    __int16 v32 = 1026;
    int v33 = v16;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: need a scan, count, %{public}d, %{public}d, dt_scan, %{private}.1lf, dt_watchdog, %{private}.1lf, interval, %{private}.1lf, needWatchdog, %{public}d",  v23,  50);
    double v18 = (uint8_t *)v17;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::requestScan(const CFAbsoluteTime)", "%s\n", v17);
    if (v18 != buf) {
      free(v18);
    }
  }

  if (v4)
  {
    if ((*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768))
      && (*(int *)(a1 + 684) < 1 || v8 >= 180.0))
    {
      (*(void (**)(void, const char *))(**(void **)(a1 + 1768) + 304LL))( *(void *)(a1 + 1768),  "requestScan");
      *(double *)(a1 + 632) = a2;
      if (*(_BYTE *)(a1 + 640)
        && ((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 232LL))(*(void *)(a1 + 1768)) & 1) == 0
        && sub_1009F4C34(a1))
      {
        (*(void (**)(void, uint64_t *))(**(void **)(a1 + 1768) + 240LL))(*(void *)(a1 + 1768), &v22);
        *(void *)(a1 + 684) = 1LL;
      }

      *(_BYTE *)(a1 + 640) = 0;
    }

    else if (v8 >= 10.0 && *(int *)(a1 + 684) >= 1 && *(int *)(a1 + 688) >= 2)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v13 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "Fence: startScan, requesting a receovery scan",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        LOWORD(v23[0]) = 0;
        LODWORD(v21) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: startScan, requesting a receovery scan",  v23,  v21);
        uint64_t v20 = (uint8_t *)v19;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::requestScan(const CFAbsoluteTime)", "%s\n", v19);
        if (v20 != buf) {
          free(v20);
        }
      }

      *(double *)(a1 + 632) = a2;
      (*(void (**)(void, const char *))(**(void **)(a1 + 1768) + 304LL))( *(void *)(a1 + 1768),  "requestScan.recovery");
    }
  }

void sub_1009F6E10(uint64_t a1, double a2)
{
}

void sub_1009F6E18(uint64_t a1, int *a2, uint64_t a3, double a4)
{
  double v27 = a4;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    int v9 = *a2;
    *(_DWORD *)std::stringbuf::string_type buf = 67174657;
    *(_DWORD *)&uint8_t buf[4] = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "Fence: Got bluetooth notification, %{private}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v21 = *a2;
    int v28 = 67174657;
    int v29 = v21;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Got bluetooth notification, %{private}d",  &v28,  8);
    int v23 = (uint8_t *)v22;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleBluetoothNotification(const CFAbsoluteTime, const CLBluetoothService_Type::Notification &, const CLBluetoothService_Type::NotificationData &)",  "%s\n",  v22);
    if (v23 != buf) {
      free(v23);
    }
  }

  if ((*a2 & 0xFFFFFFFE) == 4)
  {
    int v10 = *(_DWORD *)(a3 + 92);
    if (v10 == 22 || v10 == 17)
    {
      *(double *)(a1 + 840) = a4;
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v11 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Fence: Got kNotificationTriggerReceived from Bluetooth",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        LOWORD(v28) = 0;
        LODWORD(v26) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Got kNotificationTriggerReceived from Bluetooth",  &v28,  v26);
        int v25 = (uint8_t *)v24;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleBluetoothNotification(const CFAbsoluteTime, const CLBluetoothService_Type::Notifica tion &, const CLBluetoothService_Type::NotificationData &)",  "%s\n",  v24);
        if (v25 != buf) {
          free(v25);
        }
      }

      sub_1009F7318(a1, (uint64_t)"kNotificationConnect / kNotificationDisconnect", 1, &v27);
      sub_1006DC6B0((void *)(a1 + 48), buf);
      if (*(void *)buf) {
        ++*(_DWORD *)(*(void *)buf + 164LL);
      }
      if (*a2 == 5)
      {
        int v12 = (double *)(a1 + 1696);
      }

      else
      {
        if (*a2 != 4) {
          goto LABEL_30;
        }
        int v12 = (double *)(a1 + 1688);
      }

      *int v12 = a4;
LABEL_30:
      double v18 = v31;
      if (v31)
      {
        p_shared_owners = (unint64_t *)&v31->__shared_owners_;
        do
          unint64_t v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }

      return;
    }

    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v13 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v14 = *(_DWORD *)(a3 + 92);
      *(_DWORD *)std::stringbuf::string_type buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v14;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "not a car bluetooth device (%d)", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v15 = *(_DWORD *)(a3 + 92);
      int v28 = 67109120;
      int v29 = v15;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "not a car bluetooth device (%d)",  &v28);
      unint64_t v17 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleBluetoothNotification(const CFAbsoluteTime, const CLBluetoothService_Type::Notificati on &, const CLBluetoothService_Type::NotificationData &)",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }
  }

void sub_1009F7318(uint64_t a1, uint64_t a2, int a3, double *a4)
{
  if (*(_BYTE *)(a1 + 620))
  {
    double v6 = vabdd_f64(*a4, *(double *)(a1 + 744));
    double v7 = *(double *)(a1 + 736) + v6 * -45.0;
    if (v6 >= 855.0) {
      double v7 = 0.0;
    }
    if (v7 > 0.0) {
      double v8 = v7;
    }
    else {
      double v8 = 0.0;
    }
    uint64_t v9 = *(void *)(a1 + 256);
    BOOL v10 = v8 + -13500.0 > 0.0 || v9 == 0;
    if (v10 || *(_BYTE *)(a1 + 730) && !*(_BYTE *)(a1 + 731) || !*(_BYTE *)(a1 + 612))
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v15 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        int v16 = *(unsigned __int8 *)(a1 + 728);
        int v17 = *(unsigned __int8 *)(a1 + 730);
        int v18 = *(unsigned __int8 *)(a1 + 612);
        *(_DWORD *)std::stringbuf::string_type buf = 134350081;
        uint64_t v37 = v9;
        __int16 v38 = 1026;
        *(_DWORD *)double v39 = v16;
        *(_WORD *)&v39[4] = 1026;
        *(_DWORD *)&v39[6] = v17;
        *(_WORD *)__int16 v40 = 1026;
        *(_DWORD *)&v40[2] = v18;
        *(_WORD *)double v41 = 2049;
        *(double *)&v41[2] = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "Fence: ignore delayed trigger, numOfFences, %{public}zu, airplane, %{public}d, cConnected, %{public}d, locatio n services, %{public}d, minDistanceToFence, %{private}.1lf",  buf,  0x28u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v19 = *(unsigned __int8 *)(a1 + 728);
        int v20 = *(unsigned __int8 *)(a1 + 730);
        int v21 = *(unsigned __int8 *)(a1 + 612);
        *(_DWORD *)__int16 v32 = 134350081;
        *(void *)&v32[4] = v9;
        *(_WORD *)&v32[12] = 1026;
        *(_DWORD *)&v32[14] = v19;
        *(_WORD *)&v32[18] = 1026;
        *(_DWORD *)&v32[20] = v20;
        *(_WORD *)int v33 = 1026;
        *(_DWORD *)&v33[2] = v21;
        *(_WORD *)&v33[6] = 2049;
        *(double *)&v33[8] = v8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: ignore delayed trigger, numOfFences, %{public}zu, airplane, %{public}d, cConnected, %{public}d, locatio n services, %{public}d, minDistanceToFence, %{private}.1lf",  v32,  40,  *(_OWORD *)v32,  *(void *)&v32[16],  *(_OWORD *)v33);
        goto LABEL_48;
      }
    }

    else
    {
      if (a3) {
        *(_DWORD *)(a1 + 704) = 0;
      }
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v11 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v12 = *(void *)(a1 + 712);
        int v13 = *(_DWORD *)(a1 + 704);
        int v14 = *(_DWORD *)(a1 + 708);
        *(_DWORD *)std::stringbuf::string_type buf = 134284803;
        uint64_t v37 = v12;
        __int16 v38 = 2081;
        *(void *)double v39 = a2;
        *(_WORD *)&v39[8] = 1026;
        *(_DWORD *)__int16 v40 = v13;
        *(_WORD *)&v40[4] = 1026;
        *(_DWORD *)double v41 = v14;
        *(_WORD *)&v41[4] = 2049;
        *(double *)&v41[6] = v8;
        __int16 v42 = 2049;
        double v43 = v8 + -13500.0;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Fence: scheduleNextTriggerWake in, %{private}.1lf, reason, %{private}s, count, %{public}d, %{public}d, minDist anceToFence, %{private}.1lf, minDistanceToFencesOnNextWake, %{private}.1lf",  buf,  0x36u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        uint64_t v26 = *(void *)(a1 + 712);
        int v27 = *(_DWORD *)(a1 + 704);
        int v28 = *(_DWORD *)(a1 + 708);
        *(_DWORD *)__int16 v32 = 134284803;
        *(void *)&v32[4] = v26;
        *(_WORD *)&v32[12] = 2081;
        *(void *)&v32[14] = a2;
        *(_WORD *)&v32[22] = 1026;
        *(_DWORD *)int v33 = v27;
        *(_WORD *)&v33[4] = 1026;
        *(_DWORD *)&v33[6] = v28;
        *(_WORD *)&v33[10] = 2049;
        *(double *)&v33[12] = v8;
        __int16 v34 = 2049;
        double v35 = v8 + -13500.0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: scheduleNextTriggerWake in, %{private}.1lf, reason, %{private}s, count, %{public}d, %{public}d, minDist anceToFence, %{private}.1lf, minDistanceToFencesOnNextWake, %{private}.1lf",  v32,  54);
        __int16 v30 = (uint8_t *)v29;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::scheduleNextTriggerWake(const char *, BOOL, const CFTimeInterval &)",  "%s\n",  v29);
        if (v30 != buf) {
          free(v30);
        }
      }

      if (*(_DWORD *)(a1 + 704) < *(_DWORD *)(a1 + 708))
      {
        (*(void (**)(void, uint64_t))(**(void **)(a1 + 1768) + 224LL))(*(void *)(a1 + 1768), a1 + 712);
        return;
      }

      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      __int16 v24 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "Fence: scheduleNextTriggerWake, no more delayed triggers",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        *(_WORD *)__int16 v32 = 0;
        LODWORD(v31) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: scheduleNextTriggerWake, no more delayed triggers",  v32,  v31,  *(_OWORD *)v32,  *(void *)&v32[16],  *(_OWORD *)v33);
LABEL_48:
        int v25 = (uint8_t *)v22;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::scheduleNextTriggerWake(const char *, BOOL, const CFTimeInterval &)",  "%s\n",  v22);
        if (v25 != buf) {
          free(v25);
        }
      }
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v23 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136380675;
      uint64_t v37 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "Fence: avoid scheduleNextTriggerWake, reason, %{private}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      *(_DWORD *)__int16 v32 = 136380675;
      *(void *)&v32[4] = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: avoid scheduleNextTriggerWake, reason, %{private}s",  v32,  12,  *(_OWORD *)v32,  *(void *)&v32[16],  *(_OWORD *)v33);
      goto LABEL_48;
    }
  }

void sub_1009F7958(void *a1, int *a2, uint64_t a3, double a4)
{
  int v6 = *a2;
  if (!*a2) {
    goto LABEL_4;
  }
  if (v6 == 22)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v16 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v17 = sub_100CBED60(*(int **)(a3 + 800));
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      *(void *)&uint8_t buf[4] = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "Fence: received WSB, %lu", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v68 = qword_101934878;
      uint64_t v69 = sub_100CBED60(*(int **)(a3 + 800));
      int v75 = 134217984;
      *(void *)__int128 v76 = v69;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v68,  2LL,  "Fence: received WSB, %lu",  &v75);
      int v71 = (char *)v70;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationNotification(const CFAbsoluteTime, const CLLocationProvider_Type::Notificatio n &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v70);
      if (v71 != buf) {
        free(v71);
      }
    }

    int v18 = (char **)(a1 + 18);
    a1[19] = a1[18];
    if (sub_100CBED60(*(int **)(a3 + 800)) && sub_100CBED60(*(int **)(a3 + 800)))
    {
      unint64_t v19 = 0LL;
      do
      {
        sub_100CBE5DC(*(void *)(a3 + 800), v19, (uint64_t)buf);
        int v20 = (_OWORD *)a1[19];
        unint64_t v21 = a1[20];
        if ((unint64_t)v20 >= v21)
        {
          uint64_t v30 = 0x6F96F96F96F96F97LL * (((char *)v20 - *v18) >> 2);
          unint64_t v31 = v30 + 1;
          unint64_t v32 = 0x6F96F96F96F96F97LL * ((uint64_t)(v21 - (void)*v18) >> 2);
          if (2 * v32 > v31) {
            unint64_t v31 = 2 * v32;
          }
          if (v32 >= 0xD20D20D20D20D2LL) {
            unint64_t v33 = 0x1A41A41A41A41A4LL;
          }
          else {
            unint64_t v33 = v31;
          }
          if (v33) {
            __int16 v34 = (char *)sub_1002E01BC((uint64_t)(a1 + 20), v33);
          }
          else {
            __int16 v34 = 0LL;
          }
          double v35 = &v34[156 * v30];
          __int128 v36 = *(_OWORD *)&buf[16];
          *(_OWORD *)double v35 = *(_OWORD *)buf;
          *((_OWORD *)v35 + 1) = v36;
          __int128 v37 = *(_OWORD *)v84;
          __int128 v38 = *(_OWORD *)&v84[16];
          __int128 v39 = v86;
          *((_OWORD *)v35 + 4) = v85;
          *((_OWORD *)v35 + 5) = v39;
          *((_OWORD *)v35 + 2) = v37;
          *((_OWORD *)v35 + 3) = v38;
          __int128 v40 = v87;
          __int128 v41 = v88;
          __int128 v42 = v89[0];
          *(_OWORD *)(v35 + 140) = *(_OWORD *)((char *)v89 + 12);
          *((_OWORD *)v35 + 7) = v41;
          *((_OWORD *)v35 + 8) = v42;
          *((_OWORD *)v35 + 6) = v40;
          __int16 v44 = (char *)a1[18];
          double v43 = (char *)a1[19];
          int v45 = v35;
          if (v43 != v44)
          {
            do
            {
              __int128 v46 = *(_OWORD *)(v43 - 156);
              *(_OWORD *)((char *)v45 - 140) = *(_OWORD *)(v43 - 140);
              *(_OWORD *)((char *)v45 - 156) = v46;
              __int128 v47 = *(_OWORD *)(v43 - 124);
              __int128 v48 = *(_OWORD *)(v43 - 108);
              __int128 v49 = *(_OWORD *)(v43 - 92);
              *(_OWORD *)((char *)v45 - 76) = *(_OWORD *)(v43 - 76);
              *(_OWORD *)((char *)v45 - 92) = v49;
              *(_OWORD *)((char *)v45 - 108) = v48;
              *(_OWORD *)((char *)v45 - 124) = v47;
              __int128 v50 = *(_OWORD *)(v43 - 60);
              __int128 v51 = *(_OWORD *)(v43 - 44);
              __int128 v52 = *(_OWORD *)(v43 - 28);
              *(v45 - 1) = *((_OWORD *)v43 - 1);
              *(_OWORD *)((char *)v45 - 28) = v52;
              *(_OWORD *)((char *)v45 - 44) = v51;
              *(_OWORD *)((char *)v45 - 60) = v50;
              int v45 = (_OWORD *)((char *)v45 - 156);
              v43 -= 156;
            }

            while (v43 != v44);
            double v43 = *v18;
          }

          int v29 = v35 + 156;
          a1[18] = v45;
          a1[19] = v35 + 156;
          a1[20] = &v34[156 * v33];
          if (v43) {
            operator delete(v43);
          }
        }

        else
        {
          __int128 v22 = *(_OWORD *)&buf[16];
          *int v20 = *(_OWORD *)buf;
          v20[1] = v22;
          __int128 v23 = *(_OWORD *)v84;
          __int128 v24 = *(_OWORD *)&v84[16];
          __int128 v25 = v86;
          v20[4] = v85;
          v20[5] = v25;
          v20[2] = v23;
          v20[3] = v24;
          __int128 v26 = v87;
          __int128 v27 = v88;
          __int128 v28 = v89[0];
          *(_OWORD *)((char *)v20 + 140) = *(_OWORD *)((char *)v89 + 12);
          v20[7] = v27;
          char v20[8] = v28;
          v20[6] = v26;
          int v29 = (char *)v20 + 156;
        }

        a1[19] = v29;
        ++v19;
      }

      while (v19 < sub_100CBED60(*(int **)(a3 + 800)));
    }

    return;
  }

  if (v6 != 3)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    __int16 v66 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      int v67 = *a2;
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v67;
      _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: Got unknown location notification %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v72 = *a2;
      int v75 = 67240192;
      *(_DWORD *)__int128 v76 = v72;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: Got unknown location notification %{public}d",  &v75,  8);
      int v15 = (char *)v73;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationNotification(const CFAbsoluteTime, const CLLocationProvider_Type::Notificatio n &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v73);
      goto LABEL_65;
    }
  }

  else
  {
LABEL_4:
    double v7 = *(double *)(a3 + 88);
    double v8 = *(double *)(a3 + 76);
    if (v7 >= 0.0 && v7 + v8 < a4)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      double v53 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v54 = *(void *)(a3 + 4);
        uint64_t v55 = *(void *)(a3 + 12);
        uint64_t v56 = *(void *)(a3 + 20);
        uint64_t v57 = *(void *)(a3 + 76);
        uint64_t v58 = *(void *)(a3 + 88);
        *(_DWORD *)std::stringbuf::string_type buf = 134284545;
        *(void *)&uint8_t buf[4] = v54;
        *(_WORD *)&_BYTE buf[12] = 2049;
        *(void *)&buf[14] = v55;
        *(_WORD *)&buf[22] = 2050;
        *(void *)&uint8_t buf[24] = v56;
        *(_WORD *)uint64_t v84 = 2050;
        *(void *)&v84[2] = v57;
        *(_WORD *)&v84[10] = 2050;
        *(void *)&v84[12] = v58;
        _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEBUG,  "Fence: Ignoring expired location <%{private}+.8f, %{private}.8f>, acc %{public}.2f, timestamp %{public}.2f, li fespan %{public}.2f",  buf,  0x34u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        uint64_t v59 = *(void *)(a3 + 4);
        uint64_t v60 = *(void *)(a3 + 12);
        uint64_t v61 = *(void *)(a3 + 20);
        uint64_t v62 = *(void *)(a3 + 76);
        uint64_t v63 = *(void *)(a3 + 88);
        int v75 = 134284545;
        *(void *)__int128 v76 = v59;
        *(_WORD *)&v76[8] = 2049;
        *(void *)&v76[10] = v60;
        __int16 v77 = 2050;
        uint64_t v78 = v61;
        __int16 v79 = 2050;
        uint64_t v80 = v62;
        __int16 v81 = 2050;
        uint64_t v82 = v63;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Ignoring expired location <%{private}+.8f, %{private}.8f>, acc %{public}.2f, timestamp %{public}.2f, li fespan %{public}.2f",  &v75,  52);
        int v15 = (char *)v64;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationNotification(const CFAbsoluteTime, const CLLocationProvider_Type::Notificat ion &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v64);
        goto LABEL_65;
      }
    }

    else
    {
      if (vabdd_f64(a4, v8) <= 10.0)
      {
        sub_1009F821C((uint64_t)a1, a3, a3 + 160, a4);
        return;
      }

      if (qword_101934870 != -1)
      {
        double v74 = a4;
        dispatch_once(&qword_101934870, &stru_101866E28);
        a4 = v74;
      }

      double v10 = a4 - v8;
      int v11 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
      {
        int v12 = *(_DWORD *)(a3 + 96);
        *(_DWORD *)std::stringbuf::string_type buf = 67240448;
        *(_DWORD *)&uint8_t buf[4] = v12;
        *(_WORD *)&uint8_t buf[8] = 2050;
        *(double *)&buf[10] = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "Fence: Ignoring old location, type, %{public}d, age, %{public}.1f",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v13 = *(_DWORD *)(a3 + 96);
        int v75 = 67240448;
        *(_DWORD *)__int128 v76 = v13;
        *(_WORD *)&v76[4] = 2050;
        *(double *)&v76[6] = v10;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Ignoring old location, type, %{public}d, age, %{public}.1f",  &v75,  18);
        int v15 = (char *)v14;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationNotification(const CFAbsoluteTime, const CLLocationProvider_Type::Notificat ion &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v14);
LABEL_65:
        if (v15 != buf) {
          free(v15);
        }
      }
    }
  }

void sub_1009F821C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  __int128 v7 = *(_OWORD *)(a2 + 112);
  __int128 v104 = *(_OWORD *)(a2 + 96);
  __int128 v105 = v7;
  v106[0] = *(_OWORD *)(a2 + 128);
  *(_OWORD *)((char *)v106 + 12) = *(_OWORD *)(a2 + 140);
  __int128 v8 = *(_OWORD *)(a2 + 48);
  __int128 v101 = *(_OWORD *)(a2 + 32);
  __int128 v102 = v8;
  __int128 v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)int v103 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)&v103[16] = v9;
  __int128 v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)int v100 = *(_OWORD *)a2;
  *(_OWORD *)&v100[16] = v10;
  sub_100869764((uint64_t)v100);
  sub_100A0C9FC(a1 + 904, (__int128 *)v100);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  int v11 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    sub_100832C64((uint64_t)v100, &__p);
    int v12 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &__p
        : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    int v13 = *(unsigned __int8 *)(a1 + 612);
    int v14 = *(unsigned __int8 *)(a1 + 728);
    int v15 = *(unsigned __int8 *)(a1 + 730);
    *(_DWORD *)std::stringbuf::string_type buf = 136381443;
    *(void *)&uint8_t buf[4] = v12;
    *(_WORD *)&_BYTE buf[12] = 1025;
    *(_DWORD *)&buf[14] = v13;
    *(_WORD *)&_BYTE buf[18] = 1025;
    *(_DWORD *)&_BYTE buf[20] = v14;
    *(_WORD *)&uint8_t buf[24] = 1025;
    *(_DWORD *)&buf[26] = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Fence: handleLocation, location, %{private}s, services, %{private}d, airplane, %{private}d, connected, %{private}d",  buf,  0x1Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v65 = qword_101934878;
    sub_100832C64((uint64_t)v100, &v99);
    if ((v99.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v66 = &v99;
    }
    else {
      __int16 v66 = (std::stringbuf::string_type *)v99.__r_.__value_.__r.__words[0];
    }
    int v67 = *(unsigned __int8 *)(a1 + 612);
    int v68 = *(unsigned __int8 *)(a1 + 728);
    int v69 = *(unsigned __int8 *)(a1 + 730);
    LODWORD(__p.__r_.__value_.__l.__data_) = 136381443;
    *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v66;
    WORD2(__p.__r_.__value_.__r.__words[1]) = 1025;
    *(_DWORD *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v67;
    WORD1(__p.__r_.__value_.__r.__words[2]) = 1025;
    HIDWORD(__p.__r_.__value_.__r.__words[2]) = v68;
    LOWORD(v108) = 1025;
    *(_DWORD *)((char *)&v108 + 2) = v69;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v65,  2LL,  "Fence: handleLocation, location, %{private}s, services, %{private}d, airplane, %{private}d, connected, %{private}d",  &__p,  30);
    int v71 = v70;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocation(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v71);
    if (v71 != buf) {
      free(v71);
    }
  }

  if (!*(_BYTE *)(a1 + 612) || *(_BYTE *)(a1 + 730) && !*(_BYTE *)(a1 + 731))
  {
    (*(void (**)(void))(**(void **)(a1 + 1768) + 344LL))(*(void *)(a1 + 1768));
    (*(void (**)(void))(**(void **)(a1 + 1768) + 280LL))(*(void *)(a1 + 1768));
    return;
  }

  sub_100B5A5A8((void *)(a1 + 1312), a2);
  *(void *)(a1 + 672) = *(void *)(a2 + 76);
  if (!*(void *)(a1 + 256) || sub_100840F28((uint64_t)v100))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v16 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v17 = *(void *)(a1 + 256);
      int v18 = sub_100832C40(v104);
      *(_DWORD *)std::stringbuf::string_type buf = 134349315;
      *(void *)&uint8_t buf[4] = v17;
      *(_WORD *)&_BYTE buf[12] = 2081;
      *(void *)&buf[14] = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "Fence: cancelLocationWatchdog, num fences, %{public}lu, location type, %{private}s",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v76 = qword_101934878;
      std::string::size_type v77 = *(void *)(a1 + 256);
      uint64_t v78 = sub_100832C40(v104);
      LODWORD(__p.__r_.__value_.__l.__data_) = 134349315;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = v77;
      WORD2(__p.__r_.__value_.__r.__words[1]) = 2081;
      *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v78;
      LODWORD(v90) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v76,  2LL,  "Fence: cancelLocationWatchdog, num fences, %{public}lu, location type, %{private}s",  &__p,  v90);
      uint64_t v80 = (char *)v79;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocation(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v79);
      if (v80 != buf) {
        free(v80);
      }
    }

    (*(void (**)(void))(**(void **)(a1 + 1768) + 344LL))(*(void *)(a1 + 1768));
    (*(void (**)(void))(**(void **)(a1 + 1768) + 280LL))(*(void *)(a1 + 1768));
    *(void *)(a1 + 684) = 0LL;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  unint64_t v19 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134284289;
    *(void *)&uint8_t buf[4] = *(void *)&v100[4];
    *(_WORD *)&_BYTE buf[12] = 2049;
    *(void *)&buf[14] = *(void *)&v100[12];
    *(_WORD *)&buf[22] = 2049;
    *(void *)&uint8_t buf[24] = *(void *)&v100[20];
    LOWORD(v112) = 2049;
    *(void *)((char *)&v112 + 2) = *(void *)&v103[12];
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "Fence: Handling location, %{private}+.8f, %{private}+.8f, acc, %{private}.2f, timestamp, %{private}.1lf\n",  buf,  0x2Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    LODWORD(__p.__r_.__value_.__l.__data_) = 134284289;
    *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = *(void *)&v100[4];
    WORD2(__p.__r_.__value_.__r.__words[1]) = 2049;
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = *(void *)&v100[12];
    HIWORD(__p.__r_.__value_.__r.__words[2]) = 2049;
    uint64_t v108 = *(void *)&v100[20];
    __int16 v109 = 2049;
    uint64_t v110 = *(void *)&v103[12];
    LODWORD(v90) = 42;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Handling location, %{private}+.8f, %{private}+.8f, acc, %{private}.2f, timestamp, %{private}.1lf\n",  &__p,  v90);
    id v73 = (char *)v72;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocation(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v72);
    if (v73 != buf) {
      free(v73);
    }
  }

  int v20 = *(unsigned __int8 *)(a1 + 623);
  sub_100D2DCA4((double *)(a1 + 1776), a1 + 448, (uint64_t)v100);
  double v22 = v21;
  BOOL v94 = sub_100840EF8((uint64_t)v100);
  unsigned int v23 = v104;
  BOOL v24 = sub_100840F14((uint64_t)v100);
  BOOL v92 = sub_100840EF8(a1 + 448);
  int v25 = *(_DWORD *)(a1 + 544);
  BOOL v26 = v25 == 4 || v25 == 11;
  char v27 = v26;
  char v91 = v27;
  if (v24) {
    *(double *)(a1 + 880) = a4;
  }
  if (v23 == 11 || v23 == 4) {
    *(double *)(a1 + 888) = a4;
  }
  int v28 = v23 == 10 || v94;
  if (v28 == 1) {
    *(double *)(a1 + 896) = a4;
  }
  int v93 = v104;
  if (vabdd_f64(a4, *(double *)(a1 + 524)) >= *((double *)sub_100D0ABB4() + 27)
    || v22 >= *((double *)sub_100D0ABB4() + 28))
  {
    BOOL v30 = 1;
  }

  else
  {
    double v29 = *(double *)(a1 + 468);
    if (v29 >= *((double *)sub_100D0ABB4() + 29))
    {
      double v61 = *(double *)&v100[20];
      BOOL v30 = v61 < *((double *)sub_100D0ABB4() + 29);
    }

    else
    {
      BOOL v30 = 0;
    }
  }

  double v98 = 5000000.0;
  sub_1006DC6B0((void *)(a1 + 48), &v99);
  unint64_t v31 = (_DWORD *)v99.__r_.__value_.__r.__words[0];
  if (v99.__r_.__value_.__r.__words[0])
  {
    ++*(_DWORD *)(v99.__r_.__value_.__r.__words[0] + 52);
    if ((v104 - 6) > 2)
    {
      if ((_DWORD)v104 == 11 || (_DWORD)v104 == 4)
      {
        ++v31[25];
      }

      else if ((v104 & 0xFFFFFFF7) == 1)
      {
        ++v31[26];
      }
    }

    else
    {
      ++v31[24];
    }
  }

  unint64_t v32 = *(void **)(a1 + 240);
  BOOL v96 = v20 != 0;
  if (v32 != (void *)(a1 + 248))
  {
    int v95 = 0;
    int v33 = 0;
    char v34 = (v25 != 10) & ~(v92 | v91);
    if (v25 == 13) {
      char v34 = 0;
    }
    char v35 = v34 | v28 ^ 1 | v30;
    double v36 = 5000000.0;
    while (1)
    {
      if (*((_BYTE *)v32 + 284))
      {
        if (!*(_BYTE *)(a1 + 730)) {
          goto LABEL_67;
        }
        if (v32[33] == v32[32])
        {
          if ((_os_feature_enabled_impl("CoreLocation", "cl_fence_handoff") & 1) != 0) {
            goto LABEL_88;
          }
          uint64_t v37 = 64LL;
        }

        else
        {
          uint64_t v37 = 8LL;
        }

        if ((v32[24] & v37) != 0)
        {
LABEL_67:
          __int128 v116 = v104;
          __int128 v117 = v105;
          v118[0] = v106[0];
          *(_OWORD *)((char *)v118 + 12) = *(_OWORD *)((char *)v106 + 12);
          __int128 v112 = v101;
          __int128 v113 = v102;
          __int128 v114 = *(_OWORD *)v103;
          __int128 v115 = *(_OWORD *)&v103[16];
          *(_OWORD *)std::stringbuf::string_type buf = *(_OWORD *)v100;
          *(_OWORD *)&uint8_t buf[16] = *(_OWORD *)&v100[16];
          if (*((_DWORD *)v32 + 53) == 2) {
            sub_100A06B10(a1, (uint64_t)(v32 + 4), (uint64_t)buf);
          }
          double v38 = sub_100841558((uint64_t)buf, (uint64_t)(v32 + 4), (double *)(a1 + 1776));
          double v98 = fmin(v38, v98);
          int v39 = *((_DWORD *)v32 + 70);
          double v40 = fmin(v38, v36);
          if (v39) {
            double v36 = v40;
          }
          if (v39 == -1
            || (v39 != 1 || !v94 && (v23 > 0xB || ((1 << v23) & 0xC10) == 0) && v93 != 13 || v38 < 50000.0)
            && ((v35 & 1) != 0 || *(_DWORD *)(a1 + 684) || sub_1006DC718((void *)(a1 + 48))))
          {
            if ((v32[24] & 0x20) == 0)
            {
              BOOL v41 = v38 <= 25000.0 || *((_DWORD *)v32 + 70) == -1;
              int v42 = v95;
              if (v41) {
                int v42 = v95 + 1;
              }
              int v95 = v42;
            }

            __int128 v43 = v105;
            *(_OWORD *)(a1 + 544) = v104;
            *(_OWORD *)(a1 + 560) = v43;
            *(_OWORD *)(a1 + 576) = v106[0];
            *(_OWORD *)(a1 + 588) = *(_OWORD *)((char *)v106 + 12);
            __int128 v44 = v102;
            *(_OWORD *)(a1 + 480) = v101;
            *(_OWORD *)(a1 + 496) = v44;
            __int128 v45 = *(_OWORD *)&v103[16];
            *(_OWORD *)(a1 + 512) = *(_OWORD *)v103;
            *(_OWORD *)(a1 + 528) = v45;
            __int128 v46 = *(_OWORD *)&v100[16];
            *(_OWORD *)(a1 + 448) = *(_OWORD *)v100;
            *(_OWORD *)(a1 + 464) = v46;
            sub_100A00CFC(a1, (uint64_t)v100, a3, (unsigned __int8 *)v32 + 32, a4);
            ++v33;
            BOOL v96 = 1;
          }
        }
      }

void sub_1009F95E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
}

void sub_1009F963C(uint64_t a1, int a2, double a3)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  int v6 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v7 = *(unsigned __int8 *)(a1 + 1872);
    uint64_t v8 = *(void *)(a1 + 1896);
    *(_DWORD *)std::stringbuf::string_type buf = 67175169;
    *(_DWORD *)unint64_t v32 = v7;
    *(_WORD *)&v32[4] = 1025;
    *(_DWORD *)&v32[6] = v8;
    LOWORD(v33[0]) = 1025;
    *(_DWORD *)((char *)v33 + 2) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, handleFencesPendingMiLoEventUpdate, fIsPendingMicroLocationEventUpdate, %{private}d, numFences, %{pri vate}d, useMiLoEvent, %{private}d",  buf,  0x14u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v23 = *(unsigned __int8 *)(a1 + 1872);
    uint64_t v24 = *(void *)(a1 + 1896);
    int v28 = 67175169;
    *(_DWORD *)double v29 = v23;
    *(_WORD *)&v29[4] = 1025;
    *(_DWORD *)&v29[6] = v24;
    LOWORD(v30[0]) = 1025;
    *(_DWORD *)((char *)v30 + 2) = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, handleFencesPendingMiLoEventUpdate, fIsPendingMicroLocationEventUpdate, %{private}d, numFences, %{pri vate}d, useMiLoEvent, %{private}d",  &v28,  20);
    BOOL v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleFencesPendingMiLoEventUpdate(const CFAbsoluteTime, const BOOL)",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  if (*(_BYTE *)(a1 + 1872))
  {
    __int128 v9 = (uint64_t **)(a1 + 1880);
    __int128 v10 = *(unsigned __int8 **)(a1 + 1880);
    if (v10 != (unsigned __int8 *)(a1 + 1888))
    {
      do
      {
        uint64_t v11 = sub_100700B84(a1 + 240, v10 + 32);
        if (a1 + 248 != v11)
        {
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          int v12 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            int v13 = (void *)(v11 + 56);
            *(_DWORD *)std::stringbuf::string_type buf = 136380931;
            *(void *)unint64_t v32 = v13;
            *(_WORD *)&v32[8] = 1025;
            v33[0] = a2;
            _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, Processing fencePendingMiLo, %{private}s, useMiLoEvent, %{private}d",  buf,  0x12u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866E28);
            }
            int v20 = (void *)(v11 + 56);
            int v28 = 136380931;
            *(void *)double v29 = v20;
            *(_WORD *)&v29[8] = 1025;
            v30[0] = a2;
            LODWORD(v27) = 18;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, Processing fencePendingMiLo, %{private}s, useMiLoEvent, %{private}d",  &v28,  v27);
            double v22 = (uint8_t *)v21;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleFencesPendingMiLoEventUpdate(const CFAbsoluteTime, const BOOL)",  "%s\n",  v21);
            if (v22 != buf) {
              free(v22);
            }
          }

          sub_100869DC8(buf);
          sub_1009F9AE8(a1, v10 + 280, (uint64_t)buf, v11 + 32, v11 + 280, a3, 0LL, 0);
          int v14 = v34;
          if (v34)
          {
            p_shared_owners = (unint64_t *)&v34->__shared_owners_;
            do
              unint64_t v16 = __ldaxr(p_shared_owners);
            while (__stlxr(v16 - 1, p_shared_owners));
            if (!v16)
            {
              ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
              std::__shared_weak_count::__release_weak(v14);
            }
          }
        }

        uint64_t v17 = (unsigned __int8 *)*((void *)v10 + 1);
        if (v17)
        {
          do
          {
            int v18 = v17;
            uint64_t v17 = *(unsigned __int8 **)v17;
          }

          while (v17);
        }

        else
        {
          do
          {
            int v18 = (unsigned __int8 *)*((void *)v10 + 2);
            BOOL v19 = *(void *)v18 == (void)v10;
            __int128 v10 = v18;
          }

          while (!v19);
        }

        __int128 v10 = v18;
      }

      while (v18 != (unsigned __int8 *)(a1 + 1888));
      __int128 v9 = (uint64_t **)(a1 + 1880);
      __int128 v10 = *(unsigned __int8 **)(a1 + 1880);
    }

    *(_BYTE *)(a1 + 1872) = 0;
    sub_100A0B36C(v9, (uint64_t *)v10, (uint64_t *)(a1 + 1888));
  }

void sub_1009F9AC8(_Unwind_Exception *a1)
{
}

uint64_t sub_1009F9AE8( uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, uint64_t a7, int a8)
{
  __int128 v13 = a2[7];
  __int128 v325 = a2[6];
  __int128 v326 = v13;
  v327[0] = a2[8];
  *(_OWORD *)((char *)v327 + 12) = *(_OWORD *)((char *)a2 + 140);
  __int128 v14 = a2[3];
  __int128 v321 = a2[2];
  __int128 v322 = v14;
  __int128 v15 = a2[5];
  __int128 v323 = a2[4];
  __int128 v324 = v15;
  __int128 v16 = a2[1];
  *(_OWORD *)v320 = *a2;
  *(_OWORD *)&v320[16] = v16;
  __str = (std::string *)a4;
  if (*(_DWORD *)(a4 + 180) == 2)
  {
    int v253 = sub_100A06B10(a1, a4, (uint64_t)v320) ^ 1;
    a4 = (uint64_t)__str;
  }

  else
  {
    int v253 = 0;
  }

  double v17 = sub_1008414E0((double *)&v320[4], a4, (double *)(a1 + 1776));
  sub_100A0738C(a1, (int *)&v325, 0, a6);
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v275 = _Q0;
  __int128 v276 = _Q0;
  __int128 v277 = _Q0;
  __int128 v278 = _Q0;
  __int128 v279 = _Q0;
  __int128 v280 = _Q0;
  __int128 v281 = _Q0;
  *(void *)&v283[12] = 0LL;
  *(void *)&v283[4] = 0LL;
  *(_OWORD *)&v283[20] = xmmword_1012E0070;
  *(_OWORD *)&v283[36] = _Q0;
  *(_OWORD *)&v283[52] = _Q0;
  *(_OWORD *)&v283[68] = _Q0;
  *(_DWORD *)v283 = 0xFFFF;
  *(_DWORD *)&v283[84] = 0;
  *(void *)&v283[88] = 0xBFF0000000000000LL;
  *(_OWORD *)&v287[28] = xmmword_1012EA5D0;
  *(_OWORD *)&v287[44] = _Q0;
  __int128 v22 = *(_OWORD *)(a1 + 288);
  __int128 v23 = *(_OWORD *)(a1 + 304);
  *(_OWORD *)&v287[60] = _Q0;
  *(_OWORD *)&v286[12] = *(_OWORD *)((char *)a2 + 140);
  *(_OWORD *)v286 = a2[8];
  __int128 v24 = a2[6];
  __int128 v285 = a2[7];
  __int128 v284 = v24;
  __int128 v25 = a2[3];
  *(_OWORD *)&v283[32] = a2[2];
  *(_OWORD *)&v283[48] = v25;
  __int128 v26 = a2[5];
  *(_OWORD *)&v283[64] = a2[4];
  __int128 v27 = *a2;
  *(_OWORD *)&v283[16] = a2[1];
  *(_DWORD *)v287 = 0xFFFF;
  *(void *)&v287[12] = 0LL;
  *(void *)&v287[4] = 0LL;
  *(void *)&v287[20] = 0xBFF0000000000000LL;
  *(_OWORD *)v283 = v27;
  *(_OWORD *)&v283[80] = v26;
  __int128 v28 = *(_OWORD *)(a1 + 560);
  __int128 v289 = *(_OWORD *)(a1 + 544);
  __int128 v290 = v28;
  *(_OWORD *)v291 = *(_OWORD *)(a1 + 576);
  __int128 v29 = *(_OWORD *)(a1 + 496);
  *(_OWORD *)&v287[32] = *(_OWORD *)(a1 + 480);
  *(_OWORD *)&v287[48] = v29;
  __int128 v30 = *(_OWORD *)(a1 + 528);
  *(_OWORD *)&v287[64] = *(_OWORD *)(a1 + 512);
  __int128 v288 = v30;
  __int128 v31 = *(_OWORD *)(a1 + 464);
  *(_OWORD *)v287 = *(_OWORD *)(a1 + 448);
  *(_OWORD *)&v287[16] = v31;
  *(_OWORD *)((char *)v300 + 12) = *(_OWORD *)(a1 + 428);
  __int128 v32 = *(_OWORD *)(a1 + 400);
  __int128 v298 = *(_OWORD *)(a1 + 384);
  __int128 v299 = v32;
  v300[0] = *(_OWORD *)(a1 + 416);
  __int128 v33 = *(_OWORD *)(a1 + 336);
  __int128 v294 = *(_OWORD *)(a1 + 320);
  __int128 v295 = v33;
  __int128 v34 = *(_OWORD *)(a1 + 368);
  __int128 v296 = *(_OWORD *)(a1 + 352);
  __int128 v297 = v34;
  char v274 = 1;
  double v282 = a6;
  *(_OWORD *)&v291[12] = *(_OWORD *)(a1 + 588);
  __int128 v292 = v22;
  __int128 v293 = v23;
  int v301 = *(_DWORD *)(a1 + 604);
  (*(void (**)(_BYTE *__return_ptr))(**(void **)(a1 + 1768) + 128LL))(buf);
  __int128 v308 = *(_OWORD *)&v359[32];
  __int128 v309 = *(_OWORD *)v360;
  uint64_t v310 = *(void *)&v360[16];
  __int128 v304 = *(_OWORD *)&buf[32];
  __int128 v305 = *(_OWORD *)&buf[48];
  __int128 v307 = *(_OWORD *)&v359[16];
  __int128 v306 = *(_OWORD *)v359;
  __int128 v303 = *(_OWORD *)&buf[16];
  __int128 v302 = *(_OWORD *)buf;
  (*(void (**)(_BYTE *__return_ptr))(**(void **)(a1 + 1768) + 136LL))(buf);
  __int128 v317 = *(_OWORD *)&v359[32];
  __int128 v318 = *(_OWORD *)v360;
  __int128 v313 = *(_OWORD *)&buf[32];
  __int128 v314 = *(_OWORD *)&buf[48];
  __int128 v315 = *(_OWORD *)v359;
  __int128 v316 = *(_OWORD *)&v359[16];
  __int128 v311 = *(_OWORD *)buf;
  __int128 v312 = *(_OWORD *)&buf[16];
  uint64_t v319 = *(void *)&v360[16];
  int v35 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768));
  uint64_t result = sub_1008415AC((uint64_t)v320, v17, a3, (uint64_t)__str, (int *)a5, v35, (uint64_t)&v273);
  int v37 = v273;
  int v272 = v273;
  uint64_t v254 = *(int *)(a1 + 604);
  int v38 = *(_DWORD *)a5;
  int v39 = *(_DWORD *)(a5 + 68);
  int v255 = *(_DWORD *)a5;
  uint64_t v256 = v39;
  if (v253)
  {
    if (v38) {
      return result;
    }
    double v40 = sub_1009232CC((uint64_t)__str);
    uint64_t result = (uint64_t)sub_100D0ABB4();
    int v38 = v255;
    int v37 = 1;
    int v272 = 1;
  }

  BOOL v41 = __str;
  if (a8)
  {
    int v42 = (uint64_t *)sub_100700B84(a1 + 1880, (unsigned __int8 *)__str);
    int v37 = v272;
    if (v272)
    {
      int v38 = v255;
      BOOL v41 = __str;
    }

    else
    {
      __int128 v43 = v42;
      int v38 = v255;
      BOOL v41 = __str;
      if ((uint64_t *)(a1 + 1888) != v42)
      {
        sub_1000087E8((uint64_t **)(a1 + 1880), v42);
        sub_100A0B05C((uint64_t)(v43 + 4));
        operator delete(v43);
        int v37 = v272;
      }
    }
  }

  if (v37 == -1 || v37 == v38)
  {
    int v53 = v37 | v38;
    _ZF = (~LODWORD(v41[6].__r_.__value_.__r.__words[2]) & 5LL) == 0 && v53 == 0;
    BOOL v55 = _ZF && v39 == 1;
    BOOL v56 = 0;
    int v58 = v55 && (_DWORD)v254 == 2;
    BOOL v257 = v58;
  }

  else
  {
    if (v38 == -1 || v37)
    {
      int v44 = 0;
      if (v38 != -1 && v37 == 1)
      {
        if ((v41[6].__r_.__value_.__s.__data_[16] & 2) != 0)
        {
          if (*(double *)(a1 + 656) <= 0.0)
          {
            int v44 = 1;
          }

          else
          {
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866E28);
            }
            uint64_t v59 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)std::stringbuf::string_type buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_DEBUG,  "Fence: invalidate EPNO exit trigger time",  buf,  2u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101866E28);
              }
              *(_WORD *)v328 = 0;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: invalidate EPNO exit trigger time",  v328,  2);
              v228 = (char *)v227;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationMonitoredFence(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaemonLocationPrivate &, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatu s &, const BOOL, const BOOL)",  "%s\n",  v227);
              if (v228 != buf) {
                free(v228);
              }
            }

            *(void *)(a1 + 656) = 0LL;
            int v44 = 1;
            BOOL v41 = __str;
          }
        }

        else
        {
          int v44 = 0;
        }
      }
    }

    else
    {
      int v44 = v41[6].__r_.__value_.__s.__data_[16] & 1;
    }

    BOOL v45 = v44 == 0;
    BOOL v257 = v44 != 0;
    if ((~LODWORD(v41[6].__r_.__value_.__r.__words[2]) & 5LL) != 0) {
      goto LABEL_69;
    }
    int v46 = v44 ^ 1;
    if (!v272 && (_DWORD)v254 != 2)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      __int128 v47 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        std::string::pointer data = v41[1].__r_.__value_.__l.__data_;
        __int128 v49 = v41 + 1;
        std::string::pointer v48 = data;
        if ((v49->__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int128 v51 = v49;
        }
        else {
          __int128 v51 = (std::string *)v48;
        }
        else {
          __int128 v52 = (&off_101866FF8)[v272 + 1];
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136380931;
        *(void *)&uint8_t buf[4] = v51;
        *(_WORD *)&_BYTE buf[12] = 2081;
        *(void *)&buf[14] = v52;
        _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEBUG,  "Fence: %{private}s, filtering unwanted, %{private}s, nofitication, has not achieved settled state yet",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        v204 = __str + 1;
        if ((__str[1].__r_.__value_.__s.__size_ & 0x80u) != 0) {
          v204 = (std::string *)__str[1].__r_.__value_.__l.__data_;
        }
        else {
          v205 = (&off_101866FF8)[v272 + 1];
        }
        *(_DWORD *)v328 = 136380931;
        *(void *)&v328[4] = v204;
        __int16 v329 = 2081;
        *(void *)v330 = v205;
        LODWORD(v231) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: %{private}s, filtering unwanted, %{private}s, nofitication, has not achieved settled state yet",  v328,  v231);
        v221 = (char *)v220;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationMonitoredFence(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaem onLocationPrivate &, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, const b ool, const BOOL)",  "%s\n",  v220);
        if (v221 != buf) {
          free(v221);
        }
      }

      int v46 = 0;
      int v44 = 0;
      BOOL v41 = __str;
    }

    BOOL v45 = v46 != 0;
    BOOL v257 = v44 != 0;
    if (v272 != 1 || v39 == 2)
    {
LABEL_69:
      BOOL v56 = v45;
    }

    else
    {
      BOOL v56 = v46 != 0;
      if ((v41[6].__r_.__value_.__s.__data_[16] & 2) != 0)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        uint64_t v60 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          sub_10065EF44((const void **)&v41->__r_.__value_.__l.__data_, (std::string *)buf);
          double v61 = buf[23] >= 0 ? buf : *(_BYTE **)buf;
          uint64_t v62 = (v272 + 1) > 4 ? "---" : (&off_101866FF8)[v272 + 1];
          *(_DWORD *)v328 = 136380931;
          *(void *)&v328[4] = v61;
          __int16 v329 = 2081;
          *(void *)v330 = v62;
          _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_DEBUG,  "Fence: %{private}s, filtering unwanted, %{private}s, nofitication, never achieved settled state for entry notification",  v328,  0x16u);
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          uint64_t v222 = qword_101934878;
          sub_10065EF44((const void **)&__str->__r_.__value_.__l.__data_, (std::string *)v328);
          if (v330[9] >= 0) {
            v223 = v328;
          }
          else {
            v223 = *(_BYTE **)v328;
          }
          else {
            v224 = (&off_101866FF8)[v272 + 1];
          }
          v357.type = 136380931;
          *(void *)&v357.confidence = v223;
          LOWORD(v357.mountedState) = 2081;
          *(void *)((char *)&v357.mountedState + 2) = v224;
          LODWORD(v231) = 22;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v222,  2LL,  "Fence: %{private}s, filtering unwanted, %{private}s, nofitication, never achieved settled state for entry notification",  &v357,  v231);
          v230 = v229;
          if ((v330[9] & 0x80000000) != 0) {
            operator delete(*(void **)v328);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationMonitoredFence(const CFAbsoluteTime, const CLDaemonLocation &, const CLDa emonLocationPrivate &, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, con st BOOL, const BOOL)",  "%s\n",  v230);
          if (v230 != buf) {
            free(v230);
          }
        }

        BOOL v56 = 0;
        BOOL v257 = 0;
      }
    }
  }

  int v252 = sub_100A073E4(a1, a6);
  if (!v56 && !v257)
  {
    int v251 = 0;
    int v248 = 0;
    BOOL v56 = 0;
    BOOL v257 = 0;
LABEL_210:
    uint64_t v65 = (uint64_t)__str;
    goto LABEL_211;
  }

  if (__str[6].__r_.__value_.__s.__data_[16] < 0)
  {
    if (a1 + 824 != sub_100700B84(a1 + 816, (unsigned __int8 *)__str))
    {
      sub_100922994(buf);
      if (sub_100A071AC(a1, (unsigned __int8 *)__str, (uint64_t)buf))
      {
        uint64_t v70 = sub_100700B84(a1 + 240, buf);
        if (a1 + 248 == v70)
        {
          sub_10026EDA4((uint64_t)buf);
        }

        else
        {
          int v71 = *(_DWORD *)(v70 + 280);
          sub_10026EDA4((uint64_t)buf);
          if (v71 != -1)
          {
LABEL_209:
            int v251 = 0;
            BOOL v56 = 0;
            BOOL v257 = 0;
            int v248 = 1;
            goto LABEL_210;
          }
        }
      }

      else
      {
        if (*(void *)&v380[12])
        {
          *(void *)&__int128 v381 = *(void *)&v380[12];
          operator delete(*(void **)&v380[12]);
        }

        if ((v380[3] & 0x80000000) != 0) {
          operator delete(v376);
        }
        if ((v359[7] & 0x80000000) != 0) {
          operator delete(*(void **)&buf[48]);
        }
        if ((buf[47] & 0x80000000) != 0) {
          operator delete(*(void **)&buf[24]);
        }
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }
    }

    if (v255 == -1)
    {
      if (v257)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        uint64_t v169 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v169,  OS_LOG_TYPE_ERROR,  "#significantFence, state init on transition",  buf,  2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          *(_WORD *)v328 = 0;
          LODWORD(v231) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  16LL,  "#significantFence, state init on transition",  v328,  v231);
          v226 = (char *)v225;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceMonitor::handleLocationMonitoredFence(const CFAbsoluteTime, const CLDaemonLocation &, const CLDa emonLocationPrivate &, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, con st BOOL, const BOOL)",  "%s\n",  v225);
          if (v226 != buf) {
            free(v226);
          }
        }
      }

      sub_1010DDBC0(v262, "SigFence");
      uint64_t v65 = (uint64_t)__str;
      sub_1009F5248(a1, (uint64_t)__str, &v272, v262);
      if ((v263 & 0x80000000) == 0) {
        goto LABEL_326;
      }
      v170 = (void *)v262[0];
      goto LABEL_325;
    }

    if (v257)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      __int128 v112 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        if ((__str[1].__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int128 v113 = __str + 1;
        }
        else {
          __int128 v113 = (std::string *)__str[1].__r_.__value_.__l.__data_;
        }
        int v114 = *(unsigned __int8 *)(a1 + 619);
        std::string::pointer v116 = __str[3].__r_.__value_.__l.__data_;
        std::string::size_type size = __str[3].__r_.__value_.__l.__size_;
        double v117 = sub_1009232CC((uint64_t)__str);
        *(_DWORD *)std::stringbuf::string_type buf = 136381699;
        *(void *)&uint8_t buf[4] = v113;
        *(_WORD *)&_BYTE buf[12] = 1026;
        *(_DWORD *)&buf[14] = v114;
        *(_WORD *)&_BYTE buf[18] = 2049;
        *(void *)&_BYTE buf[20] = v116;
        *(_WORD *)&_BYTE buf[28] = 2049;
        *(void *)&buf[30] = size;
        *(_WORD *)&buf[38] = 2050;
        *(double *)&buf[40] = v117;
        _os_log_impl( (void *)&_mh_execute_header,  v112,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: fence, %{private}s, fence event, hint, %{public}d, latLon, %{private}.6lf,%{private}.6lf, radius, %{public}.1lf",  buf,  0x30u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        uint64_t v212 = qword_101934878;
        if ((__str[1].__r_.__value_.__s.__size_ & 0x80u) == 0) {
          v213 = __str + 1;
        }
        else {
          v213 = (std::string *)__str[1].__r_.__value_.__l.__data_;
        }
        int v214 = *(unsigned __int8 *)(a1 + 619);
        std::string::pointer v216 = __str[3].__r_.__value_.__l.__data_;
        std::string::size_type v215 = __str[3].__r_.__value_.__l.__size_;
        double v217 = sub_1009232CC((uint64_t)__str);
        *(_DWORD *)v328 = 136381699;
        *(void *)&v328[4] = v213;
        __int16 v329 = 1026;
        *(_DWORD *)v330 = v214;
        *(_WORD *)&v330[4] = 2049;
        *(void *)&v330[6] = v216;
        *(_WORD *)&v330[14] = 2049;
        *(void *)&v330[16] = v215;
        *(_WORD *)&v330[24] = 2050;
        *(double *)&v330[26] = v217;
        LODWORD(v231) = 48;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v212,  0LL,  "#significantRegion: fence, %{private}s, fence event, hint, %{public}d, latLon, %{private}.6lf,%{private}.6lf, radius, %{public}.1lf",  v328,  v231);
        v219 = (char *)v218;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationMonitoredFence(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaem onLocationPrivate &, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, const b ool, const BOOL)",  "%s\n",  v218);
        if (v219 != buf) {
          free(v219);
        }
      }

      (*(void (**)(void, int *, std::string *, _BYTE *))(**(void **)(a1 + 1768) + 424LL))( *(void *)(a1 + 1768),  &v272,  __str,  v320);
      if (!*(_BYTE *)(a1 + 619)) {
        goto LABEL_323;
      }
    }

    goto LABEL_209;
  }

  BOOL v63 = sub_100A074E4(a1, (__int128 *)&__str[1], (__int128 *)__str);
  BOOL v64 = v63;
  uint64_t v65 = (uint64_t)__str;
  if (__str[7].__r_.__value_.__s.__data_[8]) {
    BOOL v66 = 0;
  }
  else {
    BOOL v66 = v63;
  }
  if (!v66) {
    goto LABEL_87;
  }
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  int v67 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
  {
    if ((__str->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v68 = __str;
    }
    else {
      int v68 = (std::string *)__str->__r_.__value_.__r.__words[0];
    }
    if ((__str[1].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v69 = __str + 1;
    }
    else {
      int v69 = (std::string *)__str[1].__r_.__value_.__l.__data_;
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136446467;
    *(void *)&uint8_t buf[4] = v68;
    *(_WORD *)&_BYTE buf[12] = 2081;
    *(void *)&buf[14] = v69;
    _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_FAULT,  "LOI helper fence %{public}s/%{private}s has isHelperFence=false",  buf,  0x16u);
  }

  uint64_t v65 = (uint64_t)__str;
  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    if ((__str->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v206 = __str;
    }
    else {
      v206 = (std::string *)__str->__r_.__value_.__r.__words[0];
    }
    if ((__str[1].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v207 = __str + 1;
    }
    else {
      v207 = (std::string *)__str[1].__r_.__value_.__l.__data_;
    }
    *(_DWORD *)v328 = 136446467;
    *(void *)&v328[4] = v206;
    __int16 v329 = 2081;
    *(void *)v330 = v207;
    LODWORD(v231) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "LOI helper fence %{public}s/%{private}s has isHelperFence=false",  v328,  v231);
    v209 = (char *)v208;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceMonitor::handleLocationMonitoredFence(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaemonLo cationPrivate &, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, const BOOL, const BOOL)",  "%s\n",  v208);
    if (v209 != buf) {
      free(v209);
    }
    uint64_t v65 = (uint64_t)__str;
  }

  else
  {
LABEL_87:
    if (!v64)
    {
      int v251 = 0;
      int v248 = 0;
      goto LABEL_211;
    }
  }

  if (*(char *)(v65 + 47) < 0)
  {
    sub_1010DD48C(__dst, *(void **)(v65 + 24), *(void *)(v65 + 32));
    uint64_t v65 = (uint64_t)__str;
  }

  else
  {
    *(_OWORD *)__int128 __dst = *(_OWORD *)&__str[1].__r_.__value_.__l.__data_;
    int64_t cap = __str[1].__r_.__value_.__l.__cap_;
  }

  int v72 = *(void **)(a1 + 816);
  if (v72 != (void *)(a1 + 824))
  {
    uint64_t v73 = a1 + 240;
    uint64_t v74 = a1 + 248;
    do
    {
      uint64_t v75 = *((unsigned __int8 *)v72 + 303);
      if ((v75 & 0x80u) == 0LL) {
        uint64_t v76 = (void *)*((unsigned __int8 *)v72 + 303);
      }
      else {
        uint64_t v76 = (void *)v72[36];
      }
      std::string::size_type v77 = (void *)HIBYTE(cap);
      if (cap < 0) {
        std::string::size_type v77 = __dst[1];
      }
      if (v76 != v77) {
        goto LABEL_162;
      }
      uint64_t v78 = (const void **)(v72 + 35);
      if (cap >= 0) {
        __int16 v79 = __dst;
      }
      else {
        __int16 v79 = (void **)__dst[0];
      }
      if ((v75 & 0x80) != 0)
      {
        if (memcmp(*v78, v79, v72[36])) {
          goto LABEL_162;
        }
      }

      else if (*((_BYTE *)v72 + 303))
      {
        while (*(unsigned __int8 *)v78 == *(unsigned __int8 *)v79)
        {
          uint64_t v78 = (const void **)((char *)v78 + 1);
          __int16 v79 = (void **)((char *)v79 + 1);
          if (!--v75) {
            goto LABEL_125;
          }
        }

        goto LABEL_162;
      }

LABEL_259:
    uint64_t v156 = (uint64_t)__str;
    if (!v257 && !v151) {
      goto LABEL_300;
    }
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v157 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      *(void *)&uint8_t buf[4] = "handleLocationMonitoredFence";
      _os_log_impl((void *)&_mh_execute_header, v157, OS_LOG_TYPE_DEFAULT, "%s, issuing state/transition", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      *(_DWORD *)v328 = 136315138;
      *(void *)&v328[4] = "handleLocationMonitoredFence";
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "%s, issuing state/transition",  v328);
      v187 = (char *)v186;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationMonitoredFence(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaemon LocationPrivate &, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, const BOOL, const BOOL)",  "%s\n",  v186);
      if (v187 != buf) {
        free(v187);
      }
    }

    sub_1009CDA54(v328);
    uint64_t v156 = (uint64_t)__str;
    std::string::operator=((std::string *)v328, __str);
    int v152 = v255;
    std::string::operator=((std::string *)&v330[10], __str + 1);
    std::string::operator=((std::string *)&v330[34], __str + 2);
    *(_OWORD *)&v335[16] = *(_OWORD *)&__str[5].__r_.__value_.__r.__words[2];
    __int128 v336 = *(_OWORD *)&__str[6].__r_.__value_.__r.__words[1];
    *(_OWORD *)v337 = *(_OWORD *)&__str[7].__r_.__value_.__l.__data_;
    *(void *)&v337[13] = *(std::string::size_type *)((char *)&__str[7].__r_.__value_.__r.__words[1] + 5);
    *(_OWORD *)v333 = *(_OWORD *)&__str[3].__r_.__value_.__l.__data_;
    *(_OWORD *)&v333[16] = *(_OWORD *)&__str[3].__r_.__value_.__r.__words[2];
    __int128 v334 = *(_OWORD *)&__str[4].__r_.__value_.__r.__words[1];
    *(_OWORD *)v335 = *(_OWORD *)&__str[5].__r_.__value_.__l.__data_;
    std::string::operator=((std::string *)&v339, __str + 8);
    __int128 v158 = *(void **)&v343[4];
    *(void *)&v343[4] = __str[9].__r_.__value_.__l.__data_;

    if (v328 != (_BYTE *)__str) {
      sub_10009B244( &v343[12],  (char *)__str[9].__r_.__value_.__l.__size_,  __str[9].__r_.__value_.__l.__cap_,  (uint64_t)(__str[9].__r_.__value_.__l.__cap_ - __str[9].__r_.__value_.__l.__size_) >> 4);
    }
    *(void *)&v335[8] = *(void *)(a5 + 40);
    __int128 v354 = v326;
    *(_OWORD *)v355 = v327[0];
    *(_OWORD *)&v355[12] = *(_OWORD *)((char *)v327 + 12);
    __int128 v350 = v322;
    __int128 v351 = v323;
    *(_DWORD *)&v335[16] = v252;
    __int128 v352 = v324;
    __int128 v353 = v325;
    __int128 v348 = *(_OWORD *)&v320[16];
    __int128 v349 = v321;
    __int128 v347 = *(_OWORD *)v320;
    double v159 = *(double *)(a5 + 56);
    double v160 = a6 - v159;
    BOOL v133 = v159 <= 0.0;
    int v346 = v272;
    int v356 = v255;
    double v161 = -1.0;
    if (!v133) {
      double v161 = v160;
    }
    *(double *)&__int128 v336 = v161;
    *(_DWORD *)&v335[24] = sub_100A0D208(a1 + 904, (unsigned __int8 *)__str);
    *(_DWORD *)&v335[20] = sub_100A0D244(a1 + 904);
    if (v257)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v162 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        *(void *)&uint8_t buf[4] = "handleLocationMonitoredFence";
        _os_log_impl((void *)&_mh_execute_header, v162, OS_LOG_TYPE_DEFAULT, "%s, issuing transition", buf, 0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        v357.type = 136315138;
        *(void *)&v357.confidence = "handleLocationMonitoredFence";
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "%s, issuing transition",  (const char *)&v357);
        v203 = (char *)v202;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationMonitoredFence(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaem onLocationPrivate &, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, const b ool, const BOOL)",  "%s\n",  v202);
        if (v203 != buf) {
          free(v203);
        }
        int v152 = v255;
        uint64_t v156 = (uint64_t)__str;
      }

      *(_DWORD *)std::stringbuf::string_type buf = 0;
      sub_1009F55C0(a1, buf, (uint64_t)v328);
      if (sub_100B58B88((_BYTE *)(a1 + 1312)))
      {
        (*(void (**)(CLMotionActivity *__return_ptr))(**(void **)(a1 + 1768) + 128LL))(&v357);
        char v163 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768));
        sub_100B5AD68( (uint64_t)buf,  (uint64_t)v328,  (double *)a5,  (__int128 *)(a1 + 1648),  &v357,  (uint64_t)v320,  a1 + 144,  v163,  a6,  *(_BYTE *)(a1 + 613),  *(_BYTE *)(a1 + 728));
        sub_100B5AD7C((uint64_t)buf);
        if (*((void *)&v381 + 1))
        {
          *(void *)v382 = *((void *)&v381 + 1);
          operator delete(*((void **)&v381 + 1));
        }

        if ((buf[31] & 0x80000000) != 0) {
          operator delete(*(void **)&buf[8]);
        }
      }

      *(double *)(a5 + 56) = a6;
      *(_DWORD *)(a5 + 64) = v325;
LABEL_288:
      int v153 = v256;
      goto LABEL_289;
    }

    int v153 = v256;
    if (v151)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      v164 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        *(void *)&uint8_t buf[4] = "handleLocationMonitoredFence";
        _os_log_impl((void *)&_mh_execute_header, v164, OS_LOG_TYPE_DEFAULT, "%s, issuing state", buf, 0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        v357.type = 136315138;
        *(void *)&v357.confidence = "handleLocationMonitoredFence";
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "%s, issuing state",  (const char *)&v357);
        v211 = (char *)v210;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationMonitoredFence(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaem onLocationPrivate &, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, const b ool, const BOOL)",  "%s\n",  v210);
        if (v211 != buf) {
          free(v211);
        }
        int v152 = v255;
        uint64_t v156 = (uint64_t)__str;
      }

      *(_DWORD *)std::stringbuf::string_type buf = 1;
      sub_1009F55C0(a1, buf, (uint64_t)v328);
      goto LABEL_288;
    }

  BOOL v133 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 304);
  if (v133 >= 0x80)
  {
    double v134 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v133, a2);
    uint64_t v122 = *(_DWORD *)(a1 + 400);
  }

  else
  {
    double v134 = 1;
  }

  v4 += v134 + 2;
  if ((v122 & 8) == 0)
  {
LABEL_239:
    if ((v122 & 0x10) == 0) {
      goto LABEL_240;
    }
    goto LABEL_269;
  }

          *(_DWORD *)(a1 + 72) = v62;
          goto LABEL_243;
        case 0x14u:
          *(void *)(a1 + 164) |= 0x200000000uLL;
          uint64_t v65 = *((void *)this + 1);
          if (v65 > 0xFFFFFFFFFFFFFFFBLL || v65 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v65);
          goto LABEL_241;
        case 0x15u:
          *(void *)(a1 + 164) |= 0x4000uLL;
          BOOL v66 = *((void *)this + 1);
          if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v66);
          goto LABEL_241;
        case 0x16u:
          *(void *)(a1 + 164) |= 0x8000uLL;
          int v67 = *((void *)this + 1);
          if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
            goto LABEL_170;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v67);
          goto LABEL_241;
        case 0x17u:
          *(void *)(a1 + 164) |= 0x1000uLL;
          int v68 = *((void *)this + 1);
          int v69 = *((void *)this + 2);
          uint64_t v70 = *(void *)this;
          if (v68 <= 0xFFFFFFFFFFFFFFF5LL && v68 + 10 <= v69)
          {
            int v71 = 0;
            int v72 = 0;
            uint64_t v73 = 0LL;
            do
            {
              uint64_t v74 = v68 + 1;
              *((void *)this + 1) = v68 + 1;
              uint64_t v75 = *(_BYTE *)(v70 + v68);
              v73 |= (unint64_t)(v75 & 0x7F) << v71;
              if ((v75 & 0x80) == 0) {
                goto LABEL_263;
              }
              v71 += 7;
              int v68 = v74;
              __int128 v14 = v72++ > 8;
            }

            while (!v14);
LABEL_200:
            LODWORD(v73) = 0;
            goto LABEL_263;
          }

          int v144 = 0;
          uint64_t v145 = 0;
          uint64_t v73 = 0LL;
          if (v69 <= v68) {
            int v69 = *((void *)this + 1);
          }
          while (2)
          {
            if (v69 == v68)
            {
              LODWORD(v73) = 0;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              int v146 = v68 + 1;
              double v147 = *(_BYTE *)(v70 + v68);
              *((void *)this + 1) = v146;
              v73 |= (unint64_t)(v147 & 0x7F) << v144;
              if (v147 < 0)
              {
                v144 += 7;
                int v68 = v146;
                __int128 v14 = v145++ > 8;
                if (v14) {
                  goto LABEL_200;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v73) = 0;
              }
            }

            break;
          }

        *(_DWORD *)(a1 + 120) = v40;
        goto LABEL_304;
      case 8u:
        *(_DWORD *)(a1 + 152) |= 0x8000u;
        __int128 v43 = *((void *)this + 1);
        int v44 = *((void *)this + 2);
        BOOL v45 = *(void *)this;
        if (v43 <= 0xFFFFFFFFFFFFFFF5LL && v43 + 10 <= v44)
        {
          int v46 = 0;
          __int128 v47 = 0;
          std::string::pointer v48 = 0LL;
          do
          {
            __int128 v49 = v43 + 1;
            *((void *)this + 1) = v43 + 1;
            uint64_t v50 = *(_BYTE *)(v45 + v43);
            v48 |= (unint64_t)(v50 & 0x7F) << v46;
            if ((v50 & 0x80) == 0) {
              goto LABEL_263;
            }
            v46 += 7;
            __int128 v43 = v49;
            __int128 v15 = v47++ > 8;
          }

          while (!v15);
LABEL_175:
          LODWORD(v48) = 0;
          goto LABEL_263;
        }

        __int128 v158 = 0;
        double v159 = 0;
        std::string::pointer v48 = 0LL;
        if (v44 <= v43) {
          int v44 = *((void *)this + 1);
        }
        while (2)
        {
          if (v44 == v43)
          {
            LODWORD(v48) = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            double v160 = v43 + 1;
            double v161 = *(_BYTE *)(v45 + v43);
            *((void *)this + 1) = v160;
            v48 |= (unint64_t)(v161 & 0x7F) << v158;
            if (v161 < 0)
            {
              v158 += 7;
              __int128 v43 = v160;
              __int128 v15 = v159++ > 8;
              if (v15) {
                goto LABEL_175;
              }
              continue;
            }

            if (*((_BYTE *)this + 24)) {
              LODWORD(v48) = 0;
            }
          }

          break;
        }

          *(_DWORD *)(a1 + 48) = v42;
          goto LABEL_296;
        case 4u:
          *(_DWORD *)(a1 + 116) |= 0x400u;
          BOOL v45 = *((void *)this + 1);
          int v46 = *((void *)this + 2);
          __int128 v47 = *(void *)this;
          if (v45 <= 0xFFFFFFFFFFFFFFF5LL && v45 + 10 <= v46)
          {
            std::string::pointer v48 = 0;
            __int128 v49 = 0;
            uint64_t v50 = 0LL;
            do
            {
              __int128 v51 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              __int128 v52 = *(_BYTE *)(v47 + v45);
              v50 |= (unint64_t)(v52 & 0x7F) << v48;
              if ((v52 & 0x80) == 0) {
                goto LABEL_263;
              }
              v48 += 7;
              BOOL v45 = v51;
              __int128 v14 = v49++ > 8;
            }

            while (!v14);
LABEL_174:
            LODWORD(v50) = 0;
            goto LABEL_263;
          }

          BOOL v166 = 0;
          int v167 = 0;
          uint64_t v50 = 0LL;
          if (v46 <= v45) {
            int v46 = *((void *)this + 1);
          }
          while (2)
          {
            if (v46 == v45)
            {
              LODWORD(v50) = 0;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              int v168 = v45 + 1;
              uint64_t v169 = *(_BYTE *)(v47 + v45);
              *((void *)this + 1) = v168;
              v50 |= (unint64_t)(v169 & 0x7F) << v166;
              if (v169 < 0)
              {
                v166 += 7;
                BOOL v45 = v168;
                __int128 v14 = v167++ > 8;
                if (v14) {
                  goto LABEL_174;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v50) = 0;
              }
            }

            break;
          }

LABEL_289:
    if (*(void *)&v343[12])
    {
      *(void *)v344 = *(void *)&v343[12];
      operator delete(*(void **)&v343[12]);
    }

    if ((v343[3] & 0x80000000) != 0) {
      operator delete(v339);
    }
    if (SHIBYTE(v332) < 0) {
      operator delete(*(void **)&v330[34]);
    }
    if ((v330[33] & 0x80000000) != 0) {
      operator delete(*(void **)&v330[10]);
    }
    if ((v330[9] & 0x80000000) != 0) {
      operator delete(*(void **)v328);
    }
    int v155 = v272;
LABEL_300:
    uint64_t v165 = a5;
    if (*(double *)(a5 + 32) < 0.0
      || vabdd_f64(*(double *)(a5 + 24), v17) >= 100.0
      || v155 != v152
      || *(_DWORD *)(a5 + 68) != v153)
    {
      BOOL v166 = v155 != v152;
      int v167 = sub_100A06258(a1, v156, (_DWORD *)a5, (uint64_t)v320);
      sub_100A05614(a1, (const void **)&__str->__r_.__value_.__l.__data_, (_DWORD *)a5, v167, v166, a6);
      uint64_t v165 = a5;
      uint64_t v156 = (uint64_t)__str;
      *(double *)(a5 + 24) = v17;
      *(double *)(a5 + 32) = a6;
    }

    int v168 = v325;
    if (((1 << v325) & 0x2E1E) != 0) {
      break;
    }
    if ((_DWORD)v325 != 5) {
      goto LABEL_310;
    }
    sub_101258914();
    __break(1u);
LABEL_323:
    sub_1010DDBC0(v260, "SigFence");
    uint64_t v65 = (uint64_t)__str;
    sub_1009F57F8(a1, (uint64_t)__str, &v272, (uint64_t)v320, (uint64_t *)v260, a6);
    if (v261 < 0)
    {
      v170 = v260[0];
LABEL_325:
      operator delete(v170);
    }

LABEL_310:
  uint64_t result = sub_100A0CC50((double *)(a1 + 904), a6);
  if ((_DWORD)result) {
    return sub_100B5A24C(a1 + 1312);
  }
  return result;
}

          *(void *)(a1 + 16) = v42;
          goto LABEL_294;
        case 4u:
          *(void *)(a1 + 216) |= 0x20000uLL;
          BOOL v45 = *((void *)this + 1);
          if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v45);
          goto LABEL_293;
        case 5u:
          *(void *)(a1 + 216) |= 0x8000000000uLL;
          int v46 = *((void *)this + 1);
          if (v46 > 0xFFFFFFFFFFFFFFFBLL || v46 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v46);
          goto LABEL_293;
        case 6u:
          *(void *)(a1 + 216) |= 0x4000000000uLL;
          __int128 v47 = *((void *)this + 1);
          if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v47);
          goto LABEL_293;
        case 7u:
          *(void *)(a1 + 216) |= 0x80000000000uLL;
          std::string::pointer v48 = *((void *)this + 1);
          if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v48);
          goto LABEL_293;
        case 8u:
          *(void *)(a1 + 216) |= 0x40000000000uLL;
          __int128 v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v49);
          goto LABEL_293;
        case 9u:
          *(void *)(a1 + 216) |= 0x800000000000uLL;
          uint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 208) = *(_DWORD *)(*(void *)this + v50);
          goto LABEL_293;
        case 0xAu:
          *(void *)(a1 + 216) |= 0x400000000000uLL;
          __int128 v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v51);
          goto LABEL_293;
        case 0xBu:
          *(void *)(a1 + 216) |= 0x10000000000uLL;
          __int128 v52 = *((void *)this + 1);
          if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v52);
          goto LABEL_293;
        case 0xCu:
          *(void *)(a1 + 216) |= 0x100000000000uLL;
          int v53 = *((void *)this + 1);
          if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v53);
          goto LABEL_293;
        case 0xDu:
          *(void *)(a1 + 216) |= 0x1000000000000uLL;
          uint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 212) = *(_DWORD *)(*(void *)this + v54);
          goto LABEL_293;
        case 0xEu:
          *(void *)(a1 + 216) |= 0x10000uLL;
          BOOL v55 = *((void *)this + 1);
          if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v55);
          goto LABEL_293;
        case 0xFu:
          *(void *)(a1 + 216) |= 0x2000000000uLL;
          BOOL v56 = *((void *)this + 1);
          if (v56 > 0xFFFFFFFFFFFFFFFBLL || v56 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v56);
          goto LABEL_293;
        case 0x10u:
          *(void *)(a1 + 216) |= 0x20000000000uLL;
          double v57 = *((void *)this + 1);
          if (v57 > 0xFFFFFFFFFFFFFFFBLL || v57 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v57);
          goto LABEL_293;
        case 0x11u:
          *(void *)(a1 + 216) |= 0x200000000000uLL;
          int v58 = *((void *)this + 1);
          if (v58 > 0xFFFFFFFFFFFFFFFBLL || v58 + 4 > *((void *)this + 2)) {
            goto LABEL_214;
          }
          *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v58);
          goto LABEL_293;
        case 0x12u:
          *(void *)(a1 + 216) |= 4uLL;
          uint64_t v59 = *((void *)this + 1);
          uint64_t v60 = *((void *)this + 2);
          double v61 = *(void *)this;
          if (v59 <= 0xFFFFFFFFFFFFFFF5LL && v59 + 10 <= v60)
          {
            uint64_t v62 = 0;
            BOOL v63 = 0;
            BOOL v64 = 0LL;
            do
            {
              uint64_t v65 = v59 + 1;
              *((void *)this + 1) = v59 + 1;
              BOOL v66 = *(_BYTE *)(v61 + v59);
              v64 |= (unint64_t)(v66 & 0x7F) << v62;
              if ((v66 & 0x80) == 0) {
                goto LABEL_314;
              }
              v62 += 7;
              uint64_t v59 = v65;
              __int128 v14 = v63++ > 8;
            }

            while (!v14);
LABEL_242:
            BOOL v64 = 0LL;
            goto LABEL_314;
          }

          double v159 = 0;
          double v160 = 0;
          BOOL v64 = 0LL;
          if (v60 <= v59) {
            uint64_t v60 = *((void *)this + 1);
          }
          while (2)
          {
            if (v60 == v59)
            {
              BOOL v64 = 0LL;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              double v161 = v59 + 1;
              uint64_t v162 = *(_BYTE *)(v61 + v59);
              *((void *)this + 1) = v161;
              v64 |= (unint64_t)(v162 & 0x7F) << v159;
              if (v162 < 0)
              {
                v159 += 7;
                uint64_t v59 = v161;
                __int128 v14 = v160++ > 8;
                if (v14) {
                  goto LABEL_242;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                BOOL v64 = 0LL;
              }
            }

            break;
          }

              *(void *)(a1 + 40) = v75;
              goto LABEL_282;
            case 0xCu:
              *(void *)(a1 + 164) |= 8uLL;
              uint64_t v78 = *((void *)this + 1);
              __int16 v79 = *((void *)this + 2);
              uint64_t v80 = *(void *)this;
              if (v78 <= 0xFFFFFFFFFFFFFFF5LL && v78 + 10 <= v79)
              {
                uint64_t v81 = 0;
                uint64_t v82 = 0;
                int v83 = 0LL;
                do
                {
                  uint64_t v84 = v78 + 1;
                  *((void *)this + 1) = v78 + 1;
                  __int128 v85 = *(_BYTE *)(v80 + v78);
                  v83 |= (unint64_t)(v85 & 0x7F) << v81;
                  if ((v85 & 0x80) == 0) {
                    goto LABEL_314;
                  }
                  v81 += 7;
                  uint64_t v78 = v84;
                  __int128 v14 = v82++ > 8;
                }

                while (!v14);
LABEL_230:
                int v83 = 0LL;
                goto LABEL_314;
              }

              double v180 = 0;
              double v181 = 0;
              int v83 = 0LL;
              if (v79 <= v78) {
                __int16 v79 = *((void *)this + 1);
              }
              while (2)
              {
                if (v79 == v78)
                {
                  int v83 = 0LL;
                  *((_BYTE *)this + 24) = 1;
                }

                else
                {
                  double v182 = v78 + 1;
                  double v183 = *(_BYTE *)(v80 + v78);
                  *((void *)this + 1) = v182;
                  v83 |= (unint64_t)(v183 & 0x7F) << v180;
                  if (v183 < 0)
                  {
                    v180 += 7;
                    uint64_t v78 = v182;
                    __int128 v14 = v181++ > 8;
                    if (v14) {
                      goto LABEL_230;
                    }
                    continue;
                  }

                  if (*((_BYTE *)this + 24)) {
                    int v83 = 0LL;
                  }
                }

                break;
              }

void sub_1009FC2B8(_Unwind_Exception *a1)
{
}

void sub_1009FC3F4(uint64_t a1, int *a2, double *a3, double a4)
{
  int v8 = *a2;
  if (*a2 == 11)
  {
    sub_100A0ECE8(a1 + 904, *((unsigned __int8 *)a3 + 137));
  }

  else if (v8 == 7)
  {
    *(double *)(a1 + 1760) = a4;
    sub_100A0EE98(a1 + 904, a4);
  }

  else if (v8 == 1)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    __int128 v9 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      int v10 = *(unsigned __int8 *)a3;
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)uint64_t v78 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Fence: Got kNotificationPower, isWifiPowered, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v41 = *(unsigned __int8 *)a3;
      int v67 = 67240192;
      *(_DWORD *)int v68 = v41;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Got kNotificationPower, isWifiPowered, %{public}d",  &v67,  8);
      __int128 v43 = (uint8_t *)v42;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, cons t CLWifiService_Type::NotificationData &)",  "%s\n",  v42);
      if (v43 != buf) {
        free(v43);
      }
    }

    if (!*(_BYTE *)a3)
    {
      sub_100B5A314(a1 + 1312, 0);
      *(void *)(a1 + 684) = 0LL;
      (*(void (**)(void))(**(void **)(a1 + 1768) + 280LL))(*(void *)(a1 + 1768));
    }
  }

  if (*(_BYTE *)(a1 + 612))
  {
    uint64_t v11 = *(void *)(a1 + 256);
    switch(*a2)
    {
      case 1:
        sub_100A0E984((_BYTE *)(a1 + 904), *(unsigned __int8 *)a3, a4);
        return;
      case 3:
        __int128 v15 = a3 + 13;
        sub_100A0FB34(a1 + 904, a3 + 13, a4);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        __int128 v16 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v17 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)a3 + 15) - *((void *)a3 + 14)) >> 3);
          double v18 = a3[13];
          int v19 = *(_DWORD *)(a1 + 684);
          int v20 = *(_DWORD *)(a1 + 688);
          *(_DWORD *)std::stringbuf::string_type buf = 134284801;
          *(void *)uint64_t v78 = v17;
          *(_WORD *)&v78[8] = 2049;
          *(double *)__int16 v79 = v18;
          *(_WORD *)&v79[8] = 2049;
          double v80 = a4 - v18;
          __int16 v81 = 2050;
          uint64_t v82 = v11;
          __int16 v83 = 1026;
          int v84 = v19;
          __int16 v85 = 1026;
          int v86 = v20;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "Fence: monitor, got kNotificationScan, result, %{private}lu, time, %{private}.1lf, age, %{private}.1lf, numF ences, %{public}lu, locationCount, %{public}d, %{public}d",  buf,  0x36u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          uint64_t v48 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)a3 + 15) - *((void *)a3 + 14)) >> 3);
          double v49 = a3[13];
          int v50 = *(_DWORD *)(a1 + 684);
          int v51 = *(_DWORD *)(a1 + 688);
          int v67 = 134284801;
          *(void *)int v68 = v48;
          *(_WORD *)&v68[8] = 2049;
          *(double *)int v69 = v49;
          *(_WORD *)&v69[8] = 2049;
          double v70 = a4 - v49;
          __int16 v71 = 2050;
          uint64_t v72 = v11;
          __int16 v73 = 1026;
          int v74 = v50;
          __int16 v75 = 1026;
          int v76 = v51;
          LODWORD(v66) = 54;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: monitor, got kNotificationScan, result, %{private}lu, time, %{private}.1lf, age, %{private}.1lf, numF ences, %{public}lu, locationCount, %{public}d, %{public}d",  &v67,  v66);
          int v53 = (uint8_t *)v52;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)",  "%s\n",  v52);
          if (v53 != buf) {
            free(v53);
          }
        }

        return;
      case 4:
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v12 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
        {
          int v13 = *(_DWORD *)(a1 + 684);
          int v14 = *(_DWORD *)(a1 + 688);
          *(_DWORD *)std::stringbuf::string_type buf = 67240448;
          *(_DWORD *)uint64_t v78 = v13;
          *(_WORD *)&v78[4] = 1026;
          *(_DWORD *)&v78[6] = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "scan result, count, wait, %{public}d, retry, %{public}d, error",  buf,  0xEu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          int v44 = *(_DWORD *)(a1 + 684);
          int v45 = *(_DWORD *)(a1 + 688);
          int v67 = 67240448;
          *(_DWORD *)int v68 = v44;
          *(_WORD *)&v68[4] = 1026;
          *(_DWORD *)&v68[6] = v45;
          LODWORD(v66) = 14;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "scan result, count, wait, %{public}d, retry, %{public}d, error",  &v67,  v66);
          __int128 v47 = (uint8_t *)v46;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)",  "%s\n",  v46);
          if (v47 != buf) {
            free(v47);
          }
        }

void sub_1009FD388(uint64_t a1, int *a2, unsigned __int8 *a3, double a4)
{
  double v49 = a4;
  switch(*a2)
  {
    case 2:
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v8 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: Device is about to go to sleep",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        LOWORD(v50) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Device is about to go to sleep",  &v50,  2);
        int v34 = (char *)v33;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v33);
        if (v34 != buf) {
          free(v34);
        }
      }

      *(_BYTE *)(a1 + 622) = 1;
      *(double *)(a1 + 1664) = a4;
      *(_BYTE *)(a1 + 1648) = 1;
      *(void *)(a1 + 152) = *(void *)(a1 + 144);
      break;
    case 3:
      if (*(_BYTE *)(a1 + 621) && *(_BYTE *)(a1 + 622))
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        __int128 v9 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Fence: Device woke; sending trigger",
            buf,
            2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          LOWORD(v50) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Device woke; sending trigger",
            &v50,
            2);
          int v46 = (char *)v45;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v45);
          if (v46 != buf) {
            free(v46);
          }
        }

        (*(void (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96LL))(a1, "wake", 1LL, a4);
      }

      sub_100B5A27C(a1 + 1312);
      *(_BYTE *)(a1 + 622) = 0;
      *(double *)(a1 + 1656) = a4;
      break;
    case 6:
      *(_DWORD *)(a1 + 444) = *((_DWORD *)a3 + 1);
      sub_100A0FF0C((double *)(a1 + 904), (int *)a3, a4);
      int v15 = *((_DWORD *)a3 + 1);
      if (*(_DWORD *)a3 != 2 || v15 == 2)
      {
        if (*(_DWORD *)a3 != 2 && v15 == 2) {
          *(double *)(a1 + 1672) = a4;
        }
      }

      else
      {
        *(double *)(a1 + 1680) = a4;
      }

      break;
    case 7:
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      double v18 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
      {
        uint64_t v19 = *(void *)a3;
        int v20 = a3[8];
        int v21 = a3[9];
        int v22 = a3[16];
        *(_DWORD *)std::stringbuf::string_type buf = 134284289;
        *(void *)&uint8_t buf[4] = v19;
        *(_WORD *)&_BYTE buf[12] = 1025;
        *(_DWORD *)&buf[14] = v20;
        __int16 v58 = 1025;
        int v59 = v21;
        __int16 v60 = 1025;
        int v61 = v22;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "Fence: Got kNotificationBattery, level, %{private}lf, charged, %{private}d, connected, %{private}d, wasConnected, %{private}d",  buf,  0x1Eu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        uint64_t v35 = *(void *)a3;
        int v36 = a3[8];
        int v37 = a3[9];
        int v38 = a3[16];
        int v50 = 134284289;
        *(void *)int v51 = v35;
        *(_WORD *)&v51[8] = 1025;
        int v52 = v36;
        __int16 v53 = 1025;
        int v54 = v37;
        __int16 v55 = 1025;
        int v56 = v38;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Got kNotificationBattery, level, %{private}lf, charged, %{private}d, connected, %{private}d, wasConnected, %{private}d",  &v50,  30);
        int v40 = (char *)v39;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v39);
        if (v40 != buf) {
          free(v40);
        }
      }

      *(_BYTE *)(a1 + 1873) = a3[9];
      if (*(_BYTE *)(a1 + 753))
      {
        if (a3[16] != a3[9])
        {
          *(double *)(a1 + 872) = a4;
          (*(void (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96LL))( a1,  "kNotificationBattery",  1LL,  a4);
          sub_1009F7318(a1, (uint64_t)"kNotificationBattery", 1, &v49);
          sub_1006DC6B0((void *)(a1 + 48), buf);
          if (*(void *)buf) {
            ++*(_DWORD *)(*(void *)buf + 172LL);
          }
          uint64_t v23 = 1704LL;
          if (!*(_BYTE *)(a1 + 1873)) {
            uint64_t v23 = 1712LL;
          }
          *(double *)(a1 + v23) = a4;
          int v24 = *(std::__shared_weak_count **)&buf[8];
          if (*(void *)&buf[8])
          {
            __int128 v25 = (unint64_t *)(*(void *)&buf[8] + 8LL);
            do
              unint64_t v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
        }
      }

      else
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v32 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "Fence: tether triggers are disabled",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          LOWORD(v50) = 0;
          LODWORD(v48) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: tether triggers are disabled",  &v50,  v48);
          int v14 = (char *)v47;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v47);
          goto LABEL_85;
        }
      }

      break;
    case 8:
      sub_1009F5044((_BYTE *)a1, *a3, a4);
      break;
    case 15:
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      __int128 v27 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        int v28 = *(unsigned __int8 *)(a1 + 729);
        int v29 = *a3;
        *(_DWORD *)std::stringbuf::string_type buf = 67109376;
        *(_DWORD *)&uint8_t buf[4] = v28;
        *(_WORD *)&uint8_t buf[8] = 1024;
        *(_DWORD *)&buf[10] = v29;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Fence: got kNotificationBatterySaverMode, wasEnabled, %d, isEnabled, %d",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v41 = *(unsigned __int8 *)(a1 + 729);
        int v42 = *a3;
        int v50 = 67109376;
        *(_DWORD *)int v51 = v41;
        *(_WORD *)&v51[4] = 1024;
        *(_DWORD *)&v51[6] = v42;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence: got kNotificationBatterySaverMode, wasEnabled, %d, isEnabled, %d",  &v50,  14);
        int v44 = (char *)v43;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v43);
        if (v44 != buf) {
          free(v44);
        }
      }

      *(_BYTE *)(a1 + 729) = *a3;
      break;
    case 16:
      char v30 = *(_BYTE *)(a1 + 612);
      char v31 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768));
      sub_100B5955C((_BYTE *)(a1 + 1312), v30, v31, *(_BYTE *)(a1 + 728), (void *)(a1 + 240));
      break;
    default:
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v10 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        int v11 = *a2;
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: unknown notification, %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v12 = *a2;
        int v50 = 67240192;
        *(_DWORD *)int v51 = v12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: unknown notification, %{public}d",  &v50,  8);
        int v14 = (char *)v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v13);
LABEL_85:
        if (v14 != buf) {
          free(v14);
        }
      }

      break;
  }

void sub_1009FDE6C(uint64_t a1, _DWORD *a2, int *a3)
{
  if (!*a2)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    double v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v6 = *a3 - 1;
      int v7 = v6 > 5 ? "Unavailable" : (&off_101867038)[v6];
      sub_1010DDBC0(__p, v7);
      int v8 = v25 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)std::stringbuf::string_type buf = 136380675;
      *(void *)&uint8_t buf[4] = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Signal environment %{private}s", buf, 0xCu);
      if (v25 < 0) {
        operator delete(__p[0]);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v16 = qword_101934878;
      sub_1009FE16C(*a3, buf);
      if (v21 >= 0) {
        uint64_t v17 = buf;
      }
      else {
        uint64_t v17 = *(_BYTE **)buf;
      }
      int v22 = 136380675;
      uint64_t v23 = v17;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v16,  0LL,  "Signal environment %{private}s",  &v22,  12);
      uint64_t v19 = v18;
      if (v21 < 0) {
        operator delete(*(void **)buf);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleSignalEnvironmentNotification(const CFAbsoluteTime, const CLSignalEnvironmentProvider _Type::Notification &, const CLSignalEnvironmentProvider_Type::NotificationData &)",  "%s\n",  v19);
    }

    int v9 = *a3 - 1;
    if (v9 <= 5 && ((0x2Fu >> v9) & 1) != 0)
    {
      int v10 = dword_101343ABC[v9];
      *(_DWORD *)(a1 + 608) = v10;
      int v11 = *(void **)(a1 + 240);
      if (v11 != (void *)(a1 + 248))
      {
        do
        {
          if (v11[33] == v11[32])
          {
            double v12 = sub_1009232CC((uint64_t)(v11 + 4));
          }

          int v13 = (void *)v11[1];
          if (v13)
          {
            do
            {
              int v14 = v13;
              int v13 = (void *)*v13;
            }

            while (v13);
          }

          else
          {
            do
            {
              int v14 = (void *)v11[2];
              BOOL v15 = *v14 == (void)v11;
              int v11 = v14;
            }

            while (!v15);
          }

          int v11 = v14;
        }

        while (v14 != (void *)(a1 + 248));
      }
    }
  }

void *sub_1009FE16C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  else {
    uint64_t v2 = (&off_101867038)[a1 - 1];
  }
  return sub_1010DDBC0(a2, v2);
}

void sub_1009FE19C(uint64_t a1, double a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)&qword_101999F10);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_101999F10))
  {
    qword_101999F08 = *(void *)&a2;
    __cxa_guard_release(&qword_101999F10);
  }

  *(double *)(a1 + 856) = a2;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v5 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    int v6 = *(_DWORD *)(a1 + 684);
    int v7 = *(_DWORD *)(a1 + 688);
    *(_DWORD *)std::stringbuf::string_type buf = 67240448;
    *(_DWORD *)__int16 v53 = v6;
    *(_WORD *)&v53[4] = 1026;
    *(_DWORD *)&v53[6] = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "loc watchdog expired, count, %{public}d, %{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v22 = *(_DWORD *)(a1 + 684);
    int v23 = *(_DWORD *)(a1 + 688);
    int v37 = 67240448;
    *(_DWORD *)int v38 = v22;
    *(_WORD *)&v38[4] = 1026;
    *(_DWORD *)&v38[6] = v23;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "loc watchdog expired, count, %{public}d, %{public}d",  &v37,  14);
    char v25 = (uint8_t *)v24;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationWatchdogExpired(const CFAbsoluteTime)",  "%s\n",  v24);
    if (v25 != buf) {
      free(v25);
    }
  }

  sub_100B5A2E8(a1 + 1312, a2 - *(double *)&qword_101999F08);
  double v8 = a2 - *(double *)(a1 + 864);
  double v9 = a2 - *(double *)(a1 + 848);
  double v35 = v9;
  double v36 = v8;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  int v10 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v11 = *(unsigned __int8 *)(a1 + 612);
    uint64_t v12 = *(void *)(a1 + 632);
    int v13 = *(_DWORD *)(a1 + 684);
    uint64_t v14 = *(void *)(a1 + 760);
    int v15 = *(_DWORD *)(a1 + 688);
    *(_DWORD *)std::stringbuf::string_type buf = 134285569;
    *(double *)__int16 v53 = a2 - *(double *)&qword_101999F08;
    *(_WORD *)&v53[8] = 1026;
    *(_DWORD *)int v54 = v11;
    *(_WORD *)&v54[4] = 2049;
    *(void *)&v54[6] = v12;
    __int16 v55 = 1026;
    int v56 = v13;
    __int16 v57 = 2049;
    double v58 = v36;
    __int16 v59 = 2049;
    uint64_t v60 = 0x4087A00000000000LL;
    __int16 v61 = 2049;
    double v62 = v9;
    __int16 v63 = 2049;
    uint64_t v64 = v14;
    __int16 v65 = 1026;
    int v66 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "Fence: onLocationWatchdogExpired, since last, %{private}.1lf, isLocationEnabled, %{public}d, last scan, %{private} .1lf, fIsWaitingForLocationCount, %{public}d, sinceLastGpsSession, %{private}.1lf, %{private}.1lf, sinceLastContTi mer, %{private}.1lf, %{private}.1lf, fScanRetryCounter, %{public}d",  buf,  0x50u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v26 = *(unsigned __int8 *)(a1 + 612);
    uint64_t v27 = *(void *)(a1 + 632);
    int v28 = *(_DWORD *)(a1 + 684);
    uint64_t v29 = *(void *)(a1 + 760);
    int v30 = *(_DWORD *)(a1 + 688);
    int v37 = 134285569;
    *(double *)int v38 = a2 - *(double *)&qword_101999F08;
    *(_WORD *)&v38[8] = 1026;
    *(_DWORD *)int v39 = v26;
    *(_WORD *)&v39[4] = 2049;
    *(void *)&v39[6] = v27;
    __int16 v40 = 1026;
    int v41 = v28;
    __int16 v42 = 2049;
    double v43 = v36;
    __int16 v44 = 2049;
    uint64_t v45 = 0x4087A00000000000LL;
    __int16 v46 = 2049;
    double v47 = v9;
    __int16 v48 = 2049;
    uint64_t v49 = v29;
    __int16 v50 = 1026;
    int v51 = v30;
    LODWORD(v33) = 80;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: onLocationWatchdogExpired, since last, %{private}.1lf, isLocationEnabled, %{public}d, last scan, %{private} .1lf, fIsWaitingForLocationCount, %{public}d, sinceLastGpsSession, %{private}.1lf, %{private}.1lf, sinceLastContTi mer, %{private}.1lf, %{private}.1lf, fScanRetryCounter, %{public}d",  &v37,  v33);
    int v32 = (uint8_t *)v31;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationWatchdogExpired(const CFAbsoluteTime)",  "%s\n",  v31);
    if (v32 != buf) {
      free(v32);
    }
  }

  if (sub_100E575B0())
  {
    sub_1002A5370(buf);
    int v37 = *(_DWORD *)(a1 + 684);
    sub_1002AC220((uint64_t)buf, "onLocationWatchdogExpired", &v37);
    sub_1002AC7B8((uint64_t)buf, "sinceLastGpsSession", &v36);
    sub_1002AC7B8((uint64_t)buf, "kSecondsBetweenGPSSessions", &unk_101343600);
    sub_1002AC7B8((uint64_t)buf, "sinceLastContTimer", &v35);
    sub_100E57614((uint64_t)buf, (uint64_t)"locationd");
    sub_1002A5590(buf);
  }

  if (*(_BYTE *)(a1 + 612) && *(_DWORD *)(a1 + 684) == 1)
  {
    uint64_t v34 = 0x403E000000000000LL;
    double v16 = sub_1009FE924(a1, a2, v36, v35);
    if (v16 > 0.0 && v16 < 30.0) {
      uint64_t v34 = *(void *)&v16;
    }
    BOOL v17 = v16 > 0.0;
    *(double *)(a1 + 696) = a2;
    (*(void (**)(void, uint64_t *))(**(void **)(a1 + 1768) + 240LL))(*(void *)(a1 + 1768), &v34);
    (*(void (**)(void, const char *))(**(void **)(a1 + 1768) + 304LL))( *(void *)(a1 + 1768),  "onLocationWatchdogExpired");
    if (v17)
    {
      *(double *)(a1 + 864) = (*(double (**)(void, void, void))(**(void **)(a1 + 1768) + 384LL))( *(void *)(a1 + 1768),  *(unsigned int *)(a1 + 684),  *(unsigned int *)(a1 + 688));
    }

    else
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v19 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134283777;
        *(double *)__int16 v53 = v36;
        *(_WORD *)&v53[8] = 2049;
        *(void *)int v54 = 0x4087A00000000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "Fence: onLocationWatchdogExpired, not starting GPS, sinceLastGpsSession, %{private}.1lf, %{private}.1lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v37 = 134283777;
        *(double *)int v38 = v36;
        *(_WORD *)&v38[8] = 2049;
        *(void *)int v39 = 0x4087A00000000000LL;
        LODWORD(v33) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: onLocationWatchdogExpired, not starting GPS, sinceLastGpsSession, %{private}.1lf, %{private}.1lf",  &v37,  v33);
        char v21 = (uint8_t *)v20;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleLocationWatchdogExpired(const CFAbsoluteTime)",  "%s\n",  v20);
        if (v21 != buf) {
          free(v21);
        }
      }
    }
  }

  else
  {
    (*(void (**)(void))(**(void **)(a1 + 1768) + 280LL))(*(void *)(a1 + 1768));
  }

  int v18 = *(_DWORD *)(a1 + 684);
  if (v18 == 1)
  {
    *(void *)(a1 + 684) = 2LL;
  }

  else if (v18 == 2 && *(_BYTE *)(a1 + 612))
  {
    *(void *)(a1 + 684) = 0LL;
    sub_1009FEC38(a1, a2);
    sub_1009FEE50((void *)a1, a2, v36);
  }

  qword_101999F08 = *(void *)&a2;
}

void sub_1009FE904( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

double sub_1009FE924(uint64_t a1, double a2, double a3, double a4)
{
  double v4 = 0.0;
  if (!dword_10198EC20
    || ((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 400LL))(*(void *)(a1 + 1768)) & 1) != 0)
  {
    return v4;
  }

  sub_1004F2598();
  if (!sub_1001B9A1C())
  {
    double v4 = 30.0;
    goto LABEL_26;
  }

  uint64_t v9 = *(void *)(a1 + 216);
  uint64_t v10 = *(void *)(a1 + 224);
  if (v10 == v9)
  {
    double v11 = 0.0;
  }

  else
  {
    double v11 = 0.0;
    uint64_t v12 = *(void *)(a1 + 224);
    uint64_t v13 = v12;
    do
    {
      double v14 = *(double *)(v13 - 16);
      v13 -= 16LL;
      if (v14 < a2 + -86400.0) {
        break;
      }
      double v11 = v11 + *(double *)(v12 - 8);
      uint64_t v12 = v13;
    }

    while (v13 != v9);
  }

  double v15 = *(double *)(a1 + 656);
  if (v15 <= 0.0 || vabdd_f64(a2, v15) >= 300.0 || v11 >= 720.0)
  {
    if (a3 < 756.0)
    {
LABEL_26:
      sub_100B5A2AC(a1 + 1312);
      double v4 = 0.0;
      goto LABEL_27;
    }

    double v18 = 720.0;
  }

  else
  {
    if (v10 == v9)
    {
      double v11 = 0.0;
    }

    else
    {
      double v11 = 0.0;
      uint64_t v16 = *(void *)(a1 + 224);
      do
      {
        double v17 = *(double *)(v16 - 16);
        v16 -= 16LL;
        if (v17 < a2 + -14400.0) {
          break;
        }
        double v11 = v11 + *(double *)(v10 - 8);
        uint64_t v10 = v16;
      }

      while (v16 != v9);
    }

    double v18 = 240.0;
  }

  double v4 = v18 - v11;
  if (v18 - v11 < 10.0) {
    goto LABEL_26;
  }
LABEL_27:
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  uint64_t v19 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134283521;
    double v26 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "Fence: allowed gps time %{private}.1lf",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v23 = 134283521;
    double v24 = v4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: allowed gps time %{private}.1lf",  &v23,  12);
    int v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval CLFenceMonitor::shouldStartGps(const CFAbsoluteTime, const CFTimeInterval, const CFTimeInterval)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  return v4;
}

void sub_1009FEC38(uint64_t a1, double a2)
{
  BOOL v4 = sub_100A0CC50((double *)(a1 + 904), a2);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v5 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v6 = *(void *)(a1 + 736);
    uint64_t v7 = *(void *)(a1 + 744);
    *(_DWORD *)std::stringbuf::string_type buf = 67240705;
    BOOL v18 = v4;
    __int16 v19 = 2049;
    uint64_t v20 = v6;
    __int16 v21 = 2049;
    uint64_t v22 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Fence: handleNoWifiApsArea, recalculated, %{public}d, fMinDistanceToFence, %{private}.1lf, fMinDistanceToFenceTime stamp, %{private}.1lf",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v8 = *(void *)(a1 + 736);
    uint64_t v9 = *(void *)(a1 + 744);
    v12[0] = 67240705;
    v12[1] = v4;
    __int16 v13 = 2049;
    uint64_t v14 = v8;
    __int16 v15 = 2049;
    uint64_t v16 = v9;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: handleNoWifiApsArea, recalculated, %{public}d, fMinDistanceToFence, %{private}.1lf, fMinDistanceToFenceTime stamp, %{private}.1lf",  v12,  28);
    double v11 = (uint8_t *)v10;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::handleNoWifiApsArea(const CFAbsoluteTime)", "%s\n", v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  if (v4) {
    sub_100B5A24C(a1 + 1312);
  }
  *(_OWORD *)(a1 + 736) = 0u;
  sub_1009F3E60(a1, a2);
}

void sub_1009FEE50(void *a1, double a2, double a3)
{
  unint64_t v3 = (void *)a1[30];
  BOOL v4 = a1 + 31;
  if (v3 != a1 + 31)
  {
    do
    {
      sub_1002718F0((char *)&__str, (__int128 *)v3 + 2);
      if ((BYTE8(v41) & 0x10) != 0)
      {
        double v8 = *((double *)v3 + 40);
        if (v8 > 0.0)
        {
          double v9 = a2 - v8;
          if (a2 - v8 > 420.0 && *((double *)v3 + 37) + v9 * -45.0 < 0.0)
          {
            sub_1009CDA54((char *)&v19);
            std::string::operator=(&v19, &__str);
            std::string::operator=(&v20, &v34);
            std::string::operator=(&v21, &v35);
            __int128 v26 = v40;
            __int128 v27 = v41;
            *(_OWORD *)int v28 = *(_OWORD *)v42;
            *(void *)&v28[13] = *(void *)&v42[13];
            __int128 v22 = v36;
            __int128 v23 = v37;
            __int128 v24 = v38;
            __int128 v25 = v39;
            std::string::operator=(&v29, &v43);
            id v10 = v30;
            id v30 = v44;

            sub_10009B244((char *)__p, (char *)__src, (uint64_t)v46, (v46 - (_BYTE *)__src) >> 4);
            double v32 = v9;
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866E28);
            }
            double v11 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 134283777;
              double v52 = v32;
              __int16 v53 = 2049;
              double v54 = a3;
              _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: watchdog fired: %{private}.1lf, %{private}.1lf",  buf,  0x16u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101866E28);
              }
              int v47 = 134283777;
              double v48 = v32;
              __int16 v49 = 2049;
              double v50 = a3;
              LODWORD(v18) = 22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: watchdog fired: %{private}.1lf, %{private}.1lf",  &v47,  v18);
              double v17 = (uint8_t *)v16;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleNoLocationForExtendedDuration(const CFAbsoluteTime, const CFTimeInterval)",  "%s\n",  v16);
              if (v17 != buf) {
                free(v17);
              }
            }

            uint64_t v12 = a1[221];
            *(_DWORD *)std::stringbuf::string_type buf = 5;
            (*(void (**)(uint64_t, uint8_t *, std::string *))(*(void *)v12 + 96LL))(v12, buf, &v19);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
          }
        }
      }

      if (__src)
      {
        __int16 v46 = __src;
        operator delete(__src);
      }

      __int16 v13 = (void *)v3[1];
      if (v13)
      {
        do
        {
          uint64_t v14 = v13;
          __int16 v13 = (void *)*v13;
        }

        while (v13);
      }

      else
      {
        do
        {
          uint64_t v14 = (void *)v3[2];
          BOOL v15 = *v14 == (void)v3;
          unint64_t v3 = v14;
        }

        while (!v15);
      }

      unint64_t v3 = v14;
    }

    while (v14 != v4);
  }

void sub_1009FF280( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1009FF2C8(uint64_t a1, double a2)
{
}

void sub_1009FF2D0(uint64_t a1, double a2)
{
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 176LL))(*(void *)(a1 + 1768)))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    BOOL v4 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "converging state, timer expired, cancelling gnss session",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      v13[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "converging state, timer expired, cancelling gnss session",  v13,  2);
      id v10 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleConvergingStateTimerFired(const CFAbsoluteTime)",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }

    (*(void (**)(void))(**(void **)(a1 + 1768) + 192LL))(*(void *)(a1 + 1768));
    sub_1006DC6B0((void *)(a1 + 48), buf);
    if (*(void *)buf) {
      sub_1006DC4B8(*(uint64_t *)buf, a2);
    }
    double v5 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        unint64_t v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    double v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "converging state, timer expired, requesting location",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      v13[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "converging state, timer expired, requesting location",  v13,  2);
      uint64_t v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleConvergingStateTimerFired(const CFAbsoluteTime)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }

    (*(void (**)(void, const char *))(**(void **)(a1 + 1768) + 304LL))( *(void *)(a1 + 1768),  "ConvergingState");
  }

void sub_1009FF624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_1009FF640(uint64_t a1, double a2)
{
  double v15 = a2;
  if (*(_BYTE *)(a1 + 612))
  {
    double v4 = *(double *)(a1 + 776);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    double v5 = a2 - v4;
    uint64_t v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *(unsigned __int8 *)(a1 + 612);
      int v8 = *(_DWORD *)(a1 + 704);
      int v9 = *(_DWORD *)(a1 + 708);
      *(_DWORD *)std::stringbuf::string_type buf = 67240961;
      int v24 = v7;
      __int16 v25 = 1026;
      int v26 = v8;
      __int16 v27 = 1026;
      int v28 = v9;
      __int16 v29 = 2049;
      double v30 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Fence: onDeAssTriggerTimer, isLocationEnabled, %{public}d, count, %{public}d, %{public}d, sinceLastTrigger, %{private}.1lf",  buf,  0x1Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v10 = *(unsigned __int8 *)(a1 + 612);
      int v11 = *(_DWORD *)(a1 + 704);
      int v12 = *(_DWORD *)(a1 + 708);
      v16[0] = 67240961;
      v16[1] = v10;
      __int16 v17 = 1026;
      int v18 = v11;
      __int16 v19 = 1026;
      int v20 = v12;
      __int16 v21 = 2049;
      double v22 = v5;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: onDeAssTriggerTimer, isLocationEnabled, %{public}d, count, %{public}d, %{public}d, sinceLastTrigger, %{private}.1lf",  v16,  30);
      uint64_t v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleDeAssTriggerTimer(const CFAbsoluteTime)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    if (v5 >= 20.0) {
      (*(void (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96LL))( a1,  "handleDeAssTriggerTimer",  1LL,  a2);
    }
    sub_1009F7318(a1, (uint64_t)"onDeAssTriggerTimer", 1, &v15);
    *(double *)(a1 + 1752) = a2;
    ++*(_DWORD *)(a1 + 704);
  }

void sub_1009FF8DC(uint64_t a1, double a2)
{
  double v15 = a2;
  if (*(_BYTE *)(a1 + 612))
  {
    double v4 = *(double *)(a1 + 776);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    double v5 = a2 - v4;
    uint64_t v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *(unsigned __int8 *)(a1 + 612);
      int v8 = *(_DWORD *)(a1 + 704);
      int v9 = *(_DWORD *)(a1 + 708);
      *(_DWORD *)std::stringbuf::string_type buf = 67240961;
      int v24 = v7;
      __int16 v25 = 1026;
      int v26 = v8;
      __int16 v27 = 1026;
      int v28 = v9;
      __int16 v29 = 2049;
      double v30 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Fence: onDelayedTriggerTimer, isLocationEnabled, %{public}d, count, %{public}d, %{public}d, sinceLastTrigger, %{private}.1lf",  buf,  0x1Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v10 = *(unsigned __int8 *)(a1 + 612);
      int v11 = *(_DWORD *)(a1 + 704);
      int v12 = *(_DWORD *)(a1 + 708);
      v16[0] = 67240961;
      v16[1] = v10;
      __int16 v17 = 1026;
      int v18 = v11;
      __int16 v19 = 1026;
      int v20 = v12;
      __int16 v21 = 2049;
      double v22 = v5;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: onDelayedTriggerTimer, isLocationEnabled, %{public}d, count, %{public}d, %{public}d, sinceLastTrigger, %{private}.1lf",  v16,  30);
      uint64_t v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleDelayedTriggerTimer(const CFAbsoluteTime)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    if (v5 >= 20.0) {
      (*(void (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96LL))( a1,  "handleDelayedTriggerTimer",  1LL,  a2);
    }
    ++*(_DWORD *)(a1 + 704);
    sub_1009F7318(a1, (uint64_t)"onDelayedTriggerTimer", 0, &v15);
    *(double *)(a1 + 1752) = a2;
  }

void sub_1009FFB78(uint64_t a1, double a2)
{
  double v11 = a2;
  double v4 = *(double *)(a1 + 776);
  *(double *)(a1 + 848) = a2;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v5 = a2 - v4;
  uint64_t v6 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v7 = *(unsigned __int8 *)(a1 + 612);
    *(_DWORD *)std::stringbuf::string_type buf = 67240449;
    int v16 = v7;
    __int16 v17 = 2049;
    double v18 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Fence: onContinousTrackingTimer, isLocationEnabled, %{public}d, sinceLastTrigger, %{private}.1lf",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v8 = *(unsigned __int8 *)(a1 + 612);
    v12[0] = 67240449;
    v12[1] = v8;
    __int16 v13 = 2049;
    double v14 = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: onContinousTrackingTimer, isLocationEnabled, %{public}d, sinceLastTrigger, %{private}.1lf",  v12,  18);
    int v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleContinousTrackingTimer(const CFAbsoluteTime)",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  if (*(_BYTE *)(a1 + 612))
  {
    if (v5 >= 20.0) {
      (*(void (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96LL))( a1,  "handleContinousTrackingTimer",  1LL,  a2);
    }
    sub_1009FFDC8(a1, a2);
    *(double *)(a1 + 1752) = a2;
  }

void sub_1009FFDC8(uint64_t a1, double a2)
{
  if (*(_BYTE *)(a1 + 752))
  {
    if (*(_BYTE *)(a1 + 612) && (!*(_BYTE *)(a1 + 730) || *(_BYTE *)(a1 + 731)))
    {
      if (sub_1009F4C34(a1))
      {
        if (*(_BYTE *)(a1 + 623))
        {
          double v4 = vabdd_f64(a2, *(double *)(a1 + 744));
          double v5 = *(double *)(a1 + 736) - v4 * 45.0;
          if (v4 >= 1800.0) {
            double v5 = 0.0;
          }
          if (v5 > 0.0) {
            double v6 = v5;
          }
          else {
            double v6 = 0.0;
          }
          double v7 = fmin(fmax(v6 / 45.0 * 0.5, *(double *)(a1 + 720)), 3600.0);
          double v26 = v7;
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          int v8 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v9 = *(void *)(a1 + 736);
            *(_DWORD *)std::stringbuf::string_type buf = 134284033;
            *(double *)uint64_t v33 = v7;
            *(_WORD *)&v33[8] = 2049;
            uint64_t v34 = v9;
            __int16 v35 = 2049;
            double v36 = v6;
            _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "scheduleNextTrackingWake, next wake in, %{private}.1lf, seconds, fMinDistanceToFence, %{private}.1lf, minD istanceToFence, %{private}.1lf",  buf,  0x20u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866E28);
            }
            uint64_t v22 = *(void *)(a1 + 736);
            int v27 = 134284033;
            *(double *)int v28 = v7;
            *(_WORD *)&v28[8] = 2049;
            uint64_t v29 = v22;
            __int16 v30 = 2049;
            double v31 = v6;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "scheduleNextTrackingWake, next wake in, %{private}.1lf, seconds, fMinDistanceToFence, %{private}.1lf, minD istanceToFence, %{private}.1lf",  &v27,  32);
            int v24 = (uint8_t *)v23;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::scheduleNextTrackingWake(const CFAbsoluteTime)",  "%s\n",  v23);
            if (v24 != buf) {
              free(v24);
            }
          }

          double v10 = vabdd_f64(v7 + a2, *(double *)(a1 + 624));
          if (v10 >= 30.0)
          {
            *(double *)(a1 + 624) = (*(double (**)(void, double *))(**(void **)(a1 + 1768) + 152LL))( *(void *)(a1 + 1768),  &v26);
            sub_100B5A29C(a1 + 1312);
            return;
          }

          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          double v11 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 134283521;
            *(double *)uint64_t v33 = v10;
            _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "scheduleNextTrackingWake, intervalSinceLastDate is too low, %{private}.1lf",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866E28);
            }
            int v27 = 134283521;
            *(double *)int v28 = v10;
            LODWORD(v25) = 12;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "scheduleNextTrackingWake, intervalSinceLastDate is too low, %{private}.1lf",  &v27,  v25);
LABEL_58:
            __int16 v21 = (uint8_t *)v12;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::scheduleNextTrackingWake(const CFAbsoluteTime)",  "%s\n",  v12);
            if (v21 != buf) {
              free(v21);
            }
          }
        }

        else
        {
          *(double *)(a1 + 624) = (*(double (**)(void))(**(void **)(a1 + 1768) + 144LL))(*(void *)(a1 + 1768));
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          int v20 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)std::stringbuf::string_type buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "Fence: scheduleNextTrackingWake, continous tracking is disabled",  buf,  2u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866E28);
            }
            LOWORD(v27) = 0;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: scheduleNextTrackingWake, continous tracking is disabled",  &v27,  2);
            goto LABEL_58;
          }
        }
      }

      else
      {
        *(double *)(a1 + 624) = (*(double (**)(void))(**(void **)(a1 + 1768) + 144LL))(*(void *)(a1 + 1768));
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        __int16 v19 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "Fence: scheduleNextTrackingWake, all fences are low power ones",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          LOWORD(v27) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: scheduleNextTrackingWake, all fences are low power ones",  &v27,  2);
          goto LABEL_58;
        }
      }
    }

    else
    {
      *(double *)(a1 + 624) = (*(double (**)(void))(**(void **)(a1 + 1768) + 144LL))(*(void *)(a1 + 1768));
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      double v14 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        int v15 = *(unsigned __int8 *)(a1 + 728);
        int v16 = *(unsigned __int8 *)(a1 + 730);
        *(_DWORD *)std::stringbuf::string_type buf = 67240448;
        *(_DWORD *)uint64_t v33 = v15;
        *(_WORD *)&v33[4] = 1026;
        *(_DWORD *)&v33[6] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "Fence: scheduleNextTrackingWake, location services not enabled, airplane, %{public}d, cConnected, %{public}d",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v17 = *(unsigned __int8 *)(a1 + 728);
        int v18 = *(unsigned __int8 *)(a1 + 730);
        int v27 = 67240448;
        *(_DWORD *)int v28 = v17;
        *(_WORD *)&v28[4] = 1026;
        *(_DWORD *)&v28[6] = v18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: scheduleNextTrackingWake, location services not enabled, airplane, %{public}d, cConnected, %{public}d",  &v27,  14);
        goto LABEL_58;
      }
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    __int16 v13 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "Fence: scheduleNextTrackingWake - disabled",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      LOWORD(v27) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: scheduleNextTrackingWake - disabled",  &v27,  2);
      goto LABEL_58;
    }
  }

uint64_t sub_100A00584(uint64_t a1, uint64_t a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    else {
      uint64_t v5 = *(void *)a2;
    }
    else {
      uint64_t v6 = *(void *)(a2 + 24);
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136380931;
    uint64_t v17 = v5;
    __int16 v18 = 2081;
    uint64_t v19 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: Got monitoring data changed for %{private}s/%{private}s",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    else {
      uint64_t v8 = *(void *)a2;
    }
    else {
      uint64_t v9 = *(void *)(a2 + 24);
    }
    int v12 = 136380931;
    uint64_t v13 = v8;
    __int16 v14 = 2081;
    uint64_t v15 = v9;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Got monitoring data changed for %{private}s/%{private}s",  &v12,  22);
    double v11 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleMonitoringDataChanged(const CLFenceManager_Type::Fence &)",  "%s\n",  v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  return sub_100A0CA40((void *)(a1 + 904), (uint64_t *)a2);
}

uint64_t sub_100A0079C(uint64_t result)
{
  int v1 = *(void **)(result + 240);
  uint64_t v2 = (void *)(result + 248);
  if (v1 != (void *)(result + 248))
  {
    uint64_t v3 = result;
    do
    {
      if ((v1[24] & 0x80) != 0) {
        uint64_t result = (*(uint64_t (**)(void, void *, void))(**(void **)(v3 + 1768) + 416LL))( *(void *)(v3 + 1768),  v1 + 4,  0LL);
      }
      double v4 = (void *)v1[1];
      if (v4)
      {
        do
        {
          uint64_t v5 = v4;
          double v4 = (void *)*v4;
        }

        while (v4);
      }

      else
      {
        do
        {
          uint64_t v5 = (void *)v1[2];
          BOOL v6 = *v5 == (void)v1;
          int v1 = v5;
        }

        while (!v6);
      }

      int v1 = v5;
    }

    while (v5 != v2);
  }

  return result;
}

void sub_100A00828(uint64_t a1, double a2)
{
  double v4 = a2;
  (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a1 + 96LL))(a1, "activityAlarmHandler", 1LL);
  *(double *)(a1 + 1736) = a2;
}

void sub_100A008A0(uint64_t a1, double a2)
{
  *(_DWORD *)(a1 + 604) = 2;
  uint64_t v3 = a1 + 448;
  if (*(double *)(a1 + 468) > 0.0)
  {
    uint64_t v5 = *(void **)(a1 + 240);
    BOOL v6 = (void *)(a1 + 248);
    if (v5 != (void *)(a1 + 248))
    {
      uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
      do
      {
        if (*((_BYTE *)v5 + 285))
        {
          if (!*(_BYTE *)(a1 + 730)) {
            goto LABEL_11;
          }
          if (v5[33] == v5[32])
          {
            if ((_os_feature_enabled_impl("CoreLocation", "cl_fence_handoff") & 1) != 0) {
              goto LABEL_43;
            }
            uint64_t v8 = 64LL;
          }

          else
          {
            uint64_t v8 = 8LL;
          }

          if ((v5[24] & v8) != 0)
          {
LABEL_11:
            uint64_t v9 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
            {
              else {
                size_t v10 = v5[5];
              }
              sub_1000392EC((uint64_t)&v36, v10 + 1);
              double v11 = p_vtable;
              if ((v36.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                int v12 = &v36;
              }
              else {
                int v12 = (std::string *)v36.__r_.__value_.__r.__words[0];
              }
              if (v10)
              {
                else {
                  uint64_t v13 = (const void *)v5[4];
                }
                memmove(v12, v13, v10);
              }

              *(_WORD *)((char *)&v12->__r_.__value_.__l.__data_ + v10) = 47;
              int v14 = *((char *)v5 + 79);
              if (v14 >= 0) {
                uint64_t v15 = (const std::string::value_type *)(v5 + 7);
              }
              else {
                uint64_t v15 = (const std::string::value_type *)v5[7];
              }
              if (v14 >= 0) {
                std::string::size_type v16 = *((unsigned __int8 *)v5 + 79);
              }
              else {
                std::string::size_type v16 = v5[8];
              }
              uint64_t v17 = std::string::append(&v36, v15, v16);
              __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
              *(void *)&v38[16] = v17->__r_.__value_.__l.__cap_;
              *(_OWORD *)__int128 v38 = v18;
              v17->__r_.__value_.__l.__size_ = 0LL;
              v17->__r_.__value_.__l.__cap_ = 0LL;
              v17->__r_.__value_.__r.__words[0] = 0LL;
              uint64_t p_vtable = v11;
              uint64_t v19 = v38;
              if (v38[23] < 0) {
                uint64_t v19 = *(_BYTE **)v38;
              }
              int v20 = *((unsigned __int8 *)v5 + 284);
              int v21 = *((unsigned __int8 *)v5 + 285);
              LODWORD(v36.__r_.__value_.__l.__data_) = 136381187;
              *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 4) = (std::string::size_type)v19;
              WORD2(v36.__r_.__value_.__r.__words[1]) = 1026;
              *(_DWORD *)((char *)&v36.__r_.__value_.__r.__words[1] + 6) = v20;
              WORD1(v36.__r_.__value_.__r.__words[2]) = 1026;
              HIDWORD(v36.__r_.__value_.__r.__words[2]) = v21;
              _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "Fence: dispatch, handleSettled, fence, %{private}s, monitoringStarted, %{public}d, monitoringSettled, %{public}d",  (uint8_t *)&v36,  0x18u);
              if ((v38[23] & 0x80000000) != 0) {
                operator delete(*(void **)v38);
              }
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(&v36, 0x65CuLL);
              uint64_t v28 = qword_101934878;
              sub_10065EF44((const void **)v5 + 4, &__p);
              p_p = &__p;
              if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
              }
              int v30 = *((unsigned __int8 *)v5 + 284);
              int v31 = *((unsigned __int8 *)v5 + 285);
              *(_DWORD *)__int128 v38 = 136381187;
              *(void *)&v38[4] = p_p;
              *(_WORD *)&v38[12] = 1026;
              *(_DWORD *)&v38[14] = v30;
              *(_WORD *)&v38[18] = 1026;
              *(_DWORD *)&v38[20] = v31;
              LODWORD(v34) = 24;
              _os_log_send_and_compose_impl( 2LL,  0LL,  &v36,  1628LL,  &_mh_execute_header,  v28,  2LL,  "Fence: dispatch, handleSettled, fence, %{private}s, monitoringStarted, %{public}d, monitoringSettled, %{public}d",  v38,  v34);
              uint64_t v33 = v32;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::handleSettled(const CFAbsoluteTime)",  "%s\n",  (const char *)v33);
              if (v33 != &v36) {
                free(v33);
              }
            }

            sub_100869DC8(&v36);
            sub_100A00CFC(a1, v3, (uint64_t)&v36, (unsigned __int8 *)v5 + 32, a2);
            uint64_t v22 = v37;
            if (v37)
            {
              p_shared_owners = (unint64_t *)&v37->__shared_owners_;
              do
                unint64_t v24 = __ldaxr(p_shared_owners);
              while (__stlxr(v24 - 1, p_shared_owners));
              if (!v24)
              {
                ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
                std::__shared_weak_count::__release_weak(v22);
              }
            }
          }
        }

void sub_100A00CC4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A00CFC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, double a5)
{
  uint64_t v10 = sub_100700B84(a1 + 240, a4);
  if (a1 + 248 != v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = v10 + 32;
    uint64_t v13 = v10 + 280;
    if (*(_BYTE *)(a1 + 730))
    {
      if (*(void *)(v10 + 264) == *(void *)(v10 + 256))
      {
        if ((_os_feature_enabled_impl("CoreLocation", "cl_fence_handoff") & 1) != 0)
        {
LABEL_29:
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          double v32 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)std::stringbuf::string_type buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_ERROR,  "Processing location when not supposed to",  buf,  2u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101866E28);
            }
            LOWORD(v35) = 0;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  16LL,  "Processing location when not supposed to",  &v35,  2);
            uint64_t v34 = (uint8_t *)v33;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceMonitor::handleLocationFence(const CFAbsoluteTime, const CLDaemonLocation &, const CLDaemonLoc ationPrivate &, const CLFenceManager_Type::Fence &)",  "%s\n",  v33);
            if (v34 != buf) {
              free(v34);
            }
          }

          goto LABEL_34;
        }

        uint64_t v14 = 64LL;
      }

      else
      {
        uint64_t v14 = 8LL;
      }

      if ((*(void *)(v11 + 192) & v14) == 0) {
        goto LABEL_29;
      }
    }

void sub_100A01144(uint64_t a1, int a2)
{
  if (a2)
  {
    *(_BYTE *)(a1 + 613) = 1;
    sub_100A01180((void *)a1);
    sub_100A0079C(a1);
    sub_1009F2FB4(a1);
  }

void sub_100A01180(void *a1)
{
  if (a1[32])
  {
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
    unint64_t v10 = 0LL;
    uint64_t v2 = (void *)a1[30];
    if (v2 != a1 + 31)
    {
      uint64_t v3 = 0LL;
      do
      {
        double v4 = (__int128 *)(v2 + 4);
        if ((unint64_t)v3 >= v10)
        {
          uint64_t v3 = (char *)sub_100669E18(&v8, v4);
        }

        else
        {
          sub_1002718F0(v3, v4);
          v3 += 248;
        }

        uint64_t v9 = v3;
        uint64_t v5 = (void *)v2[1];
        if (v5)
        {
          do
          {
            BOOL v6 = v5;
            uint64_t v5 = (void *)*v5;
          }

          while (v5);
        }

        else
        {
          do
          {
            BOOL v6 = (void *)v2[2];
            BOOL v7 = *v6 == (void)v2;
            uint64_t v2 = v6;
          }

          while (!v7);
        }

        uint64_t v2 = v6;
      }

      while (v6 != a1 + 31);
    }

    sub_1003D57C8(a1[228], &v8);
    uint64_t v11 = (void **)&v8;
    sub_1006684D8(&v11);
  }

void sub_100A01260( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_1006684D8(&a12);
  _Unwind_Resume(a1);
}

double sub_100A0128C(uint64_t a1)
{
  uint64_t v2 = a1 + 1312;
  char v3 = *(_BYTE *)(a1 + 612);
  char v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768));
  *(void *)&double result = sub_100B59B6C(v2, v3, v4, *(_BYTE *)(a1 + 728), (void *)(a1 + 240)).n128_u64[0];
  return result;
}

uint64_t sub_100A012DC(uint64_t a1, double a2)
{
  BOOL v6 = *(double **)(a1 + 216);
  char v4 = *(double **)(a1 + 224);
  uint64_t v5 = (void **)(a1 + 216);
  while (v6 != v4)
  {
    if (vabdd_f64(a2, *v6) <= 86400.0)
    {
      v6 += 2;
    }

    else
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      BOOL v7 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        double v8 = *v6;
        *(_DWORD *)std::stringbuf::string_type buf = 134349056;
        double v36 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Fence: discarding old gps session, %{public}.1lf",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        double v11 = *v6;
        int v33 = 134349056;
        double v34 = v11;
        LODWORD(v32) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: discarding old gps session, %{public}.1lf",  &v33,  v32);
        uint64_t v13 = (uint8_t *)v12;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::stopGps(const CFAbsoluteTime)", "%s\n", v12);
        if (v13 != buf) {
          free(v13);
        }
      }

      uint64_t v9 = *(char **)(a1 + 224);
      int64_t v10 = v9 - (char *)(v6 + 2);
      char v4 = (double *)((char *)v6 + v10);
      *(void *)(a1 + 224) = (char *)v6 + v10;
    }
  }

  if ((*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 400LL))(*(void *)(a1 + 1768)))
  {
    double v15 = *(double *)(a1 + 864);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    double v16 = a2 - v15;
    uint64_t v17 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      double v36 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "Fence: adding gps session, %{public}.1lf",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v33 = 134349056;
      double v34 = v16;
      LODWORD(v32) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: adding gps session, %{public}.1lf",  &v33,  v32);
      int v31 = (uint8_t *)v30;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::stopGps(const CFAbsoluteTime)", "%s\n", v30);
      if (v31 != buf) {
        free(v31);
      }
    }

    unint64_t v18 = *(void *)(a1 + 232);
    uint64_t v19 = *(double **)(a1 + 224);
    if ((unint64_t)v19 >= v18)
    {
      uint64_t v21 = (double *)*v5;
      uint64_t v22 = ((char *)v19 - (_BYTE *)*v5) >> 4;
      unint64_t v23 = v22 + 1;
      uint64_t v24 = v18 - (void)v21;
      if (v24 >> 3 > v23) {
        unint64_t v23 = v24 >> 3;
      }
      else {
        unint64_t v25 = v23;
      }
      if (v25)
      {
        double v26 = (char *)sub_100037038(a1 + 232, v25);
        uint64_t v21 = *(double **)(a1 + 216);
        uint64_t v19 = *(double **)(a1 + 224);
      }

      else
      {
        double v26 = 0LL;
      }

      BOOL v27 = (double *)&v26[16 * v22];
      uint64_t v28 = &v26[16 * v25];
      *BOOL v27 = a2;
      v27[1] = v16;
      int v20 = v27 + 2;
      if (v19 != v21)
      {
        do
        {
          *((_OWORD *)v27 - 1) = *((_OWORD *)v19 - 1);
          v27 -= 2;
          v19 -= 2;
        }

        while (v19 != v21);
        uint64_t v21 = (double *)*v5;
      }

      *(void *)(a1 + 216) = v27;
      *(void *)(a1 + 224) = v20;
      *(void *)(a1 + 232) = v28;
      if (v21) {
        operator delete(v21);
      }
    }

    else
    {
      double *v19 = a2;
      v19[1] = v16;
      int v20 = v19 + 2;
    }

    *(void *)(a1 + 224) = v20;
    v14.n128_f64[0] = sub_100B5A2BC(a1 + 1312, v16);
  }

  return (*(uint64_t (**)(void, __n128))(**(void **)(a1 + 1768) + 392LL))(*(void *)(a1 + 1768), v14);
}

uint64_t sub_100A01758(uint64_t a1)
{
  return sub_100B5A2D8(a1 + 1312);
}

uint64_t sub_100A01760(uint64_t a1)
{
  return sub_1000EFC64(a1 + 1312);
}

uint64_t sub_100A01768(uint64_t a1)
{
  return sub_100B5A28C(a1 + 1312);
}

uint64_t sub_100A01770(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768));
}

uint64_t sub_100A01780(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 24LL))(*(void *)(a1 + 1768));
}

uint64_t sub_100A01790(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 32LL))(*(void *)(a1 + 1768));
}

uint64_t sub_100A017A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 40LL))(*(void *)(a1 + 1768));
}

void sub_100A017B0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 1768);
  memset(v6, 0, sizeof(v6));
  sub_1002DE3C8(v6, *a2, a2[1], 0x2E8BA2E8BA2E8BA3LL * ((a2[1] - *a2) >> 3));
  memset(v5, 0, sizeof(v5));
  sub_1002DE3C8(v5, *a3, a3[1], 0x2E8BA2E8BA2E8BA3LL * ((a3[1] - *a3) >> 3));
  (*(void (**)(uint64_t, void *, void *))(*(void *)v4 + 48LL))(v4, v6, v5);
  BOOL v7 = (void **)v5;
  sub_100023498(&v7);
  BOOL v7 = (void **)v6;
  sub_100023498(&v7);
}

void sub_100A0186C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  *(void *)(v14 - 40) = v13;
  sub_100023498((void ***)(v14 - 40));
  *(void *)(v14 - 40) = &a13;
  sub_100023498((void ***)(v14 - 40));
  _Unwind_Resume(a1);
}

uint64_t sub_100A0189C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 56LL))(*(void *)(a1 + 1768));
}

uint64_t sub_100A018AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 64LL))(*(void *)(a1 + 1768));
}

uint64_t sub_100A018BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 72LL))(*(void *)(a1 + 1768));
}

uint64_t sub_100A018CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 80LL))(*(void *)(a1 + 1768));
}

uint64_t sub_100A018DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 88LL))(*(void *)(a1 + 1768));
}

void sub_100A018EC(uint64_t a1, uint64_t a2, char a3, double a4)
{
  *(_BYTE *)(a1 + 640) |= a3;
  *(double *)(a1 + 776) = a4;
  if (sub_1009F4C34(a1))
  {
    sub_1006DC6B0((void *)(a1 + 48), &v10);
    if (v10) {
      ++*(_DWORD *)(v10 + 116);
    }
    (*(void (**)(void, uint64_t, double))(**(void **)(a1 + 1768) + 112LL))( *(void *)(a1 + 1768),  a2,  *(double *)(a1 + 768));
    *(double *)(a1 + 1744) = a4;
    BOOL v7 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        unint64_t v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }

void sub_100A019AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100A019C0(uint64_t a1, double a2)
{
  double v5 = a2;
  sub_100B5A25C(a1 + 1312);
  *(double *)(a1 + 1720) = a2;
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96LL))( a1,  "epnoEntry",  1LL,  v5);
}

uint64_t sub_100A01A48(uint64_t a1, double a2)
{
  double v9 = a2;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  uint64_t v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: setting EPNO exit trigger time", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    __int16 v8 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: setting EPNO exit trigger time",  &v8,  2);
    BOOL v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitor::triggerEpnoExitReceived(const CFAbsoluteTime)",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  *(double *)(a1 + 656) = a2;
  sub_100B5A26C(a1 + 1312);
  *(double *)(a1 + 1728) = a2;
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96LL))( a1,  "epnoExit",  1LL,  v9);
}

void sub_100A01C40(uint64_t a1, double a2)
{
  double v10 = a2;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  char v3 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Fence: Got kNotificationDelayTriggerReceived from WIFI",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    __int16 v9 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Got kNotificationDelayTriggerReceived from WIFI",  &v9,  2);
    __int16 v8 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitor::delayTriggerReceived(const CFAbsoluteTime)",  "%s\n",  v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  sub_100A01E38(a1, &v10);
  sub_1006DC6B0((void *)(a1 + 48), buf);
  if (*(void *)buf) {
    ++*(_DWORD *)(*(void *)buf + 168LL);
  }
  uint64_t v4 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

void sub_100A01E38(uint64_t a1, double *a2)
{
  if (*(_BYTE *)(a1 + 620))
  {
    double v3 = vabdd_f64(*a2, *(double *)(a1 + 744));
    double v4 = *(double *)(a1 + 736) + v3 * -45.0;
    if (v3 >= 855.0) {
      double v4 = 0.0;
    }
    if (v4 > 0.0) {
      double v5 = v4;
    }
    else {
      double v5 = 0.0;
    }
    uint64_t v6 = *(void *)(a1 + 256);
    BOOL v7 = v5 + -13500.0 > 0.0 || v6 == 0;
    if (!v7 && (!*(_BYTE *)(a1 + 730) || *(_BYTE *)(a1 + 731)) && *(_BYTE *)(a1 + 612))
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      __int16 v8 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v9 = *(void *)(a1 + 712);
        int v10 = *(_DWORD *)(a1 + 704);
        int v11 = *(_DWORD *)(a1 + 708);
        int v12 = *(unsigned __int8 *)(a1 + 728);
        int v13 = *(unsigned __int8 *)(a1 + 730);
        *(_DWORD *)std::stringbuf::string_type buf = 134284545;
        uint64_t v35 = v9;
        __int16 v36 = 1026;
        int v37 = v10;
        __int16 v38 = 1026;
        int v39 = v11;
        __int16 v40 = 1026;
        int v41 = v12;
        __int16 v42 = 1026;
        LODWORD(v43) = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: scheduleNextDeassociationDelayedTrigger in, %{private}.1lf, count, %{public}d, %{public}d, airplane, %{ public}d, cConnected, %{public}d",  buf,  0x24u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        uint64_t v24 = *(void *)(a1 + 712);
        int v25 = *(_DWORD *)(a1 + 704);
        int v26 = *(_DWORD *)(a1 + 708);
        int v27 = *(unsigned __int8 *)(a1 + 728);
        int v28 = *(unsigned __int8 *)(a1 + 730);
        *(_DWORD *)int v31 = 134284545;
        *(void *)&v31[4] = v24;
        *(_WORD *)&v31[12] = 1026;
        *(_DWORD *)&v31[14] = v25;
        *(_WORD *)&v31[18] = 1026;
        *(_DWORD *)&v31[20] = v26;
        LOWORD(v32) = 1026;
        *(_DWORD *)((char *)&v32 + 2) = v27;
        HIWORD(v32) = 1026;
        LODWORD(v33) = v28;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: scheduleNextDeassociationDelayedTrigger in, %{private}.1lf, count, %{public}d, %{public}d, airplane, %{ public}d, cConnected, %{public}d",  v31,  36);
        int v30 = (uint8_t *)v29;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::scheduleNextDeassociationDelayedTrigger(const CFAbsoluteTime &)",  "%s\n",  v29);
        if (v30 != buf) {
          free(v30);
        }
      }

      if (!*(_BYTE *)(a1 + 730) || *(_BYTE *)(a1 + 731)) {
        (*(void (**)(void, uint64_t))(**(void **)(a1 + 1768) + 296LL))(*(void *)(a1 + 1768), a1 + 712);
      }
      return;
    }

    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v14 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v15 = *(unsigned __int8 *)(a1 + 728);
      int v16 = *(unsigned __int8 *)(a1 + 730);
      int v17 = *(unsigned __int8 *)(a1 + 612);
      *(_DWORD *)std::stringbuf::string_type buf = 134350081;
      uint64_t v35 = v6;
      __int16 v36 = 1026;
      int v37 = v15;
      __int16 v38 = 1026;
      int v39 = v16;
      __int16 v40 = 1026;
      int v41 = v17;
      __int16 v42 = 2049;
      double v43 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "Fence: ignore de association trigger, numOfFences, %{public}zu, airplane, %{public}d, cConnected, %{public}d, lo cation services, %{public}d, minDistanceToFence, %{private}.1lf",  buf,  0x28u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v18 = *(unsigned __int8 *)(a1 + 728);
      int v19 = *(unsigned __int8 *)(a1 + 730);
      int v20 = *(unsigned __int8 *)(a1 + 612);
      *(_DWORD *)int v31 = 134350081;
      *(void *)&v31[4] = v6;
      *(_WORD *)&v31[12] = 1026;
      *(_DWORD *)&v31[14] = v18;
      *(_WORD *)&v31[18] = 1026;
      *(_DWORD *)&v31[20] = v19;
      LOWORD(v32) = 1026;
      *(_DWORD *)((char *)&v32 + 2) = v20;
      HIWORD(v32) = 2049;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: ignore de association trigger, numOfFences, %{public}zu, airplane, %{public}d, cConnected, %{public}d, lo cation services, %{public}d, minDistanceToFence, %{private}.1lf",  v31,  40,  *(_OWORD *)v31,  *(void *)&v31[16],  v32,  *(void *)&v5);
LABEL_39:
      unint64_t v23 = (uint8_t *)v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::scheduleNextDeassociationDelayedTrigger(const CFAbsoluteTime &)",  "%s\n",  v21);
      if (v23 != buf) {
        free(v23);
      }
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v22 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "Fence: avoid scheduleNextDeassociationDelayedTrigger",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      *(_WORD *)int v31 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: avoid scheduleNextDeassociationDelayedTrigger",  v31,  2,  *(_OWORD *)v31,  *(void *)&v31[16],  v32,  v33);
      goto LABEL_39;
    }
  }

uint64_t sub_100A02378(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 288LL))(*(void *)(a1 + 1768));
}

void sub_100A02388(uint64_t a1, double a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: Got kNotificationReCheckContinuousEngagement",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    v7[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Got kNotificationReCheckContinuousEngagement",  v7,  2);
    uint64_t v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitor::reCheckContinuousEngagment(const CFAbsoluteTime)",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  sub_1009F3E60(a1, a2);
}

void sub_100A02530(uint64_t a1, uint64_t a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: Got kNotificationFenceDownloadRequest",  (uint8_t *)&buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    LOWORD(v9[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Got kNotificationFenceDownloadRequest",  v9,  2);
    __int16 v8 = (std::string *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitor::fenceDownloadRequest(const CLFenceManager_Type::Fence &)",  "%s\n",  v7);
    if (v8 != &buf) {
      free(v8);
    }
  }

  sub_1009CDA54((char *)&buf);
  std::string::operator=(&buf, (const std::string *)a2);
  std::string::operator=(&v11, (const std::string *)(a2 + 24));
  std::string::operator=(&v12, (const std::string *)(a2 + 48));
  __int128 v17 = *(_OWORD *)(a2 + 136);
  __int128 v18 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)int v19 = *(_OWORD *)(a2 + 168);
  *(void *)&v19[13] = *(void *)(a2 + 181);
  __int128 v13 = *(_OWORD *)(a2 + 72);
  __int128 v14 = *(_OWORD *)(a2 + 88);
  __int128 v15 = *(_OWORD *)(a2 + 104);
  __int128 v16 = *(_OWORD *)(a2 + 120);
  std::string::operator=(&v20, (const std::string *)(a2 + 192));
  id v5 = v21;
  id v21 = *(id *)(a2 + 216);

  if (&buf != (std::string *)a2) {
    sub_10009B244( (char *)__p,  *(char **)(a2 + 224),  *(void *)(a2 + 232),  (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  uint64_t v6 = *(void *)(a1 + 1768);
  v9[0] = 4;
  (*(void (**)(uint64_t, _DWORD *, std::string *))(*(void *)v6 + 96LL))(v6, v9, &buf);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_100A027F4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A02824(uint64_t a1, uint64_t a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 1824);
    int v6 = *(unsigned __int8 *)(a1 + 613);
    *(_DWORD *)std::string buf = 134284035;
    *(void *)&uint8_t buf[4] = v5;
    __int16 v19 = 1026;
    *(_DWORD *)std::string v20 = v6;
    *(_WORD *)&v20[4] = 2082;
    *(void *)&v20[6] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: createStateDatabase, fStateDatabase, %{private}p, fDeviceUnlockedSinceBoot, %{public}d, reason, %{public}s",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v10 = *(void *)(a1 + 1824);
    int v11 = *(unsigned __int8 *)(a1 + 613);
    *(_DWORD *)std::string __p = 134284035;
    *(void *)&__p[4] = v10;
    *(_WORD *)&__p[12] = 1026;
    *(_DWORD *)&__p[14] = v11;
    *(_WORD *)&__p[18] = 2082;
    *(void *)&__p[20] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: createStateDatabase, fStateDatabase, %{private}p, fDeviceUnlockedSinceBoot, %{public}d, reason, %{public}s",  __p,  28);
    __int128 v13 = (char *)v12;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::createStateDatabase(const char *)", "%s\n", v12);
    if (v13 != buf) {
      free(v13);
    }
  }

  if (!*(void *)(a1 + 1824) && *(_BYTE *)(a1 + 613))
  {
    if (*(_DWORD *)(a1 + 1816) == 1)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      BOOL v7 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Fence: createStateDatabase in memory",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        *(_WORD *)std::string __p = 0;
        LODWORD(v16) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: createStateDatabase in memory",  __p,  v16);
        __int128 v15 = (char *)v14;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::createStateDatabase(const char *)", "%s\n", v14);
        if (v15 != buf) {
          free(v15);
        }
      }

      sub_1010DDBC0(__p, "");
      *(void *)std::string buf = 3LL;
      *(_WORD *)&uint8_t buf[8] = 0;
      if ((__p[23] & 0x80000000) != 0)
      {
        sub_1010DD48C(&v20[2], *(void **)__p, *(unint64_t *)&__p[8]);
        uint64_t v22 = 0LL;
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
      }

      else
      {
        *(_OWORD *)&v20[2] = *(_OWORD *)__p;
        uint64_t v21 = *(void *)&__p[16];
        uint64_t v22 = 0LL;
      }

      uint64_t v9 = operator new(0x88uLL);
      sub_1003D4260((uint64_t)v9, (uint64_t)buf);
      sub_100527E2C((uint64_t *)(a1 + 1824), (uint64_t)v9);
      if (SHIBYTE(v21) < 0) {
        operator delete(*(void **)&v20[2]);
      }
    }

    else
    {
      __int16 v8 = operator new(0x88uLL);
      sub_1003D41F0((uint64_t)v8);
      sub_100527E2C((uint64_t *)(a1 + 1824), (uint64_t)v8);
    }

    if (*(_BYTE *)(a1 + 614))
    {
      sub_1003D444C(*(void *)(a1 + 1824));
      *(_BYTE *)(a1 + 614) = 0;
    }
  }

void sub_100A02C24( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, int a22, __int16 a23, char a24, char a25)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A02C78(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  uint64_t v10 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    else {
      size_t v11 = *(void *)(a2 + 8);
    }
    std::string v12 = &v166;
    sub_1000392EC((uint64_t)&v166, v11 + 1);
    if ((v166.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string v12 = (std::string *)v166.__r_.__value_.__r.__words[0];
    }
    if (v11)
    {
      else {
        __int128 v13 = *(const void **)a2;
      }
      memmove(v12, v13, v11);
    }

    *(_WORD *)((char *)&v12->__r_.__value_.__l.__data_ + v11) = 47;
    int v14 = *(char *)(a2 + 47);
    if (v14 >= 0) {
      __int128 v15 = (const std::string::value_type *)(a2 + 24);
    }
    else {
      __int128 v15 = *(const std::string::value_type **)(a2 + 24);
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      std::string::size_type v16 = *(void *)(a2 + 32);
    }
    __int128 v17 = std::string::append(&v166, v15, v16);
    __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0LL;
    v17->__r_.__value_.__l.__cap_ = 0LL;
    v17->__r_.__value_.__r.__words[0] = 0LL;
    std::string::size_type size = (std::string *)(char)__p.__r_.__value_.__s.__size_;
    sub_10083FA1C(a3, &v166);
    p_p = &__p;
    if ((v166.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string v20 = &v166;
    }
    else {
      std::string v20 = (std::string *)v166.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v20;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "Fence: startMonitoringNow, fence, %{private}s, status, %{private}s",  (uint8_t *)&buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v166, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v109 = qword_101934878;
    sub_10065EF44((const void **)a2, &__p);
    std::string::size_type size = (std::string *)(char)__p.__r_.__value_.__s.__size_;
    std::string::size_type v110 = __p.__r_.__value_.__r.__words[0];
    sub_10083FA1C(a3, &buf);
    char v111 = &__p;
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v162 = 136380931;
    char v163 = v111;
    __int16 v164 = 2081;
    uint64_t v165 = p_buf;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &v166,  1628LL,  &_mh_execute_header,  v109,  2LL,  "Fence: startMonitoringNow, fence, %{private}s, status, %{private}s",  &v162,  22);
    uint64_t v10 = v113;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMon itorLogic::FenceMonitoringStatus &)",  "%s\n",  (const char *)v10);
    if (v10 != (os_log_s *)&v166) {
      free(v10);
    }
  }

  if (*(_DWORD *)(a2 + 184) == -1)
  {
    sub_101258AA4();
    __break(1u);
    goto LABEL_254;
  }

  uint64_t v10 = (os_log_s *)(a1 + 240);
  std::string::size_type size = &v166;
  uint64_t v5 = a1 + 248;
  if (a1 + 248 != sub_100700B84(a1 + 240, (unsigned __int8 *)a2))
  {
    if (qword_101934870 == -1)
    {
LABEL_35:
      uint64_t v21 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        else {
          size_t v22 = *(void *)(a2 + 8);
        }
        unint64_t v23 = &v166;
        sub_1000392EC((uint64_t)&v166, v22 + 1);
        if ((v166.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          unint64_t v23 = (std::string *)v166.__r_.__value_.__r.__words[0];
        }
        if (v22)
        {
          else {
            uint64_t v24 = *(const void **)a2;
          }
          memmove(v23, v24, v22);
        }

        *(_WORD *)((char *)&v23->__r_.__value_.__l.__data_ + v22) = 47;
        int v25 = *(char *)(a2 + 47);
        if (v25 >= 0) {
          int v26 = (const std::string::value_type *)(a2 + 24);
        }
        else {
          int v26 = *(const std::string::value_type **)(a2 + 24);
        }
        if (v25 >= 0) {
          std::string::size_type v27 = *(unsigned __int8 *)(a2 + 47);
        }
        else {
          std::string::size_type v27 = *(void *)(a2 + 32);
        }
        int v28 = std::string::append(&v166, v26, v27);
        __int128 v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__l.__cap_ = v28->__r_.__value_.__l.__cap_;
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v29;
        v28->__r_.__value_.__l.__size_ = 0LL;
        v28->__r_.__value_.__l.__cap_ = 0LL;
        v28->__r_.__value_.__r.__words[0] = 0LL;
        int v30 = &__p;
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          int v30 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        }
        LODWORD(v166.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)size->__r_.__value_.__r.__words + 4) = (std::string::size_type)v30;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "Fence: startMonitoringNow, fence, %{private}s, is already in fMonitoredFences",  (uint8_t *)&v166,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&v166, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        uint64_t v31 = qword_101934878;
        sub_10065EF44((const void **)a2, &__p);
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v32 = &__p;
        }
        else {
          uint64_t v32 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v32;
        LODWORD(v146) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &v166,  1628LL,  &_mh_execute_header,  v31,  2LL,  "Fence: startMonitoringNow, fence, %{private}s, is already in fMonitoredFences",  &buf,  v146);
        double v34 = v33;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenc eMonitorLogic::FenceMonitoringStatus &)",  "%s\n",  (const char *)v34);
        if (v34 != &v166) {
          free(v34);
        }
      }

      goto LABEL_74;
    }

LABEL_254:
    dispatch_once(&qword_101934870, &stru_101866E28);
    goto LABEL_35;
  }

  v166.__r_.__value_.__r.__words[0] = a2;
  uint64_t v35 = sub_100A0B1A4((uint64_t **)(a1 + 240), (unsigned __int8 *)a2, (uint64_t)&unk_1012CF090, (__int128 **)&v166);
  __int128 v36 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v35 + 35) = *(_OWORD *)a3;
  *(_OWORD *)(v35 + 37) = v36;
  __int128 v37 = *(_OWORD *)(a3 + 32);
  __int128 v38 = *(_OWORD *)(a3 + 48);
  __int128 v39 = *(_OWORD *)(a3 + 64);
  v35[45] = *(void *)(a3 + 80);
  *(_OWORD *)(v35 + 41) = v38;
  *(_OWORD *)(v35 + 43) = v39;
  *(_OWORD *)(v35 + 39) = v37;
  if (*(void *)(a2 + 232) == *(void *)(a2 + 224))
  {
    if ((_os_feature_enabled_impl("CoreLocation", "cl_fence_handoff") & 1) != 0) {
      goto LABEL_74;
    }
    uint64_t v40 = 64LL;
  }

  else
  {
    uint64_t v40 = 8LL;
  }

  if ((*(void *)(a2 + 160) & v40) != 0)
  {
    *(_BYTE *)(a1 + 731) = 1;
    sub_100700BFC((uint64_t **)(a1 + 264), (unsigned __int8 *)a2, (__int128 *)a2);
  }

          *(_DWORD *)(a1 + 96) = v49;
          goto LABEL_238;
        case 8u:
          *(_DWORD *)(a1 + 152) |= 0x10u;
          uint64_t v52 = *((void *)this + 1);
          __int16 v53 = *((void *)this + 2);
          double v54 = *(void *)this;
          if (v52 <= 0xFFFFFFFFFFFFFFF5LL && v52 + 10 <= v53)
          {
            __int16 v55 = 0;
            int v56 = 0;
            __int16 v57 = 0LL;
            do
            {
              double v58 = v52 + 1;
              *((void *)this + 1) = v52 + 1;
              __int16 v59 = *(_BYTE *)(v54 + v52);
              v57 |= (unint64_t)(v59 & 0x7F) << v55;
              if ((v59 & 0x80) == 0) {
                goto LABEL_258;
              }
              v55 += 7;
              uint64_t v52 = v58;
              int v14 = v56++ > 8;
            }

            while (!v14);
LABEL_186:
            __int16 v57 = 0LL;
            goto LABEL_258;
          }

          int v143 = 0;
          int v144 = 0;
          __int16 v57 = 0LL;
          if (v53 <= v52) {
            __int16 v53 = *((void *)this + 1);
          }
          while (2)
          {
            if (v53 == v52)
            {
              __int16 v57 = 0LL;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              uint64_t v145 = v52 + 1;
              uint64_t v146 = *(_BYTE *)(v54 + v52);
              *((void *)this + 1) = v145;
              v57 |= (unint64_t)(v146 & 0x7F) << v143;
              if (v146 < 0)
              {
                v143 += 7;
                uint64_t v52 = v145;
                int v14 = v144++ > 8;
                if (v14) {
                  goto LABEL_186;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                __int16 v57 = 0LL;
              }
            }

            break;
          }

void sub_100A048FC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, int a40, __int16 a41, char a42, char a43)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A04958(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a2 + 160) & 0x80) != 0)
  {
    (*(void (**)(void))(**(void **)(a1 + 1768) + 416LL))(*(void *)(a1 + 1768));
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v2 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_FAULT,  "#ignificantRegion: Attempt to start loi monitoring",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      v5[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "#ignificantRegion: Attempt to start loi monitoring",  v5,  2);
      double v4 = (uint8_t *)v3;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceMonitor::startMonitoringLoiIfNeeded(const CLFenceManager_Type::Fence &)",  "%s\n",  v3);
      if (v4 != buf) {
        free(v4);
      }
    }
  }

void sub_100A04B20(uint64_t a1, const void **a2, uint64_t a3, _DWORD *a4, int a5, double a6)
{
  int v11 = sub_100A06258(a1, (uint64_t)a2, a4, a3);
  sub_100A05614(a1, a2, a4, v11, a5, a6);
}

void sub_100A04B80(uint64_t **a1, unsigned __int8 *a2, double a3)
{
  if ((a2[160] & 0x80) == 0)
  {
    sub_101258C0C();
    __break(1u);
LABEL_32:
    dispatch_once(&qword_101934870, &stru_101866E28);
    goto LABEL_4;
  }

  double v4 = a2;
  double v7 = a3;
  double v3 = a1;
  sub_100922994((char *)v17);
  int v5 = sub_100A071AC((uint64_t)v3, v4, (uint64_t)v17);
  if (!v5) {
    goto LABEL_18;
  }
  uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934870 != -1) {
    goto LABEL_32;
  }
LABEL_4:
  __int16 v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = v19;
    if (v20 < 0) {
      uint64_t v9 = (void **)v19[0];
    }
    if ((v4[23] & 0x80u) == 0) {
      uint64_t v10 = (uint64_t *)v4;
    }
    else {
      uint64_t v10 = *(uint64_t **)v4;
    }
    int v11 = v4 + 24;
    if ((v4[47] & 0x80u) != 0) {
      int v11 = (void *)*((void *)v4 + 3);
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136381187;
    *(void *)&uint8_t buf[4] = v9;
    __int16 v35 = 2081;
    __int128 v36 = v10;
    __int16 v37 = 2081;
    std::stringbuf::string_type __p = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: helper fence stop, %{private}s for [%{private}s/%{private}s",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    std::string v12 = v19;
    if (v20 < 0) {
      std::string v12 = (void **)v19[0];
    }
    if ((v4[23] & 0x80u) == 0) {
      __int128 v13 = (uint64_t *)v4;
    }
    else {
      __int128 v13 = *(uint64_t **)v4;
    }
    int v14 = (uint64_t *)(v4 + 24);
    if ((v4[47] & 0x80u) != 0) {
      int v14 = (uint64_t *)*((void *)v4 + 3);
    }
    int v28 = 136381187;
    __int128 v29 = v12;
    __int16 v30 = 2081;
    uint64_t v31 = v13;
    __int16 v32 = 2081;
    uint64_t v33 = v14;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion: helper fence stop, %{private}s for [%{private}s/%{private}s",  &v28,  32);
    std::string::size_type v16 = (char *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::stopMonitoringLoiIfNeeded(const CFAbsoluteTime, const CLFenceManager_Type::Fence &)",  "%s\n",  v15);
    if (v16 != buf) {
      free(v16);
    }
  }

  sub_100A04F24((uint64_t)v3, (uint64_t)v17, 1, v7);
  sub_100158FAC(buf, (__int128 *)v19, (__int128 *)v17);
  sub_100A0B944(v3 + 99, (const void **)buf);
  if (v39 < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v37) < 0) {
    operator delete(*(void **)buf);
  }
LABEL_18:
  sub_100A0B99C(v3 + 102, v4);
  if (v5) {
    (*(void (**)(uint64_t *))(*v3[221] + 440))(v3[221]);
  }
  if (v26)
  {
    std::string::size_type v27 = v26;
    operator delete(v26);
  }

  if (v24 < 0) {
    operator delete(v23);
  }
  if (v22 < 0) {
    operator delete(v21);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
}

void sub_100A04EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_100A04F24(uint64_t a1, uint64_t a2, int a3, double a4)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  __int16 v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    else {
      std::string::size_type v9 = *(void *)a2;
    }
    else {
      std::string::size_type v10 = *(void *)(a2 + 24);
    }
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446467;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v9;
    WORD2(buf[0].__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 6) = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Fence:Stop stopMonitoringNow, fence, %{public}s/%{private}s",  (uint8_t *)buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    else {
      std::string::size_type v30 = *(void *)a2;
    }
    else {
      std::string::size_type v31 = *(void *)(a2 + 24);
    }
    LODWORD(__p.__r_.__value_.__l.__data_) = 136446467;
    *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = v30;
    WORD2(__p.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v31;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence:Stop stopMonitoringNow, fence, %{public}s/%{private}s",  &__p,  22);
    uint64_t v33 = (std::string *)v32;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::stopMonitoringAFenceNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, BOOL)",  "%s\n",  v32);
    if (v33 != buf) {
      free(v33);
    }
  }

  uint64_t v11 = sub_100700B84(a1 + 240, (unsigned __int8 *)a2);
  if (a1 + 248 != v11)
  {
    sub_100B5A3C4(a1 + 1312);
    sub_100A05614(a1, (const void **)(v11 + 32), (_DWORD *)(v11 + 280), 0, 0, a4);
    if (*(void *)(v11 + 264) == *(void *)(v11 + 256))
    {
      if ((_os_feature_enabled_impl("CoreLocation", "cl_fence_handoff") & 1) != 0) {
        goto LABEL_55;
      }
      uint64_t v12 = 64LL;
    }

    else
    {
      uint64_t v12 = 8LL;
    }

    if ((*(void *)(v11 + 192) & v12) != 0)
    {
      std::string::size_type v27 = (uint64_t *)sub_100700B84(a1 + 264, (unsigned __int8 *)a2);
      if ((uint64_t *)(a1 + 272) == v27)
      {
        sub_101258D74();
        __break(1u);
        goto LABEL_77;
      }

      sub_1000087E8((uint64_t **)(a1 + 264), v27);
      sub_100700638((uint64_t)(v27 + 4));
      operator delete(v27);
    }

void sub_100A055F0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A05614(uint64_t a1, const void **a2, _DWORD *a3, int a4, int a5, double a6)
{
  int v11 = sub_100A06830(a1);
  char v12 = v11;
  int v13 = v11 & a4;
  uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  __int128 v15 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    else {
      size_t v16 = (size_t)a2[1];
    }
    int v17 = &v86;
    sub_1000392EC((uint64_t)&v86, v16 + 1);
    if ((v86.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      int v17 = (std::string *)v86.__r_.__value_.__r.__words[0];
    }
    if (v16)
    {
      else {
        char v18 = *a2;
      }
      memmove(v17, v18, v16);
    }

    *(_WORD *)((char *)&v17->__r_.__value_.__l.__data_ + v16) = 47;
    int v19 = *((char *)a2 + 47);
    if (v19 >= 0) {
      char v20 = (const std::string::value_type *)(a2 + 3);
    }
    else {
      char v20 = (const std::string::value_type *)a2[3];
    }
    if (v19 >= 0) {
      std::string::size_type v21 = *((unsigned __int8 *)a2 + 47);
    }
    else {
      std::string::size_type v21 = (std::string::size_type)a2[4];
    }
    char v22 = std::string::append(&v86, v20, v21);
    __int128 v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v85.__r_.__value_.__l.__cap_ = v22->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0LL;
    v22->__r_.__value_.__l.__cap_ = 0LL;
    v22->__r_.__value_.__r.__words[0] = 0LL;
    int v24 = a5;
    if ((v85.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      id v25 = &v85;
    }
    else {
      id v25 = (std::string *)v85.__r_.__value_.__r.__words[0];
    }
    sub_10083F904(v13, &v86);
    int size = (char)v86.__r_.__value_.__s.__size_;
    std::string::size_type v27 = v86.__r_.__value_.__r.__words[0];
    sub_10083F904(v12, &__p);
    uint64_t v28 = &v86;
    if (size < 0) {
      uint64_t v28 = (std::string *)v27;
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136381443;
    *(void *)int v90 = v25;
    *(_WORD *)&v90[8] = 2081;
    *(void *)int v91 = v28;
    *(_WORD *)&v91[8] = 2081;
    *(void *)int v92 = p_p;
    *(_WORD *)&v92[8] = 1025;
    a5 = v24;
    int v93 = v24;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "adjustTechLevel, fence, %{private}s, newOptions, %{private}s, availableTech, %{private}s, statusChanged, %{private}d",  buf,  0x26u);
    uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v54 = qword_101934878;
    sub_10065EF44(a2, &v85);
    int v55 = a5;
    if ((v85.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v56 = &v85;
    }
    else {
      int v56 = (std::string *)v85.__r_.__value_.__r.__words[0];
    }
    sub_10083F904(v13, &__p);
    int v57 = (char)__p.__r_.__value_.__s.__size_;
    std::string::size_type v58 = __p.__r_.__value_.__r.__words[0];
    sub_10083F904(v12, &v83);
    __int16 v59 = &__p;
    if (v57 < 0) {
      __int16 v59 = (std::stringbuf::string_type *)v58;
    }
    if ((v83.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v60 = &v83;
    }
    else {
      uint64_t v60 = (std::stringbuf::string_type *)v83.__r_.__value_.__r.__words[0];
    }
    LODWORD(v86.__r_.__value_.__l.__data_) = 136381443;
    *(std::string::size_type *)((char *)v86.__r_.__value_.__r.__words + 4) = (std::string::size_type)v56;
    WORD2(v86.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v86.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v59;
    HIWORD(v86.__r_.__value_.__r.__words[2]) = 2081;
    *(void *)int v87 = v60;
    *(_WORD *)&v87[8] = 1025;
    int v88 = v55;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v54,  2LL,  "adjustTechLevel, fence, %{private}s, newOptions, %{private}s, availableTech, %{private}s, statusChanged, %{private}d",  &v86,  38);
    uint64_t v62 = v61;
    uint64_t p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::adjustTechLevel(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic ::FenceMonitoringStatus &, MonitoringTechOptions, BOOL)",  "%s\n",  v62);
    LOBYTE(a5) = v55;
  }

  int v30 = a3[2] & ~v13;
  if (v30)
  {
    std::string::size_type v31 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v32 = a3[2];
      else {
        uint64_t v33 = (void *)*a2;
      }
      else {
        double v34 = (const void **)a2[3];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 67175427;
      *(_DWORD *)int v90 = v30;
      *(_WORD *)&v90[4] = 1025;
      *(_DWORD *)&v90[6] = v32;
      *(_WORD *)int v91 = 2082;
      *(void *)&v91[2] = v33;
      *(_WORD *)int v92 = 2081;
      *(void *)&v92[2] = v34;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEBUG,  "Stopping tech 0x%{private}x (active is 0x%{private}x) for %{public}s/%{private}s",  buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      int v71 = a3[2];
      else {
        uint64_t v72 = (void *)*a2;
      }
      else {
        __int16 v73 = (const void **)a2[3];
      }
      LODWORD(v86.__r_.__value_.__l.__data_) = 67175427;
      HIDWORD(v86.__r_.__value_.__r.__words[0]) = v30;
      LOWORD(v86.__r_.__value_.__r.__words[1]) = 1025;
      *(_DWORD *)((char *)&v86.__r_.__value_.__r.__words[1] + 2) = v71;
      HIWORD(v86.__r_.__value_.__r.__words[1]) = 2082;
      v86.__r_.__value_.__l.__cap_ = (std::string::size_type)v72;
      *(_WORD *)int v87 = 2081;
      *(void *)&v87[2] = v73;
      LODWORD(v81) = 34;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Stopping tech 0x%{private}x (active is 0x%{private}x) for %{public}s/%{private}s",  &v86,  v81);
      int v75 = (uint8_t *)v74;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::adjustTechLevel(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, CLFenceMonitorLog ic::FenceMonitoringStatus &, MonitoringTechOptions, BOOL)",  "%s\n",  v74);
      if (v75 != buf) {
        free(v75);
      }
    }

    if ((v30 & 4) != 0)
    {
      sub_100A0C7C0(a1 + 904, (unsigned __int8 *)a2, a6);
      sub_100B5A24C(a1 + 1312);
    }

    if ((v30 & 0x10) != 0) {
      sub_100A06A08(a1, (unsigned __int8 *)a2);
    }
  }

  else {
    unsigned int v35 = v13 & ~a3[2];
  }
  if (v35)
  {
    uint64_t v36 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v37 = a3[2];
      else {
        __int128 v38 = (void *)*a2;
      }
      else {
        char v39 = (const void **)a2[3];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 67175427;
      *(_DWORD *)int v90 = v35;
      *(_WORD *)&v90[4] = 1025;
      *(_DWORD *)&v90[6] = v37;
      *(_WORD *)int v91 = 2082;
      *(void *)&v91[2] = v38;
      *(_WORD *)int v92 = 2081;
      *(void *)&v92[2] = v39;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "Starting tech 0x%{private}x (active is 0x%{private}x) for %{public}s/%{private}s",  buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      int v76 = a3[2];
      else {
        std::string::size_type v77 = (void *)*a2;
      }
      else {
        uint64_t v78 = (const void **)a2[3];
      }
      LODWORD(v86.__r_.__value_.__l.__data_) = 67175427;
      HIDWORD(v86.__r_.__value_.__r.__words[0]) = v35;
      LOWORD(v86.__r_.__value_.__r.__words[1]) = 1025;
      *(_DWORD *)((char *)&v86.__r_.__value_.__r.__words[1] + 2) = v76;
      HIWORD(v86.__r_.__value_.__r.__words[1]) = 2082;
      v86.__r_.__value_.__l.__cap_ = (std::string::size_type)v77;
      *(_WORD *)int v87 = 2081;
      *(void *)&v87[2] = v78;
      LODWORD(v81) = 34;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Starting tech 0x%{private}x (active is 0x%{private}x) for %{public}s/%{private}s",  &v86,  v81);
      double v80 = (uint8_t *)v79;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::adjustTechLevel(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, CLFenceMonitorLog ic::FenceMonitoringStatus &, MonitoringTechOptions, BOOL)",  "%s\n",  v79);
      if (v80 != buf) {
        free(v80);
      }
    }

    if ((v35 & 4) != 0)
    {
      sub_100A0C31C(a1 + 904, (uint64_t *)a2, *a3 != 0, a6);
      sub_100B5A24C(a1 + 1312);
    }

    if (v35 >= 0x10) {
      sub_100A06AB8(a1, (unsigned __int8 *)a2);
    }
  }

  uint64_t v40 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    else {
      size_t v41 = (size_t)a2[1];
    }
    __int16 v42 = &v86;
    sub_1000392EC((uint64_t)&v86, v41 + 1);
    if ((v86.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      __int16 v42 = (std::string *)v86.__r_.__value_.__r.__words[0];
    }
    if (v41)
    {
      else {
        size_t v43 = *a2;
      }
      memmove(v42, v43, v41);
    }

    *(_WORD *)((char *)&v42->__r_.__value_.__l.__data_ + v41) = 47;
    int v44 = *((char *)a2 + 47);
    if (v44 >= 0) {
      uint64_t v45 = (const std::string::value_type *)(a2 + 3);
    }
    else {
      uint64_t v45 = (const std::string::value_type *)a2[3];
    }
    if (v44 >= 0) {
      std::string::size_type v46 = *((unsigned __int8 *)a2 + 47);
    }
    else {
      std::string::size_type v46 = (std::string::size_type)a2[4];
    }
    __int16 v47 = std::string::append(&v86, v45, v46);
    __int128 v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
    v85.__r_.__value_.__l.__cap_ = v47->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v48;
    v47->__r_.__value_.__l.__size_ = 0LL;
    v47->__r_.__value_.__l.__cap_ = 0LL;
    v47->__r_.__value_.__r.__words[0] = 0LL;
    if ((v85.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v49 = &v85;
    }
    else {
      __int16 v49 = (std::string *)v85.__r_.__value_.__r.__words[0];
    }
    sub_10083F904(v13, &v86);
    int v50 = (char)v86.__r_.__value_.__s.__size_;
    std::string::size_type v51 = v86.__r_.__value_.__r.__words[0];
    sub_10083FA1C((uint64_t)a3, &__p);
    uint64_t v52 = &v86;
    if (v50 < 0) {
      uint64_t v52 = (std::string *)v51;
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v53 = &__p;
    }
    else {
      __int16 v53 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136381187;
    *(void *)int v90 = v49;
    *(_WORD *)&v90[8] = 2081;
    *(void *)int v91 = v52;
    *(_WORD *)&v91[8] = 2081;
    *(void *)int v92 = v53;
    _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "Fence: fence, %{private}s, newTech, %{private}s, status, %{private}s",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    uint64_t v63 = qword_101934878;
    sub_10065EF44(a2, &v85);
    if ((v85.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v64 = &v85;
    }
    else {
      int v64 = (std::string *)v85.__r_.__value_.__r.__words[0];
    }
    sub_10083F904(v13, &__p);
    int v65 = (char)__p.__r_.__value_.__s.__size_;
    std::string::size_type v66 = __p.__r_.__value_.__r.__words[0];
    sub_10083FA1C((uint64_t)a3, &v83);
    int v67 = &__p;
    if (v65 < 0) {
      int v67 = (std::stringbuf::string_type *)v66;
    }
    if ((v83.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v68 = &v83;
    }
    else {
      int v68 = (std::stringbuf::string_type *)v83.__r_.__value_.__r.__words[0];
    }
    LODWORD(v86.__r_.__value_.__l.__data_) = 136381187;
    *(std::string::size_type *)((char *)v86.__r_.__value_.__r.__words + 4) = (std::string::size_type)v64;
    WORD2(v86.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v86.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v67;
    HIWORD(v86.__r_.__value_.__r.__words[2]) = 2081;
    *(void *)int v87 = v68;
    LODWORD(v81) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v63,  2LL,  "Fence: fence, %{private}s, newTech, %{private}s, status, %{private}s",  &v86,  v81);
    double v70 = v69;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::adjustTechLevel(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic ::FenceMonitoringStatus &, MonitoringTechOptions, BOOL)",  "%s\n",  v70);
  }

  a3[2] = v13;
}

void sub_100A061DC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, int a31, __int16 a32, char a33, char a34)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100A06258(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  char v8 = sub_100A06830(a1);
  char v9 = (*(_BYTE *)(a2 + 160) & 0x80) != 0 && a1 + 824 != sub_100700B84(a1 + 816, (unsigned __int8 *)a2);
  v57[0] = &off_101866E78;
  v57[1] = a1;
  std::string::size_type v58 = v57;
  v55[0] = &off_101866F08;
  v55[1] = a1;
  int v56 = v55;
  v53[0] = &off_101866F88;
  uint64_t v54 = v53;
  uint64_t v10 = sub_10083FD48(a2, a3, a4, v8, (uint64_t)v57, (uint64_t)v55, (uint64_t)v53, v9);
  int v11 = v54;
  if (v54 == v53)
  {
    uint64_t v12 = 4LL;
    int v11 = v53;
  }

  else
  {
    if (!v54) {
      goto LABEL_9;
    }
    uint64_t v12 = 5LL;
  }

  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_9:
  int v13 = v56;
  if (v56 == v55)
  {
    uint64_t v14 = 4LL;
    int v13 = v55;
  }

  else
  {
    if (!v56) {
      goto LABEL_14;
    }
    uint64_t v14 = 5LL;
  }

  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_14:
  __int128 v15 = v58;
  if (v58 == v57)
  {
    uint64_t v16 = 4LL;
    __int128 v15 = v57;
  }

  else
  {
    if (!v58) {
      goto LABEL_19;
    }
    uint64_t v16 = 5LL;
  }

  (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_19:
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  int v17 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    else {
      size_t v18 = *(void *)(a2 + 8);
    }
    int v19 = &v41;
    sub_1000392EC((uint64_t)&v41, v18 + 1);
    if ((v41.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      int v19 = (std::string *)v41.__r_.__value_.__r.__words[0];
    }
    if (v18)
    {
      else {
        char v20 = *(const void **)a2;
      }
      memmove(v19, v20, v18);
    }

    *(_WORD *)((char *)&v19->__r_.__value_.__l.__data_ + v18) = 47;
    int v21 = *(char *)(a2 + 47);
    if (v21 >= 0) {
      char v22 = (const std::string::value_type *)(a2 + 24);
    }
    else {
      char v22 = *(const std::string::value_type **)(a2 + 24);
    }
    if (v21 >= 0) {
      std::string::size_type v23 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      std::string::size_type v23 = *(void *)(a2 + 32);
    }
    int v24 = std::string::append(&v41, v22, v23);
    __int128 v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__l.__cap_ = v24->__r_.__value_.__l.__cap_;
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0LL;
    v24->__r_.__value_.__l.__cap_ = 0LL;
    v24->__r_.__value_.__r.__words[0] = 0LL;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    sub_10083F904(v10, &v41);
    BOOL v27 = 0;
    if ((v41.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v28 = &v41;
    }
    else {
      uint64_t v28 = (std::string *)v41.__r_.__value_.__r.__words[0];
    }
    double v29 = *(double *)(a2 + 96);
    if (v29 <= 400.0 && !*(_BYTE *)(a2 + 188) && *(_DWORD *)(a2 + 180) != 2) {
      BOOL v27 = *(void *)(a2 + 232) == *(void *)(a2 + 224) && (*(_BYTE *)(a2 + 160) & 0x20) == 0;
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136381443;
    std::string::size_type v46 = p_p;
    __int16 v47 = 2081;
    __int128 v48 = v28;
    __int16 v49 = 1025;
    BOOL v50 = v27;
    __int16 v51 = 1025;
    BOOL v52 = v29 >= 7000.0;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "fence, %{private}s, requiredTech, %{private}s, fine, %{private}d, large, %{private}d",  buf,  0x22u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v31 = qword_101934878;
    sub_10065EF44((const void **)a2, &__p);
    int size = (char)__p.__r_.__value_.__s.__size_;
    uint64_t v33 = (std::string *)__p.__r_.__value_.__r.__words[0];
    double v34 = &v39;
    sub_10083F904(v10, &v39);
    if (size >= 0) {
      uint64_t v33 = &__p;
    }
    if ((v39.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      double v34 = (std::string *)v39.__r_.__value_.__r.__words[0];
    }
    BOOL v35 = sub_100270760(a2);
    BOOL v36 = *(double *)(a2 + 96) >= 7000.0;
    LODWORD(v41.__r_.__value_.__l.__data_) = 136381443;
    *(std::string::size_type *)((char *)v41.__r_.__value_.__r.__words + 4) = (std::string::size_type)v33;
    WORD2(v41.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v41.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v34;
    HIWORD(v41.__r_.__value_.__r.__words[2]) = 1025;
    BOOL v42 = v35;
    __int16 v43 = 1025;
    BOOL v44 = v36;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v31,  2LL,  "fence, %{private}s, requiredTech, %{private}s, fine, %{private}d, large, %{private}d",  &v41,  34);
    __int128 v38 = v37;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "MonitoringTechOptions CLFenceMonitor::getRequiredTechLevel(const CLFenceManager_Type::Fence &, const CLFenceMonito rLogic::FenceMonitoringStatus &, const CLDaemonLocation &)",  "%s\n",  v38);
  }

  return v10;
}

void sub_100A06760( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100A06830(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 612))
  {
    sub_1004F2598();
    int v2 = sub_1004F64FC();
    if ((~v2 & 0x10001) != 0) {
      int v3 = 8;
    }
    else {
      int v3 = 11;
    }
    if ((v2 & 2) != 0)
    {
    }

    return v3 | 0x10u;
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Fence: location services is disabled, no tech available",  buf,  2u);
    }

    uint64_t result = sub_1002921D0(115, 2);
    if ((_DWORD)result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      v8[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: location services is disabled, no tech available",  v8,  2);
      double v7 = (uint8_t *)v6;
      sub_10029211C("Generic", 1LL, 0, 2LL, "MonitoringTechOptions CLFenceMonitor::getAvailableTech()", "%s\n", v6);
      if (v7 != buf) {
        free(v7);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100A06A08(uint64_t a1, unsigned __int8 *a2)
{
  int v3 = (void *)(a1 + 240);
  uint64_t v4 = sub_100700B84(a1 + 240, a2);
  int v5 = (void *)(a1 + 248);
  if (a1 + 248 != v4) {
    *(_BYTE *)(v4 + 285) = 0;
  }
  int v6 = (void *)*v3;
  if ((void *)*v3 == v5)
  {
    char v7 = 0;
  }

  else
  {
    char v7 = 0;
    do
    {
      BOOL v8 = *((_BYTE *)v6 + 285) != 0;
      char v9 = (void *)v6[1];
      if (v9)
      {
        do
        {
          uint64_t v10 = v9;
          char v9 = (void *)*v9;
        }

        while (v9);
      }

      else
      {
        do
        {
          uint64_t v10 = (void *)v6[2];
          BOOL v11 = *v10 == (void)v6;
          int v6 = v10;
        }

        while (!v11);
      }

      v7 |= v8;
      int v6 = v10;
    }

    while (v10 != v5);
  }

  BOOL v12 = v5 != (void *)v4;
  sub_100A077E8(a1, v7 & 1);
  return v12;
}

BOOL sub_100A06AB8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = sub_100700B84(a1 + 240, a2);
  if (a1 + 248 != v3)
  {
    sub_100A077E8(a1, 1);
    *(_BYTE *)(v3 + 285) = 1;
  }

  return a1 + 248 != v3;
}

uint64_t sub_100A06B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a2 + 180) != 2) {
    return 1LL;
  }
  double v5 = *(double *)(a3 + 4);
  double v6 = *(double *)(a3 + 12);
  uint64_t result = (uint64_t)+[GEOLocationShifter isLocationShiftRequiredForCoordinate:]( &OBJC_CLASS___GEOLocationShifter,  "isLocationShiftRequiredForCoordinate:",  v5,  v6);
  if (!(_DWORD)result) {
    return result;
  }
  if (*(_DWORD *)(a3 + 132) != 2
    && (objc_msgSend( *(id *)(a1 + 1832),  "shiftCoordinate:accuracy:shiftedCoordinate:shiftedAccuracy:",  &v9,  &v8,  v5,  v6,  *(double *)(a3 + 20)) & 1) != 0)
  {
    *(_OWORD *)(a3 + 4) = v9;
    *(void *)(a3 + 20) = v8;
    *(_DWORD *)(a3 + 132) = 2;
    return 1LL;
  }

  return 0LL;
}

uint64_t sub_100A06BBC(uint64_t a1, uint64_t a2, double a3)
{
  if (!*(_BYTE *)(a1 + 615) && sub_100840F14(a2))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    double v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Fence: handleLocation, Ignoring cell or LAC position as per defaults",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    LOWORD(v22[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: handleLocation, Ignoring cell or LAC position as per defaults",  v22,  2,  v22[0]);
LABEL_58:
    int v21 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitor::shouldIgnoreLocation(const CFAbsoluteTime, const CLDaemonLocation &)",  "%s\n",  v7);
    if (v21 != buf) {
      free(v21);
    }
    return 1LL;
  }

  if (!*(_BYTE *)(a1 + 616))
  {
    int v11 = *(_DWORD *)(a2 + 96);
    if (v11 == 11 || v11 == 4)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v13 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "Fence: handleLocation, Ignoring WiFi position as per defaults",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 1LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      LOWORD(v22[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: handleLocation, Ignoring WiFi position as per defaults",  v22,  2,  v22[0]);
      goto LABEL_58;
    }
  }

  int v8 = *(_DWORD *)(a2 + 96);
  if (*(_BYTE *)(a1 + 617)) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = (v8 & 0xFFFFFFF7) == 1;
  }
  if (v9)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v14 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "Fence: handleLocation, Ignoring GPS position as per defaults",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    LOWORD(v22[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: handleLocation, Ignoring GPS position as per defaults",  v22,  2,  v22[0]);
    goto LABEL_58;
  }

  if (!*(_BYTE *)(a1 + 618) && v8 == 10)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v10 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "Fence: handleLocation, Ignoring Pipeline position as per defaults",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    LOWORD(v22[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: handleLocation, Ignoring Pipeline position as per defaults",  v22,  2,  v22[0]);
    goto LABEL_58;
  }

  if (*(double *)(a2 + 76) == *(double *)(a1 + 672))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    __int128 v15 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "Fence: handleLocation, Ignoring duplicate location",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 1LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    LOWORD(v22[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: handleLocation, Ignoring duplicate location",  v22,  2,  v22[0]);
    goto LABEL_58;
  }

  int v17 = *(_DWORD *)(a1 + 684);
  int v18 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 400LL))(*(void *)(a1 + 1768));
  int v19 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16LL))(*(void *)(a1 + 1768));
  char v20 = sub_100A0D200(a1 + 904);
  return sub_100842E18((double *)(a1 + 664), (int *)(a1 + 680), a1 + 288, a1 + 448, a2, v17, v18, v19, a3, v20);
}

uint64_t sub_100A071AC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_100700B84(a1 + 816, a2);
  if (a1 + 824 == v6) {
    return 0LL;
  }
  char v7 = (__int128 *)(v6 + 280);
  if (*(char *)(v6 + 303) < 0)
  {
    sub_1010DD48C(__dst, *(void **)(v6 + 280), *(void *)(v6 + 288));
  }

  else
  {
    *(_OWORD *)__int128 __dst = *v7;
    uint64_t v24 = *(void *)(v6 + 296);
  }

  sub_100158FAC((char *)v19, v7, (__int128 *)a2);
  uint64_t v8 = sub_100A0B5B4(a1 + 792, (const void **)v19);
  uint64_t v9 = v8;
  if (a1 + 800 == v8)
  {
    if (v22 < 0) {
      operator delete(__p);
    }
    if (v20 < 0) {
      operator delete(v19[0]);
    }
    if (SHIBYTE(v24) < 0) {
      operator delete(__dst[0]);
    }
    return 0LL;
  }

  uint64_t v10 = v8 + 80;
  std::string::operator=((std::string *)a3, (const std::string *)(v8 + 80));
  std::string::operator=((std::string *)(a3 + 24), (const std::string *)(v9 + 104));
  std::string::operator=((std::string *)(a3 + 48), (const std::string *)(v9 + 128));
  __int128 v11 = *(_OWORD *)(v9 + 152);
  __int128 v12 = *(_OWORD *)(v9 + 168);
  __int128 v13 = *(_OWORD *)(v9 + 184);
  *(_OWORD *)(a3 + 120) = *(_OWORD *)(v9 + 200);
  *(_OWORD *)(a3 + 104) = v13;
  *(_OWORD *)(a3 + 88) = v12;
  *(_OWORD *)(a3 + 72) = v11;
  __int128 v14 = *(_OWORD *)(v9 + 216);
  __int128 v15 = *(_OWORD *)(v9 + 232);
  __int128 v16 = *(_OWORD *)(v9 + 248);
  *(void *)(a3 + 181) = *(void *)(v9 + 261);
  *(_OWORD *)(a3 + 168) = v16;
  *(_OWORD *)(a3 + 152) = v15;
  *(_OWORD *)(a3 + 136) = v14;
  std::string::operator=((std::string *)(a3 + 192), (const std::string *)(v9 + 272));
  int v17 = *(void **)(a3 + 216);
  *(void *)(a3 + 216) = *(id *)(v9 + 296);

  if (v10 != a3) {
    sub_10009B244( (char *)(a3 + 224),  *(char **)(v9 + 304),  *(void *)(v9 + 312),  (uint64_t)(*(void *)(v9 + 312) - *(void *)(v9 + 304)) >> 4);
  }
  if (v22 < 0) {
    operator delete(__p);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
  if (SHIBYTE(v24) < 0) {
    operator delete(__dst[0]);
  }
  return 1LL;
}

void sub_100A07360( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A0738C(uint64_t a1, int *a2, char a3, double a4)
{
  int v4 = *a2;
  if (*a2 <= 0xD)
  {
    if (((1 << v4) & 0x2C1E) != 0)
    {
LABEL_3:
      sub_1009FFDC8(a1, a4);
      return;
    }

    if (((1 << v4) & 0x240) != 0)
    {
      if ((a3 & 1) != 0) {
        goto LABEL_3;
      }
    }

    else if (v4 == 5)
    {
      uint64_t v5 = sub_101258EDC();
      sub_100A073E4(v5);
    }
  }

uint64_t sub_100A073E4(uint64_t a1, double a2)
{
  double v15 = *(double *)(a1 + 712) * ((double)*(int *)(a1 + 708) + 1.0);
  double v16 = a2;
  BOOL v2 = vabdd_f64(a2, *(double *)(a1 + 840)) <= v15;
  float64x2_t v3 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&a2, 0);
  float64x2_t v4 = vabdq_f64(v3, *(float64x2_t *)(a1 + 864));
  float64x2_t v5 = vabdq_f64(v3, *(float64x2_t *)(a1 + 848));
  float64x2_t v6 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v15, 0);
  int8x8_t v7 = (int8x8_t)vmovn_s64(vcgeq_f64(v6, v5));
  int8x8_t v8 = (int8x8_t)vmovn_s64(vcgeq_f64(v6, v4));
  int v9 = vabdd_f64(a2, *(double *)(a1 + 880)) <= v15;
  int v10 = vabdd_f64(a2, *(double *)(a1 + 888)) <= v15;
  int v11 = (vabdd_f64(a2, *(double *)(a1 + 896)) <= v15) << 12;
  int v12 = sub_100A0CFC0((float64x2_t *)(a1 + 904), (uint64_t *)&v16, (uint64_t *)&v15);
  int8x8_t v13 = vorr_s8(vand_s8(v7, (int8x8_t)0x2000000002LL), vand_s8(v8, (int8x8_t)0x20000000040LL));
  return v13.i32[0] | v13.i32[1] | (v9 << 10) | v11 | (v10 << 11) | v12 | v2;
}

BOOL sub_100A074E4(uint64_t a1, __int128 *a2, __int128 *a3)
{
  uint64_t v4 = sub_100A0B5B4(a1 + 792, (const void **)v6);
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
  return a1 + 800 != v4;
}

void sub_100A0754C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100A07560(uint64_t a1, uint64_t a2, int a3, double a4)
{
  if (*(void *)(a1 + 1920))
  {
    uint64_t v23 = a1 + 1904;
    (*(void (**)(void))(**(void **)(a1 + 1768) + 272LL))(*(void *)(a1 + 1768));
    int8x8_t v8 = *(double **)(a1 + 1904);
    char v9 = (double *)(a1 + 1912);
    if (v8 != (double *)(a1 + 1912))
    {
      do
      {
        double v10 = v8[35];
        double v11 = v8[36];
        __int128 v25 = 0u;
        uint64_t v26 = 0LL;
        memset(v24, 0, sizeof(v24));
        int v27 = -1;
        HIDWORD(v25) = (v10 * 100.0);
        unsigned int v12 = (round(sub_1009232CC((uint64_t)(v8 + 4)) / 10.0) * 10.0);
        if (v12 >= 0xC8) {
          unsigned int v12 = 200;
        }
        HIDWORD(v26) = v12;
        if (a3)
        {
          if (*(double *)(a2 + 20) <= 0.0)
          {
            int v19 = 1;
          }

          else
          {
            double v13 = sub_1008414E0((double *)(a2 + 4), (uint64_t)(v8 + 4), (double *)(a1 + 1776));
            double v14 = sub_1009232CC((uint64_t)(v8 + 4));
            double v15 = v13 - v14;
            int v16 = (int)(round((v13 - v14) / 10.0) * 10.0);
            if (v16 <= -100) {
              int v16 = -100;
            }
            if (v16 >= 100) {
              int v16 = 100;
            }
            double v17 = *(double *)(a2 + 20);
            int v18 = (int)(round(v17 / 10.0) * 10.0);
            if (v18 >= 100) {
              int v18 = 100;
            }
            LODWORD(v26) = v16;
            int v27 = v18;
            if (vabdd_f64(v13, v14) >= v17 && vabdd_f64(a4, v11) <= *((double *)sub_100D0ABB4() + 51))
            {
              if (v15 <= 0.0) {
                int v19 = 3;
              }
              else {
                int v19 = 4;
              }
            }

            else
            {
              int v19 = 2;
            }
          }
        }

        else
        {
          int v19 = 0;
        }

        DWORD2(v25) = v19;
        nullsub_10(v24);
        char v20 = (double *)*((void *)v8 + 1);
        if (v20)
        {
          do
          {
            int v21 = v20;
            char v20 = *(double **)v20;
          }

          while (v20);
        }

        else
        {
          do
          {
            int v21 = (double *)*((void *)v8 + 2);
            BOOL v22 = *(void *)v21 == (void)v8;
            int8x8_t v8 = v21;
          }

          while (!v22);
        }

        int8x8_t v8 = v21;
      }

      while (v21 != v9);
    }

    sub_100A0B0DC(v23, *(void **)(a1 + 1912));
    *(void *)(a1 + 1904) = v9;
    *(_OWORD *)char v9 = 0u;
  }

void sub_100A07788(uint64_t a1)
{
  v1[6] = xmmword_101339690;
  v1[7] = xmmword_1013396A0;
  memset(&v1[8], 0, 28);
  v1[2] = xmmword_101339650;
  v1[3] = xmmword_101339660;
  v1[4] = xmmword_101339670;
  v1[5] = xmmword_101339680;
  v1[0] = xmmword_101339630;
  v1[1] = xmmword_101339640;
  sub_100A07560(a1, (uint64_t)v1, 1, 0.0);
}

void sub_100A077E8(uint64_t a1, int a2)
{
  if (((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 352LL))(*(void *)(a1 + 1768)) & 1) != 0)
  {
    if (*(unsigned __int8 *)(a1 + 784) != a2)
    {
      *(_BYTE *)(a1 + 784) = a2;
      if (a2)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        uint64_t v4 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: start monitoring scenario trigger settled",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          v13[0] = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: start monitoring scenario trigger settled",  v13,  2);
          double v10 = (uint8_t *)v9;
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::monitorSettled(BOOL)", "%s\n", v9);
          if (v10 != buf) {
            free(v10);
          }
        }

        (*(void (**)(void))(**(void **)(a1 + 1768) + 360LL))(*(void *)(a1 + 1768));
        (*(void (**)(void))(**(void **)(a1 + 1768) + 376LL))(*(void *)(a1 + 1768));
        *(_DWORD *)(a1 + 604) = 1;
      }

      else
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int8x8_t v8 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: stop monitoring scenario trigger settled",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101866E28);
          }
          v13[0] = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: stop monitoring scenario trigger settled",  v13,  2);
          unsigned int v12 = (uint8_t *)v11;
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::monitorSettled(BOOL)", "%s\n", v11);
          if (v12 != buf) {
            free(v12);
          }
        }

        (*(void (**)(void))(**(void **)(a1 + 1768) + 368LL))(*(void *)(a1 + 1768));
        (*(void (**)(void))(**(void **)(a1 + 1768) + 328LL))(*(void *)(a1 + 1768));
        *(_DWORD *)(a1 + 604) = 0;
      }
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    float64x2_t v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Fence: CLRoutineMonitor is not supported",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      v13[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: CLRoutineMonitor is not supported",  v13,  2);
      char v7 = (uint8_t *)v6;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitor::monitorSettled(BOOL)", "%s\n", v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

BOOL sub_100A07C48(uint64_t a1)
{
  return *(void *)(a1 + 832) != 0LL;
}

void sub_100A07C58(uint64_t **a1, std::string *a2, unsigned __int8 *a3, double a4, int a5)
{
  if (a5) {
    sub_100A07C64(a1, a2, a3, a4);
  }
  else {
    sub_100A08274((uint64_t)a1, (double *)a2, a3, 0, a4);
  }
}

void sub_100A07C64(uint64_t **a1, std::string *a2, unsigned __int8 *a3, double a4)
{
  *(void *)std::stringbuf::string_type buf = a3;
  int8x8_t v8 = sub_100A0B640(a1 + 102, a3, (uint64_t)&unk_1012CF090, (__int128 **)buf);
  std::string::operator=((std::string *)(v8 + 35), a2);
  if (!sub_100A074E4((uint64_t)a1, (__int128 *)a2, (__int128 *)a3))
  {
    if ((char)a3[23] < 0)
    {
      sub_1010DD48C(__dst, *(void **)a3, *((void *)a3 + 1));
    }

    else
    {
      *(_OWORD *)__int128 __dst = *(_OWORD *)a3;
      uint64_t v37 = *((void *)a3 + 2);
    }

    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      char v9 = (char *)a2;
    }
    else {
      char v9 = (char *)a2->__r_.__value_.__r.__words[0];
    }
    sub_1010DDBC0(&v34, v9);
    if ((char)a3[71] < 0)
    {
      sub_1010DD48C(v32, *((void **)a3 + 6), *((void *)a3 + 7));
    }

    else
    {
      *(_OWORD *)int v32 = *((_OWORD *)a3 + 3);
      uint64_t v33 = *((void *)a3 + 8);
    }

    sub_100D0ABB4();
    sub_1010DDBC0(&__p, "");
    sub_100922EB8(&__str);
    if (v31 < 0) {
      operator delete(__p);
    }
    if (SHIBYTE(v33) < 0) {
      operator delete(v32[0]);
    }
    if (v35 < 0) {
      operator delete(v34);
    }
    if (SHIBYTE(v37) < 0) {
      operator delete(__dst[0]);
    }
    *((void *)&v46 + 1) = 3LL;
    *(_DWORD *)&v47[16] = sub_100922F28((uint64_t)&__str);
    *(void *)__int16 v47 = *((void *)a3 + 21);
    sub_100158FAC((char *)v26, (__int128 *)&v39, (__int128 *)&__str);
    *(void *)std::stringbuf::string_type buf = v26;
    double v10 = sub_100A0B7A0(a1 + 99, (const void **)v26, (uint64_t)&unk_1012CF090, (__int128 **)buf);
    std::string::operator=((std::string *)(v10 + 10), &__str);
    std::string::operator=((std::string *)(v10 + 13), &v39);
    std::string::operator=((std::string *)(v10 + 16), &v40);
    *(_OWORD *)(v10 + 27) = v45;
    *(_OWORD *)(v10 + 29) = v46;
    *(_OWORD *)(v10 + 31) = *(_OWORD *)v47;
    *(_OWORD *)(v10 + 19) = v41;
    *(_OWORD *)(v10 + 21) = v42;
    *(_OWORD *)(v10 + 23) = v43;
    *(_OWORD *)(v10 + 25) = v44;
    *(uint64_t *)((char *)v10 + 261) = *(void *)&v47[13];
    std::string::operator=((std::string *)(v10 + 34), &v48);
    double v11 = (void *)v10[37];
    v10[37] = (uint64_t)v49;

    sub_10083F9DC((uint64_t)v25);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    unsigned int v12 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      if ((v39.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v13 = &v39;
      }
      else {
        double v13 = (std::string *)v39.__r_.__value_.__r.__words[0];
      }
      if ((a3[23] & 0x80u) == 0) {
        double v14 = (uint64_t *)a3;
      }
      else {
        double v14 = *(uint64_t **)a3;
      }
      double v15 = (uint64_t *)(a3 + 24);
      if ((a3[47] & 0x80u) != 0) {
        double v15 = (uint64_t *)*((void *)a3 + 3);
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136381187;
      *(void *)&uint8_t buf[4] = v13;
      __int16 v59 = 2081;
      uint64_t v60 = v14;
      __int16 v61 = 2081;
      uint64_t v62 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: helper fence start, %{private}s for [%{private}s/%{private}s",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      if ((v39.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v16 = &v39;
      }
      else {
        int v16 = (std::string *)v39.__r_.__value_.__r.__words[0];
      }
      if ((a3[23] & 0x80u) == 0) {
        double v17 = (uint64_t *)a3;
      }
      else {
        double v17 = *(uint64_t **)a3;
      }
      int v18 = (char)a3[47];
      int v21 = (uint64_t *)*((void *)a3 + 3);
      char v20 = (uint64_t *)(a3 + 24);
      int v19 = v21;
      if (v18 >= 0) {
        BOOL v22 = v20;
      }
      else {
        BOOL v22 = v19;
      }
      int v52 = 136381187;
      __int16 v53 = v16;
      __int16 v54 = 2081;
      int v55 = v17;
      __int16 v56 = 2081;
      int v57 = v22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion: helper fence start, %{private}s for [%{private}s/%{private}s",  &v52,  32);
      uint64_t v24 = (char *)v23;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::startMonitoringLoiFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLFen ceManager_Type::Fence &)",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
    }

    sub_100A02C78((uint64_t)a1, (uint64_t)&__str, (uint64_t)v25, a4);
    (*(void (**)(uint64_t *))(*a1[221] + 432))(a1[221]);
    if (v29 < 0) {
      operator delete(v28);
    }
    if (v27 < 0) {
      operator delete(v26[0]);
    }
    if (v50)
    {
      __int16 v51 = v50;
      operator delete(v50);
    }
  }

void sub_100A081CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *a28, uint64_t a29, int a30, __int16 a31, char a32, char a33, void *a34, uint64_t a35, int a36, __int16 a37, char a38, char a39, void *__p, uint64_t a41, int a42, __int16 a43, char a44, char a45, void *a46, uint64_t a47, int a48, __int16 a49, char a50,char a51,char a52)
{
}

void sub_100A08274(uint64_t a1, double *a2, unsigned __int8 *a3, int a4, double a5)
{
  char v5 = a4;
  if ((a3[160] & 0x80) == 0)
  {
    if (a2[5] <= 0.0)
    {
      if (!a4) {
        return;
      }
      goto LABEL_39;
    }

    goto LABEL_26;
  }

  uint64_t v10 = sub_100700B84(a1 + 816, a3);
  uint64_t v11 = a1 + 824;
  if (a2[5] > 0.0)
  {
    if (v11 == v10)
    {
LABEL_26:
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v23 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        if ((a3[23] & 0x80u) == 0) {
          double v24 = *(double *)&a3;
        }
        else {
          double v24 = *(double *)a3;
        }
        else {
          __int128 v25 = *(double **)a2;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136380931;
        double v90 = v24;
        __int16 v91 = 2081;
        int v92 = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: helper fence start after found, [%{private}s]/%{private}s",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        if ((a3[23] & 0x80u) == 0) {
          int v71 = a3;
        }
        else {
          int v71 = *(unsigned __int8 **)a3;
        }
        else {
          uint64_t v72 = *(double **)a2;
        }
        *(_DWORD *)uint64_t v97 = 136380931;
        *(void *)&v97[4] = v71;
        __int16 v98 = 2081;
        std::string::size_type v99 = v72;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion: helper fence start after found, [%{private}s]/%{private}s",  v97,  22);
        int v74 = v73;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLF enceManager_Type::Fence &, const BOOL)",  "%s\n",  (const char *)v73);
        if (v74 != buf) {
          free(v74);
        }
      }

      sub_100A07C64((uint64_t **)a1, (std::string *)a2, a3, a5);
      return;
    }

    sub_100922994(v97);
    if ((sub_100A071AC(a1, a3, (uint64_t)v97) & 1) == 0)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      std::string v40 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_ERROR))
      {
        if ((a3[23] & 0x80u) == 0) {
          double v41 = *(double *)&a3;
        }
        else {
          double v41 = *(double *)a3;
        }
        if ((a3[47] & 0x80u) == 0) {
          __int128 v42 = (double *)(a3 + 24);
        }
        else {
          __int128 v42 = (double *)*((void *)a3 + 3);
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136380931;
        double v90 = v41;
        __int16 v91 = 2081;
        int v92 = v42;
        _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_ERROR,  "#significantRegion: helper fence not found [%{private}s]/%{private}s",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        if ((a3[23] & 0x80u) == 0) {
          double v43 = *(double *)&a3;
        }
        else {
          double v43 = *(double *)a3;
        }
        int v44 = (char)a3[47];
        __int16 v47 = (double *)*((void *)a3 + 3);
        __int128 v46 = (double *)(a3 + 24);
        __int128 v45 = v47;
        if (v44 >= 0) {
          std::string v48 = v46;
        }
        else {
          std::string v48 = v45;
        }
        int v81 = 136380931;
        double v82 = v43;
        __int16 v83 = 2081;
        double v84 = v48;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  16LL,  "#significantRegion: helper fence not found [%{private}s]/%{private}s",  &v81,  22);
        BOOL v50 = (uint8_t *)v49;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLF enceManager_Type::Fence &, const BOOL)",  "%s\n",  v49);
        if (v50 != buf) {
          free(v50);
        }
      }

      goto LABEL_144;
    }

    if ((v103 & 0x80u) == 0) {
      size_t v12 = v103;
    }
    else {
      size_t v12 = __n;
    }
    uint64_t v13 = *((unsigned __int8 *)a2 + 23);
    int v14 = (char)v13;
    if ((v13 & 0x80u) != 0LL) {
      uint64_t v13 = *((void *)a2 + 1);
    }
    if (v12 == v13)
    {
      if (v14 >= 0) {
        double v15 = a2;
      }
      else {
        double v15 = *(double **)a2;
      }
      if ((v103 & 0x80) != 0)
      {
        BOOL v21 = memcmp(__s1, v15, __n) != 0;
      }

      else if (v103)
      {
        uint64_t v16 = v103 - 1LL;
        p_s1 = &__s1;
        do
        {
          int v19 = *(unsigned __int8 *)p_s1;
          p_s1 = (void **)((char *)p_s1 + 1);
          int v18 = v19;
          int v20 = *(unsigned __int8 *)v15;
          double v15 = (double *)((char *)v15 + 1);
          BOOL v21 = v18 != v20;
        }

        while (v18 == v20 && v16-- != 0);
      }

      else
      {
        BOOL v21 = 0;
      }
    }

    else
    {
      BOOL v21 = 1;
    }

    double v51 = *((double *)sub_100D0ABB4() + 4);
    double v52 = a2[5];
    double v53 = v108;
    double v54 = sub_100D2DBDC((double *)(a1 + 1776), v106, v107, a2[3], a2[4], 0.0);
    double v55 = v51 * v52;
    double v56 = v53 - v51 * v52;
    if (v21)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      int v57 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        if ((v103 & 0x80u) == 0) {
          double v58 = COERCE_DOUBLE(&__s1);
        }
        else {
          double v58 = *(double *)&__s1;
        }
        else {
          __int16 v59 = *(double **)a2;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136381443;
        double v90 = v58;
        __int16 v91 = 2081;
        int v92 = v59;
        __int16 v93 = 2049;
        double v94 = v56;
        __int16 v95 = 2049;
        double v96 = v54;
        _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: helper fence restart due to changed identifier, %{private}s => %{private}s, dRadius, %{pri vate}.1lf, dCenter, %{private}.1lf",  buf,  0x2Au);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_143;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      if ((v103 & 0x80u) == 0) {
        double v60 = COERCE_DOUBLE(&__s1);
      }
      else {
        double v60 = *(double *)&__s1;
      }
      else {
        __int16 v61 = *(double **)a2;
      }
      int v81 = 136381443;
      double v82 = v60;
      __int16 v83 = 2081;
      double v84 = v61;
      __int16 v85 = 2049;
      double v86 = v56;
      __int16 v87 = 2049;
      double v88 = v54;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion: helper fence restart due to changed identifier, %{private}s => %{private}s, dRadius, %{priva te}.1lf, dCenter, %{private}.1lf",  &v81,  42);
      uint64_t v63 = (uint8_t *)v62;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLFen ceManager_Type::Fence &, const BOOL)",  "%s\n",  v62);
    }

    else
    {
      double v64 = sub_100922EBC((uint64_t)v97);
      if (v55 <= v64 + *((double *)sub_100D0ABB4() + 25) || fabs(v56) <= *((double *)sub_100D0ABB4() + 25))
      {
        if (v54 <= *((double *)sub_100D0ABB4() + 26))
        {
LABEL_144:
          if (__p)
          {
            __int128 v113 = __p;
            operator delete(__p);
          }

          if (v110 < 0) {
            operator delete(v109);
          }
          if (v105 < 0) {
            operator delete(v104);
          }
          if (v100 < 0) {
            operator delete(*(void **)v97);
          }
          return;
        }

        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v69 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
        {
          if ((v103 & 0x80u) == 0) {
            double v70 = (double *)&__s1;
          }
          else {
            double v70 = (double *)__s1;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 134283779;
          double v90 = v54;
          __int16 v91 = 2081;
          int v92 = v70;
          _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: helper fence restart due to changed center, %{private}.1lf, %{private}s",  buf,  0x16u);
        }

        if (!sub_1002921D0(115, 2))
        {
LABEL_143:
          sub_100A04B80((uint64_t **)a1, a3, a5);
          sub_100A07C64((uint64_t **)a1, (std::string *)a2, a3, a5);
          goto LABEL_144;
        }

        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        if ((v103 & 0x80u) == 0) {
          __int16 v79 = (double *)&__s1;
        }
        else {
          __int16 v79 = (double *)__s1;
        }
        int v81 = 134283779;
        double v82 = v54;
        __int16 v83 = 2081;
        double v84 = v79;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion: helper fence restart due to changed center, %{private}.1lf, %{private}s",  &v81,  22);
        uint64_t v63 = (uint8_t *)v80;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLF enceManager_Type::Fence &, const BOOL)",  "%s\n",  v80);
      }

      else
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        int v65 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
        {
          if ((v103 & 0x80u) == 0) {
            std::string::size_type v66 = (double *)&__s1;
          }
          else {
            std::string::size_type v66 = (double *)__s1;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 134283779;
          double v90 = v56;
          __int16 v91 = 2081;
          int v92 = v66;
          _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: helper fence restart due to changed radius, %{private}.1lf, %{private}s",  buf,  0x16u);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_143;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        if ((v103 & 0x80u) == 0) {
          int v67 = (double *)&__s1;
        }
        else {
          int v67 = (double *)__s1;
        }
        int v81 = 134283779;
        double v82 = v56;
        __int16 v83 = 2081;
        double v84 = v67;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion: helper fence restart due to changed radius, %{private}.1lf, %{private}s",  &v81,  22);
        uint64_t v63 = (uint8_t *)v68;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLF enceManager_Type::Fence &, const BOOL)",  "%s\n",  v68);
      }
    }

    if (v63 != buf) {
      free(v63);
    }
    goto LABEL_143;
  }

  if ((v5 & 1) != 0)
  {
LABEL_39:
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v26 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      if ((a3[23] & 0x80u) == 0) {
        double v27 = *(double *)&a3;
      }
      else {
        double v27 = *(double *)a3;
      }
      if ((a3[47] & 0x80u) == 0) {
        uint64_t v28 = (double *)(a3 + 24);
      }
      else {
        uint64_t v28 = (double *)*((void *)a3 + 3);
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136380931;
      double v90 = v27;
      __int16 v91 = 2081;
      int v92 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "#Warning #significantRegion: helper fence ambiguity for [%{private}s]/%{private}s]",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      if ((a3[23] & 0x80u) == 0) {
        char v29 = a3;
      }
      else {
        char v29 = *(unsigned __int8 **)a3;
      }
      int v30 = (char)a3[47];
      uint64_t v33 = (double *)*((void *)a3 + 3);
      int v32 = (double *)(a3 + 24);
      char v31 = v33;
      if (v30 >= 0) {
        double v34 = v32;
      }
      else {
        double v34 = v31;
      }
      *(_DWORD *)uint64_t v97 = 136380931;
      *(void *)&v97[4] = v29;
      __int16 v98 = 2081;
      std::string::size_type v99 = v34;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning #significantRegion: helper fence ambiguity for [%{private}s]/%{private}s]",  v97,  22);
      BOOL v36 = (uint8_t *)v35;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLFen ceManager_Type::Fence &, const BOOL)",  "%s\n",  v35);
      if (v36 != buf) {
        free(v36);
      }
    }

    return;
  }

  if (v11 != v10)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v37 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      if ((a3[23] & 0x80u) == 0) {
        double v38 = *(double *)&a3;
      }
      else {
        double v38 = *(double *)a3;
      }
      if ((a3[47] & 0x80u) == 0) {
        std::string v39 = (double *)(a3 + 24);
      }
      else {
        std::string v39 = (double *)*((void *)a3 + 3);
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136380931;
      double v90 = v38;
      __int16 v91 = 2081;
      int v92 = v39;
      _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: helper fence stop as disappeared for [%{private}s]/%{private}s",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      if ((a3[23] & 0x80u) == 0) {
        int v75 = a3;
      }
      else {
        int v75 = *(unsigned __int8 **)a3;
      }
      if ((a3[47] & 0x80u) == 0) {
        int v76 = (double *)(a3 + 24);
      }
      else {
        int v76 = (double *)*((void *)a3 + 3);
      }
      *(_DWORD *)uint64_t v97 = 136380931;
      *(void *)&v97[4] = v75;
      __int16 v98 = 2081;
      std::string::size_type v99 = v76;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion: helper fence stop as disappeared for [%{private}s]/%{private}s",  v97,  22);
      uint64_t v78 = (uint8_t *)v77;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLFen ceManager_Type::Fence &, const BOOL)",  "%s\n",  v77);
      if (v78 != buf) {
        free(v78);
      }
    }

    sub_100A04B80((uint64_t **)a1, a3, a5);
  }

void sub_100A09060(_Unwind_Exception *a1)
{
}

void sub_100A090A4(uint64_t a1, unsigned __int8 *a2, int a3, double a4)
{
  if (SHIBYTE(v19) < 0)
  {
    sub_1010DD48C(__dst, __p[0], (unint64_t)__p[1]);
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v22 = _Q0;
    unint64_t v23 = 0xBFF0000000000000LL;
    if (SHIBYTE(v19) < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    *(_OWORD *)__int128 __dst = *(_OWORD *)__p;
    uint64_t v21 = v19;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v22 = _Q0;
    unint64_t v23 = 0xBFF0000000000000LL;
  }

  if (SHIBYTE(v21) < 0)
  {
    sub_1010DD48C(v14, __dst[0], (unint64_t)__dst[1]);
  }

  else
  {
    *(_OWORD *)int v14 = *(_OWORD *)__dst;
    uint64_t v15 = v21;
  }

  __int128 v16 = v22;
  unint64_t v17 = v23;
  sub_100A08274(a1, (double *)v14, a2, a3, a4);
  if (SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v21) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_100A091CC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20, int a21, __int16 a22, char a23, char a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30)
{
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A09218(uint64_t a1, void *a2, double a3)
{
  float64x2_t v6 = (NSDate *)[a2 departureDate];
  char v7 = +[NSDate distantFuture](&OBJC_CLASS___NSDate, "distantFuture");
  int v65 = 0xFFFF;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v69 = xmmword_1012EA5D0;
  __int128 v70 = _Q0;
  __int128 v71 = _Q0;
  unint64_t v72 = 0xBFF0000000000000LL;
  unint64_t v74 = 0xBFF0000000000000LL;
  int v73 = 0;
  int v75 = 0;
  unint64_t v78 = 0xBFF0000000000000LL;
  int v79 = 0x7FFFFFFF;
  uint64_t v81 = 0LL;
  uint64_t v82 = 0LL;
  uint64_t v80 = 0LL;
  char v83 = 0;
  [a2 coordinate];
  uint64_t v66 = v13;
  [a2 coordinate];
  uint64_t v67 = v14;
  [a2 coordinate];
  uint64_t v76 = v15;
  [a2 coordinate];
  uint64_t v77 = v16;
  [a2 horizontalAccuracy];
  uint64_t v68 = v17;
  memset(&v64, 0, sizeof(v64));
  if (a2 && [a2 _placeInference] && objc_msgSend(objc_msgSend(a2, "_placeInference"), "_loiIdentifier"))
  {
    std::string::assign( &v64,  (const std::string::value_type *)objc_msgSend( objc_msgSend( objc_msgSend(objc_msgSend(a2, "_placeInference"), "_loiIdentifier"),  "UUIDString"),  "UTF8String"));
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v18 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v19 = &v64;
      if ((v64.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v19 = (std::string *)v64.__r_.__value_.__r.__words[0];
      }
      int v20 = "exit";
      if (v6 == v7) {
        int v20 = "entry";
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136380931;
      __int16 v91 = v19;
      __int16 v92 = 2082;
      __int16 v93 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "#significantRegion: visit, id, %{private}s, %{public}s",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      double v55 = &v64;
      if ((v64.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        double v55 = (std::string *)v64.__r_.__value_.__r.__words[0];
      }
      double v56 = "exit";
      if (v6 == v7) {
        double v56 = "entry";
      }
      int v84 = 136380931;
      __int16 v85 = v55;
      __int16 v86 = 2082;
      __int16 v87 = v56;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "#significantRegion: visit, id, %{private}s, %{public}s",  &v84,  22);
      double v58 = (uint8_t *)v57;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitor::onVisit(const CFAbsoluteTime, CLVisit *)",  "%s\n",  v57);
      if (v58 != buf) {
        free(v58);
      }
    }

    uint64_t v21 = *(void **)(a1 + 816);
    if (v21 != (void *)(a1 + 824))
    {
      if (v6 == v7) {
        __int128 v22 = "entry";
      }
      else {
        __int128 v22 = "exit";
      }
      while (1)
      {
        uint64_t v23 = *((unsigned __int8 *)v21 + 303);
        if ((v23 & 0x80u) == 0LL) {
          uint64_t v24 = *((unsigned __int8 *)v21 + 303);
        }
        else {
          uint64_t v24 = v21[36];
        }
        std::string::size_type size = v64.__r_.__value_.__s.__size_;
        if ((v64.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          std::string::size_type size = v64.__r_.__value_.__l.__size_;
        }
        if (v24 != size) {
          goto LABEL_44;
        }
        uint64_t v26 = (const void **)(v21 + 35);
        double v27 = (v64.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &v64 : (std::string *)v64.__r_.__value_.__r.__words[0];
        if ((v23 & 0x80) == 0) {
          break;
        }
        if (!memcmp(*v26, v27, v21[36])) {
          goto LABEL_32;
        }
LABEL_44:
        char v31 = (void *)v21[1];
        if (v31)
        {
          do
          {
            int v32 = v31;
            char v31 = (void *)*v31;
          }

          while (v31);
        }

        else
        {
          do
          {
            int v32 = (void *)v21[2];
            _ZF = *v32 == (void)v21;
            uint64_t v21 = v32;
          }

          while (!_ZF);
        }

        uint64_t v21 = v32;
        if (v32 == (void *)(a1 + 824)) {
          goto LABEL_102;
        }
      }

      if (*((_BYTE *)v21 + 303))
      {
        while (*(unsigned __int8 *)v26 == v27->__r_.__value_.__s.__data_[0])
        {
          uint64_t v26 = (const void **)((char *)v26 + 1);
          double v27 = (std::string *)((char *)v27 + 1);
          if (!--v23) {
            goto LABEL_32;
          }
        }

        goto LABEL_44;
      }

void sub_100A09CB4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *__p, uint64_t a27, int a28, __int16 a29, char a30, char a31)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100A09D20(uint64_t a1)
{
  return sub_100B5A610(a1 + 1312);
}

uint64_t sub_100A09D28(uint64_t a1)
{
  return sub_100B5A628(a1 + 1312);
}

uint64_t sub_100A09D30(uint64_t a1)
{
  return sub_100B5A640(a1 + 1312);
}

void *sub_100A09D38(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  double v8 = sub_100D2DBDC((double *)(a1 + 1776), a3, a4, a5, a6, 0.0);
  return sub_100B5A658((void *)(a1 + 1312), (uint64_t)a2, (uint64_t)v8);
}

BOOL sub_100A09D8C(std::string *__str, std::string *this)
{
  double v4 = *(double *)&__str[3].__r_.__value_.__l.__cap_;
  if (v4 > 2128000.0)
  {
    std::string::operator=(this, __str);
    std::string::operator=(this + 1, __str + 1);
    std::string::operator=(this + 2, __str + 2);
    __int128 v14 = *(_OWORD *)&__str[3].__r_.__value_.__r.__words[2];
    __int128 v15 = *(_OWORD *)&__str[4].__r_.__value_.__r.__words[1];
    __int128 v16 = *(_OWORD *)&__str[5].__r_.__value_.__l.__data_;
    *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = *(_OWORD *)&__str[3].__r_.__value_.__l.__data_;
    *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = v16;
    *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = v15;
    *(_OWORD *)&this[3].__r_.__value_.__r.__words[2] = v14;
    __int128 v17 = *(_OWORD *)&__str[6].__r_.__value_.__r.__words[1];
    __int128 v18 = *(_OWORD *)&__str[7].__r_.__value_.__l.__data_;
    std::string::size_type v19 = *(std::string::size_type *)((char *)&__str[7].__r_.__value_.__r.__words[1] + 5);
    *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = *(_OWORD *)&__str[5].__r_.__value_.__r.__words[2];
    *(std::string::size_type *)((char *)&this[7].__r_.__value_.__r.__words[1] + 5) = v19;
    *(_OWORD *)&this[7].__r_.__value_.__l.__data_ = v18;
    *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v17;
    std::string::operator=(this + 8, __str + 8);
    std::string::pointer data = this[9].__r_.__value_.__l.__data_;
    this[9].__r_.__value_.__r.__words[0] = (std::string::size_type)__str[9].__r_.__value_.__l.__data_;

    if (this != __str) {
      sub_10009B244( &this[9].__r_.__value_.__s.__data_[8],  (char *)__str[9].__r_.__value_.__l.__size_,  __str[9].__r_.__value_.__l.__cap_,  (uint64_t)(__str[9].__r_.__value_.__l.__cap_ - __str[9].__r_.__value_.__l.__size_) >> 4);
    }
    this[3].__r_.__value_.__l.__cap_ = 0x41403C4000000000LL;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v21 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      if ((__str->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v22 = __str;
      }
      else {
        __int128 v22 = (std::string *)__str->__r_.__value_.__r.__words[0];
      }
      if ((__str[1].__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v23 = __str + 1;
      }
      else {
        uint64_t v23 = (std::string *)__str[1].__r_.__value_.__l.__data_;
      }
      std::string::size_type cap = this[3].__r_.__value_.__l.__cap_;
      *(_DWORD *)std::stringbuf::string_type buf = 136446723;
      double v38 = v22;
      __int16 v39 = 2081;
      std::string v40 = v23;
      __int16 v41 = 2049;
      std::string::size_type v42 = cap;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_FAULT,  "Fence: Cannot monitor %{public}s/%{private}s because the radius is too large, suggesting, %{private}.1lf",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      if ((__str->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v26 = __str;
      }
      else {
        uint64_t v26 = (std::string *)__str->__r_.__value_.__r.__words[0];
      }
      if ((__str[1].__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v27 = __str + 1;
      }
      else {
        double v27 = (std::string *)__str[1].__r_.__value_.__l.__data_;
      }
      std::string::size_type v28 = this[3].__r_.__value_.__l.__cap_;
      int v31 = 136446723;
      int v32 = v26;
      __int16 v33 = 2081;
      double v34 = v27;
      __int16 v35 = 2049;
      std::string::size_type v36 = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: Cannot monitor %{public}s/%{private}s because the radius is too large, suggesting, %{private}.1lf",  &v31,  32);
      int v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLFenceMonitor::canPerformMonitoringForFence(const CLFenceManager_Type::Fence &, CLFenceManager_Type::Fence &)",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }
  }

  else
  {
    BOOL v6 = *(double *)&__str[4].__r_.__value_.__l.__data_ > 400.0
      || __str[7].__r_.__value_.__s.__data_[20] != 0
      || HIDWORD(__str[7].__r_.__value_.__r.__words[1]) == 2;
    if (!v6
      && __str[9].__r_.__value_.__l.__cap_ == __str[9].__r_.__value_.__l.__size_
      && (__str[6].__r_.__value_.__s.__data_[16] & 0x20) == 0)
    {
      std::string::operator=(this, __str);
      std::string::operator=(this + 1, __str + 1);
      std::string::operator=(this + 2, __str + 2);
      __int128 v7 = *(_OWORD *)&__str[3].__r_.__value_.__r.__words[2];
      __int128 v8 = *(_OWORD *)&__str[4].__r_.__value_.__r.__words[1];
      __int128 v9 = *(_OWORD *)&__str[5].__r_.__value_.__l.__data_;
      *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = *(_OWORD *)&__str[3].__r_.__value_.__l.__data_;
      *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = v9;
      *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = v8;
      *(_OWORD *)&this[3].__r_.__value_.__r.__words[2] = v7;
      __int128 v10 = *(_OWORD *)&__str[6].__r_.__value_.__r.__words[1];
      __int128 v11 = *(_OWORD *)&__str[7].__r_.__value_.__l.__data_;
      std::string::size_type v12 = *(std::string::size_type *)((char *)&__str[7].__r_.__value_.__r.__words[1] + 5);
      *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = *(_OWORD *)&__str[5].__r_.__value_.__r.__words[2];
      *(std::string::size_type *)((char *)&this[7].__r_.__value_.__r.__words[1] + 5) = v12;
      *(_OWORD *)&this[7].__r_.__value_.__l.__data_ = v11;
      *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v10;
      std::string::operator=(this + 8, __str + 8);
      std::string::pointer v13 = this[9].__r_.__value_.__l.__data_;
      this[9].__r_.__value_.__r.__words[0] = (std::string::size_type)__str[9].__r_.__value_.__l.__data_;

      if (this != __str) {
        sub_10009B244( &this[9].__r_.__value_.__s.__data_[8],  (char *)__str[9].__r_.__value_.__l.__size_,  __str[9].__r_.__value_.__l.__cap_,  (uint64_t)(__str[9].__r_.__value_.__l.__cap_ - __str[9].__r_.__value_.__l.__size_) >> 4);
      }
      this[3].__r_.__value_.__l.__cap_ = 0x4079000000000000LL;
    }
  }

  return v4 <= 2128000.0;
}

BOOL sub_100A0A174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(double *)&std::string::size_type v5 = sub_1008414E0((double *)(a3 + 4), a2, (double *)(a1 + 1776));
  double v6 = *(double *)(a2 + 96) + *(double *)(a3 + 20);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v7 = v6 + 20000.0;
  __int128 v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf.__r_.__value_.__l.__data_) = 134218240;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v5;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
    *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "distance = %.2f; compare = %.2f",
      (uint8_t *)&buf,
      0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    LODWORD(v37.__r_.__value_.__l.__data_) = 134218240;
    *(std::string::size_type *)((char *)v37.__r_.__value_.__r.__words + 4) = v5;
    WORD2(v37.__r_.__value_.__r.__words[1]) = 2048;
    *(double *)((char *)&v37.__r_.__value_.__r.__words[1] + 6) = v7;
    LODWORD(v36) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "distance = %.2f; compare = %.2f",
      COERCE_DOUBLE(&v37),
      *(double *)&v36);
    __int128 v22 = (std::stringbuf::string_type *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitor::isCellMonitoringSufficient(const CLFenceManager_Type::Fence &, const CLDaemonLocation &)",  "%s\n",  v21);
    if (v22 != &buf) {
      free(v22);
    }
  }

  BOOL v9 = *(double *)&v5 > v7;
  BOOL v11 = *(double *)(a2 + 96) > 400.0 || *(_BYTE *)(a2 + 188) != 0 || *(_DWORD *)(a2 + 180) == 2;
  if (v11 || *(void *)(a2 + 232) != *(void *)(a2 + 224) || (*(_BYTE *)(a2 + 160) & 0x20) != 0)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    std::string::size_type v12 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      sub_100923668(a2, &buf);
      std::string::pointer v13 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &buf
          : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      LODWORD(v37.__r_.__value_.__l.__data_) = 134218242;
      *(std::string::size_type *)((char *)v37.__r_.__value_.__r.__words + 4) = 0x4079000000000000LL;
      WORD2(v37.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&v37.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Fence: no allowing wifi monitor for, %.1lf, fence, %s",  (uint8_t *)&v37,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      uint64_t v32 = qword_101934878;
      sub_100923668(a2, &v37);
      if ((v37.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v33 = &v37;
      }
      else {
        __int16 v33 = (std::stringbuf::string_type *)v37.__r_.__value_.__r.__words[0];
      }
      int v39 = 134218242;
      uint64_t v40 = 0x4079000000000000LL;
      __int16 v41 = 2080;
      std::string::size_type v42 = v33;
      LODWORD(v36) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v32,  2LL,  "Fence: no allowing wifi monitor for, %.1lf, fence, %s",  COERCE_DOUBLE(&v39),  v36);
      __int16 v35 = v34;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitor::isCellMonitoringSufficient(const CLFenceManager_Type::Fence &, const CLDaemonLocation &)",  "%s\n",  (const char *)v35);
      if (v35 != &buf) {
        free(v35);
      }
    }

    BOOL v9 = 1LL;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  __int128 v14 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    __int128 v15 = "not ";
    if (v9) {
      __int128 v15 = "";
    }
    std::string::size_type v16 = *(void *)a2;
    int v17 = *(char *)(a2 + 47);
    uint64_t v18 = *(void *)(a2 + 24);
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315651;
    if (v17 >= 0) {
      uint64_t v19 = a2 + 24;
    }
    else {
      uint64_t v19 = v18;
    }
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v15;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v16;
    HIWORD(buf.__r_.__value_.__r.__words[2]) = 2081;
    uint64_t v44 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "Cell monitoring is %ssufficient for %{private}s/%{private}s",  (uint8_t *)&buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v23 = "not ";
    if (v9) {
      uint64_t v23 = "";
    }
    else {
      std::string::size_type v24 = *(void *)a2;
    }
    int v25 = *(char *)(a2 + 47);
    uint64_t v28 = *(void *)(a2 + 24);
    uint64_t v27 = a2 + 24;
    uint64_t v26 = v28;
    if (v25 >= 0) {
      uint64_t v29 = v27;
    }
    else {
      uint64_t v29 = v26;
    }
    LODWORD(v37.__r_.__value_.__l.__data_) = 136315651;
    *(std::string::size_type *)((char *)v37.__r_.__value_.__r.__words + 4) = (std::string::size_type)v23;
    WORD2(v37.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v37.__r_.__value_.__r.__words[1] + 6) = v24;
    HIWORD(v37.__r_.__value_.__r.__words[2]) = 2081;
    uint64_t v38 = v29;
    LODWORD(v36) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Cell monitoring is %ssufficient for %{private}s/%{private}s",  &v37,  v36);
    int v31 = (std::stringbuf::string_type *)v30;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitor::isCellMonitoringSufficient(const CLFenceManager_Type::Fence &, const CLDaemonLocation &)",  "%s\n",  v30);
    if (v31 != &buf) {
      free(v31);
    }
  }

  return v9;
}

BOOL sub_100A0A75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v5 = sub_1008414E0((double *)(a3 + 4), a2, (double *)(a1 + 1776));
  double v6 = *(double *)(a2 + 96) + *(double *)(a3 + 20);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  double v7 = v6 + 100000.0;
  __int128 v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    double v35 = v5;
    __int16 v36 = 2048;
    double v37 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: distance = %.2f; compare = %.2f",
      buf,
      0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    int v28 = 134218240;
    double v29 = v5;
    __int16 v30 = 2048;
    double v31 = v7;
    LODWORD(v27) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: distance = %.2f; compare = %.2f",
      COERCE_DOUBLE(&v28),
      v27);
    int v17 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitor::isLacMonitoringSufficient(const CLFenceManager_Type::Fence &, const CLDaemonLocation &)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101866E28);
  }
  BOOL v9 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    __int128 v10 = "not ";
    if (v5 > v7) {
      __int128 v10 = "";
    }
    uint64_t v11 = *(void *)a2;
    int v12 = *(char *)(a2 + 47);
    uint64_t v13 = *(void *)(a2 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 136315651;
    if (v12 >= 0) {
      uint64_t v14 = a2 + 24;
    }
    else {
      uint64_t v14 = v13;
    }
    double v35 = *(double *)&v10;
    __int16 v36 = 2081;
    double v37 = *(double *)&v11;
    __int16 v38 = 2081;
    uint64_t v39 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "Fence: LAC monitoring is %ssufficient for %{private}s/%{private}s",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101866E28);
    }
    uint64_t v18 = "not ";
    if (v5 > v7) {
      uint64_t v18 = "";
    }
    else {
      uint64_t v19 = *(void *)a2;
    }
    int v20 = *(char *)(a2 + 47);
    uint64_t v23 = *(void *)(a2 + 24);
    uint64_t v22 = a2 + 24;
    uint64_t v21 = v23;
    if (v20 >= 0) {
      uint64_t v24 = v22;
    }
    else {
      uint64_t v24 = v21;
    }
    int v28 = 136315651;
    double v29 = *(double *)&v18;
    __int16 v30 = 2081;
    double v31 = *(double *)&v19;
    __int16 v32 = 2081;
    uint64_t v33 = v24;
    LODWORD(v27) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: LAC monitoring is %ssufficient for %{private}s/%{private}s",  &v28,  *(void *)&v27);
    uint64_t v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitor::isLacMonitoringSufficient(const CLFenceManager_Type::Fence &, const CLDaemonLocation &)",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  return v5 > v7;
}

void sub_100A0AB40(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

double sub_100A0AB6C(uint64_t a1, double *a2, double *a3)
{
  double result = -1.0;
  if (*a3 != -1.0)
  {
    if (*a2 < *a3)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101866E28);
      }
      double v6 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        double v7 = *a2;
        double v8 = *a3;
        *(_DWORD *)std::stringbuf::string_type buf = 134349312;
        double v18 = v7;
        __int16 v19 = 2050;
        double v20 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "#Warning. Negative age %{public}lf < %{public}lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101866E28);
        }
        double v9 = *a2;
        double v10 = *a3;
        int v13 = 134349312;
        double v14 = v9;
        __int16 v15 = 2050;
        double v16 = v10;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "#Warning. Negative age %{public}lf < %{public}lf",  &v13,  22);
        int v12 = (uint8_t *)v11;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval CLFenceAnalyticsGeofenceEventTimes::getAge(const CFAbsoluteTime &, const CFAbsoluteTime &) const",  "%s\n",  v11);
        if (v12 != buf) {
          free(v12);
        }
      }
    }

    return *a2 - *a3;
  }

  return result;
}

void sub_100A0AD68(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_100A0AD94(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100A0AD94(a1, *a2);
    sub_100A0AD94(a1, a2[1]);
    sub_100A0ADDC((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100A0ADDC(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }
}

void sub_100A0AE5C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100A0AE5C(a1, *a2);
    sub_100A0AE5C(a1, a2[1]);
    sub_100A0AEA4((uint64_t)(a2 + 4));
    operator delete(a2);
  }

uint64_t sub_100A0AEA4(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 272);
  if (v2)
  {
    *(void *)(a1 + 280) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_100A0AF40(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100A0AF40(a1, *a2);
    sub_100A0AF40(a1, a2[1]);
    sub_100A0AF88((uint64_t)(a2 + 4));
    operator delete(a2);
  }

uint64_t sub_100A0AF88(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_100A0B014(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100A0B014(a1, *a2);
    sub_100A0B014(a1, a2[1]);
    sub_100A0B05C((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100A0B05C(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }
}

void sub_100A0B0DC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100A0B0DC(a1, *a2);
    sub_100A0B0DC(a1, a2[1]);
    sub_100A0B124((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100A0B124(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }
}

uint64_t *sub_100A0B1A4(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  double v6 = (uint64_t **)sub_1006695D4((uint64_t)a1, &v11, a2);
  double v7 = *v6;
  if (!*v6)
  {
    double v8 = v6;
    sub_100A0B24C((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000085FC(a1, v11, v8, v10[0]);
    double v7 = v10[0];
    v10[0] = 0LL;
    sub_100A0B328((uint64_t)v10, 0LL);
  }

  return v7;
}

char *sub_100A0B24C@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  double v6 = (char *)operator new(0x170uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  double v8 = *a2;
  double result = sub_100A0B2C8(v6 + 32, &v8);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100A0B2B0(_Unwind_Exception *a1)
{
}

char *sub_100A0B2C8(char *a1, __int128 **a2)
{
  float64x2_t v3 = sub_1002718F0(a1, *a2);
  sub_10083F9DC((uint64_t)(v3 + 248));
  return a1;
}

void sub_100A0B2F8(_Unwind_Exception *a1)
{
  float64x2_t v3 = *(void **)(v1 + 224);
  if (v3)
  {
    *(void *)(v1 + 232) = v3;
    operator delete(v3);
  }

  sub_1012462D4(v1);
  _Unwind_Resume(a1);
}

void sub_100A0B328(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100A0ADDC((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t *sub_100A0B36C(uint64_t **a1, uint64_t *a2, uint64_t *a3)
{
  if (a2 != a3)
  {
    double v4 = a2;
    do
    {
      double v6 = sub_1000087E8(a1, v4);
      sub_100A0B05C((uint64_t)(v4 + 4));
      operator delete(v4);
      double v4 = v6;
    }

    while (v6 != a3);
  }

  return a3;
}

void *sub_100A0B3D8(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = &off_101866E78;
  result[1] = v3;
  return result;
}

uint64_t sub_100A0B40C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_101866E78;
  a2[1] = v2;
  return result;
}

BOOL sub_100A0B428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A0A75C(*(void *)(a1 + 8), a2, a3);
}

uint64_t sub_100A0B430(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100A0B46C()
{
}

void *sub_100A0B480(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = &off_101866F08;
  result[1] = v3;
  return result;
}

uint64_t sub_100A0B4B4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_101866F08;
  a2[1] = v2;
  return result;
}

BOOL sub_100A0B4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A0A174(*(void *)(a1 + 8), a2, a3);
}

uint64_t sub_100A0B4D8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100A0B514()
{
}

void *sub_100A0B528()
{
  double result = operator new(0x10uLL);
  *double result = &off_101866F88;
  return result;
}

void sub_100A0B54C(uint64_t a1, void *a2)
{
  *a2 = &off_101866F88;
}

uint64_t sub_100A0B564()
{
  return 1LL;
}

uint64_t sub_100A0B56C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100A0B5A8()
{
}

uint64_t sub_100A0B5B4(uint64_t a1, const void **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  do
  {
    int v7 = sub_1009EB590(v5, (const void **)(v3 + 32), a2);
    double v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      double v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }

    uint64_t v3 = *v8;
  }

  while (*v8);
  return v6;
}

uint64_t *sub_100A0B640(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  uint64_t v6 = (uint64_t **)sub_1006695D4((uint64_t)a1, &v11, a2);
  int v7 = *v6;
  if (!*v6)
  {
    double v8 = v6;
    sub_100A0B6E8((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000085FC(a1, v11, v8, v10[0]);
    int v7 = v10[0];
    v10[0] = 0LL;
    sub_100A0B75C((uint64_t)v10, 0LL);
  }

  return v7;
}

char *sub_100A0B6E8@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x130uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  double result = sub_1002718F0(v6 + 32, *a2);
  *((void *)v6 + 35) = 0LL;
  *((void *)v6 + 36) = 0LL;
  *((void *)v6 + 37) = 0LL;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100A0B744(_Unwind_Exception *a1)
{
}

void sub_100A0B75C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100A0AF88((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t *sub_100A0B7A0(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t v6 = (uint64_t **)sub_1009EB748((uint64_t)a1, &v11, a2);
  int v7 = *v6;
  if (!*v6)
  {
    double v8 = v6;
    sub_100A0B848((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000085FC(a1, v11, v8, v10[0]);
    int v7 = v10[0];
    v10[0] = 0LL;
    sub_100A0B900((uint64_t)v10, 0LL);
  }

  return v7;
}

char *sub_100A0B848@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x148uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  double result = sub_100A0B8B0(v6 + 32, *a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100A0B898(_Unwind_Exception *a1)
{
}

char *sub_100A0B8B0(char *a1, __int128 *a2)
{
  uint64_t v3 = sub_1001598C4(a1, a2);
  sub_100922994(v3 + 48);
  return a1;
}

void sub_100A0B8DC(_Unwind_Exception *a1)
{
}

void sub_100A0B900(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100A0AEA4((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t sub_100A0B944(uint64_t **a1, const void **a2)
{
  uint64_t v3 = (uint64_t *)sub_100A0B5B4((uint64_t)a1, a2);
  double v4 = v3;
  sub_1000087E8(a1, v3);
  sub_100A0AEA4((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1LL;
}

uint64_t sub_100A0B99C(uint64_t **a1, unsigned __int8 *a2)
{
  uint64_t v3 = (uint64_t *)sub_100700B84((uint64_t)a1, a2);
  double v4 = v3;
  sub_1000087E8(a1, v3);
  sub_100A0AF88((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1LL;
}

  ;
}

uint64_t sub_100A0BA08(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = 0xFFFF;
  *(void *)(a1 + 20) = 0LL;
  *(void *)(a1 + 12) = 0LL;
  *(_OWORD *)(a1 + 28) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 44) = _Q0;
  *(_OWORD *)(a1 + 60) = _Q0;
  __int128 v12 = _Q0;
  *(_OWORD *)(a1 + 76) = _Q0;
  *(_DWORD *)(a1 + 92) = 0;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 120) = 0;
  *(void *)(a1 + 124) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 132) = 0x7FFFFFFF;
  *(void *)(a1 + 144) = 0LL;
  *(void *)(a1 + 152) = 0LL;
  *(void *)(a1 + 136) = 0LL;
  uint64_t v10 = a1 + 168;
  *(_BYTE *)(a1 + 160) = 0;
  sub_100ED01CC(a1 + 168, 120.0);
  sub_100F76854((void *)(a1 + 216));
  *(void *)(a1 + 248) = a1 + 256;
  *(_BYTE *)(a1 + 232) = 0;
  *(_BYTE *)(a1 + 233) = a3;
  *(_DWORD *)(a1 + 240) = 0;
  *(void *)(a1 + 256) = 0LL;
  *(void *)(a1 + 264) = 0LL;
  *(void *)(a1 + 280) = 0LL;
  *(_DWORD *)(a1 + 234) = 0;
  *(void *)(a1 + 272) = a1 + 280;
  *(void *)(a1 + 288) = 0LL;
  *(_WORD *)(a1 + 296) = 0;
  *(_BYTE *)(a1 + 298) = 0;
  *(void *)(a1 + 304) = 0LL;
  *(void *)(a1 + 312) = 0LL;
  *(void *)(a1 + 328) = 0xBFF0000000000000LL;
  *(void *)(a1 + 317) = 0LL;
  sub_10025D0EC(a1 + 336, 120, 1, 60.0);
  *(_OWORD *)(a1 + 368) = v12;
  *(_OWORD *)(a1 + 384) = v12;
  *(void *)(a1 + 400) = 0xBFF0000000000000LL;
  sub_100ED01E8(v10);
  return a1;
}

void sub_100A0BB48(_Unwind_Exception *a1)
{
}

uint64_t sub_100A0BB88(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Fence: CLFenceMonitorWifi, shutdown", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: CLFenceMonitorWifi, shutdown",  v6,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLFenceMonitorWifi::~CLFenceMonitorWifi()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  *(_BYTE *)(a1 + 237) = 0;
  sub_100A105C8(a1 + 272, *(void **)(a1 + 280));
  *(void *)(a1 + 280) = 0LL;
  *(void *)(a1 + 288) = 0LL;
  *(void *)(a1 + 272) = a1 + 280;
  *(_DWORD *)(a1 + 240) = 0;
  sub_100A105C8(a1 + 272, 0LL);
  sub_100A10500(a1 + 248, *(void **)(a1 + 256));
  sub_10000AE14(a1 + 216);
  sub_1002E0644(a1 + 176);
  return a1;
}

void sub_100A0BD68(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_100A0BD78(uint64_t result, int a2)
{
  return result;
}

uint64_t sub_100A0BD8C(uint64_t result, int a2)
{
  if (*(unsigned __int8 *)(result + 235) != a2)
  {
    uint64_t v3 = result;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    double v4 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v5 = *(unsigned __int8 *)(v3 + 235);
      *(_DWORD *)std::stringbuf::string_type buf = 67240448;
      int v13 = a2;
      __int16 v14 = 1026;
      int v15 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: companion connected is now, %{public}d, was, %{public}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      int v6 = *(unsigned __int8 *)(v3 + 235);
      v9[0] = 67240448;
      v9[1] = a2;
      __int16 v10 = 1026;
      int v11 = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: companion connected is now, %{public}d, was, %{public}d",  v9,  14);
      double v8 = (uint8_t *)v7;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorWifi::setCompanionConnectedMode(BOOL)", "%s\n", v7);
      if (v8 != buf) {
        free(v8);
      }
    }

    *(_BYTE *)(v3 + 235) = a2;
    return sub_100A0BF70((void *)v3);
  }

  return result;
}

uint64_t sub_100A0BF70(void *a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Fence: recalculate, take power assertion", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: recalculate, take power assertion",  v6,  2);
    int v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorWifi::recalculate()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  uint64_t result = (*(uint64_t (**)(void, const char *))(*(void *)*a1 + 64LL))(*a1, "recalculate");
  if (!*((_BYTE *)a1 + 298))
  {
    *((_BYTE *)a1 + 298) = 1;
    return (*(uint64_t (**)(void))(*(void *)*a1 + 88LL))(*a1);
  }

  return result;
}

uint64_t sub_100A0C138(uint64_t result, int a2)
{
  if (*(unsigned __int8 *)(result + 234) != a2)
  {
    uint64_t v3 = result;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    double v4 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v5 = *(unsigned __int8 *)(v3 + 234);
      *(_DWORD *)std::stringbuf::string_type buf = 67240448;
      int v13 = a2;
      __int16 v14 = 1026;
      int v15 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: airplane mode is now, %{public}d, was, %{public}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      int v6 = *(unsigned __int8 *)(v3 + 234);
      v9[0] = 67240448;
      v9[1] = a2;
      __int16 v10 = 1026;
      int v11 = v6;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: airplane mode is now, %{public}d, was, %{public}d",  v9,  14);
      double v8 = (uint8_t *)v7;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorWifi::setAirplaneMode(BOOL)", "%s\n", v7);
      if (v8 != buf) {
        free(v8);
      }
    }

    *(_BYTE *)(v3 + 234) = a2;
    return sub_100A0BF70((void *)v3);
  }

  return result;
}

uint64_t sub_100A0C31C(uint64_t a1, uint64_t *a2, int a3, double a4)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  double v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    else {
      double v9 = (uint64_t *)*a2;
    }
    __int16 v10 = a2 + 3;
    int v11 = "exit";
    *(_DWORD *)std::stringbuf::string_type buf = 136381187;
    if (a3) {
      int v11 = "entry";
    }
    *(void *)&uint8_t buf[4] = v9;
    __int16 v25 = 2081;
    uint64_t v26 = v10;
    __int16 v27 = 2081;
    int v28 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: Starting to monitor %{private}s/%{private}s for %{private}s",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    else {
      int v13 = (uint64_t *)*a2;
    }
    __int16 v14 = a2 + 3;
    int v15 = "exit";
    if (a3) {
      int v15 = "entry";
    }
    int v18 = 136381187;
    __int16 v19 = v13;
    __int16 v20 = 2081;
    uint64_t v21 = v14;
    __int16 v22 = 2081;
    uint64_t v23 = v15;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Starting to monitor %{private}s/%{private}s for %{private}s",  &v18,  32);
    int v17 = (char *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitorWifi::addFence(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, BOOL)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

  if (*((_DWORD *)a2 + 46) == -1) {
    sub_10125903C();
  }
  *(void *)std::stringbuf::string_type buf = a2;
  sub_100A0C5D8(a1, a4);
  sub_100A0BF70((void *)a1);
  return 1LL;
}

void sub_100A0C5D8(uint64_t a1, double a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  double v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 312);
    int v6 = *(_DWORD *)(a1 + 320);
    *(_DWORD *)std::stringbuf::string_type buf = 134349312;
    uint64_t v16 = v5;
    __int16 v17 = 1026;
    int v18 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: resetConsecutiveExits start, %{public}.1lf, count, %{public}d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    uint64_t v7 = *(void *)(a1 + 312);
    int v8 = *(_DWORD *)(a1 + 320);
    int v11 = 134349312;
    uint64_t v12 = v7;
    __int16 v13 = 1026;
    int v14 = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: resetConsecutiveExits start, %{public}.1lf, count, %{public}d",  &v11,  18);
    __int16 v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::resetConsecutiveExits(const CFAbsoluteTime)",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  *(double *)(a1 + 312) = a2;
  *(_DWORD *)(a1 + 320) = 0;
  *(_BYTE *)(a1 + 324) = 0;
}

uint64_t sub_100A0C7C0(uint64_t a1, unsigned __int8 *a2, double a3)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  int v6 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    if ((a2[23] & 0x80u) == 0) {
      uint64_t v7 = (uint64_t *)a2;
    }
    else {
      uint64_t v7 = *(uint64_t **)a2;
    }
    if ((a2[47] & 0x80u) == 0) {
      int v8 = (uint64_t *)(a2 + 24);
    }
    else {
      int v8 = (uint64_t *)*((void *)a2 + 3);
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136380931;
    __int16 v19 = v7;
    __int16 v20 = 2081;
    uint64_t v21 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Fence: Stopping monitoring for %{private}s/%{private}s",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    if ((a2[23] & 0x80u) == 0) {
      __int16 v10 = (uint64_t *)a2;
    }
    else {
      __int16 v10 = *(uint64_t **)a2;
    }
    if ((a2[47] & 0x80u) == 0) {
      int v11 = (uint64_t *)(a2 + 24);
    }
    else {
      int v11 = (uint64_t *)*((void *)a2 + 3);
    }
    int v14 = 136380931;
    int v15 = v10;
    __int16 v16 = 2081;
    __int16 v17 = v11;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Stopping monitoring for %{private}s/%{private}s",  &v14,  22);
    __int16 v13 = (uint8_t *)v12;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitorWifi::removeFence(const CFAbsoluteTime, const CLFenceManager_Type::Fence &)",  "%s\n",  v12);
    if (v13 != buf) {
      free(v13);
    }
  }

  sub_100A1076C((uint64_t **)(a1 + 248), a2);
  sub_100A0C5D8(a1, a3);
  sub_100A0BF70((void *)a1);
  return 1LL;
}

__n128 sub_100A0C9FC(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  *(_OWORD *)(a1 + 24) = a2[1];
  *(_OWORD *)(a1 + 8) = v2;
  __int128 v3 = a2[2];
  __int128 v4 = a2[3];
  __int128 v5 = a2[4];
  *(_OWORD *)(a1 + 88) = a2[5];
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 40) = v3;
  __n128 result = (__n128)a2[6];
  __int128 v7 = a2[7];
  __int128 v8 = a2[8];
  *(_OWORD *)(a1 + 148) = *(__int128 *)((char *)a2 + 140);
  *(_OWORD *)(a1 + 136) = v8;
  *(_OWORD *)(a1 + 120) = v7;
  *(__n128 *)(a1 + 104) = result;
  return result;
}

uint64_t sub_100A0CA40(void *a1, uint64_t *a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  __int128 v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    else {
      __int128 v5 = (uint64_t *)*a2;
    }
    else {
      int v6 = (uint64_t *)a2[3];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136380931;
    uint64_t v21 = v5;
    __int16 v22 = 2081;
    uint64_t v23 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Fence: Got monitoring data changed for %{private}s/%{private}s; recalculating",
      buf,
      0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    else {
      __int128 v8 = (uint64_t *)*a2;
    }
    int v9 = *((char *)a2 + 47);
    uint64_t v12 = (uint64_t *)a2[3];
    int v11 = a2 + 3;
    __int16 v10 = v12;
    if (v9 >= 0) {
      __int16 v13 = v11;
    }
    else {
      __int16 v13 = v10;
    }
    int v16 = 136380931;
    __int16 v17 = v8;
    __int16 v18 = 2081;
    __int16 v19 = v13;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Got monitoring data changed for %{private}s/%{private}s; recalculating",
      &v16,
      22);
    int v15 = (uint8_t *)v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleMonitoringDataChanged(const CLFenceManager_Type::Fence &)",  "%s\n",  v14);
    if (v15 != buf) {
      free(v15);
    }
  }

  return sub_100A0BF70(a1);
}

BOOL sub_100A0CC50(double *a1, double a2)
{
  int v4 = *((unsigned __int8 *)a1 + 297);
  double v5 = a1[38];
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  double v6 = a2 - v5;
  __int128 v7 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *((unsigned __int8 *)a1 + 298);
    *(_DWORD *)std::stringbuf::string_type buf = 67175169;
    int v23 = v4;
    __int16 v24 = 1025;
    int v25 = v8;
    __int16 v26 = 2049;
    double v27 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "isRecalculate, %{private}d, fIsRecalculationPending, %{private}d, sinceLastRecalculationTrigger, %{private}.1lf",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    int v11 = *((unsigned __int8 *)a1 + 298);
    v17[0] = 67175169;
    v17[1] = v4;
    __int16 v18 = 1025;
    int v19 = v11;
    __int16 v20 = 2049;
    double v21 = v6;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "isRecalculate, %{private}d, fIsRecalculationPending, %{private}d, sinceLastRecalculationTrigger, %{private}.1lf",  v17,  24);
    __int16 v13 = (uint8_t *)v12;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitorWifi::recalculateIfNeeded(const CFAbsoluteTime)",  "%s\n",  v12);
    if (v13 != buf) {
      free(v13);
    }
  }

  if (v4)
  {
    sub_100A0BF70(a1);
    a1[38] = a2;
  }

  else if (!*((_BYTE *)a1 + 298) && (*(unsigned int (**)(void))(**(void **)a1 + 80LL))(*(void *)a1))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    int v9 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Fence: power assertion no longer needed",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      LOWORD(v17[0]) = 0;
      LODWORD(v16) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: power assertion no longer needed",  v17,  v16);
      int v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFenceMonitorWifi::recalculateIfNeeded(const CFAbsoluteTime)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    (*(void (**)(void))(**(void **)a1 + 72LL))(*(void *)a1);
  }

  return v4 != 0;
}

uint64_t sub_100A0CFC0(float64x2_t *a1, uint64_t *a2, uint64_t *a3)
{
  float64x2_t v3 = (float64x2_t)vdupq_lane_s64(*a2, 0);
  float64x2_t v4 = vabdq_f64(v3, a1[24]);
  float64x2_t v5 = vabdq_f64(v3, a1[23]);
  float64x2_t v6 = (float64x2_t)vdupq_lane_s64(*a3, 0);
  int8x8_t v7 = vorr_s8( vand_s8((int8x8_t)vmovn_s64(vcgeq_f64(v6, v5)), (int8x8_t)0x8000000004LL),  vand_s8((int8x8_t)vmovn_s64(vcgeq_f64(v6, v4)), (int8x8_t)0x800000100LL));
  return v7.i32[0] | v7.i32[1] | (16 * (vabdd_f64(*(double *)a2, a1[25].f64[0]) <= *(double *)a3));
}

void sub_100A0D02C( void *a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, signed int a7, _BYTE *a8)
{
  __int128 v16 = *(_OWORD *)(a1 + 13);
  __int128 v17 = *(_OWORD *)(a1 + 17);
  v28[7] = *(_OWORD *)(a1 + 15);
  v29[0] = v17;
  *(_OWORD *)((char *)v29 + 12) = *(_OWORD *)((char *)a1 + 148);
  __int128 v18 = *(_OWORD *)(a1 + 5);
  __int128 v19 = *(_OWORD *)(a1 + 9);
  v28[3] = *(_OWORD *)(a1 + 7);
  v28[4] = v19;
  v28[5] = *(_OWORD *)(a1 + 11);
  v28[6] = v16;
  __int128 v20 = *(_OWORD *)(a1 + 3);
  v28[0] = *(_OWORD *)(a1 + 1);
  v28[1] = v20;
  v28[2] = v18;
  double v21 = sub_100869764((uint64_t)v28);
  __int16 v22 = (void *)a1[27];
  int v23 = (*(uint64_t (**)(void, double))(*(void *)*a1 + 24LL))(*a1, v21);
  (*(void (**)(void **__return_ptr))(*(void *)*a1 + 32LL))(v26);
  v30[0] = &off_101867098;
  v30[1] = a1;
  double v31 = v30;
  sub_100FF6CFC(v22, a2, a3, v23, (uint64_t)v26, (uint64_t)v28, a4, a5, a6, a7, a8, (uint64_t)v30);
  __int16 v24 = v31;
  if (v31 == v30)
  {
    uint64_t v25 = 4LL;
    __int16 v24 = v30;
  }

  else
  {
    if (!v31) {
      goto LABEL_6;
    }
    uint64_t v25 = 5LL;
  }

  (*(void (**)(void))(*v24 + 8 * v25))();
LABEL_6:
  if (v27 < 0) {
    operator delete(v26[1]);
  }
}

void sub_100A0D1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  int v9 = *(void **)(v7 - 112);
  if (v9 == v6)
  {
    uint64_t v10 = 4LL;
    int v9 = (void *)(v7 - 136);
  }

  else
  {
    if (!v9) {
      goto LABEL_6;
    }
    uint64_t v10 = 5LL;
  }

  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_6:
  sub_101259208((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100A0D1F8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 296);
}

uint64_t sub_100A0D200(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 237);
}

uint64_t sub_100A0D208(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = sub_100700B84(a1 + 272, a2);
  if (a1 + 280 == v3) {
    return 0LL;
  }
  else {
    return *(unsigned int *)(v3 + 280);
  }
}

uint64_t sub_100A0D244(uint64_t a1)
{
  return *(unsigned int *)(a1 + 240);
}

void sub_100A0D24C(void *a1, double a2)
{
  char v85 = 0;
  uint64_t v82 = 0LL;
  uint64_t v83 = 0LL;
  uint64_t v84 = 0LL;
  uint64_t v79 = 0LL;
  uint64_t v80 = 0LL;
  uint64_t v81 = 0LL;
  __int128 v77 = 0uLL;
  uint64_t v78 = 0LL;
  uint64_t v4 = a1[33];
  if (!*((_BYTE *)a1 + 233))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    int v11 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Fence: isWifiTrackingAvailable is false",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_65;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    *(_WORD *)__int16 v86 = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: isWifiTrackingAvailable is false",  v86,  2);
    __int16 v13 = (uint8_t *)v12;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v12);
LABEL_60:
    if (v13 != buf) {
      free(v13);
    }
    goto LABEL_65;
  }

  (*(void (**)(void))(*(void *)*a1 + 40LL))();
  sub_100A105C8((uint64_t)(a1 + 34), (void *)a1[35]);
  a1[35] = 0LL;
  a1[36] = 0LL;
  a1[34] = a1 + 35;
  *((_DWORD *)a1 + 60) = 0;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  float64x2_t v5 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *((unsigned __int8 *)a1 + 234);
    int v7 = *((unsigned __int8 *)a1 + 235);
    *(_DWORD *)std::stringbuf::string_type buf = 134284033;
    *(void *)&uint8_t buf[4] = v4;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = v6;
    *(_WORD *)&_BYTE buf[18] = 1026;
    *(_DWORD *)&_BYTE buf[20] = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Fence: Recalculating monitored WiFis for %{private}ld monitored fences, %{public}d,%{public}d",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    int v50 = *((unsigned __int8 *)a1 + 234);
    int v51 = *((unsigned __int8 *)a1 + 235);
    *(_DWORD *)__int16 v86 = 134284033;
    *(void *)&v86[4] = v4;
    __int16 v87 = 1026;
    *(_DWORD *)__int16 v88 = v50;
    *(_WORD *)&v88[4] = 1026;
    *(_DWORD *)&v88[6] = v51;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Recalculating monitored WiFis for %{private}ld monitored fences, %{public}d,%{public}d",  v86,  24);
    double v53 = (uint8_t *)v52;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v52);
    if (v53 != buf) {
      free(v53);
    }
  }

  sub_100ED0714((uint64_t)(a1 + 21), (uint64_t *)buf, a2, 120.0);
  sub_1002DD898((uint64_t *)&v77);
  __int128 v77 = *(_OWORD *)buf;
  uint64_t v78 = *(void *)&buf[16];
  memset(buf, 0, 24);
  *(void *)__int16 v86 = buf;
  sub_100023498((void ***)v86);
  if ((void)v77 == *((void *)&v77 + 1))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    int v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: No visible APs to use for fence calculation",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      *(_WORD *)__int16 v86 = 0;
      LODWORD(v74) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: No visible APs to use for fence calculation",  v86,  v74);
      int v65 = (uint8_t *)v64;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)",  "%s\n",  v64);
      if (v65 != buf) {
        free(v65);
      }
    }

    (*(void (**)(void, const char *, uint64_t, double))(*(void *)*a1 + 96LL))( *a1,  "refreshVisible",  1LL,  a2);
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  int v9 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134283521;
    *(void *)&uint8_t buf[4] = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)&v77 + 1) - v77) >> 3);
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "Fence: Including %{private}ld visible APs in fence calculation",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    *(_DWORD *)__int16 v86 = 134283521;
    *(void *)&v86[4] = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)&v77 + 1) - v77) >> 3);
    LODWORD(v74) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Including %{private}ld visible APs in fence calculation",  v86,  v74);
    double v55 = (uint8_t *)v54;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v54);
    if (v55 != buf) {
      free(v55);
    }
  }

  if (*((_BYTE *)sub_100D0ABC0() + 48)) {
    BOOL v10 = sub_10025D1C0((double *)a1 + 42, a2);
  }
  else {
    BOOL v10 = 1;
  }
  if (*((_BYTE *)a1 + 234) || !v4 || !v10)
  {
    if (v10) {
      uint64_t v18 = 2LL;
    }
    else {
      uint64_t v18 = 0LL;
    }
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    __int128 v19 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, (os_log_type_t)v18))
    {
      int v20 = *((unsigned __int8 *)a1 + 234);
      *(_DWORD *)std::stringbuf::string_type buf = 134284033;
      *(void *)&uint8_t buf[4] = v4;
      *(_WORD *)&_BYTE buf[12] = 1026;
      *(_DWORD *)&buf[14] = v20;
      *(_WORD *)&_BYTE buf[18] = 1026;
      *(_DWORD *)&_BYTE buf[20] = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  (os_log_type_t)v18,  "Fence: avoid fence calculateAPsForFences, numOfFences, %{private}lu, airplane, %{public}d, ePNO allowed by rate limiter, %{public}d",  buf,  0x18u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_65;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    int v21 = *((unsigned __int8 *)a1 + 234);
    *(_DWORD *)__int16 v86 = 134284033;
    *(void *)&v86[4] = v4;
    __int16 v87 = 1026;
    *(_DWORD *)__int16 v88 = v21;
    *(_WORD *)&v88[4] = 1026;
    *(_DWORD *)&v88[6] = v10;
    LODWORD(v74) = 24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  v18,  "Fence: avoid fence calculateAPsForFences, numOfFences, %{private}lu, airplane, %{public}d, ePNO allowed by rate li miter, %{public}d",  v86,  v74);
    __int16 v13 = (uint8_t *)v22;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v22);
    goto LABEL_60;
  }

  if (*((_BYTE *)a1 + 235) && (sub_1004F2598(), sub_1001B9A1C()))
  {
    *(void *)&uint8_t buf[8] = 0LL;
    *(void *)&uint8_t buf[16] = 0LL;
    *(void *)std::stringbuf::string_type buf = &buf[8];
    int v14 = (unsigned __int8 *)a1[31];
    if (v14 != (unsigned __int8 *)(a1 + 32))
    {
      while (*((void *)v14 + 33) == *((void *)v14 + 32))
      {
        if ((_os_feature_enabled_impl("CoreLocation", "cl_fence_handoff") & 1) == 0)
        {
          uint64_t v15 = 64LL;
LABEL_40:
          if ((*((void *)v14 + 24) & v15) != 0) {
            sub_100A10878((uint64_t **)buf, v14 + 32, (uint64_t)(v14 + 32));
          }
        }

        __int128 v16 = (unsigned __int8 *)*((void *)v14 + 1);
        if (v16)
        {
          do
          {
            __int128 v17 = v16;
            __int128 v16 = *(unsigned __int8 **)v16;
          }

          while (v16);
        }

        else
        {
          do
          {
            __int128 v17 = (unsigned __int8 *)*((void *)v14 + 2);
            BOOL v41 = *(void *)v17 == (void)v14;
            int v14 = v17;
          }

          while (!v41);
        }

        int v14 = v17;
        if (v17 == (unsigned __int8 *)(a1 + 32))
        {
          uint64_t v4 = *(void *)&buf[16];
          goto LABEL_64;
        }
      }

      uint64_t v15 = 8LL;
      goto LABEL_40;
    }

    uint64_t v4 = 0LL;
LABEL_64:
    uint64_t v25 = sub_1004F2598();
    signed int v26 = sub_1004F914C(v25);
    sub_100A0D02C(a1, buf, (uint64_t)(a1 + 34), &v82, &v79, (uint64_t *)&v77, v26, &v85);
    sub_100A10500((uint64_t)buf, *(void **)&buf[8]);
  }

  else
  {
    uint64_t v23 = sub_1004F2598();
    signed int v24 = sub_1004F914C(v23);
    sub_100A0D02C(a1, a1 + 31, (uint64_t)(a1 + 34), &v82, &v79, (uint64_t *)&v77, v24, &v85);
  }

void sub_100A0E8C0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, void **a31)
{
  a31 = (void **)&a17;
  sub_100023498(&a31);
  a31 = (void **)&a20;
  sub_100023498(&a31);
  a31 = (void **)&a23;
  sub_100023498(&a31);
  _Unwind_Resume(a1);
}

void sub_100A0E984(_BYTE *a1, int a2, double a3)
{
  if (a1[234] || !a1[232])
  {
    sub_100ED01E8((uint64_t)(a1 + 168));
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    int v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      int v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Fence: Got kNotificationPower, isWifiPowered, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      v13[0] = 67240192;
      v13[1] = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Got kNotificationPower, isWifiPowered, %{public}d",  v13,  8);
      int v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleWifiPower(const CFAbsoluteTime, BOOL)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }

    if ((a2 & 1) == 0 && a1[237])
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      int v7 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Fence: considered not in leash, power",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        LOWORD(v13[0]) = 0;
        LODWORD(v12) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: considered not in leash, power",  v13,  v12);
        int v11 = (uint8_t *)v10;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleWifiPower(const CFAbsoluteTime, BOOL)",  "%s\n",  v10);
        if (v11 != buf) {
          free(v11);
        }
      }

      a1[237] = 0;
    }

    (*(void (**)(void, const char *, uint64_t, double))(**(void **)a1 + 96LL))( *(void *)a1,  "power",  1LL,  a3);
  }

void sub_100A0ECE8(uint64_t a1, int a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101867068);
  }
  uint64_t v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67174657;
    int v9 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: Got kNotificationWow, WoW, %{private}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    v7[0] = 67174657;
    v7[1] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: Got kNotificationWow, WoW, %{private}d",  v7,  8);
    int v6 = (uint8_t *)v5;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorWifi::handleWifiWow(BOOL)", "%s\n", v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  *(_BYTE *)(a1 + 236) = a2;
}

void sub_100A0EE98(uint64_t a1, double a2)
{
  *(double *)(a1 + 392) = a2;
  sub_100A0C5D8(a1, a2);
}

void sub_100A0EEA0(double *a1, double a2)
{
  if (*((_BYTE *)sub_100D0ABC0() + 48)) {
    char v4 = sub_10025D100((uint64_t)(a1 + 42), a2);
  }
  else {
    char v4 = 1;
  }
  if (*((_BYTE *)a1 + 234) || !*((_BYTE *)a1 + 232))
  {
    sub_100ED01E8((uint64_t)(a1 + 21));
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    float64x2_t v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136380675;
      int v21 = "kNotificationBackgroundExit";
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "Fence: Got WiFi %{private}s, sending kNotificationTriggerReceived",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      int v18 = 136380675;
      __int128 v19 = "kNotificationBackgroundExit";
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Got WiFi %{private}s, sending kNotificationTriggerReceived",  &v18,  12);
      int v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleWifiBackgroundExit(const CFAbsoluteTime)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }

    sub_100A0F3DC(a1, v4, (uint64_t)"kNotificationBackgroundExit");
    if ((v4 & 1) == 0)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      int v6 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136380675;
        int v21 = "kNotificationBackgroundExit";
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Fence: Clearing ePNO networks (rate limited): %{private}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        int v18 = 136380675;
        __int128 v19 = "kNotificationBackgroundExit";
        LODWORD(v17) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Clearing ePNO networks (rate limited): %{private}s",  &v18,  v17);
        __int16 v13 = (uint8_t *)v12;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleWifiBackgroundExit(const CFAbsoluteTime)",  "%s\n",  v12);
        if (v13 != buf) {
          free(v13);
        }
      }

      (*(void (**)(void))(**(void **)a1 + 40LL))(*(void *)a1);
    }

    a1[47] = a2;
    int v7 = *((_DWORD *)a1 + 80);
    *((_DWORD *)a1 + 80) = v7 + 1;
    *((_BYTE *)a1 + 324) = 1;
    if (v7)
    {
      if ((v7 + 1) >= 2 && *((_BYTE *)a1 + 237))
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        int v8 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          int v9 = *((_DWORD *)a1 + 80);
          *(_DWORD *)std::stringbuf::string_type buf = 67174657;
          LODWORD(v21) = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: considered not in leash, exit, %{private}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101867068);
          }
          int v14 = *((_DWORD *)a1 + 80);
          int v18 = 67174657;
          LODWORD(v19) = v14;
          LODWORD(v17) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: considered not in leash, exit, %{private}d",  &v18,  v17);
          __int128 v16 = (uint8_t *)v15;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleWifiBackgroundExit(const CFAbsoluteTime)",  "%s\n",  v15);
          if (v16 != buf) {
            free(v16);
          }
        }

        *((_BYTE *)a1 + 237) = 0;
      }
    }

    else
    {
      a1[39] = a2;
    }

    (*(void (**)(void, double))(**(void **)a1 + 112LL))(*(void *)a1, a2);
  }

void sub_100A0F3DC(void *a1, char a2, uint64_t a3)
{
  uint64_t v5 = a1[33];
  if (*((_BYTE *)a1 + 233)) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    int v7 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *((unsigned __int8 *)a1 + 234);
      *(_DWORD *)std::stringbuf::string_type buf = 136381187;
      uint64_t v25 = a3;
      __int16 v26 = 1025;
      int v27 = v8;
      __int16 v28 = 1025;
      BOOL v29 = v5 != 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Fence: power assertion not needed, reason, %{private}s, airplane, %{private}d, isMonitoringFences, %{private}d",  buf,  0x18u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      int v9 = *((unsigned __int8 *)a1 + 234);
      int v18 = 136381187;
      uint64_t v19 = a3;
      __int16 v20 = 1025;
      int v21 = v9;
      __int16 v22 = 1025;
      BOOL v23 = v5 != 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: power assertion not needed, reason, %{private}s, airplane, %{private}d, isMonitoringFences, %{private}d",  &v18,  24);
      int v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::takePowerAssertionIfNeeded(BOOL, const char *)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    __int16 v13 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      int v14 = *((unsigned __int8 *)a1 + 234);
      *(_DWORD *)std::stringbuf::string_type buf = 136380931;
      uint64_t v25 = a3;
      __int16 v26 = 1025;
      int v27 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "Fence: take power assertion, reason, %{private}s, airplane, %{private}d",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      int v15 = *((unsigned __int8 *)a1 + 234);
      int v18 = 136380931;
      uint64_t v19 = a3;
      __int16 v20 = 1025;
      int v21 = v15;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: take power assertion, reason, %{private}s, airplane, %{private}d",  &v18,  18);
      uint64_t v17 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::takePowerAssertionIfNeeded(BOOL, const char *)",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }

    if (!*((_BYTE *)a1 + 234)) {
      (*(void (**)(void, uint64_t))(*(void *)*a1 + 64LL))(*a1, a3);
    }
    *((_BYTE *)a1 + 297) = a2;
  }

void sub_100A0F768(double *a1, double a2)
{
  if (*((_BYTE *)sub_100D0ABC0() + 48)) {
    char v4 = sub_10025D100((uint64_t)(a1 + 42), a2);
  }
  else {
    char v4 = 1;
  }
  if (*((_BYTE *)a1 + 234) || !*((_BYTE *)a1 + 232))
  {
    sub_100ED01E8((uint64_t)(a1 + 21));
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    uint64_t v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136380675;
      int v15 = "kNotificationBackgroundEntry";
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "Fence: Got WiFi %{private}s, sending kNotificationTriggerReceived",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      int v12 = 136380675;
      __int16 v13 = "kNotificationBackgroundEntry";
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Got WiFi %{private}s, sending kNotificationTriggerReceived",  &v12,  12);
      int v8 = (uint8_t *)v7;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleWifiBackgroundEntry(const CFAbsoluteTime)",  "%s\n",  v7);
      if (v8 != buf) {
        free(v8);
      }
    }

    sub_100A0F3DC(a1, v4, (uint64_t)"kNotificationBackgroundEntry");
    if ((v4 & 1) == 0)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      BOOL v6 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 136380675;
        int v15 = "kNotificationBackgroundEntry";
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Fence: Clearing ePNO networks (rate limited): %{private}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        int v12 = 136380675;
        __int16 v13 = "kNotificationBackgroundEntry";
        LODWORD(v11) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: Clearing ePNO networks (rate limited): %{private}s",  &v12,  v11);
        BOOL v10 = (uint8_t *)v9;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleWifiBackgroundEntry(const CFAbsoluteTime)",  "%s\n",  v9);
        if (v10 != buf) {
          free(v10);
        }
      }

      (*(void (**)(void))(**(void **)a1 + 40LL))(*(void *)a1);
    }

    a1[48] = a2;
    sub_100A0C5D8((uint64_t)a1, a2);
    (*(void (**)(void, double))(**(void **)a1 + 104LL))(*(void *)a1, a2);
  }

void sub_100A0FB34(uint64_t a1, double *a2, double a3)
{
  if (*(_BYTE *)(a1 + 234) || !*(_BYTE *)(a1 + 232))
  {
    sub_100ED01E8(a1 + 168);
  }

  else
  {
    sub_100ED01F0(a1 + 168, (uint64_t)a2, a3);
    double v6 = *a2;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    double v7 = vabdd_f64(a3, v6);
    int v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3);
      *(_DWORD *)std::stringbuf::string_type buf = 134283777;
      double v22 = *(double *)&v9;
      __int16 v23 = 2049;
      double v24 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "Fence: fLastScanResult, %{private}lu, age, %{private}.1lf",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      uint64_t v11 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3);
      int v17 = 134283777;
      double v18 = *(double *)&v11;
      __int16 v19 = 2049;
      double v20 = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: fLastScanResult, %{private}lu, age, %{private}.1lf",  &v17,  22);
      __int16 v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleWifiScan(const CFAbsoluteTime, const CLWifiService_Type::ScanResult &)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    if (v7 >= 120.0)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      BOOL v10 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134283521;
        double v22 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Warning Fence: scan result is too old, request one more scan, age, %{private}.1lf ",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        int v17 = 134283521;
        double v18 = v7;
        LODWORD(v16) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning Fence: scan result is too old, request one more scan, age, %{private}.1lf ",  &v17,  v16);
        int v15 = (uint8_t *)v14;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleWifiScan(const CFAbsoluteTime, const CLWifiService_Type::ScanResult &)",  "%s\n",  v14);
        if (v15 != buf) {
          free(v15);
        }
      }
    }

    else if (*((void *)a2 + 1) != *((void *)a2 + 2))
    {
      *(double *)(a1 + 400) = a3;
    }
  }

void sub_100A0FF0C(double *a1, int *a2, double a3)
{
  int v6 = a2[1];
  if (*a2 == 2)
  {
    if (v6 != 2)
    {
      a1[46] = a3;
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      double v7 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        int v8 = *a2;
        int v9 = a2[1];
        int v10 = *((unsigned __int8 *)a2 + 8);
        int v11 = *((unsigned __int8 *)a2 + 9);
        *(_DWORD *)std::stringbuf::string_type buf = 67175425;
        int v42 = v8;
        __int16 v43 = 1025;
        int v44 = v9;
        __int16 v45 = 1025;
        int v46 = v10;
        __int16 v47 = 1025;
        int v48 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Fence: WiFi just lost (from %{private}d to %{private}d); sending trigger, aboutToSleep, %{private}d, recentlyW"
          "oke, %{private}d,",
          buf,
          0x1Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        int v20 = *a2;
        int v21 = a2[1];
        int v22 = *((unsigned __int8 *)a2 + 8);
        int v23 = *((unsigned __int8 *)a2 + 9);
        int v33 = 67175425;
        int v34 = v20;
        __int16 v35 = 1025;
        int v36 = v21;
        __int16 v37 = 1025;
        int v38 = v22;
        __int16 v39 = 1025;
        int v40 = v23;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: WiFi just lost (from %{private}d to %{private}d); sending trigger, aboutToSleep, %{private}d, recentlyW"
          "oke, %{private}d,",
          &v33,
          26);
        uint64_t v25 = (uint8_t *)v24;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleReachability(const CFAbsoluteTime, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v24);
        if (v25 != buf) {
          free(v25);
        }
      }

      if (*((_BYTE *)a2 + 8) || !*((_BYTE *)a1 + 236) && *((_BYTE *)a2 + 9))
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101867068);
        }
        int v12 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Fence: about to sleep or recently woke without WoW, ignoring, kNotificationReachability",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101867068);
          }
          LOWORD(v33) = 0;
          LODWORD(v32) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: about to sleep or recently woke without WoW, ignoring, kNotificationReachability",  &v33,  v32);
          int v14 = (uint8_t *)v13;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleReachability(const CFAbsoluteTime, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v13);
          if (v14 != buf) {
            free(v14);
          }
        }
      }

      else
      {
        sub_100A0F3DC(a1, 1, (uint64_t)"Disconnection");
        (*(void (**)(void, const char *, uint64_t, double))(**(void **)a1 + 96LL))( *(void *)a1,  "disconnected",  1LL,  a3);
        if (!*((_BYTE *)a1 + 233) && vabdd_f64(a3, a1[41]) >= 900.0)
        {
          (*(void (**)(void, double))(**(void **)a1 + 120LL))(*(void *)a1, a3);
          a1[41] = a3;
        }
      }
    }
  }

  else if (v6 == 2)
  {
    a1[46] = a3;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101867068);
    }
    int v15 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v16 = *a2;
      int v17 = a2[1];
      int v18 = *((unsigned __int8 *)a2 + 8);
      int v19 = *((unsigned __int8 *)a2 + 9);
      *(_DWORD *)std::stringbuf::string_type buf = 67175425;
      int v42 = v16;
      __int16 v43 = 1025;
      int v44 = v17;
      __int16 v45 = 1025;
      int v46 = v18;
      __int16 v47 = 1025;
      int v48 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "Fence: WiFi just connected (from %{private}d to %{private}d); sending trigger, aboutToSleep, %{private}d, recent"
        "lyWoke, %{private}d,",
        buf,
        0x1Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101867068);
      }
      int v26 = *a2;
      int v27 = a2[1];
      int v28 = *((unsigned __int8 *)a2 + 8);
      int v29 = *((unsigned __int8 *)a2 + 9);
      int v33 = 67175425;
      int v34 = v26;
      __int16 v35 = 1025;
      int v36 = v27;
      __int16 v37 = 1025;
      int v38 = v28;
      __int16 v39 = 1025;
      int v40 = v29;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: WiFi just connected (from %{private}d to %{private}d); sending trigger, aboutToSleep, %{private}d, recent"
        "lyWoke, %{private}d,",
        &v33,
        26);
      unsigned int v31 = (uint8_t *)v30;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorWifi::handleReachability(const CFAbsoluteTime, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v30);
      if (v31 != buf) {
        free(v31);
      }
    }

    if (!*((_BYTE *)a2 + 8)) {
      sub_100A0F3DC(a1, 1, (uint64_t)"Connection");
    }
    (*(void (**)(void))(**(void **)a1 + 128LL))(*(void *)a1);
    (*(void (**)(void, const char *, uint64_t, double))(**(void **)a1 + 96LL))( *(void *)a1,  "connected",  1LL,  a3);
  }

void sub_100A104D4(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_100A10500(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100A10500(a1, *a2);
    sub_100A10500(a1, a2[1]);
    sub_100A10548((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100A10548(uint64_t a1)
{
  __int128 v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }
}

void sub_100A105C8(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100A105C8(a1, *a2);
    sub_100A105C8(a1, a2[1]);
    sub_100950DC8((uint64_t)(a2 + 4));
    operator delete(a2);
  }

uint64_t *sub_100A10610(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  int v6 = (uint64_t **)sub_1006695D4((uint64_t)a1, &v11, a2);
  double v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_100A106B8((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000085FC(a1, v11, v8, v10[0]);
    double v7 = v10[0];
    v10[0] = 0LL;
    sub_100A10728((uint64_t)v10, 0LL);
  }

  return v7;
}

char *sub_100A106B8@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = (char *)operator new(0x120uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  __n128 result = sub_1002718F0(v6 + 32, *a2);
  v6[280] = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100A10710(_Unwind_Exception *a1)
{
}

void sub_100A10728(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100A10548((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

uint64_t sub_100A1076C(uint64_t **a1, unsigned __int8 *a2)
{
  uint64_t v3 = (uint64_t *)sub_100700B84((uint64_t)a1, a2);
  char v4 = v3;
  sub_1000087E8(a1, v3);
  sub_100A10548((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1LL;
}

void *sub_100A107CC(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = &off_101867098;
  result[1] = v3;
  return result;
}

uint64_t sub_100A10800(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_101867098;
  a2[1] = v2;
  return result;
}

uint64_t sub_100A1081C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(***(void ***)(a1 + 8) + 144LL))(**(void **)(a1 + 8));
}

uint64_t sub_100A10830(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100A1086C()
{
}

uint64_t *sub_100A10878(uint64_t **a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)sub_1006695D4((uint64_t)a1, &v10, a2);
  int v6 = *v5;
  if (!*v5)
  {
    double v7 = v5;
    sub_100A10908((uint64_t)a1, a3, (uint64_t)v9);
    sub_1000085FC(a1, v10, v7, v9[0]);
    int v6 = v9[0];
    v9[0] = 0LL;
    sub_100A10728((uint64_t)v9, 0LL);
  }

  return v6;
}

char *sub_100A10908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = (char *)operator new(0x120uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  __n128 result = sub_1002718F0(v6 + 32, (__int128 *)a2);
  v6[280] = *(_BYTE *)(a2 + 248);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100A10964(_Unwind_Exception *a1)
{
}

void sub_100A1097C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  (*(void (**)(uint64_t))(*(void *)a3 + 16LL))(a3);
  *(_WORD *)(a1 + 24) = 256;
  *(_DWORD *)(a1 + 32) = std::uncaught_exceptions();
  if (a2)
  {
    sub_100A10A2C((sqlite3 **)a1);
  }

  else
  {
    sub_101259228();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/Utilities/CLSqliteTransaction.mm",  24,  "CLSqliteTransaction");
    __break(1u);
  }

void sub_100A10A18(_Unwind_Exception *a1)
{
}

uint64_t sub_100A10A2C(sqlite3 **a1)
{
  uint64_t result = sqlite3_exec(*a1, "BEGIN EXCLUSIVE TRANSACTION", 0LL, 0LL, 0LL);
  if ((_DWORD)result)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101867118);
    }
    uint64_t v3 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf.__vftable) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "#sqlitetransaction, begin exclusive transaction failed",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101867118);
      }
      v10[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  off_101934A28,  16LL,  "#sqlitetransaction, begin exclusive transaction failed",  v10,  2);
      int v9 = (std::runtime_error *)v8;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLSqliteTransaction::beginTransaction()", "%s\n", v8);
      if (v9 != &buf) {
        free(v9);
      }
    }

    sub_100A112B8(a1, *a1, (uint64_t)&buf);
    exception = (std::runtime_error *)__cxa_allocate_exception(0x48uLL);
    uint64_t v5 = std::runtime_error::runtime_error(exception, &buf);
    v5->__vftable = (std::runtime_error_vtbl *)off_10183C138;
    std::runtime_error v6 = v12;
    v5[2].__vftable = v13;
    v5[1] = v6;
    std::runtime_error v12 = (std::runtime_error)0LL;
    LODWORD(v5[2].__imp_.__imp_) = v14;
    std::runtime_error v7 = v15;
    v5[4].__vftable = v16;
    void v5[3] = v7;
    __int16 v13 = 0LL;
    std::runtime_error v15 = (std::runtime_error)0LL;
    int v16 = 0LL;
  }

  return result;
}

void sub_100A10C5C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::runtime_error a13)
{
}

uint64_t sub_100A10C7C(uint64_t a1)
{
  if (*(void *)a1)
  {
    if (std::uncaught_exceptions() <= *(_DWORD *)(a1 + 32)) {
      sub_100A11068((sqlite3 **)a1);
    }
    else {
      sub_100A10D3C((sqlite3 **)a1);
    }
  }

  if (*(_BYTE *)(a1 + 25))
  {
    if (*(_BYTE *)(a1 + 24)) {
      pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 16));
    }
    else {
      (*(void (**)(void))(**(void **)(a1 + 8) + 24LL))(*(void *)(a1 + 8));
    }
    *(_BYTE *)(a1 + 25) = 0;
  }

  return a1;
}

void sub_100A10D3C(sqlite3 **a1)
{
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101867118);
  }
  uint64_t v2 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::runtime_error buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "rollback #sqlitetransaction", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101867118);
    }
    v14[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  1LL,  "rollback #sqlitetransaction",  v14,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSqliteTransaction::rollback()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  if (sqlite3_exec(*a1, "ROLLBACK TRANSACTION", 0LL, 0LL, 0LL))
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101867118);
    }
    uint64_t v3 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "#sqlitetransaction, rollback transaction failed",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101867118);
      }
      v14[0] = 0;
      LODWORD(v8) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  16LL,  "#sqlitetransaction, rollback transaction failed",  v14,  v8);
      std::runtime_error v7 = (uint8_t *)v6;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLSqliteTransaction::rollback()", "%s\n", v6);
      if (v7 != buf) {
        free(v7);
      }
    }

    sub_100A112B8(a1, *a1, (uint64_t)&v9);
    v9.__vftable = (std::runtime_error_vtbl *)off_10183C138;
    if (v13 < 0) {
      operator delete(__p);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
    std::runtime_error::~runtime_error(&v9);
  }

void sub_100A1105C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_100A11068(sqlite3 **a1)
{
  uint64_t result = sqlite3_exec(*a1, "COMMIT", 0LL, 0LL, 0LL);
  if ((_DWORD)result)
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101867118);
    }
    uint64_t v3 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf.__vftable) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "#sqlitetransaction, commit failed",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101867118);
      }
      v10[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  off_101934A28,  16LL,  "#sqlitetransaction, commit failed",  v10,  2);
      std::runtime_error v9 = (std::runtime_error *)v8;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLSqliteTransaction::commit()", "%s\n", v8);
      if (v9 != &buf) {
        free(v9);
      }
    }

    sub_100A112B8(a1, *a1, (uint64_t)&buf);
    exception = (std::runtime_error *)__cxa_allocate_exception(0x48uLL);
    uint64_t v5 = std::runtime_error::runtime_error(exception, &buf);
    v5->__vftable = (std::runtime_error_vtbl *)off_10183C138;
    std::runtime_error v6 = v12;
    v5[2].__vftable = v13;
    v5[1] = v6;
    std::runtime_error v12 = (std::runtime_error)0LL;
    LODWORD(v5[2].__imp_.__imp_) = v14;
    std::runtime_error v7 = v15;
    v5[4].__vftable = v16;
    void v5[3] = v7;
    char v13 = 0LL;
    std::runtime_error v15 = (std::runtime_error)0LL;
    int v16 = 0LL;
  }

  return result;
}

void sub_100A11298( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::runtime_error a13)
{
}

void sub_100A112B8(sqlite3 **a1@<X0>, sqlite3 *a2@<X1>, uint64_t a3@<X8>)
{
  int autocommit = sqlite3_get_autocommit(*a1);
  sub_100A11630(*a1, a3);
  int v13 = *(_DWORD *)(a3 + 40);
  int v7 = sqlite3_db_readonly(a2, "main");
  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101867118);
  }
  uint64_t v8 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_FAULT))
  {
    uint64_t v9 = *(char *)(a3 + 71) >= 0 ? a3 + 48 : *(void *)(a3 + 48);
    *(_DWORD *)std::runtime_error buf = 68290307;
    int v15 = 0;
    __int16 v16 = 2082;
    int v17 = "";
    __int16 v18 = 2082;
    uint64_t v19 = v9;
    __int16 v20 = 1040;
    int v21 = 4;
    __int16 v22 = 2098;
    int v23 = &v13;
    __int16 v24 = 2081;
    uint64_t v25 = std::runtime_error::what((const std::runtime_error *)a3);
    __int16 v26 = 1026;
    int v27 = autocommit;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:#sqlitetransaction error, path:%{public, location:escape_only}s, rc:%{public, loc ation:SqliteResult}.*P, errmsg:%{private, location:escape_only}s, autocommit:%{public}d}",  buf,  0x3Cu);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101867118);
    }
  }

  uint64_t v10 = (os_log_s *)off_101934A28;
  if (os_signpost_enabled((os_log_t)off_101934A28))
  {
    else {
      uint64_t v11 = *(void *)(a3 + 48);
    }
    std::runtime_error v12 = std::runtime_error::what((const std::runtime_error *)a3);
    *(_DWORD *)std::runtime_error buf = 68290307;
    int v15 = 0;
    __int16 v16 = 2082;
    int v17 = "";
    __int16 v18 = 2082;
    uint64_t v19 = v11;
    __int16 v20 = 1040;
    int v21 = 4;
    __int16 v22 = 2098;
    int v23 = &v13;
    __int16 v24 = 2081;
    uint64_t v25 = v12;
    __int16 v26 = 1026;
    int v27 = autocommit;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v10,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#sqlitetransaction error",  "{msg%{public}.0s:#sqlitetransaction error, path:%{public, location:escape_only}s, rc:%{public, loc ation:SqliteResult}.*P, errmsg:%{private, location:escape_only}s, autocommit:%{public}d}",  buf,  0x3Cu);
  }

  sub_1003B7D6C(a2, (char *)(a3 + 48), v7 != 0, v13);
}

void sub_100A11544(_Unwind_Exception *a1)
{
}

uint64_t sub_100A1155C(uint64_t a1, const std::string *a2, int a3, __int128 *a4)
{
  uint64_t v8 = std::runtime_error::runtime_error((std::runtime_error *)a1, a2);
  v8->__vftable = (std::runtime_error_vtbl *)off_10183C138;
  if ((char)a2->__r_.__value_.__s.__size_ < 0)
  {
    sub_1010DD48C(&v8[1], a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
  }

  else
  {
    std::runtime_error v9 = *(std::runtime_error *)&a2->__r_.__value_.__l.__data_;
    v8[2].__vftable = (std::runtime_error_vtbl *)a2->__r_.__value_.__l.__cap_;
    v8[1] = v9;
  }

  *(_DWORD *)(a1 + 40) = a3;
  uint64_t v10 = (_BYTE *)(a1 + 48);
  if (*((char *)a4 + 23) < 0)
  {
    sub_1010DD48C(v10, *(void **)a4, *((void *)a4 + 1));
  }

  else
  {
    __int128 v11 = *a4;
    *(void *)(a1 + 64) = *((void *)a4 + 2);
    *(_OWORD *)uint64_t v10 = v11;
  }

  return a1;
}

void sub_100A11604(_Unwind_Exception *a1)
{
}

void sub_100A11630(sqlite3 *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = sqlite3_db_filename(a1, "main");
  if (v4) {
    uint64_t v5 = (char *)v4;
  }
  else {
    uint64_t v5 = "Path unavailable";
  }
  sub_1010DDBC0(v9, v5);
  std::runtime_error v6 = (char *)sqlite3_errmsg(a1);
  sub_1010DDBC0(&__p, v6);
  int v7 = sqlite3_errcode(a1);
  sub_100A1155C(a2, &__p, v7, (__int128 *)v9);
  if (v10 < 0) {
    operator delete(v9[0]);
  }
}

void sub_100A116CC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A11700(id a1)
{
  off_101934A28 = os_log_create("com.apple.locationd.Utility", "Database");
}

uint64_t sub_100A1172C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100830FD0(a1, a2);
  *(void *)uint64_t v4 = &off_101867148;
  *(void *)(v4 + 1544) = 0x7FEFFFFFFFFFFFFFLL;
  *(_BYTE *)(v4 + 1552) = 0;
  sub_101204164((unsigned __int8 *)(v4 + 1816), "SimulateSkiWorkoutInterval", &qword_101343D48, 0);
  *(void *)(a1 + 32) = a2;
  *(_OWORD *)(a1 + 1560) = 0u;
  *(_OWORD *)(a1 + 1576) = 0u;
  *(_OWORD *)(a1 + 1592) = 0u;
  *(_OWORD *)(a1 + 1608) = 0u;
  *(_OWORD *)(a1 + 1624) = 0u;
  *(_OWORD *)(a1 + 1640) = 0u;
  *(_OWORD *)(a1 + 1656) = 0u;
  *(_OWORD *)(a1 + 1672) = 0u;
  *(_OWORD *)(a1 + 1688) = 0u;
  *(_OWORD *)(a1 + 1704) = 0u;
  *(_OWORD *)(a1 + 1720) = 0u;
  *(_OWORD *)(a1 + 1736) = 0u;
  *(_OWORD *)(a1 + 1752) = 0u;
  *(_OWORD *)(a1 + 1768) = 0u;
  *(_OWORD *)(a1 + 1784) = 0u;
  *(_OWORD *)(a1 + 1800) = 0u;
  return a1;
}

void sub_100A117B8(_Unwind_Exception *a1)
{
}

void sub_100A117D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double Current = CFAbsoluteTimeGetCurrent();
  double v5 = *(double *)(a1 + 1544);
  if (v5 == 1.79769313e308)
  {
    *(double *)(a1 + 1544) = Current;
    double v5 = Current;
  }

  if (vabdd_f64(Current, v5) >= *(double *)(a1 + 1824))
  {
    if (*(_BYTE *)(a1 + 1552))
    {
      *(_BYTE *)(a1 + 1552) = 0;
    }

    else
    {
      *(_BYTE *)(a1 + 1552) = 1;
      sub_100831540(a1);
    }

    *(double *)(a1 + 1544) = Current;
  }

  sub_100831740(a1, (uint64_t)&v30);
  int v6 = v30;
  double v7 = *(double *)(a1 + 1568);
  if (v7 == 0.0) {
    double v8 = 0.0;
  }
  else {
    double v8 = Current - v7;
  }
  sub_1008E8C38(&v29);
  std::random_device::result_type v9 = std::random_device::operator()(&v29);
  unsigned int v10 = v9 + ((v9 / 0x7FFFFFFF) | ((v9 / 0x7FFFFFFF) << 31));
  if (v10 <= 1) {
    unsigned int v10 = 1;
  }
  unsigned int v28 = v10;
  double v11 = sub_1008E8CA8(&v28) * 20.0 + 40.0;
  double v12 = sub_1008E8CA8(&v28) * 8.0 + 5.0;
  *(double *)(a1 + 1568) = Current;
  *(double *)(a1 + 1624) = Current;
  unsigned int v13 = (v8 * v11);
  if (*(_BYTE *)(a1 + 1552))
  {
    *(_DWORD *)(a1 + 1580) += v13;
  }

  else
  {
    *(_DWORD *)(a1 + 1576) += v13;
    if (v6 == 3) {
      goto LABEL_17;
    }
  }

  sub_100831D78(a1);
  *(double *)(a1 + 1672) = *(double *)(a1 + 1672) + v12 * v8;
  *(double *)(a1 + 1656) = v12;
  *(double *)(a1 + 1664) = v12;
  sub_100831D90(a1);
LABEL_17:
  if (qword_101934660 != -1) {
    dispatch_once(&qword_101934660, &stru_101867190);
  }
  int v14 = (os_log_s *)qword_101934668;
  if (os_log_type_enabled((os_log_t)qword_101934668, OS_LOG_TYPE_DEFAULT))
  {
    int v15 = *(unsigned __int8 *)(a1 + 1552);
    int v16 = *(_DWORD *)(a1 + 1576);
    int v17 = *(_DWORD *)(a1 + 1580);
    uint64_t v18 = *(void *)(a1 + 1672);
    uint64_t v19 = *(void *)(a1 + 1656);
    *(_DWORD *)std::runtime_error buf = 67110912;
    int v51 = v15;
    __int16 v52 = 1024;
    int v53 = v30;
    __int16 v54 = 2048;
    double v55 = v11;
    __int16 v56 = 1024;
    int v57 = v16;
    __int16 v58 = 1024;
    int v59 = v17;
    __int16 v60 = 2048;
    double v61 = v12;
    __int16 v62 = 2048;
    uint64_t v63 = v18;
    __int16 v64 = 2048;
    uint64_t v65 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "simulation, tracking, %d, state, %d, generated random vals, elevationCm, %f, totalUp, %u, totalDown, %u, odometerM , %f, totalOdo, %f, speed, %f",  buf,  0x42u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934660 != -1) {
      dispatch_once(&qword_101934660, &stru_101867190);
    }
    int v20 = *(unsigned __int8 *)(a1 + 1552);
    int v21 = *(_DWORD *)(a1 + 1576);
    int v22 = *(_DWORD *)(a1 + 1580);
    uint64_t v23 = *(void *)(a1 + 1672);
    uint64_t v24 = *(void *)(a1 + 1656);
    v35[0] = 67110912;
    v35[1] = v20;
    __int16 v36 = 1024;
    int v37 = v30;
    __int16 v38 = 2048;
    double v39 = v11;
    __int16 v40 = 1024;
    int v41 = v21;
    __int16 v42 = 1024;
    int v43 = v22;
    __int16 v44 = 2048;
    double v45 = v12;
    __int16 v46 = 2048;
    uint64_t v47 = v23;
    __int16 v48 = 2048;
    uint64_t v49 = v24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934668,  0LL,  "simulation, tracking, %d, state, %d, generated random vals, elevationCm, %f, totalUp, %u, totalDown, %u, odometerM , %f, totalOdo, %f, speed, %f",  v35,  66,  v27,  v28,  v30,  *(double *)&v31,  *((double *)&v31 + 1),  *(double *)&v32);
    __int16 v26 = (uint8_t *)v25;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual CLSkiController::SkiUpdate CLSkiSimulator::tick()", "%s\n", v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  *(_DWORD *)a2 = v30;
  *(_OWORD *)(a2 + 8) = v31;
  *(_OWORD *)(a2 + 24) = v32;
  *(_OWORD *)(a2 + 40) = v33;
  *(_BYTE *)(a2 + 56) = v34;
  std::random_device::~random_device(&v29);
}

void sub_100A11BC8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, std::random_device a13, std::random_device a14)
{
}

void sub_100A11BF4(void *a1)
{
  uint64_t v1 = sub_10083114C(a1);
  operator delete(v1);
}

void sub_100A11C08(id a1)
{
  qword_101934668 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Skiing");
}

uint64_t sub_100A11C34(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, float a5)
{
  *(void *)a1 = a2;
  *(_WORD *)(a1 + 8) = a3;
  *(_WORD *)(a1 + 10) = a3;
  unsigned __int16 v7 = vcvtps_s32_f32((float)a3 / (float)a4);
  *(_WORD *)(a1 + 36) = v7;
  __int16 v8 = vcvtps_s32_f32((float)a3 * 0.1);
  *(_WORD *)(a1 + 38) = 1;
  *(_WORD *)(a1 + 56) = v8;
  *(_WORD *)(a1 + 58) = (2 * v8) | 1;
  *(float *)(a1 + 32) = a5;
  size_t v9 = 4LL * a3;
  *(void *)(a1 + 16) = malloc(v9);
  *(void *)(a1 + 24) = malloc(4 * v7 * (uint64_t)(__int16)((2 * v8) | 1));
  *(void *)(a1 + 48) = malloc(2LL * v7);
  *(void *)(a1 + 72) = malloc(8LL * v7);
  unsigned int v10 = (char *)malloc(v9);
  *(void *)(a1 + 64) = v10;
  if (a3)
  {
    unsigned int v11 = 0;
    double v12 = v10 + 2;
    uint64_t v13 = a3;
    do
    {
      *(v12 - 1) = (v11 / a3 - v8) & ~(unsigned __int16)((int)(v11 / a3 - v8) >> 31);
      int v14 = v11 / a3 + v8;
      *double v12 = v14;
      v12 += 2;
      v11 += a3;
      --v13;
    }

    while (v13);
  }

  *(_BYTE *)(a1 + 82) = 1;
  sub_100A11D54(a1);
  return 1LL;
}

void sub_100A11D54(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 82))
  {
    bzero(*(void **)(a1 + 48), 2LL * *(unsigned __int16 *)(a1 + 36));
    *(_WORD *)(a1 + 80) = *(_WORD *)(*(void *)(a1 + 64) + 2LL);
    *(_DWORD *)(a1 + 40) = 0;
  }

void sub_100A11D98(uint64_t a1)
{
  *(_WORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + 56) = 0;
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    free(v2);
    *(void *)(a1 + 16) = 0LL;
  }

  uint64_t v3 = *(void **)(a1 + 24);
  if (v3)
  {
    free(v3);
    *(void *)(a1 + 24) = 0LL;
  }

  uint64_t v4 = *(void **)(a1 + 48);
  if (v4)
  {
    free(v4);
    *(void *)(a1 + 48) = 0LL;
  }

  double v5 = *(void **)(a1 + 72);
  if (v5)
  {
    free(v5);
    *(void *)(a1 + 72) = 0LL;
  }

  int v6 = *(void **)(a1 + 64);
  if (v6)
  {
    free(v6);
    *(void *)(a1 + 64) = 0LL;
  }

  *(_BYTE *)(a1 + 82) = 0;
}

uint64_t sub_100A11E1C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  unsigned __int16 v7 = (void *)sub_100C6AAF0(a1, a2, a3, a4, a5);
  *unsigned __int16 v7 = off_1018671C0;
  v7[6] = 0LL;
  sub_1002BE430((uint64_t)sub_100A11ED8, a1, a3, &v12);
  uint64_t v8 = v12;
  uint64_t v12 = 0LL;
  uint64_t v9 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    uint64_t v10 = v12;
    uint64_t v12 = 0LL;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
  }

  return a1;
}

void sub_100A11EAC(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)(v1 + 48) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_100C6AB50(v1);
  _Unwind_Resume(a1);
}

void sub_100A11ED8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101867210);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLSedentaryTimerSubscription::onSedentaryTimerAlarm",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101867210);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLSedentaryTimerSubscription::onSedentaryTimerAlarm, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100A13A3C(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A12088( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100A120AC(void *a1)
{
  *a1 = off_1018671C0;
  uint64_t v2 = a1[6];
  a1[6] = 0LL;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    uint64_t v3 = a1[6];
    a1[6] = 0LL;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
  }

  return sub_100C6AB50((uint64_t)a1);
}

void sub_100A1210C(void *a1)
{
  uint64_t v1 = (void *)sub_100A120AC(a1);
  operator delete(v1);
}

void *sub_100A12120@<X0>(uint64_t a1@<X8>)
{
  v28[0] = &off_101867260;
  v28[1] = sub_100A12624;
  v28[2] = 0LL;
  std::random_device v29 = v28;
  sub_1010DDBC0(v30, "kCLConnectionMessageSedentaryTimerAlarm");
  sub_100895AE0((uint64_t)&v31, (uint64_t)v28);
  uint64_t v25 = &off_101867310;
  v26[0] = sub_100A128F8;
  v26[1] = 0LL;
  double v27 = &v25;
  sub_1010DDBC0(v32, "kCLConnectionMessageSedentaryTimerIsAvailable");
  sub_100895AE0((uint64_t)&v33, (uint64_t)&v25);
  v23[0] = &off_101867310;
  v23[1] = sub_100A129F8;
  _DWORD v23[2] = 0LL;
  uint64_t v24 = v23;
  sub_1010DDBC0(v34, "kCLConnectionMessageSedentaryTimerIsArmed");
  sub_100895AE0((uint64_t)&v35, (uint64_t)v23);
  v21[0] = &off_101867310;
  v21[1] = sub_100A12B4C;
  v21[2] = 0LL;
  int v22 = v21;
  sub_1010DDBC0(v36, "kCLConnectionMessageSedentaryTimerStart");
  sub_100895AE0((uint64_t)&v37, (uint64_t)v21);
  v19[0] = &off_101867310;
  v19[1] = sub_100A130AC;
  v19[2] = 0LL;
  int v20 = v19;
  sub_1010DDBC0(v38, "kCLConnectionMessageSedentaryTimerStop");
  sub_100895AE0((uint64_t)&v39, (uint64_t)v19);
  v17[0] = &off_101867310;
  v17[1] = sub_100A13478;
  _DWORD v17[2] = 0LL;
  __int16 v18 = v17;
  sub_1010DDBC0(v40, "kCLConnectionMessageSedentaryTimerQuery");
  sub_100895AE0((uint64_t)&v41, (uint64_t)v17);
  sub_100A1461C(a1, (unsigned __int8 *)v30, 6LL);
  uint64_t v2 = 42LL;
  do
  {
    uint64_t v3 = (void *)v30[v2 - 1];
    if (&v28[v2] == v3)
    {
      uint64_t v3 = &v28[v2];
      uint64_t v4 = 4LL;
    }

    else
    {
      if (!v3) {
        goto LABEL_7;
      }
      uint64_t v4 = 5LL;
    }

    (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_7:
    if (SHIBYTE((&v27)[v2]) < 0) {
      operator delete((void *)v26[v2]);
    }
    v2 -= 7LL;
  }

  while (v2 * 8);
  double v5 = v18;
  if (v18 == v17)
  {
    uint64_t v6 = 4LL;
    double v5 = v17;
LABEL_14:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }

  else if (v18)
  {
    uint64_t v6 = 5LL;
    goto LABEL_14;
  }

  uint64_t v7 = v20;
  if (v20 == v19)
  {
    uint64_t v8 = 4LL;
    uint64_t v7 = v19;
LABEL_19:
    (*(void (**)(void))(*v7 + 8 * v8))();
  }

  else if (v20)
  {
    uint64_t v8 = 5LL;
    goto LABEL_19;
  }

  uint64_t v9 = v22;
  if (v22 == v21)
  {
    uint64_t v10 = 4LL;
    uint64_t v9 = v21;
LABEL_24:
    (*(void (**)(void))(*v9 + 8 * v10))();
  }

  else if (v22)
  {
    uint64_t v10 = 5LL;
    goto LABEL_24;
  }

  char v11 = v24;
  if (v24 == v23)
  {
    uint64_t v12 = 4LL;
    char v11 = v23;
LABEL_29:
    (*(void (**)(void))(*v11 + 8 * v12))();
  }

  else if (v24)
  {
    uint64_t v12 = 5LL;
    goto LABEL_29;
  }

  int v13 = v27;
  if (v27 == &v25)
  {
    uint64_t v14 = 4LL;
    int v13 = &v25;
LABEL_34:
    (*v13)[v14]();
  }

  else if (v27)
  {
    uint64_t v14 = 5LL;
    goto LABEL_34;
  }

  uint64_t result = v29;
  if (v29 == v28)
  {
    uint64_t v16 = 4LL;
    uint64_t result = v28;
    return (void *)(*(uint64_t (**)(void))(*result + 8 * v16))();
  }

  else if (v29)
  {
    uint64_t v16 = 5LL;
    return (void *)(*(uint64_t (**)(void))(*result + 8 * v16))();
  }

  return result;
}

void sub_100A12468( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17, char a18, uint64_t a19, uint64_t a20, char *a21, char a22, uint64_t a23, uint64_t a24, char *a25, char a26, uint64_t a27, uint64_t a28, char *a29, char a30, uint64_t a31, uint64_t a32, char *a33)
{
  for (uint64_t i = 280LL; i != -56; i -= 56LL)
    sub_10026E430(v33 + i);
  __int16 v36 = a13;
  if (a13 == &a10)
  {
    uint64_t v37 = 4LL;
    __int16 v36 = &a10;
  }

  else
  {
    if (!a13) {
      goto LABEL_8;
    }
    uint64_t v37 = 5LL;
  }

  (*(void (**)(void))(*(void *)v36 + 8 * v37))();
LABEL_8:
  __int16 v38 = a17;
  if (a17 == &a14)
  {
    uint64_t v39 = 4LL;
    __int16 v38 = &a14;
  }

  else
  {
    if (!a17) {
      goto LABEL_13;
    }
    uint64_t v39 = 5LL;
  }

  (*(void (**)(void))(*(void *)v38 + 8 * v39))();
LABEL_13:
  __int16 v40 = a21;
  if (a21 == &a18)
  {
    uint64_t v41 = 4LL;
    __int16 v40 = &a18;
  }

  else
  {
    if (!a21) {
      goto LABEL_18;
    }
    uint64_t v41 = 5LL;
  }

  (*(void (**)(void))(*(void *)v40 + 8 * v41))();
LABEL_18:
  __int16 v42 = a25;
  if (a25 == &a22)
  {
    uint64_t v43 = 4LL;
    __int16 v42 = &a22;
  }

  else
  {
    if (!a25) {
      goto LABEL_23;
    }
    uint64_t v43 = 5LL;
  }

  (*(void (**)(void))(*(void *)v42 + 8 * v43))();
LABEL_23:
  __int16 v44 = a29;
  if (a29 == &a26)
  {
    uint64_t v45 = 4LL;
    __int16 v44 = &a26;
  }

  else
  {
    if (!a29) {
      goto LABEL_28;
    }
    uint64_t v45 = 5LL;
  }

  (*(void (**)(void))(*(void *)v44 + 8 * v45))();
LABEL_28:
  __int16 v46 = a33;
  if (a33 == &a30)
  {
    uint64_t v47 = 4LL;
    __int16 v46 = &a30;
  }

  else
  {
    if (!a33) {
      goto LABEL_33;
    }
    uint64_t v47 = 5LL;
  }

  (*(void (**)(void))(*(void *)v46 + 8 * v47))();
LABEL_33:
  _Unwind_Resume(a1);
}

void sub_100A12614()
{
}

void sub_100A12624(uint64_t a1, int a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101867230);
  }
  double v5 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 24);
    *(_DWORD *)std::runtime_error buf = 67109634;
    *(_DWORD *)&uint8_t buf[4] = a2;
    __int16 v21 = 2112;
    uint64_t v22 = v6;
    __int16 v23 = 2048;
    uint64_t v24 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "SedentaryAlarm,subscription changed, %d, %@, %p",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101867230);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    v15[0] = 67109634;
    v15[1] = a2;
    __int16 v16 = 2112;
    uint64_t v17 = v10;
    __int16 v18 = 2048;
    uint64_t v19 = a1;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "SedentaryAlarm,subscription changed, %d, %@, %p",  v15,  28);
    uint64_t v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSedentaryTimerSubscription::handleRequestSedentaryTimerAlarm(BOOL, const CLNameValuePair &)",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  if ((sub_100A13FC0(a1, v15) & 1) != 0)
  {
    sub_100C6AC8C(a1);
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t v8 = *(void **)(v7 + 16);
    if (a2) {
      [v8 register:v9 forNotification:0 registrationInfo:0];
    }
    else {
      [v8 unregister:v9 forNotification:0];
    }
  }

  else
  {
    uint64_t v13 = CMErrorMessage;
    uint64_t v14 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v15[0]);
    *(void *)std::runtime_error buf = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v14,  &v13,  1LL);
    sub_100A14024(a1, buf);
  }
}

void sub_100A128BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100A128F8(uint64_t a1, void *a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v6 = CMAvailable;
  uint64_t v7 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v5);
  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v7,  &v6,  1LL);
  CLConnectionMessage::sendReply(*a2);
}

void sub_100A129CC(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_100006BB8(exception_object);
}

void sub_100A129F8(uint64_t a1, void *a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if ((sub_100A13FC0(a1, (int *)&v7) & 1) != 0)
  {
    id v5 = [*(id *)(*(void *)(a1 + 48) + 16) syncgetIsTimerArmed];
    uint64_t v8 = CMSedentaryTimerIsArmedKey;
    uint64_t v9 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v5);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL);
    CLConnectionMessage::sendReply(*a2);
  }

  else
  {
    uint64_t v6 = *a2;
    uint64_t v10 = CMErrorMessage;
    char v11 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v7);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v11,  &v10,  1LL);
    CLConnectionMessage::sendReply(v6);
  }
}

void sub_100A12B1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100A12B4C(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101867230);
  }
  id v5 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::runtime_error buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[SedentaryTimerTriage] SedentaryAlarm, handling SedentaryTimerStart message!",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101867230);
    }
    LOWORD(v20[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "[SedentaryTimerTriage] SedentaryAlarm, handling SedentaryTimerStart message!",  v20,  2);
    uint64_t v13 = (uint8_t *)v12;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerStart(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v12);
    if (v13 != buf) {
      free(v13);
    }
  }

  if ((sub_100A13FC0(a1, v20) & 1) != 0)
  {
    uint64_t Dictionary = CLConnectionMessage::getDictionary(*a2);
    if (Dictionary)
    {
      id v7 = objc_msgSend( *(id *)(*(void *)(a1 + 48) + 16),  "syncgetStartTimerForClient:andOptions:",  objc_msgSend(*(id *)(a1 + 24), "description"),  Dictionary);
      uint64_t v8 = *a2;
      uint64_t v21 = CMErrorMessage;
      uint64_t v22 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v7);
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v22,  &v21,  1LL);
    }

    else
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101867230);
      }
      char v11 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "SedentaryAlarm,Failed to start,nil dictionary",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101867230);
        }
        v19[0] = 0;
        LODWORD(v18) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "SedentaryAlarm,Failed to start,nil dictionary",  v19,  v18);
        uint64_t v17 = (uint8_t *)v16;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerStart(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v16);
        if (v17 != buf) {
          free(v17);
        }
      }

      uint64_t v8 = *a2;
      uint64_t v23 = CMErrorMessage;
      uint64_t v24 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v20[0]);
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v24,  &v23,  1LL);
    }

    CLConnectionMessage::sendReply(v8);
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101867230);
    }
    uint64_t v9 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[SedentaryTimerTriage] SedentaryAlarm, is not qualified!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101867230);
      }
      v19[0] = 0;
      LODWORD(v18) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "[SedentaryTimerTriage] SedentaryAlarm, is not qualified!",  v19,  v18);
      int v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerStart(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    uint64_t v10 = *a2;
    uint64_t v25 = CMErrorMessage;
    __int16 v26 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v20[0]);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v26,  &v25,  1LL);
    CLConnectionMessage::sendReply(v10);
  }
}

void sub_100A13070(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100A130AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101867230);
  }
  id v5 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::runtime_error buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[SedentaryTimerTriage] SedentaryAlarm, handling SedentaryTimerStop message!",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101867230);
    }
    LOWORD(v15[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "[SedentaryTimerTriage] SedentaryAlarm, handling SedentaryTimerStop message!",  v15,  2);
    uint64_t v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerStop(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  if ((sub_100A13FC0(a1, v15) & 1) != 0)
  {
    id v6 = objc_msgSend( *(id *)(*(void *)(a1 + 48) + 16),  "syncgetStopTimerForClient:",  objc_msgSend(*(id *)(a1 + 24), "description"));
    uint64_t v7 = *a2;
    uint64_t v16 = CMErrorMessage;
    uint64_t v17 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v6);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v17,  &v16,  1LL);
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101867230);
    }
    uint64_t v8 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[SedentaryTimerTriage] SedentaryAlarm, is not qualified!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101867230);
      }
      v14[0] = 0;
      LODWORD(v13) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "[SedentaryTimerTriage] SedentaryAlarm, is not qualified!",  v14,  v13);
      uint64_t v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerStop(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }

    uint64_t v7 = *a2;
    uint64_t v18 = CMErrorMessage;
    uint64_t v19 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v15[0]);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v19,  &v18,  1LL);
  }

  CLConnectionMessage::sendReply(v7);
}

void sub_100A13444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100A13478(uint64_t a1, CLConnectionMessage **a2)
{
  uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  char v5 = sub_100A13FC0(a1, (int *)&v29);
  id v6 = *a2;
  if ((v5 & 1) != 0)
  {
    uint64_t Dictionary = (void *)CLConnectionMessage::getDictionary(*a2);
    if (Dictionary)
    {
      std::string __p = 0LL;
      double v27 = 0LL;
      uint64_t v28 = 0LL;
      objc_msgSend(objc_msgSend(Dictionary, "objectForKeyedSubscript:", CMSedentaryTimerStartTimeKey), "doubleValue");
      id v8 = objc_msgSend(*(id *)(*(void *)(a1 + 48) + 16), "syncgetSedentaryAlarmData:since:", &__p);
      unsigned int v29 = v8;
      if ((_DWORD)v8 == 100)
      {
        uint64_t v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
        uint64_t v10 = (double *)__p;
        char v11 = v27;
        if (__p != v27)
        {
          do
          {
            id v12 = [[CMSedentaryTimerData alloc] initWithStartDate:*((int *)v10 + 4) firedDate:*((_BYTE *)v10 + 20) & 1 alarmType:*v10 didWake:v10[1]];
            -[NSMutableArray addObject:](v9, "addObject:", v12);

            v10 += 4;
          }

          while (v10 != v11);
        }

        if (-[NSMutableArray count](v9, "count"))
        {
          sub_1004F2598();
          if (sub_1004F8A40())
          {
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_101867230);
            }
            uint64_t v13 = (os_log_s *)qword_1019344B8;
            if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
            {
              id v14 = -[NSMutableArray lastObject](v9, "lastObject");
              uint64_t v15 = *(void *)(a1 + 24);
              *(_DWORD *)std::runtime_error buf = 138412802;
              id v43 = v14;
              __int16 v44 = 2112;
              uint64_t v45 = v15;
              __int16 v46 = 2048;
              uint64_t v47 = a1;
              _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@, %@, %p", buf, 0x20u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019344B0 != -1) {
                dispatch_once(&qword_1019344B0, &stru_101867230);
              }
              uint64_t v21 = qword_1019344B8;
              id v22 = -[NSMutableArray lastObject](v9, "lastObject");
              uint64_t v23 = *(void *)(a1 + 24);
              int v32 = 138412802;
              id v33 = v22;
              __int16 v34 = 2112;
              uint64_t v35 = v23;
              __int16 v36 = 2048;
              uint64_t v37 = a1;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v21,  0LL,  "%@, %@, %p",  &v32,  32);
              uint64_t v25 = (uint8_t *)v24;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerQuery(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v24);
              if (v25 != buf) {
                free(v25);
              }
            }
          }
        }

        uint64_t v30 = CMSedentaryTimerAlarmDataKey;
        uint64_t v31 = v9;
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v31,  &v30,  1LL);

        CLConnectionMessage::sendReply(*a2);
      }

      else
      {
        uint64_t v18 = *a2;
        uint64_t v38 = CMErrorMessage;
        uint64_t v39 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v8);
        +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v39,  &v38,  1LL);
        CLConnectionMessage::sendReply(v18);
      }

      if (__p)
      {
        double v27 = (double *)__p;
        operator delete(__p);
      }
    }

    else
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101867230);
      }
      uint64_t v16 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_FAULT,  "SedentaryAlarm,Failed to query,nil dictionary",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101867230);
        }
        LOWORD(v32) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "SedentaryAlarm,Failed to query,nil dictionary",  &v32,  2);
        int v20 = (uint8_t *)v19;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerQuery(std::shared_ptr<CLConnectionMessage>)",  "%s\n",  v19);
        if (v20 != buf) {
          free(v20);
        }
      }

      uint64_t v17 = *a2;
      uint64_t v40 = CMErrorMessage;
      uint64_t v41 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v29);
      +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v41,  &v40,  1LL);
      CLConnectionMessage::sendReply(v17);
    }
  }

  else
  {
    uint64_t v48 = CMErrorMessage;
    uint64_t v49 = +[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v29);
    +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v49,  &v48,  1LL);
    CLConnectionMessage::sendReply(v6);
  }
}

void sub_100A139DC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100A13A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v7 = *a4;
  uint64_t v8 = a4[1];
  if (*a4 != v8)
  {
    do
    {
      id v9 = [[CMSedentaryTimerData alloc] initWithStartDate:*(int *)(v7 + 16) firedDate:*(_BYTE *)(v7 + 20) & 1 alarmType:*(double *)v7 didWake:*(double *)(v7 + 8)];
      -[NSMutableArray addObject:](v6, "addObject:", v9);

      v7 += 32LL;
    }

    while (v7 != v8);
  }

  if (-[NSMutableArray count](v6, "count"))
  {
    sub_1004F2598();
    if (sub_1004F8A40())
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101867230);
      }
      uint64_t v10 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        id v11 = -[NSMutableArray lastObject](v6, "lastObject");
        uint64_t v12 = *(void *)(a1 + 24);
        *(_DWORD *)std::runtime_error buf = 138412802;
        *(void *)&uint8_t buf[4] = v11;
        __int16 v27 = 2112;
        uint64_t v28 = v12;
        __int16 v29 = 2048;
        uint64_t v30 = a1;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%@, %@, %p", buf, 0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101867230);
        }
        uint64_t v13 = qword_1019344B8;
        id v14 = -[NSMutableArray lastObject](v6, "lastObject");
        uint64_t v15 = *(void *)(a1 + 24);
        int v20 = 138412802;
        id v21 = v14;
        __int16 v22 = 2112;
        uint64_t v23 = v15;
        __int16 v24 = 2048;
        uint64_t v25 = a1;
        _os_log_send_and_compose_impl(2LL, 0LL, buf, 1628LL, &_mh_execute_header, v13, 0LL, "%@, %@, %p", &v20, 32);
        uint64_t v17 = (char *)v16;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSedentaryTimerSubscription::onSedentaryTimerAlarm(int, const CLSedentaryTimerNotifier_Type::Notificatio n &, const CLSedentaryTimerNotifier_Type::NotificationData &)",  "%s\n",  v16);
        if (v17 != buf) {
          free(v17);
        }
      }
    }
  }

  uint64_t v18 = CMSedentaryTimerAlarmDataKey;
  uint64_t v19 = v6;
  *(void *)std::runtime_error buf = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v19,  &v18,  1LL);

  sub_100A13D04(a1, buf);
}

void sub_100A13D04(uint64_t a1, void *a2)
{
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100A13D98(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100A13DAC(uint64_t a1)
{
  uint64_t v2 = sub_100C6AC9C(a1);
  uint64_t v3 = v2;
  if (v13 < 0)
  {
    operator delete(*(void **)__p);
    if ((v3 & 1) != 0) {
      return v3;
    }
  }

  else if ((v2 & 1) != 0)
  {
    return v3;
  }

  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101867230);
  }
  uint64_t v4 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 24);
    *(_DWORD *)std::string __p = 138543362;
    *(void *)&__p[4] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#Warning SedentaryAlarm,Failed entitlement check,%{public}@",  __p,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101867230);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    int v10 = 138543362;
    uint64_t v11 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Warning SedentaryAlarm,Failed entitlement check,%{public}@",  &v10,  12);
    id v9 = (char *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLSedentaryTimerSubscription::isEntitledForSedentaryTimer()",  "%s\n",  v8);
    if (v9 != __p) {
      free(v9);
    }
  }

  return v3;
}

void sub_100A13F9C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100A13FC0(uint64_t a1, int *a2)
{
  if (sub_100A13DAC(a1))
  {
    if (sub_1002BD8C0(*(void *)(a1 + 8)))
    {
      if ((sub_100C6ADE0(a1) & 1) != 0) {
        return 1LL;
      }
      int v5 = 105;
    }

    else
    {
      int v5 = 109;
    }
  }

  else
  {
    int v5 = 110;
  }

  uint64_t result = 0LL;
  *a2 = v5;
  return result;
}

void sub_100A14024(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  sub_100272EB8(&off_101867380, a2, &v6);
  (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v2 + 24LL))(v2, &v6, 0LL);
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100A140B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100A140C4(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100A140F0(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

__n128 sub_100A1411C(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &off_101867260;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100A14158(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101867260;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100A1417C(uint64_t a1, uint64_t a2, __int128 *a3)
{
}

uint64_t sub_100A14184(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100A141C0()
{
}

void sub_100A141CC(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v6 = *a3;
  *(void *)a3 = 0LL;
  *((void *)a3 + 1) = 0LL;
  sub_100A14250(a1, a2, (CLConnectionMessage **)&v6);
  uint64_t v3 = (std::__shared_weak_count *)*((void *)&v6 + 1);
  if (*((void *)&v6 + 1))
  {
    uint64_t v4 = (unint64_t *)(*((void *)&v6 + 1) + 8LL);
    do
      unint64_t v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_100A14238( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1012310A8(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100A14250(uint64_t a1, uint64_t a2, CLConnectionMessage **a3)
{
  __int128 v6 = (NSSet *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16LL))(a2);
  DictionaryOfClasses = (const __CFDictionary *)CLConnectionMessage::getDictionaryOfClasses(*a3, v6);
  sub_1002A5550((int)v15, DictionaryOfClasses);
  if ((sub_1002A6F64((uint64_t)v15, "kCLConnectionMessageSubscribeKey", &v14) & 1) != 0)
  {
    uint64_t v8 = *(void (**)(void *, BOOL, uint8_t *))a1;
    uint64_t v9 = *(void *)(a1 + 8);
    int v10 = (void *)(a2 + (v9 >> 1));
    if ((v9 & 1) != 0) {
      uint64_t v8 = *(void (**)(void *, BOOL, uint8_t *))(*v10 + v8);
    }
    v8(v10, v14, v15);
  }

  else
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_1018672D0);
    }
    uint64_t v11 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::runtime_error buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Couldn't get value for kCLConnectionMessageSubscribeKey key}",  buf,  0x12u);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_1018672D0);
      }
    }

    uint64_t v12 = (os_log_s *)qword_101934978;
    if (os_signpost_enabled((os_log_t)qword_101934978))
    {
      *(_DWORD *)std::runtime_error buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v12,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Couldn't get value for kCLConnectionMessageSubscribeKey key",  "{msg%{public}.0s:Couldn't get value for kCLConnectionMessageSubscribeKey key}",  buf,  0x12u);
    }
  }

  return sub_1002A5590(v15);
}

void sub_100A14434( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_100A14450(id a1)
{
  qword_101934978 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

__n128 sub_100A1447C(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &off_101867310;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100A144B8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101867310;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100A144DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_100A144E4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100A14520()
{
}

void sub_100A1452C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v3 = (std::__shared_weak_count *)a3[1];
  uint64_t v15 = v3;
  *a3 = 0LL;
  a3[1] = 0LL;
  unint64_t v5 = *(void (**)(void *, uint64_t *))a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = (void *)(a2 + (v6 >> 1));
  if ((v6 & 1) != 0) {
    unint64_t v5 = *(void (**)(void *, uint64_t *))(*v7 + v5);
  }
  uint64_t v16 = v4;
  int v17 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }

  v5(v7, &v16);
  int v10 = v17;
  if (v17)
  {
    uint64_t v11 = (unint64_t *)&v17->__shared_owners_;
    do
      unint64_t v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  if (v15)
  {
    char v13 = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

void sub_100A14600( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_100A1461C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 56 * a3;
    do
    {
      sub_100A14694(a1, a2, (__int128 *)a2);
      a2 += 56;
      v5 -= 56LL;
    }

    while (v5);
  }

  return a1;
}

void sub_100A14680(_Unwind_Exception *a1)
{
}

unsigned __int8 *sub_100A14694(uint64_t a1, unsigned __int8 *a2, __int128 *a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_10004B1A4(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }

    char v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if ((sub_100022A24(a1 + 32, i + 16, a2) & 1) != 0) {
            return i;
          }
        }

        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }

          else
          {
            v15 &= v10 - 1;
          }

          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }

  sub_100A14914(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1LL;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100019E10(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }

  __int16 v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    *__int16 v22 = v25[0];
  }

  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8LL);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }

      else
      {
        v23 &= v10 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }

  uint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0LL;
  ++*v7;
  sub_100272D04((uint64_t)v25, 0LL);
  return i;
}

void sub_100A148FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100A14914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x48uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  void *v8 = 0LL;
  v8[1] = a2;
  __n128 result = sub_100A14988(v8 + 2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_100A14970(_Unwind_Exception *a1)
{
}

void *sub_100A14988(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v4;
  }

  sub_10001A504((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_100A149E0(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100A149FC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1002DC708((uint64_t)(a2 + 754), a1 + 3016);
}

void sub_100A14A48(_Unwind_Exception *a1)
{
}

_DWORD *sub_100A14A5C(_DWORD *a1, uint64_t a2)
{
  __int128 v4 = sub_1002E0454(a1);
  sub_1002DCA80((uint64_t)v4, a2);
  sub_1002DC4C4((uint64_t)(a1 + 202), a2 + 808);
  sub_1002DC708((uint64_t)(a1 + 754), a2 + 3016);
  return a1;
}

void sub_100A14AA4(_Unwind_Exception *a1)
{
}

_DWORD *sub_100A14AB8(_DWORD *a1, uint64_t a2)
{
  __int128 v4 = sub_1002E0454(a1);
  sub_1002DCA80((uint64_t)v4, a2);
  sub_1002DC4C4((uint64_t)(a1 + 202), a2 + 808);
  sub_1002DC708((uint64_t)(a1 + 754), a2 + 3016);
  return a1;
}

void sub_100A14B00(_Unwind_Exception *a1)
{
}

void sub_100A14B14(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  if (*(_BYTE *)(a1 + 6376) && *(int *)(a1 + 6400) >= 1)
  {
    sub_1010DDBC0(v4, "scanready");
    sub_100495E50(v6, 4LL, 0LL, v4, *(double *)(a1 + 6384));
    sub_100446100((uint64_t)v10, v6);
    sub_100A14C44((uint64_t)(a2 + 708), (uint64_t)v10);
    if (v14 < 0) {
      operator delete(__p);
    }
    if (v12 < 0) {
      operator delete(v11);
    }
    if (v9 < 0) {
      operator delete(v8);
    }
    if (v7 < 0) {
      operator delete((void *)v6[2]);
    }
    if (v5 < 0) {
      operator delete(v4[0]);
    }
  }

void sub_100A14BF8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, char a34)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1002D9D34(v34);
  _Unwind_Resume(a1);
}

uint64_t sub_100A14C44(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 144);
  char v5 = *(_BYTE *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v5;
  uint64_t v6 = a1 + 16;
  char v7 = (__int128 *)(a2 + 16);
  if (v4)
  {
    __int128 v8 = *v7;
    *(void *)(v6 + 16) = *((void *)v7 + 2);
    *(_OWORD *)uint64_t v6 = v8;
    *(_BYTE *)(a2 + 39) = 0;
    *(_BYTE *)(a2 + 16) = 0;
    __int128 v9 = *(_OWORD *)(a2 + 100);
    __int128 v10 = *(_OWORD *)(a2 + 88);
    __int128 v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v11;
    *(_OWORD *)(a1 + 88) = v10;
    *(_OWORD *)(a1 + 100) = v9;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    char v12 = (void **)(a1 + 120);
    __int128 v13 = *(_OWORD *)(a2 + 120);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)char v12 = v13;
    *(_BYTE *)(a2 + 143) = 0;
    *(_BYTE *)(a2 + 120) = 0;
  }

  else
  {
    __int128 v14 = *v7;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)uint64_t v6 = v14;
    *(void *)(a2 + 24) = 0LL;
    *(void *)(a2 + 32) = 0LL;
    *(void *)char v7 = 0LL;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    __int128 v15 = *(_OWORD *)(a2 + 72);
    __int128 v16 = *(_OWORD *)(a2 + 88);
    __int128 v17 = *(_OWORD *)(a2 + 100);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 100) = v17;
    *(_OWORD *)(a1 + 88) = v16;
    *(_OWORD *)(a1 + 72) = v15;
    __int128 v18 = *(_OWORD *)(a2 + 120);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = v18;
    *(void *)(a2 + 128) = 0LL;
    *(void *)(a2 + 136) = 0LL;
    *(void *)(a2 + 120) = 0LL;
    *(_BYTE *)(a1 + 144) = 1;
  }

  return a1;
}

void sub_100A14D70(uint64_t a1@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  if (!*a2 && *(_BYTE *)(a1 + 6172))
  {
    sub_1010DDBC0(v6, "emergency");
    sub_100495E50(v8, 6LL, 0LL, v6, *(double *)(a1 + 6384));
    sub_100446100((uint64_t)v12, v8);
    sub_100A14C44((uint64_t)(a3 + 708), (uint64_t)v12);
    if (v16 < 0) {
      operator delete(__p);
    }
    if (v14 < 0) {
      operator delete(v13);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
    if (v9 < 0) {
      operator delete((void *)v8[2]);
    }
    if (v7 < 0) {
      operator delete(v6[0]);
    }
  }

void sub_100A14E58( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, char a34)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1002D9D34(v34);
  _Unwind_Resume(a1);
}

void sub_100A14EA4(uint64_t a1@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  if (*a2 == 1 && *(_BYTE *)(a1 + 6172))
  {
    sub_1010DDBC0(v6, "emergency");
    sub_100495E50(v8, 6LL, 0LL, v6, *(double *)(a1 + 6384));
    sub_100446100((uint64_t)v12, v8);
    sub_100A14C44((uint64_t)(a3 + 708), (uint64_t)v12);
    if (v16 < 0) {
      operator delete(__p);
    }
    if (v14 < 0) {
      operator delete(v13);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
    if (v9 < 0) {
      operator delete((void *)v8[2]);
    }
    if (v7 < 0) {
      operator delete(v6[0]);
    }
  }

void sub_100A14F8C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, char a34)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1002D9D34(v34);
  _Unwind_Resume(a1);
}

void sub_100A14FD8(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4 = (_BYTE *)(a1 + 6172);
  sub_100A14A5C(a2, a1);
  if (v4[207] && *v4)
  {
    sub_1010DDBC0(v5, "emergency");
    sub_100495E50(v7, 6LL, 0LL, v5, *(double *)(a1 + 6384));
    sub_100446100((uint64_t)v11, v7);
    sub_100A14C44((uint64_t)(a2 + 708), (uint64_t)v11);
    if (v15 < 0) {
      operator delete(__p);
    }
    if (v13 < 0) {
      operator delete(v12);
    }
    if (v10 < 0) {
      operator delete(v9);
    }
    if (v8 < 0) {
      operator delete((void *)v7[2]);
    }
    if (v6 < 0) {
      operator delete(v5[0]);
    }
  }

void sub_100A150BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, char a34)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1002D9D34(v34);
  _Unwind_Resume(a1);
}

void sub_100A15108(uint64_t a1@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  if (*(_BYTE *)(a1 + 6379)) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1010DDBC0(__p, "registrant");
    sub_100495E50(v14, 4LL, 0LL, __p, *(double *)(a1 + 6384));
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    sub_100446100((uint64_t)v7, v14);
    sub_100A14C44((uint64_t)(a3 + 708), (uint64_t)v7);
    if (v11 < 0) {
      operator delete(v10);
    }
    if (v9 < 0) {
      operator delete(v8);
    }
    if (v17 < 0) {
      operator delete(v16);
    }
    if (v15 < 0) {
      operator delete((void *)v14[2]);
    }
  }

void sub_100A151F0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *__p, uint64_t a29, int a30, __int16 a31, char a32, char a33, char a34)
{
}

void sub_100A1523C(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4 = (_BYTE *)(a1 + 6376);
  sub_100A14A5C(a2, a1);
  if (*v4 && *(int *)(a1 + 6400) >= 1 && v4[3] && !*(_BYTE *)(a1 + 810))
  {
    int v5 = *(_DWORD *)(a1 + 6112);
    sub_1010DDBC0(v7, "timer");
    if (v5 == 6) {
      uint64_t v6 = 6LL;
    }
    else {
      uint64_t v6 = 4LL;
    }
    sub_100495E50(v9, v6, 0LL, v7, *(double *)(a1 + 6384));
    sub_100446100((uint64_t)v13, v9);
    sub_100A14C44((uint64_t)(a2 + 708), (uint64_t)v13);
    if (v17 < 0) {
      operator delete(__p);
    }
    if (v15 < 0) {
      operator delete(v14);
    }
    if (v12 < 0) {
      operator delete(v11);
    }
    if (v10 < 0) {
      operator delete((void *)v9[2]);
    }
    if (v8 < 0) {
      operator delete(v7[0]);
    }
  }

void sub_100A15340( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, char a34)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1002D9D34(v34);
  _Unwind_Resume(a1);
}

void sub_100A1538C(int *a1@<X1>, _DWORD *a2@<X8>)
{
}

void sub_100A15434( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100A15450(int *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  unint64_t v3 = a1 + 2;
  switch(*a1 ^ (*a1 >> 31))
  {
    case 0:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x18:
    case 0x1A:
    case 0x1C:
    case 0x1D:
      sub_100A14A5C(a3, a2);
      break;
    case 1:
      sub_100A14B14(a2, a3);
      break;
    case 4:
      sub_100A14D70(a2, v3, a3);
      break;
    case 9:
      sub_100A14EA4(a2, v3, a3);
      break;
    case 0x17:
      sub_100A14FD8(a2, a3);
      break;
    case 0x19:
      sub_100A15108(a2, v3, a3);
      break;
    case 0x1B:
      sub_100A1523C(a2, a3);
      break;
    default:
      sub_1002DDAB0();
  }

void sub_100A154E8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_100A15584(_Unwind_Exception *a1)
{
}

void sub_100A1559C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      _WORD *v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_100A15628(_Unwind_Exception *a1)
{
}

uint64_t sub_100A15640(CFStringRef alertHeader, int a2, CFStringRef alertMessage)
{
  return CFUserNotificationDisplayNotice(0.0, 0LL, 0LL, 0LL, 0LL, alertHeader, alertMessage, 0LL);
}

NSDictionary *sub_100A15664(unsigned int *a1)
{
  v3[0] = @"sessionStartedCount";
  v4[0] = +[CLFenceBinner binForConvergingUsageMetricCount:]( &OBJC_CLASS___CLFenceBinner,  "binForConvergingUsageMetricCount:",  *a1);
  v3[1] = @"sessionSuccessCount";
  v4[1] = +[CLFenceBinner binForConvergingUsageMetricCount:]( &OBJC_CLASS___CLFenceBinner,  "binForConvergingUsageMetricCount:",  a1[1]);
  v3[2] = @"sessionTimeoutCount";
  v4[2] = +[CLFenceBinner binForConvergingUsageMetricCount:]( &OBJC_CLASS___CLFenceBinner,  "binForConvergingUsageMetricCount:",  a1[2]);
  v3[3] = @"sessionExitCount";
  void v4[3] = +[CLFenceBinner binForConvergingUsageMetricCount:]( &OBJC_CLASS___CLFenceBinner,  "binForConvergingUsageMetricCount:",  a1[3]);
  v3[4] = @"sessionNotStartedOutOfBudgetCount";
  v4[4] = +[CLFenceBinner binForConvergingUsageMetricCount:]( &OBJC_CLASS___CLFenceBinner,  "binForConvergingUsageMetricCount:",  a1[4]);
  v3[5] = @"sessionNotStartedWokeUpInsideCount";
  void v4[5] = +[CLFenceBinner binForConvergingUsageMetricCount:]( &OBJC_CLASS___CLFenceBinner,  "binForConvergingUsageMetricCount:",  a1[5]);
  v3[6] = @"significantFenceEntryCount";
  v4[6] = +[CLFenceBinner binForConvergingUsageMetricCount:]( &OBJC_CLASS___CLFenceBinner,  "binForConvergingUsageMetricCount:",  a1[6]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  7LL);
}

void sub_100A15838(id a1)
{
  qword_101999F18 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLGeomagneticModelProviderSilo");
}

uint64_t sub_100A15A20(uint64_t result)
{
  *(_BYTE *)(result + 108) = 1;
  return result;
}

void *sub_100A15A2C(uint64_t a1, void *a2)
{
  __n128 result = (void *)sub_100A15A58(a1, "CLGeomagneticModelProvider", a2);
  *__n128 result = off_1018673B8;
  return result;
}

uint64_t sub_100A15A58(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101867548;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_100A15AD8(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100A15AF8(uint64_t a1)
{
  *(void *)a1 = off_101867548;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

void *sub_100A15B74@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

void sub_100A15BEC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  char v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLGeomagneticModelProvider");
  sub_100A15CB4((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  void *v8 = off_1018674A0;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100A15C88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100A15CB4(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_101867628;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    char v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

double sub_100A15D88@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 56) = 0xBFF0000000000000LL;
  return result;
}

void sub_100A15DA4(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100A15E30(a1);
  operator delete(v1);
}

id sub_100A15DB8(uint64_t a1, int a2, void *a3)
{
  id result = sub_101218840(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100A15E04(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_100A15E30(uint64_t a1)
{
  *(void *)a1 = off_101867628;
  uint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *uint64_t v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

double sub_100A15E98(uint64_t a1)
{
  *(_DWORD *)(a1 + 77240) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 77224) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 100LL;
  *(void *)(a1 + 40) = 0x25800000000LL;
  *(void *)(a1 + 19248) = 0x25800000000LL;
  *(void *)(a1 + 38456) = 0LL;
  *(_DWORD *)(a1 + 38464) = 0;
  *(void *)(a1 + 38472) = 0LL;
  *(void *)(a1 + 38488) = 0LL;
  *(_DWORD *)(a1 + 38496) = 0;
  *(_OWORD *)(a1 + 38504) = 0u;
  *(_OWORD *)(a1 + 38520) = 0u;
  *(_DWORD *)(a1 + 38536) = 0;
  *(void *)(a1 + 38544) = 0x300000000LL;
  *(void *)(a1 + 38648) = 0x25800000000LL;
  *(void *)(a1 + 57856) = 0x25800000000LL;
  *(_DWORD *)(a1 + 77088) = 0;
  *(void *)(a1 + 77080) = 0LL;
  *(_OWORD *)(a1 + 77064) = 0u;
  *(_OWORD *)(a1 + 77096) = 0u;
  *(_OWORD *)(a1 + 77112) = 0u;
  *(_OWORD *)(a1 + 77128) = 0u;
  *(_OWORD *)(a1 + 77144) = 0u;
  *(_OWORD *)(a1 + 77160) = 0u;
  *(_OWORD *)(a1 + 77sub_1002E0644(v1 + 176) = 0u;
  *(_OWORD *)(a1 + 77192) = 0u;
  *(_OWORD *)(a1 + 77208) = 0u;
  return result;
}

uint64_t sub_100A15F44(uint64_t a1, uint64_t a2, double a3, double a4, float a5, float a6)
{
  double v9 = *(double *)(a2 + 56);
  if (v9 < *(double *)(a1 + 16))
  {
    uint64_t result = 0LL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 32) = 100LL;
    *(_DWORD *)(a1 + 40) = 0;
    *(_DWORD *)(a1 + 19248) = 0;
    *(void *)(a1 + 38456) = 0LL;
    *(_DWORD *)(a1 + 38464) = 0;
    *(void *)(a1 + 38472) = 0LL;
    *(void *)(a1 + 38488) = 0LL;
    *(_DWORD *)(a1 + 38496) = 0;
    *(_OWORD *)(a1 + 38504) = 0u;
    *(_OWORD *)(a1 + 38520) = 0u;
    *(_DWORD *)(a1 + 38536) = 0;
    *(_DWORD *)(a1 + 38544) = 0;
    *(_DWORD *)(a1 + 38648) = 0;
    *(_DWORD *)(a1 + 57856) = 0;
    *(void *)(a1 + 77080) = 0LL;
    *(_DWORD *)(a1 + 77088) = 0;
    *(_OWORD *)(a1 + 77064) = 0u;
    *(_OWORD *)(a1 + 77192) = 0u;
    *(_OWORD *)(a1 + 77208) = 0u;
    *(_OWORD *)(a1 + 77160) = 0u;
    *(_OWORD *)(a1 + 77sub_1002E0644(v1 + 176) = 0u;
    *(_OWORD *)(a1 + 77128) = 0u;
    *(_OWORD *)(a1 + 77144) = 0u;
    *(_OWORD *)(a1 + 77096) = 0u;
    *(_OWORD *)(a1 + 77112) = 0u;
    return result;
  }

  *(double *)(a1 + 16) = v9;
  sub_1008335D0((float *)(a2 + 36), v30);
  float v14 = sub_100DEA49C((uint64_t)v30);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)(a2 + 56);
  *(float *)&v28[16] = v14;
  *(_DWORD *)&v28[20] = v15;
  *(_DWORD *)&v28[24] = v16;
  sub_10078A3A0((unsigned __int16 *)(a1 + 40), (__int128 *)v28);
  char v17 = (int *)(a1 + 77088);
  ++*(_DWORD *)(a1 + 77224);
  if (a5 < 0.03) {
    ++*(_DWORD *)(a1 + 77228);
  }
  if (a6 < 0.01) {
    ++*(_DWORD *)(a1 + 77232);
  }
  sub_100A1628C((float32x2_t *)a1, *(double *)(a2 + 56));
  unint64_t v18 = *(void *)(a1 + 32) + 1LL;
  *(void *)(a1 + 32) = v18;
  if (v18 >= 0x64)
  {
    sub_100A16514((float32x2_t *)a1, (uint64_t)v28, *(double *)(a2 + 56));
    *(_OWORD *)(a1 + 38472) = *(_OWORD *)v28;
    *(_OWORD *)(a1 + 38484) = *(_OWORD *)&v28[12];
    *(void *)(a1 + 32) = 0LL;
    sub_100A166A0(a1, (uint64_t)v28);
    if ((_BYTE *)(a1 + 38504) != v28)
    {
      __int128 v19 = *(_OWORD *)&v28[16];
      *(_OWORD *)(a1 + 38504) = *(_OWORD *)v28;
      *(_OWORD *)(a1 + 38520) = v19;
      *(_DWORD *)(a1 + 38536) = v29;
    }
  }

  *(double *)(a1 + 24) = a4;
  *(_OWORD *)uint64_t v28 = *(unint64_t *)&a4;
  uint64_t v20 = sub_100A17350((unsigned __int16 *)(a1 + 40), 0x12CuLL);
  *(_DWORD *)&v28[16] = sub_1002B8A2C(a1 + 38504, (float *)(v20 + 16));
  *(_DWORD *)&v28[20] = v21;
  *(_DWORD *)&v28[24] = v22;
  sub_10078A3A0((unsigned __int16 *)(a1 + 38544), (__int128 *)v28);
  BOOL v23 = sub_100A168D8(a1, 0, a4, a5, a6);
  BOOL v24 = sub_100A168D8(a1, 1u, a4, a5, a6);
  if (*v17 != 2 && sub_100A16E30(a1) == 2)
  {
    *(_OWORD *)(a1 + 77192) = 0u;
    *(_OWORD *)(a1 + 77208) = 0u;
    *(_OWORD *)(a1 + 77160) = 0u;
    *(_OWORD *)(a1 + 77sub_1002E0644(v1 + 176) = 0u;
    *(_OWORD *)(a1 + 77128) = 0u;
    *(_OWORD *)(a1 + 77144) = 0u;
    *(_OWORD *)(a1 + 77096) = 0u;
    *(_OWORD *)(a1 + 77112) = 0u;
  }

  int v25 = sub_100A16E30(a1);
  *char v17 = v25;
  if (v25) {
    BOOL v26 = 0;
  }
  else {
    BOOL v26 = v23;
  }
  if (v26)
  {
    if ((sub_100A16F00(a1, 0) & 1) != 0) {
      goto LABEL_25;
    }
    int v25 = *v17;
  }

  if (v25 != 1 || !v24) {
    return 0LL;
  }
  uint64_t result = sub_100A16F00(a1, 1);
  if (!(_DWORD)result) {
    return result;
  }
LABEL_25:
  if (a4 - *(double *)a1 > 0.600000024)
  {
    *(double *)a1 = a4;
    *(double *)(a1 + 8) = a3;
    return 1LL;
  }

  return 0LL;
}

void sub_100A1628C(float32x2_t *a1, double a2)
{
  unint64_t v3 = a1 + 4807;
  int v4 = a1 + 2406;
  int v5 = a1[2406].u16[1];
  if (!a1[2406].i16[1])
  {
LABEL_7:
    unint64_t v12 = a1[5].u16[0] + (unint64_t)a1[5].u16[1] - 1;
    unint64_t v13 = a1[5].u32[1];
    if (v12 < v13) {
      unint64_t v13 = 0LL;
    }
    sub_10078A3A0((unsigned __int16 *)&a1[2406], (__int128 *)&a1[4 * (v12 - v13) + 6]);
    unint64_t v14 = v4->u16[0] + (unint64_t)v4->u16[1] - 1;
    unint64_t v15 = v4->u32[1];
    if (v14 < v15) {
      unint64_t v15 = 0LL;
    }
    uint64_t v16 = (uint64_t)&a1[4 * (v14 - v15) + 2409];
    float32x2_t v17 = *(float32x2_t *)v16;
LABEL_12:
    *unint64_t v3 = vadd_f32(v17, *v3);
    v3[1].f32[0] = *(float *)(v16 + 8) + v3[1].f32[0];
    return;
  }

  int v6 = a1 + 2407;
  uint64_t v7 = v4->u16[0];
  while (a2 - *(double *)&v6[4 * v7] > 6.02)
  {
    char v8 = &v6[4 * v7];
    *unint64_t v3 = vsub_f32(*v3, v8[2]);
    a1[4808].f32[0] = a1[4808].f32[0] - v8[3].f32[0];
    unint64_t v9 = v7 + 1;
    unint64_t v10 = a1[2406].u32[1];
    if (v9 < v10) {
      LOWORD(v10) = 0;
    }
    unsigned __int16 v11 = v9 - v10;
    uint64_t v7 = v11;
    v4->i16[0] = v11;
    a1[2406].i16[1] = --v5;
    if (!(_WORD)v5) {
      goto LABEL_7;
    }
  }

  unint64_t v18 = a1[5].u16[1];
  if (v18 >= 3)
  {
    __int128 v19 = a1 + 6;
    unint64_t v20 = v18 + a1[5].u16[0] - 1;
    unint64_t v21 = a1[5].u32[1];
    if (v20 < v21) {
      unint64_t v21 = 0LL;
    }
    int v22 = (float *)&v19[4 * (v20 - v21) + 2];
    BOOL v23 = (float *)(sub_100A17350((unsigned __int16 *)&a1[5], v18 - 2) + 16);
    uint64_t v24 = sub_100A17350((unsigned __int16 *)&a1[5], a1[5].u16[1] - 3LL);
    if (sub_100DEA4DC(v22, v23, (float *)(v24 + 16)) <= 0.30103)
    {
      unint64_t v25 = a1[5].u16[0] + (unint64_t)a1[5].u16[1] - 1;
      unint64_t v26 = a1[5].u32[1];
      if (v25 < v26) {
        unint64_t v26 = 0LL;
      }
      if (sub_100A172D8((float *)&v19[4 * (v25 - v26) + 2], (unsigned __int16 *)v4, 0.0349))
      {
        if (v4->i32[1] == v4->u16[1])
        {
          __int16 v27 = &v6[4 * v4->u16[0]];
          *unint64_t v3 = vsub_f32(*v3, v27[2]);
          v3[1].f32[0] = v3[1].f32[0] - v27[3].f32[0];
        }

        unint64_t v28 = a1[5].u16[0] + (unint64_t)a1[5].u16[1] - 1;
        unint64_t v29 = a1[5].u32[1];
        if (v28 < v29) {
          unint64_t v29 = 0LL;
        }
        sub_10078A3A0((unsigned __int16 *)v4, (__int128 *)&v19[4 * (v28 - v29)]);
        unint64_t v30 = v4->u16[0] + (unint64_t)v4->u16[1] - 1;
        unint64_t v31 = v4->u32[1];
        if (v30 < v31) {
          unint64_t v31 = 0LL;
        }
        int v32 = &v6[4 * (v30 - v31)];
        float32x2_t v33 = v32[2];
        uint64_t v16 = (uint64_t)&v32[2];
        float32x2_t v17 = v33;
        goto LABEL_12;
      }
    }
  }

void sub_100A16514(float32x2_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  double v3 = a3;
  int v5 = (unsigned __int16 *)&a1[2406] + 1;
  unsigned int v6 = a1[2406].u16[1];
  if (v6 > 3)
  {
    unint64_t v7 = 0LL;
    char v8 = (float *)&a1[4807];
    *(float *)&a3 = (float)v6;
    unint64_t v9 = (unsigned __int16 *)&a1[2406];
    float v10 = a1[4808].f32[0] / (float)v6;
    float32x2_t v16 = vdiv_f32(a1[4807], (float32x2_t)vdup_lane_s32(*(int32x2_t *)&a3, 0));
    float v17 = v10;
    *(void *)uint64_t v24 = 0x25800000000LL;
    do
    {
      uint64_t v11 = sub_100A17350(v9, v7);
      sub_10040B364(v24, v11 + 16);
      ++v7;
    }

    while (v7 < *v5);
    sub_1005B1AA8(v24, &v16, (uint64_t)&v18);
    float v13 = v21;
    float v12 = v22;
    float v14 = v23;
    if ((float)((float)((float)(v23 * v8[10]) + (float)(v22 * v8[9])) + (float)(v21 * v8[8])) <= 0.0)
    {
      uint64_t v15 = 0LL;
      float v18 = v21;
      float v19 = v22;
      float v20 = v23;
      do
      {
        *(float *)((char *)&v18 + v15) = -*(float *)((char *)&v18 + v15);
        v15 += 4LL;
      }

      while (v15 != 12);
      float v13 = v18;
      float v12 = v19;
      float v14 = v20;
    }

    *(double *)a2 = v3;
    *(void *)(a2 + 8) = 0LL;
    *(float *)(a2 + 16) = v13;
    *(float *)(a2 + 20) = v12;
    *(float *)(a2 + 24) = v14;
  }

  else
  {
    *(double *)a2 = a3;
    *(void *)(a2 + 8) = 0LL;
    *(void *)(a2 + 16) = 0LL;
    *(_DWORD *)(a2 + 24) = 1065353216;
  }

float *sub_100A166A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v35 = 1065353216;
  double v3 = (float *)(a1 + 38488);
  __int128 v33 = xmmword_10134442C;
  __int128 v34 = unk_10134443C;
  sub_1005AAE28(a1 + 38488, (uint64_t)&v24);
  for (unint64_t i = 0LL; i != 9; ++i)
    *((float *)&v33 + i) = *((float *)&v33 + i) - sub_1005AAEAC((uint64_t)&v24, i);
  v36[0] = v33;
  v36[1] = v34;
  int v37 = v35;
  float v6 = v3[1];
  float v5 = v3[2];
  float v7 = *v3;
  float v8 = v6 + (float)(v5 * -0.0);
  float v9 = 0.0;
  float v10 = -(float)(*v3 - (float)(v5 * 0.0));
  float v11 = (float)(v6 * -0.0) + (float)(*v3 * 0.0);
  *(float *)float v23 = v8;
  *(float *)&v23[1] = v10;
  *(float *)&_DWORD v23[2] = v11;
  float v12 = 1.0;
  float v13 = 0.0;
  float v14 = 0.0;
  float v15 = 0.0;
  if ((float)(v8 + (float)(v10 + v11)) != 0.0)
  {
    for (uint64_t j = 0LL; j != 3; ++j)
      float v15 = v15 + (float)(*(float *)&v23[j] * *(float *)&v23[j]);
    float v15 = atan2f(sqrtf(v15), (float)(v5 + (float)(v6 * 0.0)) + (float)(v7 * 0.0));
    float v12 = v11;
    float v13 = v10;
    float v14 = v8;
  }

  uint64_t v17 = 0LL;
  float v24 = v14;
  float v25 = v13;
  float v26 = v12;
  do
  {
    float v9 = v9 + (float)(*(float *)((char *)&v24 + v17) * *(float *)((char *)&v24 + v17));
    v17 += 4LL;
  }

  while (v17 != 12);
  if (sqrtf(v9) > 0.00000011921)
  {
    uint64_t v18 = 0LL;
    float v19 = 0.0;
    do
    {
      float v19 = v19 + (float)(*(float *)((char *)&v24 + v18) * *(float *)((char *)&v24 + v18));
      v18 += 4LL;
    }

    while (v18 != 12);
    float v20 = sqrtf(v19);
    float v14 = v14 / v20;
    float v13 = v13 / v20;
    float v12 = v12 / v20;
  }

  __float2 v21 = __sincosf_stret(v15);
  float v24 = v21.__cosval + (float)((float)(v14 * v14) * (float)(1.0 - v21.__cosval));
  float v25 = (float)(v21.__sinval * v12) + (float)((float)(v14 * v13) * (float)(1.0 - v21.__cosval));
  float v26 = (float)((float)(v14 * v12) * (float)(1.0 - v21.__cosval)) - (float)(v13 * v21.__sinval);
  float v27 = (float)((float)(v14 * v13) * (float)(1.0 - v21.__cosval)) - (float)(v12 * v21.__sinval);
  float v28 = v21.__cosval + (float)((float)(v13 * v13) * (float)(1.0 - v21.__cosval));
  float v29 = (float)(v21.__sinval * v14) + (float)((float)(v13 * v12) * (float)(1.0 - v21.__cosval));
  float v30 = (float)(v21.__sinval * v13) + (float)((float)(v14 * v12) * (float)(1.0 - v21.__cosval));
  float v31 = (float)((float)(v13 * v12) * (float)(1.0 - v21.__cosval)) - (float)(v14 * v21.__sinval);
  float v32 = v21.__cosval + (float)((float)(v12 * v12) * (float)(1.0 - v21.__cosval));
  return sub_100809A4C((uint64_t)&v24, (uint64_t)v36, a2);
}

BOOL sub_100A168D8(uint64_t a1, unsigned int a2, double a3, float a4, float a5)
{
  BOOL result = 0LL;
  if (a2 > 1) {
    return result;
  }
  float v7 = (unsigned __int16 *)(a1 + 38544);
  unsigned int v8 = *(unsigned __int16 *)(a1 + 38546);
  if (v8 < 3) {
    return result;
  }
  uint64_t v11 = a1 + 77064;
  if (a2) {
    float v12 = (unsigned __int16 *)(a1 + 57856);
  }
  else {
    float v12 = (unsigned __int16 *)(a1 + 38648);
  }
  if (a2) {
    float v13 = (float32x2_t *)(a1 + 77076);
  }
  else {
    float v13 = (float32x2_t *)(a1 + 77064);
  }
  float v14 = v12 + 4;
  unsigned __int16 v15 = v12[1];
  if (v15)
  {
    uint64_t v16 = *v12;
    while (a3 - *(double *)&v14[16 * v16] > 4.02)
    {
      uint64_t v17 = (float *)&v14[16 * v16];
      float v18 = v13->f32[1];
      v13->f32[0] = v13->f32[0] - v17[4];
      v13->f32[1] = v18 - v17[5];
      v13[1].f32[0] = v13[1].f32[0] - v17[6];
      unint64_t v19 = v16 + 1;
      unint64_t v20 = *((unsigned int *)v12 + 1);
      if (v19 < v20) {
        LOWORD(v20) = 0;
      }
      unsigned __int16 v21 = v19 - v20;
      uint64_t v16 = v21;
      *float v12 = v21;
      v12[1] = --v15;
      if (!v15)
      {
        unsigned __int16 v15 = 0;
        break;
      }
    }

    unsigned int v8 = *(unsigned __int16 *)(a1 + 38546);
    if (v8 < 3) {
      return 0LL;
    }
    *(float *)v22.i32 = sub_100A175C4(a4, a5);
    float v23 = *(float *)v22.i32;
    if (v15 >= 3u)
    {
      sub_100A17640((uint64_t)v12);
      unsigned int v8 = *(unsigned __int16 *)(a1 + 38546);
      goto LABEL_25;
    }
  }

  else
  {
    *(float *)v22.i32 = sub_100A175C4(a4, a5);
    float v23 = *(float *)v22.i32;
  }

  v22.i32[0] = 1.0;
LABEL_25:
  uint64_t v24 = a1 + 38552;
  unint64_t v25 = *v7 + (unint64_t)v8 - 1;
  unint64_t v26 = *((unsigned int *)v7 + 1);
  if (v25 < v26) {
    unint64_t v26 = 0LL;
  }
  float v27 = (float32x2_t *)(v24 + 32 * (v25 - v26));
  float v28 = v27[3].f32[0] / *(float *)v22.i32;
  float v80 = *(float *)v22.i32;
  float32x2_t v29 = (float32x2_t)vdup_lane_s32(v22, 0);
  float32x2_t v85 = vdiv_f32(v27[2], v29);
  float v86 = v28;
  float v30 = (float32x2_t *)sub_100A17350(v7, v8 - 2LL);
  float v31 = v30[3].f32[0] / v80;
  float32x2_t v83 = vdiv_f32(v30[2], v29);
  float v84 = v31;
  float v32 = (float32x2_t *)sub_100A17350(v7, v7[1] - 3LL);
  float v33 = v32[3].f32[0] / v80;
  float32x2_t v81 = vdiv_f32(v32[2], v29);
  float v82 = v33;
  float v34 = sub_100DEA4DC((float *)&v85, (float *)&v83, (float *)&v81);
  ++*(_DWORD *)(v11 + 172);
  if (v34 > 0.47712)
  {
    BOOL result = 0LL;
    ++*(_DWORD *)(v11 + 176);
    return result;
  }

  uint64_t v35 = v7[1];
  unint64_t v36 = *v7 + v35 - 1;
  unint64_t v37 = *((unsigned int *)v7 + 1);
  if (v36 < v37) {
    unint64_t v37 = 0LL;
  }
  uint64_t v38 = v24 + 32 * (v36 - v37);
  uint64_t v39 = sub_100A17350(v7, v35 - 2);
  float v40 = (float)(*(float *)(v38 + 16) * *(float *)(v39 + 20)) - (float)(*(float *)(v38 + 20) * *(float *)(v39 + 16));
  if (a2 == 1)
  {
    if (v40 >= 0.0) {
      return 0LL;
    }
  }

  else if (v40 < 0.0)
  {
    return 0LL;
  }

  uint64_t v41 = v12[1];
  if (!v12[1])
  {
LABEL_59:
    unint64_t v73 = *v7 + (unint64_t)v7[1] - 1;
    unint64_t v74 = *((unsigned int *)v7 + 1);
    if (v73 < v74) {
      unint64_t v74 = 0LL;
    }
    sub_10078A3A0(v12, (__int128 *)(v24 + 32 * (v73 - v74)));
    unint64_t v75 = *v7 + (unint64_t)v7[1] - 1;
    unint64_t v76 = *((unsigned int *)v7 + 1);
    if (v75 < v76) {
      unint64_t v76 = 0LL;
    }
    __int128 v77 = (float32x2_t *)(v24 + 32 * (v75 - v76));
    float32x2_t *v13 = vadd_f32(v77[2], *v13);
    v13[1].f32[0] = v77[3].f32[0] + v13[1].f32[0];
    return 1LL;
  }

  float v42 = (float)v41;
  float v43 = v13->f32[0] / v42;
  float v44 = v13->f32[1] / v42;
  float v45 = v13[1].f32[0] / v42;
  unint64_t v46 = *v7 + (unint64_t)v7[1] - 1;
  unint64_t v47 = *((unsigned int *)v7 + 1);
  if (v46 < v47) {
    unint64_t v47 = 0LL;
  }
  uint64_t v48 = (float *)(v24 + 32 * (v46 - v47));
  unint64_t v49 = v41 + *v12 - 1;
  unint64_t v50 = *((unsigned int *)v12 + 1);
  if (v49 < v50) {
    unint64_t v50 = 0LL;
  }
  float v52 = v48[4];
  float v51 = v48[5];
  float v79 = (float)(v52 * *(float *)&v14[16 * (v49 - v50) + 10]) - (float)(v51 * *(float *)&v14[16 * (v49 - v50) + 8]);
  float v78 = sub_100A17548(v52 - v43, v51 - v44, v48[6] - v45);
  float v54 = v53;
  float v56 = v55;
  unint64_t v57 = *v12 + (unint64_t)v12[1] - 1;
  unint64_t v58 = *((unsigned int *)v12 + 1);
  if (v57 < v58) {
    unint64_t v58 = 0LL;
  }
  float v59 = sub_100A17548( *(float *)&v14[16 * (v57 - v58) + 8] - v43,  *(float *)&v14[16 * (v57 - v58) + 10] - v44,  *(float *)&v14[16 * (v57 - v58) + 12] - v45);
  float v62 = acosf((float)((float)(v56 * v60) + (float)(v54 * v61)) + (float)(v78 * v59));
  if (v62 <= 0.0) {
    float v62 = -v62;
  }
  if (a2 == 1)
  {
    if (v79 < 0.0) {
      goto LABEL_54;
    }
  }

  else if (v79 >= 0.0)
  {
    goto LABEL_54;
  }

  if (v62 < v23)
  {
    unint64_t v63 = *v12 + (unint64_t)v12[1] - 1;
    unint64_t v64 = *((unsigned int *)v12 + 1);
    if (v63 < v64) {
      unint64_t v64 = 0LL;
    }
  }

uint64_t sub_100A16E30(uint64_t a1)
{
  uint64_t v1 = (unsigned __int16 *)(a1 + 57858);
  uint64_t v2 = (unsigned __int16 *)(a1 + 38650);
  uint64_t result = *(unsigned int *)(a1 + 77088);
  if ((_DWORD)result == 1)
  {
    if (*v1 > 0x87u) {
      return 1LL;
    }
    goto LABEL_5;
  }

  if ((_DWORD)result)
  {
LABEL_5:
    int v4 = 0;
    goto LABEL_6;
  }

  if (*v2 > 0x87u) {
    return 0LL;
  }
  int v4 = 1;
LABEL_6:
  unint64_t v5 = *v1;
  if ((_DWORD)result == 1)
  {
    unint64_t v6 = *v2;
    if (v6 >= 0x1E && v5 + 40 < v6) {
      return 0LL;
    }
  }

  if ((_DWORD)result == 2) {
    return v5 > *v2;
  }
  return result;
}

uint64_t sub_100A16F00(uint64_t a1, int a2)
{
  if (a2 == 2) {
    goto LABEL_57;
  }
  int v4 = (unsigned __int16 *)(a2 ? a1 + 57856 : a1 + 38648);
  unint64_t v5 = v4[1];
  unint64_t v6 = v5 - 2;
  if (v5 < 2) {
    goto LABEL_57;
  }
  float v7 = v4 + 4;
  unint64_t v8 = v5 + *v4 - 1;
  unint64_t v9 = *((unsigned int *)v4 + 1);
  if (v8 < v9) {
    unint64_t v9 = 0LL;
  }
  double v10 = *(double *)&v7[16 * (v8 - v9)];
  if (v10 - *(double *)sub_100A17350(v4, v6) >= 0.200000003)
  {
LABEL_57:
    char v32 = 0;
    return v32 & 1;
  }

  uint64_t v11 = 0LL;
  uint64_t v12 = v4[1];
  unint64_t v13 = *v4 + v12 - 1;
  unint64_t v14 = *((unsigned int *)v4 + 1);
  if (v13 < v14) {
    unint64_t v14 = 0LL;
  }
  unsigned __int16 v15 = (unint64_t *)(a1 + 77096);
  uint64_t v16 = (unint64_t *)(a1 + 77160);
  uint64_t v17 = (float *)&v7[16 * (v13 - v14)];
  float v18 = v17[6];
  float v53 = v17[4];
  float v54 = v17[5];
  float v56 = v53;
  float v57 = v54;
  float v52 = v18;
  float v58 = v18;
  float v19 = 0.0;
  do
  {
    float v19 = v19 + (float)(*(float *)((char *)&v56 + v11) * *(float *)((char *)&v56 + v11));
    v11 += 4LL;
  }

  while (v11 != 12);
  if (a2) {
    unint64_t v20 = v16;
  }
  else {
    unint64_t v20 = v15;
  }
  if (sqrtf(v19) > 0.00000011921)
  {
    uint64_t v21 = 0LL;
    float v22 = 0.0;
    do
    {
      float v22 = v22 + (float)(*(float *)((char *)&v56 + v21) * *(float *)((char *)&v56 + v21));
      v21 += 4LL;
    }

    while (v21 != 12);
    float v23 = sqrtf(v22);
    float v53 = v53 / v23;
    float v54 = v54 / v23;
    float v52 = v18 / v23;
  }

  uint64_t v24 = (float *)sub_100A17350(v4, v12 - 2);
  uint64_t v25 = 0LL;
  float v26 = v24[5];
  float v50 = v24[6];
  float v51 = v24[4];
  float v56 = v51;
  float v57 = v26;
  float v58 = v50;
  float v27 = 0.0;
  do
  {
    float v27 = v27 + (float)(*(float *)((char *)&v56 + v25) * *(float *)((char *)&v56 + v25));
    v25 += 4LL;
  }

  while (v25 != 12);
  if (sqrtf(v27) > 0.00000011921)
  {
    uint64_t v28 = 0LL;
    float v29 = 0.0;
    do
    {
      float v29 = v29 + (float)(*(float *)((char *)&v56 + v28) * *(float *)((char *)&v56 + v28));
      v28 += 4LL;
    }

    while (v28 != 12);
    float v30 = sqrtf(v29);
    float v26 = v26 / v30;
    float v50 = v50 / v30;
    float v51 = v51 / v30;
  }

  uint64_t v31 = 0LL;
  char v32 = 0;
  unint64_t v33 = 0LL;
  float v34 = v20;
  do
  {
    uint64_t v35 = (float *)((char *)&unk_101344354 + v31);
    if (a2 == 1) {
      unint64_t v36 = (char *)&unk_101344354;
    }
    else {
      unint64_t v36 = (char *)&unk_1013443B4;
    }
    if (a2 != 1) {
      uint64_t v35 = (float *)((char *)&unk_1013443B4 + v31);
    }
    float v37 = *(float *)&v36[v31];
    float v39 = v35[1];
    float v38 = v35[2];
    float v40 = (float)(v37 * (float)-v26) + (float)(v51 * v39);
    float v55 = (float)(v37 * (float)-v54) + (float)(v53 * v39);
    float v41 = atan2f(v55, (float)((float)(v52 * v38) + (float)(v54 * v39)) + (float)(v53 * v37));
    if (v41 <= 0.0) {
      float v42 = -v41;
    }
    else {
      float v42 = v41;
    }
    float v43 = atan2f(v40, (float)((float)(v50 * v38) + (float)(v26 * v39)) + (float)(v51 * v37));
    if (v43 <= 0.0) {
      float v43 = -v43;
    }
    if (v42 < 0.7854 && v43 < 0.7854)
    {
      if (a2 == 1)
      {
        if (v40 > 0.0 && v55 < 0.0) {
          goto LABEL_45;
        }
      }

      else if (v40 < 0.0 && v55 > 0.0)
      {
LABEL_45:
        unint64_t v44 = *v34 + 1;
        *float v34 = v44;
        v32 |= v44 > 1;
      }
    }

    if (*v34++) {
      ++v33;
    }
    v31 += 12LL;
  }

  while (v31 != 96);
  if ((v32 & 1) != 0)
  {
    uint64_t v46 = 0LL;
    uint64x2_t v47 = (uint64x2_t)vdupq_n_s64(1uLL);
    do
    {
      *(uint64x2_t *)&v20[v46] = vqsubq_u64(*(uint64x2_t *)&v20[v46], v47);
      v46 += 2LL;
    }

    while (v46 != 8);
  }

  if (a2) {
    uint64_t v48 = v15;
  }
  else {
    uint64_t v48 = v16;
  }
  if (v33 < 3)
  {
    *((_OWORD *)v48 + 2) = 0u;
    *((_OWORD *)v48 + 3) = 0u;
    *(_OWORD *)uint64_t v48 = 0u;
    *((_OWORD *)v48 + 1) = 0u;
  }

  else
  {
    memset_pattern16(v48, &unk_101344490, 0x40uLL);
  }

  return v32 & 1;
}

BOOL sub_100A172D8(float *a1, unsigned __int16 *a2, float a3)
{
  if (!a2[1]) {
    return 1LL;
  }
  unint64_t v6 = 0LL;
  do
  {
    uint64_t v7 = sub_100A17350(a2, v6);
    BOOL result = sub_100DEA678(a1, (float *)(v7 + 16), a3);
    if (!result) {
      break;
    }
    ++v6;
  }

  while (v6 < a2[1]);
  return result;
}

uint64_t sub_100A17350(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101867678);
    }
    uint64_t v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)std::runtime_error buf = 134218240;
      unint64_t v17 = a2;
      __int16 v18 = 1024;
      int v19 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101867678);
      }
      int v9 = *((_DWORD *)a1 + 1);
      int v12 = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 1024;
      int v15 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  (size_t)&v12,  18);
      uint64_t v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const T &CMQueue<CLSwimStrokeCounter::VectorSample>::operator[](const size_t) const [T = CLSwimStrokeCounter::VectorSample]",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0LL;
  }
  return (uint64_t)&a1[16 * (v4 - v5) + 4];
}

float sub_100A17548(float result, float a2, float a3)
{
  uint64_t v3 = 0LL;
  *(float *)uint64_t v7 = result;
  *(float *)&v7[1] = a2;
  *(float *)&v7[2] = a3;
  float v4 = 0.0;
  do
  {
    float v4 = v4 + (float)(*(float *)&v7[v3] * *(float *)&v7[v3]);
    ++v3;
  }

  while (v3 != 3);
  if (sqrtf(v4) > 0.00000011921)
  {
    uint64_t v5 = 0LL;
    float v6 = 0.0;
    do
    {
      float v6 = v6 + (float)(*(float *)&v7[v5] * *(float *)&v7[v5]);
      ++v5;
    }

    while (v5 != 3);
    return result / sqrtf(v6);
  }

  return result;
}

float sub_100A175C4(float a1, float a2)
{
  for (uint64_t i = 0LL; i != 3; ++i)
  {
    if (flt_101344420[i] > a2) {
      break;
    }
  }

  for (uint64_t j = 0LL; j != 3; ++j)
  {
    if (flt_101344414[j] > a1) {
      break;
    }
  }

  return flt_101344450[4 * i + j] * 3.14159265 / 180.0;
}

uint64_t sub_100A17640(uint64_t result)
{
  if (*(_WORD *)(result + 2))
  {
    uint64_t v1 = (unsigned __int16 *)result;
    unint64_t v2 = 0LL;
    float v3 = 0.0;
    do
    {
      BOOL result = sub_100A17350(v1, v2);
      float v3 = v3
         + sqrtf( (float)((float)(*(float *)(result + 24) * *(float *)(result + 24))
      ++v2;
    }

    while (v2 < v1[1]);
  }

  return result;
}

float32x2_t sub_100A176BC(uint64_t a1, double a2)
{
  unsigned int v2 = *(_DWORD *)(a1 + 77224);
  if (v2)
  {
    *(float *)&a2 = (float)v2;
    return vdiv_f32( vmul_f32(vcvt_f32_u32(*(uint32x2_t *)(a1 + 77228)), (float32x2_t)vdup_n_s32(0x42C80000u)),  (float32x2_t)vdup_lane_s32(*(int32x2_t *)&a2, 0));
  }

  else
  {
    return 0LL;
  }

void sub_100A17728(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_100A17754(double a1, double a2, double a3)
{
  uint64_t result = 0LL;
  if (a1 > 0.0 && a2 > 0.0)
  {
    double v4 = a1 * 60.0;
    LODWORD(result) = sub_100AF8F04(a2, a3);
    if (v4 > 100.0) {
      return result;
    }
    else {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100A177A8(double a1, double a2, double a3)
{
  uint64_t result = 0LL;
  if (a1 > 0.0 && a2 > 0.0)
  {
    double v4 = a1 * 60.0;
    LODWORD(result) = sub_100AF8F04(a2, a3);
    if (v4 > 140.0) {
      return 1LL;
    }
    else {
      return result;
    }
  }

  return result;
}

uint64_t sub_100A177FC(double a1, double a2, double a3, double a4)
{
  uint64_t v8 = 0LL;
  if (a1 > 0.0 && a2 > 0.0)
  {
    double v9 = a1 * 60.0;
    BOOL v10 = sub_100AF8F04(a2, a3);
    uint64_t v8 = v9 > 140.0 || v10;
  }

  if (a4 > 0.0)
  {
    int v11 = 0;
    if (a1 > 0.0 && a2 / a4 > 0.0)
    {
      BOOL v12 = sub_100AF8F04(a2 / a4, a3);
      int v11 = a1 * 60.0 > 140.0 || v12;
    }

    return v8 | v11;
  }

  return v8;
}

double sub_100A178C4(double a1, double a2)
{
  double result = 0.0;
  if (a1 >= 0.5) {
    return a2 / a1 * 100.0;
  }
  return result;
}

BOOL sub_100A178EC(uint64_t a1)
{
  int v2 = sub_100BEF640(a1);
  BOOL result = 0LL;
  if (v2 == 1 && *(void *)(a1 + 224) != 1LL) {
    return *(void *)(a1 + 112) == 17LL;
  }
  return result;
}

BOOL sub_100A17934(uint64_t a1)
{
  return a1 == 17;
}

id sub_100A17940(id *a1)
{
  return [*a1 count];
}

id sub_100A17958@<X0>(id *a1@<X0>, double *a2@<X1>, void **a3@<X8>)
{
  *a3 = 0LL;
  a3[1] = 0LL;
  a3[2] = 0LL;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id v6 = [*a1 allKeys];
  id result = [v6 countByEnumeratingWithState:&v27 objects:v31 count:16];
  id v8 = result;
  if (result)
  {
    uint64_t v9 = *(void *)v28;
    do
    {
      BOOL v10 = 0LL;
      do
      {
        if (*(void *)v28 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v27 + 1) + 8LL * (void)v10);
        sub_100A17B84(a1, v11, (uint64_t)v26);
        double v12 = sub_100E7A8F4((uint64_t)v26);
        double v13 = *a2;
        sub_100A184F0((uint64_t)v26);
        if (v12 > v13)
        {
          int v15 = (uint64_t *)a3[1];
          unint64_t v14 = (unint64_t)a3[2];
          if ((unint64_t)v15 >= v14)
          {
            uint64_t v17 = ((char *)v15 - (_BYTE *)*a3) >> 3;
            uint64_t v18 = v14 - (void)*a3;
            uint64_t v19 = v18 >> 2;
            else {
              unint64_t v20 = v19;
            }
            if (v20) {
              uint64_t v21 = (char *)sub_1000071BC((uint64_t)(a3 + 2), v20);
            }
            else {
              uint64_t v21 = 0LL;
            }
            float v22 = (uint64_t *)&v21[8 * v17];
            *float v22 = v11;
            uint64_t v16 = v22 + 1;
            uint64_t v24 = (char *)*a3;
            float v23 = (char *)a3[1];
            if (v23 != *a3)
            {
              do
              {
                uint64_t v25 = *((void *)v23 - 1);
                v23 -= 8;
                *--float v22 = v25;
              }

              while (v23 != v24);
              float v23 = (char *)*a3;
            }

            *a3 = v22;
            a3[1] = v16;
            a3[2] = &v21[8 * v20];
            if (v23) {
              operator delete(v23);
            }
          }

          else
          {
            uint64_t *v15 = v11;
            uint64_t v16 = v15 + 1;
          }

          a3[1] = v16;
        }

        BOOL v10 = (char *)v10 + 1;
      }

      while (v10 != v8);
      id result = [v6 countByEnumeratingWithState:&v27 objects:v31 count:16];
      id v8 = result;
    }

    while (result);
  }

  return result;
}

void sub_100A17B4C(_Unwind_Exception *exception_object)
{
  float v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

id sub_100A17B84@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id result = [*a1 objectForKey:a2];
  if (result)
  {
    id result = (id)sub_100E7A8F0( &v6,  +[NSDictionary dictionaryWithDictionary:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithDictionary:",  result));
    *(void *)a3 = v6;
    *(_OWORD *)(a3 + 8) = v7;
    *(void *)(a3 + 24) = v8;
    __int128 v5 = v10;
    *(_OWORD *)(a3 + 32) = v9;
    *(_OWORD *)(a3 + 48) = v5;
    *(_OWORD *)(a3 + 64) = v11;
    *(void *)(a3 + 80) = v12;
    *(void *)(a3 + 104) = v14;
    *(_OWORD *)(a3 + 88) = v13;
    *(void *)(a3 + 112) = v15;
    *(_BYTE *)(a3 + 120) = 1;
  }

  else
  {
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 120) = 0;
  }

  return result;
}

CFStringRef sub_100A17C34(int a1, void *a2)
{
  if (a1 < 1 || ![a2 count]) {
    return &stru_1018A4B00;
  }
  int v4 = [a2 count];
  if (v4 <= a1) {
    LODWORD(v5) = 0;
  }
  else {
    LODWORD(v5) = arc4random_uniform(v4 - a1);
  }
  id v7 = +[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array");
  if ((int)v5 < v4)
  {
    uint64_t v5 = (int)v5;
    do
    {
      objc_msgSend(v7, "addObject:", objc_msgSend(a2, "objectAtIndex:", v5++));
    }

    while (v4 != v5);
  }

  return (const __CFString *)objc_msgSend(v7, "componentsJoinedByString:", @", ");
}

CFStringRef sub_100A17D1C(id *a1, int a2)
{
  return sub_100A17C34(a2, [*a1 allKeys]);
}

double sub_100A17D48(id *a1)
{
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v2 = [*a1 allKeys];
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (!v3) {
    return -1.0;
  }
  uint64_t v4 = *(void *)v11;
  double v5 = -1.0;
  do
  {
    for (uint64_t i = 0LL; i != v3; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v11 != v4) {
        objc_enumerationMutation(v2);
      }
      sub_100A17B84(a1, *(void *)(*((void *)&v10 + 1) + 8LL * (void)i), (uint64_t)v9);
      double v7 = sub_100E7A8F4((uint64_t)v9);
      if (v5 < v7) {
        double v5 = v7;
      }
      sub_100A184F0((uint64_t)v9);
    }

    id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  }

  while (v3);
  return v5;
}

void sub_100A17E68( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100A17E84@<X0>(id *a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  uint64_t v4 = sub_10000CF44(&v18, (uint64_t)"count: ", 7LL);
  std::ostream::operator<<(v4, [*a1 count]);
  if ((int)[*a1 count] >= 1)
  {
    double v5 = sub_10000CF44(&v18, (uint64_t)", samples: ", 11LL);
    uint64_t v6 = (char *)-[__CFString UTF8String]((id)sub_100A17C34(5, [*a1 allKeys]), "UTF8String");
    sub_1010DDBC0(__p, v6);
    if ((v16 & 0x80u) == 0) {
      double v7 = __p;
    }
    else {
      double v7 = (void **)__p[0];
    }
    if ((v16 & 0x80u) == 0) {
      uint64_t v8 = v16;
    }
    else {
      uint64_t v8 = (uint64_t)__p[1];
    }
    sub_10000CF44(v5, (uint64_t)v7, v8);
    double v9 = sub_100A17D48(a1);
    __int128 v10 = sub_10000CF44(&v18, (uint64_t)", oldest age: ", 14LL);
    uint64_t v11 = *v10;
    *(uint64_t *)((char *)v10 + *(void *)(*v10 - 24) + 16) = 2LL;
    *(_DWORD *)((char *)v10 + *(void *)(v11 - 24) + 8) = *(_DWORD *)((_BYTE *)v10 + *(void *)(v11 - 24) + 8) & 0xFFFFFEFB | 4;
    __int128 v12 = (void *)std::ostream::operator<<(v9 / 3600.0);
    sub_10000CF44(v12, (uint64_t)"h", 1LL);
  }

  std::stringbuf::str(a2, &v19);
  *(void *)((char *)v17
  uint64_t v18 = v13;
  std::streambuf::~streambuf(&v19);
  return std::ios::~ios(&v20);
}

void sub_100A1805C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a15);
  _Unwind_Resume(a1);
}

id sub_100A18094(id *a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101867698);
  }
  id v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v3 = [*a1 count];
    *(_DWORD *)std::runtime_error buf = 67240192;
    unsigned int v31 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "WifiAssociatedApCentroidStore, %{public}d entries",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101867698);
    }
    uint64_t v16 = qword_101934858;
    unsigned int v17 = [*a1 count];
    LODWORD(__p[0].__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(__p[0].__r_.__value_.__r.__words[0]) = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  0LL,  "WifiAssociatedApCentroidStore, %{public}d entries",  __p,  8);
    std::stringbuf v19 = (uint8_t *)v18;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiAssociatedApCentroidKVStoreDictionary::logAllEntries() const",  "%s\n",  v18);
    if (v19 != buf) {
      free(v19);
    }
  }

  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  id v4 = *a1;
  id result = [*a1 countByEnumeratingWithState:&v21 objects:v29 count:16];
  id v6 = result;
  if (result)
  {
    uint64_t v7 = *(void *)v22;
    do
    {
      uint64_t v8 = 0LL;
      do
      {
        if (*(void *)v22 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v21 + 1) + 8LL * (void)v8);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101867698);
        }
        __int128 v10 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          sub_100A17B84(a1, v9, (uint64_t)buf);
          sub_100E7A91C((uint64_t)buf, __p);
          uint64_t v11 = __p;
          if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
            uint64_t v11 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
          }
          LODWORD(v26.__r_.__value_.__l.__data_) = 136380675;
          *(std::string::size_type *)((char *)v26.__r_.__value_.__r.__words + 4) = (std::string::size_type)v11;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "WifiAssociatedApCentroidStore, %{private}s",  (uint8_t *)&v26,  0xCu);
          sub_100A184F0((uint64_t)buf);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101867698);
          }
          uint64_t v12 = qword_101934858;
          sub_100A17B84(a1, v9, (uint64_t)__p);
          sub_100E7A91C((uint64_t)__p, &v26);
          uint64_t v13 = &v26;
          if ((v26.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            uint64_t v13 = (std::stringbuf::string_type *)v26.__r_.__value_.__r.__words[0];
          }
          int v27 = 136380675;
          __int128 v28 = v13;
          LODWORD(v20) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  0LL,  "WifiAssociatedApCentroidStore, %{private}s",  &v27,  v20);
          uint64_t v15 = v14;
          sub_100A184F0((uint64_t)__p);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiAssociatedApCentroidKVStoreDictionary::logAllEntries() const",  "%s\n",  v15);
        }

        uint64_t v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id result = [v4 countByEnumeratingWithState:&v21 objects:v29 count:16];
      id v6 = result;
    }

    while (result);
  }

  return result;
}

void sub_100A184C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_100A184F0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 120))
  {
  }

  return a1;
}

void sub_100A18538(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_100A18694(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0LL;
      *(_BYTE *)(a1 + 16) |= 1u;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_28;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          uint64_t v14 = 0LL;
          goto LABEL_30;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_28:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v14 = 0LL;
      }
LABEL_30:
      *(void *)(a1 + 8) = v14;
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100A18A4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100F5A080();
  sub_100F5CC20(v3, (uint64_t)a2);
}

void sub_100A18B1C(id a1)
{
  qword_101999F28 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLSignalEnvironmentProviderSilo");
}

uint64_t sub_100A18BD0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100A1904C;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101999F40 != -1) {
    dispatch_once(&qword_101999F40, block);
  }
  return qword_1019A19A8;
}

uint64_t sub_100A18D78(uint64_t a1, double a2, double a3)
{
  unint64_t v6 = *(_DWORD **)(a1 + 136);
  if (!v6)
  {
    unint64_t v6 = operator new(0x20uLL);
    *(void *)unint64_t v6 = -1LL;
    sub_1002E4C3C(v6 + 2, "CLCoarseSignalEnvironmentDataManager", 1LL, 1LL);
    v6[6] = 0;
    *(void *)(a1 + 136) = v6;
  }

  char v11 = 0;
  if (*(char *)(a1 + 479) < 0)
  {
    sub_1010DD48C(__p, *(void **)(a1 + 456), *(void *)(a1 + 464));
  }

  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 456);
    uint64_t v10 = *(void *)(a1 + 472);
  }

  uint64_t v7 = sub_100F32664((uint64_t)v6, (const char *)__p, &v11, a2, a3);
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  return v7;
}

void sub_100A18E44( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void sub_100A18EA8(id a1)
{
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_101867900);
  }
  uint64_t v1 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::runtime_error buf = 67240192;
    int v6 = 1;
    _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEFAULT,  "CLSignalEnvironmentProvider is supported: %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    v4[0] = 67240192;
    v4[1] = 1;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "CLSignalEnvironmentProvider is supported: %{public}d",  v4,  8);
    uint64_t v3 = (uint8_t *)v2;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "+[CLSignalEnvironmentProviderAdapter(IsSupported) isSupported]_block_invoke",  "%s\n",  v2);
    if (v3 != buf) {
      free(v3);
    }
  }

uint64_t sub_100A1904C(uint64_t a1)
{
  id v2 = operator new(0x1F8uLL);
  uint64_t result = sub_100A19098((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A19A8 = (uint64_t)v2;
  return result;
}

void sub_100A19084(_Unwind_Exception *a1)
{
}

uint64_t sub_100A19098(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100A19D4C(a1, "CLSignalEnvironmentProvider", a2);
  *(void *)uint64_t v4 = off_101867758;
  *(_OWORD *)(v4 + 112) = 0u;
  unsigned int v5 = (uint64_t *)(v4 + 112);
  *(_OWORD *)(v4 + 128) = 0u;
  *(void *)(v4 + 144) = 0LL;
  *(_DWORD *)(v4 + 152) = 1;
  *(_BYTE *)(v4 + 156) = 0;
  sub_100382F80(v4 + 160, *(void **)(v4 + 32), (uint64_t)sub_100A19DE8, a1);
  int v6 = (uint64_t *)(a1 + 408);
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  unint64_t v65 = (void **)(a1 + 432);
  uint64_t v7 = (void **)(a1 + 456);
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_BYTE *)(a1 + 488) = 1;
  char v8 = (int *)(a1 + 492);
  *(void *)(a1 + 492) = -1LL;
  BOOL v9 = operator new(0x20uLL);
  *(void *)BOOL v9 = -1LL;
  sub_1002E4C3C(v9 + 2, "CLCoarseSignalEnvironmentDataManager", 1LL, 1LL);
  v9[6] = 0;
  *(void *)(a1 + 128) = v9;
  uint64_t v10 = operator new(0x340uLL);
  sub_100F37168(v10, a2);
  *(void *)(a1 + 480) = v10;
  char v11 = (char *)sub_1002F8DDC();
  sub_10030AC8C(v11, (uint64_t)&__p);
  char v12 = off_10198ED00;
  if ((v68 & 0x80u) == 0) {
    size_t v13 = v68;
  }
  else {
    size_t v13 = v67;
  }
  size_t v14 = strlen(off_10198ED00);
  unint64_t v15 = buf;
  sub_1000392EC((uint64_t)buf, v13 + v14);
  if (v72 < 0) {
    unint64_t v15 = *(uint8_t **)buf;
  }
  if (v13)
  {
    if ((v68 & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    memmove(v15, p_p, v13);
  }

  unsigned int v17 = &v15[v13];
  if (v14) {
    memmove(v17, v12, v14);
  }
  v17[v14] = 0;
  *(_OWORD *)unint64_t v65 = *(_OWORD *)buf;
  *(void *)(a1 + 448) = v72;
  uint64_t v18 = off_10198ED08;
  if ((v68 & 0x80u) == 0) {
    size_t v19 = v68;
  }
  else {
    size_t v19 = v67;
  }
  size_t v20 = strlen(off_10198ED08);
  __int128 v21 = buf;
  sub_1000392EC((uint64_t)buf, v19 + v20);
  if (v72 < 0) {
    __int128 v21 = *(uint8_t **)buf;
  }
  if (v19)
  {
    if ((v68 & 0x80u) == 0) {
      __int128 v22 = &__p;
    }
    else {
      __int128 v22 = __p;
    }
    memmove(v21, v22, v19);
  }

  __int128 v23 = &v21[v19];
  if (v20) {
    memmove(v23, v18, v20);
  }
  v23[v20] = 0;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)buf;
  *(void *)(a1 + 472) = v72;
  sub_1002F0B04(buf);
  BOOL v24 = sub_1002A8560(*(uint64_t *)buf, "SignalEnvServerUrl", (std::string *)(a1 + 408));
  uint64_t v25 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    std::stringbuf::string_type v26 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }

  if (v24)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    __int128 v28 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v29 = a1 + 408;
      *(_DWORD *)std::runtime_error buf = 136446210;
      *(void *)&uint8_t buf[4] = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CLSE, server, %{public}s, overridden, 1",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      uint64_t v30 = a1 + 408;
      int v69 = 136446210;
      uint64_t v70 = v30;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE, server, %{public}s, overridden, 1",  &v69,  12);
      char v32 = (uint8_t *)v31;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider::CLSignalEnvironmentProvider(id<CLIntersiloUniverse>)",  "%s\n",  v31);
LABEL_103:
      if (v32 != buf) {
        free(v32);
      }
    }
  }

  else
  {
    std::string::assign((std::string *)(a1 + 408), off_10198ECF8);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    unint64_t v33 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v34 = a1 + 408;
      *(_DWORD *)std::runtime_error buf = 136446210;
      *(void *)&uint8_t buf[4] = v34;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "CLSE, server, %{public}s, overridden, 0",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      uint64_t v60 = a1 + 408;
      int v69 = 136446210;
      uint64_t v70 = v60;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE, server, %{public}s, overridden, 0",  &v69,  12);
      char v32 = (uint8_t *)v61;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider::CLSignalEnvironmentProvider(id<CLIntersiloUniverse>)",  "%s\n",  v61);
      goto LABEL_103;
    }
  }

  std::string::append((std::string *)(a1 + 408), off_10198ED00);
  sub_1002F0B04(buf);
  int v35 = sub_1002A7CB0(*(uint64_t *)buf, "SignalEnvironmentType", (_DWORD *)(a1 + 492));
  unint64_t v36 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    float v37 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }

  if (v35)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    float v39 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      int v40 = *v8;
      *(_DWORD *)std::runtime_error buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v40;
      _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "CLSE, signal environment, %{public}d, overridden, 1",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      int v41 = *v8;
      int v69 = 67240192;
      LODWORD(v70) = v41;
      LODWORD(v64) = 8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE, signal environment, %{public}d, overridden, 1",  &v69,  v64);
      float v43 = (uint8_t *)v42;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider::CLSignalEnvironmentProvider(id<CLIntersiloUniverse>)",  "%s\n",  v42);
LABEL_108:
      if (v43 != buf) {
        free(v43);
      }
    }
  }

  else
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    unint64_t v44 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "CLSE, signal environment, overridden, 0",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      LOWORD(v69) = 0;
      LODWORD(v64) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE, signal environment, overridden, 0",  &v69,  v64);
      float v43 = (uint8_t *)v62;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider::CLSignalEnvironmentProvider(id<CLIntersiloUniverse>)",  "%s\n",  v62);
      goto LABEL_108;
    }
  }

  sub_1002F0B04(buf);
  float v45 = (int *)(a1 + 496);
  int v46 = sub_1002A7CB0(*(uint64_t *)buf, "SignalEnvironmentFidelityLevel", (_DWORD *)(a1 + 496));
  uint64x2_t v47 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v48 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v49 = __ldaxr(v48);
    while (__stlxr(v49 - 1, v48));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }

  if (v46)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    float v50 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      int v51 = *v45;
      *(_DWORD *)std::runtime_error buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v51;
      _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEBUG,  "CLSE, signal environment fidelity level, %{public}d, overridden, 1",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      int v52 = *v45;
      int v69 = 67240192;
      LODWORD(v70) = v52;
      LODWORD(v64) = 8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE, signal environment fidelity level, %{public}d, overridden, 1",  &v69,  v64);
      float v54 = (uint8_t *)v53;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider::CLSignalEnvironmentProvider(id<CLIntersiloUniverse>)",  "%s\n",  v53);
LABEL_113:
      if (v54 != buf) {
        free(v54);
      }
    }
  }

  else
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    float v55 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEBUG,  "CLSE, signal environment fidelity level, overridden, 0",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      LOWORD(v69) = 0;
      LODWORD(v64) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE, signal environment fidelity level, overridden, 0",  &v69,  v64);
      float v54 = (uint8_t *)v63;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignalEnvironmentProvider::CLSignalEnvironmentProvider(id<CLIntersiloUniverse>)",  "%s\n",  v63);
      goto LABEL_113;
    }
  }

  sub_10043AC3C((uint64_t)sub_100A19FC0, a1, *(void **)(a1 + 32), buf);
  uint64_t v56 = *(void *)buf;
  *(void *)std::runtime_error buf = 0LL;
  uint64_t v57 = *v5;
  *unsigned int v5 = v56;
  if (v57)
  {
    (*(void (**)(uint64_t))(*(void *)v57 + 8LL))(v57);
    uint64_t v58 = *(void *)buf;
    *(void *)std::runtime_error buf = 0LL;
    if (v58) {
      (*(void (**)(uint64_t))(*(void *)v58 + 8LL))(v58);
    }
  }

  return a1;
}

void sub_100A19C68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, char a22)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (v22[479] < 0) {
    operator delete(*v23);
  }
  if (v22[455] < 0) {
    operator delete(*a13);
  }
  if (v22[431] < 0) {
    operator delete(*v24);
  }
  sub_100383050(a12);
  uint64_t v27 = *v25;
  uint64_t *v25 = 0LL;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
  }
  sub_100A1A190((uint64_t)v22);
  _Unwind_Resume(a1);
}

uint64_t sub_100A19D4C(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101867930;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_100A19DCC(_Unwind_Exception *exception_object)
{
}

void sub_100A19DE8(uint64_t a1, int a2, uint64_t a3)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018678E0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v9 = 1;
    int v6 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLSignalEnvironmentProvider::onSignalEnvironmentUpdated",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018678E0);
    }
    uint64_t v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v11 = 0;
      __int16 v12 = 2082;
      size_t v13 = "";
      __int16 v14 = 2082;
      unint64_t v15 = "activity";
      __int16 v16 = 2050;
      uint64_t v17 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLSignalEnvironmentProvider::onSignalEnvironmentUpdated, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v9 = 0;
  }

  sub_100A1B4A0(a3, a1, a2);
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A19FA0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A19FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018678E0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLSignalEnvironmentProvider::onLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018678E0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      unint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLSignalEnvironmentProvider::onLocationNotification, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100A1A730(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A1A170( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100A1A190(uint64_t a1)
{
  *(void *)a1 = off_101867930;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100A1A204(uint64_t a1)
{
  *(void *)a1 = off_101867758;
  id v2 = *(char **)(a1 + 128);
  if (v2)
  {
    sub_1002E4CB0(v2 + 8);
    operator delete(v2);
    *(void *)(a1 + 128) = 0LL;
  }

  uint64_t v3 = *(char **)(a1 + 136);
  if (v3)
  {
    sub_1002E4CB0(v3 + 8);
    operator delete(v3);
    *(void *)(a1 + 136) = 0LL;
  }

  uint64_t v4 = *(void *)(a1 + 480);
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    *(void *)(a1 + 480) = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  sub_100383050(a1 + 160);
  uint64_t v5 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return sub_100A1A190(a1);
}

void sub_100A1A2E8(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100A1A204(a1);
  operator delete(v1);
}

id sub_100A1A2FC(uint64_t a1)
{
  *(_BYTE *)(a1 + 108) = 1;
  return [*(id *)(*(void *)(a1 + 112) + 16) unregister:*(void *)(*(void *)(a1 + 112) + 8) forNotification:5];
}

void *sub_100A1A314@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_100A1A38C(uint64_t a1, int *a2)
{
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_101867900);
  }
  uint64_t v4 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a2;
    *(_DWORD *)std::runtime_error buf = 67240192;
    int v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLSE, Client registered for notification %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    int v7 = *a2;
    v10[0] = 67240192;
    v10[1] = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE, Client registered for notification %{public}d",  v10,  8);
    char v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSignalEnvironmentProvider::registerForNotificationInternal(const CLSignalEnvironmentProvider_Type::Notification &)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  if (!*a2) {
    [*(id *)(*(void *)(a1 + 112) + 16) register:*(void *)(*(void *)(a1 + 112) + 8) forNotification:5 registrationInfo:0];
  }
  return 1LL;
}

uint64_t sub_100A1A560(uint64_t a1, int *a2)
{
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_101867900);
  }
  uint64_t v4 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a2;
    *(_DWORD *)std::runtime_error buf = 67240192;
    int v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLSE, Client unregistered for notification %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    int v7 = *a2;
    v10[0] = 67240192;
    v10[1] = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE, Client unregistered for notification %{public}d",  v10,  8);
    char v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSignalEnvironmentProvider::unregisterForNotificationInternal(const CLSignalEnvironmentProvider_Type ::Notification &)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  if (!*a2) {
    [*(id *)(*(void *)(a1 + 112) + 16) unregister:*(void *)(*(void *)(a1 + 112) + 8) forNotification:5];
  }
  return 1LL;
}

void sub_100A1A730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v4 = *(double *)(a4 + 20);
  uint64_t v7 = *(void *)(a1 + 128);
  if (!v7)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    int v12 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "#Error,CLSE,onLocationNotification,null CSE pointer",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      LOWORD(v40) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,CLSE,onLocationNotification,null CSE pointer",  &v40,  2);
      __int16 v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLSignalEnvironmentProvider::onLocationNotification(int, const CLLocationProvider_Type::Notification &, con st CLLocationProvider_Type::NotificationData &)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    return;
  }

  uint64_t v39 = 0LL;
  int v9 = *(_DWORD *)(a1 + 120);
  int v8 = *(_DWORD *)(a1 + 124);
  double v10 = *(double *)(a4 + 4);
  double v11 = *(double *)(a4 + 12);
  if (*(char *)(a1 + 479) < 0)
  {
    sub_1010DD48C(__p, *(void **)(a1 + 456), *(void *)(a1 + 464));
  }

  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 456);
    uint64_t v38 = *(void *)(a1 + 472);
  }

  *(_DWORD *)(a1 + 120) = sub_100F32664(v7, (const char *)__p, (_BYTE *)(a1 + 156), v10, v11);
  if (SHIBYTE(v38) < 0) {
    operator delete(__p[0]);
  }
  *(_DWORD *)(a1 + 124) = 1;
  sub_100A1AF70(a1);
  uint64_t v15 = *(void *)(a1 + 480);
  if (v15)
  {
    int v16 = sub_100F384B0(v15, *(double *)(a4 + 4), *(double *)(a4 + 12));
    if (v16)
    {
      *(_DWORD *)(a1 + 120) = v16;
      *(_DWORD *)(a1 + 124) = 2;
    }

    sub_100F3D5EC(*(void *)(a1 + 480), a4, 1);
LABEL_26:
    int v17 = 0;
    switch(*(_DWORD *)(a1 + 492))
    {
      case 0xFFFFFFFF:
        break;
      case 1:
      case 2:
      case 3:
      case 4:
      case 6:
        int v17 = *(_DWORD *)(a1 + 492);
        goto LABEL_28;
      default:
LABEL_28:
        *(_DWORD *)(a1 + 120) = v17;
        break;
    }

    switch(*(_DWORD *)(a1 + 496))
    {
      case 0xFFFFFFFF:
        int v18 = *(_DWORD *)(a1 + 124);
        break;
      case 1:
        int v18 = 1;
        goto LABEL_34;
      case 2:
        int v18 = 2;
LABEL_34:
        *(_DWORD *)(a1 + 124) = v18;
        break;
      default:
        int v18 = 0;
        *(_DWORD *)(a1 + 124) = 0;
        break;
    }

    if (v9 != *(_DWORD *)(a1 + 120) || v8 != v18)
    {
      LODWORD(v39) = *(_DWORD *)(a1 + 120);
      HIDWORD(v39) = v18;
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      uint64_t v19 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
      {
        int v20 = *(_DWORD *)(a1 + 120);
        int v21 = *(_DWORD *)(a1 + 124);
        *(_DWORD *)std::runtime_error buf = 67240960;
        int v49 = v9;
        __int16 v50 = 1026;
        int v51 = v20;
        __int16 v52 = 1026;
        int v53 = v8;
        __int16 v54 = 1026;
        int v55 = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "CLSE,fromSignalEnv,%{public}d,toSignalEnv,%{public}d,fromSignalEnvFidelityLevel,%{public}d,toSignalEnvFidelity Level,%{public}d",  buf,  0x1Au);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_42;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      int v27 = *(_DWORD *)(a1 + 120);
      int v28 = *(_DWORD *)(a1 + 124);
      int v40 = 67240960;
      int v41 = v9;
      __int16 v42 = 1026;
      int v43 = v27;
      __int16 v44 = 1026;
      int v45 = v8;
      __int16 v46 = 1026;
      int v47 = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,fromSignalEnv,%{public}d,toSignalEnv,%{public}d,fromSignalEnvFidelityLevel,%{public}d,toSignalEnvFidelityLevel,%{public}d",  &v40,  26);
      uint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onLocationNotification(int, const CLLocationProvider_Type::Notification &, con st CLLocationProvider_Type::NotificationData &)",  "%s\n",  v29);
      if (v30 == buf) {
        goto LABEL_42;
      }
      goto LABEL_60;
    }

    return;
  }

  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_101867900);
  }
  __int128 v22 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)std::runtime_error buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "#Error,CLSE,onLocationNotification,null HRSE pointer",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    LOWORD(v40) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,CLSE,onLocationNotification,null HRSE pointer",  &v40,  2);
    char v32 = (uint8_t *)v31;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLSignalEnvironmentProvider::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v31);
    if (v32 != buf) {
      free(v32);
    }
  }

  int v23 = *(_DWORD *)(a1 + 124);
  if (v9 != *(_DWORD *)(a1 + 120) || v8 != v23)
  {
    LODWORD(v39) = *(_DWORD *)(a1 + 120);
    HIDWORD(v39) = v23;
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    BOOL v24 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      int v25 = *(_DWORD *)(a1 + 120);
      int v26 = *(_DWORD *)(a1 + 124);
      *(_DWORD *)std::runtime_error buf = 67240960;
      int v49 = v9;
      __int16 v50 = 1026;
      int v51 = v25;
      __int16 v52 = 1026;
      int v53 = v8;
      __int16 v54 = 1026;
      int v55 = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "CLSE,fromSignalEnv,%{public}d,toSignalEnv,%{public}d,fromSignalEnvFidelityLevel,%{public}d,toSignalEnvFidelityLevel,%{public}d",  buf,  0x1Au);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_42;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    int v33 = *(_DWORD *)(a1 + 120);
    int v34 = *(_DWORD *)(a1 + 124);
    int v40 = 67240960;
    int v41 = v9;
    __int16 v42 = 1026;
    int v43 = v33;
    __int16 v44 = 1026;
    int v45 = v8;
    __int16 v46 = 1026;
    int v47 = v34;
    LODWORD(v36) = 26;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,fromSignalEnv,%{public}d,toSignalEnv,%{public}d,fromSignalEnvFidelityLevel,%{public}d,toSignalEnvFidelityLevel,%{public}d",  &v40,  v36);
    uint64_t v30 = (uint8_t *)v35;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v35);
    if (v30 == buf) {
      goto LABEL_42;
    }
LABEL_60:
    free(v30);
LABEL_42:
    *(_DWORD *)std::runtime_error buf = 0;
    (*(void (**)(uint64_t, uint8_t *, uint64_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &v39,  1LL,  0xFFFFFFFFLL,  0LL);
  }

void sub_100A1AF1C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A1AF70(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 156)
    && vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(a1 + 144)) > (double)*(int *)(a1 + 152) * 21.0)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    id v2 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 408);
      double v4 = (void *)(a1 + 432);
      *(_DWORD *)std::runtime_error buf = 136446722;
      *(void *)&uint8_t buf[4] = v3;
      __int16 v25 = 2082;
      int v26 = v4;
      __int16 v27 = 2050;
      uint64_t v28 = 0x4035000000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "CLSE,download request,url,%{public}s,storeTo,%{public}s,retryInterval,%{public}.1lf",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      int v9 = (void *)(a1 + 408);
      double v10 = (void *)(a1 + 432);
      *(_DWORD *)uint64_t v19 = 136446722;
      *(void *)&v19[4] = v9;
      __int16 v20 = 2082;
      int v21 = v10;
      __int16 v22 = 2050;
      uint64_t v23 = 0x4035000000000000LL;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,download request,url,%{public}s,storeTo,%{public}s,retryInterval,%{public}.1lf",  v19,  32);
      int v12 = (char *)v11;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSignalEnvironmentProvider::downloadFileIfNeeded()", "%s\n", v11);
      if (v12 != buf) {
        free(v12);
      }
    }

    *(CFAbsoluteTime *)(a1 + 144) = CFAbsoluteTimeGetCurrent();
    *(void *)uint64_t v19 = 0x404E000000000000LL;
    int v5 = (const std::string::value_type *)(a1 + 408);
    uint64_t v6 = (const std::string::value_type *)(a1 + 432);
    if (sub_100385874(a1 + 160, v5, v6, (double *)v19))
    {
      *(void *)std::runtime_error buf = 0x414BAF7F80000000LL;
      if ((sub_100385EC0(a1 + 160, &dbl_101344530, (double *)buf) & 1) != 0)
      {
        *(double *)std::runtime_error buf = CFAbsoluteTimeGetCurrent() + 21.0 + -0.5;
        sub_1003862CC((double *)(a1 + 160), (double *)buf);
        return;
      }
    }

    else
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      uint64_t v7 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLSE,could not setUpdateSource AVL file updater",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_101867900);
        }
        v18[0] = 0;
        LODWORD(v17) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,could not setUpdateSource AVL file updater",  v18,  v17);
        int v16 = (char *)v15;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSignalEnvironmentProvider::downloadFileIfNeeded()", "%s\n", v15);
        if (v16 != buf) {
          free(v16);
        }
      }
    }

    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    int v8 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "CLSE,could not setUpdateRate AVl file updater",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      v18[0] = 0;
      LODWORD(v17) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,could not setUpdateRate AVl file updater",  v18,  v17);
      __int16 v14 = (char *)v13;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSignalEnvironmentProvider::downloadFileIfNeeded()", "%s\n", v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

void sub_100A1B4A0(uint64_t a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      uint64_t v6 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "CLSE,download status,NONE", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_101867900);
        }
        LOWORD(v51[0]) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "CLSE,download status,NONE",  v51,  2);
        int v8 = (char *)v7;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v7);
        goto LABEL_70;
      }

      break;
    case 1:
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      int v26 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "CLSE,download status,STARTED", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_101867900);
        }
        LOWORD(v51[0]) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,download status,STARTED",  v51,  2);
        int v34 = (char *)v33;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v33);
        if (v34 != buf) {
          free(v34);
        }
      }

      *(CFAbsoluteTime *)(a1 + 144) = CFAbsoluteTimeGetCurrent();
      break;
    case 2:
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      int v9 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "CLSE,download status,COMPLETED", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_101867900);
        }
        LOWORD(v51[0]) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "CLSE,download status,COMPLETED",  v51,  2);
        uint64_t v30 = (char *)v29;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v29);
        if (v30 != buf) {
          free(v30);
        }
      }

      sub_100386874(a2, (uint64_t)v51);
      *(_DWORD *)(a1 + 152) = 1;
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      double v10 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
      {
        double v11 = v51;
        if (v52 < 0) {
          double v11 = (void **)v51[0];
        }
        *(_DWORD *)std::runtime_error buf = 136446210;
        *(void *)&uint8_t buf[4] = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "CLSE,downloaded,%{public}s", buf, 0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_101867900);
        }
        int v35 = v51;
        if (v52 < 0) {
          int v35 = (void **)v51[0];
        }
        int v47 = 136446210;
        uint64_t v48 = v35;
        LODWORD(v41) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,downloaded,%{public}s",  &v47,  v41);
        float v37 = (char *)v36;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v36);
        if (v37 != buf) {
          free(v37);
        }
      }

      if (v52 >= 0) {
        int v12 = v51;
      }
      else {
        int v12 = (void **)v51[0];
      }
      if (!sub_100296E50((const char *)v12, 4LL))
      {
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_101867900);
        }
        int v13 = (os_log_s *)qword_101934888;
        if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
        {
          __int16 v14 = v51;
          if (v52 < 0) {
            __int16 v14 = (void **)v51[0];
          }
          *(_DWORD *)std::runtime_error buf = 136446210;
          *(void *)&uint8_t buf[4] = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "#Warning,Cannot set protection class for CLSE downloaded file,%{public}s",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_101867900);
          }
          uint64_t v38 = v51;
          if (v52 < 0) {
            uint64_t v38 = (void **)v51[0];
          }
          int v47 = 136446210;
          uint64_t v48 = v38;
          LODWORD(v41) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,Cannot set protection class for CLSE downloaded file,%{public}s",  &v47,  v41);
          int v40 = (char *)v39;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v39);
          if (v40 != buf) {
            free(v40);
          }
        }
      }

      *(CFAbsoluteTime *)(a1 + 144) = CFAbsoluteTimeGetCurrent();
      uint64_t v15 = dispatch_queue_create(off_10198ECF0, 0LL);
      if (*(char *)(a1 + 479) < 0)
      {
        sub_1010DD48C(buf, *(void **)(a1 + 456), *(void *)(a1 + 464));
      }

      else
      {
        *(_OWORD *)std::runtime_error buf = *(_OWORD *)(a1 + 456);
        *(void *)&uint8_t buf[16] = *(void *)(a1 + 472);
      }

      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768LL;
      block[2] = sub_100A1C180;
      block[3] = &unk_101867828;
      if (SHIBYTE(v52) < 0)
      {
        sub_1010DD48C(&v43, v51[0], (unint64_t)v51[1]);
      }

      else
      {
        __int128 v43 = *(_OWORD *)v51;
        uint64_t v44 = v52;
      }

      if ((buf[23] & 0x80000000) != 0)
      {
        sub_1010DD48C(&__p, *(void **)buf, *(unint64_t *)&buf[8]);
      }

      else
      {
        __int128 __p = *(_OWORD *)buf;
        uint64_t v46 = *(void *)&buf[16];
      }

      dispatch_async(v15, block);
      dispatch_release(v15);
      if (SHIBYTE(v46) < 0) {
        operator delete((void *)__p);
      }
      if (SHIBYTE(v44) < 0) {
        operator delete((void *)v43);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      goto LABEL_85;
    case 3:
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      int v16 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "CLSE,download status,FAILED", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_101867900);
        }
        LOWORD(v51[0]) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "CLSE,download status,FAILED",  v51,  2);
        char v32 = (char *)v31;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v31);
        if (v32 != buf) {
          free(v32);
        }
      }

      int v17 = *(_DWORD *)(a1 + 152);
      if (v17 < 5) {
        int v18 = v17 + 1;
      }
      else {
        int v18 = v17 + 10;
      }
      *(_DWORD *)(a1 + 152) = v18;
      sub_100386874(a2, (uint64_t)v51);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      uint64_t v19 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
      {
        __int16 v20 = v51;
        if (v52 < 0) {
          __int16 v20 = (void **)v51[0];
        }
        int v21 = *(_DWORD *)(a1 + 152);
        *(_DWORD *)std::runtime_error buf = 136446466;
        *(void *)&uint8_t buf[4] = v20;
        *(_WORD *)&_BYTE buf[12] = 1026;
        *(_DWORD *)&buf[14] = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "CLSE,download request failed,%{public}s,retryMultiplier,%{public}d",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_101867900);
        }
        __int16 v22 = v51;
        if (v52 < 0) {
          __int16 v22 = (void **)v51[0];
        }
        int v23 = *(_DWORD *)(a1 + 152);
        int v47 = 136446466;
        uint64_t v48 = v22;
        __int16 v49 = 1026;
        int v50 = v23;
        LODWORD(v41) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,download request failed,%{public}s,retryMultiplier,%{public}d",  &v47,  v41);
        __int16 v25 = (char *)v24;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)",  "%s\n",  v24);
        if (v25 != buf) {
          free(v25);
        }
      }

void sub_100A1C108( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *__p, uint64_t a29, int a30, __int16 a31, char a32, char a33, uint64_t a34, void *a35, uint64_t a36, int a37, __int16 a38, char a39, char a40)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A1C180(uint64_t a1)
{
  id v2 = (char **)(a1 + 32);
  int v3 = *(char *)(a1 + 55);
  double v4 = (char *)(a1 + 32);
  if (v3 < 0) {
    double v4 = *v2;
  }
  int v5 = (const char **)(a1 + 56);
  uint64_t v6 = (const char *)(a1 + 56);
  sub_100293D74(v4, v6);
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_101867900);
  }
  uint64_t v7 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    int v8 = (const char *)v2;
    int v9 = (const char *)(a1 + 56);
    *(_DWORD *)std::runtime_error buf = 136446466;
    BOOL v24 = v8;
    __int16 v25 = 2082;
    int v26 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLSE,decompressed,%{public}s,to,%{public}s",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    int v13 = (const char *)(a1 + 56);
    int v19 = 136446466;
    __int16 v20 = v2;
    __int16 v21 = 2082;
    __int16 v22 = v13;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLSE,decompressed,%{public}s,to,%{public}s",  &v19,  22);
    uint64_t v15 = (uint8_t *)v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)_block_invoke",  "%s\n",  v14);
    if (v15 != buf) {
      free(v15);
    }
  }

  double v10 = (const char *)(a1 + 56);
  if (!sub_100296E50(v10, 4LL))
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101867900);
    }
    double v11 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_INFO))
    {
      int v12 = (const char *)(a1 + 56);
      *(_DWORD *)std::runtime_error buf = 136446210;
      BOOL v24 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "#Warning,Cannot set protection class for CLSE decompressed file,%{public}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101867900);
      }
      int v19 = 136446210;
      __int16 v20 = v5;
      LODWORD(v18) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  1LL,  "#Warning,Cannot set protection class for CLSE decompressed file,%{public}s",  &v19,  v18);
      int v17 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)_block_invoke",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }
  }

_BYTE *sub_100A1C528(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 55) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }

  else
  {
    __int128 v4 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v4;
  }

  uint64_t result = (_BYTE *)(a1 + 56);
  __int128 v6 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)uint64_t result = v6;
  return result;
}

void sub_100A1C5AC(_Unwind_Exception *exception_object)
{
}

void sub_100A1C5C8(uint64_t a1)
{
}

uint64_t sub_100A1C60C(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_101867A80;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    int v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_100A1C6E0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  int v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLSignalEnvironmentProvider");
  sub_100A1C60C((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  void *v8 = off_101867868;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100A1C77C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_100A1C7A8(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::runtime_error buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018678E0);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        double v11 = (void *)(a1 + 8);
        *(_DWORD *)std::runtime_error buf = 136446466;
        __int16 v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_1018678E0);
        }
        int v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        int v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::Noti ficationData>::removeClient(int) [Notification_T = CLSignalEnvironmentProvider_Type::Notification, Notificatio nData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_100A1CA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_10198EDD0);
}

uint64_t sub_100A1CA30(uint64_t a1, int a2, int *a3, char *a4)
{
  int v42 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)__int128 v43 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          BOOL v24 = (uint64_t *)v18;
        }
        else {
          BOOL v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          uint64_t v29 = (uint64_t *)v25;
        }
        else {
          uint64_t v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v41 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)std::runtime_error buf = &v42;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        *(void *)std::runtime_error buf = 0LL;
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          uint64_t v36 = sub_100A1EC68(buf);
          sub_100A1E6B8((_BYTE *)a1, (uint64_t)v43, (uint64_t)&v41, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v41 = a1 + 64;
        char v30 = byte_10198EDD1;
        HIDWORD(v40) = v17;
        *(void *)std::runtime_error buf = (char *)&v40 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 80) = v30;
        HIDWORD(v40) = *a3;
        *(void *)std::runtime_error buf = (char *)&v40 + 4;
        unsigned int v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v40) = *a3;
        *(void *)std::runtime_error buf = (char *)&v40 + 4;
        int v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::runtime_error buf = &v42;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        *(_DWORD *)std::runtime_error buf = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v43 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018678E0);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)std::runtime_error buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v47 = 1026;
    int v48 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018678E0);
    }
    float v37 = (void *)(a1 + 8);
    *(_DWORD *)__int128 v43 = 136446466;
    *(void *)&v43[4] = v37;
    __int16 v44 = 1026;
    int v45 = a2;
    LODWORD(v40) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v43,
      v40);
    uint64_t v39 = (char *)v38;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::Notifica tionData>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLSi gnalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationDat a, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    if (v39 != buf) {
      free(v39);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_100A1CE8C(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018678E0);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::runtime_error buf = 136446466;
      char v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018678E0);
      }
      int v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      uint64_t v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      BOOL v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::Notifi cationData>::clientRegistered(int, const Notification_T &) [Notification_T = CLSignalEnvironmentProvider_Type::N otification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100A1D10C(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_1018678E0);
              }
              uint64_t v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)std::runtime_error buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                float v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_1018678E0);
                }
                uint64_t v29 = a1 + 8;
                if (a1[31] < 0) {
                  uint64_t v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                int v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                int v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Ty pe::NotificationData>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLSign alEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::Notif icationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100A1D494(uint64_t a1, int *a2, uint64_t *a3)
{
  uint64_t v6 = operator new(0x20uLL);
  v6[2] = 0LL;
  *uint64_t v6 = off_101867A10;
  v6[1] = 0LL;
  uint64_t v7 = *a3;
  *((void *)&v14 + 1) = v6;
  void v6[3] = v7;
  *(void *)&__int128 v14 = v6 + 3;
  int v13 = *a2;
  int v15 = &v13;
  BOOL v8 = sub_10023347C((uint64_t **)(a1 + 56), &v13, (uint64_t)&unk_1012CF090, &v15);
  sub_10005F550((uint64_t)(v8 + 8), &v14);
  int v9 = (std::__shared_weak_count *)*((void *)&v14 + 1);
  if (*((void *)&v14 + 1))
  {
    BOOL v10 = (unint64_t *)(*((void *)&v14 + 1) + 8LL);
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  return 1LL;
}

void sub_100A1D568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A1D57C(uint64_t a1, unsigned int *a2, void *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    BOOL v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018678E0);
    }
    unint64_t v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v12 = (void *)(a1 + 8);
      int v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::runtime_error buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2082;
      *(void *)&_BYTE buf[20] = "activity";
      __int16 v67 = 2082;
      unsigned __int8 v68 = v12;
      __int16 v69 = 2050;
      uint64_t v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    __int128 v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      __int128 v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)int v71 = &v71[8];
      memset(&v71[8], 0, 24);
      uint64_t v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      __int16 v27 = operator new(0x20uLL);
      v27[2] = 0LL;
      *__int16 v27 = off_101867A10;
      v27[1] = 0LL;
      v27[3] = *a3;
      *(void *)std::runtime_error buf = v27 + 3;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      int v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        uint64_t v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    __int16 v31 = sub_100A1E264(a3);
    if (a5 == -1)
    {
      sub_100A1E2E4((void *)a1, (int *)a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          float v37 = (uint64_t *)v33;
        }
        else {
          float v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v64 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      uint64_t v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          __int128 v43 = (unint64_t *)v38;
        }
        else {
          __int128 v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          uint64_t v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        unint64_t v63 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_1018678E0);
        }
        char v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          int v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            uint64_t v46 = v71;
          }
          else {
            uint64_t v46 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::runtime_error buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&_BYTE buf[18] = 2080;
          *(void *)&_BYTE buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_1018678E0);
          }
          __int16 v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v62 >= 0) {
            __int16 v49 = __p;
          }
          else {
            __int16 v49 = (void **)__p[0];
          }
          *(_DWORD *)int v71 = 136315650;
          *(void *)&v71[4] = v47;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v49;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v60);
          int v51 = v50;
          if (v62 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::No tificationData>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentPr ovider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v51);
          if (v51 != buf) {
            free(v51);
          }
        }

        goto LABEL_83;
      }

      unint64_t v63 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v54 = v40[3].n128_i64[0];
      uint64_t v52 = v40 + 3;
      int v53 = (__n128 *)v54;
      if (!v54) {
        goto LABEL_60;
      }
      int v55 = *(_DWORD *)(v34 + 32);
      uint64_t v56 = v52;
      do
      {
        int v57 = v53[1].n128_i32[3];
        BOOL v58 = v57 < v55;
        if (v57 >= v55) {
          float v59 = v53;
        }
        else {
          float v59 = (__n128 *)&v53->n128_i8[8];
        }
        if (!v58) {
          uint64_t v56 = v53;
        }
        int v53 = (__n128 *)v59->n128_u64[0];
      }

      while (v59->n128_u64[0]);
      sub_100A1E6B8((_BYTE *)a1, (uint64_t)&v64, (uint64_t)&v63, v31);
    }

void sub_100A1DBB4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100A1DC00(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018678E0);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v3 = (void *)(a1 + 8);
      *(_DWORD *)std::runtime_error buf = 136315138;
      float v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018678E0);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::Notifi cationData>::listClients() [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018678E0);
    }
    uint64_t v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::runtime_error buf = 136315394;
      float v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018678E0);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      unint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::Notifi cationData>::listClients() [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    BOOL v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      unint64_t v11 = (void *)(a1 + 8);
      do
      {
        BOOL v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_1018678E0);
            }
            int v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::runtime_error buf = 136315650;
              float v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_1018678E0);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type ::NotificationData>::listClients() [Notification_T = CLSignalEnvironmentProvider_Type::Notification, Not ificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, Registr ationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                BOOL v12 = v18;
              }

              while (!v19);
            }

            BOOL v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            BOOL v10 = v26;
          }

          while (!v19);
        }

        BOOL v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100A1E1AC(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100A1EC08(a1);
  operator delete(v1);
}

id sub_100A1E1C0(uint64_t a1, int a2, void *a3)
{
  id result = sub_100A1E7E4(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100A1E20C(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100A1E238(id a1)
{
  qword_101934888 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

CLCppContainer *sub_100A1E264(void *a1)
{
  uint64_t v2 = operator new(8uLL);
  *uint64_t v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_100A1E7D4;
  uint64_t v7 = &unk_10181D3D0;
  BOOL v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100A1E2E4(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          BOOL v12 = (uint64_t *)v4;
        }
        else {
          BOOL v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        int v51 = v9;
        id v13 = sub_100A1E7E4(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        __int128 v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              int v50 = v19;
              sub_100A1E6B8(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              uint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  uint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              int v51 = v29;
              uint64_t v34 = v29[6];
              __int128 v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                int v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    int v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      BOOL v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      BOOL v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      __int128 v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int128 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      __int128 v14 = v43;
                      __int128 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      __int128 v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      int v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              int v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_1018678E0);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::runtime_error buf = 136446466;
                int v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_1018678E0);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                int v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                uint64_t v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::Noti ficationData>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLSig nalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::Noti ficationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100A1E6B8(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100A1E7E4(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    __int128 v14 = (int *)(*(void *)a2 + 32LL);
    BOOL v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_100A1E794(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101867A10;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100A1E7A8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101867A10;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100A1E7D4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_100A1E7E4(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100A1E830(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100A1E830(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101867A50);
    }
    int v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::runtime_error buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013446ADLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101867A50);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101867A50);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::runtime_error buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013446ADLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101867A50);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLSignalEnvironmentProvider_Type::NotificationDa ta, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_100A1EBDC(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_100A1EC08(uint64_t a1)
{
  *(void *)a1 = &off_101867A80;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *id v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_100A1EC68(void *a1)
{
  id v2 = operator new(8uLL);
  *id v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_100A1ECE8;
  uint64_t v7 = &unk_10181D3D0;
  uint64_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100A1ECE8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_100A1ECF8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_1013444F8;
      v1[3] = unk_101344508;
      v1[4] = xmmword_101344518;
      v1[0] = xmmword_1013444D8;
      v1[1] = unk_1013444E8;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_100A1EDCC(_Unwind_Exception *a1)
{
}

uint64_t sub_100A1EDE4(uint64_t a1, char *a2, int a3, uint64_t a4)
{
  *(void *)a1 = &_mh_execute_header;
  *(_WORD *)(a1 + 8) = 257;
  if (SHIBYTE(v19) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 16), __p[0], (unint64_t)__p[1]);
    int v8 = SHIBYTE(v19);
    *(void *)(a1 + 40) = 0LL;
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)__p;
    *(void *)(a1 + 32) = v19;
    *(void *)(a1 + 40) = 0LL;
  }

  *(void *)(a1 + 48) = 0LL;
  id v9 = operator new(0x68uLL);
  if (a2[23] < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    *(_OWORD *)__int128 __dst = *(_OWORD *)a2;
    uint64_t v17 = *((void *)a2 + 2);
  }

  *(_OWORD *)unint64_t v14 = *(_OWORD *)a4;
  uint64_t v15 = *(void *)(a4 + 16);
  *(void *)(a4 + 8) = 0LL;
  *(void *)(a4 + 16) = 0LL;
  *(void *)a4 = 0LL;
  sub_100A9E938(v9, __dst, 1LL, v14);
  *(void *)(a1 + 56) = v9;
  if (SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__dst[0]);
    if (!a3) {
      return a1;
    }
  }

  else if (!a3)
  {
    return a1;
  }

  id v10 = operator new(0x128uLL);
  __int16 v11 = v10;
  if (a2[23] < 0) {
    a2 = *(char **)a2;
  }
  sub_1004977F8(v10, a2, a1, -1.0);
  uint64_t v12 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v11;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
  }
  return a1;
}

void sub_100A1EF6C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  uint64_t v31 = *(void *)(v27 + 48);
  *(void *)(v27 + 48) = 0LL;
  if (v31) {
    (*(void (**)(uint64_t))(*(void *)v31 + 8LL))(v31);
  }
  _Unwind_Resume(a1);
}

void sub_100A1F018( uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, char **a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
}

void sub_100A1F020(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 16) = 0LL;
  *(void *)(a3 + 8) = 0LL;
  *(void *)a3 = a3 + 8;
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  if (*(void **)a2 != v5)
  {
    do
    {
      sub_100A9E944(*(void *)(a1 + 56), (uint64_t)v4, v10);
      if (v11) {
        goto LABEL_3;
      }
      uint64_t v7 = *(void *)(a1 + 48);
      if (v7)
      {
        sub_10049AE64(v7, (uint64_t)v4, v8);
        v10[10] = v8[10];
        v10[11] = v8[11];
        char v11 = v9;
        v10[6] = v8[6];
        v10[7] = v8[7];
        __int16 v10[8] = v8[8];
        v10[9] = v8[9];
        v10[2] = v8[2];
        v10[3] = v8[3];
        _DWORD v10[4] = v8[4];
        v10[5] = v8[5];
        v10[0] = v8[0];
        v10[1] = v8[1];
        if (v9) {
LABEL_3:
        }
          sub_100A1F6B0((uint64_t **)a3, v4, v4, v10);
      }

      ++v4;
    }

    while (v4 != v5);
  }

void sub_100A1F120(_Unwind_Exception *a1)
{
}

void sub_100A1F13C(uint64_t a1, uint64_t a2)
{
}

void sub_100A1F144(uint64_t a1, unint64_t a2)
{
}

BOOL sub_100A1F14C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_100A9E95C(*(void *)(a1 + 56), (uint64_t)&v3);
}

void sub_100A1F174(uint64_t a1)
{
}

void sub_100A1F180(uint64_t a1, double a2)
{
  uint64_t v2 = *(void *)(a1 + 56);
  double v3 = a2;
  sub_100400BE0(*(void *)(v2 + 32), &v3);
}

uint64_t sub_100A1F1AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A9E96C(*(void *)(a1 + 56), a2);
}

uint64_t sub_100A1F1B4(uint64_t a1)
{
  return sub_100A1F1BC(*(void *)(a1 + 56));
}

uint64_t sub_100A1F1BC(uint64_t result)
{
  if (*(_BYTE *)result)
  {
    uint64_t v1 = result;
    uint64_t v18 = 0LL;
    uint64_t v19 = &v18;
    uint64_t v20 = 0x3812000000LL;
    BOOL v21 = sub_100A1F784;
    int v22 = sub_100A1F794;
    uint64_t v23 = 0LL;
    sub_100A1F7B4(result, result + 40, &v24);
    uint64_t v2 = v19[6];
    if (v2)
    {
      uint64_t v14 = 0LL;
      uint64_t v15 = &v14;
      uint64_t v16 = 0x2020000000LL;
      int v17 = 0;
      sub_100400C74(v2, (uint64_t)buf);
      uint64_t v3 = *(void *)(v1 + 32);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472LL;
      v13[2] = sub_100A1F868;
      v13[3] = &unk_10183C578;
      _DWORD v13[4] = &v14;
      v13[5] = &v18;
      v13[6] = v1;
      sub_10040102C(v3, (uint64_t)v13);
      sub_100A112B4(buf);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101867A98);
      }
      uint64_t v4 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        int v5 = *((_DWORD *)v15 + 6);
        int v6 = (void *)(v1 + 8);
        *(_DWORD *)std::runtime_error buf = 67109378;
        int v29 = v5;
        __int16 v30 = 2080;
        uint64_t v31 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Successfully migrated %u rows from in-memory database to persisted for table %s",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101867A98);
        }
        int v9 = *((_DWORD *)v15 + 6);
        id v10 = (void *)(v1 + 8);
        v25[0] = 67109378;
        v25[1] = v9;
        __int16 v26 = 2080;
        uint64_t v27 = v10;
        LODWORD(v12) = 18;
        char v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Successfully migrated %u rows from in-memory database to persisted for table %s",  v25,  v12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLManagedLocationDatabase<CLWifiLocationDatabase, CLWifiLocationDatabase::WifiData>::onDataAvailable() [D atabase = CLWifiLocationDatabase, DataType = CLWifiLocationDatabase::WifiData]",  "%s\n",  v11);
      }

      uint64_t v7 = v19[6];
      v19[6] = 0LL;
      uint64_t v8 = *(void *)(v1 + 32);
      *(void *)(v1 + 32) = v7;
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
      }
      *(_BYTE *)uint64_t v1 = 0;

      *(void *)(v1 + 88) = 0LL;
      _Block_object_dispose(&v14, 8);
    }

    _Block_object_dispose(&v18, 8);
    id result = v24;
    uint64_t v24 = 0LL;
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A1F4D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, __int16 a29, uint64_t a30, uint64_t a31, uint64_t a32, uint8_t buf)
{
  uint64_t v34 = a28;
  a28 = 0LL;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
  }
  _Unwind_Resume(a1);
}

void sub_100A1F52C()
{
}

void sub_100A1F67C()
{
}

void sub_100A1F690(void *a1, int a2)
{
  if (a2) {
    sub_100006BB8(a1);
  }
  JUMPOUT(0x100A1F524LL);
}

uint64_t sub_100A1F6A0(uint64_t a1)
{
  return sub_100A9E964(*(void *)(a1 + 56));
}

void sub_100A1F6A8(uint64_t a1)
{
}

char *sub_100A1F6B0(uint64_t **a1, void *a2, void *a3, _OWORD *a4)
{
  uint64_t v7 = (void **)sub_1002FB00C((uint64_t)a1, &v17, a2);
  uint64_t v8 = (char *)*v7;
  if (!*v7)
  {
    int v9 = (uint64_t **)v7;
    uint64_t v8 = (char *)operator new(0xE8uLL);
    __int128 v10 = a4[9];
    *(_OWORD *)(v8 + 168) = a4[8];
    *(_OWORD *)(v8 + 184) = v10;
    __int128 v11 = a4[11];
    *(_OWORD *)(v8 + 200) = a4[10];
    *(_OWORD *)(v8 + 216) = v11;
    __int128 v12 = a4[5];
    *(_OWORD *)(v8 + 104) = a4[4];
    *(_OWORD *)(v8 + 120) = v12;
    __int128 v13 = a4[7];
    *(_OWORD *)(v8 + 136) = a4[6];
    *(_OWORD *)(v8 + 152) = v13;
    __int128 v14 = a4[1];
    *(_OWORD *)(v8 + 40) = *a4;
    *(_OWORD *)(v8 + 56) = v14;
    __int128 v15 = a4[3];
    *(_OWORD *)(v8 + 72) = a4[2];
    *((void *)v8 + 4) = *a3;
    *(_OWORD *)(v8 + 88) = v15;
    sub_1000085FC(a1, v17, v9, (uint64_t *)v8);
  }

  return v8;
}

uint64_t sub_100A1F784(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0LL;
  *(void *)(result + 48) = v2;
  return result;
}

uint64_t sub_100A1F794(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100A1F7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  int v5 = (void *)(a1 + 8);
  int v6 = operator new(0x128uLL);
  sub_1004977F8(v6, v5, a2, -1.0);
  *a3 = v6;
  uint64_t result = sub_100400B64((uint64_t)v6);
  if ((result & 1) == 0)
  {
    *a3 = 0LL;
    return (*(uint64_t (**)(void *))(*(void *)v6 + 8LL))(v6);
  }

  return result;
}

void sub_100A1F838(_Unwind_Exception *a1)
{
  void *v1 = 0LL;
  (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  _Unwind_Resume(a1);
}

void sub_100A1F868(void *a1, uint64_t a2, uint64_t a3, sqlite3_int64 a4)
{
  uint64_t v8 = a1[6];
  ++*(_DWORD *)(*(void *)(a1[4] + 8LL) + 24LL);
  nullsub_10(0LL);
  uint64_t v18 = v9;
  __int128 v19 = xmmword_1013446F0;
  int v20 = -1;
  int v21 = 0;
  if ((sub_100498F50(a2, a4, (uint64_t)&v18) & 1) != 0)
  {
    if ((sub_1004995B0(*(void *)(*(void *)(a1[5] + 8LL) + 48LL), (int *)&v18, a3) & 1) == 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101867A98);
      }
      __int128 v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
      {
        __int128 v11 = (void *)(v8 + 8);
        *(_DWORD *)std::runtime_error buf = 136446210;
        int v29 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "Failed to save entry to persisted database, table %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101867A98);
        }
        __int128 v12 = (void *)(v8 + 8);
        int v22 = 136446210;
        uint64_t v23 = v12;
        __int128 v13 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "Failed to save entry to persisted database, table %{public}s",  &v22,  12);
LABEL_28:
        uint64_t v17 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLManagedLocationDatabase<CLWifiLocationDatabase, CLWifiLocationDatabase::WifiData>::onDataAvailable() [D atabase = CLWifiLocationDatabase, DataType = CLWifiLocationDatabase::WifiData]_block_invoke",  "%s\n",  v13);
        if (v17 != buf) {
          free(v17);
        }
      }
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101867A98);
    }
    __int128 v14 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      __int128 v15 = (void *)(v8 + 8);
      *(_DWORD *)std::runtime_error buf = 136446722;
      int v29 = v15;
      __int16 v30 = 2082;
      unint64_t v31 = 0x8000000101344700LL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v32 = 2050;
      sqlite3_int64 v33 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101867A98);
      }
      uint64_t v16 = (void *)(v8 + 8);
      int v22 = 136446722;
      uint64_t v23 = v16;
      __int16 v24 = 2082;
      unint64_t v25 = 0x8000000101344700LL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v26 = 2050;
      sqlite3_int64 v27 = a4;
      __int128 v13 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld",  &v22,  32);
      goto LABEL_28;
    }
  }

void sub_100A1FC10(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_100A1FC3C()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_1019A19B0, (void *)&_mh_execute_header);
}

void sub_100A1FE1C(id a1)
{
  qword_101999F48 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLWeatherServiceSilo");
}

void sub_100A20774(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_100A207A0(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_100A21454(v2, a2);
}

uint64_t sub_100A207B0(uint64_t result)
{
  uint64_t v1 = result - 8;
  if (!result) {
    uint64_t v1 = 0LL;
  }
  *(_DWORD *)(v1 + 280) = 0;
  *(void *)(v1 + 272) = 0LL;
  *(void *)(v1 + 788) = 0LL;
  return result;
}

double sub_100A207D4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  *(void *)&double result = sub_100A21A40(v2, a2).n128_u64[0];
  return result;
}

uint64_t sub_100A207E4(uint64_t a1, _OWORD *a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_100A21780(v2, a2);
}

uint64_t sub_100A207F4(uint64_t result)
{
  uint64_t v1 = result - 8;
  if (!result) {
    uint64_t v1 = 0LL;
  }
  *(_DWORD *)(v1 + 280) = 0;
  *(void *)(v1 + 272) = 0LL;
  *(void *)(v1 + 788) = 0LL;
  return result;
}

uint64_t sub_100A20814(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_100A2189C(v2, a2);
}

double sub_100A20824(uint64_t a1)
{
  *(void *)(a1 + 16) = 9LL;
  *(_WORD *)(a1 + 24) = 512;
  *(void *)a1 = off_101867BE0;
  *(void *)(a1 + 8) = &unk_101867AF8;
  *(_BYTE *)(a1 + 28) = 1;
  *(void *)(a1 + 44) = 0xC00000000LL;
  *(_DWORD *)(a1 + 40) = 1031798784;
  *(void *)(a1 + 104) = off_10183B0F0;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 184) = 0LL;
  *(void *)(a1 + sub_1002E0644(v1 + 176) = 0LL;
  *(void *)(a1 + 168) = a1 + 176;
  *(_BYTE *)(a1 + 192) = 1;
  *(_DWORD *)(a1 + 212) = 4;
  *(void *)(a1 + 204) = 0LL;
  *(_BYTE *)(a1 + 232) = 1;
  *(_DWORD *)(a1 + 252) = 4;
  *(void *)(a1 + 244) = 0LL;
  *(void *)(a1 + 272) = 0LL;
  *(_DWORD *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = off_101848F08;
  *(void *)(a1 + 296) = 0x4039000000000000LL;
  *(_OWORD *)(a1 + 304) = xmmword_1012E6790;
  *(_DWORD *)(a1 + 320) = 0;
  *(void *)(a1 + 336) = 0LL;
  *(void *)(a1 + 344) = 0LL;
  *(void *)(a1 + 328) = 0LL;
  *(_BYTE *)(a1 + 352) = 1;
  *(void *)(a1 + 368) = 0x4B00000000LL;
  *(_DWORD *)(a1 + 364) = 0;
  *(void *)(a1 + 680) = 0LL;
  *(void *)(a1 + 688) = 0LL;
  *(void *)(a1 + 696) = 0xC08F380000000000LL;
  *(void *)(a1 + 704) = 0xC08F380000000000LL;
  *(_BYTE *)(a1 + 712) = 0;
  *(void *)(a1 + 720) = 0LL;
  *(_BYTE *)(a1 + 728) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 736) = xmmword_1012E67B0;
  *(void *)(a1 + 752) = 0xC08F380000000000LL;
  *(_BYTE *)(a1 + 760) = 0;
  *(void *)(a1 + 768) = 0LL;
  *(_BYTE *)(a1 + 776) = 0;
  *(void *)(a1 + 784) = 0LL;
  *(void *)(a1 + 792) = 0LL;
  *(_DWORD *)(a1 + 800) = 60;
  *(void *)(a1 + 1044) = 0x3C00000000LL;
  *(_DWORD *)(a1 + 112) = 4;
  return result;
}

BOOL sub_100A20964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)(a1 + 104);
  sub_100476A68(a1 + 104, (float *)(a2 + 124));
  if (*(_DWORD *)(a2 + 872)) {
    BOOL v5 = 1;
  }
  else {
    BOOL v5 = (*(_BYTE *)(a2 + 816) & 0xFD) == 1;
  }
  int v6 = v5;
  int v25 = v6;
  sub_10032E068((unsigned __int16 *)(a1 + 208), &v25);
  *(_BYTE *)(a1 + 192) = 1;
  uint64_t v7 = *(unsigned __int16 *)(a1 + 210);
  if (*(_DWORD *)(a1 + 212) != (_DWORD)v7) {
    return 0LL;
  }
  if (*(_WORD *)(a1 + 210))
  {
    unint64_t v8 = 0LL;
    int v9 = 0;
    do
      v9 += *(_DWORD *)sub_10032DE70((unsigned __int16 *)(a1 + 208), v8++);
    while (v7 != v8);
    int v10 = *(unsigned __int16 *)(a1 + 210);
  }

  else
  {
    int v10 = 0;
    int v9 = 0;
  }

  BOOL v11 = v9 == v10;
  sub_10074DE7C(v4, 2, &v24);
  if (*(void *)(a1 + 184))
  {
    uint64_t v14 = a1 + 176;
    uint64_t v15 = *(void *)(a1 + 176);
    if (v15)
    {
      do
      {
        uint64_t v16 = v15;
        uint64_t v15 = *(void *)(v15 + 8);
      }

      while (v15);
    }

    else
    {
      do
      {
        uint64_t v16 = *(void *)(v14 + 16);
        BOOL v5 = *(void *)v16 == v14;
        uint64_t v14 = v16;
      }

      while (v5);
    }

    float v12 = *(float *)(v16 + 28);
    float v13 = *(float *)(*(void *)(a1 + 168) + 28LL);
  }

  BOOL v23 = v11;
  uint64_t v18 = (unsigned __int16 *)(a1 + 248);
  sub_10032E068((unsigned __int16 *)(a1 + 248), &v23);
  *(_BYTE *)(a1 + 232) = 1;
  uint64_t v19 = *(unsigned __int16 *)(a1 + 250);
  if (!*(_WORD *)(a1 + 250)) {
    return 0LL;
  }
  unint64_t v20 = 0LL;
  int v21 = 0;
  do
    v21 += *(_DWORD *)sub_10032DE70(v18, v20++);
  while (v19 != v20);
  return v21 > 0;
}

unint64_t sub_100A20B2C(uint64_t a1, double *a2)
{
  uint64_t v4 = operator new(0xCuLL);
  uint64_t v49 = v4 + 3;
  int v50 = (char *)(v4 + 3);
  *(void *)uint64_t v4 = 7LL;
  v4[2] = 8;
  __int128 __p = v4;
  uint64_t v5 = sub_1006A7E04(a1 + 288, (uint64_t)a2);
  if (!(_DWORD)v5)
  {
    __int16 v77 = 0;
    v74[0] = xmmword_1012E1E90;
    memset(&v74[1], 0, 96);
    __int128 v75 = 0u;
    memset(v76, 0, sizeof(v76));
    __int128 v78 = xmmword_1012E1E90;
    uint64_t v79 = 0LL;
    int v80 = 0;
    uint64_t v81 = 0LL;
    v82[0] = 0LL;
    *(void *)((char *)v82 + 5) = 0LL;
    *(void *)((char *)&v82[1] + 6) = 0LL;
    char v83 = 0;
    memset(&v82[3], 0, 24);
    __int128 v84 = xmmword_1012E1E90;
    uint64_t v85 = 0LL;
    int v86 = 0;
    unint64_t v87 = 0xFFEFFFFFFFFFFFFFLL;
    int v98 = 0;
    __int128 v88 = 0u;
    __int128 v89 = 0u;
    __int128 v90 = 0u;
    __int128 v91 = 0u;
    __int128 v92 = 0u;
    int v93 = 0;
    __int128 v94 = 0u;
    __int128 v95 = 0u;
    __int128 v96 = 0u;
    memset(v97, 0, sizeof(v97));
    uint64_t v99 = 0LL;
    uint64_t v100 = 0LL;
    unint64_t v101 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v102 = 0LL;
    int v103 = 0;
    uint64_t v109 = 0LL;
    __int16 v110 = 0;
    int v115 = 0;
    int v108 = 0;
    __int128 v106 = 0u;
    __int128 v107 = 0u;
    __int128 v104 = 0u;
    __int128 v105 = 0u;
    __int128 v112 = 0u;
    __int128 v111 = 0u;
    char v113 = 0;
    memset(v114, 0, sizeof(v114));
    unint64_t v116 = 0xFFEFFFFFFFFFFFFFLL;
    __int128 v135 = 0u;
    __int128 v134 = 0u;
    __int128 v133 = 0u;
    __int128 v132 = 0u;
    __int128 v131 = 0u;
    __int128 v130 = 0u;
    __int128 v129 = 0u;
    __int128 v128 = 0u;
    __int128 v127 = 0u;
    __int128 v126 = 0u;
    __int128 v125 = 0u;
    __int128 v124 = 0u;
    __int128 v123 = 0u;
    __int128 v122 = 0u;
    __int128 v121 = 0u;
    __int128 v120 = 0u;
    __int128 v119 = 0u;
    __int128 v118 = 0u;
    __int128 v117 = 0u;
    uint64_t v136 = 0LL;
    unint64_t v137 = 0xFFEFFFFFFFFFFFFFLL;
    __int128 v138 = 0u;
    __int128 v139 = 0u;
    __int128 v140 = 0u;
    __int128 v141 = 0u;
    unint64_t v142 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v143 = 0LL;
    int v144 = 0;
    uint64_t v145 = 0LL;
    char v146 = 0;
    unint64_t v147 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v149 = 0LL;
    uint64_t v148 = 0LL;
    uint64_t v150 = 0x80000000800000LL;
    uint64_t v152 = 0LL;
    uint64_t v151 = 0LL;
    __int128 v153 = xmmword_1012E1EA0;
    uint64_t v154 = 0x80000000800000LL;
    __int128 v155 = 0u;
    __int128 v156 = 0u;
    uint64_t v157 = 0LL;
    unint64_t v158 = 0xFFEFFFFFFFFFFFFFLL;
    __int128 v159 = 0u;
    __int128 v160 = 0u;
    __int128 v161 = 0u;
    __int128 v162 = 0u;
    __int128 v163 = 0u;
    __int128 v164 = 0u;
    int v165 = 0;
    unint64_t v166 = 0xFFEFFFFFFFFFFFFFLL;
    __int16 v167 = 0;
    int v168 = 0;
    unint64_t v169 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v170 = 7LL;
    unint64_t v171 = 0xFFEFFFFFFFFFFFFFLL;
    char v172 = 0;
    uint64_t v174 = 0LL;
    uint64_t v173 = 0LL;
    uint64_t v175 = 0LL;
    if ((sub_100CDB578(a2, &__p, (uint64_t)v74) & 1) != 0)
    {
      uint64_t v9 = *(unsigned __int16 *)(a1 + 44);
      int v10 = (_BYTE *)(a1 + 28);
      float v11 = *((float *)&v148 + 1) * 57.296;
      uint64_t v12 = *(unsigned __int16 *)(a1 + 46);
      unint64_t v13 = *(unsigned int *)(a1 + 48);
      if (v9 + v12 >= v13) {
        uint64_t v14 = *(unsigned int *)(a1 + 48);
      }
      else {
        uint64_t v14 = 0LL;
      }
      *(float *)(a1 + 44 + 4 * (v9 + v12 - v14) + 8) = v11;
      if (v13 <= v12)
      {
        unint64_t v15 = v9 + 1;
        if (v15 >= v13) {
          __int16 v16 = v13;
        }
        else {
          __int16 v16 = 0;
        }
        *(_WORD *)(a1 + 44) = v15 - v16;
      }

      else
      {
        LOWORD(v12) = v12 + 1;
        *(_WORD *)(a1 + 46) = v12;
        LODWORD(v12) = (unsigned __int16)v12;
      }

      _BYTE *v10 = 1;
      if ((_DWORD)v13 == (_DWORD)v12)
      {
        if (sub_100E3F5D8((unsigned __int16 *)(a1 + 796), a1 + 688, v11))
        {
          LODWORD(v5) = 12;
LABEL_43:
          unint64_t v8 = 0LL;
          goto LABEL_44;
        }

        LOBYTE(v44) = 0;
        double v43 = 0.0;
        __int128 v45 = xmmword_1012E67B0;
        *(void *)int v46 = 0xC08F380000000000LL;
        v46[8] = 0;
        *(void *)&v46[16] = 0LL;
        v46[24] = 0;
        if (*v10) {
          sub_100208C68(a1 + 28);
        }
        float v17 = *(float *)(a1 + 36);
        float v18 = sqrtf(v17);
        BOOL v19 = v17 <= 0.0;
        float v20 = 0.0;
        if (!v19) {
          float v20 = v18;
        }
        float v21 = *(float *)&v151;
        *(float *)&double v43 = v20;
        *((float *)&v43 + 1) = v21 * 57.296;
        __int128 v22 = *(_OWORD *)(a1 + 704);
        __int128 v45 = *(_OWORD *)(a1 + 688);
        *(_OWORD *)int v46 = v22;
        *(_OWORD *)&v46[9] = *(_OWORD *)(a1 + 713);
        BOOL v23 = sub_100A20964(a1, (uint64_t)v74);
        BOOL v24 = *((float *)&v43 + 1) < 15.0 && v23;
        LOBYTE(v44) = v24;
        LODWORD(v47) = DWORD1(v75);
        sub_100CCCC8C(a1 + 8, 0, (uint64_t)&v43);
        int v25 = *(unsigned __int8 *)(a1 + 24);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_101867C38);
        }
        __int16 v26 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
        {
          double v27 = -999.0;
          int v28 = *(_DWORD *)(a1 + 276);
          int v29 = *(_DWORD *)(a1 + 280);
          int v30 = *(_DWORD *)(a1 + 788);
          double v31 = *(float *)(a1 + 792);
          *(_DWORD *)std::runtime_error buf = 67111936;
          *(_DWORD *)&uint8_t buf[4] = v25;
          __int16 v177 = 1024;
          int v178 = v28;
          __int16 v179 = 2048;
          double v180 = *(float *)&v43;
          __int16 v181 = 2048;
          double v182 = *((float *)&v43 + 1);
          __int16 v183 = 2048;
          uint64_t v184 = v45;
          __int16 v185 = 1024;
          int v186 = v46[8];
          __int16 v187 = 2048;
          double v188 = *((float *)&v75 + 3);
          __int16 v189 = 1024;
          int v190 = LOBYTE(v44);
          __int16 v191 = 1024;
          int v192 = v29;
          __int16 v193 = 1024;
          int v194 = v30;
          __int16 v195 = 2048;
          double v196 = v27;
          __int16 v197 = 2048;
          double v198 = v31;
          _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_INFO,  "StairStop,state,%d,onCnt,%d,longStd,%f,shortStd,%f,exertionDelta,%f,exertionLow,%d,machineFreq,%f,on,%d,offC nt,%d,headCnt,%d,eDiff,%f,maxH,%f",  buf,  0x62u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_101867C38);
          }
          double v36 = -999.0;
          int v37 = *(_DWORD *)(a1 + 276);
          int v38 = *(_DWORD *)(a1 + 280);
          int v39 = *(_DWORD *)(a1 + 788);
          double v40 = *(float *)(a1 + 792);
          v51[0] = 67111936;
          v51[1] = v25;
          __int16 v52 = 1024;
          int v53 = v37;
          __int16 v54 = 2048;
          double v55 = *(float *)&v43;
          __int16 v56 = 2048;
          double v57 = *((float *)&v43 + 1);
          __int16 v58 = 2048;
          uint64_t v59 = v45;
          __int16 v60 = 1024;
          int v61 = v46[8];
          __int16 v62 = 2048;
          double v63 = *((float *)&v75 + 3);
          __int16 v64 = 1024;
          int v65 = LOBYTE(v44);
          __int16 v66 = 1024;
          int v67 = v38;
          __int16 v68 = 1024;
          int v69 = v39;
          __int16 v70 = 2048;
          double v71 = v36;
          __int16 v72 = 2048;
          double v73 = v40;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "StairStop,state,%d,onCnt,%d,longStd,%f,shortStd,%f,exertionDelta,%f,exertionLow,%d,machineFreq,%f,on,%d,offC nt,%d,headCnt,%d,eDiff,%f,maxH,%f",  v51,  98,  v43,  v44,  *(double *)&v45,  DWORD2(v45),  *(double *)v46,  *(_DWORD *)&v46[8],  *(_DWORD *)&v46[16],  *(_DWORD *)&v46[24],  v47,  *(double *)&__p);
          BOOL v42 = (uint8_t *)v41;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLWorkoutPredictor_Type::WorkoutStopDetectionEvent CLStairStepperWorkoutStopModel::update(const CLWo rkoutPredictorInputs &)",  "%s\n",  v41);
          if (v42 != buf) {
            free(v42);
          }
        }

        if (*(_BYTE *)(a1 + 24) == 4)
        {
          LODWORD(v5) = 1;
          goto LABEL_43;
        }
      }
    }

    else
    {
      sub_1010DDBC0(buf, "StairStop");
      sub_100CDC2CC(a2, (uint64_t *)buf, (uint64_t)&__p);
      if (SHIBYTE(v180) < 0) {
        operator delete(*(void **)buf);
      }
    }

    LODWORD(v5) = 0;
    goto LABEL_43;
  }

  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_101867C38);
  }
  int v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = *(unsigned __int8 *)(a1 + 24);
    *(_DWORD *)std::runtime_error buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "HRStop detect in stairclimber model during state,%{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101867C38);
    }
    int v33 = *(unsigned __int8 *)(a1 + 24);
    LODWORD(v74[0]) = 67240192;
    DWORD1(v74[0]) = v33;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "HRStop detect in stairclimber model during state,%{public}d",  v74,  8);
    int v35 = (uint8_t *)v34;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLWorkoutPredictor_Type::WorkoutStopDetectionEvent CLStairStepperWorkoutStopModel::update(const CLWorkoutP redictorInputs &)",  "%s\n",  v34);
    if (v35 != buf) {
      free(v35);
    }
  }

  unint64_t v8 = v5 & 0xFFFFFFFF00000000LL;
LABEL_44:
  if (__p)
  {
    uint64_t v49 = __p;
    operator delete(__p);
  }

  return v8 | v5;
}

void sub_100A21400( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100A21454(uint64_t result, uint64_t a2)
{
  if (*(float *)a2 <= 30.0)
  {
    int v2 = *(_DWORD *)(result + 788) + 1;
    *(_DWORD *)(result + 788) = v2;
  }

  else
  {
    int v2 = 0;
    *(_DWORD *)(result + 788) = 0;
    *(_DWORD *)(result + 276) = 0;
  }

  if (*(_BYTE *)(a2 + 8)) {
    ++*(_DWORD *)(result + 276);
  }
  return result;
}

uint64_t sub_100A214D0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a2 + 24);
  if (v2 == -999.0)
  {
    uint64_t result = 0LL;
  }

  else
  {
    double v3 = *(double *)(a2 + 32);
    BOOL v4 = v3 == -999.0;
    double v5 = v3 - v2;
    if (v5 < -20.0) {
      BOOL v4 = 1;
    }
    if (v3 == -999.0) {
      BOOL v4 = 0;
    }
    uint64_t result = v5 != -999.0 && v4;
  }

  return result;
}

uint64_t sub_100A2153C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(float *)a2 > 30.0 && *(float *)(a2 + 4) > 5.0;
  if (*(double *)(a2 + 16) <= -0.75 || (int v3 = *(unsigned __int8 *)(a2 + 40), *(_BYTE *)(a2 + 40)))
  {
    if (*(double *)(a2 + 48) <= 0.75 || (double v4 = *(double *)(a2 + 32), v5 = -999.0, v4 == -999.0))
    {
      int v3 = 0;
    }

    else
    {
      double v6 = *(double *)(a2 + 24);
      double v7 = v4 - v6;
      if (v6 != -999.0) {
        double v5 = v7;
      }
      int v3 = v5 < -5.0;
    }
  }

  if (v2) {
    ++*(_DWORD *)(a1 + 788);
  }
  int v8 = *(_DWORD *)(a1 + 272);
  BOOL v11 = v8 >= 24
     && ((float v9 = 180.0 / *(float *)(a1 + 792), v9 <= 1.0) ? (v10 = 11.719) : (v10 = v9 * 11.719),
  double v12 = *(double *)(a2 + 24);
  if (v12 == -999.0) {
    goto LABEL_34;
  }
  BOOL v13 = 0;
  if (v8 >= 24)
  {
    double v14 = *(double *)(a2 + 32);
    if (v14 != -999.0)
    {
      double v15 = v14 - v12;
      if (v15 != -999.0)
      {
        float v16 = v15;
        if (fmaxf((float)(v16 * 1.5) + 60.0, 1.0) < (float)*(int *)(a1 + 788) && v15 <= -20.0)
        {
          BOOL v13 = *(double *)(a2 + 48) > 0.75;
          return v11 | v13;
        }

uint64_t sub_100A216EC(uint64_t result, _OWORD *a2)
{
  uint64_t v3 = result;
  float v4 = *(float *)(result + 784);
  if (*(_WORD *)(result + 46))
  {
    uint64_t result = sub_100208A44((unsigned __int16 *)(result + 44), *(unsigned __int16 *)(result + 46) - 1LL);
    float v5 = *(float *)result;
  }

  else
  {
    float v5 = 0.0;
  }

  float v6 = vabds_f32(v4, v5);
  *(float *)(v3 + 792) = v6;
  ++*(_DWORD *)(v3 + 272);
  if (*(double *)(v3 + 752) == -999.0)
  {
    __int128 v7 = a2[1];
    __int128 v8 = a2[2];
    *(_OWORD *)(v3 + 761) = *(_OWORD *)((char *)a2 + 41);
    *(_OWORD *)(v3 + 736) = v7;
    *(_OWORD *)(v3 + 752) = v8;
  }

  return result;
}

uint64_t sub_100A21780(uint64_t a1, _OWORD *a2)
{
  if (sub_100A217EC(a1, (uint64_t)a2))
  {
    uint64_t v4 = a1 + 8;
    float v5 = &v9;
    int v6 = 2;
  }

  else
  {
    uint64_t result = sub_100A2153C(a1, (uint64_t)a2);
    if (!(_DWORD)result) {
      return result;
    }
    uint64_t v4 = a1 + 8;
    float v5 = &v8;
    int v6 = 3;
  }

  return sub_100CCCC8C(v4, v6, (uint64_t)v5);
}

uint64_t sub_100A217EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(int *)(a1 + 272) >= 71 && *(_BYTE *)(a1 + 24) != 3;
  double v3 = *(double *)(a2 + 24);
  if (v3 == -999.0)
  {
    uint64_t v5 = 1LL;
  }

  else
  {
    double v4 = *(double *)(a2 + 32);
    LODWORD(v5) = v4 == -999.0;
    double v6 = v4 - v3;
    if (v6 == -999.0) {
      LODWORD(v5) = 1;
    }
    if (v6 > -20.0) {
      uint64_t v5 = 1LL;
    }
    else {
      uint64_t v5 = v5;
    }
  }

  return v5;
}

uint64_t sub_100A2189C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100A217EC(a1, a2);
  if ((_DWORD)result)
  {
    uint64_t v5 = a1 + 8;
    double v6 = &v12;
    int v7 = 2;
    return sub_100CCCC8C(v5, v7, (uint64_t)v6);
  }

  int v8 = *(_DWORD *)(a1 + 272);
  if (v8 >= 24)
  {
    double v9 = *(double *)(a2 + 32);
    BOOL v10 = v9 != -999.0;
    if (v9 <= 70.0) {
      BOOL v10 = 0;
    }
    if (v8 >= 0x33 && !v10)
    {
      uint64_t v5 = a1 + 8;
      double v6 = &v11;
      int v7 = 4;
      return sub_100CCCC8C(v5, v7, (uint64_t)v6);
    }
  }

  return result;
}

uint64_t sub_100A21934(uint64_t a1)
{
  *(void *)a1 = off_101867BE0;
  *(void *)(a1 + 288) = off_101848F08;
  BOOL v2 = *(void **)(a1 + 328);
  if (v2)
  {
    *(void *)(a1 + 336) = v2;
    operator delete(v2);
  }

  *(void *)(a1 + 104) = off_10183B0F0;
  sub_100008390(a1 + 168, *(void **)(a1 + 176));
  sub_100210578((void *)(a1 + 120));
  return a1;
}

void sub_100A219A4(void *a1)
{
  *a1 = off_101867BE0;
  a1[36] = off_101848F08;
  BOOL v2 = (void *)a1[41];
  if (v2)
  {
    a1[42] = v2;
    operator delete(v2);
  }

  a1[13] = off_10183B0F0;
  sub_100008390((uint64_t)(a1 + 21), (void *)a1[22]);
  sub_100210578(a1 + 15);
  operator delete(a1);
}

void sub_100A21A14(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

__n128 sub_100A21A40(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 280) = 0;
  *(void *)(a1 + 272) = 0LL;
  *(void *)(a1 + 788) = 0LL;
  if (*(_WORD *)(a1 + 46)) {
    int v4 = *(_DWORD *)sub_100208A44((unsigned __int16 *)(a1 + 44), 0LL);
  }
  else {
    int v4 = 0;
  }
  *(_DWORD *)(a1 + 784) = v4;
  __n128 result = *(__n128 *)(a2 + 16);
  __int128 v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 761) = *(_OWORD *)(a2 + 41);
  *(__n128 *)(a1 + 736) = result;
  *(_OWORD *)(a1 + 752) = v6;
  return result;
}

uint64_t sub_100A21AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_101867C68;
  uint64_t v5 = (void *)(a1 + 8);
  sub_1010DDBC0(&__p, "Workout");
  sub_100795C5C(v5);
  if (v14 < 0) {
    operator delete(__p);
  }
  *(void *)(a1 + 48) = a3;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 72) = 0x3FE0000000000000LL;
  *(CFAbsoluteTime *)(a1 + 80) = CFAbsoluteTimeGetCurrent();
  *(_OWORD *)(a1 + 88) = xmmword_101344760;
  *(void *)(a1 + 104) = 0x4059800000000000LL;
  *(_WORD *)(a1 + 112) = 0;
  sub_1010DDBC0(&v11, "Workout");
  sub_10050CBF4((void *)(a1 + 440));
  if (v12 < 0) {
    operator delete(v11);
  }
  sub_1010DDBC0(v9, "Workout");
  sub_100F474D8((char *)(a1 + 512), (__int128 *)v9);
  if (v10 < 0) {
    operator delete(v9[0]);
  }
  sub_1010DDBC0(&v7, "Workout");
  sub_100CC29F8((void *)(a1 + 616));
  if (v8 < 0) {
    operator delete(v7);
  }
  return a1;
}

void sub_100A21BE8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, void *a21, uint64_t a22, int a23, __int16 a24, char a25, char a26, char a27, uint64_t a28, int a29, __int16 a30, char a31, char a32)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_10031CBC8(v35);
  sub_100A21C80(v34);
  _Unwind_Resume(a1);
}

uint64_t sub_100A21C80(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_100A21CC4(uint64_t a1, double a2)
{
  if (qword_101934750 != -1) {
    dispatch_once(&qword_101934750, &stru_101867CF0);
  }
  int v4 = (os_log_s *)qword_101934758;
  if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::runtime_error buf = 134217984;
    double v10 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "MaxAllowedSecondsForIndoorOutdoorDetector was forced to %f seconds",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_101867CF0);
    }
    int v7 = 134217984;
    double v8 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  2LL,  "MaxAllowedSecondsForIndoorOutdoorDetector was forced to %f seconds",  COERCE_DOUBLE(&v7));
    __int128 v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLIndoorOutdoorDetectorWatch::overrideMaxAllowedSecondsForIndoorOutdoorDetector(const CFTimeInterval)",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  *(double *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0xBFF0000000000000LL;
}

uint64_t sub_100A21E84(uint64_t result, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) <= 1)
  {
    double v3 = (void *)result;
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_101867CF0);
    }
    int v4 = (os_log_s *)qword_101934758;
    if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 134217984;
      uint64_t v10 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Location type was forced to %ld", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934750 != -1) {
        dispatch_once(&qword_101934750, &stru_101867CF0);
      }
      int v7 = 134217984;
      uint64_t v8 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  2LL,  "Location type was forced to %ld",  &v7);
      __int128 v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLIndoorOutdoorDetectorWatch::forceLocationType(CMWorkoutLocationType)",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }

    void v3[7] = a2;
    v3[8] = 0LL;
    v3[9] = 0x3FE0000000000000LL;
    return (*(uint64_t (**)(void *, uint64_t, void *))(*v3 + 72LL))(v3, 1LL, v3 + 7);
  }

  return result;
}

uint64_t sub_100A22060(uint64_t a1)
{
  uint64_t result = sub_100CC553C(a1 + 616);
  *(void *)(a1 + 88) = 0xFFEFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_100A2208C(uint64_t a1, uint64_t a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  return sub_100F47544(a1 + 512, a2, Current);
}

void sub_100A220B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  double Current = CFAbsoluteTimeGetCurrent();
  sub_10050CBF8(a1 + 440, (uint64_t)v5, Current);
}

uint64_t sub_100A220F0(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_101934750 != -1) {
    dispatch_once(&qword_101934750, &stru_101867CF0);
  }
  int v4 = (os_log_s *)qword_101934758;
  if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 56);
    int v6 = *a2;
    uint64_t v7 = *((void *)a2 + 1);
    uint64_t v8 = *((void *)a2 + 2);
    *(_DWORD *)std::runtime_error buf = 134218752;
    uint64_t v27 = v5;
    __int16 v28 = 1026;
    int v29 = v6;
    __int16 v30 = 2050;
    uint64_t v31 = v7;
    __int16 v32 = 2050;
    uint64_t v33 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "IndoorOutdoor,starting session,currentState,%ld,disableDistance,%{public}d,forceLocation,%{public}ld,overrideSeconds,%{public}f",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_101867CF0);
    }
    uint64_t v12 = *(void *)(a1 + 56);
    int v13 = *a2;
    uint64_t v14 = *((void *)a2 + 1);
    uint64_t v15 = *((void *)a2 + 2);
    int v18 = 134218752;
    uint64_t v19 = v12;
    __int16 v20 = 1026;
    int v21 = v13;
    __int16 v22 = 2050;
    uint64_t v23 = v14;
    __int16 v24 = 2050;
    uint64_t v25 = v15;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  0LL,  "IndoorOutdoor,starting session,currentState,%ld,disableDistance,%{public}d,forceLocation,%{public}ld,overrideSeconds,%{public}f",  &v18,  38);
    float v17 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLIndoorOutdoorDetectorWatch::startSession(const CLIndoorOutdoorProtocol::IndoorOutdoorSettings &)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

  *(_BYTE *)(a1 + 113) = 1;
  *(CFAbsoluteTime *)(a1 + 80) = CFAbsoluteTimeGetCurrent();
  if (*a2) {
    *(void *)(a1 + 104) = 0xBFF0000000000000LL;
  }
  double v9 = *((double *)a2 + 2);
  if (v9 != 2.22507386e-308) {
    sub_100A21CC4(a1, v9);
  }
  uint64_t v10 = *((void *)a2 + 1);
  if (v10 && v10 != 3) {
    sub_100A21E84(a1, v10);
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 16LL))(result, 1LL);
  }
  return result;
}

uint64_t sub_100A22360(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 113) && !*(_BYTE *)(a1 + 112))
  {
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_101867CF0);
    }
    BOOL v2 = (os_log_s *)qword_101934758;
    if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEFAULT))
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      uint64_t v4 = *(void *)(a1 + 56);
      uint64_t v5 = *(void *)(a1 + 64);
      uint64_t v6 = *(void *)(a1 + 72);
      *(_DWORD *)std::runtime_error buf = 134218752;
      CFAbsoluteTime v24 = Current;
      __int16 v25 = 2048;
      uint64_t v26 = v4;
      __int16 v27 = 2048;
      uint64_t v28 = v5;
      __int16 v29 = 2048;
      uint64_t v30 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "IndoorOutdoor,last state,time,%f,new location type,%ld,confidence,%ld,probability,%f",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934750 != -1) {
        dispatch_once(&qword_101934750, &stru_101867CF0);
      }
      uint64_t v8 = qword_101934758;
      CFAbsoluteTime v9 = CFAbsoluteTimeGetCurrent();
      uint64_t v10 = *(void *)(a1 + 56);
      uint64_t v11 = *(void *)(a1 + 64);
      uint64_t v12 = *(void *)(a1 + 72);
      int v15 = 134218752;
      CFAbsoluteTime v16 = v9;
      __int16 v17 = 2048;
      uint64_t v18 = v10;
      __int16 v19 = 2048;
      uint64_t v20 = v11;
      __int16 v21 = 2048;
      uint64_t v22 = v12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  0LL,  "IndoorOutdoor,last state,time,%f,new location type,%ld,confidence,%ld,probability,%f",  COERCE_DOUBLE(&v15),  42);
      uint64_t v14 = (uint8_t *)v13;
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLIndoorOutdoorDetectorWatch::stopSession()", "%s\n", v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    (*(void (**)(uint64_t, void, uint64_t))(*(void *)a1 + 72LL))(a1, 0LL, a1 + 56);
  }

  *(_OWORD *)(a1 + 96) = xmmword_101344770;
  *(_WORD *)(a1 + 112) = 0;
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16LL))(result, 0LL);
  }
  return result;
}

BOOL sub_100A225AC(uint64_t a1)
{
  return vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(a1 + 80)) > *(double *)(a1 + 96);
}

BOOL sub_100A225E0(uint64_t a1)
{
  return sub_100F47E8C(a1 + 512) > *(double *)(a1 + 104);
}

BOOL sub_100A22610(uint64_t a1)
{
  return *(_BYTE *)(a1 + 113)
}

void sub_100A22668(double *a1, double a2)
{
  if ((*(unsigned int (**)(double *))(*(void *)a1 + 88LL))(a1))
  {
    double Current = CFAbsoluteTimeGetCurrent();
    double v4 = a1[10];
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_101867CF0);
    }
    double v5 = vabdd_f64(Current, v4);
    uint64_t v6 = (os_log_s *)qword_101934758;
    if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *((void *)a1 + 12);
      uint64_t v8 = *((void *)a1 + 7);
      double v9 = sub_100F47E8C((uint64_t)(a1 + 64));
      uint64_t v10 = *((void *)a1 + 9);
      *(_DWORD *)std::runtime_error buf = 134219008;
      *(void *)&uint8_t buf[4] = v7;
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(double *)&buf[14] = v5;
      *(_WORD *)&buf[22] = 1024;
      *(_DWORD *)__int128 v89 = v8;
      *(_WORD *)&v89[4] = 2048;
      *(double *)&v89[6] = v9;
      *(_WORD *)&v89[14] = 2048;
      *(void *)&v89[16] = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "IndoorOutdoor,TimeExceeded,maxAllowed,%f,timePassed,%f,locType,%d,distance,%f,outdoorProbability,%f",  buf,  0x30u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934750 != -1) {
        dispatch_once(&qword_101934750, &stru_101867CF0);
      }
      uint64_t v42 = qword_101934758;
      uint64_t v43 = *((void *)a1 + 12);
      uint64_t v44 = *((void *)a1 + 7);
      double v45 = sub_100F47E8C((uint64_t)(a1 + 64));
      uint64_t v46 = *((void *)a1 + 9);
      LODWORD(__dst[0]) = 134219008;
      *(void *)((char *)__dst + 4) = v43;
      WORD2(__dst[1]) = 2048;
      *(double *)((char *)&__dst[1] + 6) = v5;
      HIWORD(__dst[2]) = 1024;
      LODWORD(__dst[3]) = v44;
      WORD2(__dst[3]) = 2048;
      *(double *)((char *)&__dst[3] + 6) = v45;
      HIWORD(__dst[4]) = 2048;
      __dst[5] = v46;
      LODWORD(v62) = 48;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v42,  0LL,  "IndoorOutdoor,TimeExceeded,maxAllowed,%f,timePassed,%f,locType,%d,distance,%f,outdoorProbability,%f",  COERCE_DOUBLE(__dst),  v62,  v63,  v65,  v66);
      uint64_t v48 = (char *)v47;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLIndoorOutdoorDetectorWatch::update(CFAbsoluteTime)",  "%s\n",  v47);
      if (v48 != buf) {
        free(v48);
      }
    }

    *((_BYTE *)a1 + 112) = 1;
    (*(void (**)(double *, uint64_t, void *))(*(void *)a1 + 72LL))(a1, 1LL, (void *)a1 + 7);
  }

  else
  {
    uint64_t v11 = (*(uint64_t (**)(void))(**((void **)a1 + 4) + 32LL))(*((void *)a1 + 4));
    sub_10046E868(v11);
    if (*((_BYTE *)a1 + 113))
    {
      uint64_t v12 = (*(uint64_t (**)(void))(**((void **)a1 + 4) + 56LL))(*((void *)a1 + 4));
      sub_10046E868(v12);
      uint64_t v13 = (*(uint64_t (**)(void))(**((void **)a1 + 4) + 40LL))(*((void *)a1 + 4));
      sub_10046E868(v13);
    }

    uint64_t v14 = (double *)((*(uint64_t (**)(void))(**((void **)a1 + 4) + 32LL))(*((void *)a1 + 4)) + 96);
    if (*v14 != -1.0)
    {
      memcpy(__dst, v14, sizeof(__dst));
      if (a1[11] == -1.79769313e308)
      {
        a1[11] = *(double *)__dst;
        sub_100CC323C((uint64_t)(a1 + 77), __dst);
        memcpy(a1 + 15, __dst, 0x140uLL);
      }

      else
      {
        double v15 = a1[15];
        double v16 = a1[47];
        double v17 = CFAbsoluteTimeGetCurrent();
        uint64_t v18 = (uint64_t)(a1 + 64);
        sub_100F48BA4((void *)a1 + 64, v15, v16, v17);
        memcpy(a1 + 15, __dst, 0x140uLL);
        sub_100CC3250((uint64_t)(a1 + 77), (uint64_t)&v65, v17);
        if (vabdd_f64(CFAbsoluteTimeGetCurrent(), a1[10]) <= fmin(a1[12], 110.0))
        {
          double v21 = v66;
        }

        else
        {
          double v19 = sub_100F47E8C((uint64_t)(a1 + 64));
          uint64_t v20 = &v66;
          if (v19 > 100.0) {
            uint64_t v20 = &v65;
          }
          double v21 = *v20;
        }

        float v22 = sub_100F47F54((uint64_t)(a1 + 64), v17);
        float v23 = sub_10050D060((uint64_t)(a1 + 55), v17);
        double v24 = sub_100F47E8C((uint64_t)(a1 + 64));
        float v25 = sub_100A22F18(v21, v22, v23, v24);
        double v26 = a1[7];
        double v27 = a1[8];
        double v28 = a1[9];
        sub_100A2312C((uint64_t)a1, (uint64_t)buf, v25);
        *(_OWORD *)(a1 + 7) = *(_OWORD *)buf;
        a1[9] = *(double *)&buf[16];
        if (*((void *)a1 + 8) != *(void *)&v27 || *((void *)a1 + 7) != *(void *)&v26)
        {
          if (qword_101934750 != -1) {
            dispatch_once(&qword_101934750, &stru_101867CF0);
          }
          __int16 v29 = (os_log_s *)qword_101934758;
          if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEFAULT))
          {
            double v31 = a1[8];
            uint64_t v30 = *((void *)a1 + 9);
            uint64_t v32 = *((void *)a1 + 7);
            *(_DWORD *)std::runtime_error buf = 134351104;
            *(double *)&uint8_t buf[4] = v28;
            *(_WORD *)&_BYTE buf[12] = 2050;
            *(double *)&buf[14] = v27;
            *(_WORD *)&buf[22] = 2050;
            *(double *)__int128 v89 = v26;
            *(_WORD *)&v89[8] = 2050;
            *(void *)&v89[10] = v30;
            *(_WORD *)&v89[18] = 2050;
            *(double *)&v89[20] = v21;
            __int16 v90 = 2050;
            double v91 = v22;
            __int16 v92 = 2050;
            double v93 = v23;
            __int16 v94 = 2050;
            double v95 = v31;
            __int16 v96 = 2050;
            uint64_t v97 = v32;
            _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "IndoorOutdoor,update,old probability,%{public}f,confidence,%{public}ld,state,%{public}ld,new probability,% {public}f,gpsOutdoor,%{public}f,wifiIndoor,%{public}f,alsOutdor,%{public}f,confidence,%{public}ld,state,%{public}ld",  buf,  0x5Cu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934750 != -1) {
              dispatch_once(&qword_101934750, &stru_101867CF0);
            }
            double v58 = a1[8];
            double v57 = a1[9];
            uint64_t v59 = *((void *)a1 + 7);
            int v67 = 134351104;
            double v68 = v28;
            __int16 v69 = 2050;
            double v70 = v27;
            __int16 v71 = 2050;
            double v72 = v26;
            __int16 v73 = 2050;
            double v74 = v57;
            __int16 v75 = 2050;
            double v76 = v21;
            __int16 v77 = 2050;
            double v78 = v22;
            __int16 v79 = 2050;
            double v80 = v23;
            __int16 v81 = 2050;
            double v82 = v58;
            __int16 v83 = 2050;
            uint64_t v84 = v59;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  0LL,  "IndoorOutdoor,update,old probability,%{public}f,confidence,%{public}ld,state,%{public}ld,new probability,% {public}f,gpsOutdoor,%{public}f,wifiIndoor,%{public}f,alsOutdor,%{public}f,confidence,%{public}ld,state,%{public}ld",  &v67,  92);
            int v61 = (char *)v60;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLIndoorOutdoorDetectorWatch::update(CFAbsoluteTime)",  "%s\n",  v60);
            if (v61 != buf) {
              free(v61);
            }
          }

          if (!*((_BYTE *)a1 + 113)) {
            (*(void (**)(double *, void, void *))(*(void *)a1 + 72LL))(a1, 0LL, (void *)a1 + 7);
          }
        }

        double v33 = CFAbsoluteTimeGetCurrent();
        double v34 = a1[10];
        if (qword_101934750 != -1)
        {
          double v64 = v33;
          dispatch_once(&qword_101934750, &stru_101867CF0);
          double v33 = v64;
        }

        double v35 = vabdd_f64(v33, v34);
        double v36 = (os_log_s *)qword_101934758;
        if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_INFO))
        {
          double v37 = v65;
          double v38 = v66;
          double v39 = sub_100F47E8C(v18);
          uint64_t v41 = *((void *)a1 + 7);
          uint64_t v40 = *((void *)a1 + 8);
          *(_DWORD *)std::runtime_error buf = 134351360;
          *(double *)&uint8_t buf[4] = v37;
          *(_WORD *)&_BYTE buf[12] = 2050;
          *(double *)&buf[14] = v38;
          *(_WORD *)&buf[22] = 2050;
          *(double *)__int128 v89 = v35;
          *(_WORD *)&v89[8] = 2050;
          *(double *)&v89[10] = v39;
          *(_WORD *)&v89[18] = 2050;
          *(double *)&v89[20] = v21;
          __int16 v90 = 2050;
          double v91 = v22;
          __int16 v92 = 2050;
          double v93 = v23;
          __int16 v94 = 2050;
          double v95 = v25;
          __int16 v96 = 2050;
          uint64_t v97 = v40;
          __int16 v98 = 2050;
          uint64_t v99 = v41;
          _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_INFO,  "IndoorOutdoor,probabilities,llr,%{public}f,discordant,%{public}f,timeSinceStart,%{public}f,totalDistance,%{p ublic}f,gpsOutdoor,%{public}f,wifiIndoor,%{public}f,alsOutdoor,%{public}f,probability,%{public}f,confidence, %{public}ld,location,%{public}ld",  buf,  0x66u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934750 != -1) {
            dispatch_once(&qword_101934750, &stru_101867CF0);
          }
          uint64_t v49 = qword_101934758;
          double v50 = v65;
          double v51 = v66;
          double v52 = sub_100F47E8C(v18);
          uint64_t v54 = *((void *)a1 + 7);
          uint64_t v53 = *((void *)a1 + 8);
          int v67 = 134351360;
          double v68 = v50;
          __int16 v69 = 2050;
          double v70 = v51;
          __int16 v71 = 2050;
          double v72 = v35;
          __int16 v73 = 2050;
          double v74 = v52;
          __int16 v75 = 2050;
          double v76 = v21;
          __int16 v77 = 2050;
          double v78 = v22;
          __int16 v79 = 2050;
          double v80 = v23;
          __int16 v81 = 2050;
          double v82 = v25;
          __int16 v83 = 2050;
          uint64_t v84 = v53;
          __int16 v85 = 2050;
          uint64_t v86 = v54;
          LODWORD(v62) = 102;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v49,  1LL,  "IndoorOutdoor,probabilities,llr,%{public}f,discordant,%{public}f,timeSinceStart,%{public}f,totalDistance,%{p ublic}f,gpsOutdoor,%{public}f,wifiIndoor,%{public}f,alsOutdoor,%{public}f,probability,%{public}f,confidence, %{public}ld,location,%{public}ld",  &v67,  *(void *)&v62);
          __int16 v56 = (char *)v55;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLIndoorOutdoorDetectorWatch::update(CFAbsoluteTime)",  "%s\n",  v55);
          if (v56 != buf) {
            free(v56);
          }
        }
      }
    }
  }

double sub_100A22F18(double a1, float a2, float a3, double a4)
{
  double v4 = a1;
  if (a4 > 100.0) {
    a4 = 100.0;
  }
  double v5 = a4 * 0.819 / 100.0 + (100.0 - a4) * 0.7 / 100.0;
  float v6 = 1.0 - a2;
  if (a2 == -1.0)
  {
    float v6 = a2;
    double v7 = 0.5;
  }

  else
  {
    double v7 = v6;
  }

  if (v6 >= 0.3) {
    double v5 = a4 * 0.977 / 100.0 + (100.0 - a4) * 0.0 / 100.0;
  }
  if (a2 == -1.0) {
    double v8 = 0.1;
  }
  else {
    double v8 = v5;
  }
  double v9 = a3;
  BOOL v10 = a3 == -1.0;
  if (a3 == -1.0) {
    double v11 = 0.1;
  }
  else {
    double v11 = dbl_101344780[a3 >= 0.5];
  }
  if (v10) {
    double v12 = 0.5;
  }
  else {
    double v12 = v9;
  }
  float v13 = a1;
  if (a1 == -1.0) {
    double v14 = 0.1;
  }
  else {
    double v14 = dbl_101344790[v13 >= 0.5] * a4 / 100.0 + (100.0 - a4) * 0.1 / 100.0;
  }
  if (a1 == -1.0) {
    double v15 = 0.5;
  }
  else {
    double v15 = v13;
  }
  float v16 = v14 + v11 + v8;
  double v17 = v16;
  double v18 = v11 / v16;
  double v29 = pow(v12, v18);
  double v19 = v8 / v17;
  double v28 = pow(v7, v19);
  double v20 = v14 / v17;
  double v27 = pow(v15, v20);
  double v21 = pow(1.0 - v12, v18);
  double v22 = pow(1.0 - v7, v19);
  double v23 = pow(1.0 - v15, v20);
  if (v4 == -1.0 || v4 >= 0.100000001 && v4 <= 0.899999976)
  {
    float v24 = v27 * (v29 * v28);
    float v25 = v23 * (v21 * v22);
    return (float)(v24 / (float)(v24 + v25));
  }

  return v4;
}

uint64_t sub_100A2312C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 80LL))(a1);
  if ((a3 <= 0.525 || a3 > 0.7) && (a3 <= 0.3 || a3 > 0.45))
  {
    if ((a3 <= 0.7 || a3 > 0.9) && (a3 <= 0.1 || a3 > 0.3))
    {
      if (a3 <= 0.9 || a3 > 1.0)
      {
        BOOL v8 = a3 > 0.1 || a3 <= 0.0;
        uint64_t v6 = 3LL;
        if (v8 && fabsf(a3) > 0.001)
        {
          if (qword_101934750 != -1) {
            dispatch_once(&qword_101934750, &stru_101867CF0);
          }
          double v9 = (os_log_s *)qword_101934758;
          if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)std::runtime_error buf = 134349056;
            double v15 = a3;
            _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "IndoorOutdoor, low confidence estimate,probability,%{public}f",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934750 != -1) {
              dispatch_once(&qword_101934750, &stru_101867CF0);
            }
            int v12 = 134349056;
            double v13 = a3;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  1LL,  "IndoorOutdoor, low confidence estimate,probability,%{public}f",  &v12,  12);
            double v11 = (uint8_t *)v10;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLIndoorOutdoorProtocol::IndoorOutdoorResult CLIndoorOutdoorDetectorWatch::getResultFromProbability(float) const",  "%s\n",  v10);
            if (v11 != buf) {
              free(v11);
            }
          }

          uint64_t v6 = 0LL;
          uint64_t result = 0LL;
        }
      }

      else
      {
        uint64_t v6 = 3LL;
      }
    }

    else
    {
      uint64_t v6 = 2LL;
    }
  }

  else
  {
    uint64_t v6 = 1LL;
  }

  *(void *)a2 = result;
  *(void *)(a2 + 8) = v6;
  *(double *)(a2 + 16) = a3;
  return result;
}

uint64_t sub_100A233D4(float a1)
{
  if (a1 < 0.5) {
    return 1LL;
  }
  else {
    return 2LL;
  }
}

uint64_t sub_100A233E8(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v8 = *a3;
  uint64_t v9 = *((void *)a3 + 2);
  uint64_t v10 = v8;
  int v11 = v6;
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, __int128 *, uint64_t))(*(void *)result + 24LL))(result, &v8, a2);
  }
  return result;
}

void sub_100A2345C(id a1)
{
  qword_101934758 = (uint64_t)os_log_create("com.apple.locationd.Motion", "IndoorOutdoor");
}

void sub_100A235E4(id a1)
{
  qword_101999F98 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLBatchedAccelerometerServiceSilo");
}

void sub_100A23704( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A23B20( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
}

void sub_100A23F7C(id a1)
{
  qword_1019347C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "BatchedSensor");
}

void *sub_100A23FB0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &off_101867D60;
  result[1] = v3;
  return result;
}

uint64_t sub_100A23FE4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_101867D60;
  a2[1] = v2;
  return result;
}

id sub_100A24000(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  return _[*(id *)(a1 + 8) onBatchedData:a2 N:*a3];
}

uint64_t sub_100A24010(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_100A2404C()
{
  return &off_101867DD0;
}

uint64_t sub_100A24058()
{
  dword_101999F70 = 800;
  __cxa_atexit((void (*)(void *))sub_100355650, &xmmword_101999F58, (void *)&_mh_execute_header);
  sub_1010DDBC0(qword_101999F78, "DmFp");
  dword_101999F90 = 200;
  return __cxa_atexit((void (*)(void *))sub_100355650, qword_101999F78, (void *)&_mh_execute_header);
}

uint64_t sub_100A240E4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1002DC708((uint64_t)(a2 + 754), a1 + 3016);
}

void sub_100A24130(_Unwind_Exception *a1)
{
}

_DWORD *sub_100A24144(_DWORD *a1, uint64_t a2)
{
  double v4 = sub_1002E0454(a1);
  sub_1002DCA80((uint64_t)v4, a2);
  sub_1002DC4C4((uint64_t)(a1 + 202), a2 + 808);
  sub_1002DC708((uint64_t)(a1 + 754), a2 + 3016);
  return a1;
}

void sub_100A2418C(_Unwind_Exception *a1)
{
}

_DWORD *sub_100A241A0(_DWORD *a1, uint64_t a2)
{
  double v4 = sub_1002E0454(a1);
  sub_1002DCA80((uint64_t)v4, a2);
  sub_1002DC4C4((uint64_t)(a1 + 202), a2 + 808);
  sub_1002DC708((uint64_t)(a1 + 754), a2 + 3016);
  return a1;
}

void sub_100A241E8(_Unwind_Exception *a1)
{
}

void sub_100A241FC(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t p_vtable = (void **)a1;
  sub_100A24144((_DWORD *)a3, a1);
  if (!*a2)
  {
    uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934860 == -1)
    {
LABEL_5:
      int v6 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, power, now", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        v9[0] = 0;
        LODWORD(v8) = 2;
        double v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiTimer, set, power, now",  v9,  v8);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::Power &) const",  "%s\n",  v7);
      }

      if (!*(_BYTE *)(a3 + 1952)) {
        *(_BYTE *)(a3 + 1952) = 1;
      }
      *(void *)(a3 + 1944) = 0x3FD3333333333333LL;
      return;
    }

void sub_100A24428(_Unwind_Exception *a1)
{
}

void sub_100A24448(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(_BYTE *)(a1 + 6376)
    && (*(int *)(a1 + 6400) > 0 || *(int *)(a1 + 6404) > 0 || *(int *)(a1 + 6408) >= 1)
    && *(_BYTE *)(a1 + 808))
  {
    double v4 = *(double *)(a1 + 6160);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101867DE0);
    }
    double v5 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::runtime_error buf = 67240192;
      int v9 = (int)v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, scan, %{public}d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      v7[0] = 67240192;
      v7[1] = (int)v4;
      int v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiTimer, set, scan, %{public}d",  v7,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  v6);
    }

    if (!*(_BYTE *)(a2 + 1952)) {
      *(_BYTE *)(a2 + 1952) = 1;
    }
    *(double *)(a2 + 1944) = v4;
  }

void sub_100A24664(_Unwind_Exception *a1)
{
}

void sub_100A2467C(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(_BYTE *)(a1 + 6376))
  {
    int v6 = (unsigned int *)(a1 + 816);
    if (sub_100495E98(v6) && ((BOOL v7 = sub_100495E64(v6), *a2 == 10) ? (v8 = v7) : (v8 = 0), v8))
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      int v9 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::runtime_error buf = 67240192;
        LODWORD(v26) = 1;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "WifiTimer, set, scanbusy, %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101867DE0);
        }
        int v19 = 67240192;
        LODWORD(v20) = 1;
        double v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiTimer, set, scanbusy, %{public}d",  &v19,  8);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::ScanBusy &) const",  "%s\n",  v17);
      }

      if (!*(_BYTE *)(a3 + 1952)) {
        *(_BYTE *)(a3 + 1952) = 1;
      }
      *(void *)(a3 + 1944) = 0x3FF0000000000000LL;
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      uint64_t v10 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        int v11 = sub_10099EBD8((char)*a2);
        int v12 = sub_100496E10(v6);
        *(_DWORD *)std::runtime_error buf = 136446722;
        double v26 = v11;
        __int16 v27 = 2048;
        uint64_t v28 = 1LL;
        __int16 v29 = 1026;
        int v30 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "@EmerWarn, ScanErrorBusy, %{public}s, retry in, %{pupblic}lld, reqtype, %{public}d",  buf,  0x1Cu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101867DE0);
        }
        uint64_t v13 = qword_101934868;
        double v14 = sub_10099EBD8((char)*a2);
        int v15 = sub_100496E10(v6);
        int v19 = 136446722;
        double v20 = v14;
        __int16 v21 = 2048;
        uint64_t v22 = 1LL;
        __int16 v23 = 1026;
        int v24 = v15;
        LODWORD(v18) = 28;
        float v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v13,  0LL,  "@EmerWarn, ScanErrorBusy, %{public}s, retry in, %{pupblic}lld, reqtype, %{public}d",  &v19,  v18);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::ScanBusy &) const",  "%s\n",  v16);
      }
    }

    else
    {
      if (!*(_BYTE *)(a3 + 1952)) {
        *(_BYTE *)(a3 + 1952) = 1;
      }
      *(void *)(a3 + 1944) = 0x4018000000000000LL;
    }
  }

void sub_100A24A54(_Unwind_Exception *a1)
{
}

void sub_100A24A78(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(_BYTE *)(a1 + 6376) && *(int *)(a1 + 6400) >= 1)
  {
    if (sub_100495E64((_DWORD *)(a1 + 816))) {
      double v4 = 2.0;
    }
    else {
      double v4 = 6.0;
    }
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101867DE0);
    }
    double v5 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::runtime_error buf = 67240192;
      int v9 = (int)v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "WifiTimer, set, scanerror, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      v7[0] = 67240192;
      v7[1] = (int)v4;
      int v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiTimer, set, scanerror, %{public}d",  v7,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::ScanError &) const",  "%s\n",  v6);
    }

    if (!*(_BYTE *)(a2 + 1952)) {
      *(_BYTE *)(a2 + 1952) = 1;
    }
    *(double *)(a2 + 1944) = v4;
  }

void sub_100A24C84(_Unwind_Exception *a1)
{
}

void sub_100A24C9C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = (_BYTE *)(a1 + 6172);
  sub_100A24144((_DWORD *)a2, a1);
  if (v4[204] && *(int *)(a1 + 6400) >= 1 && *(_BYTE *)(a1 + 810))
  {
    if (*v4) {
      double v5 = 6.0;
    }
    else {
      double v5 = 15.0;
    }
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101867DE0);
    }
    int v6 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::runtime_error buf = 67240192;
      int v10 = (int)v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "WifiTimer, nextscan, %{public}d, timer",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      v8[0] = 67240192;
      v8[1] = (int)v5;
      BOOL v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiTimer, nextscan, %{public}d, timer",  v8,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Client::UpdateTimer &) const",  "%s\n",  v7);
    }

    if (!*(_BYTE *)(a2 + 1952)) {
      *(_BYTE *)(a2 + 1952) = 1;
    }
    *(double *)(a2 + 1944) = v5;
  }

void sub_100A24EB0(_Unwind_Exception *a1)
{
}

void sub_100A24EC8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(_BYTE *)(a1 + 6376))
  {
    if (*(int *)(a1 + 6400) >= 1 && *(_BYTE *)(a2 + 88) == 0)
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      BOOL v7 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, linkstatus, now", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101867DE0);
        }
        v9[0] = 0;
        BOOL v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiTimer, set, linkstatus, now",  v9,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::LinkStatus &) const",  "%s\n",  v8);
      }

      if (!*(_BYTE *)(a3 + 1952)) {
        *(_BYTE *)(a3 + 1952) = 1;
      }
      *(void *)(a3 + 1944) = 0x3FD3333333333333LL;
    }
  }

void sub_100A250A8(_Unwind_Exception *a1)
{
}

_DWORD *sub_100A250C0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_100A24144(a2, a1);
  if (*(_BYTE *)(a1 + 6376) && *(int *)(a1 + 6400) >= 1)
  {
    if (!*((_BYTE *)result + 1952)) {
      *((_BYTE *)result + 1952) = 1;
    }
    *((void *)result + 243) = 0x3FD3333333333333LL;
  }

  return result;
}

void sub_100A2511C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(_BYTE *)(a1 + 1656))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101867DE0);
    }
    double v4 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = (int)*(double *)(a1 + 6352);
      *(_DWORD *)std::runtime_error buf = 67240192;
      int v11 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "@WsbTimer, buffer, %{public}d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      int v7 = (int)*(double *)(a1 + 6352);
      v9[0] = 67240192;
      v9[1] = v7;
      BOOL v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbTimer, buffer, %{public}d",  v9,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::Wsb &) const",  "%s\n",  v8);
    }

    uint64_t v6 = *(void *)(a1 + 6352);
    if (!*(_BYTE *)(a2 + 1976)) {
      *(_BYTE *)(a2 + 1976) = 1;
    }
    *(void *)(a2 + 1968) = v6;
  }

void sub_100A25304(_Unwind_Exception *a1)
{
}

void sub_100A2531C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(int *)(a1 + 6400) >= 1)
  {
    if (*(double *)(a1 + 6160) >= *(double *)(a1 + 6392) - *(double *)(a1 + 6384))
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      int v7 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "@WifiTimer, skip, motion", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101867DE0);
        }
        LOWORD(v11[0]) = 0;
        int v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "@WifiTimer, skip, motion",  v11,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::System::CoarseMotion &) const",  "%s\n",  v10);
      }
    }

    else
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      double v4 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
      {
        int v5 = (int)*(double *)(a1 + 6160);
        *(_DWORD *)std::runtime_error buf = 67240192;
        int v13 = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "@WifiTimer, set, motion, %{public}d", buf, 8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101867DE0);
        }
        int v8 = (int)*(double *)(a1 + 6160);
        v11[0] = 67240192;
        v11[1] = v8;
        int v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "@WifiTimer, set, motion, %{public}d",  v11,  8);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::System::CoarseMotion &) const",  "%s\n",  v9);
      }

      uint64_t v6 = *(void *)(a1 + 6160);
      if (!*(_BYTE *)(a2 + 1952)) {
        *(_BYTE *)(a2 + 1952) = 1;
      }
      *(void *)(a2 + 1944) = v6;
    }
  }

void sub_100A2564C(_Unwind_Exception *a1)
{
}

void sub_100A25668(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(_BYTE *)(a1 + 6376) && *(int *)(a1 + 6412) > 0)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101867DE0);
    }
    uint64_t v6 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = *a2;
      int v8 = *(_DWORD *)(a1 + 6344);
      int v9 = (int)*(double *)(a1 + 6352);
      int v10 = *(unsigned __int8 *)(a1 + 1656);
      *(_DWORD *)std::runtime_error buf = 67240960;
      int v31 = v7;
      __int16 v32 = 1026;
      int v33 = v8;
      __int16 v34 = 1026;
      int v35 = v9;
      __int16 v36 = 1026;
      int v37 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "WsbAls, resulttag, %{public}d, wsbtag, %{public}d, delay, %{public}d, set, %{public}d",  buf,  0x1Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      int v14 = *a2;
      int v15 = *(_DWORD *)(a1 + 6344);
      int v16 = (int)*(double *)(a1 + 6352);
      int v17 = *(unsigned __int8 *)(a1 + 1656);
      int v22 = 67240960;
      int v23 = v14;
      __int16 v24 = 1026;
      int v25 = v15;
      __int16 v26 = 1026;
      int v27 = v16;
      __int16 v28 = 1026;
      int v29 = v17;
      uint64_t v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WsbAls, resulttag, %{public}d, wsbtag, %{public}d, delay, %{public}d, set, %{public}d",  &v22,  26);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Network::AlsRequestResult &) const",  "%s\n",  v18);
    }

    if (*a2 == -1 && *(_BYTE *)(a1 + 1656))
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      int v11 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = (int)*(double *)(a1 + 6352);
        *(_DWORD *)std::runtime_error buf = 67240192;
        int v31 = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "@WsbTimer, alsresult, %{public}d", buf, 8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101867DE0);
        }
        int v19 = (int)*(double *)(a1 + 6352);
        int v22 = 67240192;
        int v23 = v19;
        LODWORD(v21) = 8;
        double v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbTimer, alsresult, %{public}d",  &v22,  v21);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Network::AlsReque stResult &) const",  "%s\n",  v20);
      }

      uint64_t v13 = *(void *)(a1 + 6352);
      if (!*(_BYTE *)(a3 + 1976)) {
        *(_BYTE *)(a3 + 1976) = 1;
      }
      *(void *)(a3 + 1968) = v13;
    }
  }

void sub_100A25A20(_Unwind_Exception *a1)
{
}

void sub_100A25A3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 5020;
  sub_100A24144((_DWORD *)a2, a1);
  if (*(_BYTE *)(v4 + 1356)
    && (*(int *)(a1 + 6400) > 0 || *(int *)(a1 + 6404) >= 1)
    && *(double *)(a1 + 6384) - *(double *)v4 >= 6.0)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101867DE0);
    }
    int v5 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, alsreply, now", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      v7[0] = 0;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiTimer, set, alsreply, now",  v7,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Network::AlsFinished &) const",  "%s\n",  v6);
    }

    if (!*(_BYTE *)(a2 + 1952)) {
      *(_BYTE *)(a2 + 1952) = 1;
    }
    *(void *)(a2 + 1944) = 0LL;
  }

void sub_100A25C30(_Unwind_Exception *a1)
{
}

void sub_100A25C48(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(int *)(a1 + 6412) >= 1 && *(_BYTE *)(a1 + 1656))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101867DE0);
    }
    uint64_t v6 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = (int)*(double *)(a1 + 6352);
      *(_DWORD *)std::runtime_error buf = 67240192;
      int v19 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "@WsbTimer, reach, %{public}d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      int v14 = (int)*(double *)(a1 + 6352);
      v17[0] = 67240192;
      v17[1] = v14;
      int v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbTimer, reach, %{public}d",  v17,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::System::Reachability &) const",  "%s\n",  v15);
    }

    uint64_t v8 = *(void *)(a1 + 6352);
    if (!*(_BYTE *)(a3 + 1976)) {
      *(_BYTE *)(a3 + 1976) = 1;
    }
    *(void *)(a3 + 1968) = v8;
  }

  if (*(int *)(a1 + 6400) > 0 || *(int *)(a1 + 6404) >= 1)
  {
    int v10 = *a2;
    int v9 = a2[1];
    BOOL v11 = v9 == 1 && v10 == 2;
    if (v11 || v9 == 2 && v10 == 1 || !v9)
    {
      if (!*(_BYTE *)(a3 + 1952)) {
        *(_BYTE *)(a3 + 1952) = 1;
      }
      *(void *)(a3 + 1944) = 0LL;
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      int v12 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, reach, now", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101867DE0);
        }
        LOWORD(v17[0]) = 0;
        LODWORD(v16) = 2;
        uint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiTimer, set, reach, now",  v17,  v16);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::System::Reachability &) const",  "%s\n",  v13);
      }
    }
  }

void sub_100A25FC8(_Unwind_Exception *a1)
{
}

void sub_100A25FE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(int *)(a1 + 6400) > 0)
  {
    if (!*(_BYTE *)(a2 + 1952)) {
      *(_BYTE *)(a2 + 1952) = 1;
    }
    *(void *)(a2 + 1944) = 0x3FD3333333333333LL;
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101867DE0);
    }
    uint64_t v4 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "WifiTimer, set, wake, now", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      v6[0] = 0;
      int v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WifiTimer, set, wake, now",  v6,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::System::DeviceWake &) const",  "%s\n",  v5);
    }
  }

void sub_100A261B0(_Unwind_Exception *a1)
{
}

void sub_100A261C8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(_BYTE *)(a1 + 6376))
  {
    double v4 = *(double *)(a1 + 6392) - *(double *)(a1 + 6384);
    double v5 = *(double *)(a1 + 6160);
    if (*(_BYTE *)(a1 + 809)) {
      BOOL v6 = v5 < v4;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      if (!*(_BYTE *)(a2 + 1952)) {
        *(_BYTE *)(a2 + 1952) = 1;
      }
      *(double *)(a2 + 1944) = v5;
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      BOOL v11 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = (int)*(double *)(a1 + 6160);
        *(_DWORD *)std::runtime_error buf = 67240192;
        int v20 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "@WifiTimer, set, locreq, %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101867DE0);
        }
        int v14 = (int)*(double *)(a1 + 6160);
        int v15 = 67240192;
        int v16 = v14;
        int v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiTimer, set, locreq, %{public}d",  &v15,  8);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Client::LocationRequest &) const",  "%s\n",  v10);
        goto LABEL_37;
      }
    }

    else if (*(_BYTE *)(a1 + 1657) && !*(_DWORD *)(a1 + 1564))
    {
      if (!*(_BYTE *)(a2 + 1952)) {
        *(_BYTE *)(a2 + 1952) = 1;
      }
      *(void *)(a2 + 1944) = 0x4000000000000000LL;
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      uint64_t v13 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::runtime_error buf = 67240192;
        int v20 = 2;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "@WifiTimer, set, suppressed, %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101867DE0);
        }
        int v15 = 67240192;
        int v16 = 2;
        int v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiTimer, set, suppressed, %{public}d",  &v15,  8);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Client::LocationRequest &) const",  "%s\n",  v10);
        goto LABEL_37;
      }
    }

    else
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101867DE0);
      }
      int v7 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        int v8 = *(unsigned __int8 *)(a1 + 809);
        *(_DWORD *)std::runtime_error buf = 67240448;
        int v20 = v5 < v4;
        __int16 v21 = 1026;
        int v22 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "@WifiTimer, skip, locreq, %{public}d, %{public}d",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101867DE0);
        }
        int v9 = *(unsigned __int8 *)(a1 + 809);
        int v15 = 67240448;
        int v16 = v5 < v4;
        __int16 v17 = 1026;
        int v18 = v9;
        int v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiTimer, skip, locreq, %{public}d, %{public}d",  &v15,  14);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Client::LocationRequest &) const",  "%s\n",  v10);
LABEL_37:
      }
    }
  }

void sub_100A266A8(_Unwind_Exception *a1)
{
}

void sub_100A266C8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101867DE0);
  }
  uint64_t v3 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::runtime_error buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "@WsbTimer, fired, 0", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101867DE0);
    }
    v5[0] = 0;
    double v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbTimer, fired, 0",  v5,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Client::WsbTimer &) const",  "%s\n",  v4);
  }

  if (!*(_BYTE *)(a2 + 1985)) {
    *(_BYTE *)(a2 + 1985) = 1;
  }
}

void sub_100A26874(_Unwind_Exception *a1)
{
}

void sub_100A2688C(int *a1@<X1>, _DWORD *a2@<X8>)
{
}

void sub_100A26934( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100A26950(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_100A2697C(int *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  double v4 = a1 + 2;
  switch(*a1 ^ (*a1 >> 31))
  {
    case 0:
    case 1:
    case 9:
    case 0xC:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x16:
    case 0x17:
    case 0x19:
    case 0x1D:
      sub_100A24144(a3, a2);
      break;
    case 2:
      sub_100A24A78(a2, (uint64_t)a3);
      break;
    case 3:
      sub_100A2467C(a2, v4, (uint64_t)a3);
      break;
    case 4:
      sub_100A241FC(a2, v4, (uint64_t)a3);
      break;
    case 5:
      sub_100A24EC8(a2, (uint64_t)v4, (uint64_t)a3);
      break;
    case 6:
      sub_100A250C0(a2, a3);
      break;
    case 7:
      sub_100A24448(a2, (uint64_t)a3);
      break;
    case 8:
      sub_100A2511C(a2, (uint64_t)a3);
      break;
    case 0xA:
      sub_100A25C48(a2, v4, (uint64_t)a3);
      break;
    case 0xB:
      sub_100A2531C(a2, (uint64_t)a3);
      break;
    case 0xD:
      sub_100A25FE8(a2, (uint64_t)a3);
      break;
    case 0x14:
      sub_100A25A3C(a2, (uint64_t)a3);
      break;
    case 0x15:
      sub_100A25668(a2, v4, (uint64_t)a3);
      break;
    case 0x18:
      sub_100A261C8(a2, (uint64_t)a3);
      break;
    case 0x1A:
      uint64_t v5 = sub_100A24144(a3, a2);
      break;
    case 0x1B:
      sub_100A24C9C(a2, (uint64_t)a3);
      break;
    case 0x1C:
      sub_100A266C8(a2, (uint64_t)a3);
      break;
    default:
      sub_1002DDAB0();
  }

void sub_100A26B30()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_100A26BCC(_Unwind_Exception *a1)
{
}

void sub_100A26BE4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      _WORD *v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_100A26C70(_Unwind_Exception *a1)
{
}

uint64_t sub_100A26C88(uint64_t a1)
{
  uint64_t v2 = (void *)sub_100FBF548(a1);
  *uint64_t v2 = &off_101867E10;
  uint64_t v3 = (float *)v2 + 5;
  v2[2] = 0x41C000003F800000LL;
  double v4 = (float *)(v2 + 2);
  uint64_t v5 = sub_1006E27E8();
  sub_100413284(v5, &v14);
  sub_1002A81F8(v14, "RunModelMetsScale", v4);
  uint64_t v6 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  uint64_t v9 = sub_1006E27E8();
  sub_100413284(v9, &v14);
  sub_1002A81F8(v14, "RunVMThreshold", v3);
  int v10 = v15;
  if (v15)
  {
    BOOL v11 = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  return a1;
}

void sub_100A26D94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100A26DBC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_100A26DD0(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, float a4@<S0>, unsigned int a5@<S1>)
{
  *(void *)a3 = 0LL;
  *(void *)(a3 + 8) = 0LL;
  *(void *)(a3 + 16) = 0LL;
  *(void *)(a3 + 24) = 3LL;
  *(void *)(a3 + 32) = 3LL;
  double v8 = *(double *)(a1 + 408);
  double v10 = *(double *)(a1 + 128) - *(double *)(a1 + 120);
  double v11 = 0.0;
  if (v10 > 0.0) {
    double v11 = v8 * 2.23693991 / v10;
  }
  float v9 = *(double *)(a1 + 840);
  float v12 = v9 * 2.2369;
  float v13 = *(double *)(a1 + 448);
  double v56 = COERCE_DOUBLE(__PAIR64__(a5, LODWORD(v13)));
  if (*(_BYTE *)(a1 + 352))
  {
    if (v13 > 2.2369 || v13 <= 0.14) {
      float v15 = 0.0;
    }
    else {
      float v15 = 2.2369 / v13;
    }
  }

  else
  {
    float v15 = v11;
  }

  float v16 = *(float *)(a1 + 296);
  float v17 = (float)((float)(v15 * 1.5395) + 0.34316) * a4;
  float v18 = 1.1;
  if (*(_BYTE *)(a1 + 528) != 1) {
    float v18 = 1.0;
  }
  float v19 = v17 * v18;
  float v20 = 20.0;
  if (v19 <= 20.0) {
    float v21 = v19;
  }
  else {
    float v21 = 20.0;
  }
  if (a2) {
    int v22 = 2;
  }
  else {
    int v22 = *(_DWORD *)(a1 + 832);
  }
  sub_100FBF75C(v22, v12, v15, 3.6);
  float v24 = v23 * v21;
  if (v24 <= 20.0) {
    float v20 = v24;
  }
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101867E60);
  }
  int v25 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    double v26 = *(double *)(a1 + 128);
    double v27 = v26 - *(double *)(a1 + 120);
    BOOL v28 = *(unsigned __int8 *)(a1 + 528) == 1;
    *(_DWORD *)std::runtime_error buf = 134220032;
    *(double *)int v63 = v15;
    *(_WORD *)&v63[8] = 2048;
    *(double *)&v63[10] = v8;
    *(_WORD *)&v63[18] = 2048;
    *(double *)&v63[20] = v27;
    *(_WORD *)&v63[28] = 2048;
    *(double *)&v63[30] = v17;
    *(_WORD *)&v63[38] = 2048;
    *(double *)&v63[40] = a4;
    *(_WORD *)&v63[48] = 2048;
    *(double *)&v63[50] = v26;
    *(_WORD *)&v63[58] = 2048;
    *(double *)&v63[60] = *(float *)&v56;
    __int16 v64 = 1024;
    BOOL v65 = v28;
    __int16 v66 = 2048;
    double v67 = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "Run, WorkRate, %f, distance(m), %f, duration(s), %f, mets, %f, fMetsScaling, %f, endTime, %f, currentPace, %f, isS troller, %d, metsStrollerCorrected, %f",  buf,  0x58u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101867E60);
    }
    double v44 = *(double *)(a1 + 128);
    double v45 = v44 - *(double *)(a1 + 120);
    BOOL v46 = *(unsigned __int8 *)(a1 + 528) == 1;
    *(_DWORD *)double v57 = 134220032;
    *(double *)&v57[4] = v15;
    *(_WORD *)&v57[12] = 2048;
    *(double *)&v57[14] = v8;
    *(_WORD *)&v57[22] = 2048;
    *(double *)&v57[24] = v45;
    *(_WORD *)&v57[32] = 2048;
    *(double *)&v57[34] = v17;
    *(_WORD *)&v57[42] = 2048;
    *(double *)&v57[44] = a4;
    *(_WORD *)&v57[52] = 2048;
    *(double *)&v57[54] = v44;
    *(_WORD *)&v57[62] = 2048;
    *(double *)&v57[64] = *(float *)&v56;
    __int16 v58 = 1024;
    BOOL v59 = v46;
    __int16 v60 = 2048;
    double v61 = v21;
    LODWORD(v54) = 88;
    double v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "Run, WorkRate, %f, distance(m), %f, duration(s), %f, mets, %f, fMetsScaling, %f, endTime, %f, curren tPace, %f, isStroller, %d, metsStrollerCorrected, %f",  COERCE_DOUBLE(v57),  v54,  v55,  v56);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLMetsInfo CLCalorieRunModel::calculateWorkRateMETS(const CLNatalieModelInput &, const BOOL, const float, const float)",  "%s\n",  v47);
  }

  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101867E60);
  }
  int v29 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    int v30 = *(_DWORD *)(a1 + 832);
    double v31 = *(double *)(a1 + 128) - *(double *)(a1 + 120);
    *(_DWORD *)std::runtime_error buf = 67110656;
    *(_DWORD *)int v63 = v30;
    *(_WORD *)&v63[4] = 2048;
    *(double *)&v63[6] = v12;
    float v32 = 0.0;
    *(_WORD *)&v63[14] = 2048;
    *(double *)&v63[16] = v31;
    *(_WORD *)&v63[24] = 2048;
    *(double *)&v63[26] = v15;
    if (v15 >= 0.5) {
      float v32 = (float)(v12 / v15) * 100.0;
    }
    *(_WORD *)&v63[34] = 2048;
    *(double *)&v63[36] = v17;
    *(_WORD *)&v63[44] = 2048;
    *(double *)&v63[46] = v20;
    *(_WORD *)&v63[54] = 2048;
    *(double *)&v63[56] = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "Run, WorkRate, Grade type, %d, vertical speed %f, interval %f, workrate %f, mets %f, mets + grade %f, percent grade %f",  buf,  0x44u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101867E60);
    }
    int v48 = *(_DWORD *)(a1 + 832);
    double v49 = *(double *)(a1 + 128) - *(double *)(a1 + 120);
    *(_DWORD *)double v57 = 67110656;
    *(_DWORD *)&v57[4] = v48;
    *(_WORD *)&v57[8] = 2048;
    *(double *)&v57[10] = v12;
    float v50 = 0.0;
    *(_WORD *)&v57[18] = 2048;
    *(double *)&v57[20] = v49;
    *(_WORD *)&v57[28] = 2048;
    *(double *)&v57[30] = v15;
    if (v15 >= 0.5) {
      float v50 = (float)(v12 / v15) * 100.0;
    }
    *(_WORD *)&v57[38] = 2048;
    *(double *)&v57[40] = v17;
    *(_WORD *)&v57[48] = 2048;
    *(double *)&v57[50] = v20;
    *(_WORD *)&v57[58] = 2048;
    *(double *)&v57[60] = v50;
    LODWORD(v54) = 68;
    double v51 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "Run, WorkRate, Grade type, %d, vertical speed %f, interval %f, workrate %f, mets %f, mets + grade %f , percent grade %f",  v57,  v54,  v55,  v56,  *(double *)v57,  *(double *)&v57[8],  *(double *)&v57[16]);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLMetsInfo CLCalorieRunModel::calculateWorkRateMETS(const CLNatalieModelInput &, const BOOL, const float, const float)",  "%s\n",  v51);
  }

  float v33 = 0.0;
  if (v16 > *((float *)&v56 + 1))
  {
    sub_1004493F4();
    float v33 = v34;
  }

  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101867E60);
  }
  int v35 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::runtime_error buf = 134218240;
    *(double *)int v63 = v16;
    *(_WORD *)&v63[8] = 2048;
    *(double *)&v63[10] = v33;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "Run, WorkRate, energy, %.1f,mets from intensity, %.1f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101867E60);
    }
    *(_DWORD *)double v57 = 134218240;
    *(double *)&v57[4] = v16;
    *(_WORD *)&v57[12] = 2048;
    *(double *)&v57[14] = v33;
    LODWORD(v54) = 22;
    double v52 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "Run, WorkRate, energy, %.1f,mets from intensity, %.1f",  COERCE_DOUBLE(v57),  v54);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLMetsInfo CLCalorieRunModel::calculateWorkRateMETS(const CLNatalieModelInput &, const BOOL, const float, const float)",  "%s\n",  v52);
  }

  if (*(_BYTE *)(a1 + 352))
  {
    uint64_t v36 = sub_100F5A080();
    sub_100F5D268(v36, (uint64_t)(float)(v20 - v17));
    if (v20 >= 2.1) {
      float v37 = v20;
    }
    else {
      float v37 = 2.1;
    }
  }

  else
  {
    float v38 = 2.23693991 / sub_100AF8F74(*(float *)(a1 + 1360));
    if (v20 >= v33) {
      float v39 = v20;
    }
    else {
      float v39 = v33;
    }
    else {
      float v37 = v20;
    }
  }

  *(float *)(a3 + 20) = v37;
  *(float *)(a3 + 28) = v20;
  float v40 = fmaxf(v33, 0.0);
  if (v15 > 0.0) {
    float v40 = v20;
  }
  if (v33 <= 0.0 && v15 <= 0.0) {
    int v42 = 0;
  }
  else {
    int v42 = 9;
  }
  *(float *)(a3 + 12) = v40;
  *(_DWORD *)(a3 + 36) = v42;
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101867E60);
  }
  uint64_t v43 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::runtime_error buf = 134218240;
    *(double *)int v63 = v37;
    *(_WORD *)&v63[8] = 2048;
    *(double *)&v63[10] = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "Run,WorkRate,finalUserMets,%f,finalTruthMets,%f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101867E60);
    }
    *(_DWORD *)double v57 = 134218240;
    *(double *)&v57[4] = v37;
    *(_WORD *)&v57[12] = 2048;
    *(double *)&v57[14] = v20;
    LODWORD(v54) = 22;
    uint64_t v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "Run,WorkRate,finalUserMets,%f,finalTruthMets,%f",  COERCE_DOUBLE(v57),  v54);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLMetsInfo CLCalorieRunModel::calculateWorkRateMETS(const CLNatalieModelInput &, const BOOL, const float, const float)",  "%s\n",  v53);
  }

void sub_100A27740(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

float sub_100A27750(float a1)
{
  return (float)(a1 * 1.5395) + 0.34316;
}

void sub_100A27768(int a1, float a2, float a3)
{
}

void sub_100A2777C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0LL;
  *(void *)(a3 + 8) = 0LL;
  *(void *)(a3 + 16) = 0LL;
  *(void *)(a3 + 24) = 3LL;
  *(void *)(a3 + 32) = 3LL;
  if (*(_BYTE *)(a2 + 352) && CLMotionActivity::isTypeIndoorPedestrian(*(unsigned int *)(a2 + 152)))
  {
    double v6 = *(double *)(a2 + 1040);
    double v7 = *(double *)(a2 + 1104);
    BOOL v8 = v7 <= 0.447039278 || v7 > 7.14285711;
    float v9 = v7 * 2.23693991;
    float v10 = 0.0;
    if (v8) {
      float v11 = 0.0;
    }
    else {
      float v11 = v9;
    }
    float v12 = *(double *)(a2 + 1192) * 2.23693991;
    if (v6 > 0.0)
    {
      float v13 = (float)((float)(v11 * 1.5395) + 0.34316) * *(float *)(a1 + 16);
      if (v12 > 0.0) {
        int v14 = 1;
      }
      else {
        int v14 = 2;
      }
      sub_100FBF75C(v14, v12, v11, 3.6);
      float v16 = v13 * v15;
      if (v16 <= 20.0) {
        float v10 = v16;
      }
      else {
        float v10 = 20.0;
      }
    }

    *(float *)(a3 + 20) = v10;
    *(float *)(a3 + 28) = v10;
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101867E60);
    }
    float v17 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v18 = *(void *)(a2 + 112);
      *(_DWORD *)std::runtime_error buf = 134219264;
      uint64_t v36 = v18;
      __int16 v37 = 2048;
      double v38 = v6;
      __int16 v39 = 2048;
      double v40 = v11;
      __int16 v41 = 2048;
      double v42 = v12;
      __int16 v43 = 2048;
      double v44 = v10;
      __int16 v45 = 2048;
      double v46 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "Run,fitness machine,computeTime,%.3f,startTime,%.3f,wr,%f,vertSpeed,%f,userMets,%f,truthMets,%f",  buf,  0x3Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_101867E60);
      }
      uint64_t v19 = *(void *)(a2 + 112);
      int v23 = 134219264;
      uint64_t v24 = v19;
      __int16 v25 = 2048;
      double v26 = v6;
      __int16 v27 = 2048;
      double v28 = v11;
      __int16 v29 = 2048;
      double v30 = v12;
      __int16 v31 = 2048;
      double v32 = v10;
      __int16 v33 = 2048;
      double v34 = v10;
      LODWORD(v22) = 62;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "Run,fitness machine,computeTime,%.3f,startTime,%.3f,wr,%f,vertSpeed,%f,userMets,%f,truthMets,%f",  COERCE_DOUBLE(&v23),  v22);
      float v21 = (uint8_t *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLMetsInfo CLCalorieRunModel::computeFitnessMachineMETS(const CLNatalieModelInput &)",  "%s\n",  v20);
      if (v21 != buf) {
        free(v21);
      }
    }
  }

void sub_100A27A88(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

uint64_t sub_100A27AB4()
{
  unsigned __int8 v0 = operator new(0x50uLL);
  uint64_t result = sub_1006DC9EC((uint64_t)v0, (uint64_t)"CLRestingNotifier", 1);
  void *v0 = off_101867EB0;
  v0[4] = 0LL;
  v0[5] = 0xBFF0000000000000LL;
  qword_1019A19C8 = (uint64_t)v0;
  return result;
}

void sub_100A27B08(_Unwind_Exception *a1)
{
}

uint64_t sub_100A27B1C()
{
  if (qword_101999FA8 != -1) {
    dispatch_once(&qword_101999FA8, &stru_101867E80);
  }
  return qword_1019A19C8;
}

void *sub_100A27B60(void *a1)
{
  *a1 = off_101867EB0;
  sub_100A27B94(a1);
  return sub_1006DCAA8(a1);
}

void *sub_100A27B94(void *result)
{
  if (result[4])
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_1006E5C40();
    sub_1006DD2A0(v2, 0, v1[4]);
    uint64_t result = (void *)v1[4];
    if (result) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
    v1[4] = 0LL;
  }

  return result;
}

void sub_100A27BE4(void *a1)
{
  uint64_t v1 = sub_100A27B60(a1);
  operator delete(v1);
}

uint64_t sub_100A27BF8(uint64_t result, int a2, uint64_t a3)
{
  if (!a2)
  {
    if (a3) {
      return sub_100A27C0C(result);
    }
    else {
      return (uint64_t)sub_100A27B94((void *)result);
    }
  }

  return result;
}

uint64_t sub_100A27C0C(uint64_t result)
{
  if (!*(void *)(result + 32))
  {
    uint64_t v1 = result;
    *(double *)(result + 40) = sub_101171D38();
    *(void *)(v1 + 48) = 0xBFF0000000000000LL;
    uint64_t v2 = operator new(0x20uLL);
    *uint64_t v2 = off_1018A2210;
    *uint64_t v2 = &off_10185EB50;
    v2[1] = 0LL;
    v2[2] = sub_100A27CD8;
    v2[3] = v1;
    *(void *)(v1 + 32) = v2;
    uint64_t v3 = sub_1006E5C40();
    sub_1006DCB40(v3, 0, *(void *)(v1 + 32), 0.1);
    char v4 = 0;
    sub_101171D38();
    return sub_1006DD528(v1, 0LL, (uint64_t)&v4, 1LL);
  }

  return result;
}

void sub_100A27CC4(_Unwind_Exception *a1)
{
}

__n128 sub_100A27CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (__n128 *)(a2 + 48);
  if (*(double *)(a2 + 48) > 0.0)
  {
    float v4 = *(float *)(a1 + 8) - *(float *)(a2 + 56);
    float v5 = *(float *)(a1 + 16) - *(float *)(a2 + 64);
    float v6 = (float)((float)((float)(*(float *)(a1 + 12) - *(float *)(a2 + 60))
                       * (float)(*(float *)(a1 + 12) - *(float *)(a2 + 60)))
    double v7 = *(double *)a1;
    if (v6 >= 0.0009)
    {
      int v8 = 0;
      *(double *)(a2 + 40) = v7;
    }

    else
    {
      int v8 = v7 - *(double *)(a2 + 40) > 1.0;
    }

    char v10 = v8;
    if (*(unsigned __int8 *)(a2 + 72) != v8)
    {
      *(_BYTE *)(a2 + 72) = v8;
      sub_1006DD528(a2, 0LL, (uint64_t)&v10, 1LL);
    }
  }

  __n128 result = *(__n128 *)a1;
  v3[1].n128_u64[0] = *(void *)(a1 + 16);
  *uint64_t v3 = result;
  return result;
}

void sub_100A27E54(id a1)
{
  qword_101999FB0 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLRemoteMotionAlarmSilo");
}

void sub_100A27EC4(id a1)
{
  if (v1)
  {
    sub_1004F2598();
  }

id sub_100A28084(uint64_t a1)
{
  if (qword_101934990 != -1) {
    dispatch_once(&qword_101934990, &stru_101867F38);
  }
  uint64_t v2 = (os_log_s *)qword_101934998;
  if (os_log_type_enabled((os_log_t)qword_101934998, OS_LOG_TYPE_INFO))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    float v6 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Resending motion alarm request}",  (uint8_t *)v4,  0x12u);
  }

  return [*(id *)(a1 + 32) sendMotionAlarmRequest];
}

id sub_100A28164(uint64_t a1)
{
  if (qword_101934990 != -1) {
    dispatch_once(&qword_101934990, &stru_101867F38);
  }
  uint64_t v2 = (os_log_s *)qword_101934998;
  if (os_log_type_enabled((os_log_t)qword_101934998, OS_LOG_TYPE_INFO))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    float v6 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:We haven't received an update in a while}",  (uint8_t *)v4,  0x12u);
  }

  return [*(id *)(a1 + 32) setLastKnownMotionState:0];
}

void sub_100A28BC8(id a1)
{
  qword_101934998 = (uint64_t)os_log_create("com.apple.locationd.Core", "Streaming");
}

void sub_100A28C58(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2;
  sub_100A29038("kCLConnectionMessageCheckInNoMovementUpdate", &v22, &v20);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    uint64_t v18 = v20;
    uint64_t v19 = v21;
    if (v21)
    {
      p_shared_owners = (unint64_t *)&v21->__shared_owners_;
      do
        unint64_t v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }

    CLConnection::sendMessage(v3, &v18);
    float v6 = v19;
    if (v19)
    {
      double v7 = (unint64_t *)&v19->__shared_owners_;
      do
        unint64_t v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }

    if (qword_1019347F0 != -1) {
      dispatch_once(&qword_1019347F0, &stru_101867F58);
    }
    float v9 = (os_log_s *)qword_1019347F8;
    if (os_log_type_enabled((os_log_t)qword_1019347F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[CLNoMovement] subscription: sent state update message",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347F0 != -1) {
        dispatch_once(&qword_1019347F0, &stru_101867F58);
      }
      __int16 v17 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347F8,  0LL,  "[CLNoMovement] subscription: sent state update message",  &v17,  2);
      float v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNoMovementSubscription::onStateUpdate(CMNoMovementStateUpdate *)",  "%s\n",  v10);
LABEL_32:
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  else
  {
    if (qword_1019347F0 != -1) {
      dispatch_once(&qword_1019347F0, &stru_101867F58);
    }
    float v12 = (os_log_s *)qword_1019347F8;
    if (os_log_type_enabled((os_log_t)qword_1019347F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[CLNoMovement] subscription: connection invalid; cannot send state update message",
        buf,
        2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347F0 != -1) {
        dispatch_once(&qword_1019347F0, &stru_101867F58);
      }
      __int16 v17 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347F8,  0LL,  "[CLNoMovement] subscription: connection invalid; cannot send state update message",
        &v17,
        2);
      float v11 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLNoMovementSubscription::onStateUpdate(CMNoMovementStateUpdate *)",  "%s\n",  v16);
      goto LABEL_32;
    }
  }

  float v13 = v21;
  if (v21)
  {
    int v14 = (unint64_t *)&v21->__shared_owners_;
    do
      unint64_t v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }

void sub_100A28FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

void sub_100A2900C(id a1)
{
  qword_1019347F8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CheckIn");
}

void *sub_100A29038@<X0>(char *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  float v6 = operator new(0x70uLL);
  __n128 result = sub_100215340(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_100A29084(_Unwind_Exception *a1)
{
}

unint64_t sub_100A29098()
{
  unint64_t result = sub_10029D234();
  if ((_DWORD)result)
  {
    uint64_t v1 = operator new(0x68uLL);
    unint64_t result = sub_100A29128((uint64_t)v1);
    qword_1019A19D0 = (uint64_t)v1;
  }

  return result;
}

void sub_100A290D0(_Unwind_Exception *a1)
{
}

uint64_t sub_100A290E4()
{
  if (qword_101999FD0 != -1) {
    dispatch_once(&qword_101999FD0, &stru_101867F78);
  }
  return qword_1019A19D0;
}

uint64_t sub_100A29128(uint64_t a1)
{
  uint64_t v2 = (unsigned __int8 *)sub_10029CEFC((void *)a1);
  *(void *)uint64_t v2 = off_101867FA8;
  LOBYTE(v6) = 0;
  sub_1012049AC(v2 + 32, "AlwaysOnSuppression", (unsigned __int8 *)&v6, 0);
  LOBYTE(v6) = 1;
  sub_1012049AC((unsigned __int8 *)(a1 + 35), "EnableViewObstructedMLSuppression", (unsigned __int8 *)&v6, 0);
  int v6 = 1084227584;
  sub_101206C88((unsigned __int8 *)(a1 + 40), "ViewObstructedSuppressionDelaySecs", &v6, 0);
  LOBYTE(v6) = 0;
  sub_1012049AC((unsigned __int8 *)(a1 + 52), "DisableViewObstructedSuppression", (unsigned __int8 *)&v6, 0);
  int v6 = 1092616192;
  sub_101206C88((unsigned __int8 *)(a1 + 56), "KeepViewObstructedRunningDelaySecs", &v6, 0);
  LOBYTE(v6) = 1;
  sub_1012049AC((unsigned __int8 *)(a1 + 68), "EnableProxBaselineEstimation", (unsigned __int8 *)&v6, 0);
  LOBYTE(v6) = 0;
  sub_1012049AC((unsigned __int8 *)(a1 + 71), "ForceAlwaysOnViewObstructed", (unsigned __int8 *)&v6, 0);
  *(_BYTE *)(a1 + 74) = 0;
  *(_DWORD *)(a1 + 76) = 0;
  *(_BYTE *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 84) = 0;
  *(_BYTE *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 92) = 0;
  *(_BYTE *)(a1 + 96) = 0;
  uint64_t v3 = sub_1006E27E8();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_100A292B8;
  void v5[3] = &unk_10181D3D0;
  uint64_t v5[4] = a1;
  sub_1006E28B8(v3, (uint64_t)v5);
  return a1;
}

void sub_100A29288(_Unwind_Exception *a1)
{
}

uint64_t sub_100A292B8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t ***)(a1 + 32);
  sub_100719D78(v1[1], (uint64_t)sub_100A292F4, (uint64_t)v1);
  return ((uint64_t (*)(uint64_t **))(*v1)[2])(v1);
}

_BYTE *sub_100A292F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  size_t v20 = 0LL;
  float v21 = 0LL;
  IOHIDEventGetVendorDefinedData(a4, &v21, &v20);
  unint64_t result = sub_10029CE94((_BYTE *)&v14 + 4, v21, v20);
  if (BYTE4(v14) == 2)
  {
    if (qword_1019344A0 != -1) {
      dispatch_once(&qword_1019344A0, &stru_101868000);
    }
    int v6 = (os_log_s *)qword_1019344A8;
    if (os_log_type_enabled((os_log_t)qword_1019344A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::runtime_error buf = 67241984;
      int v40 = BYTE5(v14);
      __int16 v41 = 1026;
      int v42 = BYTE6(v14);
      __int16 v43 = 1026;
      int v44 = HIBYTE(v14);
      __int16 v45 = 1026;
      int v46 = v15;
      __int16 v47 = 1026;
      int v48 = v16;
      __int16 v49 = 2050;
      double v50 = v17;
      __int16 v51 = 2050;
      double v52 = v18;
      __int16 v53 = 1026;
      int v54 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[CLSPUEclipseControl] Suppression Report received shouldSuppress,%{public}d,APAwake,%{public}d,currentState,%{pu blic}hhu,orientation,%{public}hhu,motionType,%{public}hhu,lux,%{public}f,pocketProbability,%{public}f,facedownSt atic,%{public}hhu",  buf,  0x3Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344A0 != -1) {
        dispatch_once(&qword_1019344A0, &stru_101868000);
      }
      v24[0] = 67241984;
      v24[1] = BYTE5(v14);
      __int16 v25 = 1026;
      int v26 = BYTE6(v14);
      __int16 v27 = 1026;
      int v28 = HIBYTE(v14);
      __int16 v29 = 1026;
      int v30 = v15;
      __int16 v31 = 1026;
      int v32 = v16;
      __int16 v33 = 2050;
      double v34 = v17;
      __int16 v35 = 2050;
      double v36 = v18;
      __int16 v37 = 1026;
      int v38 = v19;
      LODWORD(v14) = 58;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344A8,  0LL,  "[CLSPUEclipseControl] Suppression Report received shouldSuppress,%{public}d,APAwake,%{public}d,currentState,%{pu blic}hhu,orientation,%{public}hhu,motionType,%{public}hhu,lux,%{public}f,pocketProbability,%{public}f,facedownSt atic,%{public}hhu",  v24,  v14);
      float v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLSPUEclipseControl::eclipseControlCallback(void *, void *, void *, IOHIDEventRef)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    int v7 = BYTE5(v14);
    unint64_t TimeStamp = IOHIDEventGetTimeStamp(a4);
    double v9 = sub_101171C7C(TimeStamp);
    v22[0] = @"eventTime";
    v23[0] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v9);
    v22[1] = @"eventTimeNS";
    -[NSDate timeIntervalSince1970](+[NSDate date](&OBJC_CLASS___NSDate, "date"), "timeIntervalSince1970");
    char v10 = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:");
    void v22[2] = @"VOEvent";
    float v11 = @"suppress";
    if (!v7) {
      float v11 = @"unsuppress";
    }
    v23[1] = v10;
    _DWORD v23[2] = v11;
    return (_BYTE *)sub_100E575BC( (uint64_t)+[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v23,  v22,  3LL),  (uint64_t)"ViewObstructedStateChange");
  }

  return result;
}

uint64_t sub_100A2963C(uint64_t a1, char a2, int a3, char a4)
{
  uint64_t v15 = 0LL;
  unsigned __int8 v16 = &v15;
  uint64_t v17 = 0x2020000000LL;
  char v18 = 1;
  uint64_t v8 = sub_1006E27E8();
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  v11[2] = sub_100A29710;
  v11[3] = &unk_101867FC8;
  char v13 = a2;
  char v14 = a4;
  int v12 = a3;
  _DWORD v11[4] = &v15;
  v11[5] = a1;
  sub_1006E28B8(v8, (uint64_t)v11);
  uint64_t v9 = *((unsigned __int8 *)v16 + 24);
  _Block_object_dispose(&v15, 8);
  return v9;
}

void sub_100A296F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100A29710(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  int v3 = *(_DWORD *)(v2 + 76);
  if (*(_BYTE *)(a1 + 52))
  {
    if (v3 != -1)
    {
      int v4 = v3 + 1;
LABEL_6:
      *(_DWORD *)(v2 + 76) = v4;
      goto LABEL_20;
    }

    if (qword_1019344A0 != -1) {
      dispatch_once(&qword_1019344A0, &stru_101868000);
    }
    unint64_t v5 = (os_log_s *)qword_1019344A8;
    if (os_log_type_enabled((os_log_t)qword_1019344A8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[CLSPUEclipseControl] Invalid client count. Not increasing.",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344A0 != -1) {
        dispatch_once(&qword_1019344A0, &stru_101868000);
      }
      LOWORD(v53) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344A8,  16LL,  "[CLSPUEclipseControl] Invalid client count. Not increasing.",  &v53,  2,  v53);
LABEL_98:
      double v50 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLSPUEclipseControl::setSuppressionEnabled(BOOL, int, BOOL)_block_invoke",  "%s\n",  v6);
      if (v50 != buf) {
        free(v50);
      }
    }
  }

  else
  {
    if (v3)
    {
      int v4 = v3 - 1;
      goto LABEL_6;
    }

    if (qword_1019344A0 != -1) {
      dispatch_once(&qword_1019344A0, &stru_101868000);
    }
    int v7 = (os_log_s *)qword_1019344A8;
    if (os_log_type_enabled((os_log_t)qword_1019344A8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "[CLSPUEclipseControl] Invalid client count. Not decreasing.",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344A0 != -1) {
        dispatch_once(&qword_1019344A0, &stru_101868000);
      }
      LOWORD(v53) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344A8,  16LL,  "[CLSPUEclipseControl] Invalid client count. Not decreasing.",  &v53,  2,  v53);
      goto LABEL_98;
    }
  }

uint64_t sub_100A2A080(uint64_t a1, char a2)
{
  uint64_t v9 = 0LL;
  char v10 = &v9;
  uint64_t v11 = 0x2020000000LL;
  char v12 = 0;
  uint64_t v4 = sub_1006E27E8();
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_100A2A138;
  _DWORD v7[3] = &unk_10184B178;
  char v8 = a2;
  _DWORD v7[4] = &v9;
  v7[5] = a1;
  sub_1006E28B8(v4, (uint64_t)v7);
  uint64_t v5 = *((unsigned __int8 *)v10 + 24);
  _Block_object_dispose(&v9, 8);
  return v5;
}

void sub_100A2A120( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_100A2A138(uint64_t a1)
{
  uint64_t v2 = *(_BYTE **)(a1 + 40);
  v2[88] = *(_BYTE *)(a1 + 48);
  uint64_t result = (*(uint64_t (**)(_BYTE *))(*(void *)v2 + 16LL))(v2);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  return result;
}

BOOL sub_100A2A178(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 33);
  if (*(_BYTE *)(a1 + 33))
  {
    uint64_t v3 = 1LL;
    char v4 = 1;
  }

  else
  {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 74);
    char v4 = *(_BYTE *)(a1 + 74);
  }

  sub_10071A75C(*(void *)(a1 + 8), v3);
  int v5 = *(unsigned __int8 *)(a1 + 36);
  int v6 = *(unsigned __int8 *)(a1 + 69);
  float v7 = *(float *)(a1 + 44);
  if (v7 <= 1.0) {
    unint64_t v8 = 1000000LL;
  }
  else {
    unint64_t v8 = (unint64_t)(float)(v7 * 1000000.0);
  }
  float v9 = *(float *)(a1 + 60);
  if (v9 <= 0.0) {
    unint64_t v10 = 10000000LL;
  }
  else {
    unint64_t v10 = (unint64_t)(float)(v9 * 1000000.0);
  }
  v28[0] = 2;
  v28[1] = v4;
  v28[2] = v5;
  void v28[3] = *(_BYTE *)(a1 + 88);
  unint64_t v29 = v8;
  char v30 = *(_BYTE *)(a1 + 53);
  unint64_t v31 = v10;
  char v32 = v6;
  char v33 = *(_BYTE *)(a1 + 80);
  if (qword_1019344A0 != -1) {
    dispatch_once(&qword_1019344A0, &stru_101868000);
  }
  uint64_t v11 = (os_log_s *)qword_1019344A8;
  if (os_log_type_enabled((os_log_t)qword_1019344A8, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = *(unsigned __int8 *)(a1 + 74);
    int v13 = *(unsigned __int8 *)(a1 + 88);
    int v14 = *(unsigned __int8 *)(a1 + 53);
    int v15 = *(unsigned __int8 *)(a1 + 80);
    *(_DWORD *)std::runtime_error buf = 67242240;
    int v52 = v12;
    __int16 v53 = 1026;
    int v54 = v2;
    __int16 v55 = 1026;
    int v56 = v5;
    __int16 v57 = 1026;
    int v58 = v13;
    __int16 v59 = 2050;
    unint64_t v60 = v8;
    __int16 v61 = 1026;
    int v62 = v14;
    __int16 v63 = 2050;
    unint64_t v64 = v10;
    __int16 v65 = 1026;
    int v66 = v6;
    __int16 v67 = 1026;
    int v68 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[CLSPUEclipseControl] Configuring,clientEnabled,%{public}d,alwaysOn,%{public}d,mlEnabled,%{public}d,viewObstructed StateDebugEnabled,%{public}d,suppressionDelayUs,%{public}llu,disableViewObstructedSuppression,%{public}d,keepViewO bstructedRunningDelaySecs,%{public}llu,enableProxBaselineEstimation,%{public}d,enableAlwaysOnViewObstructed,%{public}d",  buf,  0x40u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344A0 != -1) {
      dispatch_once(&qword_1019344A0, &stru_101868000);
    }
    int v19 = *(unsigned __int8 *)(a1 + 74);
    int v20 = *(unsigned __int8 *)(a1 + 88);
    int v21 = *(unsigned __int8 *)(a1 + 53);
    int v22 = *(unsigned __int8 *)(a1 + 80);
    v34[0] = 67242240;
    v34[1] = v19;
    __int16 v35 = 1026;
    int v36 = v2;
    __int16 v37 = 1026;
    int v38 = v5;
    __int16 v39 = 1026;
    int v40 = v20;
    __int16 v41 = 2050;
    unint64_t v42 = v8;
    __int16 v43 = 1026;
    int v44 = v21;
    __int16 v45 = 2050;
    unint64_t v46 = v10;
    __int16 v47 = 1026;
    int v48 = v6;
    __int16 v49 = 1026;
    int v50 = v22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344A8,  0LL,  "[CLSPUEclipseControl] Configuring,clientEnabled,%{public}d,alwaysOn,%{public}d,mlEnabled,%{public}d,viewObstructed StateDebugEnabled,%{public}d,suppressionDelayUs,%{public}llu,disableViewObstructedSuppression,%{public}d,keepViewO bstructedRunningDelaySecs,%{public}llu,enableProxBaselineEstimation,%{public}d,enableAlwaysOnViewObstructed,%{public}d",  v34,  64);
    uint64_t v24 = (uint8_t *)v23;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLSPUEclipseControl::configure()", "%s\n", v23);
    if (v24 != buf) {
      free(v24);
    }
  }

  BOOL v16 = sub_10029D24C(a1, (uint64_t)v28, (char *)0x17);
  if (v16)
  {
    atomic_store(*(_BYTE *)(a1 + 80), (unsigned __int8 *)(a1 + 96));
  }

  else
  {
    if (qword_1019344A0 != -1) {
      dispatch_once(&qword_1019344A0, &stru_101868000);
    }
    int v17 = (os_log_s *)qword_1019344A8;
    if (os_log_type_enabled((os_log_t)qword_1019344A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::runtime_error buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[CLSPUEclipseControl] Configure failed",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344A0 != -1) {
        dispatch_once(&qword_1019344A0, &stru_101868000);
      }
      LOWORD(v34[0]) = 0;
      LODWORD(v27) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344A8,  0LL,  "[CLSPUEclipseControl] Configure failed",  v34,  v27);
      int v26 = (uint8_t *)v25;
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLSPUEclipseControl::configure()", "%s\n", v25);
      if (v26 != buf) {
        free(v26);
      }
    }
  }

  return v16;
}

void sub_100A2A5E8(void *a1)
{
  uint64_t v1 = sub_10029D168(a1);
  operator delete(v1);
}

void sub_100A2A5FC(id a1)
{
  qword_1019344A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Eclipse");
}

void sub_100A2A6CC(id a1)
{
  qword_10199A008 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLUnifiedCellLocationProviderSilo");
}

uint64_t sub_100A2A780(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100A2AAE4;
  block[3] = &unk_10181A288;
  void block[4] = a1;
  if (qword_10199A028 != -1) {
    dispatch_once(&qword_10199A028, block);
  }
  return qword_1019A19D8;
}

void sub_100A2AABC(id a1)
{
  if ((sub_1004F64FC() & 1) != 0) {
    byte_10199A018 = 1;
  }
}

uint64_t sub_100A2AAE4(uint64_t a1)
{
  int v2 = operator new(0xA58uLL);
  uint64_t result = sub_100A2AB30((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A19D8 = (uint64_t)v2;
  return result;
}

void sub_100A2AB1C(_Unwind_Exception *a1)
{
}

uint64_t sub_100A2AB30(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100479C24(a1, "UnifiedCell", a2);
  *(void *)uint64_t v3 = off_101868070;
  *(void *)(v3 + 120) = off_101868220;
  *(_OWORD *)(v3 + 12_Block_object_dispose(va, 8) = 0u;
  uint64_t v4 = v3 + 128;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(void *)(v3 + sub_1002E0644(v1 + 176) = 0LL;
  sub_100312410(v3 + 184);
  *(void *)(a1 + 2552) = 0LL;
  *(_OWORD *)(a1 + 2472) = 0u;
  *(_OWORD *)(a1 + 248_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 2504) = 0u;
  *(_OWORD *)(a1 + 2520) = 0u;
  *(_OWORD *)(a1 + 2532) = 0u;
  *(void *)(a1 + 2560) = "na";
  *(_DWORD *)(a1 + 256_Block_object_dispose(va, 8) = 0;
  *(_BYTE *)(a1 + 2572) = 0;
  sub_1003D33C8(a1 + 2576);
  sub_1003CC884((uint64_t)sub_100A2B2A0, a1, *(void **)(a1 + 32), buf);
  int v5 = *(void **)buf;
  *(void *)std::runtime_error buf = 0LL;
  uint64_t v6 = *(void *)v4;
  *(void *)uint64_t v4 = v5;
  if (v6)
  {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    float v7 = *(void **)buf;
    *(void *)std::runtime_error buf = 0LL;
    if (v7) {
      (*(void (**)(void *))(*(void *)v7 + 8LL))(v7);
    }
  }

  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:6 registrationInfo:0];
  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:3 registrationInfo:0];
  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:16 registrationInfo:0];
  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:8 registrationInfo:0];
  sub_100328B0C((uint64_t)sub_100A2B478, a1, *(void **)(a1 + 32), (id **)buf);
  unint64_t v8 = *(void **)buf;
  *(void *)std::runtime_error buf = 0LL;
  uint64_t v9 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    unint64_t v10 = *(void **)buf;
    *(void *)std::runtime_error buf = 0LL;
    if (v10) {
      (*(void (**)(void *))(*(void *)v10 + 8LL))(v10);
    }
  }

  sub_1004BFDC0((uint64_t)sub_100A2B650, a1, *(void **)(a1 + 32), buf);
  uint64_t v11 = *(void **)buf;
  *(void *)std::runtime_error buf = 0LL;
  uint64_t v12 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = v11;
  if (v12)
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    int v13 = *(void **)buf;
    *(void *)std::runtime_error buf = 0LL;
    if (v13) {
      (*(void (**)(void *))(*(void *)v13 + 8LL))(v13);
    }
  }

  sub_100583844((uint64_t)sub_100A2B828, a1, *(void **)(a1 + 32), buf);
  int v14 = *(void **)buf;
  *(void *)std::runtime_error buf = 0LL;
  uint64_t v15 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = v14;
  if (v15)
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
    BOOL v16 = *(void **)buf;
    *(void *)std::runtime_error buf = 0LL;
    if (v16) {
      (*(void (**)(void *))(*(void *)v16 + 8LL))(v16);
    }
  }

  [*(id *)(*(void *)(a1 + 152) + 16) register:*(void *)(*(void *)(a1 + 152) + 8) forNotification:4 registrationInfo:0];
  memset(&v33, 0, sizeof(v33));
  std::string::operator=(&v33, (const std::string *)&qword_101999FF0);
  [*(id *)(*(void *)(a1 + 152) + 16) register:*(void *)(*(void *)(a1 + 152) + 8) forNotification:0 registrationInfo:sub_10120E548((uint64_t)&v33)];
  sub_100C6E054((uint64_t)sub_100A2BA00, a1, *(void **)(a1 + 32), buf);
  int v17 = *(void **)buf;
  *(void *)std::runtime_error buf = 0LL;
  uint64_t v18 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = v17;
  if (v18)
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    int v19 = *(void **)buf;
    *(void *)std::runtime_error buf = 0LL;
    if (v19) {
      (*(void (**)(void *))(*(void *)v19 + 8LL))(v19);
    }
  }

  [*(id *)(*(void *)(a1 + 160) + 16) register:*(void *)(*(void *)(a1 + 160) + 8) forNotification:5 registrationInfo:0];
  sub_100DCEFE8((uint64_t)sub_100A2BBD8, a1, *(void **)(a1 + 32), buf);
  int v20 = *(void **)buf;
  *(void *)std::runtime_error buf = 0LL;
  uint64_t v21 = *(void *)(a1 + 168);
  *(void *)(a1 + 16_Block_object_dispose(va, 8) = v20;
  if (v21)
  {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
    int v22 = *(void **)buf;
    *(void *)std::runtime_error buf = 0LL;
    if (v22) {
      (*(void (**)(void *))(*(void *)v22 + 8LL))(v22);
    }
  }

  [*(id *)(*(void *)(a1 + 168) + 16) register:*(void *)(*(void *)(a1 + 168) + 8) forNotification:0 registrationInfo:0];
  sub_10096EA7C((uint64_t)sub_100A2BDA8, a1, *(void **)(a1 + 32), buf);
  BOOL v23 = *(void **)buf;
  *(void *)std::runtime_error buf = 0LL;
  uint64_t v24 = *(void *)(a1 + 176);
  *(void *)(a1 + sub_1002E0644(v1 + 176) = v23;
  if (v24)
  {
    (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
    __int16 v25 = *(void **)buf;
    *(void *)std::runtime_error buf = 0LL;
    if (v25) {
      (*(void (**)(void *))(*(void *)v25 + 8LL))(v25);
    }
  }

  [*(id *)(*(void *)(a1 + 176) + 16) register:*(void *)(*(void *)(a1 + 176) + 8) forNotification:0 registrationInfo:0];
  sub_100479D1C(a1, "cell");
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  int v26 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    int v27 = *(unsigned __int8 *)(a1 + 111);
    *(_DWORD *)std::runtime_error buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v27;
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "@ClxCell, enabled, %{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v30 = *(unsigned __int8 *)(a1 + 111);
    v34[0] = 67240192;
    v34[1] = v30;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@ClxCell, enabled, %{public}d",  v34,  8);
    char v32 = (uint8_t *)v31;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLUnifiedCellLocationProvider::CLUnifiedCellLocationProvider(id<CLIntersiloUniverse>)",  "%s\n",  v31);
    if (v32 != buf) {
      free(v32);
    }
  }

  sub_1003D33C8(a1 + 2576);
  *(_BYTE *)(a1 + 2632) = 0;
  *(_OWORD *)(a1 + 2616) = 0u;
  int v28 = operator new(0x38uLL);
  sub_1010DDBC0(buf, "CellLocDelayedCellLocationPropagationTimer");
  sub_1006B5FBC(v28, buf, sub_100A2BF78, a1, *(void *)(a1 + 40), 0LL, 1.79769313e308, 1.79769313e308, 0.9);
  *(void *)(a1 + 2552) = v28;
  if (v36 < 0) {
    operator delete(*(void **)buf);
  }
  return a1;
}

void sub_100A2B110( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20, uint64_t a21, int a22, __int16 a23, char a24, char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  nullsub_10(v27);
  for (uint64_t i = 0LL; i != -6; i -= 3LL)
  {
    a20 = &v25[i + 315];
    sub_1005C8A94((void ***)&a20);
  }

  sub_1005C8A94((void ***)&a20);
  sub_100A2C148(v26);
  uint64_t v31 = v25[22];
  v25[22] = 0LL;
  if (v31) {
    (*(void (**)(uint64_t))(*(void *)v31 + 8LL))(v31);
  }
  uint64_t v32 = v25[21];
  v25[21] = 0LL;
  if (v32) {
    (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
  }
  uint64_t v33 = v25[20];
  v25[20] = 0LL;
  if (v33) {
    (*(void (**)(uint64_t))(*(void *)v33 + 8LL))(v33);
  }
  uint64_t v34 = v25[19];
  v25[19] = 0LL;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
  }
  uint64_t v35 = v25[18];
  v25[18] = 0LL;
  if (v35) {
    (*(void (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
  }
  uint64_t v36 = v25[17];
  v25[17] = 0LL;
  if (v36) {
    (*(void (**)(uint64_t))(*(void *)v36 + 8LL))(v36);
  }
  uint64_t v37 = *v28;
  *int v28 = 0LL;
  if (v37) {
    (*(void (**)(uint64_t))(*(void *)v37 + 8LL))(v37);
  }
  sub_10047A1C0(v25);
  _Unwind_Resume(a1);
}

void sub_100A2B2A0(uint64_t a1, int *a2, unsigned __int8 *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101868348);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLUnifiedCellLocationProvider::onStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101868348);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLUnifiedCellLocationProvider::onStatusNotification, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100A2FC28(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A2B458( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A2B478(uint64_t a1, int *a2, uint64_t *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101868348);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLUnifiedCellLocationProvider::onTelephonyNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101868348);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLUnifiedCellLocationProvider::onTelephonyNotification, event:%{public, location:es cape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100A304CC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A2B630( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A2B650(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101868348);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLUnifiedCellLocationProvider::onNetworkLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101868348);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLUnifiedCellLocationProvider::onNetworkLocationNotification, event:%{public, locat ion:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100A30FA0((void *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A2B808( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A2B828(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101868348);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLUnifiedCellLocationProvider::onClientNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101868348);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLUnifiedCellLocationProvider::onClientNotification, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100A2F8F0(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A2B9E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A2BA00(uint64_t a1, int *a2, _BYTE *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101868348);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLUnifiedCellLocationProvider::onCompanionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101868348);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLUnifiedCellLocationProvider::onCompanionNotification, event:%{public, location:es cape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100A302EC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A2BBB8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A2BBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101868348);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLUnifiedCellLocationProvider::onTileDownloadNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101868348);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLUnifiedCellLocationProvider::onTileDownloadNotification, event:%{public, location :escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100A3029C(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A2BD88( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A2BDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101868348);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLUnifiedCellLocationProvider::onTileDownloadNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101868348);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLUnifiedCellLocationProvider::onTileDownloadNotification, event:%{public, location :escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100A3029C(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A2BF58( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A2BF78(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101868348);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLUnifiedCellLocationProvider::onDelayedCellPropagationTimer",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101868348);
    }
    int v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::runtime_error buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      int v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLUnifiedCellLocationProvider::onDelayedCellPropagationTimer, event:%{public, locat ion:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  sub_100A30C78(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A2C128( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100A2C148(uint64_t a1)
{
  int v2 = *(void **)(a1 + 1640);
  if (v2)
  {
    *(void *)(a1 + 164_Block_object_dispose(va, 8) = v2;
    operator delete(v2);
  }

  uint64_t v3 = *(void **)(a1 + 944);
  if (v3)
  {
    *(void *)(a1 + 952) = v3;
    operator delete(v3);
  }

  uint64_t v4 = *(void **)(a1 + 248);
  if (v4)
  {
    *(void *)(a1 + 256) = v4;
    operator delete(v4);
  }

  return a1;
}

uint64_t sub_100A2C1C8(uint64_t a1)
{
  *(void *)a1 = off_101868070;
  *(void *)(a1 + 120) = off_101868220;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  int v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::runtime_error buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "CellLoc, delete CLUnifiedCellLocationProvider",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    v20[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "CellLoc, delete CLUnifiedCellLocationProvider",  v20,  2);
    uint64_t v19 = (uint8_t *)v18;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLUnifiedCellLocationProvider::~CLUnifiedCellLocationProvider()",  "%s\n",  v18);
    if (v19 != buf) {
      free(v19);
    }
  }

  uint64_t v3 = *(void *)(a1 + 2552);
  if (v3)
  {
    sub_1006B6294(v3);
    uint64_t v4 = *(void *)(a1 + 2552);
    if (v4)
    {
      int v5 = (void *)sub_1006B6010(v4);
      operator delete(v5);
    }

    *(void *)(a1 + 2552) = 0LL;
  }

  nullsub_10(a1 + 2576);
  for (uint64_t i = 2520LL; i != 2472; i -= 24LL)
  {
    *(void *)std::runtime_error buf = a1 + i;
    sub_1005C8A94((void ***)buf);
  }

  *(void *)std::runtime_error buf = a1 + 2472;
  sub_1005C8A94((void ***)buf);
  char v7 = *(void **)(a1 + 1824);
  if (v7)
  {
    *(void *)(a1 + 1832) = v7;
    operator delete(v7);
  }

  unint64_t v8 = *(void **)(a1 + 1128);
  if (v8)
  {
    *(void *)(a1 + 1136) = v8;
    operator delete(v8);
  }

  int v9 = *(void **)(a1 + 432);
  if (v9)
  {
    *(void *)(a1 + 440) = v9;
    operator delete(v9);
  }

  uint64_t v10 = *(void *)(a1 + 176);
  *(void *)(a1 + sub_1002E0644(v1 + 176) = 0LL;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  uint64_t v11 = *(void *)(a1 + 168);
  *(void *)(a1 + 16_Block_object_dispose(va, 8) = 0LL;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
  }
  uint64_t v12 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = 0LL;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
  }
  uint64_t v13 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  uint64_t v14 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0LL;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
  }
  uint64_t v15 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = 0LL;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
  }
  uint64_t v16 = *(void *)(a1 + 128);
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = 0LL;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
  }
  sub_10047A1C0(a1);
  return a1;
}

void sub_100A2C4D8(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_100A2C4E8(uint64_t a1)
{
  return sub_100A2C1C8(a1 - 120);
}

void sub_100A2C4F0(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100A2C1C8(a1);
  operator delete(v1);
}

void sub_100A2C504(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100A2C1C8(a1 - 120);
  operator delete(v1);
}

uint64_t sub_100A2C51C(uint64_t a1, unsigned int *a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v5 = *a2;
    *(_DWORD *)std::runtime_error buf = 67240192;
    LODWORD(v2_Block_object_dispose(va, 8) = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CellLoc, registerForNotificationInternal, notification, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    unsigned int v13 = *a2;
    int v25 = 67240192;
    LODWORD(v26) = v13;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "CellLoc, registerForNotificationInternal, notification, %{public}d",  &v25,  8);
    uint64_t v15 = (uint8_t *)v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLUnifiedCellLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v14);
    if (v15 != buf) {
      free(v15);
    }
  }

  sub_10047A690();
  if (*a2 <= 4 && ((1 << *a2) & 0x19) != 0)
  {
    objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLNetworkLocationProvider"),  "resetRetryCounters:",  @"CLUnifiedCellLocationProvider");
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    uint64_t v6 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      char v7 = sub_10100D9D8(*a2);
      *(_DWORD *)std::runtime_error buf = 136446210;
      int v28 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "CellFlow, locreq, %{public}s", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      uint64_t v16 = qword_101934858;
      int v17 = sub_10100D9D8(*a2);
      int v25 = 136446210;
      uint64_t v26 = v17;
      LODWORD(v22) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  0LL,  "CellFlow, locreq, %{public}s",  &v25,  v22);
      uint64_t v19 = (uint8_t *)v18;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLUnifiedCellLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v18);
      if (v19 != buf) {
        free(v19);
      }
    }

    uint64_t v8 = *(void *)(a1 + 136);
    sub_100320874(buf, (uint64_t)@"kCellInfoNotification");
    [*(id *)(v8 + 16) register:*(void *)(v8 + 8) forNotification:sub_100320924((unsigned int *)buf) registrationInfo:0];
    uint64_t v9 = *(void *)(a1 + 136);
    sub_100320874(buf, (uint64_t)@"kCellMonitorRefreshResultNotification");
    [*(id *)(v9 + 16) register:*(void *)(v9 + 8) forNotification:sub_100320924((unsigned int *)buf) registrationInfo:0];
    [*(id *)(*(void *)(a1 + 144) + 16) register:*(void *)(*(void *)(a1 + 144) + 8) forNotification:3 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 144) + 16) register:*(void *)(*(void *)(a1 + 144) + 8) forNotification:0 registrationInfo:0];
    if (!*a2)
    {
      sub_100A2CAE4(a1, "register");
      *(_DWORD *)std::runtime_error buf = 0;
      int v10 = sub_100247620(a1, (int *)buf, 1LL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      uint64_t v11 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::runtime_error buf = 67240192;
        LODWORD(v2_Block_object_dispose(va, 8) = v10;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "UclpMetric, registrant, %{public}d", buf, 8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101868368);
        }
        int v25 = 67240192;
        LODWORD(v26) = v10;
        LODWORD(v22) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "UclpMetric, registrant, %{public}d",  &v25,  v22);
        uint64_t v21 = (uint8_t *)v20;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLUnifiedCellLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v20);
        if (v21 != buf) {
          free(v21);
        }
      }

      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472LL;
      _DWORD v23[2] = sub_100A2CCD8;
      void v23[3] = &unk_1018333B8;
      int v24 = v10;
      AnalyticsSendEventLazy(@"com.apple.clx.cellloc.registrant", v23);
      ++*(_DWORD *)(a1 + 2616);
    }
  }

  return 1LL;
}

id sub_100A2CAE4(uint64_t a1, const char *a2)
{
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = "null";
  }
  sub_1003118DC(a1 + 184);
  ++*(_DWORD *)(a1 + 2620);
  sub_100A2D690((void *)a1, "refresh");
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::runtime_error buf = 136446210;
    uint64_t v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "@CellFlow, refresh, %{public}s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v8 = 136446210;
    uint64_t v9 = v3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@CellFlow, refresh, %{public}s",  &v8,  12);
    char v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::refreshCellState(const char *)",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  return objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLTelephonyService"),  "syncgetRefreshCellMonitor");
}

NSDictionary *sub_100A2CCD8(uint64_t a1)
{
  v4[0] = @"na";
  v3[0] = @"name";
  v3[1] = @"clients";
  uint64_t v1 = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  v3[2] = @"daily";
  v4[1] = v1;
  _DWORD v4[2] = &off_1018D3E30;
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

uint64_t sub_100A2CD80(uint64_t a1, int *a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a2;
    *(_DWORD *)std::runtime_error buf = 67240192;
    int v26 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CellLoc, unregisterForNotificationInternal, notification, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v13 = *a2;
    int v23 = 67240192;
    int v24 = v13;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "CellLoc, unregisterForNotificationInternal, notification, %{public}d",  &v23,  8);
    uint64_t v15 = (uint8_t *)v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLUnifiedCellLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v14);
    if (v15 != buf) {
      free(v15);
    }
  }

  sub_10047A698(a1);
  if (*a2 <= 4 && ((1 << *a2) & 0x19) != 0)
  {
    if (!sub_100A2D314(a1))
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      uint64_t v6 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::runtime_error buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CellLoc, no more location-related clients - stopping telephony notifications",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101868368);
        }
        LOWORD(v23) = 0;
        LODWORD(v20) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "CellLoc, no more location-related clients - stopping telephony notifications",  &v23,  v20);
        int v17 = (uint8_t *)v16;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLUnifiedCellLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v16);
        if (v17 != buf) {
          free(v17);
        }
      }

      uint64_t v7 = *(void *)(a1 + 136);
      sub_100320874(buf, (uint64_t)@"kCellInfoNotification");
      [*(id *)(v7 + 16) unregister:*(void *)(v7 + 8) forNotification:sub_100320924((unsigned int *)buf)];
      uint64_t v8 = *(void *)(a1 + 136);
      sub_100320874(buf, (uint64_t)@"kCellMonitorRefreshResultNotification");
      [*(id *)(v8 + 16) register:*(void *)(v8 + 8) forNotification:sub_100320924((unsigned int *)buf) registrationInfo:0];
      [*(id *)(*(void *)(a1 + 144) + 16) unregister:*(void *)(*(void *)(a1 + 144) + 8) forNotification:3];
      [*(id *)(*(void *)(a1 + 144) + 16) unregister:*(void *)(*(void *)(a1 + 144) + 8) forNotification:0];
    }

    if (!*a2)
    {
      *(_DWORD *)std::runtime_error buf = 0;
      if (!sub_100247620(a1, (int *)buf, 1LL) && *(double *)(a1 + 2640) > 0.0)
      {
        int v9 = (unint64_t)(2290649225LL * (int)(CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 2640) + 30.0)) >> 32;
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101868368);
        }
        int v10 = (v9 >> 5) + (v9 >> 31);
        uint64_t v11 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::runtime_error buf = 67240192;
          int v26 = v10;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "UclpMetric, regperiod, %{public}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101868368);
          }
          int v23 = 67240192;
          int v24 = v10;
          LODWORD(v20) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "UclpMetric, regperiod, %{public}d",  &v23,  v20);
          uint64_t v19 = (uint8_t *)v18;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLUnifiedCellLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type: :Notification &)",  "%s\n",  v18);
          if (v19 != buf) {
            free(v19);
          }
        }

        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472LL;
        v21[2] = sub_100A2D394;
        void v21[3] = &unk_1018333B8;
        int v22 = v10;
        AnalyticsSendEventLazy(@"com.apple.clx.cellloc.regperiod", v21);
      }

      *(CFAbsoluteTime *)(a1 + 2640) = CFAbsoluteTimeGetCurrent();
    }
  }

  return 1LL;
}

BOOL sub_100A2D314(uint64_t a1)
{
  int v4 = 0;
  uint64_t v2 = 1LL;
  if (!sub_100247620(a1, &v4, 1LL))
  {
    int v5 = 3;
    uint64_t v2 = 1LL;
    if (!sub_100247620(a1, &v5, 1LL))
    {
      int v6 = 4;
      return sub_100247620(a1, &v6, 1LL) != 0;
    }
  }

  return v2;
}

NSDictionary *sub_100A2D394(uint64_t a1)
{
  v2[1] = @"duration";
  v3[0] = @"unregister";
  v2[0] = @"trigger";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

uint64_t sub_100A2D428(void *a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::runtime_error buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "CellLoc, shutdown", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    v8[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "CellLoc, shutdown",  v8,  2);
    uint64_t v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLUnifiedCellLocationProvider::shutdown()", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  sub_10047A1E0((uint64_t)a1);
  uint64_t v3 = a1[16];
  a1[16] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = a1[17];
  a1[17] = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t result = a1[18];
  a1[18] = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

void sub_100A2D608(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v7 = (int *)(a1 + 2576);
  CFAbsoluteTimeGetCurrent();
  sub_1003D3AB0(v7, a2, a3, a4);
}

void sub_100A2D64C(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v7 = (int *)(a1 + 2456);
  CFAbsoluteTimeGetCurrent();
  sub_1003D3AB0(v7, a2, a3, a4);
}

void sub_100A2D690(void *a1, const char *a2)
{
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = "null";
  }
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf) = 136446210;
    *(void *)((char *)&buf + 4) = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CellFlow, clearcells, %{public}s",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    *(_DWORD *)uint64_t v12 = 136446210;
    *(void *)&v12[4] = v3;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CellFlow, clearcells, %{public}s",  v12,  12);
    uint64_t v11 = (char *)v10;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::clearCurrentCells(const char *)",  "%s\n",  v10);
  }

  *((_DWORD *)a1 + 636) = 0;
  uint64_t v5 = a1[310];
  uint64_t v6 = a1[309];
  while (v5 != v6)
  {
    v5 -= 696LL;
    sub_10032B988((uint64_t)(a1 + 311), v5);
  }

  a1[310] = v6;
  uint64_t v7 = a1 + 312;
  do
  {
    __int128 buf = 0uLL;
    v14[0] = 0LL;
    sub_100A31878(&buf, *v7, v7[1], 0x66FD0EB66FD0EB67LL * ((v7[1] - *v7) >> 3));
    uint64_t v8 = *((void *)&buf + 1);
    uint64_t v9 = buf;
    while (v8 != v9)
    {
      v8 -= 696LL;
      sub_10032B988((uint64_t)v14, v8);
    }

    *((void *)&buf + 1) = v9;
    *(void *)uint64_t v12 = &buf;
    sub_1005C8A94((void ***)v12);
    v7 += 3;
  }

  while (v7 != a1 + 318);
}

double sub_100A2D904(uint64_t a1, uint64_t a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  uint64_t v3 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 136446210;
    uint64_t v11 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "@CellFlow, outcome, %{public}s, UclpMetric",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v8 = 136446210;
    uint64_t v9 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@CellFlow, outcome, %{public}s, UclpMetric",  &v8,  12);
    uint64_t v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLUnifiedCellLocationProvider::logCellRefreshOutcome(const char *)",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_100A2DAEC;
  _DWORD v7[3] = &unk_101820718;
  _DWORD v7[4] = a2;
  *(void *)&double result = AnalyticsSendEventLazy(@"com.apple.clx.cellloc.outcome", v7).n128_u64[0];
  return result;
}

NSDictionary *sub_100A2DAEC(uint64_t a1)
{
  v2[1] = @"outcome";
  v3[0] = @"na";
  v2[0] = @"trigger";
  v3[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", *(void *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

uint64_t sub_100A2DB84(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v28 = 0LL;
  unint64_t v29 = &v28;
  uint64_t v30 = 0x2020000000LL;
  char v31 = 0;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472LL;
  v27[2] = sub_100A2DF60;
  v27[3] = &unk_1018682A0;
  v27[4] = &v28;
  v27[5] = a2;
  v27[6] = a3;
  sub_100DCF184((uint64_t)v27);
  if (*((_BYTE *)v29 + 24))
  {
    int v5 = 1;
  }

  else
  {
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472LL;
    void v26[2] = sub_100A2E040;
    v26[3] = &unk_1018682A0;
    v26[4] = &v28;
    v26[5] = a2;
    v26[6] = a3;
    sub_10096EC18((uint64_t)v26);
    int v5 = *((unsigned __int8 *)v29 + 24);
  }

  int v6 = *(_DWORD *)(a3 + 96);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  uint64_t v7 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    int v8 = *((unsigned __int8 *)v29 + 24);
    sub_100F57510(a2, (std::stringbuf::string_type *)&v32);
    int v9 = SBYTE3(v36);
    int v10 = (void **)v32;
    sub_100832C64(a3, &__p);
    uint64_t v11 = &v32;
    if (v9 < 0) {
      uint64_t v11 = v10;
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 buf = 67240707;
    int v38 = v8;
    __int16 v39 = 2081;
    int v40 = v11;
    __int16 v41 = 2081;
    unint64_t v42 = p_p;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "CellLoc, getCellFromTilesManager, isFound, %{public}d, cell, %{private}s, location, %{private}s",  buf,  0x1Cu);
    if (SBYTE3(v36) < 0) {
      operator delete(v32);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    uint64_t v16 = qword_101934858;
    int v17 = *((unsigned __int8 *)v29 + 24);
    sub_100F57510(a2, &__p);
    int size = (char)__p.__r_.__value_.__s.__size_;
    std::string::size_type v19 = __p.__r_.__value_.__r.__words[0];
    sub_100832C64(a3, &v24);
    uint64_t v20 = &__p;
    if (size < 0) {
      uint64_t v20 = (std::stringbuf::string_type *)v19;
    }
    if ((v24.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v21 = &v24;
    }
    else {
      uint64_t v21 = (std::stringbuf::string_type *)v24.__r_.__value_.__r.__words[0];
    }
    LODWORD(v32) = 67240707;
    HIDWORD(v32) = v17;
    __int16 v33 = 2081;
    uint64_t v34 = v20;
    __int16 v35 = 2081;
    uint64_t v36 = v21;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  1LL,  "CellLoc, getCellFromTilesManager, isFound, %{public}d, cell, %{private}s, location, %{private}s",  &v32,  28);
    int v23 = v22;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLNetworkLocationProvider::BestMatchLevel CLUnifiedCellLocationProvider::getCellFromTilesManager(const CLC ell &, CLDaemonLocation &)",  "%s\n",  v23);
  }

  if (v6 == 6) {
    unsigned int v13 = 2;
  }
  else {
    unsigned int v13 = 1;
  }
  if (v5) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0LL;
  }
  _Block_object_dispose(&v28, 8);
  return v14;
}

void sub_100A2DF10( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, char a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, int a40, __int16 a41, char a42, char a43)
{
}

void sub_100A2DF60(void *a1, uint64_t a2)
{
  int v9 = 0xFFFF;
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v12 = xmmword_1012E0070;
  __int128 v13 = _Q0;
  __int128 v14 = _Q0;
  __int128 v15 = _Q0;
  int v16 = 0;
  uint64_t v19 = 0LL;
  unint64_t v17 = 0xBFF0000000000000LL;
  uint64_t v18 = 0LL;
  int v20 = 0;
  unint64_t v21 = 0xBFF0000000000000LL;
  int v22 = 0x7FFFFFFF;
  uint64_t v25 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t v24 = 0LL;
  char v26 = 0;
  *(_BYTE *)(*(void *)(a1[4] + 8LL) + 24LL) = sub_100DC93F4(a2, a1[5], (uint64_t)&v9, (uint64_t)v27, a1[6]);
  sub_100603B94((uint64_t)v28, v28[1]);
}

void sub_100A2E028(_Unwind_Exception *a1)
{
}

void sub_100A2E040(uint64_t a1, uint64_t a2)
{
  int v9 = 0xFFFF;
  uint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v12 = xmmword_1012E0070;
  __int128 v13 = _Q0;
  __int128 v14 = _Q0;
  __int128 v15 = _Q0;
  int v16 = 0;
  uint64_t v19 = 0LL;
  unint64_t v17 = 0xBFF0000000000000LL;
  uint64_t v18 = 0LL;
  int v20 = 0;
  unint64_t v21 = 0xBFF0000000000000LL;
  int v22 = 0x7FFFFFFF;
  uint64_t v25 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t v24 = 0LL;
  char v26 = 0;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = sub_10096C5F0( a2,  *(unsigned int **)(a1 + 40),  (uint64_t)&v9,  (uint64_t)v27,  *(void *)(a1 + 48));
  sub_100603B94((uint64_t)v28, v28[1]);
}

void sub_100A2E108(_Unwind_Exception *a1)
{
}

id sub_100A2E124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLNetworkLocationProvider"),  "syncgetBestMatchLocation:forCell:",  a3,  a2);
}

id sub_100A2E160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 - 88), "vendor"),  "proxyForService:",  @"CLNetworkLocationProvider"),  "syncgetBestMatchLocation:forCell:",  a3,  a2);
}

void sub_100A2E19C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 120;
  uint64_t v4 = (_OWORD **)(a1 + 2472);
  nullsub_10(a1 + 184);
  uint64_t v6 = v5;
  double Current = CFAbsoluteTimeGetCurrent();
  sub_10044BDF4(v3, a2, v4, v6, Current);
}

BOOL sub_100A2E1E8(uint64_t a1)
{
  int v4 = 0;
  uint64_t v2 = 1LL;
  if (!sub_100247620(a1, &v4, 1LL))
  {
    int v5 = 3;
    return sub_100247620(a1, &v5, 1LL) != 0;
  }

  return v2;
}

BOOL sub_100A2E248(uint64_t a1)
{
  return sub_100A2E1E8(a1 - 120);
}

BOOL sub_100A2E250(uint64_t a1)
{
  int v2 = 0;
  return sub_100247620(a1, &v2, 1LL) != 0;
}

BOOL sub_100A2E280(uint64_t a1)
{
  int v2 = 0;
  return sub_100247620(a1 - 120, &v2, 1LL) != 0;
}

void *sub_100A2E2B4(void *result, uint64_t a2, double a3, double a4)
{
  if (result[319])
  {
    uint64_t v7 = result;
    result[320] = a2;
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v8 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446466;
      uint64_t v16 = a2;
      __int16 v17 = 2050;
      double v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "CellFlow, timer, %{public}s, %{public}.0f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      int v11 = 136446466;
      uint64_t v12 = a2;
      __int16 v13 = 2050;
      double v14 = a4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CellFlow, timer, %{public}s, %{public}.0f",  &v11,  22);
      uint64_t v10 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLUnifiedCellLocationProvider::setCellLocationPropagationTimer(const char *, CFAbsoluteTime, CFTimeInterval)",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }

    v7[320] = a2;
    return sub_1006B6014(v7[319], a3 + a4);
  }

  return result;
}

void *sub_100A2E4A4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_100A2E2B4((void *)(a1 - 120), a2, a3, a4);
}

uint64_t sub_100A2E4AC(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  return sub_100313258(a1 + 184, a2, a3);
}

uint64_t sub_100A2E4B4(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  return sub_100313258(a1 + 64, a2, a3);
}

uint64_t sub_100A2E4BC(uint64_t a1, uint64_t a2)
{
  int v3 = 0;
  return (*(uint64_t (**)(uint64_t, int *, uint64_t, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v3,  a2,  0LL,  0xFFFFFFFFLL,  0LL);
}

uint64_t sub_100A2E4F8(uint64_t a1, uint64_t a2)
{
  int v3 = 0;
  return (*(uint64_t (**)(uint64_t, int *, uint64_t, void, uint64_t, void))(*(void *)(a1 - 120) + 152LL))( a1 - 120,  &v3,  a2,  0LL,  0xFFFFFFFFLL,  0LL);
}

double sub_100A2E534(uint64_t a1, uint64_t a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  int v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 136446210;
    uint64_t v11 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "@ClxCell, Fix, 0, ll, N/A, %{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v8 = 136446210;
    uint64_t v9 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@ClxCell, Fix, 0, ll, N/A, %{public}s",  &v8,  12);
    uint64_t v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLUnifiedCellLocationProvider::handleLocationFailed(const char *)",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 368LL))(a1, a2);
  *(_DWORD *)__int128 buf = 9;
  (*(void (**)(uint64_t, uint8_t *, uint64_t, uint64_t))(*(void *)a1 + 144LL))(a1, buf, 1LL, 0xFFFFFFFFLL);
  return sub_100311540(a1 + 184);
}

double sub_100A2E724(uint64_t a1, uint64_t a2)
{
  return sub_100A2E534(a1 - 120, a2);
}

uint64_t sub_100A2E72C(uint64_t a1)
{
  if (*(void *)(a1 + 2472) == *(void *)(a1 + 2480))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    unint64_t v46 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "CellQuery, skip, empty", (uint8_t *)__p, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      *(_WORD *)__int16 v63 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CellQuery, skip, empty",  v63,  2);
      int v54 = (std::stringbuf::string_type *)v53;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLUnifiedCellLocationProvider::queryCellLocations()",  "%s\n",  v53);
      if (v54 != __p) {
        free(v54);
      }
    }

    return 0LL;
  }

  else
  {
    uint64_t v57 = 0LL;
    unint64_t v58 = 0LL;
    unint64_t v59 = 0LL;
    double Current = CFAbsoluteTimeGetCurrent();
    int v3 = *(unsigned int **)(a1 + 2472);
    int v4 = *(unsigned int **)(a1 + 2480);
    uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (v3 != v4)
    {
      double v6 = Current;
      __asm { FMOV            V0.2D, #-1.0 }

      __int128 v56 = _Q0;
      while ((sub_100450630((uint64_t)v3) & 1) != 0)
      {
        if (!sub_10045064C(v3[2]))
        {
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101868368);
          }
          uint64_t v25 = (os_log_s *)p_vtable[267];
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
          {
            sub_100F57510(v3, __p);
            char v26 = __p;
            if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
              char v26 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)__int16 v63 = 136380675;
            *(void *)&v63[4] = v26;
            _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "CellQuery, ignore, unqueirable, %{private}s",  v63,  0xCu);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_75;
          }
          bzero(__p, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101868368);
          }
          uint64_t v27 = p_vtable[267];
          sub_100F57510(v3, (std::stringbuf::string_type *)v63);
          uint64_t v28 = v63;
          if (SBYTE3(v65) < 0) {
            uint64_t v28 = *(_BYTE **)v63;
          }
          LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v28;
          LODWORD(v55) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v27,  2LL,  "CellQuery, ignore, unqueirable, %{private}s",  &buf,  v55);
          uint64_t v19 = v29;
          if (SBYTE3(v65) < 0) {
            operator delete(*(void **)v63);
          }
          goto LABEL_51;
        }

        *(_DWORD *)__int16 v63 = 0xFFFF;
        *(void *)&v63[4] = 0LL;
        uint64_t v64 = 0LL;
        __int128 v65 = xmmword_1012E0070;
        __int128 v66 = v56;
        __int128 v67 = v56;
        __int128 v68 = v56;
        int v69 = 0;
        unint64_t v70 = 0xBFF0000000000000LL;
        uint64_t v71 = 0LL;
        uint64_t v72 = 0LL;
        int v73 = 0;
        unint64_t v74 = 0xBFF0000000000000LL;
        int v75 = 0x7FFFFFFF;
        uint64_t v77 = 0LL;
        uint64_t v78 = 0LL;
        uint64_t v76 = 0LL;
        char v79 = 0;
        int v12 = objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLNetworkLocationProvider"),  "syncgetBestMatchLocation:forCell:",  v63,  v3);
        if (v12 < 3)
        {
          if (v6 - *((double *)&v68 + 1) > 28800.0)
          {
            if (qword_101934850 != -1) {
              dispatch_once(&qword_101934850, &stru_101868368);
            }
            uint64_t v30 = (os_log_s *)p_vtable[267];
            if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
            {
              sub_100F57510(v3, __p);
              char v31 = __p;
              if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
                char v31 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
              }
              LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v31;
              _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_INFO,  "CellQuery, query, %{private}s",  (uint8_t *)&buf,  0xCu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(__p, 0x65CuLL);
              if (qword_101934850 != -1) {
                dispatch_once(&qword_101934850, &stru_101868368);
              }
              uint64_t v37 = p_vtable[267];
              sub_100F57510(v3, &buf);
              p_std::stringbuf::string_type buf = &buf;
              if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
              }
              int v61 = 136380675;
              v62[0] = p_buf;
              LODWORD(v55) = 12;
              _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v37,  1LL,  "CellQuery, query, %{private}s",  &v61,  v55);
              int v40 = v39;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLUnifiedCellLocationProvider::queryCellLocations()",  "%s\n",  (const char *)v40);
              if (v40 != __p) {
                free(v40);
              }
            }

            unint64_t v32 = v58;
            if (v58 >= v59)
            {
              uint64_t v33 = sub_10032BF64(&v57, (uint64_t)v3);
            }

            else
            {
              sub_10032C088((uint64_t)&v59, v58, (uint64_t)v3);
              uint64_t v33 = v32 + 696;
            }

            unint64_t v58 = v33;
            goto LABEL_75;
          }

          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101868368);
          }
          uint64_t v34 = (os_log_s *)p_vtable[267];
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
          {
            LODWORD(__p[0].__r_.__value_.__l.__data_) = 134349313;
            *(double *)((char *)__p[0].__r_.__value_.__r.__words + 4) = v6 - *((double *)&v68 + 1);
            WORD2(__p[0].__r_.__value_.__r.__words[1]) = 2049;
            *(std::string::size_type *)((char *)&__p[0].__r_.__value_.__r.__words[1] + 6) = 0x40DC200000000000LL;
            _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "CellQuery, ignore, fresh, %{public}.1f, %{private}.1f",  (uint8_t *)__p,  0x16u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_75;
          }
          bzero(__p, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101868368);
          }
          __int16 v35 = p_vtable[267];
          LODWORD(buf.__r_.__value_.__l.__data_) = 134349313;
          *(double *)((char *)buf.__r_.__value_.__r.__words + 4) = v6 - *((double *)&v68 + 1);
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = 0x40DC200000000000LL;
          LODWORD(v55) = 22;
          _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v35,  2LL,  "CellQuery, ignore, fresh, %{public}.1f, %{private}.1f",  &buf,  v55);
          uint64_t v19 = (std::stringbuf::string_type *)v36;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLUnifiedCellLocationProvider::queryCellLocations()",  "%s\n",  v36);
        }

        else
        {
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101868368);
          }
          __int16 v13 = p_vtable;
          double v14 = (os_log_s *)p_vtable[267];
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
          {
            sub_100F57510(v3, __p);
            __int128 v15 = __p;
            if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
              __int128 v15 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
            }
            LODWORD(buf.__r_.__value_.__l.__data_) = 67240451;
            HIDWORD(buf.__r_.__value_.__r.__words[0]) = v12;
            LOWORD(buf.__r_.__value_.__r.__words[1]) = 2081;
            *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v15;
            _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "CellQuery, ignore, matched, %{public}d, %{private}s",  (uint8_t *)&buf,  0x12u);
          }

          uint64_t p_vtable = v13;
          if (!sub_1002921D0(115, 2)) {
            goto LABEL_75;
          }
          bzero(__p, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101868368);
          }
          uint64_t v16 = v13[267];
          sub_100F57510(v3, &buf);
          __int16 v17 = &buf;
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            __int16 v17 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          }
          int v61 = 67240451;
          LODWORD(v62[0]) = v12;
          WORD2(v62[0]) = 2081;
          *(void *)((char *)v62 + 6) = v17;
          LODWORD(v55) = 18;
          _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v16,  2LL,  "CellQuery, ignore, matched, %{public}d, %{private}s",  &v61,  v55);
          uint64_t v19 = v18;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLUnifiedCellLocationProvider::queryCellLocations()",  "%s\n",  (const char *)v19);
          uint64_t p_vtable = v13;
        }

void sub_100A2F468( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void **a57)
{
  a57 = (void **)&a26;
  sub_1005C8A94(&a57);
  _Unwind_Resume(a1);
}

uint64_t sub_100A2F4DC(uint64_t a1)
{
  return sub_100A2E72C(a1 - 120);
}

id sub_100A2F4E4(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  return _objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLCellTilesManager"),  "requestCellTileDownloadByType:lat:lon:seckey:",  a2,  a3,  a4,  a5);
}

id sub_100A2F538(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  return _objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 - 88), "vendor"), "proxyForService:", @"CLCellTilesManager"),  "requestCellTileDownloadByType:lat:lon:seckey:",  a2,  a3,  a4,  a5);
}

void sub_100A2F58C(uint64_t a1, uint64_t a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  int v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 136446210;
    *(void *)&uint8_t buf[4] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "CellFlow, requestWifiLocationUpdate, reason, %{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v21 = 136446210;
    uint64_t v22 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CellFlow, requestWifiLocationUpdate, reason, %{public}s",  &v21,  12);
    int v8 = (char *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLUnifiedCellLocationProvider::requestWiFiLocationUpdate(const char *)",  "%s\n",  v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_1010DDBC0(__p, "uclp");
  sub_100495E50(buf, 4LL, 1LL, __p, Current);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  id v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLWifiLocationProvider");
  uint64_t v9 = *(void *)buf;
  char v10 = buf[8];
  if (SHIBYTE(v25) < 0)
  {
    sub_1010DD48C(&v11, (void *)v24, *((unint64_t *)&v24 + 1));
  }

  else
  {
    __int128 v11 = v24;
    uint64_t v12 = v25;
  }

  __int128 v14 = v27;
  __int128 v15 = v28;
  v16[0] = v29[0];
  *(_OWORD *)((char *)v16 + 12) = *(_OWORD *)((char *)v29 + 12);
  __int128 v13 = v26;
  if (SHIBYTE(v31) < 0)
  {
    sub_1010DD48C(&v17, (void *)v30, *((unint64_t *)&v30 + 1));
  }

  else
  {
    __int128 v17 = v30;
    uint64_t v18 = v31;
  }

  [v6 requestLocationUpdateWithParameters:sub_10039A914((uint64_t)&v9)];
  if (SHIBYTE(v18) < 0) {
    operator delete((void *)v17);
  }
  if (SHIBYTE(v12) < 0) {
    operator delete((void *)v11);
  }
  if (SHIBYTE(v31) < 0) {
    operator delete((void *)v30);
  }
  if (SHIBYTE(v25) < 0) {
    operator delete((void *)v24);
  }
}

void sub_100A2F88C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, void *a33, uint64_t a34, int a35, __int16 a36, char a37, char a38, uint64_t a39, uint64_t a40, char a41)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_1002DDC84((uint64_t)&a41);
  _Unwind_Resume(a1);
}

void sub_100A2F8E8(uint64_t a1, uint64_t a2)
{
}

void sub_100A2F8F0(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 4)
  {
    if (*(_DWORD *)(a4 + 188) != 1)
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      int v8 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "Cell, kNotificationLocationServicesStatus",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101868368);
        }
        v13[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "Cell, kNotificationLocationServicesStatus",  v13,  2);
        uint64_t v12 = (uint8_t *)v11;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, cons t CLClientManager_Type::NotificationData &)",  "%s\n",  v11);
        if (v12 != buf) {
          free(v12);
        }
      }

      sub_10031236C(a1 + 184);
    }
  }

  else if (!*a3)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v5 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Cell, kNotificationReset", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      v13[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "Cell, kNotificationReset",  v13,  2);
      char v10 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }

    sub_10031236C(a1 + 184);
    id v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLClientManager");
    if (byte_10199A007 >= 0) {
      uint64_t v7 = &qword_101999FF0;
    }
    else {
      uint64_t v7 = (uint64_t *)qword_101999FF0;
    }
    objc_msgSend( v6,  "resetNotificationConsumedForIdentifier:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v7));
  }

void sub_100A2FC28(uint64_t a1, uint64_t a2, int *a3, unsigned __int8 *a4)
{
  int v5 = *a3;
  if (*a3 > 7)
  {
    if (v5 == 8)
    {
      sub_1003118E4(a1 + 184, *a4);
    }

    else if (v5 == 16)
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      id v6 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        int v7 = *(_DWORD *)(a1 + 2616);
        int v8 = *(_DWORD *)(a1 + 2620);
        int v9 = *(_DWORD *)(a1 + 2624);
        int v10 = *(_DWORD *)(a1 + 2628);
        *(_DWORD *)std::stringbuf::string_type buf = 67240960;
        int v36 = v7;
        __int16 v37 = 1026;
        int v38 = v8;
        __int16 v39 = 1026;
        int v40 = v9;
        __int16 v41 = 1026;
        int v42 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "UclpMetric, heartbeat, registrants, %{public}d, requests, %{public}d, infonotify, %{public}d, monitor, %{public}d",  buf,  0x1Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101868368);
        }
        int v15 = *(_DWORD *)(a1 + 2616);
        int v16 = *(_DWORD *)(a1 + 2620);
        int v17 = *(_DWORD *)(a1 + 2624);
        int v18 = *(_DWORD *)(a1 + 2628);
        int v27 = 67240960;
        int v28 = v15;
        __int16 v29 = 1026;
        int v30 = v16;
        __int16 v31 = 1026;
        int v32 = v17;
        __int16 v33 = 1026;
        int v34 = v18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "UclpMetric, heartbeat, registrants, %{public}d, requests, %{public}d, infonotify, %{public}d, monitor, %{public}d",  &v27,  26);
        char v20 = (uint8_t *)v19;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v19);
        if (v20 != buf) {
          free(v20);
        }
      }

      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472LL;
      void v26[2] = sub_100A3012C;
      v26[3] = &unk_101820718;
      v26[4] = a1;
      AnalyticsSendEventLazy(@"com.apple.clx.cellloc.heartbeat", v26);
      *(_OWORD *)(a1 + 2616) = 0u;
      sub_1003D33D8((int *)(a1 + 2576));
      sub_1003D33C8(a1 + 2576);
      *(_DWORD *)std::stringbuf::string_type buf = 0;
      if (sub_100247620(a1, (int *)buf, 1LL) && *(double *)(a1 + 2640) > 0.0)
      {
        int v11 = (unint64_t)(2290649225LL * (int)(CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 2640) + 30.0)) >> 32;
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101868368);
        }
        int v12 = (v11 >> 5) + (v11 >> 31);
        __int128 v13 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 67240192;
          int v36 = v12;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "UclpMetric, regperiod, %{public}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101868368);
          }
          int v27 = 67240192;
          int v28 = v12;
          LODWORD(v23) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "UclpMetric, regperiod, %{public}d",  &v27,  v23);
          uint64_t v22 = (uint8_t *)v21;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, con st CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v21);
          if (v22 != buf) {
            free(v22);
          }
        }

        v24[0] = _NSConcreteStackBlock;
        v24[1] = 3221225472LL;
        _DWORD v24[2] = sub_100A30208;
        v24[3] = &unk_1018333B8;
        int v25 = v12;
        AnalyticsSendEventLazy(@"com.apple.clx.cellloc.regperiod", v24);
      }
    }
  }

  else if (v5 == 3)
  {
    if (sub_100A2D314(a1))
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      (*(void (**)(uint64_t, const char *, CFAbsoluteTime, double))(*(void *)a1 + 312LL))( a1,  "wake",  Current,  2.0);
    }
  }

  else if (v5 == 6)
  {
    *(_DWORD *)(a1 + 256_Block_object_dispose(va, 8) = *((_DWORD *)a4 + 1);
  }

NSDictionary *sub_100A3012C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int **)(a1 + 32);
  v3[0] = @"registrants";
  v4[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[654]);
  v3[1] = @"requests";
  v4[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[655]);
  void v3[2] = @"infonotify";
  _DWORD v4[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[656]);
  void v3[3] = @"monitor";
  void v4[3] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v1[657]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  4LL);
}

NSDictionary *sub_100A30208(uint64_t a1)
{
  v2[1] = @"duration";
  v3[0] = @"heartbeat";
  v2[0] = @"trigger";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

void sub_100A3029C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = *(_DWORD *)(a4 + 80);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 2576);
    int v6 = *(unsigned __int8 *)(a4 + 84);
    CFAbsoluteTimeGetCurrent();
    sub_1003D3E98(v5, v6, v4);
  }

void sub_100A302EC(uint64_t a1, uint64_t a2, int *a3, _BYTE *a4)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  int v7 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *a3;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v14 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CellLoc, onCompanionNotification, notification, %{public}d, Tiles",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v9 = *a3;
    v12[0] = 67240192;
    v12[1] = v9;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "CellLoc, onCompanionNotification, notification, %{public}d, Tiles",  v12,  8);
    int v11 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, c onst CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  if (*a3 == 5)
  {
    sub_1004F2598();
  }

void sub_100A304CC(uint64_t a1, uint64_t a2, int *a3, uint64_t *a4)
{
  uint64_t v6 = *a4;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  int v7 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = (const __CFString *)sub_100320878(a3);
    sub_1002A6C50(v8, __p);
    int v9 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0 ? __p : (std::string *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v9;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v6 != 0;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "@CellFlow, ctnotify, %{public}s, havedata, %{public}d",  (uint8_t *)&buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    uint64_t v22 = qword_101934858;
    uint64_t v23 = (const __CFString *)sub_100320878(a3);
    sub_1002A6C50(v23, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::string buf = &buf;
    }
    else {
      p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    int v37 = 136446466;
    int v38 = p_buf;
    __int16 v39 = 1026;
    BOOL v40 = v6 != 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v22,  0LL,  "@CellFlow, ctnotify, %{public}s, havedata, %{public}d",  &v37,  18);
    __int128 v26 = v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, co nst CLTelephonyService_Type::NotificationData &)",  "%s\n",  (const char *)v26);
    if (v26 != __p) {
      free(v26);
    }
  }

  if (sub_100E575B0())
  {
    sub_1002A5370(__p);
    uint64_t v10 = sub_100320878(a3);
    sub_1002ACDE0((uint64_t)__p, "telNotification", v10);
    sub_100E57614((uint64_t)__p, (uint64_t)"telNotification");
    sub_1002A5590(__p);
  }

  if (v6)
  {
    int v11 = (const void *)sub_100320878(a3);
    if (CFEqual(v11, @"kCellInfoNotification")) {
      ++*(_DWORD *)(a1 + 2624);
    }
    int v12 = (const void *)sub_100320878(a3);
    if (CFEqual(v12, @"kCellMonitorRefreshResultNotification")) {
      ++*(_DWORD *)(a1 + 2628);
    }
  }

  if (sub_1002958AC() == 1)
  {
    __int128 v13 = (const void *)sub_100320878(a3);
    if (CFEqual(v13, @"kCLTelephonyServiceDisconnectedNotification"))
    {
      sub_100A2D690((void *)a1, "disconnect");
      (*(void (**)(uint64_t, const char *))(*(void *)a1 + 384LL))(a1, "disconnect");
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      int v17 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        int v18 = (const __CFString *)sub_100320878(a3);
        sub_1002A6C50(v18, __p);
        uint64_t v19 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0 ? __p : (std::string *)__p[0].__r_.__value_.__r.__words[0];
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v19;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "CellService, unknown, %{public}s",  (uint8_t *)&buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101868368);
        }
        uint64_t v30 = qword_101934858;
        __int16 v31 = (const __CFString *)sub_100320878(a3);
        sub_1002A6C50(v31, &buf);
        if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          int v32 = &buf;
        }
        else {
          int v32 = (std::string *)buf.__r_.__value_.__r.__words[0];
        }
        int v37 = 136446210;
        int v38 = v32;
        LODWORD(v35) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  0LL,  "CellService, unknown, %{public}s",  &v37,  v35);
        int v34 = v33;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onTelephonyNotification(int, const CLTelephonyService_Type::Notification & , const CLTelephonyService_Type::NotificationData &)",  "%s\n",  (const char *)v34);
        if (v34 != __p) {
          free(v34);
        }
      }
    }

    sub_100A2D314(a1);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    char v20 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v21 = sub_100A2D314(a1);
      LODWORD(__p[0].__r_.__value_.__l.__data_) = 67240450;
      HIDWORD(__p[0].__r_.__value_.__r.__words[0]) = v21;
      LOWORD(__p[0].__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&__p[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"x";
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "@CellFlow, skipcalc, clients, %{public}d, get, %{public}s",  (uint8_t *)__p,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      uint64_t v27 = qword_101934858;
      BOOL v28 = sub_100A2D314(a1);
      LODWORD(buf.__r_.__value_.__l.__data_) = 67240450;
      HIDWORD(buf.__r_.__value_.__r.__words[0]) = v28;
      LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"x";
      LODWORD(v35) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v27,  0LL,  "@CellFlow, skipcalc, clients, %{public}d, get, %{public}s",  &buf,  v35);
      int v16 = (std::string *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)",  "%s\n",  v29);
      if (v16 != __p) {
LABEL_56:
      }
        free(v16);
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v14 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "CellFlow, outcome, LS Off",  (uint8_t *)__p,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      LODWORD(v35) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CellFlow, outcome, LS Off",  &buf,  v35);
      int v16 = (std::string *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)",  "%s\n",  v15);
      if (v16 != __p) {
        goto LABEL_56;
      }
    }
  }

void sub_100A30C5C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_100A30C78(uint64_t a1, uint64_t a2)
{
  if (a2 && *(void *)(a1 + 2552) == a2)
  {
    if (sub_100A2D314(a1))
    {
      sub_100A2CAE4(a1, *(const char **)(a1 + 2560));
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      int v4 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CellFlow, timer, cancel, -1", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101868368);
        }
        v9[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "CellFlow, timer, cancel, -1",  v9,  2);
        int v8 = (uint8_t *)v7;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onDelayedCellPropagationTimer(CLPersistentTimer *)",  "%s\n",  v7);
        if (v8 != buf) {
          free(v8);
        }
      }

      sub_1006B6014(*(void *)(a1 + 2552), 1.79769313e308);
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v3 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "CellLoc, ignore timer", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      v9[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CellLoc, ignore timer",  v9,  2);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onDelayedCellPropagationTimer(CLPersistentTimer *)",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

void sub_100A30FA0(void *a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101868368);
  }
  int v7 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = *a3;
    *(_DWORD *)std::string buf = 67240192;
    LODWORD(v36) = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CellQuery, notify, %{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v19 = *a3;
    int v31 = 67240192;
    LODWORD(v32) = v19;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CellQuery, notify, %{public}d",  &v31,  8);
    BOOL v21 = (uint8_t *)v20;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Notif ication &, const CLNetworkLocationProvider_Type::NotificationData &)",  "%s\n",  v20);
    if (v21 != buf) {
      free(v21);
    }
  }

  uint64_t v9 = sub_1003118D4((uint64_t)(a1 + 23));
  nullsub_10(a1 + 23);
  if (*a3)
  {
    if (*a3 == 3)
    {
      uint64_t v11 = v10;
      if (*(double *)(v10 + 20) < 0.0 || (uint64_t v12 = a1[309], v12 == a1[310]) || sub_100F58F24(v12, v9))
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101868368);
        }
        __int128 v13 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v14 = *(void *)(v11 + 20);
          BOOL v15 = a1[309] == a1[310];
          *(_DWORD *)std::string buf = 134349312;
          uint64_t v36 = v14;
          __int16 v37 = 1026;
          BOOL v38 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "CellQuery, fail, acc, %{public}.1f, empty, %{public}d",  buf,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101868368);
          }
          uint64_t v22 = *(void *)(v11 + 20);
          BOOL v23 = a1[309] == a1[310];
          int v31 = 134349312;
          uint64_t v32 = v22;
          __int16 v33 = 1026;
          BOOL v34 = v23;
          LODWORD(v30) = 18;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CellQuery, fail, acc, %{public}.1f, empty, %{public}d",  &v31,  v30);
          int v25 = (uint8_t *)v24;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type: :Notification &, const CLNetworkLocationProvider_Type::NotificationData &)",  "%s\n",  v24);
          if (v25 != buf) {
            free(v25);
          }
        }

        (*(void (**)(void *, const char *))(*a1 + 384LL))(a1, "alserror");
        CFAbsoluteTimeGetCurrent();
        sub_1003D3CC0((uint64_t)(a1 + 322), 0);
      }
    }
  }

  else if (sub_100A2D314((uint64_t)a1))
  {
    int v16 = *(_DWORD *)(a4 + 8);
    CFAbsoluteTimeGetCurrent();
    sub_1003D3CC0((uint64_t)(a1 + 322), v16);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v17 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "CellQuery, response", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      LOWORD(v31) = 0;
      LODWORD(v30) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "CellQuery, response",  &v31,  v30);
      uint64_t v27 = (uint8_t *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Not ification &, const CLNetworkLocationProvider_Type::NotificationData &)",  "%s\n",  v26);
      if (v27 != buf) {
        free(v27);
      }
    }

    sub_100A2E19C((uint64_t)a1, (uint64_t)"als");
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101868368);
    }
    int v18 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "CellQuery, no client", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101868368);
      }
      LOWORD(v31) = 0;
      LODWORD(v30) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CellQuery, no client",  &v31,  v30);
      __int16 v29 = (uint8_t *)v28;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLUnifiedCellLocationProvider::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Not ification &, const CLNetworkLocationProvider_Type::NotificationData &)",  "%s\n",  v28);
      if (v29 != buf) {
        free(v29);
      }
    }
  }

void sub_100A315EC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  int v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLUnifiedCellLocationProvider");
  sub_10047D890((uint64_t)v8, (uint64_t *)__p, a3, a1, a2);
  void *v8 = &off_1018682D0;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100A31684( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_100A316B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  char v10 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLUnifiedCellLocationProvider");
  sub_10047D8C8((uint64_t)v10, a1, (uint64_t *)__p, a4, a2, a3);
  void *v10 = &off_1018682D0;
  *a5 = v10;
  if (v12 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100A31750( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

id sub_100A3177C(uint64_t a1)
{
  return objc_msgSend( -[CLServiceVendor proxyForService:]( +[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance"),  "proxyForService:",  @"CLUnifiedCellLocationProvider"),  "syncgetDoSync:",  a1);
}

void sub_100A317B4(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100A317E0(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_100A3180C(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + _Block_object_dispose(va, 8) = 0;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 16) = a1 + 24;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = clock();
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = clock();
  return a1;
}

void sub_100A31860(_Unwind_Exception *a1)
{
}

void *sub_100A31878(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_100A318FC(result, a4);
    double result = (void *)sub_100A31950((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }

  return result;
}

void sub_100A318DC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + _Block_object_dispose(va, 8) = v10;
  sub_1005C8A94(&a9);
  _Unwind_Resume(a1);
}

char *sub_100A318FC(void *a1, unint64_t a2)
{
  if (a2 >= 0x5E293205E29321LL) {
    sub_100007008();
  }
  double result = (char *)sub_10032BC60((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[696 * v4];
  return result;
}

uint64_t sub_100A31950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  _DWORD v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_10032C088(a1, v4, v6);
      v6 += 696LL;
      uint64_t v4 = v12 + 696;
      v12 += 696LL;
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_100450EE0((uint64_t)v9);
  return v4;
}

void sub_100A319E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100A319F8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_100A31A5C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_100A31AD0(_Unwind_Exception *a1)
{
}

uint64_t sub_100A31AE8()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999FF0, (void *)&_mh_execute_header);
}

void sub_100A31C08(id a1)
{
  qword_10199A030 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLNoMovementServiceSilo");
}

void sub_100A31CBC(id a1)
{
}

void sub_100A32010(_Unwind_Exception *a1)
{
}

id sub_100A32030(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return [a4 onMotionStateMediatorNotification:a2 data:a3];
}

id sub_100A32040(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return _[a4 onWatchOrientationSettingsNotification:a2 data:a3];
}

id sub_100A32050(uint64_t a1, void *a2)
{
  return _[a2 onDeviceMotionData:a1];
}

void sub_100A330CC(id a1)
{
  qword_1019347F8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CheckIn");
}

uint64_t sub_100A330F8(uint64_t a1, char *a2, uint64_t *a3, double a4)
{
  double v12 = a4;
  sub_100400554(a1, a3, &v12);
  *(void *)a1 = off_1018683F8;
  sub_1010DDBC0((void *)(a1 + 232), a2);
  sub_100B14CF0((void *)(a1 + 256), a1 + 64, 0LL);
  if (sub_1003C1048(a1 + 64))
  {
    uint64_t v6 = (char *)(a1 + 232);
    sub_1003B59A0(a1 + 64, v6, (const char **)&qword_10199A050, 0LL, 0);
    sub_100400684(a1);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101868428);
    }
    int v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#Warning Database is not valid; not initializing",
        buf,
        2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101868428);
      }
      __int16 v11 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Database is not valid; not initializing",
        &v11,
        2);
      char v10 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLteCellLocationDatabase::CLLteCellLocationDatabase(const char *, const CLSqliteDatabase::SqliteProperties &, double)",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }
  }

  return a1;
}

void sub_100A33314(_Unwind_Exception *a1)
{
}

uint64_t sub_100A33350(uint64_t a1)
{
  *(void *)a1 = off_1018683F8;
  return sub_10040063C(a1);
}

void sub_100A33390(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100A33350(a1);
  operator delete(v1);
}

char *sub_100A333A4@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[255] < 0) {
    return (char *)sub_1010DD48C((_BYTE *)a2, *((void **)result + 29), *((void *)result + 30));
  }
  *(_OWORD *)a2 = *(_OWORD *)(result + 232);
  *(void *)(a2 + 16) = *((void *)result + 31);
  return result;
}

BOOL sub_100A333D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL result = sub_100A33444(a1, a2, &v8);
  if (result)
  {
    BOOL result = sub_100401610(a1, &v8, a3);
    if (result)
    {
      if (*(_DWORD *)(a2 + 12) == -1) {
        int v7 = 7;
      }
      else {
        int v7 = 6;
      }
      *(_DWORD *)(a3 + 96) = v7;
      *(_DWORD *)(a3 + 12_Block_object_dispose(va, 8) = 50;
      return 1LL;
    }
  }

  return result;
}

BOOL sub_100A33444(uint64_t a1, uint64_t a2, sqlite3_int64 *a3)
{
  uint64_t v6 = sub_10000CF44(&v41, (uint64_t)"SELECT ", 7LL);
  size_t v7 = strlen("ROWID");
  sqlite3_int64 v8 = sub_10000CF44(v6, (uint64_t)"ROWID", v7);
  uint64_t v9 = sub_10000CF44(v8, (uint64_t)" FROM ", 6LL);
  char v10 = (const char *)(a1 + 232);
  size_t v11 = strlen(v10);
  double v12 = sub_10000CF44(v9, (uint64_t)v10, v11);
  __int128 v13 = sub_10000CF44(v12, (uint64_t)" WHERE ", 7LL);
  uint64_t v14 = sub_10000CF44(v13, (uint64_t)"MCC", 3LL);
  BOOL v15 = sub_10000CF44(v14, (uint64_t)"=? AND ", 7LL);
  int v16 = sub_10000CF44(v15, (uint64_t)"MNC", 3LL);
  int v17 = sub_10000CF44(v16, (uint64_t)"=? AND ", 7LL);
  int v18 = sub_10000CF44(v17, (uint64_t)"TAC", 3LL);
  int v19 = sub_10000CF44(v18, (uint64_t)"=? AND ", 7LL);
  char v20 = sub_10000CF44(v19, (uint64_t)"CI", 2LL);
  sub_10000CF44(v20, (uint64_t)"=?", 2LL);
  std::stringbuf::str(&v48, &v42);
  if ((v48.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    BOOL v21 = &v48;
  }
  else {
    BOOL v21 = (std::stringbuf::string_type *)v48.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1 + 64, (char *)v21, buf);
  uint64_t v22 = *(void *)buf;
  *(void *)std::string buf = 0LL;
  BOOL v23 = (sqlite3_stmt *)sub_100019240(v22);
  if (sub_1003C28BC(v23, 1, *(_DWORD *)a2)
    && (__int128 v24 = (sqlite3_stmt *)sub_100019240(v22), sub_1003C28BC(v24, 2, *(_DWORD *)(a2 + 4)))
    && (int v25 = (sqlite3_stmt *)sub_100019240(v22), sub_1003C28BC(v25, 3, *(_DWORD *)(a2 + 8)))
    && (__int128 v26 = (sqlite3_stmt *)sub_100019240(v22), sub_1003C28BC(v26, 4, *(_DWORD *)(a2 + 12))))
  {
    uint64_t v27 = (sqlite3_stmt *)sub_100019240(v22);
    int v28 = sqlite3_step(v27);
    BOOL v29 = v28 == 100;
    if (v28 == 100)
    {
      uint64_t v30 = (sqlite3_stmt *)sub_100019240(v22);
      *a3 = sqlite3_column_int64(v30, 0);
    }

    int v31 = (sqlite3_stmt *)sub_100019240(v22);
    sqlite3_reset(v31);
    if (v22) {
LABEL_15:
    }
      (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101868428);
    }
    BOOL v34 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      sub_1003D2324((unsigned int *)a2, &v48);
      uint64_t v35 = (v48.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &v48
          : (std::stringbuf::string_type *)v48.__r_.__value_.__r.__words[0];
      *(_DWORD *)std::string buf = 136315138;
      *(void *)&uint8_t buf[4] = v35;
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_FAULT, "CELL_LOC: failed to bind %s", buf, 0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&v48, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101868428);
      }
      uint64_t v37 = qword_101934A78;
      sub_1003D2324((unsigned int *)a2, buf);
      if (v45 >= 0) {
        BOOL v38 = buf;
      }
      else {
        BOOL v38 = *(_BYTE **)buf;
      }
      int v46 = 136315138;
      __int16 v47 = v38;
      __int16 v39 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v48,  1628LL,  &_mh_execute_header,  v37,  17LL,  "CELL_LOC: failed to bind %s",  (const char *)&v46);
      if (v45 < 0) {
        operator delete(*(void **)buf);
      }
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLteCellLocationDatabase::getLocation(const CLTelephonyService_Type::LteCell &, sqlite3_int64 &)",  "%s\n",  (const char *)v39);
      if (v39 != &v48) {
        free(v39);
      }
    }

    uint64_t v36 = (sqlite3_stmt *)sub_100019240(v22);
    sqlite3_reset(v36);
    BOOL v29 = 0LL;
    if (v22) {
      goto LABEL_15;
    }
  }

  *(void *)((char *)v40
  uint64_t v41 = v32;
  std::streambuf::~streambuf(&v42);
  std::ios::~ios(&v43);
  return v29;
}

void sub_100A338F0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *__p,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (v59) {
    (*(void (**)(uint64_t))(*(void *)v59 + 8LL))(v59);
  }
  sub_1011F8850((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_100A33950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t *)(a1 + 256);
  if (sub_100B14D64((void *)(a1 + 256)))
  {
LABEL_22:
    sub_100B14CF8(v6, v58);
    int v28 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v58);
    if (sub_1003C28BC(v28, 1, *(_DWORD *)a2)
      && (BOOL v29 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v58), sub_1003C28BC(v29, 2, *(_DWORD *)(a2 + 4)))
      && (uint64_t v30 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v58), sub_1003C28BC(v30, 3, *(_DWORD *)(a2 + 8)))
      && (int v31 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v58), sub_1003C28BC(v31, 4, *(_DWORD *)(a2 + 12)))
      && (uint64_t v32 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v58), sub_1003C28BC(v32, 5, *(_DWORD *)(a2 + 16)))
      && (__int16 v33 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v58), sub_1003C28BC(v33, 6, *(_DWORD *)(a2 + 20))))
    {
      BOOL v34 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v58);
      sub_1003BB2BC(a1 + 64, v34);
      sqlite3_int64 v35 = sub_1003C1068(a1 + 64);
      sqlite3_int64 v56 = v35;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101868428);
      }
      uint64_t v36 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_1003D2324((unsigned int *)a2, &v59);
        uint64_t v37 = (v59.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &v59
            : (std::stringbuf::string_type *)v59.__r_.__value_.__r.__words[0];
        *(_DWORD *)unint64_t v60 = 136315394;
        *(void *)&v60[4] = v37;
        __int16 v61 = 2048;
        *(void *)int v62 = v35;
        _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "CELL_CEN: adding cell, %s, rowid, %lld",  v60,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&v59, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101868428);
        }
        uint64_t v53 = qword_101934A78;
        sub_1003D2324((unsigned int *)a2, v60);
        if (v62[9] >= 0) {
          int v54 = v60;
        }
        else {
          int v54 = *(_BYTE **)v60;
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v54;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v35;
        uint64_t v55 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v59,  1628LL,  &_mh_execute_header,  v53,  2LL,  "CELL_CEN: adding cell, %s, rowid, %lld",  (const char *)&buf,  22);
        if ((v62[9] & 0x80000000) != 0) {
          operator delete(*(void **)v60);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLteCellLocationDatabase::setLocation(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)",  "%s\n",  (const char *)v55);
        if (v55 != &v59) {
          free(v55);
        }
      }

      uint64_t v38 = sub_100401CE8((uint64_t *)a1, &v56, a3);
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101868428);
      }
      __int16 v39 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        sub_1003D2324((unsigned int *)a2, &v59);
        BOOL v40 = (v59.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &v59
            : (std::stringbuf::string_type *)v59.__r_.__value_.__r.__words[0];
        *(_DWORD *)unint64_t v60 = 136315138;
        *(void *)&v60[4] = v40;
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_FAULT, "CELL_LOC: failed to bind %s", v60, 0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&v59, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101868428);
        }
        uint64_t v46 = qword_101934A78;
        sub_1003D2324((unsigned int *)a2, v60);
        if (v62[9] >= 0) {
          __int16 v47 = v60;
        }
        else {
          __int16 v47 = *(_BYTE **)v60;
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v47;
        std::stringbuf::string_type v48 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v59,  1628LL,  &_mh_execute_header,  v46,  17LL,  "CELL_LOC: failed to bind %s",  (const char *)&buf);
        if ((v62[9] & 0x80000000) != 0) {
          operator delete(*(void **)v60);
        }
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLteCellLocationDatabase::setLocation(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)",  "%s\n",  (const char *)v48);
        if (v48 != &v59) {
          free(v48);
        }
      }

      uint64_t v41 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v58);
      sqlite3_reset(v41);
      uint64_t v38 = 0LL;
    }

    uint64_t v42 = *(void *)v58;
    *(void *)unint64_t v58 = 0LL;
    if (v42) {
      (*(void (**)(uint64_t))(*(void *)v42 + 8LL))(v42);
    }
    return v38;
  }

  sub_10000CE18((uint64_t)v60);
  size_t v7 = sub_10000CF44(&v62[2], (uint64_t)"INSERT OR REPLACE INTO ", 23LL);
  sqlite3_int64 v8 = (const char *)(a1 + 232);
  size_t v9 = strlen(v8);
  char v10 = sub_10000CF44(v7, (uint64_t)v8, v9);
  size_t v11 = sub_10000CF44(v10, (uint64_t)" (", 2LL);
  double v12 = sub_10000CF44(v11, (uint64_t)"MCC", 3LL);
  __int128 v13 = sub_10000CF44(v12, (uint64_t)", ", 2LL);
  uint64_t v14 = sub_10000CF44(v13, (uint64_t)"MNC", 3LL);
  BOOL v15 = sub_10000CF44(v14, (uint64_t)", ", 2LL);
  int v16 = sub_10000CF44(v15, (uint64_t)"TAC", 3LL);
  int v17 = sub_10000CF44(v16, (uint64_t)", ", 2LL);
  int v18 = sub_10000CF44(v17, (uint64_t)"CI", 2LL);
  int v19 = sub_10000CF44(v18, (uint64_t)", ", 2LL);
  char v20 = sub_10000CF44(v19, (uint64_t)"UARFCN", 6LL);
  BOOL v21 = sub_10000CF44(v20, (uint64_t)", ", 2LL);
  uint64_t v22 = sub_10000CF44(v21, (uint64_t)"PID", 3LL);
  sub_10000CF44(v22, (uint64_t)") VALUES (?, ?, ?, ?, ?, ?)", 27LL);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101868428);
  }
  BOOL v23 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    std::stringbuf::str(&v59, &v63);
    __int128 v24 = (v59.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &v59
        : (std::stringbuf::string_type *)v59.__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v24;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: fInsertStatement [%s]",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v59, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101868428);
    }
    uint64_t v49 = qword_101934A78;
    std::stringbuf::str(&buf, &v63);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)unint64_t v58 = 136315138;
    *(void *)&v58[4] = p_buf;
    __int16 v51 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v59,  1628LL,  &_mh_execute_header,  v49,  2LL,  "CELL_LOC: fInsertStatement [%s]",  v58);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLteCellLocationDatabase::setLocation(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)",  "%s\n",  (const char *)v51);
    if (v51 != &v59) {
      free(v51);
    }
  }

  std::stringbuf::str(&v59, &v63);
  if ((v59.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    int v25 = &v59;
  }
  else {
    int v25 = (std::stringbuf::string_type *)v59.__r_.__value_.__r.__words[0];
  }
  *(void *)(a1 + 256) = sub_1003BF158(a1 + 64, (char *)v25);
  *(void *)(a1 + 264) = v26;
  if (sub_100B14D64(v6))
  {
    *(void *)&v62[2] = v27;
    std::streambuf::~streambuf(&v63);
    std::ios::~ios(v64);
    goto LABEL_22;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101868428);
  }
  uint64_t v43 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
  {
    LOWORD(v59.__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_FAULT,  "Could not prepare cached insert statement",  (uint8_t *)&v59,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(&v59, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101868428);
    }
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    int v52 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v59,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Could not prepare cached insert statement",  &buf,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLteCellLocationDatabase::setLocation(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)",  "%s\n",  (const char *)v52);
    if (v52 != &v59) {
      free(v52);
    }
  }

  *(void *)&v62[2] = v44;
  std::streambuf::~streambuf(&v63);
  std::ios::~ios(v64);
  return 0LL;
}

void sub_100A34354( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a17) {
    (*(void (**)(uint64_t))(*(void *)a17 + 8LL))(a17);
  }
  _Unwind_Resume(a1);
}

BOOL sub_100A343D4(_BYTE *a1, uint64_t a2)
{
  BOOL result = sub_100A33444((uint64_t)a1, a2, &v4);
  if (result) {
    return sub_10040278C(a1, &v4);
  }
  return result;
}

BOOL sub_100A34410(uint64_t a1, sqlite3_int64 a2, int *a3)
{
  uint64_t v6 = sub_10000CF44(&v39, (uint64_t)"SELECT ", 7LL);
  size_t v7 = sub_10000CF44(v6, (uint64_t)"MCC", 3LL);
  sqlite3_int64 v8 = sub_10000CF44(v7, (uint64_t)", ", 2LL);
  size_t v9 = sub_10000CF44(v8, (uint64_t)"MNC", 3LL);
  char v10 = sub_10000CF44(v9, (uint64_t)", ", 2LL);
  size_t v11 = sub_10000CF44(v10, (uint64_t)"TAC", 3LL);
  double v12 = sub_10000CF44(v11, (uint64_t)", ", 2LL);
  __int128 v13 = sub_10000CF44(v12, (uint64_t)"CI", 2LL);
  uint64_t v14 = sub_10000CF44(v13, (uint64_t)" FROM ", 6LL);
  BOOL v15 = (const char *)(a1 + 232);
  size_t v16 = strlen(v15);
  int v17 = sub_10000CF44(v14, (uint64_t)v15, v16);
  int v18 = sub_10000CF44(v17, (uint64_t)" WHERE ", 7LL);
  size_t v19 = strlen("ROWID");
  char v20 = sub_10000CF44(v18, (uint64_t)"ROWID", v19);
  sub_10000CF44(v20, (uint64_t)"=?", 2LL);
  std::stringbuf::str(&v42, &v40);
  if ((v42.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    BOOL v21 = &v42;
  }
  else {
    BOOL v21 = (std::stringbuf::string_type *)v42.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1 + 64, (char *)v21, &v37);
  uint64_t v22 = v37;
  uint64_t v37 = 0LL;
  BOOL v23 = (sqlite3_stmt *)sub_100019240(v22);
  if (sub_1003C2D24(v23, 1, a2))
  {
    __int128 v24 = (sqlite3_stmt *)sub_100019240(v22);
    int v25 = sqlite3_step(v24);
    BOOL v26 = v25 == 100;
    if (v25 == 100)
    {
      uint64_t v27 = (sqlite3_stmt *)sub_100019240(v22);
      *a3 = sqlite3_column_int(v27, 0);
      int v28 = (sqlite3_stmt *)sub_100019240(v22);
      a3[1] = sqlite3_column_int(v28, 1);
      BOOL v29 = (sqlite3_stmt *)sub_100019240(v22);
      a3[2] = sqlite3_column_int(v29, 2);
      uint64_t v30 = (sqlite3_stmt *)sub_100019240(v22);
      a3[3] = sqlite3_column_int(v30, 3);
    }

    int v31 = (sqlite3_stmt *)sub_100019240(v22);
    sqlite3_reset(v31);
    if (v22) {
LABEL_12:
    }
      (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101868428);
    }
    BOOL v34 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      LOWORD(v42.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_FAULT, "could not bind", (uint8_t *)&v42, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&v42, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101868428);
      }
      LOWORD(v37) = 0;
      uint64_t v36 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v42,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "could not bind",  &v37,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLteCellLocationDatabase::getLocation(sqlite3_int64, CLTelephonyService_Type::LteCell &) const",  "%s\n",  (const char *)v36);
      if (v36 != &v42) {
        free(v36);
      }
    }

    sqlite3_int64 v35 = (sqlite3_stmt *)sub_100019240(v22);
    sqlite3_reset(v35);
    BOOL v26 = 0LL;
    if (v22) {
      goto LABEL_12;
    }
  }

  *(void *)((char *)v38
  uint64_t v39 = v32;
  std::streambuf::~streambuf(&v40);
  std::ios::~ios(&v41);
  return v26;
}

void sub_100A34820( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, void *__p, uint64_t a48, int a49, __int16 a50,char a51,char a52)
{
  if (v52) {
    (*(void (**)(uint64_t))(*(void *)v52 + 8LL))(v52);
  }
  sub_1011F8850((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_100A34878(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100A348A4()
{
  qword_10199A050 = (uint64_t)"MCC";
  dword_10199A058 = 1;
  word_10199A05C = 1;
  byte_10199A060 = 0;
  byte_10199A078 = 0;
  qword_10199A080 = (uint64_t)"MNC";
  dword_10199A088 = 1;
  word_10199A08C = 1;
  byte_10199A090 = 0;
  byte_10199A0A8 = 0;
  qword_10199A0B0 = (uint64_t)"TAC";
  dword_10199A0B8 = 1;
  word_10199A0BC = 1;
  byte_10199A0C0 = 0;
  byte_10199A0D8 = 0;
  qword_10199A0E0 = (uint64_t)"CI";
  dword_10199A0E8 = 1;
  word_10199A0EC = 1;
  byte_10199A0F0 = 0;
  byte_10199A108 = 0;
  qword_10199A110 = (uint64_t)"UARFCN";
  dword_10199A118 = 1;
  word_10199A11C = 1;
  byte_10199A120 = 0;
  byte_10199A138 = 0;
  qword_10199A140 = (uint64_t)"PID";
  dword_10199A148 = 1;
  word_10199A14C = 1;
  byte_10199A150 = 0;
  byte_10199A168 = 0;
  qword_10199A170 = (uint64_t)"Timestamp";
  dword_10199A178 = 2;
  word_10199A17C = 0;
  byte_10199A180 = 0;
  byte_10199A198 = 0;
  qword_10199A1A0 = (uint64_t)"Latitude";
  dword_10199A1A8 = 2;
  word_10199A1AC = 0;
  byte_10199A1B0 = 0;
  byte_10199A1C8 = 0;
  qword_10199A1D0 = (uint64_t)"Longitude";
  dword_10199A1D8 = 2;
  word_10199A1DC = 0;
  byte_10199A1E0 = 0;
  byte_10199A1F8 = 0;
  qword_10199A200 = (uint64_t)"HorizontalAccuracy";
  dword_10199A208 = 2;
  word_10199A20C = 0;
  byte_10199A210 = 0;
  byte_10199A228 = 0;
  qword_10199A230 = (uint64_t)"Altitude";
  dword_10199A238 = 2;
  word_10199A23C = 0;
  byte_10199A240 = 0;
  byte_10199A258 = 0;
  qword_10199A260 = (uint64_t)"VerticalAccuracy";
  dword_10199A268 = 2;
  word_10199A26C = 0;
  byte_10199A270 = 0;
  byte_10199A288 = 0;
  qword_10199A290 = (uint64_t)"Speed";
  dword_10199A298 = 2;
  word_10199A29C = 0;
  byte_10199A2A0 = 0;
  byte_10199A2B8 = 0;
  qword_10199A2C0 = (uint64_t)"Course";
  dword_10199A2C8 = 2;
  word_10199A2CC = 0;
  byte_10199A2D0 = 0;
  byte_10199A2E8 = 0;
  qword_10199A2F0 = (uint64_t)"Confidence";
  dword_10199A2F8 = 1;
  word_10199A2FC = 0;
  byte_10199A300 = 0;
  byte_10199A318 = 0;
  qword_10199A320 = 0LL;
  dword_10199A328 = 5;
  word_10199A32C = 0;
  byte_10199A330 = 0;
  byte_10199A348 = 0;
}

uint64_t sub_100A34A98(uint64_t a1, uint64_t a2, uint64_t a3, void *aBlock, double a5)
{
  *(void *)a1 = off_101868458;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = _Block_copy(aBlock);
  dispatch_retain(*(dispatch_object_t *)(a1 + 16));
  size_t v9 = objc_alloc(&OBJC_CLASS___CMActivityAlarmLocal);
  uint64_t v10 = *(void *)(a1 + 16);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  _DWORD v12[2] = sub_100A34B60;
  v12[3] = &unk_101868470;
  _DWORD v12[4] = aBlock;
  *(void *)(a1 + _Block_object_dispose(va, 8) = -[CMActivityAlarmLocal initWithTrigger:duration:onQueue:withHandler:]( v9,  "initWithTrigger:duration:onQueue:withHandler:",  a2,  v10,  v12,  a5);
  return a1;
}

uint64_t sub_100A34B60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100A34B6C(uint64_t a1)
{
  *(void *)a1 = off_101868458;
  [*(id *)(a1 + 8) invalidate];
  int v2 = *(dispatch_queue_s **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 8);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_100A34BF4;
  void v6[3] = &unk_101868498;
  uint64_t v6[4] = v4;
  void v6[5] = v3;
  dispatch_async(v2, v6);
  dispatch_release(*(dispatch_object_t *)(a1 + 16));
  return a1;
}

void sub_100A34BF4(uint64_t a1)
{
}

void sub_100A34C20(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100A34B6C(a1);
  operator delete(v1);
}

uint64_t sub_100A34C34(uint64_t a1, int a2, uint64_t a3, void *aBlock, double a5)
{
  *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = 0;
  *(void *)a1 = off_1018684C8;
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = _Block_copy(aBlock);
  *(_DWORD *)(a1 + 32) = a2;
  *(double *)(a1 + 40) = a5;
  sub_100AD558C(a1 + 48, (uint64_t)"CLSensorCalibrationStaticDetectorAccel", a1, 0.0);
  *(void *)(a1 + 96) = 0x7FEFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 104) = xmmword_101344A70;
  sqlite3_int64 v8 = &qword_101344A80;
  for (uint64_t i = 192LL; i != 152; i -= 8LL)
  {
    uint64_t v10 = *v8++;
    *(void *)(a1 + i) = v10;
  }

  *(double *)(a1 + 16_Block_object_dispose(va, 8) = -*(double *)(a1 + 168);
  *(double *)(a1 + 184) = -*(double *)(a1 + 184);
  __int128 v11 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a1 + 216) = v11;
  *(_OWORD *)(a1 + 232) = xmmword_101344A70;
  double v12 = &qword_101344A80;
  for (uint64_t j = 320LL; j != 280; j -= 8LL)
  {
    uint64_t v14 = *v12++;
    *(void *)(a1 + j) = v14;
  }

  *(double *)(a1 + 296) = -*(double *)(a1 + 296);
  *(double *)(a1 + 312) = -*(double *)(a1 + 312);
  __int128 v15 = *(_OWORD *)(a1 + 304);
  *(_OWORD *)(a1 + 32_Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 288);
  *(_OWORD *)(a1 + 344) = v15;
  *(void *)(a1 + 360) = 2LL;
  *(void *)(a1 + 36_Block_object_dispose(va, 8) = 0LL;
  size_t v16 = &qword_101344A80;
  for (uint64_t k = 448LL; k != 408; k -= 8LL)
  {
    uint64_t v18 = *v16++;
    *(void *)(a1 + k) = v18;
  }

  *(double *)(a1 + 424) = -*(double *)(a1 + 424);
  *(double *)(a1 + 440) = -*(double *)(a1 + 440);
  __int128 v19 = *(_OWORD *)(a1 + 432);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a1 + 416);
  *(_OWORD *)(a1 + 472) = v19;
  *(void *)(a1 + 48_Block_object_dispose(va, 8) = off_101850538;
  *(void *)(a1 + 496) = 128LL;
  *(void *)(a1 + 504) = off_101850568;
  *(void *)(a1 + 512) = 128LL;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 56_Block_object_dispose(va, 8) = 0u;
  *(void *)(a1 + 584) = off_101850568;
  *(void *)(a1 + 592) = 128LL;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 64_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(void *)(a1 + 664) = off_101850568;
  *(void *)(a1 + 672) = 128LL;
  *(void *)(a1 + 744) = 0LL;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 72_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 680) = 0u;
  *(_OWORD *)(a1 + 696) = 0u;
  objc_msgSend(objc_msgSend(*(id *)(a1 + 16), "silo"), "assertInside");
  unsigned __int8 v20 = atomic_load((unsigned __int8 *)&qword_10199A358);
  if ((v20 & 1) == 0) {
    goto LABEL_14;
  }
  while (1)
  {
    *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = byte_10199A350;
    if (a2 != 1 || a5 == 0.0) {
      break;
    }
    sub_101259C04();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Motion/DeviceMotion/CLSensorCalibrationStaticDetector.mm",  170,  "CLSensorCalibrationStaticDetectorAccel");
    __break(1u);
LABEL_14:
    if (__cxa_guard_acquire(&qword_10199A358))
    {
      byte_10199A350 = sub_100A34F80();
      __cxa_guard_release(&qword_10199A358);
    }
  }

  sub_1010DDBC0(__p, "ctor");
  sub_100AD5668(a1 + 48, (uint64_t *)__p);
  if (v26 < 0) {
    operator delete(__p[0]);
  }
  BOOL v21 = operator new(0x48uLL);
  sub_100A36124((uint64_t)v21, [*(id *)(a1 + 16) silo], (uint64_t)sub_100A35020, 0x40u, a1);
  *(void *)(a1 + 744) = v21;
  uint64_t v22 = sub_1006E27E8();
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472LL;
  _DWORD v24[2] = sub_100A351F8;
  v24[3] = &unk_10181D3D0;
  void v24[4] = a1;
  sub_1006E2970(v22, (uint64_t)v24);
  return a1;
}

void sub_100A34F2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
}

uint64_t sub_100A34F80()
{
  uint64_t v0 = sub_1006E27E8();
  sub_100413284(v0, &v6);
  unsigned int v1 = sub_1002A6F64(v6, "LogGyroCalibrationStaticDetectorAccelState", &v8);
  int v2 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  if (v8) {
    return v1;
  }
  else {
    return 0LL;
  }
}

void sub_100A3500C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100A35020(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101868538);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v9 = 1;
    uint64_t v6 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLSensorCalibrationStaticDetectorAccel::onAccelerometerData",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101868538);
    }
    size_t v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v11 = 0;
      __int16 v12 = 2082;
      __int128 v13 = "";
      __int16 v14 = 2082;
      __int128 v15 = "activity";
      __int16 v16 = 2050;
      uint64_t v17 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLSensorCalibrationStaticDetectorAccel::onAccelerometerData, event:%{public, locati on:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v9 = 0;
  }

  sub_100A356CC(a3, a1, a2);
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_100A351D8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100A351F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = sub_1006E5C40();
  return sub_1006DCB40(v2, 0, *(void *)(v1 + 744), 0.02);
}

void *sub_100A35228(void *a1)
{
  *a1 = off_1018684C8;
  sub_100A3526C((uint64_t)a1);
  sub_1007C3990(a1 + 61);
  sub_100AD5650(a1 + 6);
  return a1;
}

void sub_100A3526C(uint64_t a1)
{
  uint64_t v2 = *(const void **)(a1 + 24);
  if (v2)
  {
    _Block_release(v2);
    *(void *)(a1 + 24) = 0LL;
  }

  if (*(void *)(a1 + 744))
  {
    uint64_t v3 = sub_1006E5C40();
    sub_1006DD2A0(v3, 0, *(void *)(a1 + 744));
    uint64_t v4 = *(void *)(a1 + 744);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    *(void *)(a1 + 744) = 0LL;
  }

void sub_100A352EC(void *a1)
{
  uint64_t v1 = sub_100A35228(a1);
  operator delete(v1);
}

void sub_100A35300(uint64_t a1, int a2, double a3)
{
  if (*(_BYTE *)(a1 + 8))
  {
    if (qword_101934570 != -1) {
      dispatch_once(&qword_101934570, &stru_101868518);
    }
    uint64_t v6 = (os_log_s *)qword_101934578;
    if (os_log_type_enabled((os_log_t)qword_101934578, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67109376;
      int v15 = a2;
      __int16 v16 = 2048;
      double v17 = a3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "moving,%d,now,%f", buf, 0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934570 != -1) {
        dispatch_once(&qword_101934570, &stru_101868518);
      }
      v11[0] = 67109376;
      v11[1] = a2;
      __int16 v12 = 2048;
      double v13 = a3;
      LODWORD(v10) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934578,  1LL,  "moving,%d,now,%f",  v11,  v10);
      char v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSensorCalibrationStaticDetectorAccel::processStaticMoving(BOOL, CLMotionTypeTimestamp)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  if (a2)
  {
    *(void *)(a1 + 96) = 0x7FEFFFFFFFFFFFFFLL;
    if (*(_DWORD *)(a1 + 32) != 1) {
      return;
    }
    goto LABEL_14;
  }

  double v7 = *(double *)(a1 + 96);
  if (v7 > a3) {
    double v7 = a3;
  }
  *(double *)(a1 + 96) = v7;
  if (!*(_DWORD *)(a1 + 32) && v7 + *(double *)(a1 + 40) <= a3) {
LABEL_14:
  }
    sub_100A35524(a1);
}

void sub_100A35524(uint64_t a1)
{
  if (qword_101934570 != -1) {
    dispatch_once(&qword_101934570, &stru_101868518);
  }
  uint64_t v2 = (os_log_s *)qword_101934578;
  if (os_log_type_enabled((os_log_t)qword_101934578, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "CLSensorCalibrationStaticDetectorAccel::fire()",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934570 != -1) {
      dispatch_once(&qword_101934570, &stru_101868518);
    }
    v5[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934578,  1LL,  "CLSensorCalibrationStaticDetectorAccel::fire()",  v5,  2);
    uint64_t v4 = (uint8_t *)v3;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSensorCalibrationStaticDetectorAccel::fire()", "%s\n", v3);
    if (v4 != buf) {
      free(v4);
    }
  }

  objc_msgSend(objc_msgSend(*(id *)(a1 + 16), "silo"), "async:", *(void *)(a1 + 24));
  sub_100A3526C(a1);
}

void sub_100A356CC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  double v65 = *(double *)&a2;
  objc_msgSend(objc_msgSend(*(id *)(a1 + 16), "silo"), "assertInside");
  HIDWORD(v64) = a3;
  if (a3)
  {
    uint64_t v5 = 24LL * a3;
    uint64_t v6 = (float *)(*(void *)&v65 + 16LL);
    int v66 = 134219008;
    do
    {
      int v7 = sub_100A35F68((uint64_t *)(a1 + 104), *(v6 - 2));
      int v8 = sub_100A35F68((uint64_t *)(a1 + 232), *(v6 - 1));
      int v9 = v7 ^ sub_100A35F68((uint64_t *)(a1 + 360), *v6);
      if (v7 != v8 || v9 != 0) {
        sub_101259D74();
      }
      if (*(_BYTE *)(a1 + 8))
      {
        if (qword_101934570 != -1) {
          dispatch_once(&qword_101934570, &stru_101868518);
        }
        int v11 = (os_log_s *)qword_101934578;
        if (os_log_type_enabled((os_log_t)qword_101934578, OS_LOG_TYPE_INFO))
        {
          double v12 = *(v6 - 2);
          double v13 = *(v6 - 1);
          double v14 = *v6;
          uint64_t v15 = *((void *)v6 - 2);
          *(_DWORD *)std::stringbuf::string_type buf = 134218752;
          *(double *)&uint8_t buf[4] = v12;
          __int16 v78 = 2048;
          double v79 = v13;
          __int16 v80 = 2048;
          double v81 = v14;
          __int16 v82 = 2048;
          uint64_t v83 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "RawAccelerometer,x,%20.20f,y,%20.20f,z,%20.20f,timestamp,%20.20f",  buf,  0x2Au);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934570 != -1) {
            dispatch_once(&qword_101934570, &stru_101868518);
          }
          double v22 = *(v6 - 2);
          double v23 = *(v6 - 1);
          double v24 = *v6;
          uint64_t v25 = *((void *)v6 - 2);
          *(_DWORD *)__int128 v68 = 134218752;
          *(double *)&v68[4] = v22;
          __int16 v69 = 2048;
          double v70 = v23;
          __int16 v71 = 2048;
          double v72 = v24;
          __int16 v73 = 2048;
          uint64_t v74 = v25;
          LODWORD(v63) = 42;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934578,  1LL,  "RawAccelerometer,x,%20.20f,y,%20.20f,z,%20.20f,timestamp,%20.20f",  COERCE_DOUBLE(v68),  v63,  v64,  v65);
          uint64_t v27 = (char *)v26;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSensorCalibrationStaticDetectorAccel::onAccelerometerData(const CLAccelerometer::Sample *, unsigned int)",  "%s\n",  v26);
          if (v27 != buf) {
            free(v27);
          }
        }

        if (qword_101934570 != -1) {
          dispatch_once(&qword_101934570, &stru_101868518);
        }
        __int16 v16 = (os_log_s *)qword_101934578;
        if (os_log_type_enabled((os_log_t)qword_101934578, OS_LOG_TYPE_INFO))
        {
          uint64_t v17 = *(void *)(a1 + 8LL * *(void *)(a1 + 112) + 120);
          double v18 = *(double *)(a1 + 8LL * *(void *)(a1 + 240) + 248);
          double v19 = *(double *)(a1 + 8LL * *(void *)(a1 + 368) + 376);
          uint64_t v20 = *((void *)v6 - 2);
          *(_DWORD *)std::stringbuf::string_type buf = v66;
          *(void *)&uint8_t buf[4] = v17;
          __int16 v78 = 2048;
          double v79 = v18;
          __int16 v80 = 2048;
          double v81 = v19;
          __int16 v82 = 2048;
          uint64_t v83 = v20;
          __int16 v84 = 1024;
          BOOL v85 = v7;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "FilteredAccelerometer,x,%20.20f,y,%20.20f,z,%20.20f,timestamp,%20.20f,readyX,%d",  buf,  0x30u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934570 != -1) {
            dispatch_once(&qword_101934570, &stru_101868518);
          }
          uint64_t v28 = *(void *)(a1 + 8LL * *(void *)(a1 + 112) + 120);
          double v29 = *(double *)(a1 + 8LL * *(void *)(a1 + 240) + 248);
          double v30 = *(double *)(a1 + 8LL * *(void *)(a1 + 368) + 376);
          uint64_t v31 = *((void *)v6 - 2);
          *(_DWORD *)__int128 v68 = v66;
          *(void *)&v68[4] = v28;
          __int16 v69 = 2048;
          double v70 = v29;
          __int16 v71 = 2048;
          double v72 = v30;
          __int16 v73 = 2048;
          uint64_t v74 = v31;
          __int16 v75 = 1024;
          BOOL v76 = v7;
          LODWORD(v63) = 48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934578,  1LL,  "FilteredAccelerometer,x,%20.20f,y,%20.20f,z,%20.20f,timestamp,%20.20f,readyX,%d",  COERCE_DOUBLE(v68),  v63,  v64,  v65,  v66);
          __int16 v33 = (char *)v32;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSensorCalibrationStaticDetectorAccel::onAccelerometerData(const CLAccelerometer::Sample *, unsigned int)",  "%s\n",  v32);
          if (v33 != buf) {
            free(v33);
          }
        }
      }

      if (v7)
      {
        *(void *)std::stringbuf::string_type buf = *(void *)(a1 + 8LL * *(void *)(a1 + 112) + 120);
        uint64_t v21 = *(void *)(a1 + 8LL * *(void *)(a1 + 240) + 248);
        uint64_t v67 = *(void *)(a1 + 8LL * *(void *)(a1 + 368) + 376);
        *(void *)__int128 v68 = v21;
        sub_1007C3A68(a1 + 504, (double *)buf);
        sub_1007C3A68(a1 + 584, (double *)v68);
        sub_1007C3A68(a1 + 664, (double *)&v67);
      }

      v6 += 6;
      v5 -= 24LL;
    }

    while (v5);
  }

  unint64_t v34 = *(void *)(a1 + 576);
  if (v34 >= *(void *)(a1 + 512))
  {
    double v35 = 0.0;
    double v36 = 0.0;
    double v37 = 0.0;
    if ((int)v34 >= 2)
    {
      unint64_t v38 = *(void *)(a1 + 656);
      double v39 = 0.0;
      double v40 = 0.0;
      if (v38) {
        double v40 = *(double *)(a1 + 600) / (double)v38;
      }
      unint64_t v41 = *(void *)(a1 + 736);
      if (v41) {
        double v39 = *(double *)(a1 + 680) / (double)v41;
      }
      unint64_t v42 = *(void *)(a1 + 568);
      uint64_t v43 = *(void *)(a1 + 576);
      double v44 = 0.0;
      double v45 = 0.0;
      double v46 = 0.0;
      double v47 = 0.0;
      unint64_t v48 = *(void *)(a1 + 648);
      double v49 = 0.0;
      double v50 = 0.0;
      unint64_t v51 = *(void *)(a1 + 728);
      do
      {
        double v46 = v46 + v52 * v52;
        double v45 = v45 + v53 * v53;
        double v44 = v44 + v54 * v54;
        double v50 = v50 + v52;
        double v49 = v49 + v53;
        double v47 = v47 + v54;
        ++v51;
        ++v48;
        ++v42;
        --v43;
      }

      while (v43);
      double v55 = v46 - v50 * v50 / (double)(int)v34;
      double v56 = (double)((int)v34 - 1);
      double v35 = v55 / v56;
      double v36 = (v45 - v49 * v49 / (double)(int)v34) / v56;
      double v37 = (v44 - v47 * v47 / (double)(int)v34) / v56;
    }

    double v57 = fabs(v35) + fabs(v36) + fabs(v37);
    if (*(_BYTE *)(a1 + 8))
    {
      if (qword_101934570 != -1) {
        dispatch_once(&qword_101934570, &stru_101868518);
      }
      unint64_t v58 = (os_log_s *)qword_101934578;
      if (os_log_type_enabled((os_log_t)qword_101934578, OS_LOG_TYPE_INFO))
      {
        uint64_t v59 = *(void *)(*(void *)&v65 + 24LL * (HIDWORD(v64) - 1));
        *(_DWORD *)std::stringbuf::string_type buf = 134219008;
        *(double *)&uint8_t buf[4] = v35;
        __int16 v78 = 2048;
        double v79 = v36;
        __int16 v80 = 2048;
        double v81 = v37;
        __int16 v82 = 2048;
        uint64_t v83 = v59;
        __int16 v84 = 1024;
        BOOL v85 = v57 >= 0.000144;
        _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_INFO,  "Variance,x,%20.20f,y,%20.20f,z,%20.20f,timestamp,%20.20f,Moving,%d",  buf,  0x30u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934570 != -1) {
          dispatch_once(&qword_101934570, &stru_101868518);
        }
        uint64_t v60 = *(void *)(*(void *)&v65 + 24LL * (HIDWORD(v64) - 1));
        *(_DWORD *)__int128 v68 = 134219008;
        *(double *)&v68[4] = v35;
        __int16 v69 = 2048;
        double v70 = v36;
        __int16 v71 = 2048;
        double v72 = v37;
        __int16 v73 = 2048;
        uint64_t v74 = v60;
        __int16 v75 = 1024;
        BOOL v76 = v57 >= 0.000144;
        LODWORD(v63) = 48;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934578,  1LL,  "Variance,x,%20.20f,y,%20.20f,z,%20.20f,timestamp,%20.20f,Moving,%d",  COERCE_DOUBLE(v68),  v63,  v64,  v65,  v66);
        int v62 = (char *)v61;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSensorCalibrationStaticDetectorAccel::onAccelerometerData(const CLAccelerometer::Sample *, unsigned int)",  "%s\n",  v61);
        if (v62 != buf) {
          free(v62);
        }
      }
    }

    sub_100A35300(a1, v57 >= 0.000144, *(double *)(*(void *)&v65 + 24LL * (HIDWORD(v64) - 1)));
  }

BOOL sub_100A35F68(uint64_t *a1, double a2)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[1];
    else {
      uint64_t v4 = 0LL;
    }
    *(double *)&a1[v4 + 2] = a2;
    else {
      uint64_t v5 = 0LL;
    }
    *a1 = v2 - 1;
  }

  else
  {
    uint64_t v6 = 0LL;
    uint64_t v7 = a1[1];
    else {
      uint64_t v8 = 0LL;
    }
    *(double *)&a1[v8 + 2] = a2;
    a2 = 0.0;
    do
    {
      a2 = a2 + *(double *)&a1[v6 + 11 - v8] * *(double *)&a1[v6 + 2];
      ++v6;
    }

    while (v6 != 5);
    else {
      uint64_t v5 = 0LL;
    }
  }

  a1[1] = v5;
  *(double *)&a1[v5 + 2] = a2;
  return v2 == 0;
}

uint64_t sub_100A36008@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>, double a5@<D0>)
{
  if (+[CMActivityAlarmLocal activityAlarmAvailable](&OBJC_CLASS___CMActivityAlarmLocal, "activityAlarmAvailable"))
  {
    double v10 = operator new(0x20uLL);
    uint64_t result = sub_100A34A98((uint64_t)v10, a1, (uint64_t)objc_msgSend(objc_msgSend(a2, "silo"), "queue"), a3, a5);
  }

  else
  {
    double v10 = operator new(0x2F0uLL);
    uint64_t result = sub_100A34C34((uint64_t)v10, a1, (uint64_t)a2, a3, a5);
  }

  *a4 = v10;
  return result;
}

void sub_100A360B4(_Unwind_Exception *a1)
{
}

void sub_100A360CC(id a1)
{
  qword_101934578 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Sensors");
}

void sub_100A360F8(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_100A36124(uint64_t a1, void *a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  *(void *)a1 = off_1018A2210;
  *(void *)a1 = off_101868568;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  id v9 = a2;
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = a3;
  *(void *)(a1 + 32) = a5;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 56) = operator new[](24LL * a4);
  *(_DWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 6_Block_object_dispose(va, 8) = a4;
  v13[0] = 0LL;
  v13[1] = v13;
  v13[2] = 0x2020000000LL;
  char v14 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472LL;
  aBlock[2] = sub_100A36278;
  aBlock[3] = &unk_10182EFC8;
  aBlock[4] = v13;
  *(void *)(a1 + 40) = _Block_copy(aBlock);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  _DWORD v11[2] = sub_100A3628C;
  v11[3] = &unk_10182EFF0;
  _DWORD v11[4] = v13;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = _Block_copy(v11);
  _Block_object_dispose(v13, 8);
  return a1;
}

void sub_100A36250( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_100A36278(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
  return result;
}

BOOL sub_100A3628C(uint64_t a1)
{
  return *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) == 0;
}

void sub_100A362A8(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100A36378(a1);
  operator delete(v1);
}

void *sub_100A362BC(void *result, uint64_t a2, __int128 *a3)
{
  uint64_t v3 = result[7] + 24LL * *((unsigned int *)result + 16);
  __int128 v4 = *a3;
  *(void *)(v3 + 16) = *((void *)a3 + 2);
  *(_OWORD *)uint64_t v3 = v4;
  unsigned int v5 = *((_DWORD *)result + 17);
  unsigned int v6 = *((_DWORD *)result + 16) + 1;
  *((_DWORD *)result + 16) = v6;
  if (v6 >= v5)
  {
    uint64_t v7 = result;
    uint64_t v9 = result[3];
    uint64_t v8 = result[4];
    uint64_t v10 = result[6];
    uint64_t v11 = result[7];
    double v12 = (void *)result[2];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    v13[2] = sub_100A363DC;
    void v13[3] = &unk_10184D6C8;
    _DWORD v13[4] = v10;
    v13[5] = v9;
    unsigned int v14 = v6;
    v13[6] = v11;
    void v13[7] = v8;
    [v12 async:v13];
    uint64_t result = operator new[](24LL * *((unsigned int *)v7 + 17));
    v7[7] = result;
    *((_DWORD *)v7 + 16) = 0;
  }

  return result;
}

uint64_t sub_100A36378(uint64_t a1)
{
  *(void *)a1 = off_101868568;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  _Block_release(*(const void **)(a1 + 40));
  _Block_release(*(const void **)(a1 + 48));

  uint64_t v2 = *(void **)(a1 + 56);
  if (v2) {
    operator delete[](v2);
  }
  return sub_1011C07F8(a1);
}

void sub_100A363DC(uint64_t a1)
{
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 32) + 16LL))()) {
    (*(void (**)(void, void, void))(a1 + 40))( *(void *)(a1 + 48),  *(unsigned int *)(a1 + 64),  *(void *)(a1 + 56));
  }
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2) {
    operator delete[](v2);
  }
}

uint64_t sub_100A3642C(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = a1 - 8;
  }
  else {
    uint64_t v1 = 0LL;
  }
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(v1 + 4_Block_object_dispose(va, 8) = _Q0;
  *(void *)(v1 + 64) = 0LL;
  *(void *)(v1 + 72) = 0LL;
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 48LL))(v1);
}

BOOL sub_100A36450(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = (double *)(a1 - 8);
  }
  else {
    uint64_t v1 = 0LL;
  }
  double v2 = (*(double (**)(double *))(*(void *)v1 + 72LL))(v1);
  v1[4] = v2;
  return v2 != -1.0;
}

uint64_t sub_100A36494(uint64_t a1, uint64_t *a2)
{
  if (a1) {
    double v2 = (void *)(a1 - 8);
  }
  else {
    double v2 = 0LL;
  }
  uint64_t v3 = *a2;
  uint64_t v4 = v2[4];
  uint64_t v5 = (*(uint64_t (**)(void *))(*v2 + 40LL))(v2);
  v2[6] = v3;
  v2[7] = v4;
  _BYTE v2[8] = 2LL;
  v2[9] = v5;
  return (*(uint64_t (**)(void *))(*v2 + 48LL))(v2);
}

BOOL sub_100A364F8(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = (double *)(a1 - 8);
  }
  else {
    uint64_t v1 = 0LL;
  }
  double v2 = (*(double (**)(double *))(*(void *)v1 + 80LL))(v1);
  _OWORD v1[5] = v2;
  return v2 != -1.0;
}

uint64_t sub_100A3653C(uint64_t a1, uint64_t *a2)
{
  if (a1) {
    double v2 = (void *)(a1 - 8);
  }
  else {
    double v2 = 0LL;
  }
  uint64_t v3 = *a2;
  uint64_t v4 = v2[5];
  uint64_t v5 = (*(uint64_t (**)(void *))(*v2 + 40LL))(v2);
  v2[6] = v3;
  v2[7] = v4;
  _BYTE v2[8] = 1LL;
  v2[9] = v5;
  return (*(uint64_t (**)(void *))(*v2 + 56LL))(v2);
}

__n128 sub_100A365A0(__n128 *a1)
{
  a1[1].n128_u64[0] = 3LL;
  a1[1].n128_u16[4] = 512;
  a1->n128_u64[0] = (unint64_t)off_101868600;
  a1->n128_u64[1] = (unint64_t)&unk_1018685A8;
  __asm { FMOV            V0.2D, #-1.0 }

  a1[2] = result;
  a1[3] = result;
  a1[4].n128_u64[0] = 0LL;
  a1[4].n128_u64[1] = 0LL;
  a1[5].n128_u32[0] = 0;
  a1[5].n128_u8[4] = 1;
  return result;
}

uint64_t sub_100A365E0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40LL))(a1);
  *(CFAbsoluteTime *)(a1 + 4_Block_object_dispose(va, 8) = Current;
  *(void *)(a1 + 56) = 0xBFF0000000000000LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 72) = v7;
  (*(void (**)(uint64_t, void *))(*(void *)a1 + 64LL))(a1, a2);
  CFAbsoluteTime v11 = CFAbsoluteTimeGetCurrent();
  if (*(_BYTE *)(a1 + 84))
  {
    unsigned __int8 v8 = atomic_load((unsigned __int8 *)&qword_10199A378);
    if ((v8 & 1) == 0 && __cxa_guard_acquire(&qword_10199A378))
    {
      *(_OWORD *)std::stringbuf::string_type __p = xmmword_101344B90;
      sub_1002C72A8(qword_10199A360, __p, 4uLL);
      __cxa_atexit((void (*)(void *))sub_1002C7328, qword_10199A360, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10199A378);
    }

    sub_1010DDBC0(__p, "CLWorkoutSeriesActivityDetectionModel");
    sub_100CDC2CC(a2, (uint64_t *)__p, (uint64_t)qword_10199A360);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    *(_BYTE *)(a1 + 84) = 0;
  }

  sub_100CCCC8C(a1 + 8, 1, (uint64_t)&v11);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88LL))(a1);
  *(_DWORD *)(a1 + 6_Block_object_dispose(va, 8) = result;
  __int128 v10 = *(_OWORD *)(a1 + 64);
  *a3 = *(_OWORD *)(a1 + 48);
  a3[1] = v10;
  return result;
}

void sub_100A3676C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

uint64_t sub_100A367A4(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96LL))(a1);
  if ((_DWORD)result)
  {
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    return sub_100CCCC8C(a1 + 8, 2, (uint64_t)&Current);
  }

  return result;
}

uint64_t sub_100A367F0(uint64_t result, uint64_t *a2)
{
  *(_DWORD *)(result + 80) = 0;
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    uint64_t v4 = (_DWORD *)result;
    do
    {
      uint64_t result = (*(uint64_t (**)(_DWORD *, void))(*(void *)v4 + 96LL))(v4, *(void *)v2);
      if ((_DWORD)result) {
        v4[20] = *(_DWORD *)(v2 + 8);
      }
      v2 += 16LL;
    }

    while (v2 != v3);
  }

  return result;
}

BOOL sub_100A36850(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40LL))(a1) == a2;
}

__n128 sub_100A36880(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0xBFF0000000000000LL;
  *(void *)(a1 + 16) = 0LL;
  *(_DWORD *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  *(__n128 *)(a1 + 104) = result;
  *(_DWORD *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 124) = 0;
  return result;
}

void sub_100A368B4(uint64_t *a1@<X1>, __int128 **a2@<X8>, float a3@<S0>)
{
  float v4 = fmaxf(a3 + -6.0, 3.0);
  float v5 = a3 + 6.0;
  uint64_t v7 = (__int128 *)*a1;
  unsigned int v6 = (__int128 *)a1[1];
  unsigned __int8 v8 = (__int128 *)*a1;
  if ((__int128 *)*a1 != v6)
  {
    unsigned __int8 v8 = (__int128 *)*a1;
    while (1)
    {
      float v9 = *((double *)v8 + 12);
      if (v5 < v9) {
        break;
      }
      float v10 = *((double *)v8 + 13);
      if (v4 > v10) {
        break;
      }
      v8 += 7;
      if (v8 == v6) {
        goto LABEL_18;
      }
    }
  }

  CFAbsoluteTime v11 = (double *)(v8 + 7);
  if (v8 != v6 && v11 != (double *)v6)
  {
    do
    {
      float v13 = v11[12];
      if (v5 >= v13)
      {
        float v14 = v11[13];
        if (v4 <= v14)
        {
          __int128 v15 = *(_OWORD *)v11;
          __int128 v16 = *((_OWORD *)v11 + 2);
          v8[1] = *((_OWORD *)v11 + 1);
          _DWORD v8[2] = v16;
          __int128 *v8 = v15;
          __int128 v17 = *((_OWORD *)v11 + 3);
          __int128 v18 = *((_OWORD *)v11 + 4);
          __int128 v19 = *((_OWORD *)v11 + 6);
          v8[5] = *((_OWORD *)v11 + 5);
          v8[6] = v19;
          uint64_t v8[3] = v17;
          _DWORD v8[4] = v18;
          v8 += 7;
        }
      }

      v11 += 14;
    }

    while (v11 != (double *)v6);
    uint64_t v7 = (__int128 *)*a1;
    unsigned int v6 = (__int128 *)a1[1];
  }

  if (v8 != v6)
  {
    unsigned int v6 = v8;
    a1[1] = (uint64_t)v8;
  }

uint64_t sub_100A369E0(void *a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void **__return_ptr, void, void, uint64_t))(*(void *)*a1 + 24LL))( &v59,  *a1,  *(unsigned int *)(a2 + 8),  6LL);
  unsigned int v6 = v59;
  if (v59 == v60)
  {
    uint64_t v39 = 0LL;
    if (!v59) {
      return v39;
    }
    goto LABEL_71;
  }

  sub_100A37DCC(v56, (uint64_t *)&v59);
  float v7 = sub_100A380D8((uint64_t)v56, 0.5);
  (*(void (**)(void **__return_ptr, void, void))(*(void *)*a1 + 152LL))( &v54,  *a1,  *(unsigned int *)(a2 + 8));
  unsigned __int8 v8 = v54;
  if (v54 != v55)
  {
    double v50 = 0LL;
    uint64_t v51 = 0LL;
    std::stringbuf::string_type __p = 0LL;
    sub_1002118E4(&__p, v54, (uint64_t)v55, 0x6DB6DB6DB6DB6DB7LL * ((v55 - (_BYTE *)v54) >> 4));
    sub_100A368B4((uint64_t *)&__p, &v52, v7);
    if (__p)
    {
      double v50 = __p;
      operator delete(__p);
    }

    float v9 = v52;
    float v10 = v53;
    if (v52 == v53) {
      goto LABEL_64;
    }
    if (qword_1019344E0 != -1) {
      dispatch_once(&qword_1019344E0, &stru_1018686D0);
    }
    CFAbsoluteTime v11 = (os_log_s *)qword_1019344E8;
    if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218496;
      double v69 = v7;
      __int16 v70 = 2048;
      uint64_t v71 = 0x6DB6DB6DB6DB6DB7LL * ((v55 - (_BYTE *)v54) >> 4);
      __int16 v72 = 2048;
      __int16 v73 = (void *)(0x6DB6DB6DB6DB6DB7LL * (v10 - v9));
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "searchMedian, %f, historicalDistributionCount, %lu, historicalMatchingDistributionCount, %lu",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344E0 != -1) {
        dispatch_once(&qword_1019344E0, &stru_1018686D0);
      }
      int v61 = 134218496;
      double v62 = v7;
      __int16 v63 = 2048;
      uint64_t v64 = 0x6DB6DB6DB6DB6DB7LL * ((v55 - (_BYTE *)v54) >> 4);
      __int16 v65 = 2048;
      int v66 = (void *)(0x6DB6DB6DB6DB6DB7LL * (v10 - v9));
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  2LL,  "searchMedian, %f, historicalDistributionCount, %lu, historicalMatchingDistributionCount, %lu",  COERCE_DOUBLE(&v61),  32,  v43);
      unint64_t v42 = (uint8_t *)v41;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLSwimLapDetect::convergedHistoricalSessionTurns(CLSwimDetectedTurn, CLSwimStrokesPerTurnDistribution &) const",  "%s\n",  v41);
      if (v42 != buf) {
        free(v42);
      }
    }

    int v12 = 0;
    float v13 = v9;
    do
    {
      v12 += *((_DWORD *)v13 + 16);
      v13 += 7;
    }

    while (v13 != v10);
    if (v12 <= 11)
    {
LABEL_64:
      uint64_t v39 = 0LL;
      if (!v9) {
        goto LABEL_66;
      }
    }

    else
    {
      double v46 = 0LL;
      double v47 = 0LL;
      unint64_t v48 = 0LL;
      uint64_t v43 = 0LL;
      double v44 = 0LL;
      float v14 = v9;
      double v45 = 0LL;
      do
      {
        float v15 = *((double *)v14 + 12);
        __int128 v16 = v47;
        if (v47 >= v48)
        {
          __int128 v18 = (float *)v46;
          uint64_t v19 = ((char *)v47 - (_BYTE *)v46) >> 2;
          unint64_t v20 = v19 + 1;
          uint64_t v21 = (char *)v48 - (_BYTE *)v46;
          else {
            unint64_t v22 = v20;
          }
          if (v22)
          {
            double v23 = (char *)sub_10000956C((uint64_t)&v48, v22);
            __int128 v18 = (float *)v46;
            __int128 v16 = v47;
          }

          else
          {
            double v23 = 0LL;
          }

          double v24 = (float *)&v23[4 * v19];
          *double v24 = v15;
          __int128 v17 = v24 + 1;
          while (v16 != v18)
          {
            int v25 = *((_DWORD *)v16-- - 1);
            *((_DWORD *)v24-- - 1) = v25;
          }

          double v46 = v24;
          double v47 = v17;
          unint64_t v48 = (float *)&v23[4 * v22];
          if (v18) {
            operator delete(v18);
          }
        }

        else
        {
          *double v47 = v15;
          __int128 v17 = v16 + 1;
        }

        double v47 = v17;
        float v26 = *((double *)v14 + 13);
        uint64_t v27 = v44;
        if (v44 >= v45)
        {
          double v29 = (float *)v43;
          uint64_t v30 = ((char *)v44 - (_BYTE *)v43) >> 2;
          unint64_t v31 = v30 + 1;
          uint64_t v32 = (char *)v45 - (_BYTE *)v43;
          else {
            unint64_t v33 = v31;
          }
          if (v33)
          {
            unint64_t v34 = (char *)sub_10000956C((uint64_t)&v45, v33);
            double v29 = (float *)v43;
            uint64_t v27 = v44;
          }

          else
          {
            unint64_t v34 = 0LL;
          }

          double v35 = (float *)&v34[4 * v30];
          *double v35 = v26;
          uint64_t v28 = v35 + 1;
          while (v27 != v29)
          {
            int v36 = *((_DWORD *)v27-- - 1);
            *((_DWORD *)v35-- - 1) = v36;
          }

          uint64_t v43 = v35;
          double v44 = v28;
          double v45 = (float *)&v34[4 * v33];
          if (v29) {
            operator delete(v29);
          }
        }

        else
        {
          *double v44 = v26;
          uint64_t v28 = v27 + 1;
        }

        double v44 = v28;
        v14 += 7;
      }

      while (v14 != v10);
      sub_100A37F40((uint64_t)buf, (float **)&v46);
      float v37 = sub_100A380D8((uint64_t)buf, 0.5);
      *(double *)(a3 + 80) = fmaxf(v37, 3.0);
      sub_100A37F40((uint64_t)&v61, (float **)&v43);
      float v38 = sub_100A380D8((uint64_t)&v61, 0.5);
      *(double *)(a3 + 8_Block_object_dispose(va, 8) = v38;
      if (v66)
      {
        uint64_t v67 = v66;
        operator delete(v66);
      }

      if (v73)
      {
        uint64_t v74 = v73;
        operator delete(v73);
      }

      if (v43)
      {
        double v44 = (float *)v43;
        operator delete(v43);
      }

      if (v46)
      {
        double v47 = (float *)v46;
        operator delete(v46);
      }

      uint64_t v39 = 1LL;
      if (!v9)
      {
LABEL_66:
        unsigned __int8 v8 = v54;
        if (!v54) {
          goto LABEL_68;
        }
        goto LABEL_67;
      }
    }

    operator delete(v9);
    goto LABEL_66;
  }

  uint64_t v39 = 0LL;
  if (v54)
  {
LABEL_67:
    double v55 = v8;
    operator delete(v8);
  }

void sub_100A36FC4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, void *a29, uint64_t a30, uint64_t a31, void *a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, void *a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, void *a44, uint64_t a45)
{
  if (v45) {
    operator delete(v45);
  }
  if (__p) {
    operator delete(__p);
  }
  if (a29) {
    operator delete(a29);
  }
  if (a32) {
    operator delete(a32);
  }
  _Unwind_Resume(exception_object);
}

float sub_100A370A0(uint64_t a1)
{
  return sub_100A380D8(a1, 0.5);
}

BOOL sub_100A370AC(uint64_t a1)
{
  (*(void (**)(void **__return_ptr))(**(void **)a1 + 24LL))(&v11);
  sub_100A37DCC(&v7, (uint64_t *)&v11);
  uint64_t v2 = v11;
  uint64_t v1 = v12;
  float v3 = v8;
  if (__p)
  {
    float v10 = __p;
    operator delete(__p);
    float v4 = v11;
    if (!v11) {
      return sqrtf(v3) <= 1.5 && (unint64_t)(v1 - v2) > 0x50;
    }
    goto LABEL_3;
  }

  float v4 = v11;
  if (v11)
  {
LABEL_3:
    int v12 = v4;
    operator delete(v4);
  }

  return sqrtf(v3) <= 1.5 && (unint64_t)(v1 - v2) > 0x50;
}

void sub_100A37148( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_100A37164@<D0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(void *)(a1 + 24) = 0LL;
  double result = -1.0;
  *(_OWORD *)(a1 + _Block_object_dispose(va, 8) = xmmword_101344C00;
  a2[1] = 0LL;
  a2[2] = 0LL;
  *a2 = 0LL;
  return result;
}

void sub_100A37184( uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void **a7@<X8>)
{
  *a7 = 0LL;
  a7[1] = 0LL;
  a7[2] = 0LL;
  uint64_t v10 = a1 + 8;
  if (*(double *)(a1 + 8) >= 0.0)
  {
    if (*((_DWORD *)a2 + 2) == 6)
    {
      __int128 v28 = *a2;
      *(void *)(a1 + 24) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v10 = v28;
      sub_100A37B38((double *)a1, 0, 0LL, a3, a4, a5, a6, (uint64_t)&v62, *(double *)a2);
      double v29 = (char *)a7[2];
      unint64_t v22 = (char *)a7[1];
      if (v22 >= v29)
      {
        unint64_t v30 = 0xAAAAAAAAAAAAAAABLL * ((v22 - (_BYTE *)*a7) >> 3);
        unint64_t v31 = v30 + 1;
        if (v30 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_100007008();
        }
        unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * ((v29 - (_BYTE *)*a7) >> 3);
        if (2 * v32 > v31) {
          unint64_t v31 = 2 * v32;
        }
        if (v32 >= 0x555555555555555LL) {
          unint64_t v33 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v33 = v31;
        }
        if (v33) {
          unint64_t v34 = (char *)sub_10000701C((uint64_t)(a7 + 2), v33);
        }
        else {
          unint64_t v34 = 0LL;
        }
        double v49 = &v34[24 * v30];
        double v50 = &v34[24 * v33];
        *(_OWORD *)double v49 = v62;
        *((void *)v49 + 2) = v63;
        uint64_t v43 = v49 + 24;
        double v52 = (char *)*a7;
        uint64_t v51 = (char *)a7[1];
        if (v51 == *a7) {
          goto LABEL_48;
        }
        do
        {
          __int128 v53 = *(_OWORD *)(v51 - 24);
          *(void *)(v49 - 11) = *(void *)(v51 - 11);
          *(_OWORD *)(v49 - 24) = v53;
          v49 -= 24;
          v51 -= 24;
        }

        while (v51 != v52);
        goto LABEL_47;
      }
    }

    else
    {
      int v35 = *((_DWORD *)a2 + 3);
      int v36 = *(_DWORD *)(a1 + 20);
      __int128 v58 = *a2;
      uint64_t v59 = *((void *)a2 + 2);
      __int128 v41 = *a2;
      *(void *)(v10 + 16) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v10 = v41;
      sub_100A37B38((double *)a1, 0, 0LL, v37, v38, v39, v40, (uint64_t)&v62, *(double *)a2);
      unint64_t v42 = (char *)a7[2];
      unint64_t v22 = (char *)a7[1];
      if (v22 >= v42)
      {
        unint64_t v44 = 0xAAAAAAAAAAAAAAABLL * ((v22 - (_BYTE *)*a7) >> 3);
        unint64_t v45 = v44 + 1;
        if (v44 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_100007008();
        }
        unint64_t v46 = 0xAAAAAAAAAAAAAAABLL * ((v42 - (_BYTE *)*a7) >> 3);
        if (2 * v46 > v45) {
          unint64_t v45 = 2 * v46;
        }
        if (v46 >= 0x555555555555555LL) {
          unint64_t v47 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v47 = v45;
        }
        if (v47) {
          unint64_t v48 = (char *)sub_10000701C((uint64_t)(a7 + 2), v47);
        }
        else {
          unint64_t v48 = 0LL;
        }
        double v49 = &v48[24 * v44];
        double v50 = &v48[24 * v47];
        *(_OWORD *)double v49 = v62;
        *((void *)v49 + 2) = v63;
        uint64_t v43 = v49 + 24;
        double v56 = (char *)*a7;
        uint64_t v51 = (char *)a7[1];
        if (v51 == *a7) {
          goto LABEL_48;
        }
        do
        {
          __int128 v57 = *(_OWORD *)(v51 - 24);
          *(void *)(v49 - 11) = *(void *)(v51 - 11);
          *(_OWORD *)(v49 - 24) = v57;
          v49 -= 24;
          v51 -= 24;
        }

        while (v51 != v56);
        goto LABEL_47;
      }
    }

void sub_100A375E8(_Unwind_Exception *exception_object)
{
  float v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(va, 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

float sub_100A37618(void *a1, __int128 *a2)
{
  uint64_t v4 = *((unsigned int *)a2 + 2);
  (*(void (**)(__int128 *__return_ptr, void, uint64_t))(*(void *)*a1 + 160LL))(&v24, *a1, v4);
  if (!sub_100A370AC((uint64_t)a1))
  {
    __int128 v14 = *a2;
    uint64_t v15 = *((void *)a2 + 2);
    if (sub_100A369E0(a1, (uint64_t)&v14, (uint64_t)&v24))
    {
      if (qword_1019344E0 != -1) {
        dispatch_once(&qword_1019344E0, &stru_1018686D0);
      }
      uint64_t v7 = (os_log_s *)qword_1019344E8;
      if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67109376;
        *(_DWORD *)&uint8_t buf[4] = 3;
        *(_WORD *)&uint8_t buf[8] = 2048;
        *(void *)&buf[10] = *((void *)&v29 + 1);
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "distribution,historicalSessionLimits,min,%d,max,%f",  buf,  0x12u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 3.0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019344E0 != -1) {
        dispatch_once(&qword_1019344E0, &stru_1018686D0);
      }
      int v16 = 67109376;
      *(_DWORD *)uint64_t v17 = 3;
      *(_WORD *)&_DWORD v17[4] = 2048;
      *(void *)&v17[6] = *((void *)&v29 + 1);
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  1LL,  "distribution,historicalSessionLimits,min,%d,max,%f",  &v16);
    }

    else
    {
      (*(void (**)(_BYTE *__return_ptr, void, uint64_t))(*(void *)*a1 + 40LL))(buf, *a1, v4);
      __int128 v28 = v21;
      __int128 v29 = v22;
      __int128 v30 = v23;
      __int128 v24 = *(_OWORD *)buf;
      __int128 v25 = *(_OWORD *)&buf[16];
      __int128 v26 = v19;
      __int128 v27 = v20;
      if (qword_1019344E0 != -1) {
        dispatch_once(&qword_1019344E0, &stru_1018686D0);
      }
      float v9 = (os_log_s *)qword_1019344E8;
      if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67109376;
        *(_DWORD *)&uint8_t buf[4] = 3;
        *(_WORD *)&uint8_t buf[8] = 2048;
        *(void *)&buf[10] = *((void *)&v29 + 1);
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "distribution,lastGood-populationLimits,min,%d,max,%f",  buf,  0x12u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 3.0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019344E0 != -1) {
        dispatch_once(&qword_1019344E0, &stru_1018686D0);
      }
      int v16 = 67109376;
      *(_DWORD *)uint64_t v17 = 3;
      *(_WORD *)&_DWORD v17[4] = 2048;
      *(void *)&v17[6] = *((void *)&v29 + 1);
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  1LL,  "distribution,lastGood-populationLimits,min,%d,max,%f",  &v16);
    }

    int v12 = (char *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::pair<float, float> CLSwimLapDetect::getLapStrokeThreshold(CLSwimDetectedTurn) const",  "%s\n",  v8);
    if (v12 != buf) {
      free(v12);
    }
    return 3.0;
  }

  (*(void (**)(_BYTE *__return_ptr, void, uint64_t))(*(void *)*a1 + 40LL))(buf, *a1, v4);
  __int128 v28 = v21;
  __int128 v29 = v22;
  __int128 v30 = v23;
  __int128 v24 = *(_OWORD *)buf;
  __int128 v25 = *(_OWORD *)&buf[16];
  __int128 v26 = v19;
  __int128 v27 = v20;
  if (qword_1019344E0 != -1) {
    dispatch_once(&qword_1019344E0, &stru_1018686D0);
  }
  float v5 = (os_log_s *)qword_1019344E8;
  if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    *(void *)&uint8_t buf[4] = v29;
    *(_WORD *)&_BYTE buf[12] = 2048;
    *(void *)&buf[14] = *((void *)&v29 + 1);
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "distribution,localLimits,min,%f,max,%f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344E0 != -1) {
      dispatch_once(&qword_1019344E0, &stru_1018686D0);
    }
    int v16 = 134218240;
    *(void *)uint64_t v17 = v29;
    *(_WORD *)&v17[8] = 2048;
    *(void *)&v17[10] = *((void *)&v29 + 1);
    LODWORD(v13) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  1LL,  "distribution,localLimits,min,%f,max,%f",  COERCE_DOUBLE(&v16),  v13);
    int v11 = (char *)v10;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::pair<float, float> CLSwimLapDetect::getLapStrokeThreshold(CLSwimDetectedTurn) const",  "%s\n",  v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  return *(double *)&v29;
}

void sub_100A37B38( double *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  int v9 = a3;
  uint64_t v23 = 0LL;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  memset(v16, 0, sizeof(v16));
  __int128 v14 = a1 + 13;
  if (a1[14] <= 0.0)
  {
    if ((*(unsigned int (**)(void, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(void **)a1 + 120LL))( *(void *)a1,  v16,  a3,  a4,  a5,  a6,  a7))
    {
      double v15 = *((double *)&v17 + 1);
    }

    else
    {
      double v15 = (*(double (**)(void))(**(void **)a1 + 184LL))(*(void *)a1);
    }
  }

  else
  {
    double v15 = *v14;
  }

  *(double *)a8 = a9;
  *(double *)(a8 + _Block_object_dispose(va, 8) = v15;
  *(_DWORD *)(a8 + 16) = a2;
  *(_BYTE *)(a8 + 20) = 0;
  sub_100A38160(a1, a8, v9);
  *(_OWORD *)__int128 v14 = *(_OWORD *)a8;
  *(double *)((char *)v14 + 13) = *(double *)(a8 + 13);
}

BOOL sub_100A37C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = sub_100A370AC(a1);
  if (v6) {
    sub_100A37C90(a1, a2, a3);
  }
  return v6;
}

void sub_100A37C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void **__return_ptr))(**(void **)a1 + 24LL))(v12);
  sub_100A37DCC(&v7, (uint64_t *)v12);
  float v4 = v9;
  *(double *)(a3 + 4_Block_object_dispose(va, 8) = v8;
  *(double *)(a3 + 72) = sqrtf(v4);
  *(double *)(a3 + 56) = sub_100A380D8((uint64_t)&v7, 0.5);
  *(_DWORD *)(a3 + 64) = v7;
  *(double *)(a3 + 96) = sub_100A380D8((uint64_t)&v7, 0.1);
  *(double *)(a3 + 104) = sub_100A380D8((uint64_t)&v7, 0.9);
  double v5 = *(double *)(a3 + 48);
  double v6 = 8.0;
  if (v5 <= 20.0) {
    double v6 = 6.0;
  }
  *(double *)(a3 + 80) = fmax(v5 - v6, 3.0);
  *(double *)(a3 + 8_Block_object_dispose(va, 8) = v5 + v6;
  if (__p)
  {
    int v11 = __p;
    operator delete(__p);
  }

  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }

void sub_100A37D98( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  int v16 = *(void **)(v14 - 40);
  if (v16)
  {
    *(void *)(v14 - 32) = v16;
    operator delete(v16);
  }

  _Unwind_Resume(exception_object);
}

void *sub_100A37DCC(void *a1, uint64_t *a2)
{
  a1[3] = 0LL;
  float v3 = (void **)(a1 + 3);
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[4] = 0LL;
  a1[5] = 0LL;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      v19[0] = v4 + 8;
      v19[1] = a1;
      __int128 v20 = v19;
      sub_100A388FC((uint64_t)a1, (uint64_t *)&v20);
      float v6 = (float)*(int *)(v4 + 8);
      float v8 = (float *)a1[4];
      unint64_t v7 = a1[5];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = (float *)*v3;
        uint64_t v11 = ((char *)v8 - (_BYTE *)*v3) >> 2;
        unint64_t v12 = v11 + 1;
        uint64_t v13 = v7 - (void)v10;
        if (v13 >> 1 > v12) {
          unint64_t v12 = v13 >> 1;
        }
        else {
          unint64_t v14 = v12;
        }
        if (v14)
        {
          double v15 = (char *)sub_10000956C((uint64_t)(a1 + 5), v14);
          uint64_t v10 = (float *)a1[3];
          float v8 = (float *)a1[4];
        }

        else
        {
          double v15 = 0LL;
        }

        int v16 = (float *)&v15[4 * v11];
        float *v16 = v6;
        float v9 = v16 + 1;
        while (v8 != v10)
        {
          int v17 = *((_DWORD *)v8-- - 1);
          *((_DWORD *)v16-- - 1) = v17;
        }

        a1[3] = v16;
        a1[4] = v9;
        a1[5] = &v15[4 * v14];
        if (v10) {
          operator delete(v10);
        }
      }

      else
      {
        float *v8 = v6;
        float v9 = v8 + 1;
      }

      a1[4] = v9;
      v4 += 16LL;
    }

    while (v4 != v5);
  }

  return a1;
}

void sub_100A37F1C(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 32) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100A37F40(uint64_t a1, float **a2)
{
  *(void *)(a1 + 24) = 0LL;
  float v3 = (void **)(a1 + 24);
  *(void *)a1 = 0LL;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    float v6 = 0LL;
    unint64_t v7 = (void *)(a1 + 40);
    do
    {
      unint64_t v8 = *(void *)a1;
      unint64_t v9 = *(void *)a1 + 1LL;
      *(void *)a1 = v9;
      float v10 = (float)(*v4 + (float)(*(float *)(a1 + 8) * (float)v8)) / (float)v9;
      *(float *)(a1 + _Block_object_dispose(va, 8) = v10;
      if (v9 >= 2) {
      if ((unint64_t)v6 >= *v7)
      }
      {
        unint64_t v12 = (char *)*v3;
        uint64_t v13 = (v6 - (_BYTE *)*v3) >> 2;
        unint64_t v14 = v13 + 1;
        uint64_t v15 = *v7 - (void)v12;
        if (v15 >> 1 > v14) {
          unint64_t v14 = v15 >> 1;
        }
        else {
          unint64_t v16 = v14;
        }
        if (v16)
        {
          int v17 = (char *)sub_10000956C(a1 + 40, v16);
          unint64_t v12 = *(char **)(a1 + 24);
          float v6 = *(char **)(a1 + 32);
        }

        else
        {
          int v17 = 0LL;
        }

        __int128 v18 = &v17[4 * v13];
        *(float *)__int128 v18 = *v4;
        uint64_t v11 = v18 + 4;
        while (v6 != v12)
        {
          int v19 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v18 - 1) = v19;
          v18 -= 4;
        }

        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = v11;
        *(void *)(a1 + 40) = &v17[4 * v16];
        if (v12) {
          operator delete(v12);
        }
      }

      else
      {
        *(float *)float v6 = *v4;
        uint64_t v11 = v6 + 4;
      }

      *(void *)(a1 + 32) = v11;
      ++v4;
      float v6 = v11;
    }

    while (v4 != v5);
  }

  return a1;
}

void sub_100A380B8(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 32) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

float sub_100A380D8(uint64_t a1, float a2)
{
  float v3 = *(float **)(a1 + 24);
  uint64_t v4 = *(float **)(a1 + 32);
  if (v3 == v4) {
    return 0.0;
  }
  if (a2 < 0.0 || a2 > 1.0) {
    sub_101259EF4();
  }
  float v6 = (float)(unint64_t)(v4 - v3 - 1) * a2;
  uint64_t v7 = (int)v6;
  unint64_t v8 = &v3[v7];
  if (v8 != v4)
  {
    sub_1002C3C90(v3, v8, v4, v6);
    float v3 = *(float **)(a1 + 24);
  }

  return v3[v7];
}

int8x16_t sub_100A38160(double *a1, uint64_t a2, int a3)
{
  int8x16_t v9 = *(int8x16_t *)a2;
  sub_100A385CC(a1, (__int128 *)a2);
  if (a3) {
    sub_100A38754((uint64_t)a1, (__int128 *)a2);
  }
  else {
    sub_100A38838((uint64_t)a1, (__int128 *)a2);
  }
  *(void *)&v6.f64[0] = v9.i64[0];
  v6.f64[1] = *(float64_t *)(a2 + 8);
  v7.f64[0] = *(float64_t *)a2;
  *(void *)&v7.f64[1] = v9.i64[1];
  int8x16_t result = vbslq_s8((int8x16_t)vcgtq_f64(v7, v6), v9, *(int8x16_t *)a2);
  *(int8x16_t *)a2 = result;
  return result;
}

void sub_100A381DC(uint64_t a1@<X0>, float *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  *a2 = 0.0;
  (*(void (**)(uint64_t *__return_ptr, double, double))(**(void **)a1 + 80LL))( a4,  *(double *)(a3 + 8),  *(double *)a3);
  uint64_t v8 = *a4;
  uint64_t v7 = a4[1];
  if (0xAAAAAAAAAAAAAAABLL * ((v7 - *a4) >> 3) > 1)
  {
    memset(__p, 0, 24);
    if (v7 != v8)
    {
      unint64_t v12 = 0LL;
      do
      {
        uint64_t v13 = v7 - 24;
        if (v7 - 24 == v8) {
          break;
        }
        float v14 = *(double *)(v7 - 24) - *(double *)(v7 - 48);
        if (v12 >= __p[2])
        {
          unint64_t v16 = (float *)__p[0];
          uint64_t v17 = ((char *)v12 - (char *)__p[0]) >> 2;
          unint64_t v18 = v17 + 1;
          int64_t v19 = (char *)__p[2] - (char *)__p[0];
          else {
            unint64_t v20 = v18;
          }
          if (v20)
          {
            __int128 v21 = (char *)sub_10000956C((uint64_t)&__p[2], v20);
            unint64_t v16 = (float *)__p[0];
            unint64_t v12 = (float *)__p[1];
          }

          else
          {
            __int128 v21 = 0LL;
          }

          __int128 v22 = (float *)&v21[4 * v17];
          *__int128 v22 = v14;
          uint64_t v15 = v22 + 1;
          while (v12 != v16)
          {
            int v23 = *((_DWORD *)v12-- - 1);
            *((_DWORD *)v22-- - 1) = v23;
          }

          __p[0] = v22;
          __p[1] = v15;
          __p[2] = &v21[4 * v20];
          if (v16) {
            operator delete(v16);
          }
        }

        else
        {
          *unint64_t v12 = v14;
          uint64_t v15 = v12 + 1;
        }

        __p[1] = v15;
        uint64_t v8 = *a4;
        unint64_t v12 = (float *)v15;
        uint64_t v7 = v13;
      }

      while (v13 != *a4);
    }

    sub_100A37F40((uint64_t)buf, (float **)__p);
    *a2 = 1.0 / sub_100A380D8((uint64_t)buf, 0.5);
    if (v33)
    {
      unint64_t v34 = v33;
      operator delete(v33);
    }

    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }

  else
  {
    if (qword_1019344E0 != -1) {
      dispatch_once(&qword_1019344E0, &stru_1018686D0);
    }
    int8x16_t v9 = (os_log_s *)qword_1019344E8;
    if (os_log_type_enabled((os_log_t)qword_1019344E8, OS_LOG_TYPE_ERROR))
    {
      unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3);
      int v11 = *(_DWORD *)(a3 + 16);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      unint64_t v30 = v10;
      __int16 v31 = 1024;
      int v32 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "lap detected with one or less strokes,strokes,%lu,lapType,%d",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344E0 != -1) {
        dispatch_once(&qword_1019344E0, &stru_1018686D0);
      }
      unint64_t v24 = 0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3);
      int v25 = *(_DWORD *)(a3 + 16);
      LODWORD(__p[0]) = 134218240;
      *(void **)((char *)__p + 4) = (void *)v24;
      WORD2(__p[1]) = 1024;
      *(_DWORD *)((char *)&__p[1] + 6) = v25;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344E8,  16LL,  "lap detected with one or less strokes,strokes,%lu,lapType,%d",  __p,  18);
      __int128 v27 = (uint8_t *)v26;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "std::vector<CLSwimDataInterface::StrokeEntry> CLSwimLapDetect::getStrokesInLap(float &, CLSwimDetectedLap) const",  "%s\n",  v26);
      if (v27 != buf) {
        free(v27);
      }
    }

    a4[1] = *a4;
  }

void sub_100A38574( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  __int128 v21 = *(void **)v19;
  if (*(void *)v19)
  {
    *(void *)(v19 + _Block_object_dispose(va, 8) = v21;
    operator delete(v21);
  }

  _Unwind_Resume(exception_object);
}

void sub_100A385CC(double *a1, __int128 *a2)
{
  __int128 v11 = *a2;
  uint64_t v12 = *((void *)a2 + 2);
  sub_100A381DC((uint64_t)a1, &v15, (uint64_t)&v11, (uint64_t *)&__p);
  uint64_t v4 = (double *)__p;
  if (__p != v14)
  {
    if (*((_BYTE *)__p + 16))
    {
      double v5 = *(double *)__p + -1.0 / v15;
    }

    else
    {
      float64x2_t v6 = (double *)__p;
      while (!*((_BYTE *)v6 + 16))
      {
        v6 += 3;
        if (v6 == v14) {
          goto LABEL_10;
        }
      }

      if (v6 != v14)
      {
        float v7 = v15;
        float v8 = 4.0;
        uint64_t v4 = v6;
        goto LABEL_11;
      }

void sub_100A38730( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A38754(uint64_t a1, __int128 *a2)
{
  __int128 v13 = *a2;
  uint64_t v14 = *((void *)a2 + 2);
  sub_100A381DC(a1, &v17, (uint64_t)&v13, (uint64_t *)&v15);
  float v3 = v15;
  uint64_t v4 = v16;
  if (v15 != v16)
  {
    double v5 = v16;
    while (v5 != v15)
    {
      float64x2_t v6 = v5 - 3;
      int v7 = *((unsigned __int8 *)v5 - 8);
      int v8 = *((_DWORD *)v5 - 4);
      if (v7) {
        BOOL v9 = v8 == 0;
      }
      else {
        BOOL v9 = 1;
      }
      double v5 = v6;
      if (!v9)
      {
        int v10 = v6 + 3;
        goto LABEL_10;
      }
    }

    int v10 = v16;
LABEL_10:
    double v11 = *(v10 - 3) + (float)(1.5 / v17);
    while (v4 != v15)
    {
      v4 -= 3;
      if (v4 == v15) {
        break;
      }
      double v12 = *(v4 - 3);
      if (*v4 - v12 > 10.0)
      {
        if (v12 < v11) {
          double v11 = *(v4 - 3);
        }
        break;
      }
    }

    *(double *)a2 = v11;
  }

  if (v3)
  {
    unint64_t v16 = v3;
    operator delete(v3);
  }

void sub_100A38838(uint64_t a1, __int128 *a2)
{
  __int128 v8 = *a2;
  uint64_t v9 = *((void *)a2 + 2);
  sub_100A381DC(a1, &v12, (uint64_t)&v8, (uint64_t *)&v10);
  float v3 = v10;
  uint64_t v4 = v11;
  if (v10 != v11)
  {
    double v5 = v11;
    while (v5 != v10)
    {
      float64x2_t v6 = (char *)(v5 - 3);
      int v7 = *((unsigned __int8 *)v5 - 8);
      v5 -= 3;
      if (v7)
      {
        uint64_t v4 = (double *)(v6 + 24);
        break;
      }
    }

    *(double *)a2 = *(v4 - 3) + (float)(1.0 / v12);
  }

  if (v3)
  {
    double v11 = v3;
    operator delete(v3);
  }

void sub_100A388D0(id a1)
{
  qword_1019344E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Swimming");
}

float sub_100A388FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  ++*(void *)a1;
  *(float *)(a1 + _Block_object_dispose(va, 8) = (float)((float)**(int **)v2
  return sub_100A38940((float *)(a1 + 12), v2);
}

float sub_100A38940(float *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (*(void *)v2 >= 2uLL)
  {
    float v3 = (float)**(int **)a2 - *(float *)(v2 + 8);
    *a1 = result;
  }

  return result;
}

uint64_t sub_100A38990(uint64_t a1, uint64_t *a2)
{
  float v3 = sub_10101B9AC((void *)a1, a2);
  *float v3 = off_101868700;
  v3[11] = 0LL;
  v3[12] = 0LL;
  v3[13] = 0LL;
  *((_DWORD *)v3 + 2_Block_object_dispose(va, 8) = 0;
  sub_10023AE2C(v5, "MinimumFTPRequiredTimeInSecondsToBeEligibleForFTPCompute", &dword_101344C18, 0);
  *(_DWORD *)(a1 + 116) = v6;
  sub_10023AE2C(v5, "NumberOfRequiredSamplesFTPWithPowerAndHR", &dword_101344C1C, 0);
  *(_DWORD *)(a1 + 120) = v6;
  sub_10023AE2C(v5, "NumberOfRequiredFTPSamplesWithPower", &dword_101344C20, 0);
  *(_DWORD *)(a1 + 124) = v6;
  return a1;
}

void sub_100A38A4C(_Unwind_Exception *a1)
{
  void *v1 = off_101868780;
  sub_10000AE14((uint64_t)(v1 + 1));
  _Unwind_Resume(a1);
}

uint64_t sub_100A38A84()
{
  return 1LL;
}

uint64_t sub_100A38A8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  float v3 = *(std::__shared_weak_count **)(a1 + 16);
  float v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)v2 + 16LL))(&v13, v2, a1);
  sub_1000F2F30((void *)(a1 + 88), &v13);
  int v6 = v14;
  if (v14)
  {
    int v7 = (unint64_t *)&v14->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  if (v12)
  {
    uint64_t v9 = (unint64_t *)&v12->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  *(void *)(a1 + 104) = 0LL;
  *(_DWORD *)(a1 + 112) = 0;
  return 1LL;
}

void sub_100A38B70( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100A38B84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 104);
}

uint64_t sub_100A38B8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  if (v2) {
    sub_100AE5528(v2);
  }
  *(void *)(a1 + 104) = 0LL;
  *(_DWORD *)(a1 + 112) = 0;
  return 1LL;
}

uint64_t sub_100A38BC0(uint64_t a1)
{
  *(void *)(a1 + 104) = 0LL;
  *(_DWORD *)(a1 + 112) = 0;
  return 1LL;
}

uint64_t sub_100A38BD0(_DWORD *a1, unsigned __int8 *uu)
{
  a1[27] = 0;
  a1[28] = 0;
  uint64_t v4 = (uint64_t *)*((void *)uu + 6);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if (v5 != v6)
  {
    int v7 = 0;
    int v8 = 0;
    do
    {
      if (*(float *)(v5 + 32) >= 0.0)
      {
        a1[27] = ++v8;
      }

      v5 += 64LL;
    }

    while (v5 != v6);
  }

  uuid_unparse(uu, out);
  return 1LL;
}

BOOL sub_100A38CBC(int *a1, int a2, uint64_t a3, double a4, double a5)
{
  return sub_100A38CD4((uint64_t)a1, a2, a1[31], a1[30], a1[29], a3, a4, a5);
}

uint64_t sub_100A38CCC()
{
  return 1LL;
}

BOOL sub_100A38CD4(uint64_t a1, int a2, int a3, int a4, int a5, uint64_t a6, double a7, double a8)
{
  if (a8 - a7 >= (double)a5)
  {
    if (sub_100A39180(a1, a3, a4, a7, a8))
    {
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_1018687C8);
      }
      unint64_t v16 = (os_log_s *)qword_1019347A8;
      if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67109378;
        int v26 = a2;
        __int16 v27 = 2080;
        uint64_t v28 = a6;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Session %d, session Id, %s, is eligible to trigger FTP calculation.",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019347A0 != -1) {
          dispatch_once(&qword_1019347A0, &stru_1018687C8);
        }
        LODWORD(v22) = 67109378;
        HIDWORD(v22) = a2;
        __int16 v23 = 2080;
        uint64_t v24 = a6;
        LODWORD(v21) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "Session %d, session Id, %s, is eligible to trigger FTP calculation.",  &v22,  v21);
        __int128 v19 = (uint8_t *)v18;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingValidSessionCounter::isValidSession(CFAbsoluteTime, CFAbsoluteTime, int, const int, const int, c onst int, char *)",  "%s\n",  v18);
        if (v19 != buf) {
          free(v19);
        }
      }

      return 1LL;
    }

    else
    {
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_1018687C8);
      }
      float v17 = (os_log_s *)qword_1019347A8;
      if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67109378;
        int v26 = a2;
        __int16 v27 = 2080;
        uint64_t v28 = a6;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Session %d, session Id, %s, is not eligible to trigger FTP calculation.",  buf,  0x12u);
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019347A0 != -1) {
          dispatch_once(&qword_1019347A0, &stru_1018687C8);
        }
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "Session %d, session Id, %s, is not eligible to trigger FTP calculation.",  &v22,  18);
        goto LABEL_30;
      }
    }
  }

  else
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_1018687C8);
    }
    uint64_t v13 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67110146;
      int v26 = a2;
      __int16 v27 = 2080;
      uint64_t v28 = a6;
      __int16 v29 = 2048;
      double v30 = a7;
      __int16 v31 = 2048;
      double v32 = a8;
      __int16 v33 = 1024;
      int v34 = a5;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Short period workout. Can not calculate FTP for session number %d, sessionId, %s. start time:%f and end time:%f, minimum required time:%d",  buf,  0x2Cu);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_1018687C8);
      }
      LODWORD(v22) = 67110146;
      HIDWORD(v22) = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "Short period workout. Can not calculate FTP for session number %d, sessionId, %s. start time:%f and end time:%f, minimum required time:%d",  &v22,  44,  v22);
LABEL_30:
      __int128 v20 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingValidSessionCounter::isValidSession(CFAbsoluteTime, CFAbsoluteTime, int, const int, const int, const int, char *)",  "%s\n",  v15);
      if (v20 != buf) {
        free(v20);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100A39180(uint64_t a1, int a2, int a3, double a4, double a5)
{
  int v10 = *(_DWORD *)(a1 + 108);
  int v9 = *(_DWORD *)(a1 + 112);
  BOOL v12 = v10 >= a2 || v9 >= a3;
  if (v12)
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_1018687C8);
    }
    uint64_t v13 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134219264;
      double v20 = a4;
      __int16 v21 = 2048;
      double v22 = a5;
      __int16 v23 = 1024;
      int v24 = v10;
      __int16 v25 = 1024;
      int v26 = a2;
      __int16 v27 = 1024;
      int v28 = v9;
      __int16 v29 = 1024;
      int v30 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "Checked session from, %f, to %f, Number of samples with power and heart rate are enough to calculate the FTP. Nu mber of samples with power: %d, required number of samples with power is %d, number of samples with power and he art rate:%d. Required number of samples with power and heart rate is %d",  buf,  0x2Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_1018687C8);
      }
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  2LL,  "Checked session from, %f, to %f, Number of samples with power and heart rate are enough to calculate the FTP. Nu mber of samples with power: %d, required number of samples with power is %d, number of samples with power and he art rate:%d. Required number of samples with power and heart rate is %d",  &v18,  46);
LABEL_25:
      float v17 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCyclingValidSessionCounter::hasEnoughHRAndPowerSamples(const CFAbsoluteTime, CFAbsoluteTime, const int, const int)",  "%s\n",  v14);
      if (v17 != buf) {
        free(v17);
      }
    }
  }

  else
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_1018687C8);
    }
    float v15 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134219264;
      double v20 = a4;
      __int16 v21 = 2048;
      double v22 = a5;
      __int16 v23 = 1024;
      int v24 = v10;
      __int16 v25 = 1024;
      int v26 = a2;
      __int16 v27 = 1024;
      int v28 = v9;
      __int16 v29 = 1024;
      int v30 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Checked session from, %f, to %f, Number of samples with power and heart rate are not enough to calculate the FTP for this session. Number of samples with power: %d, required number of samples with power is %d, number of samp les with power and heart rate:%d. Required number of samples with power and heart rate is %d",  buf,  0x2Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_1018687C8);
      }
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  0LL,  "Checked session from, %f, to %f, Number of samples with power and heart rate are not enough to calculate the FTP for this session. Number of samples with power: %d, required number of samples with power is %d, number of samp les with power and heart rate:%d. Required number of samples with power and heart rate is %d",  &v18,  46);
      goto LABEL_25;
    }
  }

  return v12;
}

void *sub_100A39524(void *a1)
{
  *a1 = off_101868700;
  sub_10000AE14((uint64_t)(a1 + 11));
  *a1 = off_101868780;
  sub_10000AE14((uint64_t)(a1 + 1));
  return a1;
}

void sub_100A3956C(void *a1)
{
  *a1 = off_101868700;
  sub_10000AE14((uint64_t)(a1 + 11));
  *a1 = off_101868780;
  sub_10000AE14((uint64_t)(a1 + 1));
  operator delete(a1);
}

__n128 sub_100A395B4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 6_Block_object_dispose(va, 8) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 40) = v3;
  *(__n128 *)(a1 + 24) = result;
  return result;
}

void sub_100A395D4(id a1)
{
  qword_1019347A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CyclingPower");
}

uint64_t sub_100A3DD88(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 32) + 56LL);
}

uint64_t sub_100A3DF24(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 32) + 120LL);
}

uint64_t sub_100A3E0A4(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 32) + 176LL);
}

void sub_100A3E4DC(id a1)
{
  qword_1019349A8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Routine");
}

__n128 sub_100A3E508(uint64_t a1)
{
  *(void *)a1 = &off_101868818;
  *(_OWORD *)(a1 + _Block_object_dispose(va, 8) = xmmword_101344C60;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

uint64_t sub_100A3E530(uint64_t a1, uint64_t *a2)
{
  int v3 = *((_DWORD *)a2 + 5);
  *(int32x2_t *)std::stringbuf::string_type buf = vrev64_s32(*(int32x2_t *)((char *)a2 + 12));
  *(_DWORD *)&uint8_t buf[8] = v3;
  sub_10050D3D4((uint64_t)buf, (float *)&v26, (int *)(a1 + 24), 2LL, 3LL);
  float v4 = *(float *)&v27;
  unsigned int v5 = sub_100A3E844(*(float *)&v27);
  if (v5 == 1)
  {
    else {
      unsigned int v5 = 1;
    }
  }

  else {
    uint64_t v6 = 2LL;
  }
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101868838);
  }
  int v7 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *a2;
    double v9 = *((float *)a2 + 2);
    double v10 = *((float *)a2 + 3);
    double v11 = *((float *)a2 + 4);
    double v12 = *((float *)a2 + 5);
    double v13 = *((float *)a2 + 6);
    double v14 = *((float *)a2 + 7);
    *(_DWORD *)std::stringbuf::string_type buf = 134220032;
    *(void *)&uint8_t buf[4] = v8;
    __int16 v45 = 2048;
    double v46 = v9;
    __int16 v47 = 2048;
    double v48 = v10;
    __int16 v49 = 2048;
    double v50 = v11;
    __int16 v51 = 2048;
    double v52 = v12;
    __int16 v53 = 2048;
    double v54 = v13;
    __int16 v55 = 2048;
    double v56 = v14;
    __int16 v57 = 2048;
    double v58 = v4;
    __int16 v59 = 1024;
    int v60 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "FST DM Features, startTime, %f, accelMag, %f, inertialAccelZMag, %f, rotationalAccelZMag, %f, rotationToAccelCorre lation, %f, pctDominanceCrownPlane, %f, gravityX, %f, pBody, %f, FSTMotionType, %d",  buf,  0x58u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101868838);
    }
    uint64_t v16 = *a2;
    double v17 = *((float *)a2 + 2);
    double v18 = *((float *)a2 + 3);
    double v19 = *((float *)a2 + 4);
    double v20 = *((float *)a2 + 5);
    double v21 = *((float *)a2 + 6);
    double v22 = *((float *)a2 + 7);
    int v26 = 134220032;
    uint64_t v27 = v16;
    __int16 v28 = 2048;
    double v29 = v17;
    __int16 v30 = 2048;
    double v31 = v18;
    __int16 v32 = 2048;
    double v33 = v19;
    __int16 v34 = 2048;
    double v35 = v20;
    __int16 v36 = 2048;
    double v37 = v21;
    __int16 v38 = 2048;
    double v39 = v22;
    __int16 v40 = 2048;
    double v41 = v4;
    __int16 v42 = 1024;
    int v43 = v6;
    LODWORD(v25) = 88;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "FST DM Features, startTime, %f, accelMag, %f, inertialAccelZMag, %f, rotationalAccelZMag, %f, rotationToAccelCorre lation, %f, pctDominanceCrownPlane, %f, gravityX, %f, pBody, %f, FSTMotionType, %d",  COERCE_DOUBLE(&v26),  v25);
    int v24 = (char *)v23;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "FSTMotionType CLFunctionalStrengthMotionClassifier::classifyMotion(const CLFunctionalStrengthDMIntermediateFeatures &)",  "%s\n",  v23);
    if (v24 != buf) {
      free(v24);
    }
  }

  return v6;
}

uint64_t sub_100A3E844(float a1)
{
  if (a1 >= 0.7) {
    unsigned int v2 = 2;
  }
  else {
    unsigned int v2 = 3;
  }
  if (a1 <= 0.4) {
    uint64_t v3 = 1LL;
  }
  else {
    uint64_t v3 = v2;
  }
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101868838);
  }
  float v4 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109376;
    int v13 = v3;
    __int16 v14 = 2048;
    double v15 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "FSTMotionClassifier, classifyByLikelihoodBody, FSTMotionType, %d, pBody, %f",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101868838);
    }
    v9[0] = 67109376;
    v9[1] = v3;
    __int16 v10 = 2048;
    double v11 = a1;
    LODWORD(v_Block_object_dispose(va, 8) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "FSTMotionClassifier, classifyByLikelihoodBody, FSTMotionType, %d, pBody, %f",  v9,  v8);
    int v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "FSTMotionType CLFunctionalStrengthMotionClassifier::classifyByLikelihoodBody(const float)",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  return v3;
}

uint64_t sub_100A3EA40(float a1, float a2, float a3)
{
  BOOL v4 = a3 < 0.4 && a3 > 0.2;
  BOOL v5 = a1 <= 0.4 && a1 >= 0.1;
  if (a2 <= 99.0) {
    uint64_t v6 = v5 & v4;
  }
  else {
    uint64_t v6 = 0LL;
  }
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101868838);
  }
  int v7 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109888;
    int v17 = v6;
    __int16 v18 = 1024;
    BOOL v19 = a2 <= 99.0;
    __int16 v20 = 1024;
    BOOL v21 = v4;
    __int16 v22 = 1024;
    BOOL v23 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "FSTMotionClassifier, containsBodyMotion, %d, isNotDominantlyPlanar, %d, isBodyRangeAccelZMag, %d, isModerateBodyLikelihood, %d",  buf,  0x1Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101868838);
    }
    LOWORD(v12) = 1024;
    HIWORD(v12) = a2 <= 99.0;
    BOOL v13 = v4;
    __int16 v14 = 1024;
    BOOL v15 = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "FSTMotionClassifier, containsBodyMotion, %d, isNotDominantlyPlanar, %d, isBodyRangeAccelZMag, %d, isModerateBodyLikelihood, %d",  &v11,  26,  67109888,  v12);
    __int16 v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLFunctionalStrengthMotionClassifier::containsBodyMotion(const float, const float, const float)",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  return v6;
}

BOOL sub_100A3EC98(uint64_t a1)
{
  return *(float *)(a1 + 28) < -0.6;
}

void sub_100A3ECB0(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

uint64_t sub_100A3ECDC(uint64_t result, int a2, char a3)
{
  *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(void *)__n128 result = off_101868868;
  *(_BYTE *)(result + 24) = a3;
  *(_BYTE *)(result + 25) = 0;
  *(void *)(result + 56) = 0LL;
  *(void *)(result + 64) = 0LL;
  *(_BYTE *)(result + 72) = 0;
  *(_BYTE *)(result + 73) = a2 != 0;
  return result;
}

void *sub_100A3ED0C(void *a1)
{
  *a1 = off_101868868;
  sub_100A3ED50(a1);
  sub_100A3ED9C(a1);
  sub_100A3EDE8(a1);
  return a1;
}

void *sub_100A3ED50(void *result)
{
  if (result[2])
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_1006FE6A0();
    sub_1006DD2A0(v2, 0, v1[2]);
    __n128 result = (void *)v1[2];
    if (result) {
      __n128 result = (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
    v1[2] = 0LL;
  }

  return result;
}

void *sub_100A3ED9C(void *result)
{
  if (result[1])
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_1006E5C40();
    sub_1006DD2A0(v2, 0, v1[1]);
    __n128 result = (void *)v1[1];
    if (result) {
      __n128 result = (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
    v1[1] = 0LL;
  }

  return result;
}

void *sub_100A3EDE8(void *result)
{
  if (result[7])
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_1007492FC();
    sub_1006DD2A0(v2, 0, v1[7]);
    uint64_t v3 = v1[7];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    v1[7] = 0LL;
    uint64_t v4 = sub_1007492FC();
    sub_1006DD2A0(v4, 1, v1[8]);
    __n128 result = (void *)v1[8];
    if (result) {
      __n128 result = (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
    v1[8] = 0LL;
  }

  return result;
}

uint64_t sub_100A3EE64(uint64_t result, double a2)
{
  if (!*(void *)(result + 16))
  {
    uint64_t v3 = result;
    uint64_t v4 = operator new(0x20uLL);
    *uint64_t v4 = off_1018A2210;
    *uint64_t v4 = &off_10185EBF0;
    v4[1] = 0LL;
    _DWORD v4[2] = sub_100A3EF08;
    void v4[3] = v3;
    *(void *)(v3 + 16) = v4;
    uint64_t v5 = sub_1006FE6A0();
    return sub_1006DCB40(v5, 0, *(void *)(v3 + 16), a2);
  }

  return result;
}

void sub_100A3EEF4(_Unwind_Exception *a1)
{
}

uint64_t sub_100A3EF08(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 16LL))(a2, a1);
}

void sub_100A3EF20(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 25))
  {
    uint64_t v2 = sub_10093B360();
    sub_10093B3BC(v2, (uint64_t)sub_100A3EF64, *(_BYTE *)(a1 + 24), a1);
    *(_BYTE *)(a1 + 25) = 1;
  }

void sub_100A3EF64(_OWORD *a1, uint64_t a2)
{
  v5[0] = *a1;
  *(_OWORD *)((char *)v5 + 12) = *(_OWORD *)((char *)a1 + 12);
  uint64_t v3 = sub_1006E27E8();
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_100A3F1D4;
  void v4[3] = &unk_101833598;
  void v4[4] = a2;
  sub_1006E2970(v3, (uint64_t)v4);
}

void sub_100A3EFD4(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 25))
  {
    uint64_t v2 = sub_10093B360();
    sub_10093B454(v2);
    *(_BYTE *)(a1 + 25) = 0;
  }

uint64_t sub_100A3F004(uint64_t result, double a2)
{
  if (!*(void *)(result + 8))
  {
    uint64_t v3 = result;
    uint64_t v4 = operator new(0x20uLL);
    *uint64_t v4 = off_1018A2210;
    *uint64_t v4 = &off_10185EB50;
    v4[1] = 0LL;
    _DWORD v4[2] = sub_100A3F0A8;
    void v4[3] = v3;
    *(void *)(v3 + _Block_object_dispose(va, 8) = v4;
    uint64_t v5 = sub_1006E5C40();
    return sub_1006DCB40(v5, 0, *(void *)(v3 + 8), a2);
  }

  return result;
}

void sub_100A3F094(_Unwind_Exception *a1)
{
}

uint64_t sub_100A3F0A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32LL))(a2, a1);
}

uint64_t sub_100A3F0C0(uint64_t result, double a2)
{
  if (!*(void *)(result + 56))
  {
    uint64_t v3 = result;
    uint64_t v4 = operator new(0x20uLL);
    *uint64_t v4 = off_1018A2210;
    *uint64_t v4 = &off_1018688F8;
    v4[1] = 0LL;
    _DWORD v4[2] = sub_100A3F1B0;
    void v4[3] = v3;
    *(void *)(v3 + 56) = v4;
    uint64_t v5 = sub_1007492FC();
    sub_1006DCB40(v5, 0, *(void *)(v3 + 56), a2);
    uint64_t v6 = operator new(0x20uLL);
    *uint64_t v6 = off_1018A2210;
    *uint64_t v6 = &off_1018A42E0;
    v6[1] = 0LL;
    v6[2] = sub_100A3F1C8;
    void v6[3] = v3;
    *(void *)(v3 + 64) = v6;
    uint64_t v7 = sub_1007492FC();
    __n128 result = sub_1006DCB40(v7, 1, *(void *)(v3 + 64), -1.0);
    *(_BYTE *)(v3 + 72) = 0;
  }

  return result;
}

void sub_100A3F198(_Unwind_Exception *a1)
{
}

uint64_t sub_100A3F1B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 40LL))(a2, a1);
}

_BYTE *sub_100A3F1C8(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 72) = *result;
  return result;
}

void sub_100A3F1D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  __int128 v3 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a1 + 52);
  *(_OWORD *)(v2 + 2_Block_object_dispose(va, 8) = v3;
  if (qword_101934560 != -1) {
    dispatch_once(&qword_101934560, &stru_1018688A8);
  }
  uint64_t v4 = (os_log_s *)qword_101934568;
  if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_DEBUG))
  {
    double v5 = *(float *)(a1 + 40);
    double v6 = *(float *)(a1 + 44);
    double v7 = *(float *)(a1 + 48);
    double v8 = *(float *)(a1 + 52);
    double v9 = *(float *)(a1 + 56);
    double v10 = *(float *)(a1 + 60);
    int v11 = *(unsigned __int8 *)(a1 + 64);
    *(_DWORD *)std::stringbuf::string_type buf = 136316930;
    double v37 = "GyroBias";
    __int16 v38 = 2048;
    double v39 = v5;
    __int16 v40 = 2048;
    double v41 = v6;
    __int16 v42 = 2048;
    double v43 = v7;
    __int16 v44 = 2048;
    double v45 = v8;
    __int16 v46 = 2048;
    double v47 = v9;
    __int16 v48 = 2048;
    double v49 = v10;
    __int16 v50 = 1024;
    int v51 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Type,%s,bias.x,%20.20f,bias.y,%20.20f,bias.z,%20.20f,variance.x,%20.20f,variance.y,%20.20f,variance.z,%20.20f,doin gBiasEstimation,%d",  buf,  0x4Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_1018688A8);
    }
    double v27 = *(float *)(a1 + 40);
    double v28 = *(float *)(a1 + 44);
    double v29 = *(float *)(a1 + 48);
    double v30 = *(float *)(a1 + 52);
    double v31 = *(float *)(a1 + 56);
    double v32 = *(float *)(a1 + 60);
    int v33 = *(unsigned __int8 *)(a1 + 64);
    *(_DWORD *)__int16 v55 = 136316930;
    *(void *)&v55[4] = "GyroBias";
    *(_WORD *)&v55[12] = 2048;
    *(double *)&v55[14] = v27;
    *(_WORD *)&v55[22] = 2048;
    *(double *)&v55[24] = v28;
    *(_WORD *)&v55[32] = 2048;
    *(double *)&v55[34] = v29;
    *(_WORD *)&v55[42] = 2048;
    double v56 = v30;
    __int16 v57 = 2048;
    double v58 = v31;
    __int16 v59 = 2048;
    double v60 = v32;
    __int16 v61 = 1024;
    int v62 = v33;
    LODWORD(v35) = 78;
    __int16 v34 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  2LL,  "Type,%s,bias.x,%20.20f,bias.y,%20.20f,bias.z,%20.20f,variance.x,%20.20f,variance.y,%20.20f,variance. z,%20.20f,doingBiasEstimation,%d",  v55,  v35);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSensorFusionServiceAP::onBiasAndVariance(const CLMotionTypeGyroBiasAndVariance)_block_invoke",  "%s\n",  v34);
  }

  if (*(_BYTE *)(v2 + 73))
  {
    *(void *)__int16 v55 = &off_1018586B0;
    *(void *)&v55[8] = CFAbsoluteTimeGetCurrent();
    *(_OWORD *)&v55[20] = *(_OWORD *)(a1 + 40);
    *(void *)&v55[36] = *(void *)(a1 + 56);
    LOBYTE(v56) = *(_BYTE *)(a1 + 64);
    uint64_t v12 = sub_100E00E14();
    sub_100E022E0(v12, (uint64_t)v55);
    sub_101125260(buf);
    sub_10113A68C(buf);
    v54 |= 1u;
    uint64_t v52 = *(void *)&v55[8];
    uint64_t v13 = v53;
    int v14 = *(_DWORD *)(a1 + 40);
    *(_BYTE *)(v53 + 36) |= 1u;
    *(_DWORD *)(v13 + _Block_object_dispose(va, 8) = v14;
    uint64_t v15 = v53;
    int v16 = *(_DWORD *)(a1 + 44);
    *(_BYTE *)(v53 + 36) |= 2u;
    *(_DWORD *)(v15 + 12) = v16;
    uint64_t v17 = v53;
    int v18 = *(_DWORD *)(a1 + 48);
    *(_BYTE *)(v53 + 36) |= 4u;
    *(_DWORD *)(v17 + 16) = v18;
    uint64_t v19 = v53;
    int v20 = *(_DWORD *)(a1 + 52);
    *(_BYTE *)(v53 + 36) |= 0x10u;
    *(_DWORD *)(v19 + 24) = v20;
    uint64_t v21 = v53;
    int v22 = *(_DWORD *)(a1 + 56);
    *(_BYTE *)(v53 + 36) |= 0x20u;
    *(_DWORD *)(v21 + 2_Block_object_dispose(va, 8) = v22;
    uint64_t v23 = v53;
    int v24 = *(_DWORD *)(a1 + 60);
    *(_BYTE *)(v53 + 36) |= 0x40u;
    *(_DWORD *)(v23 + 32) = v24;
    uint64_t v25 = v53;
    int v26 = *(unsigned __int8 *)(a1 + 64);
    *(_BYTE *)(v53 + 36) |= 8u;
    *(_DWORD *)(v25 + 20) = v26;
    if (qword_1019A1D00 != -1) {
      dispatch_once(&qword_1019A1D00, &stru_1018688C8);
    }
    if (qword_1019A1D08) {
      sub_1011CF3D0(qword_1019A1D08, (uint64_t)buf);
    }
    sub_101127D00((PB::Base *)buf);
  }

  if (*(_BYTE *)(v2 + 25)) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2 + 24LL))(v2, a1 + 40, a1 + 52);
  }
}

void sub_100A3F5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A3F618(id a1)
{
  qword_101934568 = (uint64_t)os_log_create("com.apple.locationd.Motion", "DeviceMotion");
}

uint64_t sub_100A3F648(__int128 **a1, __int128 *a2)
{
  uint64_t v2 = *a1;
  __int128 v3 = a1[1];
  if (*a1 == v3)
  {
    LOBYTE(v4) = 0;
  }

  else
  {
    int v4 = 0;
    __int128 v9 = *a2;
    double v5 = *a1;
    do
    {
      double v6 = v2;
      if (v2 != v5)
      {
        __int128 v12 = v9;
        __int128 v7 = *v5;
        __int128 v10 = *v2;
        __int128 v11 = v7;
        v4 += sub_100A3F6DC((double *)&v12, (double *)&v11, (double *)&v10);
      }

      uint64_t v2 = v6 + 1;
      double v5 = v6;
    }

    while (v6 + 1 != v3);
  }

  return v4 & 1;
}

BOOL sub_100A3F6DC(double *a1, double *a2, double *a3)
{
  double v3 = *a1;
  if (vabdd_f64(*a2, *a1) < 0.0000011920929)
  {
    *a2 = *a2 + 0.0000011920929;
    double v3 = *a1;
  }

  double v4 = *a3;
  if (vabdd_f64(*a3, v3) < 0.0000011920929)
  {
    double v4 = v4 + 0.0000011920929;
    *a3 = v4;
  }

  double v5 = a3[1];
  double v6 = a2[1];
  if (v5 >= v6) {
    double v7 = a2[1];
  }
  else {
    double v7 = a3[1];
  }
  double v8 = a1[1];
  if (v7 <= v8
    && (v6 >= v5 ? (double v9 = a2[1]) : (double v9 = a3[1]),
        v9 >= v8 && (*a2 >= v4 ? (double v10 = *a2) : (double v10 = v4), v10 >= *a1 && vabdd_f64(v5, v6) >= 0.0000011920929)))
  {
    return *a2 + (v8 - v6) / (v5 - v6) * (v4 - *a2) > *a1;
  }

  else
  {
    return 0LL;
  }

BOOL sub_100A3F7A4(double *a1, double *a2)
{
  if (*a2 <= a1[2] && *a2 >= *a1 && (double v2 = a2[1], v2 <= a1[3])) {
    return v2 >= a1[1];
  }
  else {
    return 0LL;
  }
}

double sub_100A3F7E8@<D0>(double **a1@<X0>, uint64_t a2@<X8>)
{
  double v2 = *a1;
  double v3 = a1[1];
  if (*a1 == v3)
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }

  else
  {
    double result = *v2;
    double v5 = v2[1];
    double v6 = *v2;
    double v7 = v5;
    do
    {
      double v8 = *v2;
      double v9 = v2[1];
      v2 += 2;
      if (v8 < result) {
        double result = v8;
      }
      if (v9 < v5) {
        double v5 = v9;
      }
      if (v6 < v8) {
        double v6 = v8;
      }
      if (v7 < v9) {
        double v7 = v9;
      }
    }

    while (v2 != v3);
    *(double *)a2 = result;
    *(double *)(a2 + _Block_object_dispose(va, 8) = v5;
    *(double *)(a2 + 16) = v6;
    *(double *)(a2 + 24) = v7;
  }

  return result;
}

uint64_t sub_100A3F844()
{
  if (qword_1019A19E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A19E0 + 8LL))(qword_1019A19E0);
  }
  if (qword_1019A19E8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A19E8 + 8LL))(qword_1019A19E8);
  }
  if (qword_1019A19F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A19F0 + 8LL))(qword_1019A19F0);
  }
  if (qword_1019A19F8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A19F8 + 8LL))(qword_1019A19F8);
  }
  if (qword_1019A1A00) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A00 + 8LL))(qword_1019A1A00);
  }
  if (qword_1019A1A08) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A08 + 8LL))(qword_1019A1A08);
  }
  if (qword_1019A1A10) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A10 + 8LL))(qword_1019A1A10);
  }
  if (qword_1019A1A18) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A18 + 8LL))(qword_1019A1A18);
  }
  if (qword_1019A1A20) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A20 + 8LL))(qword_1019A1A20);
  }
  if (qword_1019A1A28) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A28 + 8LL))(qword_1019A1A28);
  }
  if (qword_1019A1A30) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A30 + 8LL))(qword_1019A1A30);
  }
  if (qword_1019A1A38) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A38 + 8LL))(qword_1019A1A38);
  }
  if (qword_1019A1A40) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A40 + 8LL))(qword_1019A1A40);
  }
  if (qword_1019A1A48) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A48 + 8LL))(qword_1019A1A48);
  }
  if (qword_1019A1A50) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A50 + 8LL))(qword_1019A1A50);
  }
  if (qword_1019A1A58) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A58 + 8LL))(qword_1019A1A58);
  }
  if (qword_1019A1A60) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A60 + 8LL))(qword_1019A1A60);
  }
  if (qword_1019A1A68) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A68 + 8LL))(qword_1019A1A68);
  }
  if (qword_1019A1A70) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A70 + 8LL))(qword_1019A1A70);
  }
  if (qword_1019A1A78) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A78 + 8LL))(qword_1019A1A78);
  }
  if (qword_1019A1A80) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A80 + 8LL))(qword_1019A1A80);
  }
  if (qword_1019A1A88) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A88 + 8LL))(qword_1019A1A88);
  }
  if (qword_1019A1A90) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A90 + 8LL))(qword_1019A1A90);
  }
  if (qword_1019A1A98) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1A98 + 8LL))(qword_1019A1A98);
  }
  if (qword_1019A1AA0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AA0 + 8LL))(qword_1019A1AA0);
  }
  if (qword_1019A1AA8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AA8 + 8LL))(qword_1019A1AA8);
  }
  if (qword_1019A1AB0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AB0 + 8LL))(qword_1019A1AB0);
  }
  if (qword_1019A1AB8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AB8 + 8LL))(qword_1019A1AB8);
  }
  if (qword_1019A1AC0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AC0 + 8LL))(qword_1019A1AC0);
  }
  if (qword_1019A1AC8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AC8 + 8LL))(qword_1019A1AC8);
  }
  if (qword_1019A1AD0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AD0 + 8LL))(qword_1019A1AD0);
  }
  if (qword_1019A1AD8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AD8 + 8LL))(qword_1019A1AD8);
  }
  if (qword_1019A1AE0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AE0 + 8LL))(qword_1019A1AE0);
  }
  if (qword_1019A1AE8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AE8 + 8LL))(qword_1019A1AE8);
  }
  if (qword_1019A1AF0) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AF0 + 8LL))(qword_1019A1AF0);
  }
  if (qword_1019A1AF8) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1AF8 + 8LL))(qword_1019A1AF8);
  }
  if (qword_1019A1B00) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B00 + 8LL))(qword_1019A1B00);
  }
  if (qword_1019A1B08) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B08 + 8LL))(qword_1019A1B08);
  }
  if (qword_1019A1B10) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B10 + 8LL))(qword_1019A1B10);
  }
  if (qword_1019A1B18) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B18 + 8LL))(qword_1019A1B18);
  }
  if (qword_1019A1B20) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B20 + 8LL))(qword_1019A1B20);
  }
  if (qword_1019A1B28) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B28 + 8LL))(qword_1019A1B28);
  }
  if (qword_1019A1B30) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B30 + 8LL))(qword_1019A1B30);
  }
  if (qword_1019A1B38) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B38 + 8LL))(qword_1019A1B38);
  }
  if (qword_1019A1B40) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B40 + 8LL))(qword_1019A1B40);
  }
  if (qword_1019A1B48) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B48 + 8LL))(qword_1019A1B48);
  }
  if (qword_1019A1B50) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B50 + 8LL))(qword_1019A1B50);
  }
  if (qword_1019A1B58) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B58 + 8LL))(qword_1019A1B58);
  }
  if (qword_1019A1B60) {
    (*(void (**)(uint64_t))(*(void *)qword_1019A1B60 + 8LL))(qword_1019A1B60);
  }
  uint64_t result = qword_1019A1B68;
  if (qword_1019A1B68) {
    return (*(uint64_t (**)(uint64_t))(*(void *)qword_1019A1B68 + 8LL))(qword_1019A1B68);
  }
  return result;
}

void sub_100A3FD08(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10199A380 & 1) != 0) {
    return;
  }
  byte_10199A380 = 1;
  wireless_diagnostics::google::protobuf::internal::VerifyVersion( (wireless_diagnostics::google::protobuf::internal *)0x1E9808,  2005000,  (int)"/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  a4);
  double v4 = operator new(0x18uLL);
  v4[1] = 0LL;
  _DWORD v4[2] = 0LL;
  *double v4 = off_101868948;
  qword_1019A19E0 = (uint64_t)v4;
  double v5 = operator new(0x20uLL);
  v5[1] = 0LL;
  _OWORD v5[2] = 0LL;
  *double v5 = &off_1018689C0;
  *((_DWORD *)v5 + 6) = 0;
  qword_1019A19E8 = (uint64_t)v5;
  double v6 = (char *)operator new(0x30uLL);
  *(void *)double v6 = &off_101868A38;
  *(_OWORD *)(v6 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v6 + 24) = 0u;
  *((void *)v6 + 5) = 0LL;
  qword_1019A19F0 = (uint64_t)v6;
  double v7 = operator new(0x20uLL);
  v7[1] = 0LL;
  v7[2] = 0LL;
  *double v7 = &off_101868AB0;
  *((_DWORD *)v7 + 6) = 0;
  qword_1019A19F8 = (uint64_t)v7;
  double v8 = operator new(0x18uLL);
  void *v8 = off_101868B28;
  v8[1] = 0LL;
  *((_DWORD *)v8 + 4) = 0;
  qword_1019A1A00 = (uint64_t)v8;
  double v9 = operator new(0x18uLL);
  void *v9 = off_101868BA0;
  _DWORD v9[2] = 0LL;
  *((_DWORD *)v9 + 2) = 0;
  *((_BYTE *)v9 + 12) = 0;
  qword_1019A1A08 = (uint64_t)v9;
  double v10 = operator new(0x18uLL);
  void *v10 = off_101868C18;
  v10[1] = 0LL;
  *((_DWORD *)v10 + 4) = 0;
  qword_1019A1A10 = (uint64_t)v10;
  __int128 v11 = operator new(0x18uLL);
  void *v11 = off_101868C90;
  _DWORD v11[2] = 0LL;
  *((_DWORD *)v11 + 2) = 0;
  *((_BYTE *)v11 + 12) = 0;
  qword_1019A1A18 = (uint64_t)v11;
  __int128 v12 = operator new(0x18uLL);
  *__int128 v12 = off_101868D08;
  v12[1] = 0LL;
  *((_DWORD *)v12 + 4) = 0;
  qword_1019A1A20 = (uint64_t)v12;
  uint64_t v13 = operator new(0x18uLL);
  void *v13 = off_101868D80;
  v13[1] = 0LL;
  *((_DWORD *)v13 + 4) = 0;
  qword_1019A1A28 = (uint64_t)v13;
  int v14 = operator new(0x18uLL);
  *int v14 = off_101868DF8;
  v14[1] = 0LL;
  *((_DWORD *)v14 + 4) = 0;
  qword_1019A1A30 = (uint64_t)v14;
  uint64_t v15 = operator new(0x20uLL);
  *(void *)((char *)v15 + 20) = 0LL;
  void *v15 = off_101868E70;
  v15[1] = 0LL;
  *((_WORD *)v15 + _Block_object_dispose(va, 8) = 0;
  qword_1019A1A38 = (uint64_t)v15;
  int v16 = (char *)operator new(0x18uLL);
  *(void *)int v16 = off_101868EE8;
  *((_WORD *)v16 + 4) = 0;
  v16[10] = 0;
  *(void *)(v16 + 12) = 0LL;
  qword_1019A1A40 = (uint64_t)v16;
  uint64_t v17 = (char *)operator new(0x68uLL);
  *(void *)uint64_t v17 = off_101868F60;
  *(_OWORD *)(v17 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  *(_OWORD *)(v17 + 84) = 0u;
  qword_1019A1A48 = (uint64_t)v17;
  int v18 = operator new(0x28uLL);
  *(void *)((char *)v18 + 2_Block_object_dispose(va, 8) = 0LL;
  v18[1] = 0LL;
  v18[2] = 0LL;
  *int v18 = off_101868FD8;
  *((_BYTE *)v18 + 24) = 0;
  qword_1019A1A50 = (uint64_t)v18;
  uint64_t v19 = operator new(0x28uLL);
  *(void *)((char *)v19 + 2_Block_object_dispose(va, 8) = 0LL;
  v19[1] = 0LL;
  void v19[2] = 0LL;
  void *v19 = off_101869050;
  *((_BYTE *)v19 + 24) = 0;
  qword_1019A1A58 = (uint64_t)v19;
  int v20 = operator new(0x28uLL);
  *(void *)((char *)v20 + 2_Block_object_dispose(va, 8) = 0LL;
  v20[1] = 0LL;
  v20[2] = 0LL;
  *int v20 = off_1018690C8;
  *((_WORD *)v20 + 12) = 0;
  qword_1019A1A60 = (uint64_t)v20;
  uint64_t v21 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v21 = off_101869140;
  *(void *)(v21 + 44) = 0LL;
  *(_OWORD *)(v21 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  v21[40] = 0;
  qword_1019A1A68 = (uint64_t)v21;
  int v22 = operator new(0x28uLL);
  *int v22 = off_1018691B8;
  v22[1] = 0LL;
  void v22[2] = 0LL;
  void v22[3] = 0LL;
  *((_DWORD *)v22 + _Block_object_dispose(va, 8) = 0;
  qword_1019A1A70 = (uint64_t)v22;
  uint64_t v23 = operator new(0x28uLL);
  *uint64_t v23 = off_101869230;
  v23[1] = 0LL;
  _DWORD v23[2] = 0LL;
  void v23[3] = 0LL;
  *((_DWORD *)v23 + _Block_object_dispose(va, 8) = 0;
  qword_1019A1A78 = (uint64_t)v23;
  int v24 = operator new(0x20uLL);
  v24[1] = 0LL;
  _DWORD v24[2] = 0LL;
  *int v24 = off_1018692A8;
  *((_DWORD *)v24 + 6) = 0;
  qword_1019A1A80 = (uint64_t)v24;
  uint64_t v25 = (char *)operator new(0x78uLL);
  *(void *)uint64_t v25 = off_101869320;
  *((void *)v25 + 11) = 0LL;
  *((void *)v25 + 12) = 0LL;
  *((_DWORD *)v25 + 26) = 0;
  *(_OWORD *)(v25 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v25 + 24) = 0u;
  *(_OWORD *)(v25 + 40) = 0u;
  *(_OWORD *)(v25 + 56) = 0u;
  *((void *)v25 + 9) = 0LL;
  *((void *)v25 + 10) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((void *)v25 + 14) = 0LL;
  qword_1019A1A88 = (uint64_t)v25;
  int v26 = (char *)operator new(0x78uLL);
  *(void *)int v26 = off_101869398;
  *(void *)(v26 + 10_Block_object_dispose(va, 8) = 0LL;
  *(_OWORD *)(v26 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  *(_OWORD *)(v26 + 40) = 0u;
  *(_OWORD *)(v26 + 56) = 0u;
  *(_OWORD *)(v26 + 72) = 0u;
  *(_OWORD *)(v26 + 8_Block_object_dispose(va, 8) = 0u;
  v26[104] = 0;
  qword_1019A1A90 = (uint64_t)v26;
  double v27 = operator new(0x28uLL);
  *(void *)((char *)v27 + 2_Block_object_dispose(va, 8) = 0LL;
  v27[1] = 0LL;
  v27[2] = 0LL;
  *double v27 = off_101869410;
  *((_BYTE *)v27 + 24) = 0;
  qword_1019A1A98 = (uint64_t)v27;
  double v28 = (char *)operator new(0x38uLL);
  *(void *)double v28 = off_101869488;
  *(_OWORD *)(v28 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  *(_OWORD *)(v28 + 40) = 0u;
  qword_1019A1AA0 = (uint64_t)v28;
  double v29 = (char *)operator new(0x30uLL);
  *(void *)double v29 = off_101869500;
  *(_OWORD *)(v29 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v29 + 24) = 0u;
  *((_DWORD *)v29 + 10) = 0;
  qword_1019A1AA8 = (uint64_t)v29;
  double v30 = (char *)operator new(0x30uLL);
  *(void *)double v30 = off_101869578;
  *(_OWORD *)(v30 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v30 + 24) = 0u;
  *((void *)v30 + 5) = 0LL;
  qword_1019A1AB0 = (uint64_t)v30;
  double v31 = operator new(0x30uLL);
  void v31[5] = 0LL;
  void *v31 = off_1018695F0;
  v31[1] = 0LL;
  v31[2] = 0LL;
  v31[3] = 0LL;
  *((_DWORD *)v31 + _Block_object_dispose(va, 8) = 0;
  qword_1019A1AB8 = (uint64_t)v31;
  double v32 = (char *)operator new(0x28uLL);
  *(void *)double v32 = off_101869668;
  *(_OWORD *)(v32 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v32 + 24) = 0u;
  qword_1019A1AC0 = (uint64_t)v32;
  int v33 = (char *)operator new(0x30uLL);
  *(void *)int v33 = off_1018696E0;
  *(_OWORD *)(v33 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  *((void *)v33 + 5) = 0LL;
  qword_1019A1AC8 = (uint64_t)v33;
  __int16 v34 = operator new(0x20uLL);
  *__int16 v34 = &off_101869758;
  v34[1] = 0LL;
  _DWORD v34[2] = 0LL;
  void v34[3] = 0LL;
  qword_1019A1AD0 = (uint64_t)v34;
  double v35 = (char *)operator new(0x50uLL);
  *(void *)double v35 = &off_1018697D0;
  *(_OWORD *)(v35 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v35 + 24) = 0u;
  *(_OWORD *)(v35 + 40) = 0u;
  *(_OWORD *)(v35 + 56) = 0u;
  *((void *)v35 + 9) = 0LL;
  qword_1019A1AD8 = (uint64_t)v35;
  __int16 v36 = operator new(0xB0uLL);
  *(void *)__int16 v36 = off_101869848;
  v36[8] = 0u;
  v36[9] = 0u;
  v36[10] = 0u;
  *(_OWORD *)((char *)v36 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)((char *)v36 + 24) = 0u;
  *((_DWORD *)v36 + 10) = 0;
  void v36[3] = 0u;
  v36[4] = 0u;
  v36[5] = 0u;
  v36[6] = 0u;
  *(_OWORD *)((char *)v36 + 10_Block_object_dispose(va, 8) = 0u;
  qword_1019A1AE0 = (uint64_t)v36;
  double v37 = operator new(0x28uLL);
  void *v37 = off_1018698C0;
  v37[1] = 0LL;
  void v37[2] = 0LL;
  v37[3] = 0LL;
  *((_DWORD *)v37 + _Block_object_dispose(va, 8) = 0;
  qword_1019A1AE8 = (uint64_t)v37;
  __int16 v38 = operator new(0x20uLL);
  v38[1] = 0LL;
  void v38[2] = 0LL;
  void *v38 = off_101869938;
  *((_DWORD *)v38 + 6) = 0;
  qword_1019A1AF0 = (uint64_t)v38;
  double v39 = operator new(0x20uLL);
  *double v39 = &off_1018699B0;
  v39[1] = 0LL;
  v39[2] = 0LL;
  v39[3] = 0LL;
  qword_1019A1AF8 = (uint64_t)v39;
  __int16 v40 = (char *)operator new(0x30uLL);
  *(void *)__int16 v40 = off_101869A28;
  *(_OWORD *)(v40 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v40 + 24) = 0u;
  *((void *)v40 + 5) = 0LL;
  qword_1019A1B00 = (uint64_t)v40;
  double v41 = operator new(0x28uLL);
  *double v41 = off_101869AA0;
  v41[1] = 0LL;
  v41[2] = 0LL;
  v41[3] = 0LL;
  *((_DWORD *)v41 + _Block_object_dispose(va, 8) = 0;
  qword_1019A1B08 = (uint64_t)v41;
  __int16 v42 = operator new(0x20uLL);
  *__int16 v42 = off_101869B18;
  v42[1] = 0LL;
  v42[2] = 0LL;
  v42[3] = 0LL;
  qword_1019A1B10 = (uint64_t)v42;
  double v43 = (char *)operator new(0x30uLL);
  *(void *)double v43 = off_101869B90;
  *(_OWORD *)(v43 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v43 + 24) = 0u;
  *((_DWORD *)v43 + 10) = 0;
  qword_1019A1B18 = (uint64_t)v43;
  __int16 v44 = (char *)operator new(0x28uLL);
  *(void *)__int16 v44 = off_101869C08;
  *(_OWORD *)(v44 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v44 + 24) = 0u;
  qword_1019A1B20 = (uint64_t)v44;
  double v45 = (char *)operator new(0x40uLL);
  *(void *)double v45 = off_101869C80;
  *(_OWORD *)(v45 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v45 + 24) = 0u;
  *(_OWORD *)(v45 + 40) = 0u;
  *((_DWORD *)v45 + 14) = 0;
  qword_1019A1B28 = (uint64_t)v45;
  __int16 v46 = (char *)operator new(0x30uLL);
  *(void *)__int16 v46 = off_101869CF8;
  *(_OWORD *)(v46 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v46 + 24) = 0u;
  *((_DWORD *)v46 + 10) = 0;
  qword_1019A1B30 = (uint64_t)v46;
  double v47 = operator new(0x20uLL);
  v47[1] = 0LL;
  v47[2] = 0LL;
  *double v47 = &off_101869D70;
  *((_DWORD *)v47 + 6) = 0;
  qword_1019A1B38 = (uint64_t)v47;
  __int16 v48 = (char *)operator new(0x38uLL);
  *(void *)__int16 v48 = off_101869DE8;
  *(_OWORD *)(v48 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v48 + 24) = 0u;
  *(_OWORD *)(v48 + 40) = 0u;
  qword_1019A1B40 = (uint64_t)v48;
  double v49 = (char *)operator new(0x38uLL);
  *(void *)double v49 = off_101869E60;
  *(_OWORD *)(v49 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v49 + 24) = 0u;
  *(_OWORD *)(v49 + 40) = 0u;
  qword_1019A1B48 = (uint64_t)v49;
  __int16 v50 = (char *)operator new(0x28uLL);
  *(void *)__int16 v50 = off_101869ED8;
  *(_OWORD *)(v50 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v50 + 24) = 0u;
  qword_1019A1B50 = (uint64_t)v50;
  int v51 = (char *)operator new(0x28uLL);
  *(void *)int v51 = off_101869F50;
  *(_OWORD *)(v51 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v51 + 24) = 0u;
  qword_1019A1B58 = (uint64_t)v51;
  uint64_t v52 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v52 = off_101869FC8;
  *(_OWORD *)(v52 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v52 + 24) = 0u;
  qword_1019A1B60 = (uint64_t)v52;
  uint64_t v53 = (char *)operator new(0x88uLL);
  *(void *)uint64_t v53 = off_10186A040;
  *((void *)v53 + 6) = 0LL;
  *((void *)v53 + 7) = 0LL;
  *((_DWORD *)v53 + 16) = 0;
  *((void *)v53 + 16) = 0LL;
  *(_OWORD *)(v53 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v53 + 24) = 0u;
  *((_DWORD *)v53 + 10) = 0;
  *(_OWORD *)(v53 + 72) = 0u;
  *(_OWORD *)(v53 + 8_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v53 + 104) = 0u;
  *((_DWORD *)v53 + 30) = 0;
  qword_1019A1B68 = (uint64_t)v53;
  uint64_t v54 = qword_1019A19E8;
  if (qword_1019A19E0)
  {
    *(void *)(qword_1019A19E8 + _Block_object_dispose(va, 8) = qword_1019A19E0;
    uint64_t v55 = qword_1019A19F0;
    uint64_t v56 = qword_1019A19F0;
  }

  else
  {
    uint64_t v53 = (char *)sub_100A3FD08(v53);
    uint64_t v57 = qword_1019A19E8;
    *(void *)(v54 + _Block_object_dispose(va, 8) = qword_1019A19E0;
    uint64_t v55 = qword_1019A19F0;
    if (v57)
    {
      uint64_t v54 = v57;
      uint64_t v56 = qword_1019A19F0;
    }

    else
    {
      uint64_t v53 = (char *)sub_100A3FD08(v53);
      uint64_t v56 = qword_1019A19F0;
      uint64_t v54 = qword_1019A19E8;
    }
  }

  *(void *)(v55 + _Block_object_dispose(va, 8) = v54;
  uint64_t v58 = qword_1019A19F8;
  if (!v56)
  {
    sub_100A3FD08(v53);
    uint64_t v56 = qword_1019A19F0;
  }

  *(void *)(v58 + _Block_object_dispose(va, 8) = v56;
  uint64_t v59 = sub_100A4092C(qword_1019A1A48);
  uint64_t v60 = qword_1019A1A70;
  uint64_t v61 = qword_1019A1A50;
  if (!qword_1019A1A50)
  {
    uint64_t v59 = sub_100A3FD08(v59);
    uint64_t v61 = qword_1019A1A50;
  }

  *(void *)(v60 + _Block_object_dispose(va, 8) = v61;
  uint64_t v62 = qword_1019A1A58;
  if (!qword_1019A1A58)
  {
    sub_100A3FD08(v59);
    uint64_t v62 = qword_1019A1A58;
  }

  *(void *)(v60 + 16) = v62;
  sub_100A40A3C(qword_1019A1A88);
  uint64_t v63 = sub_100A40AB8(qword_1019A1A90);
  __int128 v64 = (void *)qword_1019A1AB0;
  uint64_t v65 = qword_1019A1A98;
  if (!qword_1019A1A98)
  {
    uint64_t v63 = sub_100A3FD08(v63);
    uint64_t v65 = qword_1019A1A98;
  }

  v64[2] = v65;
  uint64_t v66 = qword_1019A1AA0;
  if (!qword_1019A1AA0)
  {
    uint64_t v63 = sub_100A3FD08(v63);
    uint64_t v66 = qword_1019A1AA0;
  }

  v64[3] = v66;
  uint64_t v67 = qword_1019A1AA8;
  if (!qword_1019A1AA8)
  {
    uint64_t v63 = sub_100A3FD08(v63);
    uint64_t v67 = qword_1019A1AA8;
  }

  v64[4] = v67;
  uint64_t v68 = qword_1019A1AB8;
  uint64_t v69 = qword_1019A1AB0;
  if (!qword_1019A1AB0)
  {
    uint64_t v63 = sub_100A3FD08(v63);
    uint64_t v69 = qword_1019A1AB0;
  }

  *(void *)(v68 + _Block_object_dispose(va, 8) = v69;
  uint64_t v70 = qword_1019A1AD0;
  uint64_t v71 = qword_1019A1AC0;
  if (!qword_1019A1AC0)
  {
    uint64_t v63 = sub_100A3FD08(v63);
    uint64_t v71 = qword_1019A1AC0;
  }

  *(void *)(v70 + 16) = v71;
  uint64_t v72 = qword_1019A1AE0;
  uint64_t v73 = qword_1019A19F8;
  if (!qword_1019A19F8)
  {
    uint64_t v63 = sub_100A3FD08(v63);
    uint64_t v73 = qword_1019A19F8;
  }

  *(void *)(v72 + _Block_object_dispose(va, 8) = v73;
  uint64_t v74 = qword_1019A1AD8;
  if (!qword_1019A1AD8)
  {
    uint64_t v63 = sub_100A3FD08(v63);
    uint64_t v74 = qword_1019A1AD8;
  }

  *(void *)(v72 + 12_Block_object_dispose(va, 8) = v74;
  uint64_t v75 = qword_1019A1AF8;
  if (qword_1019A1AF0)
  {
    *(void *)(qword_1019A1AF8 + 16) = qword_1019A1AF0;
    uint64_t v76 = qword_1019A1B08;
  }

  else
  {
    uint64_t v63 = sub_100A3FD08(v63);
    uint64_t v77 = qword_1019A1AF8;
    *(void *)(v75 + 16) = qword_1019A1AF0;
    uint64_t v76 = qword_1019A1B08;
    if (v77)
    {
      uint64_t v75 = v77;
    }

    else
    {
      uint64_t v63 = sub_100A3FD08(v63);
      uint64_t v75 = qword_1019A1AF8;
    }
  }

  *(void *)(v76 + _Block_object_dispose(va, 8) = v75;
  uint64_t v78 = qword_1019A1B00;
  if (!qword_1019A1B00)
  {
    uint64_t v63 = sub_100A3FD08(v63);
    uint64_t v78 = qword_1019A1B00;
  }

  *(void *)(v76 + 16) = v78;
  uint64_t v79 = qword_1019A1B18;
  uint64_t v80 = qword_1019A1B10;
  if (qword_1019A1B10)
  {
    *(void *)(qword_1019A1B18 + 16) = qword_1019A1B10;
    double v81 = &qword_1019A1000;
  }

  else
  {
    uint64_t v82 = sub_100A3FD08(v63);
    uint64_t v80 = qword_1019A1B10;
    *(void *)(v79 + 16) = qword_1019A1B10;
    double v81 = &qword_1019A1000;
    if (!v80)
    {
      sub_100A3FD08(v82);
      uint64_t v80 = qword_1019A1B10;
    }
  }

  *(void *)(v79 + 24) = v80;
  uint64_t v83 = sub_100A40B98(v81[357]);
  __int16 v84 = (void *)qword_1019A1B30;
  uint64_t v85 = qword_1019A1AF8;
  if (!qword_1019A1AF8)
  {
    uint64_t v83 = sub_100A3FD08(v83);
    uint64_t v85 = qword_1019A1AF8;
  }

  v84[1] = v85;
  uint64_t v86 = qword_1019A1B20;
  if (qword_1019A1B20)
  {
    v84[2] = qword_1019A1B20;
    unint64_t v87 = &qword_1019A1000;
  }

  else
  {
    uint64_t v88 = sub_100A3FD08(v83);
    uint64_t v86 = qword_1019A1B20;
    v84[2] = qword_1019A1B20;
    unint64_t v87 = &qword_1019A1000;
    if (!v86)
    {
      uint64_t v95 = sub_100A3FD08(v88);
      uint64_t v86 = qword_1019A1B20;
      v84[3] = qword_1019A1B20;
      uint64_t v89 = qword_1019A1B38;
      if (!v86)
      {
        sub_100A3FD08(v95);
        uint64_t v86 = qword_1019A1B20;
      }

      goto LABEL_44;
    }
  }

  v84[3] = v86;
  uint64_t v89 = v87[359];
LABEL_44:
  *(void *)(v89 + _Block_object_dispose(va, 8) = v86;
  uint64_t v90 = sub_100A40C28(qword_1019A1B40);
  uint64_t v91 = qword_1019A1B58;
  uint64_t v92 = qword_1019A19F8;
  if (!qword_1019A19F8)
  {
    uint64_t v90 = sub_100A3FD08(v90);
    uint64_t v92 = qword_1019A19F8;
  }

  *(void *)(v91 + _Block_object_dispose(va, 8) = v92;
  uint64_t v93 = qword_1019A1B50;
  if (!qword_1019A1B50)
  {
    sub_100A3FD08(v90);
    uint64_t v93 = qword_1019A1B50;
  }

  *(void *)(v91 + 24) = v93;
  sub_100A40CBC(qword_1019A1B68);
  wireless_diagnostics::google::protobuf::internal::OnShutdown( (wireless_diagnostics::google::protobuf::internal *)sub_100A3F844,  v94);
}

double sub_100A408F0(uint64_t a1)
{
  *(void *)a1 = off_10186A040;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 12_Block_object_dispose(va, 8) = 0LL;
  double result = 0.0;
  *(_OWORD *)(a1 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 8_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_100A4092C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A1A00;
  if (!qword_1019A1A00)
  {
    double result = sub_100A3FD08();
    uint64_t v2 = qword_1019A1A00;
  }

  v1[1] = v2;
  uint64_t v3 = qword_1019A1A08;
  if (!qword_1019A1A08)
  {
    double result = sub_100A3FD08();
    uint64_t v3 = qword_1019A1A08;
  }

  v1[2] = v3;
  uint64_t v4 = qword_1019A1A10;
  if (!qword_1019A1A10)
  {
    double result = sub_100A3FD08();
    uint64_t v4 = qword_1019A1A10;
  }

  v1[3] = v4;
  uint64_t v5 = qword_1019A1A18;
  if (!qword_1019A1A18)
  {
    double result = sub_100A3FD08();
    uint64_t v5 = qword_1019A1A18;
  }

  v1[4] = v5;
  uint64_t v6 = qword_1019A1A20;
  if (!qword_1019A1A20)
  {
    double result = sub_100A3FD08();
    uint64_t v6 = qword_1019A1A20;
  }

  _OWORD v1[5] = v6;
  uint64_t v7 = qword_1019A1A28;
  if (!qword_1019A1A28)
  {
    double result = sub_100A3FD08();
    uint64_t v7 = qword_1019A1A28;
  }

  v1[6] = v7;
  uint64_t v8 = qword_1019A1A30;
  if (!qword_1019A1A30)
  {
    double result = sub_100A3FD08();
    uint64_t v8 = qword_1019A1A30;
  }

  v1[7] = v8;
  uint64_t v9 = qword_1019A1A38;
  if (!qword_1019A1A38)
  {
    double result = sub_100A3FD08();
    uint64_t v9 = qword_1019A1A38;
  }

  v1[8] = v9;
  uint64_t v10 = qword_1019A1A40;
  if (!qword_1019A1A40)
  {
    double result = sub_100A3FD08();
    uint64_t v10 = qword_1019A1A40;
  }

  v1[9] = v10;
  uint64_t v11 = qword_1019A1A00;
  if (!qword_1019A1A00)
  {
    double result = sub_100A3FD08();
    uint64_t v11 = qword_1019A1A00;
  }

  _OWORD v1[10] = v11;
  return result;
}

uint64_t sub_100A40A3C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A1A78;
  if (!qword_1019A1A78)
  {
    double result = ((uint64_t (*)(void))sub_100A3FD08)();
    uint64_t v2 = qword_1019A1A78;
  }

  v1[2] = v2;
  uint64_t v3 = qword_1019A1A80;
  if (qword_1019A1A80)
  {
    v1[3] = qword_1019A1A80;
LABEL_6:
    v1[4] = v3;
    goto LABEL_7;
  }

  double result = ((uint64_t (*)(void))sub_100A3FD08)();
  uint64_t v3 = qword_1019A1A80;
  v1[3] = qword_1019A1A80;
  if (v3) {
    goto LABEL_6;
  }
  double result = sub_100A3FD08(result);
  uint64_t v3 = qword_1019A1A80;
  v1[4] = qword_1019A1A80;
  if (!v3)
  {
    double result = sub_100A3FD08(result);
    uint64_t v3 = qword_1019A1A80;
  }

uint64_t sub_100A40AB8(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A19F8;
  if (!qword_1019A19F8)
  {
    double result = sub_100A3FD08(result);
    uint64_t v2 = qword_1019A19F8;
  }

  v1[1] = v2;
  uint64_t v3 = qword_1019A1A48;
  if (!qword_1019A1A48)
  {
    double result = sub_100A3FD08(result);
    uint64_t v3 = qword_1019A1A48;
  }

  v1[2] = v3;
  uint64_t v4 = qword_1019A1A50;
  if (!qword_1019A1A50)
  {
    double result = sub_100A3FD08(result);
    uint64_t v4 = qword_1019A1A50;
  }

  v1[6] = v4;
  uint64_t v5 = qword_1019A1A58;
  if (!qword_1019A1A58)
  {
    double result = sub_100A3FD08(result);
    uint64_t v5 = qword_1019A1A58;
  }

  v1[7] = v5;
  uint64_t v6 = qword_1019A1A68;
  if (!qword_1019A1A68)
  {
    double result = sub_100A3FD08(result);
    uint64_t v6 = qword_1019A1A68;
  }

  v1[8] = v6;
  uint64_t v7 = qword_1019A1A88;
  if (!qword_1019A1A88)
  {
    double result = sub_100A3FD08(result);
    uint64_t v7 = qword_1019A1A88;
  }

  v1[9] = v7;
  uint64_t v8 = qword_1019A1A58;
  if (!qword_1019A1A58)
  {
    double result = sub_100A3FD08(result);
    uint64_t v8 = qword_1019A1A58;
  }

  v1[11] = v8;
  uint64_t v9 = qword_1019A1A60;
  if (!qword_1019A1A60)
  {
    double result = sub_100A3FD08(result);
    uint64_t v9 = qword_1019A1A60;
  }

  v1[12] = v9;
  return result;
}

uint64_t sub_100A40B98(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A1AF8;
  if (!qword_1019A1AF8)
  {
    double result = sub_100A3FD08(result);
    uint64_t v2 = qword_1019A1AF8;
  }

  v1[1] = v2;
  uint64_t v3 = qword_1019A1B20;
  if (qword_1019A1B20)
  {
    v1[2] = qword_1019A1B20;
LABEL_6:
    v1[3] = v3;
LABEL_7:
    v1[4] = v3;
    goto LABEL_8;
  }

  double result = sub_100A3FD08(result);
  uint64_t v3 = qword_1019A1B20;
  v1[2] = qword_1019A1B20;
  if (v3) {
    goto LABEL_6;
  }
  double result = sub_100A3FD08(result);
  uint64_t v3 = qword_1019A1B20;
  v1[3] = qword_1019A1B20;
  if (v3) {
    goto LABEL_7;
  }
  double result = sub_100A3FD08(result);
  uint64_t v3 = qword_1019A1B20;
  v1[4] = qword_1019A1B20;
  if (!v3)
  {
    double result = sub_100A3FD08(result);
    uint64_t v3 = qword_1019A1B20;
  }

uint64_t sub_100A40C28(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A1B08;
  if (!qword_1019A1B08)
  {
    double result = sub_100A3FD08(result);
    uint64_t v2 = qword_1019A1B08;
  }

  v1[1] = v2;
  uint64_t v3 = qword_1019A1B18;
  if (!qword_1019A1B18)
  {
    double result = sub_100A3FD08(result);
    uint64_t v3 = qword_1019A1B18;
  }

  v1[2] = v3;
  uint64_t v4 = qword_1019A1B28;
  if (!qword_1019A1B28)
  {
    double result = sub_100A3FD08(result);
    uint64_t v4 = qword_1019A1B28;
  }

  v1[3] = v4;
  uint64_t v5 = qword_1019A1B30;
  if (!qword_1019A1B30)
  {
    double result = sub_100A3FD08(result);
    uint64_t v5 = qword_1019A1B30;
  }

  v1[4] = v5;
  uint64_t v6 = qword_1019A1B38;
  if (!qword_1019A1B38)
  {
    double result = sub_100A3FD08(result);
    uint64_t v6 = qword_1019A1B38;
  }

  _OWORD v1[5] = v6;
  return result;
}

uint64_t sub_100A40CBC(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_1019A1B60;
  if (!qword_1019A1B60)
  {
    double result = sub_100A3FD08(result);
    uint64_t v2 = qword_1019A1B60;
  }

  v1[1] = v2;
  uint64_t v3 = qword_1019A1AB8;
  if (!qword_1019A1AB8)
  {
    double result = sub_100A3FD08(result);
    uint64_t v3 = qword_1019A1AB8;
  }

  v1[2] = v3;
  uint64_t v4 = qword_1019A1B40;
  if (!qword_1019A1B40)
  {
    double result = sub_100A3FD08(result);
    uint64_t v4 = qword_1019A1B40;
  }

  v1[9] = v4;
  uint64_t v5 = qword_1019A1B48;
  if (!qword_1019A1B48)
  {
    double result = sub_100A3FD08(result);
    uint64_t v5 = qword_1019A1B48;
  }

  v1[12] = v5;
  return result;
}

void sub_100A40D38(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  541LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v5) = *(_BYTE *)(a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 20) & 1) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v6;
      int v5 = *(_DWORD *)(a2 + 20);
    }

    if ((v5 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 5) {
        sub_10125A0C0();
      }
      a1[5] |= 2u;
      a1[3] = v7;
    }
  }

void sub_100A40DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A40E04(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868948;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A40E14(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868948;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A40E34()
{
  double result = operator new(0x18uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *double result = off_101868948;
  return result;
}

uint64_t sub_100A40E5C(uint64_t result)
{
  if (*(_BYTE *)(result + 20)) {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100A40E70( unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v8 = TagFallback & 7;
      uint64_t v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!(_DWORD)result) {
          return result;
        }
        __int128 v12 = (_BYTE *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }

      else
      {
        *int v5 = *v11;
        __int128 v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }

      a1[5] |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        uint64_t v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v15;
        }

        else
        {
          unsigned int v13 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        if (v13 <= 4)
        {
          a1[5] |= 2u;
          a1[3] = v13;
        }

        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }

    else
    {
      int v8 = TagFallback & 7;
    }

uint64_t sub_100A4101C( uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 12),  a2,  a4);
  }
  return result;
}

uint64_t sub_100A41074(uint64_t a1, unsigned int a2)
{
  char v3 = *(_BYTE *)(a1 + 20);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 20) & 1) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_16;
        }
      }

      else
      {
        uint64_t v4 = 2LL;
        if ((v3 & 2) == 0) {
          goto LABEL_16;
        }
      }
    }

    else
    {
      uint64_t v4 = 0LL;
      if ((*(_BYTE *)(a1 + 20) & 2) == 0) {
        goto LABEL_16;
      }
    }

    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }

    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }

    else
    {
      int v7 = 2;
    }

    uint64_t v4 = (v7 + v4);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

void sub_100A4110C(_DWORD *a1, void *lpsrc)
{
}

uint64_t sub_100A41158()
{
  return 1LL;
}

void *sub_100A41160@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GlonassSlotInfo");
}

void sub_100A41170(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  751LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      int v5 = *(_DWORD *)(a2 + 24);
    }

    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      int v7 = *(void **)(a1 + 8);
      if (!v7)
      {
        int v7 = operator new(0x18uLL);
        v7[1] = 0LL;
        v7[2] = 0LL;
        *int v7 = off_101868948;
        *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A19E8 + 8);
      }
      sub_100A40D38(v7, v8);
    }
  }

void sub_100A4124C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A41264(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1018689C0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A19E8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100A412B8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_100A412CC()
{
  uint64_t result = operator new(0x20uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = &off_1018689C0;
  *((_DWORD *)result + 6) = 0;
  return result;
}

uint64_t sub_100A412F8(uint64_t result)
{
  char v1 = *(_BYTE *)(result + 24);
  if (v1)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 20)) {
          *(void *)(v2 + _Block_object_dispose(va, 8) = 0LL;
        }
        *(_DWORD *)(v2 + 20) = 0;
      }
    }
  }

  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100A41328( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        if (TagFallback >> 3 == 2)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *(_DWORD *)(a1 + 24);
            goto LABEL_23;
          }
        }

        else
        {
          int v7 = TagFallback & 7;
        }

uint64_t sub_100A41554( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 16),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }

  else if ((v6 & 2) == 0)
  {
    return result;
  }

  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A19E8 + 8);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
}

uint64_t sub_100A415C0(uint64_t a1, unsigned int a2)
{
  char v3 = *(_BYTE *)(a1 + 24);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11LL;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }

      else if (v5 >= 0x80)
      {
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }

      else
      {
        uint64_t v4 = 2LL;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }

    else
    {
      uint64_t v4 = 0LL;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }

    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A19E8 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A41074(v6, a2);
    int v9 = (int)v7;
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

void sub_100A41684(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A416D0()
{
  return 1LL;
}

void *sub_100A416D8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GlonassId");
}

void sub_100A416E8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  1116LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(_DWORD *)(a1 + 16) = v7;
      int v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }

    else if ((*(_BYTE *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }

    *(_DWORD *)(a1 + 44) |= 2u;
    unsigned int v8 = *(void **)(a1 + 8);
    if (!v8)
    {
      unsigned int v8 = operator new(0x20uLL);
      v8[1] = 0LL;
      _DWORD v8[2] = 0LL;
      void *v8 = &off_1018689C0;
      *((_DWORD *)v8 + 6) = 0;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 8);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A19F0 + 8);
    }
    sub_100A41170((uint64_t)v8, v9);
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }

void sub_100A41870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A41888(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101868A38;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A19F0 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100A418DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_100A418F0()
{
  uint64_t v0 = (char *)operator new(0x30uLL);
  *(void *)uint64_t v0 = &off_101868A38;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((void *)v0 + 5) = 0LL;
  return result;
}

uint64_t sub_100A41924(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(_BYTE *)(result + 44);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      double result = *(void *)(result + 8);
      if (result) {
        double result = sub_100A412F8(result);
      }
    }

    *(void *)(v1 + 2_Block_object_dispose(va, 8) = 0LL;
    *(void *)(v1 + 20) = 0LL;
    *(_DWORD *)(v1 + 36) = 0;
  }

  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_100A4196C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  double v39 = (unsigned int *)(a1 + 16);
  int v5 = (unsigned int *)(a1 + 20);
  int v6 = (unsigned int *)(a1 + 24);
  int v7 = (unsigned int *)(a1 + 28);
  unsigned int v8 = (unsigned int *)(a1 + 32);
  uint64_t v9 = (unsigned int *)(a1 + 36);
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v39);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v15 = (_BYTE *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }

        else
        {
          *double v39 = *v14;
          unsigned int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }

        int v16 = *(_DWORD *)(a1 + 44) | 1;
        *(_DWORD *)(a1 + 44) = v16;
        if ((unint64_t)v15 < v13 && *v15 == 18)
        {
          *((void *)this + 1) = v15 + 1;
          goto LABEL_33;
        }

        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_24;
        }
        int v16 = *(_DWORD *)(a1 + 44);
LABEL_33:
        *(_DWORD *)(a1 + 44) = v16 | 2;
        unsigned int v24 = *(void **)(a1 + 8);
        if (!v24)
        {
          unsigned int v24 = operator new(0x20uLL);
          v24[1] = 0LL;
          _DWORD v24[2] = 0LL;
          *unsigned int v24 = &off_1018689C0;
          *((_DWORD *)v24 + 6) = 0;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v24;
        }

        uint64_t v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v40)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v40 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 < v27)
        {
          int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v40);
          if (sub_100A41328((uint64_t)v24, this, v29))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
              int v30 = *((_DWORD *)this + 14);
              BOOL v31 = __OFSUB__(v30, 1);
              int v32 = v30 - 1;
              if (v32 < 0 == v31) {
                *((_DWORD *)this + 14) = v32;
              }
              int v33 = (_BYTE *)*((void *)this + 1);
              unint64_t v17 = *((void *)this + 2);
              if ((unint64_t)v33 < v17 && *v33 == 24)
              {
                int v18 = v33 + 1;
                *((void *)this + 1) = v18;
LABEL_47:
                if ((unint64_t)v18 >= v17 || *v18 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
                  if (!(_DWORD)result) {
                    return result;
                  }
                  __int16 v34 = (_BYTE *)*((void *)this + 1);
                  unint64_t v17 = *((void *)this + 2);
                }

                else
                {
                  *int v5 = *v18;
                  __int16 v34 = v18 + 1;
                  *((void *)this + 1) = v34;
                }

                *(_DWORD *)(a1 + 44) |= 4u;
                if ((unint64_t)v34 < v17 && *v34 == 32)
                {
                  unsigned int v19 = v34 + 1;
                  *((void *)this + 1) = v19;
LABEL_55:
                  if ((unint64_t)v19 >= v17 || *v19 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v6);
                    if (!(_DWORD)result) {
                      return result;
                    }
                    double v35 = (_BYTE *)*((void *)this + 1);
                    unint64_t v17 = *((void *)this + 2);
                  }

                  else
                  {
                    *int v6 = *v19;
                    double v35 = v19 + 1;
                    *((void *)this + 1) = v35;
                  }

                  *(_DWORD *)(a1 + 44) |= 8u;
                  if ((unint64_t)v35 < v17 && *v35 == 40)
                  {
                    int v20 = v35 + 1;
                    *((void *)this + 1) = v20;
LABEL_63:
                    if ((unint64_t)v20 >= v17 || *v20 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v7);
                      if (!(_DWORD)result) {
                        return result;
                      }
                      __int16 v36 = (_BYTE *)*((void *)this + 1);
                      unint64_t v17 = *((void *)this + 2);
                    }

                    else
                    {
                      *int v7 = *v20;
                      __int16 v36 = v20 + 1;
                      *((void *)this + 1) = v36;
                    }

                    *(_DWORD *)(a1 + 44) |= 0x10u;
                    if ((unint64_t)v36 < v17 && *v36 == 48)
                    {
                      BOOL v21 = v36 + 1;
                      *((void *)this + 1) = v21;
LABEL_71:
                      if ((unint64_t)v21 >= v17 || *v21 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v8);
                        if (!(_DWORD)result) {
                          return result;
                        }
                        double v37 = (_BYTE *)*((void *)this + 1);
                        unint64_t v17 = *((void *)this + 2);
                      }

                      else
                      {
                        unsigned int *v8 = *v21;
                        double v37 = v21 + 1;
                        *((void *)this + 1) = v37;
                      }

                      *(_DWORD *)(a1 + 44) |= 0x20u;
                      if ((unint64_t)v37 < v17 && *v37 == 56)
                      {
                        int v22 = v37 + 1;
                        *((void *)this + 1) = v22;
LABEL_79:
                        if ((unint64_t)v22 >= v17 || *v22 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v9);
                          if (!(_DWORD)result) {
                            return result;
                          }
                          __int16 v38 = (unsigned __int8 *)*((void *)this + 1);
                          unint64_t v17 = *((void *)this + 2);
                        }

                        else
                        {
                          unsigned int *v9 = *v22;
                          __int16 v38 = (unsigned __int8 *)(v22 + 1);
                          *((void *)this + 1) = v38;
                        }

                        *(_DWORD *)(a1 + 44) |= 0x40u;
                        if (v38 == (unsigned __int8 *)v17
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
                          uint64_t result = 1LL;
                          *((_BYTE *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v12 = TagFallback & 7;
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v12 = TagFallback & 7;
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v12 = TagFallback & 7;
        int v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_63;
      case 6u:
        int v12 = TagFallback & 7;
        BOOL v21 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_71;
      case 7u:
        int v12 = TagFallback & 7;
        int v22 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_79;
      default:
        int v12 = TagFallback & 7;
LABEL_24:
        if (v12 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A41E10( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 16),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A19F0 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }

uint64_t sub_100A41F08(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_42;
  }

  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }

    else
    {
      uint64_t v4 = 2LL;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 44) & 2) == 0) {
      goto LABEL_16;
    }
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A19F0 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A415C0(v6, a2);
  int v8 = (int)v7;
  else {
    int v9 = 1;
  }
  uint64_t v4 = (v4 + v8 + v9 + 1);
  int v3 = *(_DWORD *)(a1 + 44);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }

    else
    {
      int v11 = 2;
    }

    uint64_t v4 = (v11 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_30;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }

  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }

  else
  {
    int v13 = 2;
  }

  uint64_t v4 = (v13 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_34;
  }

void sub_100A42098(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A420E4()
{
  return 1LL;
}

void *sub_100A420EC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.ConstellationId");
}

void sub_100A420FC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  1346LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      int v5 = *(_DWORD *)(a2 + 24);
    }

    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v7 = *(char **)(a1 + 8);
      if (!v7)
      {
        uint64_t v7 = (char *)operator new(0x30uLL);
        *(void *)uint64_t v7 = &off_101868A38;
        *(_OWORD *)(v7 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v7 + 24) = 0u;
        *((void *)v7 + 5) = 0LL;
        *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A19F8 + 8);
      }
      sub_100A416E8((uint64_t)v7, v8);
    }
  }

void sub_100A421E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A421FC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101868AB0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A19F8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100A42250(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_100A42264()
{
  uint64_t result = operator new(0x20uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = &off_101868AB0;
  *((_DWORD *)result + 6) = 0;
  return result;
}

uint64_t sub_100A42290(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(_BYTE *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_100A41924(result);
      }
    }
  }

  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_100A422CC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    do
    {
      while (1)
      {
        int v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        if (TagFallback >> 3 == 2)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 24);
            goto LABEL_24;
          }
        }

        else
        {
          int v8 = TagFallback & 7;
        }

uint64_t sub_100A42504( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 16),  a2,  a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }

  else if ((v6 & 2) == 0)
  {
    return result;
  }

  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A19F8 + 8);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
}

uint64_t sub_100A42570(uint64_t a1, unsigned int a2)
{
  char v3 = *(_BYTE *)(a1 + 24);
  if (v3)
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if (v5 >= 0x80)
      {
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_16;
        }
      }

      else
      {
        uint64_t v4 = 2LL;
        if ((v3 & 2) == 0) {
          goto LABEL_16;
        }
      }
    }

    else
    {
      uint64_t v4 = 0LL;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0) {
        goto LABEL_16;
      }
    }

    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A19F8 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A41F08(v6, a2);
    int v9 = (int)v7;
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

void sub_100A42624(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A42670()
{
  return 1LL;
}

void *sub_100A42678@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SvId");
}

void sub_100A42688(uint64_t a1, _BYTE *a2)
{
  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  1602LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = a2[16];
  if ((_BYTE)v5)
  {
    if ((a2[16] & 1) != 0)
    {
      char v7 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }

    char v8 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_BYTE *)(a1 + 9) = v8;
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }

void sub_100A42778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A42790(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868B28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A427A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868B28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A427C0()
{
  uint64_t result = operator new(0x18uLL);
  *uint64_t result = off_101868B28;
  result[1] = 0LL;
  *((_DWORD *)result + 4) = 0;
  return result;
}

uint64_t sub_100A427E8(uint64_t result)
{
  if (*(_BYTE *)(result + 16)) {
    *(_DWORD *)(result + _Block_object_dispose(va, 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100A427FC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if ((_DWORD)result)
        {
          unsigned int v10 = v22;
          int v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v15 = v22;
          int v16 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v15 = *v12;
          int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }

        *(_BYTE *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v17 = v22;
          int v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v17 = *v13;
          int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }

        *(_BYTE *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        char v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v19 = v22;
          int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v19 = *v14;
          int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }

        *(_BYTE *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100A42AC0( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 11),  a2,  a4);
  }

uint64_t sub_100A42B54(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  else {
    uint64_t v3 = 0LL;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100A42B94(uint64_t a1, _BYTE *lpsrc)
{
}

uint64_t sub_100A42BE0()
{
  return 1LL;
}

void *sub_100A42BE8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GpsL1SyncState");
}

void sub_100A42BF8(uint64_t a1, _BYTE *a2)
{
  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  1895LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = a2[20];
  if ((_BYTE)v5)
  {
    if ((a2[20] & 1) != 0)
    {
      char v7 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v5 = *((_DWORD *)a2 + 5);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }

    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }

    char v8 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(_BYTE *)(a1 + 9) = v8;
    int v5 = *((_DWORD *)a2 + 5);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }

void sub_100A42D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A42D20(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868BA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A42D30(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868BA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A42D50()
{
  uint64_t result = operator new(0x18uLL);
  *uint64_t result = off_101868BA0;
  result[2] = 0LL;
  *((_DWORD *)result + 2) = 0;
  *((_BYTE *)result + 12) = 0;
  return result;
}

uint64_t sub_100A42D80(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + _Block_object_dispose(va, 8) = 0;
  }

  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100A42D98( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_25:
          *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v10 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_28;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if ((_DWORD)result)
        {
          unsigned int v10 = v25;
          char v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_25;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_28:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v16 = v25;
          unsigned int v17 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v16 = *v12;
          unsigned int v17 = v12 + 1;
          *((void *)this + 1) = v17;
        }

        *(_BYTE *)(a1 + 9) = v16 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        int v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_36:
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v18 = v25;
          unsigned int v19 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v18 = *v13;
          unsigned int v19 = v13 + 1;
          *((void *)this + 1) = v19;
        }

        *(_BYTE *)(a1 + 10) = v18 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        char v14 = v19 + 1;
        *((void *)this + 1) = v14;
LABEL_44:
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v20 = v25;
          BOOL v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v20 = *v14;
          BOOL v21 = v14 + 1;
          *((void *)this + 1) = v21;
        }

        *(_BYTE *)(a1 + 11) = v20 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        unsigned int v15 = v21 + 1;
        *((void *)this + 1) = v15;
LABEL_52:
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v22 = v25;
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v22 = *v15;
          unsigned int v23 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v23;
        }

        *(_BYTE *)(a1 + 12) = v22 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_44;
      case 5u:
        int v7 = TagFallback & 7;
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_52;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100A430D8( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_100A43188(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_100A431DC(uint64_t a1, _BYTE *lpsrc)
{
}

uint64_t sub_100A43228()
{
  return 1LL;
}

void *sub_100A43230@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GpsL2CSyncState");
}

void sub_100A43240(uint64_t a1, _BYTE *a2)
{
  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  2163LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = a2[16];
  if ((_BYTE)v5)
  {
    if ((a2[16] & 1) != 0)
    {
      char v7 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }

    char v8 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_BYTE *)(a1 + 9) = v8;
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }

void sub_100A43330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A43348(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868C18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A43358(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868C18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A43378()
{
  uint64_t result = operator new(0x18uLL);
  *uint64_t result = off_101868C18;
  result[1] = 0LL;
  *((_DWORD *)result + 4) = 0;
  return result;
}

uint64_t sub_100A433A0(uint64_t result)
{
  if (*(_BYTE *)(result + 16)) {
    *(_DWORD *)(result + _Block_object_dispose(va, 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100A433B4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if ((_DWORD)result)
        {
          unsigned int v10 = v22;
          char v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }

        *(_BYTE *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }

        *(_BYTE *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        char v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }

        *(_BYTE *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100A43678( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 11),  a2,  a4);
  }

uint64_t sub_100A4370C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  else {
    uint64_t v3 = 0LL;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100A4374C(uint64_t a1, _BYTE *lpsrc)
{
}

uint64_t sub_100A43798()
{
  return 1LL;
}

void *sub_100A437A0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GpsL5SyncState");
}

void sub_100A437B0(uint64_t a1, _BYTE *a2)
{
  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  2456LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = a2[20];
  if ((_BYTE)v5)
  {
    if ((a2[20] & 1) != 0)
    {
      char v7 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v5 = *((_DWORD *)a2 + 5);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }

    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }

    char v8 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(_BYTE *)(a1 + 9) = v8;
    int v5 = *((_DWORD *)a2 + 5);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }

void sub_100A438C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A438D8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868C90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A438E8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868C90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A43908()
{
  uint64_t result = operator new(0x18uLL);
  *uint64_t result = off_101868C90;
  result[2] = 0LL;
  *((_DWORD *)result + 2) = 0;
  *((_BYTE *)result + 12) = 0;
  return result;
}

uint64_t sub_100A43938(uint64_t result)
{
  if (*(_BYTE *)(result + 20))
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + _Block_object_dispose(va, 8) = 0;
  }

  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100A43950( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_25:
          *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v10 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_28;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if ((_DWORD)result)
        {
          unsigned int v10 = v25;
          char v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_25;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_28:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v16 = v25;
          unsigned int v17 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v16 = *v12;
          unsigned int v17 = v12 + 1;
          *((void *)this + 1) = v17;
        }

        *(_BYTE *)(a1 + 9) = v16 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        int v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_36:
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v18 = v25;
          unsigned int v19 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v18 = *v13;
          unsigned int v19 = v13 + 1;
          *((void *)this + 1) = v19;
        }

        *(_BYTE *)(a1 + 10) = v18 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        char v14 = v19 + 1;
        *((void *)this + 1) = v14;
LABEL_44:
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v20 = v25;
          BOOL v21 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v20 = *v14;
          BOOL v21 = v14 + 1;
          *((void *)this + 1) = v21;
        }

        *(_BYTE *)(a1 + 11) = v20 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        unsigned int v15 = v21 + 1;
        *((void *)this + 1) = v15;
LABEL_52:
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v22 = v25;
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v22 = *v15;
          unsigned int v23 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v23;
        }

        *(_BYTE *)(a1 + 12) = v22 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_44;
      case 5u:
        int v7 = TagFallback & 7;
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_52;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100A43C90( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_100A43D40(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_100A43D94(uint64_t a1, _BYTE *lpsrc)
{
}

uint64_t sub_100A43DE0()
{
  return 1LL;
}

void *sub_100A43DE8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GlonassL1fSyncState");
}

void sub_100A43DF8(uint64_t a1, _BYTE *a2)
{
  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  2724LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = a2[16];
  if ((_BYTE)v5)
  {
    if ((a2[16] & 1) != 0)
    {
      char v7 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }

    char v8 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_BYTE *)(a1 + 9) = v8;
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }

void sub_100A43EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A43F00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868D08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A43F10(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868D08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A43F30()
{
  uint64_t result = operator new(0x18uLL);
  *uint64_t result = off_101868D08;
  result[1] = 0LL;
  *((_DWORD *)result + 4) = 0;
  return result;
}

uint64_t sub_100A43F58(uint64_t result)
{
  if (*(_BYTE *)(result + 16)) {
    *(_DWORD *)(result + _Block_object_dispose(va, 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100A43F6C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if ((_DWORD)result)
        {
          unsigned int v10 = v22;
          char v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }

        *(_BYTE *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }

        *(_BYTE *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        char v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }

        *(_BYTE *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100A44230( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 11),  a2,  a4);
  }

uint64_t sub_100A442C4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  else {
    uint64_t v3 = 0LL;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100A44304(uint64_t a1, _BYTE *lpsrc)
{
}

uint64_t sub_100A44350()
{
  return 1LL;
}

void *sub_100A44358@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.BeidouB1SyncState");
}

void sub_100A44368(uint64_t a1, _BYTE *a2)
{
  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  2988LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = a2[16];
  if ((_BYTE)v5)
  {
    if ((a2[16] & 1) != 0)
    {
      char v7 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }

    char v8 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_BYTE *)(a1 + 9) = v8;
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }

void sub_100A44458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A44470(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868D80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A44480(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868D80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A444A0()
{
  uint64_t result = operator new(0x18uLL);
  *uint64_t result = off_101868D80;
  result[1] = 0LL;
  *((_DWORD *)result + 4) = 0;
  return result;
}

uint64_t sub_100A444C8(uint64_t result)
{
  if (*(_BYTE *)(result + 16)) {
    *(_DWORD *)(result + _Block_object_dispose(va, 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100A444DC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if ((_DWORD)result)
        {
          unsigned int v10 = v22;
          char v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }

        *(_BYTE *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }

        *(_BYTE *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        char v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }

        *(_BYTE *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100A447A0( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 11),  a2,  a4);
  }

uint64_t sub_100A44834(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  else {
    uint64_t v3 = 0LL;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100A44874(uint64_t a1, _BYTE *lpsrc)
{
}

uint64_t sub_100A448C0()
{
  return 1LL;
}

void *sub_100A448C8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.BeidouB2SyncState");
}

void sub_100A448D8(uint64_t a1, _BYTE *a2)
{
  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  3252LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = a2[16];
  if ((_BYTE)v5)
  {
    if ((a2[16] & 1) != 0)
    {
      char v7 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }

    char v8 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_BYTE *)(a1 + 9) = v8;
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }

void sub_100A449C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A449E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868DF8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A449F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868DF8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A44A10()
{
  uint64_t result = operator new(0x18uLL);
  *uint64_t result = off_101868DF8;
  result[1] = 0LL;
  *((_DWORD *)result + 4) = 0;
  return result;
}

uint64_t sub_100A44A38(uint64_t result)
{
  if (*(_BYTE *)(result + 16)) {
    *(_DWORD *)(result + _Block_object_dispose(va, 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100A44A4C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if ((_DWORD)result)
        {
          unsigned int v10 = v22;
          char v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }

        *(_BYTE *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }

        *(_BYTE *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        char v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }

        *(_BYTE *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100A44D10( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 11),  a2,  a4);
  }

uint64_t sub_100A44DA4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  else {
    uint64_t v3 = 0LL;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100A44DE4(uint64_t a1, _BYTE *lpsrc)
{
}

uint64_t sub_100A44E30()
{
  return 1LL;
}

void *sub_100A44E38@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GalileoE1SyncState");
}

void sub_100A44E48(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  3694LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  int v5 = *(_DWORD *)(a2 + 24);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if ((v5 & 1) != 0)
  {
    char v9 = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 24) |= 1u;
    *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v9;
    int v5 = *(_DWORD *)(a2 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  char v10 = *(_BYTE *)(a2 + 9);
  *(_DWORD *)(a1 + 24) |= 2u;
  *(_BYTE *)(a1 + 9) = v10;
  int v5 = *(_DWORD *)(a2 + 24);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }

void sub_100A44FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A45014(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868E70;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A45024(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868E70;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

_DWORD *sub_100A45044()
{
  uint64_t result = operator new(0x20uLL);
  result[5] = 0;
  result[6] = 0;
  *(void *)uint64_t result = off_101868E70;
  *((void *)result + 1) = 0LL;
  *((_WORD *)result + _Block_object_dispose(va, 8) = 0;
  return result;
}

uint64_t sub_100A45070(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 24);
  if ((_BYTE)v1) {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_WORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100A45094( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_35:
          *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v10 != 0;
          *(_DWORD *)(a1 + 24) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            char v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_38;
          }

          continue;
        }

        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
        if ((_DWORD)result)
        {
          unsigned int v10 = v40;
          char v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_35;
        }

        break;
      case 2u:
        int v7 = TagFallback & 7;
        char v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_38:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v21 = v40;
          unsigned int v22 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v21 = *v12;
          unsigned int v22 = v12 + 1;
          *((void *)this + 1) = v22;
        }

        *(_BYTE *)(a1 + 9) = v21 != 0;
        *(_DWORD *)(a1 + 24) |= 2u;
        char v13 = v22 + 1;
        *((void *)this + 1) = v13;
LABEL_46:
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v23 = v40;
          unsigned int v24 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v23 = *v13;
          unsigned int v24 = v13 + 1;
          *((void *)this + 1) = v24;
        }

        *(_BYTE *)(a1 + 10) = v23 != 0;
        *(_DWORD *)(a1 + 24) |= 4u;
        char v14 = v24 + 1;
        *((void *)this + 1) = v14;
LABEL_54:
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v25 = v40;
          int v26 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v25 = *v14;
          int v26 = v14 + 1;
          *((void *)this + 1) = v26;
        }

        *(_BYTE *)(a1 + 11) = v25 != 0;
        *(_DWORD *)(a1 + 24) |= 8u;
        char v15 = v26 + 1;
        *((void *)this + 1) = v15;
LABEL_62:
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v27 = v40;
          int v28 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v27 = *v15;
          int v28 = v15 + 1;
          *((void *)this + 1) = v28;
        }

        *(_BYTE *)(a1 + 12) = v27 != 0;
        *(_DWORD *)(a1 + 24) |= 0x10u;
        char v16 = v28 + 1;
        *((void *)this + 1) = v16;
LABEL_70:
        if ((unint64_t)v16 >= v8 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v29 = v40;
          int v30 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v29 = *v16;
          int v30 = v16 + 1;
          *((void *)this + 1) = v30;
        }

        *(_BYTE *)(a1 + 13) = v29 != 0;
        *(_DWORD *)(a1 + 24) |= 0x20u;
        unsigned int v17 = v30 + 1;
        *((void *)this + 1) = v17;
LABEL_78:
        if ((unint64_t)v17 >= v8 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v31 = v40;
          int v32 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v31 = *v17;
          int v32 = v17 + 1;
          *((void *)this + 1) = v32;
        }

        *(_BYTE *)(a1 + 14) = v31 != 0;
        *(_DWORD *)(a1 + 24) |= 0x40u;
        unsigned int v18 = v32 + 1;
        *((void *)this + 1) = v18;
LABEL_86:
        if ((unint64_t)v18 >= v8 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v33 = v40;
          __int16 v34 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v33 = *v18;
          __int16 v34 = v18 + 1;
          *((void *)this + 1) = v34;
        }

        *(_BYTE *)(a1 + 15) = v33 != 0;
        *(_DWORD *)(a1 + 24) |= 0x80u;
        unsigned int v19 = v34 + 1;
        *((void *)this + 1) = v19;
LABEL_94:
        if ((unint64_t)v19 >= v8 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v35 = v40;
          __int16 v36 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v35 = *v19;
          __int16 v36 = v19 + 1;
          *((void *)this + 1) = v36;
        }

        *(_BYTE *)(a1 + 16) = v35 != 0;
        *(_DWORD *)(a1 + 24) |= 0x100u;
        unsigned int v20 = v36 + 1;
        *((void *)this + 1) = v20;
LABEL_102:
        if ((unint64_t)v20 >= v8 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v37 = v40;
          __int16 v38 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          unsigned int v37 = *v20;
          __int16 v38 = (unsigned __int8 *)(v20 + 1);
          *((void *)this + 1) = v38;
        }

        *(_BYTE *)(a1 + 17) = v37 != 0;
        *(_DWORD *)(a1 + 24) |= 0x200u;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        char v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_46;
      case 4u:
        int v7 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_54;
      case 5u:
        int v7 = TagFallback & 7;
        char v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_62;
      case 6u:
        int v7 = TagFallback & 7;
        char v16 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_70;
      case 7u:
        int v7 = TagFallback & 7;
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_78;
      case 8u:
        int v7 = TagFallback & 7;
        unsigned int v18 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_86;
      case 9u:
        int v7 = TagFallback & 7;
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_94;
      case 0xAu:
        int v7 = TagFallback & 7;
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_102;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100A45640( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }

uint64_t sub_100A4577C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x80) != 0) {
      v2 += 2;
    }
  }

  else
  {
    unsigned int v2 = 0;
  }

  unsigned int v3 = v2 + 2;
  if ((v1 & 0x100) == 0) {
    unsigned int v3 = v2;
  }
  if ((v1 & 0x200) != 0) {
    v3 += 2;
  }
  if ((v1 & 0xFF00) != 0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = v2;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_100A45814(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A45860()
{
  return 1LL;
}

void *sub_100A45868@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GalileoE5SyncState");
}

void sub_100A45878(uint64_t a1, _BYTE *a2)
{
  if (a2 == (_BYTE *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  3955LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = a2[16];
  if ((_BYTE)v5)
  {
    if ((a2[16] & 1) != 0)
    {
      char v7 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }

    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }

    char v8 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_BYTE *)(a1 + 9) = v8;
    if ((*((_DWORD *)a2 + 4) & 4) == 0) {
      return;
    }
LABEL_7:
    char v6 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(_BYTE *)(a1 + 10) = v6;
  }

void sub_100A45948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A45960(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868EE8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A45970(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868EE8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

_WORD *sub_100A45990()
{
  uint64_t result = operator new(0x18uLL);
  *(void *)uint64_t result = off_101868EE8;
  result[4] = 0;
  *((_BYTE *)result + 10) = 0;
  *((_DWORD *)result + 3) = 0;
  *((_DWORD *)result + 4) = 0;
  return result;
}

uint64_t sub_100A459C0(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
  {
    *(_WORD *)(result + _Block_object_dispose(va, 8) = 0;
    *(_BYTE *)(result + 10) = 0;
  }

  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100A459D8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v12 = v22;
          char v13 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unsigned int v12 = *v11;
          char v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }

        *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = v12 != 0;
        *(_DWORD *)(a1 + 16) |= 1u;
        if ((unint64_t)v13 < v9 && *v13 == 16)
        {
          char v14 = v13 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_26;
        }
      }

      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      char v14 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
LABEL_26:
      if ((unint64_t)v14 >= v9 || *v14 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (!(_DWORD)result) {
          return result;
        }
        unsigned int v15 = v21;
        char v16 = (_BYTE *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }

      else
      {
        unsigned int v15 = *v14;
        char v16 = v14 + 1;
        *((void *)this + 1) = v16;
      }

      *(_BYTE *)(a1 + 9) = v15 != 0;
      *(_DWORD *)(a1 + 16) |= 2u;
      if ((unint64_t)v16 < v9 && *v16 == 24)
      {
        unsigned int v10 = v16 + 1;
        *((void *)this + 1) = v10;
LABEL_34:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v17 = v20;
          unsigned int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unsigned int v17 = *v10;
          unsigned int v18 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v18;
        }

        *(_BYTE *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if (v18 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_34;
      }
    }

    else
    {
      int v8 = TagFallback & 7;
    }

uint64_t sub_100A45C08( uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(unsigned __int8 *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 10),  a2,  a4);
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(unsigned __int8 *)(v5 + 9),  a2,  a4);
  if ((*(_DWORD *)(v5 + 16) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 10),  a2,  a4);
  }
  return result;
}

uint64_t sub_100A45C80(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  else {
    uint64_t v3 = 0LL;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100A45CB4(uint64_t a1, _BYTE *lpsrc)
{
}

uint64_t sub_100A45D00()
{
  return 1LL;
}

void *sub_100A45D08@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SbasL1SyncState");
}

void sub_100A45D18(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v28,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  4527LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v28,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v27, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v28);
  }

  int v5 = *(_DWORD *)(a2 + 96);
  if (!(_BYTE)v5) {
    goto LABEL_50;
  }
  if ((v5 & 1) != 0)
  {
    unsigned int v6 = *(_DWORD *)(a2 + 88);
    if (v6 >= 0xD) {
      sub_10125A0E8();
    }
    *(_DWORD *)(a1 + 96) |= 1u;
    *(_DWORD *)(a1 + 8_Block_object_dispose(va, 8) = v6;
    int v5 = *(_DWORD *)(a2 + 96);
  }

  if ((v5 & 2) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 2u;
    unsigned int v7 = *(void **)(a1 + 8);
    if (!v7)
    {
      unsigned int v7 = operator new(0x18uLL);
      *unsigned int v7 = off_101868B28;
      v7[1] = 0LL;
      *((_DWORD *)v7 + 4) = 0;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
    }

    int v8 = *(_BYTE **)(a2 + 8);
    if (!v8) {
      int v8 = *(_BYTE **)(qword_1019A1A48 + 8);
    }
    sub_100A42688((uint64_t)v7, v8);
    int v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_25;
    }
  }

  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }

  *(_DWORD *)(a1 + 96) |= 4u;
  unint64_t v9 = *(void **)(a1 + 16);
  if (!v9)
  {
    unint64_t v9 = operator new(0x18uLL);
    void *v9 = off_101868BA0;
    _DWORD v9[2] = 0LL;
    *((_DWORD *)v9 + 2) = 0;
    *((_BYTE *)v9 + 12) = 0;
    *(void *)(a1 + 16) = v9;
  }

  unsigned int v10 = *(_BYTE **)(a2 + 16);
  if (!v10) {
    unsigned int v10 = *(_BYTE **)(qword_1019A1A48 + 16);
  }
  sub_100A42BF8((uint64_t)v9, v10);
  int v5 = *(_DWORD *)(a2 + 96);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }

void sub_100A46120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100A46138(void *result)
{
  if ((void *)qword_1019A1A48 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t v7 = v1[6];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    uint64_t v8 = v1[7];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
    uint64_t v9 = v1[8];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    uint64_t v10 = v1[9];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
    uint64_t result = (void *)v1[10];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A46234(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868F60;
  sub_100A46138(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A46264(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868F60;
  sub_100A46138(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_100A46298()
{
  uint64_t v0 = (char *)operator new(0x68uLL);
  *(void *)uint64_t v0 = off_101868F60;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 84) = 0u;
  return result;
}

uint64_t sub_100A462D8(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 96);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 8_Block_object_dispose(va, 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 16)) {
          *(_DWORD *)(v2 + _Block_object_dispose(va, 8) = 0;
        }
        *(_DWORD *)(v2 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }

    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
        {
          *(_BYTE *)(v3 + 12) = 0;
          *(_DWORD *)(v3 + _Block_object_dispose(va, 8) = 0;
        }

        *(_DWORD *)(v3 + 20) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }

    if ((v1 & 8) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 16)) {
          *(_DWORD *)(v4 + _Block_object_dispose(va, 8) = 0;
        }
        *(_DWORD *)(v4 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }

    if ((v1 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 20))
        {
          *(_BYTE *)(v5 + 12) = 0;
          *(_DWORD *)(v5 + _Block_object_dispose(va, 8) = 0;
        }

        *(_DWORD *)(v5 + 20) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }

    if ((v1 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(result + 40);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 16)) {
          *(_DWORD *)(v6 + _Block_object_dispose(va, 8) = 0;
        }
        *(_DWORD *)(v6 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }

    if ((v1 & 0x40) != 0)
    {
      uint64_t v7 = *(void *)(result + 48);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 16)) {
          *(_DWORD *)(v7 + _Block_object_dispose(va, 8) = 0;
        }
        *(_DWORD *)(v7 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }

    if ((v1 & 0x80) != 0)
    {
      uint64_t v8 = *(void *)(result + 56);
      if (v8)
      {
        if (*(_BYTE *)(v8 + 16)) {
          *(_DWORD *)(v8 + _Block_object_dispose(va, 8) = 0;
        }
        *(_DWORD *)(v8 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
  }

  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      uint64_t v9 = *(void *)(result + 64);
      if (v9)
      {
        int v10 = *(_DWORD *)(v9 + 24);
        if ((_BYTE)v10) {
          *(void *)(v9 + _Block_object_dispose(va, 8) = 0LL;
        }
        if ((v10 & 0xFF00) != 0) {
          *(_WORD *)(v9 + 16) = 0;
        }
        *(_DWORD *)(v9 + 24) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }

    if ((v1 & 0x200) != 0)
    {
      uint64_t v11 = *(void *)(result + 72);
      if (v11)
      {
        if (*(_BYTE *)(v11 + 16))
        {
          *(_WORD *)(v11 + _Block_object_dispose(va, 8) = 0;
          *(_BYTE *)(v11 + 10) = 0;
        }

        *(_DWORD *)(v11 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }

    if ((v1 & 0x400) != 0)
    {
      uint64_t v12 = *(void *)(result + 80);
      if (v12)
      {
        if (*(_BYTE *)(v12 + 16)) {
          *(_DWORD *)(v12 + _Block_object_dispose(va, 8) = 0;
        }
        *(_DWORD *)(v12 + 16) = 0;
      }
    }
  }

  *(_DWORD *)(result + 96) = 0;
  return result;
}

uint64_t sub_100A46450( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_6;
    }

    TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v9 = v102;
        }

        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }

        if (v9 <= 0xC)
        {
          *(_DWORD *)(a1 + 96) |= 1u;
          *(_DWORD *)(a1 + 8_Block_object_dispose(va, 8) = v9;
        }

        uint64_t v11 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_41;
        }

        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
LABEL_41:
        *(_DWORD *)(a1 + 96) |= 2u;
        uint64_t v12 = *(void **)(a1 + 8);
        if (!v12)
        {
          uint64_t v12 = operator new(0x18uLL);
          *uint64_t v12 = off_101868B28;
          v12[1] = 0LL;
          *((_DWORD *)v12 + 4) = 0;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v12;
        }

        char v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0LL;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        unsigned int v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
LABEL_55:
        *(_DWORD *)(a1 + 96) |= 4u;
        uint64_t v22 = *(void **)(a1 + 16);
        if (!v22)
        {
          uint64_t v22 = operator new(0x18uLL);
          *uint64_t v22 = off_101868BA0;
          void v22[2] = 0LL;
          *((_DWORD *)v22 + 2) = 0;
          *((_BYTE *)v22 + 12) = 0;
          *(void *)(a1 + 16) = v22;
        }

        unsigned int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v23;
          *((void *)this + 1) = v23 + 1;
        }

        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0LL;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v30 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 96) |= 8u;
        unsigned int v31 = *(void **)(a1 + 24);
        if (!v31)
        {
          unsigned int v31 = operator new(0x18uLL);
          void *v31 = off_101868C18;
          v31[1] = 0LL;
          *((_DWORD *)v31 + 4) = 0;
          *(void *)(a1 + 24) = v31;
        }

        int v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v32;
          *((void *)this + 1) = v32 + 1;
        }

        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0LL;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v19) {
          *((_DWORD *)this + 14) = v38;
        }
        double v39 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v39 + 1;
LABEL_83:
        *(_DWORD *)(a1 + 96) |= 0x10u;
        unsigned int v40 = *(void **)(a1 + 32);
        if (!v40)
        {
          unsigned int v40 = operator new(0x18uLL);
          *unsigned int v40 = off_101868C90;
          void v40[2] = 0LL;
          *((_DWORD *)v40 + 2) = 0;
          *((_BYTE *)v40 + 12) = 0;
          *(void *)(a1 + 32) = v40;
        }

        double v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v41;
          *((void *)this + 1) = v41 + 1;
        }

        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0LL;
        }
        int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
        int v46 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v46, 1);
        int v47 = v46 - 1;
        if (v47 < 0 == v19) {
          *((_DWORD *)this + 14) = v47;
        }
        __int16 v48 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v48 + 1;
LABEL_97:
        *(_DWORD *)(a1 + 96) |= 0x20u;
        double v49 = *(void **)(a1 + 40);
        if (!v49)
        {
          double v49 = operator new(0x18uLL);
          *double v49 = off_101868D08;
          v49[1] = 0LL;
          *((_DWORD *)v49 + 4) = 0;
          *(void *)(a1 + 40) = v49;
        }

        __int16 v50 = (char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v50;
          *((void *)this + 1) = v50 + 1;
        }

        int v51 = *((_DWORD *)this + 14);
        int v52 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v51 + 1;
        if (v51 >= v52) {
          return 0LL;
        }
        int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
        int v55 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v55, 1);
        int v56 = v55 - 1;
        if (v56 < 0 == v19) {
          *((_DWORD *)this + 14) = v56;
        }
        uint64_t v57 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v57 + 1;
LABEL_111:
        *(_DWORD *)(a1 + 96) |= 0x40u;
        uint64_t v58 = *(void **)(a1 + 48);
        if (!v58)
        {
          uint64_t v58 = operator new(0x18uLL);
          *uint64_t v58 = off_101868D80;
          v58[1] = 0LL;
          *((_DWORD *)v58 + 4) = 0;
          *(void *)(a1 + 4_Block_object_dispose(va, 8) = v58;
        }

        uint64_t v59 = (char *)*((void *)this + 1);
        if ((unint64_t)v59 >= *((void *)this + 2) || *v59 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v59;
          *((void *)this + 1) = v59 + 1;
        }

        int v60 = *((_DWORD *)this + 14);
        int v61 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v60 + 1;
        if (v60 >= v61) {
          return 0LL;
        }
        int v62 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v62);
        int v64 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v19) {
          *((_DWORD *)this + 14) = v65;
        }
        uint64_t v66 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v66 + 1;
LABEL_125:
        *(_DWORD *)(a1 + 96) |= 0x80u;
        uint64_t v67 = *(void **)(a1 + 56);
        if (!v67)
        {
          uint64_t v67 = operator new(0x18uLL);
          *uint64_t v67 = off_101868DF8;
          v67[1] = 0LL;
          *((_DWORD *)v67 + 4) = 0;
          *(void *)(a1 + 56) = v67;
        }

        uint64_t v68 = (char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v68;
          *((void *)this + 1) = v68 + 1;
        }

        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0LL;
        }
        int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
        int v73 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v73, 1);
        int v74 = v73 - 1;
        if (v74 < 0 == v19) {
          *((_DWORD *)this + 14) = v74;
        }
        uint64_t v75 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v75 + 1;
LABEL_139:
        *(_DWORD *)(a1 + 96) |= 0x100u;
        uint64_t v76 = *(_DWORD **)(a1 + 64);
        if (!v76)
        {
          uint64_t v76 = operator new(0x20uLL);
          v76[5] = 0;
          v76[6] = 0;
          *(void *)uint64_t v76 = off_101868E70;
          *((void *)v76 + 1) = 0LL;
          *((_WORD *)v76 + _Block_object_dispose(va, 8) = 0;
          *(void *)(a1 + 64) = v76;
        }

        uint64_t v77 = (char *)*((void *)this + 1);
        if ((unint64_t)v77 >= *((void *)this + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v77;
          *((void *)this + 1) = v77 + 1;
        }

        int v78 = *((_DWORD *)this + 14);
        int v79 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v78 + 1;
        if (v78 >= v79) {
          return 0LL;
        }
        int v80 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v80);
        int v82 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v82, 1);
        int v83 = v82 - 1;
        if (v83 < 0 == v19) {
          *((_DWORD *)this + 14) = v83;
        }
        __int16 v84 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v84 + 1;
LABEL_153:
        *(_DWORD *)(a1 + 96) |= 0x200u;
        uint64_t v85 = *(_WORD **)(a1 + 72);
        if (!v85)
        {
          uint64_t v85 = operator new(0x18uLL);
          *(void *)uint64_t v85 = off_101868EE8;
          v85[4] = 0;
          *((_BYTE *)v85 + 10) = 0;
          *((_DWORD *)v85 + 3) = 0;
          *((_DWORD *)v85 + 4) = 0;
          *(void *)(a1 + 72) = v85;
        }

        uint64_t v86 = (char *)*((void *)this + 1);
        if ((unint64_t)v86 >= *((void *)this + 2) || *v86 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v86;
          *((void *)this + 1) = v86 + 1;
        }

        int v87 = *((_DWORD *)this + 14);
        int v88 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v87 + 1;
        if (v87 >= v88) {
          return 0LL;
        }
        int v89 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v89);
        int v91 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v91, 1);
        int v92 = v91 - 1;
        if (v92 < 0 == v19) {
          *((_DWORD *)this + 14) = v92;
        }
        uint64_t v93 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v93 + 1;
LABEL_167:
        *(_DWORD *)(a1 + 96) |= 0x400u;
        __int16 v94 = *(void **)(a1 + 80);
        if (!v94)
        {
          __int16 v94 = operator new(0x18uLL);
          void *v94 = off_101868B28;
          v94[1] = 0LL;
          *((_DWORD *)v94 + 4) = 0;
          *(void *)(a1 + 80) = v94;
        }

        uint64_t v95 = (char *)*((void *)this + 1);
        if ((unint64_t)v95 >= *((void *)this + 2) || *v95 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v95;
          *((void *)this + 1) = v95 + 1;
        }

        int v96 = *((_DWORD *)this + 14);
        int v97 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v96 + 1;
        if (v96 >= v97) {
          return 0LL;
        }
        int v98 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v98);
        int v100 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v100, 1);
        int v101 = v100 - 1;
        if (v101 < 0 == v19) {
          *((_DWORD *)this + 14) = v101;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_69;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_83;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_97;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_111;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_125;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_139;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_153;
        }
        goto LABEL_31;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        goto LABEL_167;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A46F50( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 96);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 88),  (int)a2,  a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1A48 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }

uint64_t sub_100A47148(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 96);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_61;
  }

  if ((v3 & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 10;
    }

    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 96);
    }

    else
    {
      int v6 = 1;
    }

    uint64_t v4 = (v6 + 1);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
  }

  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1A48 + 8);
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A42B54(v7);
  int v10 = (int)v8;
  else {
    int v11 = 1;
  }
  uint64_t v4 = (v4 + v10 + v11 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v12 = *(void *)(a1 + 16);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1019A1A48 + 16);
    }
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A43188(v12);
    int v15 = (int)v13;
    else {
      int v16 = 1;
    }
    uint64_t v4 = (v4 + v15 + v16 + 1);
    int v3 = *(_DWORD *)(a1 + 96);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }

  uint64_t v17 = *(void *)(a1 + 24);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_1019A1A48 + 24);
  }
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A4370C(v17);
  int v20 = (int)v18;
  else {
    int v21 = 1;
  }
  uint64_t v4 = (v4 + v20 + v21 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }

void sub_100A474C4(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A47510()
{
  return 1LL;
}

void *sub_100A47518@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SyncState");
}

double sub_100A47528(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  4792LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(double *)(a1 + _Block_object_dispose(va, 8) = result;
      int v6 = *(_DWORD *)(a2 + 32);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return result;
    }
LABEL_7:
    char v7 = *(_BYTE *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_BYTE *)(a1 + 24) = v7;
  }

  return result;
}

void sub_100A475F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A47610(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868FD8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A47620(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101868FD8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

_DWORD *sub_100A47640()
{
  double result = operator new(0x28uLL);
  result[7] = 0;
  result[8] = 0;
  *((void *)result + 1) = 0LL;
  *((void *)result + 2) = 0LL;
  *(void *)double result = off_101868FD8;
  *((_BYTE *)result + 24) = 0;
  return result;
}

uint64_t sub_100A47670(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_BYTE *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100A47688( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_25;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = *(void *)v16;
        *(_DWORD *)(a1 + 32) |= 1u;
        int v11 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_17;
        }
      }

      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_25;
      }
LABEL_17:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v16) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + 16) = *(void *)v16;
      *(_DWORD *)(a1 + 32) |= 2u;
      uint64_t v12 = (_BYTE *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v12 < v9 && *v12 == 24)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_21:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v16);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v16[0];
          unsigned int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unsigned int v13 = *v10;
          unsigned int v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }

        *(_BYTE *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_21;
      }
    }

    else
    {
      int v8 = TagFallback & 7;
    }

uint64_t sub_100A47868( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 24),  a2,  a4);
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 24),  a2,  a4);
  }
  return result;
}

uint64_t sub_100A478E0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = v1;
  return v1;
}

double sub_100A47918(uint64_t a1, void *lpsrc)
{
  return sub_100A47528(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A47964()
{
  return 1LL;
}

void *sub_100A4796C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SvTime");
}

double sub_100A4797C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  5023LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(double *)(a1 + _Block_object_dispose(va, 8) = result;
      int v6 = *(_DWORD *)(a2 + 32);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return result;
    }
LABEL_7:
    char v7 = *(_BYTE *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_BYTE *)(a1 + 24) = v7;
  }

  return result;
}

void sub_100A47A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A47A64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869050;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A47A74(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869050;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

_DWORD *sub_100A47A94()
{
  double result = operator new(0x28uLL);
  result[7] = 0;
  result[8] = 0;
  *((void *)result + 1) = 0LL;
  *((void *)result + 2) = 0LL;
  *(void *)double result = off_101869050;
  *((_BYTE *)result + 24) = 0;
  return result;
}

uint64_t sub_100A47AC4(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_BYTE *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100A47ADC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_25;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = *(void *)v16;
        *(_DWORD *)(a1 + 32) |= 1u;
        int v11 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_17;
        }
      }

      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_25;
      }
LABEL_17:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v16) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + 16) = *(void *)v16;
      *(_DWORD *)(a1 + 32) |= 2u;
      uint64_t v12 = (_BYTE *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v12 < v9 && *v12 == 24)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_21:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v16);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v16[0];
          unsigned int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unsigned int v13 = *v10;
          unsigned int v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }

        *(_BYTE *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_21;
      }
    }

    else
    {
      int v8 = TagFallback & 7;
    }

uint64_t sub_100A47CBC( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 24),  a2,  a4);
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(unsigned __int8 *)(v5 + 24),  a2,  a4);
  }
  return result;
}

uint64_t sub_100A47D34(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = v1;
  return v1;
}

double sub_100A47D6C(uint64_t a1, void *lpsrc)
{
  return sub_100A4797C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A47DB8()
{
  return 1LL;
}

void *sub_100A47DC0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.FrequencyOffset");
}

void sub_100A47DD0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  5283LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(void *)(a1 + 16) = v8;
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }

void sub_100A47EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A47ED8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018690C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A47EE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018690C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

_DWORD *sub_100A47F08()
{
  uint64_t result = operator new(0x28uLL);
  result[7] = 0;
  result[8] = 0;
  *((void *)result + 1) = 0LL;
  *((void *)result + 2) = 0LL;
  *(void *)uint64_t result = off_1018690C8;
  *((_WORD *)result + 12) = 0;
  return result;
}

uint64_t sub_100A47F38(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_WORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100A47F50( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v18) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = *(void *)v18;
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v18) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v18;
        *(_DWORD *)(a1 + 32) |= 2u;
        char v10 = (_BYTE *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        int v11 = v10 + 1;
        *((void *)this + 1) = v11;
LABEL_20:
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v12 = v18[0];
          unsigned int v13 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unsigned int v12 = *v11;
          unsigned int v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }

        *(_BYTE *)(a1 + 24) = v12 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        unsigned int v14 = v13 + 1;
        *((void *)this + 1) = v14;
LABEL_33:
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v16 = v18[0];
          uint64_t v17 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unsigned int v16 = *v14;
          uint64_t v17 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v17;
        }

        *(_BYTE *)(a1 + 25) = v16 != 0;
        *(_DWORD *)(a1 + 32) |= 8u;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_20;
      case 4u:
        int v7 = TagFallback & 7;
        unsigned int v14 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_33;
      default:
        int v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4) {
          return 1LL;
        }
        return 0LL;
    }

    return result;
  }

uint64_t sub_100A481C4( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(unsigned __int8 *)(v5 + 25),  a2,  a4);
  }

uint64_t sub_100A48258(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = v1;
  return v1;
}

void sub_100A4829C(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A482E8()
{
  return 1LL;
}

void *sub_100A482F0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.FrequencyOffsetFromPhaseTracking");
}

double sub_100A48300(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  5580LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 48);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) != 0)
    {
      uint64_t v8 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 48) |= 1u;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v8;
      int v6 = *(_DWORD *)(a2 + 48);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }

    else if ((*(_BYTE *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }

    uint64_t v9 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 2u;
    *(void *)(a1 + 16) = v9;
    int v6 = *(_DWORD *)(a2 + 48);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }

void sub_100A48410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A48428(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869140;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A48438(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869140;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100A48458()
{
  uint64_t v0 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v0 = off_101869140;
  *((_DWORD *)v0 + 11) = 0;
  *((_DWORD *)v0 + 12) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  v0[40] = 0;
  return result;
}

uint64_t sub_100A48490(uint64_t result)
{
  if (*(_BYTE *)(result + 48))
  {
    *(_BYTE *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(va, 8) = 0u;
  }

  *(_DWORD *)(result + 4_Block_object_dispose(va, 8) = 0;
  return result;
}

uint64_t sub_100A484B0( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  int v6 = (unint64_t *)(a1 + 16);
  while (2)
  {
    char v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v12 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v11;
          unsigned int v12 = v11 + 1;
          *((void *)this + 1) = v12;
        }

        *(_DWORD *)(a1 + 48) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          unsigned int v13 = v12 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_29;
        }

        continue;
      case 2u:
        int v9 = TagFallback & 7;
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v17 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          *int v6 = *v13;
          uint64_t v17 = v13 + 1;
          *((void *)this + 1) = v17;
        }

        *(_DWORD *)(a1 + 48) |= 2u;
        *((void *)this + 1) = v17 + 1;
LABEL_37:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v22) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v22;
        *(_DWORD *)(a1 + 48) |= 4u;
        int v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_41:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v22) & 1) != 0)
        {
          *(void *)(a1 + 32) = *(void *)v22;
          *(_DWORD *)(a1 + 48) |= 8u;
          unsigned int v19 = (_BYTE *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v19 < v14 && *v19 == 40)
          {
            int v15 = v19 + 1;
            *((void *)this + 1) = v15;
LABEL_45:
            if ((unint64_t)v15 >= v14 || *v15 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v22);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v20 = v22[0];
              int v21 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
            }

            else
            {
              unsigned int v20 = *v15;
              int v21 = (unsigned __int8 *)(v15 + 1);
              *((void *)this + 1) = v21;
            }

            *(_BYTE *)(a1 + 40) = v20 != 0;
            *(_DWORD *)(a1 + 48) |= 0x10u;
            if (v21 == (unsigned __int8 *)v14
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_37;
        }
        goto LABEL_20;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_41;
        }
        goto LABEL_20;
      case 5u:
        int v9 = TagFallback & 7;
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_45;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A48798( uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(v5 + 16),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_100A48848(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0LL;
    goto LABEL_15;
  }

  if ((*(_BYTE *)(a1 + 48) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(_BYTE *)(a1 + 48) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
     + 1;
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 2) != 0)
  {
LABEL_7:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16),  a2)
        + 1;
    int v3 = *(_DWORD *)(a1 + 48);
  }

double sub_100A488D4(uint64_t a1, void *lpsrc)
{
  return sub_100A48300(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A48920()
{
  return 1LL;
}

void *sub_100A48928@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.PhaseTracking");
}

double sub_100A48938(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  5839LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      char v7 = *(_DWORD **)(a1 + 8);
      if (!v7)
      {
        char v7 = operator new(0x28uLL);
        v7[7] = 0;
        _WORD v7[8] = 0;
        *((void *)v7 + 1) = 0LL;
        *((void *)v7 + 2) = 0LL;
        *(void *)char v7 = off_101868FD8;
        *((_BYTE *)v7 + 24) = 0;
        *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A1A70 + 8);
      }
      double result = sub_100A47528((uint64_t)v7, v8);
      int v6 = *(_DWORD *)(a2 + 32);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    *(_DWORD *)(a1 + 32) |= 2u;
    int v9 = *(_DWORD **)(a1 + 16);
    if (!v9)
    {
      int v9 = operator new(0x28uLL);
      v9[7] = 0;
      _WORD v9[8] = 0;
      *((void *)v9 + 1) = 0LL;
      *((void *)v9 + 2) = 0LL;
      *(void *)int v9 = off_101869050;
      *((_BYTE *)v9 + 24) = 0;
      *(void *)(a1 + 16) = v9;
    }

    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A1A70 + 16);
    }
    double result = sub_100A4797C((uint64_t)v9, v10);
    if ((*(_DWORD *)(a2 + 32) & 4) != 0)
    {
LABEL_7:
      LODWORD(result) = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 24) = LODWORD(result);
    }
  }

  return result;
}

void sub_100A48A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100A48A98(void *result)
{
  if ((void *)qword_1019A1A70 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    double result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A48AF4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018691B8;
  sub_100A48A98(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A48B24(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018691B8;
  sub_100A48A98(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

void *sub_100A48B58()
{
  double result = operator new(0x28uLL);
  *double result = off_1018691B8;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + _Block_object_dispose(va, 8) = 0;
  return result;
}

uint64_t sub_100A48B84(uint64_t result)
{
  LOBYTE(v1) = *(_BYTE *)(result + 32);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 32))
        {
          *(void *)(v2 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(_BYTE *)(v2 + 24) = 0;
        }

        *(_DWORD *)(v2 + 32) = 0;
        int v1 = *(_DWORD *)(result + 32);
      }
    }

    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 32))
        {
          *(void *)(v3 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(_BYTE *)(v3 + 24) = 0;
        }

        *(_DWORD *)(v3 + 32) = 0;
      }
    }

    *(_DWORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100A48BDC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
            *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v7 = TagFallback >> 3;
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          int v9 = *(_DWORD **)(a1 + 8);
          if (!v9)
          {
            int v9 = operator new(0x28uLL);
            v9[7] = 0;
            _WORD v9[8] = 0;
            *((void *)v9 + 1) = 0LL;
            *((void *)v9 + 2) = 0LL;
            *(void *)int v9 = off_101868FD8;
            *((_BYTE *)v9 + 24) = 0;
            *(void *)(a1 + _Block_object_dispose(va, 8) = v9;
          }

          uint64_t v10 = (char *)*((void *)this + 1);
          if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v30)) {
              return 0LL;
            }
          }

          else
          {
            unsigned int v30 = *v10;
            *((void *)this + 1) = v10 + 1;
          }

          int v11 = *((_DWORD *)this + 14);
          int v12 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v11 + 1;
          if (v11 >= v12) {
            return 0LL;
          }
          int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v30);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
          int v15 = *((_DWORD *)this + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)this + 14) = v17;
          }
          int v18 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18)
          {
            *((void *)this + 1) = v18 + 1;
            goto LABEL_32;
          }
        }

        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
LABEL_32:
        *(_DWORD *)(a1 + 32) |= 2u;
        unsigned int v19 = *(_DWORD **)(a1 + 16);
        if (!v19)
        {
          unsigned int v19 = operator new(0x28uLL);
          v19[7] = 0;
          _WORD v19[8] = 0;
          *((void *)v19 + 1) = 0LL;
          *((void *)v19 + 2) = 0LL;
          *(void *)unsigned int v19 = off_101869050;
          *((_BYTE *)v19 + 24) = 0;
          *(void *)(a1 + 16) = v19;
        }

        unsigned int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v31)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v31 = *v20;
          *((void *)this + 1) = v20 + 1;
        }

        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0LL;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v25, 1);
        int v26 = v25 - 1;
        if (v26 < 0 == v16) {
          *((_DWORD *)this + 14) = v26;
        }
        uint64_t v27 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v27 < *((void *)this + 2) && *v27 == 29)
        {
          *((void *)this + 1) = v27 + 1;
          goto LABEL_46;
        }
      }

      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 5) {
        goto LABEL_20;
      }
LABEL_46:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
        return 0LL;
      }
      *(_DWORD *)(a1 + 24) = v29;
      *(_DWORD *)(a1 + 32) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_20:
    if (v8 == 4) {
      return 1LL;
    }
  }

uint64_t sub_100A48EF4( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A1A70 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(float *)(v5 + 24),  a3);
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A1A70 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  (int)a2,  *(float *)(v5 + 24),  a3);
  }
  return result;
}

uint64_t sub_100A48F8C(uint64_t a1)
{
  LOBYTE(v1) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0LL;
    goto LABEL_27;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (!v2) {
      uint64_t v2 = *(void *)(qword_1019A1A70 + 8);
    }
    int v3 = *(unsigned __int8 *)(v2 + 32);
    if (*(_BYTE *)(v2 + 32))
    {
      int v4 = (v3 << 31 >> 31) & 9;
      if ((v3 & 2) != 0) {
        v4 += 9;
      }
      if ((v3 & 4) != 0) {
        int v3 = v4 + 2;
      }
      else {
        int v3 = v4;
      }
    }

    *(_DWORD *)(v2 + 2_Block_object_dispose(va, 8) = v3;
    LODWORD(v2) = v3 + 2;
    int v1 = *(_DWORD *)(a1 + 32);
    if ((v1 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }

  LODWORD(v2) = 0;
  if ((*(_BYTE *)(a1 + 32) & 2) != 0)
  {
LABEL_15:
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A1A70 + 16);
    }
    int v6 = *(unsigned __int8 *)(v5 + 32);
    if (*(_BYTE *)(v5 + 32))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 2;
      }
      else {
        int v6 = v7;
      }
    }

    *(_DWORD *)(v5 + 2_Block_object_dispose(va, 8) = v6;
    LODWORD(v2) = v2 + v6 + 2;
    int v1 = *(_DWORD *)(a1 + 32);
  }

double sub_100A49064(uint64_t a1, void *lpsrc)
{
  return sub_100A48938(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A490B0()
{
  return 1LL;
}

void *sub_100A490B8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SignalCorrelationPeak");
}

void sub_100A490C8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  6075LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v6;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return;
        }
LABEL_10:
        unsigned int v8 = *(_DWORD *)(a2 + 24);
        if (v8 >= 6) {
          sub_10125A110();
        }
        *(_DWORD *)(a1 + 32) |= 4u;
        *(_DWORD *)(a1 + 24) = v8;
        return;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(void *)(a1 + 16) = v7;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
    goto LABEL_10;
  }

void sub_100A491A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A491BC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869230;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A491CC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869230;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A491EC()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_101869230;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + _Block_object_dispose(va, 8) = 0;
  return result;
}

uint64_t sub_100A49218(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_DWORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100A49230( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_25;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v15) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = *(void *)v15;
        *(_DWORD *)(a1 + 32) |= 1u;
        int v11 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_17;
        }
      }

      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_25;
      }
LABEL_17:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v15) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + 16) = *(void *)v15;
      *(_DWORD *)(a1 + 32) |= 2u;
      int v12 = (_BYTE *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v12 < v9 && *v12 == 24)
      {
        uint64_t v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_21:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v15);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v15[0];
        }

        else
        {
          unsigned int v13 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        if (v13 <= 5)
        {
          *(_DWORD *)(a1 + 32) |= 4u;
          *(_DWORD *)(a1 + 24) = v13;
        }

        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_21;
      }
    }

    else
    {
      int v8 = TagFallback & 7;
    }

uint64_t sub_100A49410( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 24),  a2,  a4);
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 16),  a3);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 24),  a2,  a4);
  }
  return result;
}

uint64_t sub_100A49488(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }

      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      }

      else
      {
        int v7 = 2;
      }

      uint64_t v5 = (v7 + v5);
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = v5;
  return v5;
}

void sub_100A49504(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A49550()
{
  return 1LL;
}

void *sub_100A49558@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.FullSvTime");
}

float sub_100A49568(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  6306LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      float result = *(float *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(float *)(a1 + _Block_object_dispose(va, 8) = result;
      int v6 = *(_DWORD *)(a2 + 24);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }

    float result = *(float *)(a2 + 12);
    *(_DWORD *)(a1 + 24) |= 2u;
    *(float *)(a1 + 12) = result;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return result;
    }
LABEL_7:
    float result = *(float *)(a2 + 16);
    *(_DWORD *)(a1 + 24) |= 4u;
    *(float *)(a1 + 16) = result;
  }

  return result;
}

void sub_100A49638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A49650(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018692A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A49660(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018692A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A49680()
{
  float result = operator new(0x20uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *float result = off_1018692A8;
  *((_DWORD *)result + 6) = 0;
  return result;
}

uint64_t sub_100A496AC(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(_DWORD *)(result + 16) = 0;
  }

  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100A496C4( _DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_27;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0) {
          return 0LL;
        }
        a1[2] = v14;
        a1[6] |= 1u;
        unint64_t v9 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 21)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
            return 0LL;
          }
          a1[3] = v13;
          a1[6] |= 2u;
          uint64_t v10 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 29)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }

      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }

      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }

      int v8 = TagFallback & 7;
      if (v8 == 5) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1LL;
      }
    }

uint64_t sub_100A4987C( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 24);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(float *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(float *)(v4 + 16),  a3);
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(float *)(v4 + 12),  a3);
  if ((*(_DWORD *)(v4 + 24) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(float *)(v4 + 16),  a3);
  }
  return result;
}

uint64_t sub_100A498F4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 24);
  if (*(_BYTE *)(a1 + 24))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

float sub_100A4992C(uint64_t a1, void *lpsrc)
{
  return sub_100A49568(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A49978()
{
  return 1LL;
}

void *sub_100A49980@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SvMeasurementUsage");
}

void sub_100A49990(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v35,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  6986LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v35,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v34, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v35);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88),  *(_DWORD *)(a2 + 96) + *(_DWORD *)(a1 + 96));
  if (*(int *)(a2 + 96) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 88) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 100);
      uint64_t v8 = *(int *)(a1 + 96);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 104))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 100);
        }

        *(_DWORD *)(a1 + 100) = v7 + 1;
        uint64_t v10 = operator new(0x28uLL);
        void *v10 = off_1018691B8;
        v10[1] = 0LL;
        v10[2] = 0LL;
        v10[3] = 0LL;
        *((_DWORD *)v10 + _Block_object_dispose(va, 8) = 0;
        uint64_t v11 = *(void *)(a1 + 88);
        uint64_t v12 = *(int *)(a1 + 96);
        *(_DWORD *)(a1 + 96) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 88);
        *(_DWORD *)(a1 + 96) = v8 + 1;
        uint64_t v10 = *(void **)(v9 + 8 * v8);
      }

      sub_100A48938((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 96));
  }

  int v13 = *(_DWORD *)(a2 + 116);
  if (!(_BYTE)v13) {
    goto LABEL_21;
  }
  if ((v13 & 1) != 0)
  {
    int v18 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 116) |= 1u;
    *(_DWORD *)(a1 + _Block_object_dispose(va, 8) = v18;
    int v13 = *(_DWORD *)(a2 + 116);
    if ((v13 & 2) == 0)
    {
LABEL_14:
      if ((v13 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_37;
    }
  }

  else if ((v13 & 2) == 0)
  {
    goto LABEL_14;
  }

  int v19 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 116) |= 2u;
  *(_DWORD *)(a1 + 12) = v19;
  int v13 = *(_DWORD *)(a2 + 116);
  if ((v13 & 4) == 0)
  {
LABEL_15:
    if ((v13 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }

void sub_100A49DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A49DF0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869320;
  uint64_t v2 = (uint64_t)a1 + 88;
  sub_100A49E30(a1);
  sub_10008D0EC(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A49E30(void *a1)
{
  uint64_t v2 = a1[10];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    operator delete((void *)v2);
  }

  if ((void *)qword_1019A1A88 != a1)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = a1[3];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t v6 = a1[4];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t v7 = a1[5];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
  }

void sub_100A49EE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_100A49EFC()
{
  uint64_t v0 = (char *)operator new(0x78uLL);
  *(void *)uint64_t v0 = off_101869320;
  *((void *)v0 + 11) = 0LL;
  *((void *)v0 + 12) = 0LL;
  *((_DWORD *)v0 + 26) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *((void *)v0 + 9) = 0LL;
  *((void *)v0 + 10) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *((void *)v0 + 14) = 0LL;
  return result;
}

uint64_t sub_100A49F4C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 116);
  if ((_BYTE)v2)
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 32))
        {
          *(void *)(v3 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(_DWORD *)(v3 + 24) = 0;
        }

        *(_DWORD *)(v3 + 32) = 0;
        int v2 = *(_DWORD *)(result + 116);
      }
    }

    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 24))
        {
          *(void *)(v4 + _Block_object_dispose(va, 8) = 0LL;
          *(_DWORD *)(v4 + 16) = 0;
        }

        *(_DWORD *)(v4 + 24) = 0;
        int v2 = *(_DWORD *)(result + 116);
      }
    }

    if ((v2 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 24))
        {
          *(void *)(v5 + _Block_object_dispose(va, 8) = 0LL;
          *(_DWORD *)(v5 + 16) = 0;
        }

        *(_DWORD *)(v5 + 24) = 0;
        int v2 = *(_DWORD *)(result + 116);
      }
    }

    if ((v2 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(result + 40);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 24))
        {
          *(void *)(v6 + _Block_object_dispose(va, 8) = 0LL;
          *(_DWORD *)(v6 + 16) = 0;
        }

        *(_DWORD *)(v6 + 24) = 0;
        int v2 = *(_DWORD *)(result + 116);
      }
    }

    *(void *)(result + 4_Block_object_dispose(va, 8) = 0LL;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(result + 56) = 0LL;
    *(void *)(result + 64) = 0LL;
    *(_DWORD *)(result + 72) = 0;
    if ((v2 & 0x2000) != 0)
    {
      uint64_t v7 = *(void *)(result + 80);
      if ((_UNKNOWN *)v7 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)uint64_t v7 = 0;
          *(void *)(v7 + _Block_object_dispose(va, 8) = 0LL;
        }

        else
        {
          *(_BYTE *)uint64_t v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }

    *(_DWORD *)(result + 76) = 0;
  }

  if (*(int *)(result + 96) >= 1)
  {
    uint64_t v8 = 0LL;
    do
    {
      uint64_t v9 = *(void *)(*(void *)(v1 + 88) + 8 * v8);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 32LL))(v9);
      ++v8;
    }

    while (v8 < *(int *)(v1 + 96));
  }

  *(_DWORD *)(v1 + 96) = 0;
  *(_DWORD *)(v1 + 116) = 0;
  return result;
}

uint64_t sub_100A4A094( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 48);
  uint64_t v6 = (unsigned int *)(a1 + 52);
  uint64_t v7 = (unsigned int *)(a1 + 76);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88);
  while (2)
  {
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_51;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v91) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + _Block_object_dispose(va, 8) = v91;
        *(_DWORD *)(a1 + 116) |= 1u;
        uint64_t v12 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v12 + 1;
        goto LABEL_15;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_51;
        }
LABEL_15:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v91) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 12) = v91;
        int v13 = *(_DWORD *)(a1 + 116) | 2;
        *(_DWORD *)(a1 + 116) = v13;
        int v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_21:
        *(_DWORD *)(a1 + 116) = v13 | 4;
        unsigned int v15 = *(void **)(a1 + 16);
        if (!v15)
        {
          unsigned int v15 = operator new(0x28uLL);
          void *v15 = off_101869230;
          v15[1] = 0LL;
          unsigned int v15[2] = 0LL;
          v15[3] = 0LL;
          *((_DWORD *)v15 + _Block_object_dispose(va, 8) = 0;
          *(void *)(a1 + 16) = v15;
        }

        unsigned int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v91)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v91 = *v16;
          *((void *)this + 1) = v16 + 1;
        }

        int v28 = *((_DWORD *)this + 14);
        int v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0LL;
        }
        int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
        int v32 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v32, 1);
        int v34 = v32 - 1;
        if (v34 < 0 == v33) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v35 + 1;
LABEL_63:
        *(_DWORD *)(a1 + 116) |= 8u;
        int v36 = *(void **)(a1 + 24);
        if (!v36)
        {
          int v36 = operator new(0x20uLL);
          v36[1] = 0LL;
          _OWORD v36[2] = 0LL;
          void *v36 = off_1018692A8;
          *((_DWORD *)v36 + 6) = 0;
          *(void *)(a1 + 24) = v36;
        }

        uint64_t v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v91)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v91 = *v37;
          *((void *)this + 1) = v37 + 1;
        }

        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0LL;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v33) {
          *((_DWORD *)this + 14) = v43;
        }
        unsigned int v44 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v44 + 1;
LABEL_77:
        *(_DWORD *)(a1 + 116) |= 0x10u;
        int v45 = *(void **)(a1 + 32);
        if (!v45)
        {
          int v45 = operator new(0x20uLL);
          v45[1] = 0LL;
          v45[2] = 0LL;
          *int v45 = off_1018692A8;
          *((_DWORD *)v45 + 6) = 0;
          *(void *)(a1 + 32) = v45;
        }

        int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v91)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v91 = *v46;
          *((void *)this + 1) = v46 + 1;
        }

        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0LL;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v33) {
          *((_DWORD *)this + 14) = v52;
        }
        unsigned int v53 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v53 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 116) |= 0x20u;
        int v54 = *(void **)(a1 + 40);
        if (!v54)
        {
          int v54 = operator new(0x20uLL);
          v54[1] = 0LL;
          v54[2] = 0LL;
          *int v54 = off_1018692A8;
          *((_DWORD *)v54 + 6) = 0;
          *(void *)(a1 + 40) = v54;
        }

        int v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v91)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v91 = *v55;
          *((void *)this + 1) = v55 + 1;
        }

        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0LL;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v33) {
          *((_DWORD *)this + 14) = v61;
        }
        int v62 = (_BYTE *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        int v18 = v62 + 1;
        *((void *)this + 1) = v18;
LABEL_105:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v63 = (_BYTE *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v18;
          unsigned int v63 = v18 + 1;
          *((void *)this + 1) = v63;
        }

        *(_DWORD *)(a1 + 116) |= 0x40u;
        int v19 = v63 + 1;
        *((void *)this + 1) = v19;
LABEL_113:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          int v65 = (_BYTE *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v6 = *v19;
          int v65 = v19 + 1;
          *((void *)this + 1) = v65;
        }

        *(_DWORD *)(a1 + 116) |= 0x80u;
        unsigned int v20 = v65 + 1;
        *((void *)this + 1) = v20;
LABEL_121:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v66 = v91;
        }

        else
        {
          unsigned int v66 = *v20;
          *((void *)this + 1) = v20 + 1;
        }

        if (v66 <= 6)
        {
          *(_DWORD *)(a1 + 116) |= 0x100u;
          *(_DWORD *)(a1 + 56) = v66;
        }

        uint64_t v67 = (_BYTE *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        int v22 = v67 + 1;
        *((void *)this + 1) = v22;
LABEL_131:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v68 = v91;
        }

        else
        {
          unsigned int v68 = *v22;
          *((void *)this + 1) = v22 + 1;
        }

        if (v68 <= 6)
        {
          *(_DWORD *)(a1 + 116) |= 0x200u;
          *(_DWORD *)(a1 + 60) = v68;
        }

        int v69 = (_BYTE *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        unsigned int v24 = v69 + 1;
        *((void *)this + 1) = v24;
LABEL_141:
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v70 = v91;
          int v71 = (_BYTE *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }

        else
        {
          unsigned int v70 = *v24;
          int v71 = v24 + 1;
          *((void *)this + 1) = v71;
        }

        *(_DWORD *)(a1 + 64) = v70;
        *(_DWORD *)(a1 + 116) |= 0x400u;
        *((void *)this + 1) = v71 + 1;
LABEL_149:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v91) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 6_Block_object_dispose(va, 8) = v91;
        *(_DWORD *)(a1 + 116) |= 0x800u;
        unsigned int v72 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v72 + 1;
LABEL_153:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v91) & 1) != 0)
        {
          *(_DWORD *)(a1 + 72) = v91;
          int v25 = *(_DWORD *)(a1 + 116) | 0x1000;
          *(_DWORD *)(a1 + 116) = v25;
          int v73 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v73 < *((void *)this + 2) && *v73 == 114)
          {
            *((void *)this + 1) = v73 + 1;
LABEL_157:
            *(_DWORD *)(a1 + 116) = v25 | 0x2000;
            int v74 = *(void **)(a1 + 80);
            if (v74 == (void *)&wireless_diagnostics::google::protobuf::internal::kEmptyString)
            {
              int v74 = operator new(0x18uLL);
              v74[1] = 0LL;
              v74[2] = 0LL;
              void *v74 = 0LL;
              *(void *)(a1 + 80) = v74;
            }

            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes(this, v74);
            if (!(_DWORD)result) {
              return result;
            }
            uint64_t v75 = (_BYTE *)*((void *)this + 1);
            unint64_t v26 = *((void *)this + 2);
            if ((unint64_t)v75 < v26 && *v75 == 120)
            {
              uint64_t v27 = v75 + 1;
              *((void *)this + 1) = v27;
LABEL_163:
              if ((unint64_t)v27 >= v26 || (char)*v27 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                if (!(_DWORD)result) {
                  return result;
                }
                uint64_t v76 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v26 = *((void *)this + 2);
              }

              else
              {
                *uint64_t v7 = *v27;
                uint64_t v76 = v27 + 1;
                *((void *)this + 1) = v76;
              }

              *(_DWORD *)(a1 + 116) |= 0x4000u;
              if ((int)v26 - (int)v76 >= 2 && *v76 == 130 && v76[1] == 1)
              {
                do
                {
                  *((void *)this + 1) = v76 + 2;
LABEL_172:
                  int v77 = *(_DWORD *)(a1 + 100);
                  uint64_t v78 = *(int *)(a1 + 96);
                  if ((int)v78 >= v77)
                  {
                    if (v77 == *(_DWORD *)(a1 + 104))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v77 + 1);
                      int v77 = *(_DWORD *)(a1 + 100);
                    }

                    *(_DWORD *)(a1 + 100) = v77 + 1;
                    int v80 = operator new(0x28uLL);
                    *int v80 = off_1018691B8;
                    v80[1] = 0LL;
                    v80[2] = 0LL;
                    v80[3] = 0LL;
                    *((_DWORD *)v80 + _Block_object_dispose(va, 8) = 0;
                    uint64_t v81 = *(void *)(a1 + 88);
                    uint64_t v82 = *(int *)(a1 + 96);
                    *(_DWORD *)(a1 + 96) = v82 + 1;
                    *(void *)(v81 + 8 * v82) = v80;
                  }

                  else
                  {
                    uint64_t v79 = *(void *)(a1 + 88);
                    *(_DWORD *)(a1 + 96) = v78 + 1;
                    int v80 = *(void **)(v79 + 8 * v78);
                  }

                  int v83 = (char *)*((void *)this + 1);
                  if ((unint64_t)v83 >= *((void *)this + 2) || *v83 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v91)) {
                      return 0LL;
                    }
                  }

                  else
                  {
                    unsigned int v91 = *v83;
                    *((void *)this + 1) = v83 + 1;
                  }

                  int v84 = *((_DWORD *)this + 14);
                  int v85 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v84 + 1;
                  if (v84 >= v85) {
                    return 0LL;
                  }
                  int v86 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v86);
                  int v88 = *((_DWORD *)this + 14);
                  BOOL v33 = __OFSUB__(v88, 1);
                  int v89 = v88 - 1;
                  if (v89 < 0 == v33) {
                    *((_DWORD *)this + 14) = v89;
                  }
                  uint64_t v76 = (unsigned __int8 *)*((void *)this + 1);
                  unsigned int v90 = (unsigned __int8 *)*((void *)this + 2);
                }

                while ((int)v90 - (int)v76 > 1 && *v76 == 130 && v76[1] == 1);
                if (v76 == v90 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
                  uint64_t result = 1LL;
                  *((_BYTE *)this + 36) = 1;
                  return result;
                }
              }
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_51;
        }
        int v13 = *(_DWORD *)(a1 + 116);
        goto LABEL_21;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_63;
        }
        goto LABEL_51;
      case 5u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_77;
        }
        goto LABEL_51;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_91;
        }
        goto LABEL_51;
      case 7u:
        int v11 = TagFallback & 7;
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_105;
      case 8u:
        int v11 = TagFallback & 7;
        int v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_113;
      case 9u:
        int v11 = TagFallback & 7;
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_121;
      case 0xAu:
        int v11 = TagFallback & 7;
        int v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_131;
      case 0xBu:
        int v11 = TagFallback & 7;
        unsigned int v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_141;
      case 0xCu:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_149;
        }
        goto LABEL_51;
      case 0xDu:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_153;
        }
        goto LABEL_51;
      case 0xEu:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_51;
        }
        int v25 = *(_DWORD *)(a1 + 116);
        goto LABEL_157;
      case 0xFu:
        int v11 = TagFallback & 7;
        uint64_t v27 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        goto LABEL_163;
      case 0x10u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_51;
        }
        goto LABEL_172;
      default:
        int v11 = TagFallback & 7;
LABEL_51:
        if (v11 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A4AB4C( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 116);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(float *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(float *)(v5 + 12),  a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }

uint64_t sub_100A4AD8C(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 116);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_57;
  }

  if ((v3 & 2) != 0) {
    int v4 = ((v3 << 31 >> 31) & 5) + 5;
  }
  else {
    int v4 = (v3 << 31 >> 31) & 5;
  }
  if ((v3 & 4) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_1019A1A88 + 16);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A49488(v5, a2);
    int v7 = (int)v6;
    else {
      int v8 = 1;
    }
    v4 += v7 + v8 + 1;
    int v3 = *(_DWORD *)(a1 + 116);
    if ((v3 & 8) == 0)
    {
LABEL_7:
      if ((v3 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_29;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_7;
  }

  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1019A1A88 + 24);
  }
  int v10 = *(unsigned __int8 *)(v9 + 24);
  int v11 = (v10 << 31 >> 31) & 5;
  if ((v10 & 2) != 0) {
    v11 += 5;
  }
  if ((v10 & 4) != 0) {
    v11 += 5;
  }
  if (*(_BYTE *)(v9 + 24)) {
    int v12 = v11;
  }
  else {
    int v12 = 0;
  }
  *(_DWORD *)(v9 + 20) = v12;
  v4 += v12 + 2;
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 0x10) == 0)
  {
LABEL_8:
    if ((v3 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }

void sub_100A4B134(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A4B180()
{
  return 1LL;
}

void *sub_100A4B188@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MeasurementExtension");
}

void sub_100A4B198(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v29,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  7683LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v29,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v28, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v29);
  }

  int v5 = *(_DWORD *)(a2 + 112);
  if (!(_BYTE)v5) {
    goto LABEL_41;
  }
  if ((v5 & 1) != 0)
  {
    *(_DWORD *)(a1 + 112) |= 1u;
    int v6 = *(void **)(a1 + 8);
    if (!v6)
    {
      int v6 = operator new(0x20uLL);
      v6[1] = 0LL;
      v6[2] = 0LL;
      *int v6 = &off_101868AB0;
      *((_DWORD *)v6 + 6) = 0;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v6;
    }

    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A1A90 + 8);
    }
    sub_100A420FC((uint64_t)v6, v7);
    int v5 = *(_DWORD *)(a2 + 112);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 112) |= 2u;
  int v8 = *(char **)(a1 + 16);
  if (!v8)
  {
    int v8 = (char *)operator new(0x68uLL);
    *(void *)int v8 = off_101868F60;
    *(_OWORD *)(v8 + _Block_object_dispose(va, 8) = 0u;
    *(_OWORD *)(v8 + 24) = 0u;
    *(_OWORD *)(v8 + 40) = 0u;
    *(_OWORD *)(v8 + 56) = 0u;
    *(_OWORD *)(v8 + 72) = 0u;
    *(_OWORD *)(v8 + 84) = 0u;
    *(void *)(a1 + 16) = v8;
  }

  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1019A1A90 + 16);
  }
  sub_100A45D18((uint64_t)v8, v9);
  int v5 = *(_DWORD *)(a2 + 112);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

void sub_100A4B5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100A4B60C(void *result)
{
  if ((void *)qword_1019A1A90 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[6];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = v1[7];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t v6 = v1[8];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t v7 = v1[9];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    uint64_t v8 = v1[11];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
    uint64_t result = (void *)v1[12];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A4B6E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869398;
  sub_100A4B60C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A4B710(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869398;
  sub_100A4B60C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_100A4B744()
{
  uint64_t v0 = (char *)operator new(0x78uLL);
  *(void *)uint64_t v0 = off_101869398;
  *((_DWORD *)v0 + 27) = 0;
  *((_DWORD *)v0 + 2_Block_object_dispose(va, 8) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 8_Block_object_dispose(va, 8) = 0u;
  v0[104] = 0;
  return result;
}

uint64_t sub_100A4B78C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 112);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100A42290(result);
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }

    if ((v2 & 2) != 0)
    {
      double result = *(void *)(v1 + 16);
      if (result)
      {
        double result = sub_100A462D8(result);
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }

    *(void *)(v1 + 24) = 0LL;
    *(void *)(v1 + 32) = 0LL;
    *(void *)(v1 + 40) = 0LL;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 48);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 32))
        {
          *(void *)(v3 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(_BYTE *)(v3 + 24) = 0;
        }

        *(_DWORD *)(v3 + 32) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }

    if ((v2 & 0x40) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 56);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 32))
        {
          *(void *)(v4 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
          *(_BYTE *)(v4 + 24) = 0;
        }

        *(_DWORD *)(v4 + 32) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }

    if ((v2 & 0x80) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 64);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 48))
        {
          *(_BYTE *)(v5 + 40) = 0;
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + _Block_object_dispose(va, 8) = 0u;
        }

        *(_DWORD *)(v5 + 4_Block_object_dispose(va, 8) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
  }

  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      double result = *(void *)(v1 + 72);
      if (result)
      {
        double result = sub_100A49F4C(result);
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }

    *(void *)(v1 + 80) = 0LL;
    if ((v2 & 0x800) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 88);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 32))
        {
          *(void *)(v6 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v6 + 16) = 0LL;
          *(_BYTE *)(v6 + 24) = 0;
        }

        *(_DWORD *)(v6 + 32) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }

    *(_BYTE *)(v1 + 104) = 0;
    if ((v2 & 0x2000) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 96);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 32))
        {
          *(void *)(v7 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v7 + 16) = 0LL;
          *(_WORD *)(v7 + 24) = 0;
        }

        *(_DWORD *)(v7 + 32) = 0;
      }
    }
  }

  *(_DWORD *)(v1 + 112) = 0;
  return result;
}

uint64_t sub_100A4B8C4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 24);
  uint64_t v6 = (unint64_t *)(a1 + 32);
  uint64_t v7 = (unint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 112) |= 1u;
        uint64_t v11 = *(void **)(a1 + 8);
        if (!v11)
        {
          uint64_t v11 = operator new(0x20uLL);
          v11[1] = 0LL;
          _DWORD v11[2] = 0LL;
          void *v11 = &off_101868AB0;
          *((_DWORD *)v11 + 6) = 0;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v11;
        }

        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v12;
          *((void *)this + 1) = v12 + 1;
        }

        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0LL;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v30 + 1;
        goto LABEL_53;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
LABEL_53:
        *(_DWORD *)(a1 + 112) |= 2u;
        int v31 = *(char **)(a1 + 16);
        if (!v31)
        {
          int v31 = (char *)operator new(0x68uLL);
          *(void *)int v31 = off_101868F60;
          *(_OWORD *)(v31 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v31 + 24) = 0u;
          *(_OWORD *)(v31 + 40) = 0u;
          *(_OWORD *)(v31 + 56) = 0u;
          *(_OWORD *)(v31 + 72) = 0u;
          *(_OWORD *)(v31 + 84) = 0u;
          *(void *)(a1 + 16) = v31;
        }

        uint64_t v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v32;
          *((void *)this + 1) = v32 + 1;
        }

        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0LL;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v28) {
          *((_DWORD *)this + 14) = v38;
        }
        int v39 = (_BYTE *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        uint64_t v14 = v39 + 1;
        *((void *)this + 1) = v14;
LABEL_67:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          int v40 = (_BYTE *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v14;
          int v40 = v14 + 1;
          *((void *)this + 1) = v40;
        }

        *(_DWORD *)(a1 + 112) |= 4u;
        int v15 = v40 + 1;
        *((void *)this + 1) = v15;
LABEL_75:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v42 = (_BYTE *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v6 = *v15;
          uint64_t v42 = v15 + 1;
          *((void *)this + 1) = v42;
        }

        *(_DWORD *)(a1 + 112) |= 8u;
        uint64_t v16 = v42 + 1;
        *((void *)this + 1) = v16;
LABEL_83:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!(_DWORD)result) {
            return result;
          }
          int v43 = (_BYTE *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v7 = *v16;
          int v43 = v16 + 1;
          *((void *)this + 1) = v43;
        }

        int v17 = *(_DWORD *)(a1 + 112) | 0x10;
        *(_DWORD *)(a1 + 112) = v17;
        *((void *)this + 1) = v43 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 112) = v17 | 0x20;
        unsigned int v44 = *(_DWORD **)(a1 + 48);
        if (!v44)
        {
          unsigned int v44 = operator new(0x28uLL);
          v44[7] = 0;
          v44[8] = 0;
          *((void *)v44 + 1) = 0LL;
          *((void *)v44 + 2) = 0LL;
          *(void *)unsigned int v44 = off_101868FD8;
          *((_BYTE *)v44 + 24) = 0;
          *(void *)(a1 + 4_Block_object_dispose(va, 8) = v44;
        }

        int v45 = (char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v45;
          *((void *)this + 1) = v45 + 1;
        }

        int v46 = *((_DWORD *)this + 14);
        int v47 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v46 + 1;
        if (v46 >= v47) {
          return 0LL;
        }
        int v48 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v48);
        int v50 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v28) {
          *((_DWORD *)this + 14) = v51;
        }
        int v52 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v52 + 1;
LABEL_105:
        *(_DWORD *)(a1 + 112) |= 0x40u;
        unsigned int v53 = *(_DWORD **)(a1 + 56);
        if (!v53)
        {
          unsigned int v53 = operator new(0x28uLL);
          v53[7] = 0;
          v53[8] = 0;
          *((void *)v53 + 1) = 0LL;
          *((void *)v53 + 2) = 0LL;
          *(void *)unsigned int v53 = off_101869050;
          *((_BYTE *)v53 + 24) = 0;
          *(void *)(a1 + 56) = v53;
        }

        int v54 = (char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v54;
          *((void *)this + 1) = v54 + 1;
        }

        int v55 = *((_DWORD *)this + 14);
        int v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0LL;
        }
        int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        int v59 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v59, 1);
        int v60 = v59 - 1;
        if (v60 < 0 == v28) {
          *((_DWORD *)this + 14) = v60;
        }
        int v61 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v61 + 1;
LABEL_119:
        *(_DWORD *)(a1 + 112) |= 0x80u;
        int v62 = *(char **)(a1 + 64);
        if (!v62)
        {
          int v62 = (char *)operator new(0x38uLL);
          *(void *)int v62 = off_101869140;
          *((_DWORD *)v62 + 11) = 0;
          *((_DWORD *)v62 + 12) = 0;
          *(_OWORD *)(v62 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v62 + 24) = 0u;
          v62[40] = 0;
          *(void *)(a1 + 64) = v62;
        }

        unsigned int v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v63;
          *((void *)this + 1) = v63 + 1;
        }

        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 >= v65) {
          return 0LL;
        }
        int v66 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v66);
        int v68 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v28) {
          *((_DWORD *)this + 14) = v69;
        }
        unsigned int v70 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v70 + 1;
LABEL_133:
        *(_DWORD *)(a1 + 112) |= 0x100u;
        int v71 = *(char **)(a1 + 72);
        if (!v71)
        {
          int v71 = (char *)operator new(0x78uLL);
          *(void *)int v71 = off_101869320;
          *((void *)v71 + 11) = 0LL;
          *((void *)v71 + 12) = 0LL;
          *((_DWORD *)v71 + 26) = 0;
          *(_OWORD *)(v71 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v71 + 24) = 0u;
          *(_OWORD *)(v71 + 40) = 0u;
          *(_OWORD *)(v71 + 56) = 0u;
          *((void *)v71 + 9) = 0LL;
          *((void *)v71 + 10) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
          *((void *)v71 + 14) = 0LL;
          *(void *)(a1 + 72) = v71;
        }

        unsigned int v72 = (char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v72;
          *((void *)this + 1) = v72 + 1;
        }

        int v73 = *((_DWORD *)this + 14);
        int v74 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v73 + 1;
        if (v73 >= v74) {
          return 0LL;
        }
        int v75 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v75);
        int v77 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v77, 1);
        int v78 = v77 - 1;
        if (v78 < 0 == v28) {
          *((_DWORD *)this + 14) = v78;
        }
        uint64_t v79 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v79 + 1;
LABEL_147:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v102) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 80) = v102;
        *(_DWORD *)(a1 + 112) |= 0x200u;
        int v80 = (_BYTE *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        int v19 = v80 + 1;
        *((void *)this + 1) = v19;
LABEL_151:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v81 = v102;
        }

        else
        {
          unsigned int v81 = *v19;
          *((void *)this + 1) = v19 + 1;
        }

        if (v81 <= 4)
        {
          *(_DWORD *)(a1 + 112) |= 0x400u;
          *(_DWORD *)(a1 + 84) = v81;
        }

        uint64_t v82 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v82 + 1;
LABEL_161:
        *(_DWORD *)(a1 + 112) |= 0x800u;
        int v83 = *(_DWORD **)(a1 + 88);
        if (!v83)
        {
          int v83 = operator new(0x28uLL);
          v83[7] = 0;
          v83[8] = 0;
          *((void *)v83 + 1) = 0LL;
          *((void *)v83 + 2) = 0LL;
          *(void *)int v83 = off_101869050;
          *((_BYTE *)v83 + 24) = 0;
          *(void *)(a1 + 8_Block_object_dispose(va, 8) = v83;
        }

        int v84 = (char *)*((void *)this + 1);
        if ((unint64_t)v84 >= *((void *)this + 2) || *v84 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v84;
          *((void *)this + 1) = v84 + 1;
        }

        int v85 = *((_DWORD *)this + 14);
        int v86 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v85 + 1;
        if (v85 >= v86) {
          return 0LL;
        }
        int v87 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v87);
        int v89 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v89, 1);
        int v90 = v89 - 1;
        if (v90 < 0 == v28) {
          *((_DWORD *)this + 14) = v90;
        }
        unsigned int v91 = (_BYTE *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        int v21 = v91 + 1;
        *((void *)this + 1) = v21;
LABEL_175:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v92 = v102;
          uint64_t v93 = (_BYTE *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }

        else
        {
          unsigned int v92 = *v21;
          uint64_t v93 = v21 + 1;
          *((void *)this + 1) = v93;
        }

        *(_BYTE *)(a1 + 104) = v92 != 0;
        int v22 = *(_DWORD *)(a1 + 112) | 0x1000;
        *(_DWORD *)(a1 + 112) = v22;
        *((void *)this + 1) = v93 + 1;
LABEL_183:
        *(_DWORD *)(a1 + 112) = v22 | 0x2000;
        __int16 v94 = *(_DWORD **)(a1 + 96);
        if (!v94)
        {
          __int16 v94 = operator new(0x28uLL);
          v94[7] = 0;
          v94[8] = 0;
          *((void *)v94 + 1) = 0LL;
          *((void *)v94 + 2) = 0LL;
          *(void *)__int16 v94 = off_1018690C8;
          *((_WORD *)v94 + 12) = 0;
          *(void *)(a1 + 96) = v94;
        }

        uint64_t v95 = (char *)*((void *)this + 1);
        if ((unint64_t)v95 >= *((void *)this + 2) || *v95 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v102)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v102 = *v95;
          *((void *)this + 1) = v95 + 1;
        }

        int v96 = *((_DWORD *)this + 14);
        int v97 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v96 + 1;
        if (v96 >= v97) {
          return 0LL;
        }
        int v98 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v98);
        int v100 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v100, 1);
        int v101 = v100 - 1;
        if (v101 < 0 == v28) {
          *((_DWORD *)this + 14) = v101;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v10 = TagFallback & 7;
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_67;
      case 4u:
        int v10 = TagFallback & 7;
        int v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_75;
      case 5u:
        int v10 = TagFallback & 7;
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_83;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
        int v17 = *(_DWORD *)(a1 + 112);
        goto LABEL_91;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_105;
        }
        goto LABEL_41;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_119;
        }
        goto LABEL_41;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_133;
        }
        goto LABEL_41;
      case 0xAu:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_147;
        }
        goto LABEL_41;
      case 0xBu:
        int v10 = TagFallback & 7;
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_151;
      case 0xCu:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_161;
        }
        goto LABEL_41;
      case 0xDu:
        int v10 = TagFallback & 7;
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_175;
      case 0xEu:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
        int v22 = *(_DWORD *)(a1 + 112);
        goto LABEL_183;
      default:
        int v10 = TagFallback & 7;
LABEL_41:
        if (v10 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A4C464( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 112);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A1A90 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 112);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A1A90 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }

uint64_t sub_100A4C690(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 112);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_52;
  }

  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A1A90 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A42570(v5, a2);
  int v7 = (int)v6;
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A1A90 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A47148(v9, a2);
    int v11 = (int)v10;
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 112);
  }

void sub_100A4C9F0(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A4CA3C()
{
  return 1LL;
}

void *sub_100A4CA44@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Measurement");
}

float sub_100A4CA54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  8018LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      float result = *(float *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(float *)(a1 + _Block_object_dispose(va, 8) = result;
      int v6 = *(_DWORD *)(a2 + 32);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    float result = *(float *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(float *)(a1 + 12) = result;
    int v6 = *(_DWORD *)(a2 + 32);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }

void sub_100A4CB64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A4CB7C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869410;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A4CB8C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869410;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

_DWORD *sub_100A4CBAC()
{
  float result = operator new(0x28uLL);
  result[7] = 0;
  result[8] = 0;
  *((void *)result + 1) = 0LL;
  *((void *)result + 2) = 0LL;
  *(void *)float result = off_101869410;
  *((_BYTE *)result + 24) = 0;
  return result;
}

uint64_t sub_100A4CBDC(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_BYTE *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100A4CBF4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_29;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + _Block_object_dispose(va, 8) = v17;
        *(_DWORD *)(a1 + 32) |= 1u;
        char v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_29;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 12) = v17;
        *(_DWORD *)(a1 + 32) |= 2u;
        uint64_t v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 16) = v17;
        *(_DWORD *)(a1 + 32) |= 4u;
        uint64_t v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) != 0)
        {
          *(_DWORD *)(a1 + 20) = v17;
          *(_DWORD *)(a1 + 32) |= 8u;
          int v12 = (_BYTE *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v12 < v11 && *v12 == 40)
          {
            uint64_t v13 = v12 + 1;
            *((void *)this + 1) = v13;
LABEL_33:
            if ((unint64_t)v13 >= v11 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v14 = v17;
              int v15 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v11 = *((void *)this + 2);
            }

            else
            {
              unsigned int v14 = *v13;
              int v15 = (unsigned __int8 *)(v13 + 1);
              *((void *)this + 1) = v15;
            }

            *(_BYTE *)(a1 + 24) = v14 != 0;
            *(_DWORD *)(a1 + 32) |= 0x10u;
            if (v15 == (unsigned __int8 *)v11
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_24;
        }
        goto LABEL_29;
      case 5u:
        int v7 = TagFallback & 7;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_33;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A4CE94( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(float *)(result + 8),  a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(float *)(v5 + 12),  a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_100A4CF44(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(_BYTE *)(a1 + 32))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = v1;
  return v1;
}

float sub_100A4CF94(uint64_t a1, void *lpsrc)
{
  return sub_100A4CA54(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A4CFE0()
{
  return 1LL;
}

void *sub_100A4CFE8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.ReceiverClockModel");
}

double sub_100A4CFF8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  8315LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 52);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 52) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 52) |= 1u;
      *(double *)(a1 + _Block_object_dispose(va, 8) = result;
      int v6 = *(_DWORD *)(a2 + 52);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }

    else if ((*(_BYTE *)(a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(double *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a2 + 52);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }

void sub_100A4D108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A4D120(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869488;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A4D130(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869488;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100A4D150()
{
  uint64_t v0 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v0 = off_101869488;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  return result;
}

uint64_t sub_100A4D184(uint64_t result)
{
  if (*(_BYTE *)(result + 52))
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(va, 8) = 0u;
  }

  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_100A4D1A4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_34;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = v13;
        *(_DWORD *)(a1 + 52) |= 1u;
        char v8 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_34;
        }
LABEL_14:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v13;
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = v13;
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v10 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 32) = v13;
        *(_DWORD *)(a1 + 52) |= 8u;
        unint64_t v11 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v11 + 1;
LABEL_29:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 40) = v13;
        *(_DWORD *)(a1 + 52) |= 0x10u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }

        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_34;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_29;
        }
        goto LABEL_34;
      default:
        int v7 = TagFallback & 7;
LABEL_34:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }

    return result;
  }

uint64_t sub_100A4D41C( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 52);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_100A4D4CC(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 52);
  if (*(_BYTE *)(a1 + 52))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 4_Block_object_dispose(va, 8) = v1;
  return v1;
}

double sub_100A4D51C(uint64_t a1, void *lpsrc)
{
  return sub_100A4CFF8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A4D568()
{
  return 1LL;
}

void *sub_100A4D570@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.ReceiverClockCorrections");
}

double sub_100A4D580(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  8614LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 40);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v6 = *(_DWORD *)(a2 + 40);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }

    else if ((*(_BYTE *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }

    LODWORD(result) = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 16) = LODWORD(result);
    int v6 = *(_DWORD *)(a2 + 40);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }

void sub_100A4D690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A4D6A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869500;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A4D6B8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869500;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100A4D6D8()
{
  uint64_t v0 = (char *)operator new(0x30uLL);
  *(void *)uint64_t v0 = off_101869500;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((_DWORD *)v0 + 10) = 0;
  return result;
}

uint64_t sub_100A4D70C(uint64_t result)
{
  if (*(_BYTE *)(result + 40))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_DWORD *)(result + 32) = 0;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_100A4D728( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback( this,  (unint64_t *)v16);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v10 = *(void *)v16;
          unint64_t v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }

        else
        {
          uint64_t v10 = *v9;
          unint64_t v11 = v9 + 1;
          *((void *)this + 1) = v11;
        }

        *(void *)(a1 + _Block_object_dispose(va, 8) = v10;
        *(_DWORD *)(a1 + 40) |= 1u;
        if ((unint64_t)v11 < v8 && *v11 == 21)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_27;
        }

        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
LABEL_27:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v16) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 16) = v16[0];
        *(_DWORD *)(a1 + 40) |= 2u;
        unint64_t v13 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v13 + 1;
LABEL_31:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v16) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 20) = v16[0];
        *(_DWORD *)(a1 + 40) |= 4u;
        unsigned int v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v16) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = *(void *)v16;
        *(_DWORD *)(a1 + 40) |= 8u;
        int v15 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v15 + 1;
LABEL_39:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v16) & 1) != 0)
        {
          *(_DWORD *)(a1 + 32) = v16[0];
          *(_DWORD *)(a1 + 40) |= 0x10u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_31;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A4D9BC( uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v4,  *(float *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_100A4DA6C(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 36) = result;
  return result;
}

double sub_100A4DAE8(uint64_t a1, void *lpsrc)
{
  return sub_100A4D580(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A4DB34()
{
  return 1LL;
}

void *sub_100A4DB3C@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.ReceiverToGpsTimeConversion");
}

double sub_100A4DB4C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  8914LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 44);
  if (!(_BYTE)v6) {
    return result;
  }
  if ((*(_BYTE *)(a2 + 44) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    *(_DWORD *)(a1 + 44) |= 2u;
    unint64_t v8 = *(_DWORD **)(a1 + 16);
    if (!v8)
    {
      unint64_t v8 = operator new(0x28uLL);
      v8[7] = 0;
      _WORD v8[8] = 0;
      *((void *)v8 + 1) = 0LL;
      *((void *)v8 + 2) = 0LL;
      *(void *)unint64_t v8 = off_101869410;
      *((_BYTE *)v8 + 24) = 0;
      *(void *)(a1 + 16) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A1AB0 + 16);
    }
    *(float *)&double result = sub_100A4CA54((uint64_t)v8, v9);
    int v6 = *(_DWORD *)(a2 + 44);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        return result;
      }
      goto LABEL_20;
    }

    goto LABEL_15;
  }

  uint64_t v7 = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
  int v6 = *(_DWORD *)(a2 + 44);
  if ((v6 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v6 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  *(_DWORD *)(a1 + 44) |= 4u;
  uint64_t v10 = *(char **)(a1 + 24);
  if (!v10)
  {
    uint64_t v10 = (char *)operator new(0x38uLL);
    *(void *)uint64_t v10 = off_101869488;
    *(_OWORD *)(v10 + _Block_object_dispose(va, 8) = 0u;
    *(_OWORD *)(v10 + 24) = 0u;
    *(_OWORD *)(v10 + 40) = 0u;
    *(void *)(a1 + 24) = v10;
  }

  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1019A1AB0 + 24);
  }
  double result = sub_100A4CFF8((uint64_t)v10, v11);
  if ((*(_DWORD *)(a2 + 44) & 8) != 0)
  {
LABEL_20:
    *(_DWORD *)(a1 + 44) |= 8u;
    int v12 = *(char **)(a1 + 32);
    if (!v12)
    {
      int v12 = (char *)operator new(0x30uLL);
      *(void *)int v12 = off_101869500;
      *(_OWORD *)(v12 + _Block_object_dispose(va, 8) = 0u;
      *(_OWORD *)(v12 + 24) = 0u;
      *((_DWORD *)v12 + 10) = 0;
      *(void *)(a1 + 32) = v12;
    }

    uint64_t v13 = *(void *)(a2 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1019A1AB0 + 32);
    }
    return sub_100A4D580((uint64_t)v12, v13);
  }

  return result;
}

void sub_100A4DCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100A4DD10(void *result)
{
  if ((void *)qword_1019A1AB0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    double result = (void *)v1[4];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A4DD80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869578;
  sub_100A4DD10(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A4DDB0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869578;
  sub_100A4DD10(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_100A4DDE4()
{
  uint64_t v0 = (char *)operator new(0x30uLL);
  *(void *)uint64_t v0 = off_101869578;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((void *)v0 + 5) = 0LL;
  return result;
}

uint64_t sub_100A4DE18(uint64_t result)
{
  LOBYTE(v1) = *(_BYTE *)(result + 44);
  if ((_BYTE)v1)
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 32))
        {
          *(void *)(v2 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(_BYTE *)(v2 + 24) = 0;
        }

        *(_DWORD *)(v2 + 32) = 0;
        int v1 = *(_DWORD *)(result + 44);
      }
    }

    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 52))
        {
          *(void *)(v3 + 40) = 0LL;
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + _Block_object_dispose(va, 8) = 0u;
        }

        *(_DWORD *)(v3 + 52) = 0;
        int v1 = *(_DWORD *)(result + 44);
      }
    }

    if ((v1 & 8) != 0)
    {
      uint64_t v4 = *(void *)(result + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 40))
        {
          *(void *)(v4 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
          *(_DWORD *)(v4 + 32) = 0;
          *(void *)(v4 + 24) = 0LL;
        }

        *(_DWORD *)(v4 + 40) = 0;
      }
    }
  }

  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_100A4DEA0( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }

        int v12 = *(_DWORD *)(a1 + 44) | 1;
        *(_DWORD *)(a1 + 44) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }

        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        int v12 = *(_DWORD *)(a1 + 44);
LABEL_26:
        *(_DWORD *)(a1 + 44) = v12 | 2;
        char v14 = *(_DWORD **)(a1 + 16);
        if (!v14)
        {
          char v14 = operator new(0x28uLL);
          v14[7] = 0;
          _WORD v14[8] = 0;
          *((void *)v14 + 1) = 0LL;
          *((void *)v14 + 2) = 0LL;
          *(void *)char v14 = off_101869410;
          *((_BYTE *)v14 + 24) = 0;
          *(void *)(a1 + 16) = v14;
        }

        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v41)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v41 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0LL;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        uint64_t v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_40:
        *(_DWORD *)(a1 + 44) |= 4u;
        int v24 = *(char **)(a1 + 24);
        if (!v24)
        {
          int v24 = (char *)operator new(0x38uLL);
          *(void *)int v24 = off_101869488;
          *(_OWORD *)(v24 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v24 + 24) = 0u;
          *(_OWORD *)(v24 + 40) = 0u;
          *(void *)(a1 + 24) = v24;
        }

        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v42)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v42 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v33 = *(char **)(a1 + 32);
        if (!v33)
        {
          uint64_t v33 = (char *)operator new(0x30uLL);
          *(void *)uint64_t v33 = off_101869500;
          *(_OWORD *)(v33 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v33 + 24) = 0u;
          *((_DWORD *)v33 + 10) = 0;
          *(void *)(a1 + 32) = v33;
        }

        int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v43)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v43 = *v34;
          *((void *)this + 1) = v34 + 1;
        }

        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0LL;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_40;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        goto LABEL_54;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A4E2F8( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  (unint64_t)a2,  a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1AB0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_13;
  }

uint64_t sub_100A4E3BC(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_28;
  }

  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
       + 1;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0) {
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 44) & 2) == 0) {
      goto LABEL_13;
    }
  }

  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A1AB0 + 16);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A4CF44(v5);
  int v7 = (int)v6;
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v4 + v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 44);
LABEL_13:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_22;
  }

  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1019A1AB0 + 24);
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A4D4CC(v9);
  int v11 = (int)v10;
  else {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v11 + v12 + 1);
  if ((*(_DWORD *)(a1 + 44) & 8) != 0)
  {
LABEL_22:
    uint64_t v13 = *(void *)(a1 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1019A1AB0 + 32);
    }
    char v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A4DA6C(v13, a2);
    int v16 = (int)v14;
    else {
      int v17 = 1;
    }
    uint64_t v4 = (v4 + v16 + v17 + 1);
  }

double sub_100A4E4F4(uint64_t a1, void *lpsrc)
{
  return sub_100A4DB4C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A4E540()
{
  return 1LL;
}

void *sub_100A4E548@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Clock");
}

double sub_100A4E558(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  9132LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a2 + 16) + 8 * v6);
      int v8 = *(_DWORD *)(a1 + 28);
      uint64_t v9 = *(int *)(a1 + 24);
      if ((int)v9 >= v8)
      {
        if (v8 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16),  v8 + 1);
          int v8 = *(_DWORD *)(a1 + 28);
        }

        *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = v8 + 1;
        int v11 = (char *)operator new(0x78uLL);
        *(void *)int v11 = off_101869398;
        *((_DWORD *)v11 + 27) = 0;
        *((_DWORD *)v11 + 2_Block_object_dispose(va, 8) = 0;
        *(_OWORD *)(v11 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        *(_OWORD *)(v11 + 56) = 0u;
        *(_OWORD *)(v11 + 72) = 0u;
        *(_OWORD *)(v11 + 8_Block_object_dispose(va, 8) = 0u;
        v11[104] = 0;
        uint64_t v12 = *(void *)(a1 + 16);
        uint64_t v13 = *(int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(void *)(v12 + 8 * v13) = v11;
      }

      else
      {
        uint64_t v10 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v9 + 1;
        int v11 = *(char **)(v10 + 8 * v9);
      }

      sub_100A4B198((uint64_t)v11, v7);
      ++v6;
    }

    while (v6 < *(int *)(a2 + 24));
  }

  if ((*(_BYTE *)(a2 + 44) & 1) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    char v14 = *(char **)(a1 + 8);
    if (!v14)
    {
      char v14 = (char *)operator new(0x30uLL);
      *(void *)char v14 = off_101869578;
      *(_OWORD *)(v14 + _Block_object_dispose(va, 8) = 0u;
      *(_OWORD *)(v14 + 24) = 0u;
      *((void *)v14 + 5) = 0LL;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v14;
    }

    uint64_t v15 = *(void *)(a2 + 8);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1019A1AB8 + 8);
    }
    return sub_100A4DB4C((uint64_t)v14, v15);
  }

  return result;
}

void sub_100A4E70C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A4E724(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018695F0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A1AB8 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  sub_10008D0EC((uint64_t)a1 + 16);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A4E784(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_100A4E798()
{
  double result = operator new(0x30uLL);
  result[5] = 0LL;
  *double result = off_1018695F0;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + _Block_object_dispose(va, 8) = 0;
  return result;
}

uint64_t sub_100A4E7C8(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    double result = *(void *)(result + 8);
    if (result) {
      double result = sub_100A4DE18(result);
    }
  }

  if (*(int *)(v1 + 24) >= 1)
  {
    uint64_t v2 = 0LL;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 8 * v2);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
      ++v2;
    }

    while (v2 < *(int *)(v1 + 24));
  }

  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_100A4E834( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(char **)(a1 + 8);
        if (!v9)
        {
          uint64_t v9 = (char *)operator new(0x30uLL);
          *(void *)uint64_t v9 = off_101869578;
          *(_OWORD *)(v9 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *((void *)v9 + 5) = 0LL;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v9;
        }

        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v34 = *v10;
          *((void *)this + 1) = v10 + 1;
        }

        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0LL;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (_BYTE *)*((void *)this + 1);
      }

      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }

          *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = v19 + 1;
          int v22 = (char *)operator new(0x78uLL);
          *(void *)int v22 = off_101869398;
          *((_DWORD *)v22 + 27) = 0;
          *((_DWORD *)v22 + 2_Block_object_dispose(va, 8) = 0;
          *(_OWORD *)(v22 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v22 + 24) = 0u;
          *(_OWORD *)(v22 + 40) = 0u;
          *(_OWORD *)(v22 + 56) = 0u;
          *(_OWORD *)(v22 + 72) = 0u;
          *(_OWORD *)(v22 + 8_Block_object_dispose(va, 8) = 0u;
          v22[104] = 0;
          uint64_t v23 = *(void *)(a1 + 16);
          uint64_t v24 = *(int *)(a1 + 24);
          *(_DWORD *)(a1 + 24) = v24 + 1;
          *(void *)(v23 + 8 * v24) = v22;
        }

        else
        {
          uint64_t v21 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v20 + 1;
          int v22 = *(char **)(v21 + 8 * v20);
        }

        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v35)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v35 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v16) {
          *((_DWORD *)this + 14) = v31;
        }
        int v18 = (_BYTE *)*((void *)this + 1);
        int v32 = (_BYTE *)*((void *)this + 2);
        if (v18 >= v32 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }

      if (v18 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1LL;
    }
  }

uint64_t sub_100A4EB70( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if ((*(_BYTE *)(result + 44) & 1) != 0)
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A1AB8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v6,  a2,  a4);
  }

  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(void *)(*(void *)(v5 + 16) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 24));
  }

  return result;
}

uint64_t sub_100A4EBF4(uint64_t a1, unint64_t a2)
{
  if ((*(_BYTE *)(a1 + 44) & 1) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_1019A1AB8 + 8);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A4E3BC(v4, a2);
    int v6 = (int)v5;
    else {
      int v7 = 1;
    }
    int v3 = v6 + v7 + 1;
  }

  else
  {
    int v3 = 0;
  }

  int v8 = *(_DWORD *)(a1 + 24);
  uint64_t v9 = (v8 + v3);
  if (v8 >= 1)
  {
    uint64_t v10 = 0LL;
    do
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A4C690( *(void *)(*(void *)(a1 + 16) + 8 * v10),  a2);
      int v12 = (int)v11;
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }

    while (v10 < *(int *)(a1 + 24));
  }

  *(_DWORD *)(a1 + 40) = v9;
  return v9;
}

double sub_100A4ECC0(uint64_t a1, void *lpsrc)
{
  return sub_100A4E558(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A4ED0C()
{
  return 1LL;
}

void *sub_100A4ED14@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MeasurementReport");
}

double sub_100A4ED24(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  9357LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + _Block_object_dispose(va, 8) = result;
      int v6 = *(_DWORD *)(a2 + 36);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }

  return result;
}

void sub_100A4EDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A4EE0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869668;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A4EE1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869668;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100A4EE3C()
{
  uint64_t v0 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v0 = off_101869668;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_100A4EE6C(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100A4EE84( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v9 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0LL;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          uint64_t v10 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }

      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }

      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }

      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1LL;
      }
    }

uint64_t sub_100A4F03C( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
  }
  return result;
}

uint64_t sub_100A4F0B4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(_BYTE *)(a1 + 36))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_100A4F0EC(uint64_t a1, void *lpsrc)
{
  return sub_100A4ED24(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A4F138()
{
  return 1LL;
}

void *sub_100A4F140@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.Wgs84Ecef");
}

void sub_100A4F150(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v12,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  9656LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v12,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v11, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 24);
      if (v6 >= 0xD) {
        sub_10125A1D8();
      }
      *(_DWORD *)(a1 + 44) |= 1u;
      *(_DWORD *)(a1 + 24) = v6;
      int v5 = *(_DWORD *)(a2 + 44);
    }

    if ((v5 & 2) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 2u;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 4) == 0)
      {
LABEL_9:
        if ((v5 & 8) == 0) {
          goto LABEL_10;
        }
        goto LABEL_14;
      }
    }

    else if ((v5 & 4) == 0)
    {
      goto LABEL_9;
    }

    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 16) = v8;
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0) {
        return;
      }
LABEL_15:
      unsigned int v10 = *(_DWORD *)(a2 + 28);
      if (v10 >= 3) {
        sub_10125A1B0();
      }
      *(_DWORD *)(a1 + 44) |= 0x10u;
      *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = v10;
      return;
    }

void sub_100A4F274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A4F28C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018696E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A4F29C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018696E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100A4F2BC()
{
  uint64_t v0 = (char *)operator new(0x30uLL);
  *(void *)uint64_t v0 = off_1018696E0;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((void *)v0 + 5) = 0LL;
  return result;
}

uint64_t sub_100A4F2F0(uint64_t result)
{
  if (*(_BYTE *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(va, 8) = 0u;
  }

  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_100A4F30C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v9 = v18[0];
        }

        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }

        if (v9 <= 0xC)
        {
          *(_DWORD *)(a1 + 44) |= 1u;
          *(_DWORD *)(a1 + 24) = v9;
        }

        int v13 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 17)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_30;
        }

        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_19;
        }
LABEL_30:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v18) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = *(void *)v18;
        *(_DWORD *)(a1 + 44) |= 2u;
        unsigned int v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_34:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v18) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v18;
        *(_DWORD *)(a1 + 44) |= 4u;
        int v15 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v15 + 1;
LABEL_38:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v18) & 1) != 0)
        {
          *(void *)(a1 + 32) = *(void *)v18;
          *(_DWORD *)(a1 + 44) |= 8u;
          BOOL v16 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v16 < v10 && *v16 == 40)
          {
            char v11 = v16 + 1;
            *((void *)this + 1) = v11;
LABEL_42:
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v17 = v18[0];
            }

            else
            {
              unsigned int v17 = *v11;
              *((void *)this + 1) = v11 + 1;
            }

            if (v17 <= 2)
            {
              *(_DWORD *)(a1 + 44) |= 0x10u;
              *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = v17;
            }

            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_34;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_38;
        }
        goto LABEL_19;
      case 5u:
        int v7 = TagFallback & 7;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A4F5D4( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 24),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 8),  a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_100A4F684(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 44) & 1) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }

      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 44);
      }

      else
      {
        unsigned int v4 = 2;
      }
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x10) != 0)
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }

      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      }

      else
      {
        int v8 = 2;
      }

      uint64_t v5 = (v8 + v5);
    }
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

void sub_100A4F744(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A4F790()
{
  return 1LL;
}

void *sub_100A4F798@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SvBandCorrections");
}

double sub_100A4F7A8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  9876LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + _Block_object_dispose(va, 8) = result;
      int v6 = *(_DWORD *)(a2 + 28);
    }

    if ((v6 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      int v7 = *(char **)(a1 + 16);
      if (!v7)
      {
        int v7 = (char *)operator new(0x28uLL);
        *(void *)int v7 = off_101869668;
        *(_OWORD *)(v7 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v7 + 24) = 0u;
        *(void *)(a1 + 16) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 16);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A1AD0 + 16);
      }
      return sub_100A4ED24((uint64_t)v7, v8);
    }
  }

  return result;
}

void sub_100A4F88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A4F8A4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101869758;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A1AD0 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100A4F8F8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_100A4F90C()
{
  double result = operator new(0x20uLL);
  *double result = &off_101869758;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_100A4F934(uint64_t result)
{
  char v1 = *(_BYTE *)(result + 28);
  if (v1)
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(void *)(v2 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
          *(void *)(v2 + 24) = 0LL;
        }

        *(_DWORD *)(v2 + 36) = 0;
      }
    }
  }

  *(_DWORD *)(result + 2_Block_object_dispose(va, 8) = 0;
  return result;
}

uint64_t sub_100A4F968( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        if (TagFallback >> 3 == 2)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *(_DWORD *)(a1 + 28);
            goto LABEL_15;
          }
        }

        else
        {
          int v7 = TagFallback & 7;
        }

uint64_t sub_100A4FB7C( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  (int)a2,  *(double *)(result + 8),  a3);
    if ((*(_DWORD *)(v5 + 28) & 2) == 0) {
      return result;
    }
  }

  else if ((v6 & 2) == 0)
  {
    return result;
  }

  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1AD0 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
}

uint64_t sub_100A4FBE8(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(_BYTE *)(a1 + 28))
  {
    uint64_t v2 = (v1 << 31 >> 31) & 9;
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (!v3) {
        uint64_t v3 = *(void *)(qword_1019A1AD0 + 16);
      }
      int v4 = *(unsigned __int8 *)(v3 + 36);
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        v5 += 9;
      }
      if (*(_BYTE *)(v3 + 36)) {
        int v6 = v5;
      }
      else {
        int v6 = 0;
      }
      *(_DWORD *)(v3 + 32) = v6;
      uint64_t v2 = (v2 | 2) + v6;
    }
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  *(_DWORD *)(a1 + 24) = v2;
  return v2;
}

double sub_100A4FC64(uint64_t a1, void *lpsrc)
{
  return sub_100A4F7A8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A4FCB0()
{
  return 1LL;
}

void *sub_100A4FCB8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SvPositionAtTime");
}

double sub_100A4FCC8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  10185LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    sub_10008D024(a1 + 24, *(_DWORD *)(a1 + 32) + v6);
    memcpy((void *)(*(void *)(a1 + 24) + 8LL * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 8LL * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }

  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    sub_10008D024(a1 + 40, *(_DWORD *)(a1 + 48) + v7);
    memcpy((void *)(*(void *)(a1 + 40) + 8LL * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 8LL * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }

  int v8 = *(_DWORD *)(a2 + 64);
  if (v8)
  {
    sub_10008D024(a1 + 56, *(_DWORD *)(a1 + 64) + v8);
    memcpy((void *)(*(void *)(a1 + 56) + 8LL * *(int *)(a1 + 64)), *(const void **)(a2 + 56), 8LL * *(int *)(a2 + 64));
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
  }

  LOBYTE(v9) = *(_BYTE *)(a2 + 76);
  if ((_BYTE)v9)
  {
    if ((*(_BYTE *)(a2 + 76) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 76) |= 1u;
      *(double *)(a1 + _Block_object_dispose(va, 8) = result;
      int v9 = *(_DWORD *)(a2 + 76);
    }

    if ((v9 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 76) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }

  return result;
}

void sub_100A4FE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A4FE54(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1018697D0;
  uint64_t v2 = (void *)*((void *)this + 7);
  if (v2) {
    operator delete[](v2);
  }
  uint64_t v3 = (void *)*((void *)this + 5);
  if (v3) {
    operator delete[](v3);
  }
  uint64_t v4 = (void *)*((void *)this + 3);
  if (v4) {
    operator delete[](v4);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100A4FEA8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_100A4FEBC()
{
  uint64_t v0 = (char *)operator new(0x50uLL);
  *(void *)uint64_t v0 = &off_1018697D0;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *((void *)v0 + 9) = 0LL;
  return result;
}

uint64_t sub_100A4FEF8(uint64_t result)
{
  if (*(_BYTE *)(result + 76))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
  }

  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 4_Block_object_dispose(va, 8) = 0;
  *(_DWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 76) = 0;
  return result;
}

uint64_t sub_100A4FF18( uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 56;
  uint64_t v48 = a1 + 24;
  uint64_t v49 = a1 + 40;
LABEL_2:
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_31;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v51) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = v51[0];
        *(_DWORD *)(a1 + 76) |= 1u;
        int v9 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v9 + 1;
        goto LABEL_15;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_31;
        }
LABEL_15:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v51) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v51[0];
        *(_DWORD *)(a1 + 76) |= 2u;
        char v10 = (_BYTE *)*((void *)this + 1);
        continue;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_35;
        }
        if (v8 != 2) {
          goto LABEL_31;
        }
        uint64_t result = sub_10006E130(this, v48);
        if (!(_DWORD)result) {
          return result;
        }
        while (2)
        {
          char v10 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2))
          {
            int v23 = *v10;
            if (v23 == 33)
            {
LABEL_34:
              *((void *)this + 1) = v10 + 1;
LABEL_35:
              if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v51) & 1) == 0) {
                return 0LL;
              }
              unint64_t v12 = v51[0];
              int v13 = *(_DWORD *)(a1 + 32);
              if (v13 == *(_DWORD *)(a1 + 36))
              {
                sub_10008D024(v48, v13 + 1);
                int v13 = *(_DWORD *)(a1 + 32);
              }

              uint64_t v14 = *(void *)(a1 + 24);
              int v15 = v13 + 1;
              *(_DWORD *)(a1 + 32) = v13 + 1;
              *(void *)(v14 + 8LL * v13) = v12;
              uint64_t v16 = *((void *)this + 1);
              int v17 = *((_DWORD *)this + 4) - v16;
              if (v17 >= 1)
              {
                signed int v18 = v17 / 9u;
                int v19 = v18 >= *(_DWORD *)(a1 + 36) - v15 ? *(_DWORD *)(a1 + 36) - v15 : v18;
                if (v19 >= 1)
                {
                  for (int i = 0; i != v19; ++i)
                  {
                    if (*(_BYTE *)v16 != 33) {
                      goto LABEL_49;
                    }
                    uint64_t v21 = *(void *)(v16 + 1);
                    if (v15 >= *(_DWORD *)(a1 + 36))
                    {
                      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v51,  3LL,  "/AppleInternal/Library/BuildRoots/9fd3fc02-a7db-11ef-98ff-a6e88e557b55/Applications/Xcode.app/Co ntents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/loca l/include/google/protobuf/repeated_field.h",  602LL);
                      uint64_t v22 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v51,  "CHECK failed: (size()) < (Capacity()): ");
                      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v50, v22);
                      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v51);
                      int v15 = *(_DWORD *)(a1 + 32);
                      uint64_t v14 = *(void *)(a1 + 24);
                    }

                    *(_DWORD *)(a1 + 32) = v15 + 1;
                    *(void *)(v14 + 8LL * v15) = v21;
                    v16 += 9LL;
                    ++v15;
                  }

                  int i = v19;
LABEL_49:
                  if (i) {
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * i);
                  }
                  continue;
                }
              }

              continue;
            }

            if (v23 == 41)
            {
              do
              {
                *((void *)this + 1) = v10 + 1;
LABEL_55:
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  v51) & 1) == 0) {
                  return 0LL;
                }
                unint64_t v24 = v51[0];
                int v25 = *(_DWORD *)(a1 + 48);
                if (v25 == *(_DWORD *)(a1 + 52))
                {
                  sub_10008D024(v49, v25 + 1);
                  int v25 = *(_DWORD *)(a1 + 48);
                }

                uint64_t v26 = *(void *)(a1 + 40);
                int v27 = v25 + 1;
                *(_DWORD *)(a1 + 4_Block_object_dispose(va, 8) = v25 + 1;
                *(void *)(v26 + 8LL * v25) = v24;
                uint64_t v28 = *((void *)this + 1);
                int v29 = *((_DWORD *)this + 4) - v28;
                if (v29 >= 1)
                {
                  signed int v30 = v29 / 9u;
                  int v31 = v30 >= *(_DWORD *)(a1 + 52) - v27 ? *(_DWORD *)(a1 + 52) - v27 : v30;
                  if (v31 >= 1)
                  {
                    int v32 = 0;
                    while (*(_BYTE *)v28 == 41)
                    {
                      uint64_t v33 = *(void *)(v28 + 1);
                      if (v27 >= *(_DWORD *)(a1 + 52))
                      {
                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v51,  3LL,  "/AppleInternal/Library/BuildRoots/9fd3fc02-a7db-11ef-98ff-a6e88e557b55/Applications/Xcode.app/ Contents/Developer/Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS18.2.Internal.sdk/usr/ local/include/google/protobuf/repeated_field.h",  602LL);
                        uint64_t v34 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v51,  "CHECK failed: (size()) < (Capacity()): ");
                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v50, v34);
                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v51);
                        int v27 = *(_DWORD *)(a1 + 48);
                        uint64_t v26 = *(void *)(a1 + 40);
                      }

                      *(_DWORD *)(a1 + 4_Block_object_dispose(va, 8) = v27 + 1;
                      *(void *)(v26 + 8LL * v27) = v33;
                      ++v32;
                      v28 += 9LL;
                      ++v27;
                      if (v31 == v32)
                      {
                        int v32 = v31;
                        break;
                      }
                    }

                    if (v32) {
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v32);
                    }
                  }
                }

void sub_100A504F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_100A50520( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 76);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 76);
  }

  if ((v5 & 2) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 16),  a3);
  }
  if (*(int *)(v4 + 32) >= 1)
  {
    uint64_t v6 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  a2,  *(double *)(*(void *)(v4 + 24) + 8 * v6++),  a3);
    while (v6 < *(int *)(v4 + 32));
  }

  if (*(int *)(v4 + 48) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  a2,  *(double *)(*(void *)(v4 + 40) + 8 * v7++),  a3);
    while (v7 < *(int *)(v4 + 48));
  }

  if (*(int *)(v4 + 64) >= 1)
  {
    uint64_t v8 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  a2,  *(double *)(*(void *)(v4 + 56) + 8 * v8++),  a3);
    while (v8 < *(int *)(v4 + 64));
  }

  return result;
}

uint64_t sub_100A50614(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 76);
  int v2 = (v1 << 31 >> 31) & 9;
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if (*(_BYTE *)(a1 + 76)) {
    int v3 = v2;
  }
  else {
    int v3 = 0;
  }
  uint64_t v4 = (9 * (*(_DWORD *)(a1 + 48) + *(_DWORD *)(a1 + 32) + *(_DWORD *)(a1 + 64)) + v3);
  *(_DWORD *)(a1 + 72) = v4;
  return v4;
}

double sub_100A50660(uint64_t a1, void *lpsrc)
{
  return sub_100A4FCC8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A506AC()
{
  return 1LL;
}

void *sub_100A506B4@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.PolynomialOrbit");
}

void sub_100A506C4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v46,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  11090LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v46,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v45, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v46);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24),  *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 24) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 36);
      uint64_t v8 = *(int *)(a1 + 32);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 36);
        }

        *(_DWORD *)(a1 + 36) = v7 + 1;
        char v10 = operator new(0x20uLL);
        void *v10 = &off_101869758;
        v10[1] = 0LL;
        v10[2] = 0LL;
        v10[3] = 0LL;
        uint64_t v11 = *(void *)(a1 + 24);
        uint64_t v12 = *(int *)(a1 + 32);
        *(_DWORD *)(a1 + 32) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 24);
        *(_DWORD *)(a1 + 32) = v8 + 1;
        char v10 = *(void **)(v9 + 8 * v8);
      }

      sub_100A4F7A8((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 32));
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104),  *(_DWORD *)(a2 + 112) + *(_DWORD *)(a1 + 112));
  if (*(int *)(a2 + 112) >= 1)
  {
    uint64_t v13 = 0LL;
    do
    {
      uint64_t v14 = *(void *)(*(void *)(a2 + 104) + 8 * v13);
      int v15 = *(_DWORD *)(a1 + 116);
      uint64_t v16 = *(int *)(a1 + 112);
      if ((int)v16 >= v15)
      {
        if (v15 == *(_DWORD *)(a1 + 120))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104),  v15 + 1);
          int v15 = *(_DWORD *)(a1 + 116);
        }

        *(_DWORD *)(a1 + 116) = v15 + 1;
        signed int v18 = (char *)operator new(0x30uLL);
        *(void *)signed int v18 = off_1018696E0;
        *(_OWORD *)(v18 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v18 + 24) = 0u;
        *((void *)v18 + 5) = 0LL;
        uint64_t v19 = *(void *)(a1 + 104);
        uint64_t v20 = *(int *)(a1 + 112);
        *(_DWORD *)(a1 + 112) = v20 + 1;
        *(void *)(v19 + 8 * v20) = v18;
      }

      else
      {
        uint64_t v17 = *(void *)(a1 + 104);
        *(_DWORD *)(a1 + 112) = v16 + 1;
        signed int v18 = *(char **)(v17 + 8 * v16);
      }

      sub_100A4F150((uint64_t)v18, v14);
      ++v13;
    }

    while (v13 < *(int *)(a2 + 112));
  }

  int v21 = *(_DWORD *)(a2 + 172);
  if (!(_BYTE)v21) {
    goto LABEL_28;
  }
  if ((v21 & 1) != 0)
  {
    *(_DWORD *)(a1 + 172) |= 1u;
    uint64_t v38 = *(void **)(a1 + 8);
    if (!v38)
    {
      uint64_t v38 = operator new(0x20uLL);
      v38[1] = 0LL;
      void v38[2] = 0LL;
      void *v38 = &off_101868AB0;
      *((_DWORD *)v38 + 6) = 0;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v38;
    }

    uint64_t v39 = *(void *)(a2 + 8);
    if (!v39) {
      uint64_t v39 = *(void *)(qword_1019A1AE0 + 8);
    }
    sub_100A420FC((uint64_t)v38, v39);
    int v21 = *(_DWORD *)(a2 + 172);
    if ((v21 & 2) == 0)
    {
LABEL_22:
      if ((v21 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_80;
    }
  }

  else if ((v21 & 2) == 0)
  {
    goto LABEL_22;
  }

  uint64_t v40 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 172) |= 2u;
  *(void *)(a1 + 16) = v40;
  int v21 = *(_DWORD *)(a2 + 172);
  if ((v21 & 4) == 0)
  {
LABEL_23:
    if ((v21 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_82;
  }

void sub_100A50C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A50C6C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869848;
  uint64_t v2 = (uint64_t)a1 + 104;
  sub_100A50CB8(a1);
  sub_10008D0EC(v2);
  sub_10008D0EC((uint64_t)a1 + 24);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void *sub_100A50CB8(void *result)
{
  if ((void *)qword_1019A1AE0 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t result = (void *)v1[16];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A50D18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

double sub_100A50D2C()
{
  uint64_t v0 = operator new(0xB0uLL);
  *(void *)uint64_t v0 = off_101869848;
  double result = 0.0;
  v0[8] = 0u;
  v0[9] = 0u;
  v0[10] = 0u;
  *(_OWORD *)((char *)v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)((char *)v0 + 24) = 0u;
  *((_DWORD *)v0 + 10) = 0;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  v0[6] = 0u;
  *(_OWORD *)((char *)v0 + 10_Block_object_dispose(va, 8) = 0u;
  return result;
}

uint64_t sub_100A50D74(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 172);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100A42290(result);
        int v2 = *(_DWORD *)(v1 + 172);
      }
    }

    *(void *)(v1 + 16) = 0LL;
    *(_OWORD *)(v1 + 4_Block_object_dispose(va, 8) = 0u;
    *(_OWORD *)(v1 + 64) = 0u;
  }

  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 80) = 0LL;
    *(void *)(v1 + 8_Block_object_dispose(va, 8) = 0LL;
    *(void *)(v1 + 96) = 0LL;
    if ((v2 & 0x8000) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 128);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 76))
        {
          *(void *)(v3 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
        }

        *(_DWORD *)(v3 + 32) = 0;
        *(_DWORD *)(v3 + 4_Block_object_dispose(va, 8) = 0;
        *(_DWORD *)(v3 + 64) = 0;
        *(_DWORD *)(v3 + 76) = 0;
        int v2 = *(_DWORD *)(v1 + 172);
      }
    }
  }

  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(v1 + 152) = 0u;
    *(_OWORD *)(v1 + 136) = 0u;
  }

  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v4 = 0LL;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(v1 + 24) + 8 * v4);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32LL))(v5);
      ++v4;
    }

    while (v4 < *(int *)(v1 + 32));
  }

  *(_DWORD *)(v1 + 32) = 0;
  if (*(int *)(v1 + 112) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(v1 + 104) + 8 * v6);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 32LL))(v7);
      ++v6;
    }

    while (v6 < *(int *)(v1 + 112));
  }

  *(_DWORD *)(v1 + 112) = 0;
  *(_DWORD *)(v1 + 172) = 0;
  return result;
}

uint64_t sub_100A50E80( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104);
LABEL_2:
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 172) |= 1u;
        char v10 = *(void **)(a1 + 8);
        if (!v10)
        {
          char v10 = operator new(0x20uLL);
          v10[1] = 0LL;
          v10[2] = 0LL;
          void *v10 = &off_101868AB0;
          *((_DWORD *)v10 + 6) = 0;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v10;
        }

        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v112)) {
            return 0LL;
          }
        }

        else
        {
          v112[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        int v39 = *((_DWORD *)this + 14);
        int v40 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v39 + 1;
        if (v39 >= v40) {
          return 0LL;
        }
        int v41 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v112[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v41);
        int v43 = *((_DWORD *)this + 14);
        BOOL v44 = __OFSUB__(v43, 1);
        int v45 = v43 - 1;
        if (v45 < 0 == v44) {
          *((_DWORD *)this + 14) = v45;
        }
        uint64_t v46 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v46 + 1;
        goto LABEL_86;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_62;
        }
LABEL_86:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v112) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = *(void *)v112;
        *(_DWORD *)(a1 + 172) |= 2u;
        int v47 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        uint64_t v13 = v47 + 1;
        *((void *)this + 1) = v13;
LABEL_90:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v48 = v112[0];
        }

        else
        {
          unsigned int v48 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if (v48 <= 6)
        {
          *(_DWORD *)(a1 + 172) |= 4u;
          *(_DWORD *)(a1 + 56) = v48;
        }

        uint64_t v49 = (_BYTE *)*((void *)this + 1);
        do
        {
          *((void *)this + 1) = v49 + 1;
LABEL_100:
          int v50 = *(_DWORD *)(a1 + 36);
          uint64_t v51 = *(int *)(a1 + 32);
          if ((int)v51 >= v50)
          {
            if (v50 == *(_DWORD *)(a1 + 40))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v50 + 1);
              int v50 = *(_DWORD *)(a1 + 36);
            }

            *(_DWORD *)(a1 + 36) = v50 + 1;
            unsigned int v53 = operator new(0x20uLL);
            *unsigned int v53 = &off_101869758;
            v53[1] = 0LL;
            v53[2] = 0LL;
            void v53[3] = 0LL;
            uint64_t v54 = *(void *)(a1 + 24);
            uint64_t v55 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v55 + 1;
            *(void *)(v54 + 8 * v55) = v53;
          }

          else
          {
            uint64_t v52 = *(void *)(a1 + 24);
            *(_DWORD *)(a1 + 32) = v51 + 1;
            unsigned int v53 = *(void **)(v52 + 8 * v51);
          }

          int v56 = (char *)*((void *)this + 1);
          if ((unint64_t)v56 >= *((void *)this + 2) || *v56 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v112)) {
              return 0LL;
            }
          }

          else
          {
            v112[0] = *v56;
            *((void *)this + 1) = v56 + 1;
          }

          int v57 = *((_DWORD *)this + 14);
          int v58 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v57 + 1;
          if (v57 >= v58) {
            return 0LL;
          }
          int v59 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v112[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v59);
          int v61 = *((_DWORD *)this + 14);
          BOOL v44 = __OFSUB__(v61, 1);
          int v62 = v61 - 1;
          if (v62 < 0 == v44) {
            *((_DWORD *)this + 14) = v62;
          }
          uint64_t v49 = (_BYTE *)*((void *)this + 1);
          int v63 = *v49;
        }

        while (v63 == 34);
        if (v63 != 41) {
          continue;
        }
        *((void *)this + 1) = v49 + 1;
LABEL_118:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v112) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 4_Block_object_dispose(va, 8) = *(void *)v112;
        *(_DWORD *)(a1 + 172) |= 0x10u;
        int v64 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v64 + 1;
LABEL_122:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v112) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 64) = *(void *)v112;
        *(_DWORD *)(a1 + 172) |= 0x20u;
        int v65 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v65 + 1;
LABEL_126:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v112) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 72) = *(void *)v112;
        *(_DWORD *)(a1 + 172) |= 0x40u;
        int v66 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v66 + 1;
LABEL_130:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v112) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 60) = v112[0];
        *(_DWORD *)(a1 + 172) |= 0x80u;
        unsigned int v67 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v67 + 1;
LABEL_134:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v112) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 80) = v112[0];
        *(_DWORD *)(a1 + 172) |= 0x100u;
        int v68 = (_BYTE *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        int v15 = v68 + 1;
        *((void *)this + 1) = v15;
LABEL_138:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v69 = v112[0];
        }

        else
        {
          unsigned int v69 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        if (v69 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x200u;
          *(_DWORD *)(a1 + 84) = v69;
        }

        unsigned int v70 = (_BYTE *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        uint64_t v17 = v70 + 1;
        *((void *)this + 1) = v17;
LABEL_148:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v71 = v112[0];
        }

        else
        {
          unsigned int v71 = *v17;
          *((void *)this + 1) = v17 + 1;
        }

        if (v71 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x400u;
          *(_DWORD *)(a1 + 8_Block_object_dispose(va, 8) = v71;
        }

        unsigned int v72 = (_BYTE *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        uint64_t v19 = v72 + 1;
        *((void *)this + 1) = v19;
LABEL_158:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v73 = v112[0];
        }

        else
        {
          unsigned int v73 = *v19;
          *((void *)this + 1) = v19 + 1;
        }

        if (v73 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x800u;
          *(_DWORD *)(a1 + 92) = v73;
        }

        int v74 = (_BYTE *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        int v21 = v74 + 1;
        *((void *)this + 1) = v21;
LABEL_168:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v75 = v112[0];
        }

        else
        {
          unsigned int v75 = *v21;
          *((void *)this + 1) = v21 + 1;
        }

        if (v75 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x1000u;
          *(_DWORD *)(a1 + 96) = v75;
        }

        unsigned int v76 = (_BYTE *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        int v23 = v76 + 1;
        *((void *)this + 1) = v23;
LABEL_178:
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v77 = v112[0];
        }

        else
        {
          unsigned int v77 = *v23;
          *((void *)this + 1) = v23 + 1;
        }

        if (v77 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x2000u;
          *(_DWORD *)(a1 + 100) = v77;
        }

        int v78 = (unsigned __int8 *)*((void *)this + 1);
        do
        {
          *((void *)this + 1) = v78 + 1;
LABEL_188:
          int v79 = *(_DWORD *)(a1 + 116);
          uint64_t v80 = *(int *)(a1 + 112);
          if ((int)v80 >= v79)
          {
            if (v79 == *(_DWORD *)(a1 + 120))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v79 + 1);
              int v79 = *(_DWORD *)(a1 + 116);
            }

            *(_DWORD *)(a1 + 116) = v79 + 1;
            uint64_t v82 = (char *)operator new(0x30uLL);
            *(void *)uint64_t v82 = off_1018696E0;
            *(_OWORD *)(v82 + _Block_object_dispose(va, 8) = 0u;
            *(_OWORD *)(v82 + 24) = 0u;
            *((void *)v82 + 5) = 0LL;
            uint64_t v83 = *(void *)(a1 + 104);
            uint64_t v84 = *(int *)(a1 + 112);
            *(_DWORD *)(a1 + 112) = v84 + 1;
            *(void *)(v83 + 8 * v84) = v82;
          }

          else
          {
            uint64_t v81 = *(void *)(a1 + 104);
            *(_DWORD *)(a1 + 112) = v80 + 1;
            uint64_t v82 = *(char **)(v81 + 8 * v80);
          }

          int v85 = (char *)*((void *)this + 1);
          if ((unint64_t)v85 >= *((void *)this + 2) || *v85 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v112)) {
              return 0LL;
            }
          }

          else
          {
            v112[0] = *v85;
            *((void *)this + 1) = v85 + 1;
          }

          int v86 = *((_DWORD *)this + 14);
          int v87 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v86 + 1;
          if (v86 >= v87) {
            return 0LL;
          }
          int v88 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v112[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v88);
          int v90 = *((_DWORD *)this + 14);
          BOOL v44 = __OFSUB__(v90, 1);
          int v91 = v90 - 1;
          if (v91 < 0 == v44) {
            *((_DWORD *)this + 14) = v91;
          }
          int v78 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v92 = *((void *)this + 2);
        }

        while ((unint64_t)v78 < v92 && *v78 == 122);
        *((void *)this + 1) = v78 + 2;
LABEL_208:
        *(_DWORD *)(a1 + 172) |= 0x8000u;
        uint64_t v93 = *(char **)(a1 + 128);
        if (!v93)
        {
          uint64_t v93 = (char *)operator new(0x50uLL);
          *(void *)uint64_t v93 = &off_1018697D0;
          *(_OWORD *)(v93 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v93 + 24) = 0u;
          *(_OWORD *)(v93 + 40) = 0u;
          *(_OWORD *)(v93 + 56) = 0u;
          *((void *)v93 + 9) = 0LL;
          *(void *)(a1 + 12_Block_object_dispose(va, 8) = v93;
        }

        __int16 v94 = (char *)*((void *)this + 1);
        if ((unint64_t)v94 >= *((void *)this + 2) || *v94 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v112)) {
            return 0LL;
          }
        }

        else
        {
          v112[0] = *v94;
          *((void *)this + 1) = v94 + 1;
        }

        int v95 = *((_DWORD *)this + 14);
        int v96 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v95 + 1;
        if (v95 >= v96) {
          return 0LL;
        }
        int v97 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v112[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v97);
        int v99 = *((_DWORD *)this + 14);
        BOOL v44 = __OFSUB__(v99, 1);
        int v100 = v99 - 1;
        if (v100 < 0 == v44) {
          *((_DWORD *)this + 14) = v100;
        }
        int v101 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        unsigned int v25 = (char *)(v101 + 2);
        *((void *)this + 1) = v25;
LABEL_223:
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v102 = v112[0];
        }

        else
        {
          unsigned int v102 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        if (v102 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x10000u;
          *(_DWORD *)(a1 + 136) = v102;
        }

        int v103 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        unsigned int v27 = (char *)(v103 + 2);
        *((void *)this + 1) = v27;
LABEL_234:
        if ((unint64_t)v27 >= v26 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v104 = v112[0];
        }

        else
        {
          unsigned int v104 = *v27;
          *((void *)this + 1) = v27 + 1;
        }

        if (v104 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x20000u;
          *(_DWORD *)(a1 + 140) = v104;
        }

        __int128 v105 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        int v29 = (char *)(v105 + 2);
        *((void *)this + 1) = v29;
LABEL_245:
        if ((unint64_t)v29 >= v28 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v106 = v112[0];
        }

        else
        {
          unsigned int v106 = *v29;
          *((void *)this + 1) = v29 + 1;
        }

        if (v106 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x40000u;
          *(_DWORD *)(a1 + 144) = v106;
        }

        __int128 v107 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        unsigned int v31 = (char *)(v107 + 2);
        *((void *)this + 1) = v31;
LABEL_256:
        if ((unint64_t)v31 >= v30 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v108 = v112[0];
        }

        else
        {
          unsigned int v108 = *v31;
          *((void *)this + 1) = v31 + 1;
        }

        if (v108 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x80000u;
          *(_DWORD *)(a1 + 14_Block_object_dispose(va, 8) = v108;
        }

        uint64_t v109 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        unsigned int v33 = (char *)(v109 + 2);
        *((void *)this + 1) = v33;
LABEL_267:
        if ((unint64_t)v33 >= v32 || *v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v110 = v112[0];
        }

        else
        {
          unsigned int v110 = *v33;
          *((void *)this + 1) = v33 + 1;
        }

        if (v110 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x100000u;
          *(_DWORD *)(a1 + 160) = v110;
        }

        __int128 v111 = (unsigned __int8 *)*((void *)this + 1);
        *((void *)this + 1) = v111 + 2;
LABEL_56:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v112) & 1) != 0)
        {
          *(void *)(a1 + 152) = *(void *)v112;
          *(_DWORD *)(a1 + 172) |= 0x200000u;
          unsigned int v35 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v34 = *((void *)this + 2);
          if ((int)v34 - (int)v35 >= 2 && *v35 == 192 && v35[1] == 1)
          {
            uint64_t v36 = (char *)(v35 + 2);
            *((void *)this + 1) = v36;
LABEL_66:
            if ((unint64_t)v36 >= v34 || *v36 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
              if (!(_DWORD)result) {
                return result;
              }
              unsigned int v37 = v112[0];
            }

            else
            {
              unsigned int v37 = *v36;
              *((void *)this + 1) = v36 + 1;
            }

            if (v37 <= 3)
            {
              *(_DWORD *)(a1 + 172) |= 0x400000u;
              *(_DWORD *)(a1 + 164) = v37;
            }

            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
              uint64_t result = 1LL;
              *((_BYTE *)this + 36) = 1;
              return result;
            }
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v9 = TagFallback & 7;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_90;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_100;
        }
        goto LABEL_62;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_118;
        }
        goto LABEL_62;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_122;
        }
        goto LABEL_62;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_126;
        }
        goto LABEL_62;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_130;
        }
        goto LABEL_62;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_134;
        }
        goto LABEL_62;
      case 0xAu:
        int v9 = TagFallback & 7;
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_138;
      case 0xBu:
        int v9 = TagFallback & 7;
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_148;
      case 0xCu:
        int v9 = TagFallback & 7;
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_158;
      case 0xDu:
        int v9 = TagFallback & 7;
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_168;
      case 0xEu:
        int v9 = TagFallback & 7;
        int v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_178;
      case 0xFu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_188;
        }
        goto LABEL_62;
      case 0x10u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_208;
        }
        goto LABEL_62;
      case 0x12u:
        int v9 = TagFallback & 7;
        unsigned int v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_223;
      case 0x13u:
        int v9 = TagFallback & 7;
        unsigned int v27 = (char *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        goto LABEL_234;
      case 0x14u:
        int v9 = TagFallback & 7;
        int v29 = (char *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_245;
      case 0x15u:
        int v9 = TagFallback & 7;
        unsigned int v31 = (char *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        goto LABEL_256;
      case 0x16u:
        int v9 = TagFallback & 7;
        unsigned int v33 = (char *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        goto LABEL_267;
      case 0x17u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_56;
        }
        goto LABEL_62;
      case 0x18u:
        int v9 = TagFallback & 7;
        uint64_t v36 = (char *)*((void *)this + 1);
        unint64_t v34 = *((void *)this + 2);
        goto LABEL_66;
      default:
        int v9 = TagFallback & 7;
LABEL_62:
        if (v9 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A51CB0( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 172);
  if ((v6 & 1) != 0)
  {
    uint64_t v11 = *(void *)(result + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1019A1AE0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v11,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 172);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  (int)a2,  *(double *)(v5 + 16),  a3);
  if ((*(_DWORD *)(v5 + 172) & 4) != 0) {
LABEL_4:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 56),  (int)a2,  a4);
LABEL_5:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(void *)(*(void *)(v5 + 24) + 8 * v7++),  a2,  a4);
    while (v7 < *(int *)(v5 + 32));
  }

  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x10) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  (int)a2,  *(double *)(v5 + 48),  a3);
    int v8 = *(_DWORD *)(v5 + 172);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_38;
    }
  }

  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_10;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 64),  a3);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x40) == 0)
  {
LABEL_11:
    if ((v8 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }

uint64_t sub_100A51FB4(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 172);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_1019A1AE0 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A42570(v6, a2);
      int v8 = (int)v7;
      else {
        int v9 = 1;
      }
      int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 172);
    }

    else
    {
      int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      int v10 = v4 + 9;
    }
    else {
      int v10 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if ((v11 & 0x80000000) != 0)
      {
        int v12 = 10;
      }

      else if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
        int v3 = *(_DWORD *)(a1 + 172);
      }

      else
      {
        int v12 = 1;
      }

      v10 += v12 + 1;
    }

    int v13 = v10 + 9;
    if ((v3 & 0x10) == 0) {
      int v13 = v10;
    }
    if ((v3 & 0x20) != 0) {
      v13 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v13 += 9;
    }
    if ((v3 & 0x80) != 0) {
      int v5 = v13 + 5;
    }
    else {
      int v5 = v13;
    }
  }

  else
  {
    int v5 = 0;
  }

  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      v5 += 5;
    }
    if ((v3 & 0x200) != 0)
    {
      unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
      if ((v14 & 0x80000000) != 0)
      {
        int v15 = 10;
      }

      else if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
        int v3 = *(_DWORD *)(a1 + 172);
      }

      else
      {
        int v15 = 1;
      }

      v5 += v15 + 1;
      if ((v3 & 0x400) == 0)
      {
LABEL_35:
        if ((v3 & 0x800) == 0) {
          goto LABEL_36;
        }
        goto LABEL_52;
      }
    }

    else if ((v3 & 0x400) == 0)
    {
      goto LABEL_35;
    }

    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 10;
    }

    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }

    else
    {
      int v17 = 1;
    }

    v5 += v17 + 1;
    if ((v3 & 0x800) == 0)
    {
LABEL_36:
      if ((v3 & 0x1000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_58;
    }

void sub_100A5242C(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A52478()
{
  return 1LL;
}

void *sub_100A52480@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SvInfo");
}

float sub_100A52490(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  11435LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if (!(_BYTE)v6) {
    return *(float *)&v5;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    unsigned int v7 = *(_DWORD *)(a2 + 16);
    if (v7 >= 0xD) {
      sub_10125A3E0();
    }
    *(_DWORD *)(a1 + 32) |= 1u;
    *(_DWORD *)(a1 + 16) = v7;
    int v6 = *(_DWORD *)(a2 + 32);
  }

  if ((v6 & 2) == 0)
  {
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_13:
    LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 20) = v5;
    if ((*(_DWORD *)(a2 + 32) & 8) == 0) {
      return *(float *)&v5;
    }
    goto LABEL_10;
  }

  uint64_t v5 = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 32) |= 2u;
  *(void *)(a1 + _Block_object_dispose(va, 8) = v5;
  int v6 = *(_DWORD *)(a2 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_13;
  }
LABEL_9:
  if ((v6 & 8) != 0)
  {
LABEL_10:
    LODWORD(sub_1012279C0(0LL, v4, v5) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 24) = v5;
  }

  return *(float *)&v5;
}

void sub_100A52588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A525A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018698C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A525B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1018698C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A525D0()
{
  uint64_t result = operator new(0x28uLL);
  *uint64_t result = off_1018698C0;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + _Block_object_dispose(va, 8) = 0;
  return result;
}

uint64_t sub_100A525FC(uint64_t result)
{
  if (*(_BYTE *)(result + 32))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_DWORD *)(result + 24) = 0;
  }

  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100A52614( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v14);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v9 = v14[0];
        }

        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }

        if (v9 <= 0xC)
        {
          *(_DWORD *)(a1 + 32) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }

        uint64_t v11 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_27;
        }

        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_17;
        }
LABEL_27:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v14) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = *(void *)v14;
        *(_DWORD *)(a1 + 32) |= 2u;
        int v12 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v12 + 1;
LABEL_31:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v14) & 1) == 0) {
          return 0LL;
        }
        *(_DWORD *)(a1 + 20) = v14[0];
        *(_DWORD *)(a1 + 32) |= 4u;
        int v13 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v13 + 1;
LABEL_35:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v14) & 1) != 0)
        {
          *(_DWORD *)(a1 + 24) = v14[0];
          *(_DWORD *)(a1 + 32) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_31;
        }
        goto LABEL_17;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_17;
        }
        goto LABEL_35;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A5285C( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 16),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v5 + 8),  a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  a2,  *(float *)(v5 + 24),  a3);
  }

uint64_t sub_100A528F0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }

      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 32);
      }

      else
      {
        unsigned int v4 = 2;
      }
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 2_Block_object_dispose(va, 8) = result;
  return result;
}

float sub_100A5297C(uint64_t a1, void *lpsrc)
{
  return sub_100A52490(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A529C8()
{
  return 1LL;
}

void *sub_100A529D0@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.ReceiverBandCorrections");
}

void sub_100A529E0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  11645LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v6;
      int v5 = *(_DWORD *)(a2 + 24);
    }

    if ((v5 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }

void sub_100A52A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A52AA0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869938;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A52AB0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869938;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A52AD0()
{
  uint64_t result = operator new(0x20uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = off_101869938;
  *((_DWORD *)result + 6) = 0;
  return result;
}

uint64_t sub_100A52AFC(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(_DWORD *)(result + 16) = 0;
  }

  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100A52B14( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      int v8 = TagFallback & 7;
      uint64_t v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!(_DWORD)result) {
          return result;
        }
        int v12 = (_BYTE *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }

      else
      {
        *int v5 = *v11;
        int v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }

      *(_DWORD *)(a1 + 24) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v13 = v16;
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          unsigned int v13 = *v10;
          unint64_t v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }

        *(_DWORD *)(a1 + 16) = v13;
        *(_DWORD *)(a1 + 24) |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }

    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }

    else
    {
      int v8 = TagFallback & 7;
    }

uint64_t sub_100A52CB8( uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 16),  v4,  a4);
  }
  return result;
}

uint64_t sub_100A52D10(uint64_t a1, unint64_t a2)
{
  if (*(_BYTE *)(a1 + 24))
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
        goto LABEL_13;
      }
    }

    else
    {
      uint64_t v3 = 0LL;
      if ((*(_BYTE *)(a1 + 24) & 2) == 0) {
        goto LABEL_13;
      }
    }

    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v4 & 0x80000000) != 0)
    {
      int v5 = 11;
    }

    else if (v4 >= 0x80)
    {
      int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }

    else
    {
      int v5 = 2;
    }

    uint64_t v3 = (v5 + v3);
  }

  else
  {
    uint64_t v3 = 0LL;
  }

void sub_100A52D94(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A52DE0()
{
  return 1LL;
}

void *sub_100A52DE8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.LeapSecondChange");
}

void sub_100A52DF8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v11,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  11889LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v11,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v10, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + _Block_object_dispose(va, 8) = v6;
      int v5 = *(_DWORD *)(a2 + 28);
    }

    if ((v5 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 5) {
        sub_10125A408();
      }
      *(_DWORD *)(a1 + 28) |= 2u;
      *(_DWORD *)(a1 + 12) = v7;
      int v5 = *(_DWORD *)(a2 + 28);
    }

    if ((v5 & 4) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 4u;
      int v8 = *(void **)(a1 + 16);
      if (!v8)
      {
        int v8 = operator new(0x20uLL);
        v8[1] = 0LL;
        _DWORD v8[2] = 0LL;
        void *v8 = off_101869938;
        *((_DWORD *)v8 + 6) = 0;
        *(void *)(a1 + 16) = v8;
      }

      uint64_t v9 = *(void *)(a2 + 16);
      if (!v9) {
        uint64_t v9 = *(void *)(qword_1019A1AF8 + 16);
      }
      sub_100A529E0((uint64_t)v8, v9);
    }
  }

void sub_100A52F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A52F18(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1018699B0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A1AF8 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100A52F6C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_100A52F80()
{
  uint64_t result = operator new(0x20uLL);
  *uint64_t result = &off_1018699B0;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_100A52FA8(uint64_t result)
{
  char v1 = *(_BYTE *)(result + 28);
  if (v1)
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(void *)(v2 + _Block_object_dispose(va, 8) = 0LL;
          *(_DWORD *)(v2 + 16) = 0;
        }

        *(_DWORD *)(v2 + 24) = 0;
      }
    }
  }

  *(_DWORD *)(result + 2_Block_object_dispose(va, 8) = 0;
  return result;
}

uint64_t sub_100A52FDC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
            *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v8 = TagFallback >> 3;
          int v9 = TagFallback & 7;
          uint64_t v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!(_DWORD)result) {
              return result;
            }
            int v12 = (_BYTE *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }

          else
          {
            *int v5 = *v11;
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }

          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            unsigned int v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_27;
          }
        }

        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v15 = v26;
        }

        else
        {
          unsigned int v15 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if (v15 <= 4)
        {
          *(_DWORD *)(a1 + 28) |= 2u;
          *(_DWORD *)(a1 + 12) = v15;
        }

        unsigned int v16 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v16 < *((void *)this + 2) && *v16 == 26)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_37;
        }
      }

      if (v8 != 3)
      {
        int v9 = TagFallback & 7;
        goto LABEL_19;
      }

      int v9 = TagFallback & 7;
      if (v9 == 2) {
        break;
      }
LABEL_19:
      if (v9 == 4) {
        return 1LL;
      }
    }

uint64_t sub_100A53290( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 12),  (int)a2,  a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1AF8 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v7,  a2,  a4);
}

uint64_t sub_100A53318(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_23;
  }

  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }

    else
    {
      uint64_t v4 = 2LL;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 28) & 2) == 0) {
      goto LABEL_16;
    }
  }

  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }

  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }

  else
  {
    int v7 = 2;
  }

  uint64_t v4 = (v7 + v4);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A1AF8 + 16);
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A52D10(v8, a2);
    int v11 = (int)v9;
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
  }

void sub_100A53400(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A5344C()
{
  return 1LL;
}

void *sub_100A53454@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.LeapSecondInfo");
}

double sub_100A53464(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  12151LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 44);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 44) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v6 = *(_DWORD *)(a2 + 44);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }

    else if ((*(_BYTE *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v6 = *(_DWORD *)(a2 + 44);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }

void sub_100A53554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A5356C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869A28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A5357C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869A28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100A5359C()
{
  uint64_t v0 = (char *)operator new(0x30uLL);
  *(void *)uint64_t v0 = off_101869A28;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((void *)v0 + 5) = 0LL;
  return result;
}

uint64_t sub_100A535D0(uint64_t result)
{
  if (*(_BYTE *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(va, 8) = 0u;
  }

  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_100A535EC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          int v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }

        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }

        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_18;
        }
LABEL_26:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v15;
        *(_DWORD *)(a1 + 44) |= 2u;
        unsigned int v13 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 24) = v15;
        *(_DWORD *)(a1 + 44) |= 4u;
        unint64_t v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_34:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) != 0)
        {
          *(void *)(a1 + 32) = v15;
          *(_DWORD *)(a1 + 44) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_30;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_18;
        }
        goto LABEL_34;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A5382C( uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v4,  *(double *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v4,  *(double *)(v5 + 32),  a3);
  }

uint64_t sub_100A538C0(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 44) & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 40) = result;
  return result;
}

double sub_100A53930(uint64_t a1, void *lpsrc)
{
  return sub_100A53464(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A5397C()
{
  return 1LL;
}

void *sub_100A53984@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GpsToUtcConversion");
}

double sub_100A53994(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v13,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  12408LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v13,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v12, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 32);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 24) = v7;
      int v6 = *(_DWORD *)(a2 + 32);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_14;
      }
    }

    else if ((*(_BYTE *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }

    *(_DWORD *)(a1 + 32) |= 2u;
    int v8 = *(void **)(a1 + 8);
    if (!v8)
    {
      int v8 = operator new(0x20uLL);
      void *v8 = &off_1018699B0;
      v8[1] = 0LL;
      _DWORD v8[2] = 0LL;
      uint64_t v8[3] = 0LL;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 8);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A1B08 + 8);
    }
    sub_100A52DF8((uint64_t)v8, v9);
    if ((*(_DWORD *)(a2 + 32) & 4) != 0)
    {
LABEL_14:
      *(_DWORD *)(a1 + 32) |= 4u;
      unsigned int v10 = *(char **)(a1 + 16);
      if (!v10)
      {
        unsigned int v10 = (char *)operator new(0x30uLL);
        *(void *)unsigned int v10 = off_101869A28;
        *(_OWORD *)(v10 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v10 + 24) = 0u;
        *((void *)v10 + 5) = 0LL;
        *(void *)(a1 + 16) = v10;
      }

      uint64_t v11 = *(void *)(a2 + 16);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_1019A1B08 + 16);
      }
      return sub_100A53464((uint64_t)v10, v11);
    }
  }

  return result;
}

void sub_100A53AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100A53AF0(void *result)
{
  if ((void *)qword_1019A1B08 != result)
  {
    char v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    double result = (void *)v1[2];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A53B4C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869AA0;
  sub_100A53AF0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A53B7C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869AA0;
  sub_100A53AF0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

void *sub_100A53BB0()
{
  double result = operator new(0x28uLL);
  *double result = off_101869AA0;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  *((_DWORD *)result + _Block_object_dispose(va, 8) = 0;
  return result;
}

uint64_t sub_100A53BDC(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 32);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 2) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100A52FA8(result);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }

    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 44))
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + _Block_object_dispose(va, 8) = 0u;
        }

        *(_DWORD *)(v3 + 44) = 0;
      }
    }
  }

  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_100A53C40( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
            *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v8 = TagFallback >> 3;
          int v9 = TagFallback & 7;
          uint64_t v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!(_DWORD)result) {
              return result;
            }
            char v12 = (_BYTE *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }

          else
          {
            *uint64_t v5 = *v11;
            char v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }

          int v13 = *(_DWORD *)(a1 + 32) | 1;
          *(_DWORD *)(a1 + 32) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_27;
          }
        }

        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_19;
        }
        int v13 = *(_DWORD *)(a1 + 32);
LABEL_27:
        *(_DWORD *)(a1 + 32) = v13 | 2;
        unint64_t v15 = *(void **)(a1 + 8);
        if (!v15)
        {
          unint64_t v15 = operator new(0x20uLL);
          void *v15 = &off_1018699B0;
          v15[1] = 0LL;
          unsigned int v15[2] = 0LL;
          v15[3] = 0LL;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v15;
        }

        unsigned int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v33)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v33 = *v16;
          *((void *)this + 1) = v16 + 1;
        }

        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0LL;
        }
        int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
        int v21 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)this + 14) = v23;
        }
        BOOL v24 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v24 < *((void *)this + 2) && *v24 == 26)
        {
          *((void *)this + 1) = v24 + 1;
          goto LABEL_41;
        }
      }

      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_19;
      }
LABEL_41:
      *(_DWORD *)(a1 + 32) |= 4u;
      int v25 = *(char **)(a1 + 16);
      if (!v25)
      {
        int v25 = (char *)operator new(0x30uLL);
        *(void *)int v25 = off_101869A28;
        *(_OWORD *)(v25 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v25 + 24) = 0u;
        *((void *)v25 + 5) = 0LL;
        *(void *)(a1 + 16) = v25;
      }

      unsigned int v26 = (char *)*((void *)this + 1);
      if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v34)) {
          return 0LL;
        }
      }

      else
      {
        unsigned int v34 = *v26;
        *((void *)this + 1) = v26 + 1;
      }

      int v27 = *((_DWORD *)this + 14);
      int v28 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v27 + 1;
      if (v27 >= v28) {
        return 0LL;
      }
      int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
      int v31 = *((_DWORD *)this + 14);
      BOOL v22 = __OFSUB__(v31, 1);
      int v32 = v31 - 1;
      if (v32 < 0 == v22) {
        *((_DWORD *)this + 14) = v32;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v9 = TagFallback & 7;
LABEL_19:
    if (v9 == 4) {
      return 1LL;
    }
  }

uint64_t sub_100A53F7C( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 24),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1B08 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
  {
LABEL_9:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A1B08 + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v8,  a2,  a4);
  }

  return result;
}

uint64_t sub_100A54014(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_23;
  }

  if ((*(_BYTE *)(a1 + 32) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 32) & 2) == 0) {
      goto LABEL_16;
    }
LABEL_10:
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A1B08 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A53318(v6, a2);
    int v8 = (int)v7;
    else {
      int v9 = 1;
    }
    uint64_t v4 = (v4 + v8 + v9 + 1);
    int v3 = *(_DWORD *)(a1 + 32);
    goto LABEL_16;
  }

  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_10;
  }

  uint64_t v4 = 2LL;
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_1019A1B08 + 16);
    }
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A538C0(v10, a2);
    int v13 = (int)v11;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }

double sub_100A54110(uint64_t a1, void *lpsrc)
{
  return sub_100A53994(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A5415C()
{
  return 1LL;
}

void *sub_100A54164@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GpsTimeInfo");
}

double sub_100A54174(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  12612LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 28);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v6 = *(_DWORD *)(a2 + 28);
    }

    if ((v6 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }

  return result;
}

void sub_100A5421C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A54234(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869B18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A54244(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869B18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

void *sub_100A54264()
{
  double result = operator new(0x20uLL);
  *double result = off_101869B18;
  result[1] = 0LL;
  result[2] = 0LL;
  result[3] = 0LL;
  return result;
}

uint64_t sub_100A5428C(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
  }

  *(_DWORD *)(result + 2_Block_object_dispose(va, 8) = 0;
  return result;
}

uint64_t sub_100A542A0( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        int v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        int v8 = TagFallback & 7;
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }

        *(_DWORD *)(a1 + 28) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_24;
        }
      }

      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_16;
      }
LABEL_24:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + 16) = v13;
      *(_DWORD *)(a1 + 28) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4) {
      return 1LL;
    }
  }

  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0);
  return 0LL;
}

uint64_t sub_100A54424( uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }

  if ((v6 & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v4,  *(double *)(v5 + 16),  a3);
  }
  return result;
}

uint64_t sub_100A5447C(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 28) & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 28);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 24) = result;
  return result;
}

double sub_100A544D4(uint64_t a1, void *lpsrc)
{
  return sub_100A54174(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A54520()
{
  return 1LL;
}

void *sub_100A54528@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GlonassSubsecondConversion");
}

double sub_100A54538(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  12926LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v6) {
    return result;
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + _Block_object_dispose(va, 8) = v7;
    int v6 = *(_DWORD *)(a2 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      unsigned int v9 = *(_DWORD *)(a2 + 32);
      if (v9 >= 6) {
        sub_10125A430();
      }
      *(_DWORD *)(a1 + 40) |= 4u;
      *(_DWORD *)(a1 + 32) = v9;
      int v6 = *(_DWORD *)(a2 + 40);
      if ((v6 & 8) == 0)
      {
LABEL_8:
        if ((v6 & 0x10) == 0) {
          return result;
        }
        goto LABEL_19;
      }

      goto LABEL_14;
    }
  }

  else if ((*(_BYTE *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }

  int v8 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(a1 + 12) = v8;
  int v6 = *(_DWORD *)(a2 + 40);
  if ((v6 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v6 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_14:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v10 = *(void **)(a1 + 16);
  if (!v10)
  {
    uint64_t v10 = operator new(0x20uLL);
    void *v10 = off_101869B18;
    v10[1] = 0LL;
    v10[2] = 0LL;
    v10[3] = 0LL;
    *(void *)(a1 + 16) = v10;
  }

  uint64_t v11 = *(void *)(a2 + 16);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1019A1B18 + 16);
  }
  double result = sub_100A54174((uint64_t)v10, v11);
  if ((*(_DWORD *)(a2 + 40) & 0x10) != 0)
  {
LABEL_19:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    unsigned int v12 = *(void **)(a1 + 24);
    if (!v12)
    {
      unsigned int v12 = operator new(0x20uLL);
      *unsigned int v12 = off_101869B18;
      v12[1] = 0LL;
      _DWORD v12[2] = 0LL;
      v12[3] = 0LL;
      *(void *)(a1 + 24) = v12;
    }

    uint64_t v13 = *(void *)(a2 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1019A1B18 + 24);
    }
    return sub_100A54174((uint64_t)v12, v13);
  }

  return result;
}

void sub_100A546BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100A546D4(void *result)
{
  if ((void *)qword_1019A1B18 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    double result = (void *)v1[3];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A54730(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869B90;
  sub_100A546D4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A54760(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869B90;
  sub_100A546D4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_100A54794()
{
  uint64_t v0 = (char *)operator new(0x30uLL);
  *(void *)uint64_t v0 = off_101869B90;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((_DWORD *)v0 + 10) = 0;
  return result;
}

uint64_t sub_100A547C8(uint64_t result)
{
  LOBYTE(v1) = *(_BYTE *)(result + 40);
  if ((_BYTE)v1)
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(_DWORD *)(result + 32) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 28))
        {
          *(void *)(v2 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v2 + 16) = 0LL;
        }

        *(_DWORD *)(v2 + 2_Block_object_dispose(va, 8) = 0;
        int v1 = *(_DWORD *)(result + 40);
      }
    }

    if ((v1 & 0x10) != 0)
    {
      uint64_t v3 = *(void *)(result + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(void *)(v3 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
        }

        *(_DWORD *)(v3 + 2_Block_object_dispose(va, 8) = 0;
      }
    }
  }

  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_100A5481C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v7;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v12 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v11;
          unsigned int v12 = v11 + 1;
          *((void *)this + 1) = v12;
        }

        *(_DWORD *)(a1 + 40) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          uint64_t v13 = v12 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_28;
        }

        continue;
      case 2u:
        int v9 = TagFallback & 7;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_28:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v16 = (_BYTE *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }

        else
        {
          *int v6 = *v13;
          unsigned int v16 = v13 + 1;
          *((void *)this + 1) = v16;
        }

        *(_DWORD *)(a1 + 40) |= 2u;
        char v14 = v16 + 1;
        *((void *)this + 1) = v14;
LABEL_36:
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v17 = v37;
        }

        else
        {
          unsigned int v17 = *v14;
          *((void *)this + 1) = v14 + 1;
        }

        if (v17 <= 5)
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 32) = v17;
        }

        int v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_46:
        *(_DWORD *)(a1 + 40) |= 8u;
        int v19 = *(void **)(a1 + 16);
        if (!v19)
        {
          int v19 = operator new(0x20uLL);
          void *v19 = off_101869B18;
          v19[1] = 0LL;
          void v19[2] = 0LL;
          void v19[3] = 0LL;
          *(void *)(a1 + 16) = v19;
        }

        unsigned int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v38)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v38 = *v20;
          *((void *)this + 1) = v20 + 1;
        }

        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0LL;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        int v28 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v28 + 1;
LABEL_60:
        *(_DWORD *)(a1 + 40) |= 0x10u;
        int v29 = *(void **)(a1 + 24);
        if (!v29)
        {
          int v29 = operator new(0x20uLL);
          *int v29 = off_101869B18;
          v29[1] = 0LL;
          _OWORD v29[2] = 0LL;
          v29[3] = 0LL;
          *(void *)(a1 + 24) = v29;
        }

        unsigned int v30 = (char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v39)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v39 = *v30;
          *((void *)this + 1) = v30 + 1;
        }

        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 < v32)
        {
          int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
          if (sub_100A542A0((uint64_t)v29, this, v34))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
              int v35 = *((_DWORD *)this + 14);
              BOOL v26 = __OFSUB__(v35, 1);
              int v36 = v35 - 1;
              if (v36 < 0 == v26) {
                *((_DWORD *)this + 14) = v36;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
                uint64_t result = 1LL;
                *((_BYTE *)this + 36) = 1;
                return result;
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v9 = TagFallback & 7;
        char v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_46;
        }
        goto LABEL_20;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_20;
        }
        goto LABEL_60;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A54C40( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 12),  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }

uint64_t sub_100A54D10(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_36;
  }

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }

    else
    {
      uint64_t v4 = 2LL;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 40) & 2) == 0) {
      goto LABEL_14;
    }
  }

  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }

  else
  {
    int v7 = 2;
  }

  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }

    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }

    else
    {
      int v9 = 2;
    }

    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_36;
      }
      goto LABEL_30;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }

  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1019A1B18 + 16);
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A5447C(v10, a2);
  int v12 = (int)v11;
  else {
    int v13 = 1;
  }
  uint64_t v4 = (v4 + v12 + v13 + 1);
  if ((*(_DWORD *)(a1 + 40) & 0x10) != 0)
  {
LABEL_30:
    uint64_t v14 = *(void *)(a1 + 24);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_1019A1B18 + 24);
    }
    unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A5447C(v14, a2);
    int v17 = (int)v15;
    else {
      int v18 = 1;
    }
    uint64_t v4 = (v4 + v17 + v18 + 1);
  }

double sub_100A54E74(uint64_t a1, void *lpsrc)
{
  return sub_100A54538(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A54EC0()
{
  return 1LL;
}

void *sub_100A54EC8@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GlonassTimeInfo");
}

double sub_100A54ED8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  13167LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
      int v6 = *(_DWORD *)(a2 + 36);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }

  return result;
}

void sub_100A54FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A54FC0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869C08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A54FD0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869C08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100A54FF0()
{
  uint64_t v0 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v0 = off_101869C08;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_100A55020(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100A55038( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          else
          {
            TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
            *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!(_DWORD)TagFallback) {
              return 1LL;
            }
          }

          unsigned int v8 = TagFallback >> 3;
          int v9 = TagFallback & 7;
          uint64_t v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
            if (!(_DWORD)result) {
              return result;
            }
            int v12 = (_BYTE *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }

          else
          {
            *uint64_t v5 = *v11;
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }

          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 17)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_27;
          }
        }

        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 16) = v15;
        *(_DWORD *)(a1 + 36) |= 2u;
        uint64_t v14 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 25)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_31;
        }
      }

      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 1) {
        goto LABEL_19;
      }
LABEL_31:
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
        return 0LL;
      }
      *(void *)(a1 + 24) = v15;
      *(_DWORD *)(a1 + 36) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
        uint64_t result = 1LL;
        *((_BYTE *)this + 36) = 1;
        return result;
      }
    }

    int v9 = TagFallback & 7;
LABEL_19:
    if (v9 == 4) {
      return 1LL;
    }
  }

  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, TagFallback, a3) & 1) != 0);
  return 0LL;
}

uint64_t sub_100A55218( uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v4,  *(double *)(v5 + 24),  a3);
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v4,  *(double *)(v5 + 16),  a3);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  v4,  *(double *)(v5 + 24),  a3);
  }
  return result;
}

uint64_t sub_100A55290(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(_BYTE *)(a1 + 36) & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }

  else
  {
    uint64_t result = 0LL;
  }

  *(_DWORD *)(a1 + 32) = result;
  return result;
}

double sub_100A552F4(uint64_t a1, void *lpsrc)
{
  return sub_100A54ED8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A55340()
{
  return 1LL;
}

void *sub_100A55348@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SubSecondConversion");
}

double sub_100A55358(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v19,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  13537LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v19,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v18, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 56);
  if (!(_BYTE)v6) {
    return result;
  }
  if ((*(_BYTE *)(a2 + 56) & 1) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 4_Block_object_dispose(va, 8) = v7;
    int v6 = *(_DWORD *)(a2 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }

  else if ((*(_BYTE *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 56) |= 2u;
  unsigned int v8 = *(void **)(a1 + 8);
  if (!v8)
  {
    unsigned int v8 = operator new(0x20uLL);
    void *v8 = &off_1018699B0;
    v8[1] = 0LL;
    _DWORD v8[2] = 0LL;
    uint64_t v8[3] = 0LL;
    *(void *)(a1 + _Block_object_dispose(va, 8) = v8;
  }

  uint64_t v9 = *(void *)(a2 + 8);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1019A1B28 + 8);
  }
  sub_100A52DF8((uint64_t)v8, v9);
  int v6 = *(_DWORD *)(a2 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    *(_DWORD *)(a1 + 56) |= 8u;
    int v12 = *(char **)(a1 + 24);
    if (!v12)
    {
      int v12 = (char *)operator new(0x28uLL);
      *(void *)int v12 = off_101869C08;
      *(_OWORD *)(v12 + _Block_object_dispose(va, 8) = 0u;
      *(_OWORD *)(v12 + 24) = 0u;
      *(void *)(a1 + 24) = v12;
    }

    uint64_t v13 = *(void *)(a2 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1019A1B28 + 24);
    }
    double result = sub_100A54ED8((uint64_t)v12, v13);
    int v6 = *(_DWORD *)(a2 + 56);
    if ((v6 & 0x10) == 0)
    {
LABEL_9:
      if ((v6 & 0x20) == 0) {
        return result;
      }
      goto LABEL_32;
    }

    goto LABEL_27;
  }

void sub_100A555AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100A555C4(void *result)
{
  if ((void *)qword_1019A1B28 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    double result = (void *)v1[5];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A5565C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869C80;
  sub_100A555C4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A5568C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869C80;
  sub_100A555C4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_100A556C0()
{
  uint64_t v0 = (char *)operator new(0x40uLL);
  *(void *)uint64_t v0 = off_101869C80;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *((_DWORD *)v0 + 14) = 0;
  return result;
}

uint64_t sub_100A556F8(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 56);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 4_Block_object_dispose(va, 8) = 0;
    if ((v2 & 2) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100A52FA8(result);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }

    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }

    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(void *)(v4 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
          *(void *)(v4 + 24) = 0LL;
        }

        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }

    if ((v2 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 36))
        {
          *(void *)(v5 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v5 + 16) = 0LL;
          *(void *)(v5 + 24) = 0LL;
        }

        *(_DWORD *)(v5 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }

    if ((v2 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 40);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 36))
        {
          *(void *)(v6 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v6 + 16) = 0LL;
          *(void *)(v6 + 24) = 0LL;
        }

        *(_DWORD *)(v6 + 36) = 0;
      }
    }
  }

  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t sub_100A557C4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        unint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }

        int v12 = *(_DWORD *)(a1 + 56) | 1;
        *(_DWORD *)(a1 + 56) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_30;
        }

        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        int v12 = *(_DWORD *)(a1 + 56);
LABEL_30:
        *(_DWORD *)(a1 + 56) = v12 | 2;
        uint64_t v14 = *(void **)(a1 + 8);
        if (!v14)
        {
          uint64_t v14 = operator new(0x20uLL);
          *uint64_t v14 = &off_1018699B0;
          v14[1] = 0LL;
          unsigned int v14[2] = 0LL;
          v14[3] = 0LL;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v14;
        }

        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v59)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v59 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0LL;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        int v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_44:
        *(_DWORD *)(a1 + 56) |= 4u;
        unsigned int v24 = *(char **)(a1 + 16);
        if (!v24)
        {
          unsigned int v24 = (char *)operator new(0x28uLL);
          *(void *)unsigned int v24 = off_101869C08;
          *(_OWORD *)(v24 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v24 + 24) = 0u;
          *(void *)(a1 + 16) = v24;
        }

        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v59)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v59 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_58:
        *(_DWORD *)(a1 + 56) |= 8u;
        int v33 = *(char **)(a1 + 24);
        if (!v33)
        {
          int v33 = (char *)operator new(0x28uLL);
          *(void *)int v33 = off_101869C08;
          *(_OWORD *)(v33 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v33 + 24) = 0u;
          *(void *)(a1 + 24) = v33;
        }

        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v59)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v59 = *v34;
          *((void *)this + 1) = v34 + 1;
        }

        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0LL;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        int v41 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v41 + 1;
LABEL_72:
        *(_DWORD *)(a1 + 56) |= 0x10u;
        uint64_t v42 = *(char **)(a1 + 32);
        if (!v42)
        {
          uint64_t v42 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v42 = off_101869C08;
          *(_OWORD *)(v42 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v42 + 24) = 0u;
          *(void *)(a1 + 32) = v42;
        }

        int v43 = (char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v59)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v59 = *v43;
          *((void *)this + 1) = v43 + 1;
        }

        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0LL;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v48 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v21) {
          *((_DWORD *)this + 14) = v49;
        }
        int v50 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v50 + 1;
LABEL_86:
        *(_DWORD *)(a1 + 56) |= 0x20u;
        int v51 = *(char **)(a1 + 40);
        if (!v51)
        {
          int v51 = (char *)operator new(0x28uLL);
          *(void *)int v51 = off_101869C08;
          *(_OWORD *)(v51 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v51 + 24) = 0u;
          *(void *)(a1 + 40) = v51;
        }

        uint64_t v52 = (char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v59)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v59 = *v52;
          *((void *)this + 1) = v52 + 1;
        }

        int v53 = *((_DWORD *)this + 14);
        int v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0LL;
        }
        int v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        int v57 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v21) {
          *((_DWORD *)this + 14) = v58;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_44;
        }
        goto LABEL_22;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_58;
        }
        goto LABEL_22;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_72;
        }
        goto LABEL_22;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        goto LABEL_86;
      default:
        int v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A55DE4( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 48),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1B28 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }

uint64_t sub_100A55F00(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_45;
  }

  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 56);
    }

    else
    {
      int v6 = 1;
    }

    uint64_t v4 = (v6 + 1);
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 56) & 2) == 0) {
      goto LABEL_16;
    }
  }

  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1B28 + 8);
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A53318(v7, a2);
  int v9 = (int)v8;
  else {
    int v10 = 1;
  }
  uint64_t v4 = (v4 + v9 + v10 + 1);
  int v3 = *(_DWORD *)(a1 + 56);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = *(void *)(a1 + 16);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_1019A1B28 + 16);
    }
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A55290(v11, a2);
    int v13 = (int)v12;
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
    int v3 = *(_DWORD *)(a1 + 56);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_33;
    }
  }

  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }

  uint64_t v15 = *(void *)(a1 + 24);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_1019A1B28 + 24);
  }
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A55290(v15, a2);
  int v17 = (int)v16;
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_45;
    }
    goto LABEL_39;
  }

double sub_100A560E0(uint64_t a1, void *lpsrc)
{
  return sub_100A55358(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A5612C()
{
  return 1LL;
}

void *sub_100A56134@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.BeidouTimeInfo");
}

double sub_100A56144(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v15,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  13841LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v15,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v14, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 40);
  if (!(_BYTE)v6) {
    return result;
  }
  if ((*(_BYTE *)(a2 + 40) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v8 = *(void **)(a1 + 8);
    if (!v8)
    {
      uint64_t v8 = operator new(0x20uLL);
      void *v8 = &off_1018699B0;
      v8[1] = 0LL;
      _DWORD v8[2] = 0LL;
      uint64_t v8[3] = 0LL;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v8;
    }

    uint64_t v9 = *(void *)(a2 + 8);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A1B30 + 8);
    }
    sub_100A52DF8((uint64_t)v8, v9);
    int v6 = *(_DWORD *)(a2 + 40);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        return result;
      }
      goto LABEL_20;
    }

    goto LABEL_15;
  }

  int v7 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(_DWORD *)(a1 + 32) = v7;
  int v6 = *(_DWORD *)(a2 + 40);
  if ((v6 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v6 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  *(_DWORD *)(a1 + 40) |= 4u;
  int v10 = *(char **)(a1 + 16);
  if (!v10)
  {
    int v10 = (char *)operator new(0x28uLL);
    *(void *)int v10 = off_101869C08;
    *(_OWORD *)(v10 + _Block_object_dispose(va, 8) = 0u;
    *(_OWORD *)(v10 + 24) = 0u;
    *(void *)(a1 + 16) = v10;
  }

  uint64_t v11 = *(void *)(a2 + 16);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_1019A1B30 + 16);
  }
  double result = sub_100A54ED8((uint64_t)v10, v11);
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_20:
    *(_DWORD *)(a1 + 40) |= 8u;
    int v12 = *(char **)(a1 + 24);
    if (!v12)
    {
      int v12 = (char *)operator new(0x28uLL);
      *(void *)int v12 = off_101869C08;
      *(_OWORD *)(v12 + _Block_object_dispose(va, 8) = 0u;
      *(_OWORD *)(v12 + 24) = 0u;
      *(void *)(a1 + 24) = v12;
    }

    uint64_t v13 = *(void *)(a2 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_1019A1B30 + 24);
    }
    return sub_100A54ED8((uint64_t)v12, v13);
  }

  return result;
}

void sub_100A562E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100A562F8(void *result)
{
  if ((void *)qword_1019A1B30 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    double result = (void *)v1[3];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A56368(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869CF8;
  sub_100A562F8(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A56398(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869CF8;
  sub_100A562F8(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_100A563CC()
{
  uint64_t v0 = (char *)operator new(0x30uLL);
  *(void *)uint64_t v0 = off_101869CF8;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((_DWORD *)v0 + 10) = 0;
  return result;
}

uint64_t sub_100A56400(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 40);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 32) = 0;
    if ((v2 & 2) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100A52FA8(result);
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }

    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }

    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(void *)(v4 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v4 + 16) = 0LL;
          *(void *)(v4 + 24) = 0LL;
        }

        *(_DWORD *)(v4 + 36) = 0;
      }
    }
  }

  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_100A56484( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 32);
  while (1)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          uint64_t v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }

        int v12 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 40) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }

        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        int v12 = *(_DWORD *)(a1 + 40);
LABEL_26:
        *(_DWORD *)(a1 + 40) = v12 | 2;
        char v14 = *(void **)(a1 + 8);
        if (!v14)
        {
          char v14 = operator new(0x20uLL);
          *char v14 = &off_1018699B0;
          v14[1] = 0LL;
          unsigned int v14[2] = 0LL;
          v14[3] = 0LL;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v14;
        }

        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v41)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v41 = *v15;
          *((void *)this + 1) = v15 + 1;
        }

        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0LL;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        uint64_t v23 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v23 + 1;
LABEL_40:
        *(_DWORD *)(a1 + 40) |= 4u;
        unsigned int v24 = *(char **)(a1 + 16);
        if (!v24)
        {
          unsigned int v24 = (char *)operator new(0x28uLL);
          *(void *)unsigned int v24 = off_101869C08;
          *(_OWORD *)(v24 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v24 + 24) = 0u;
          *(void *)(a1 + 16) = v24;
        }

        unsigned int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v42)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v42 = *v25;
          *((void *)this + 1) = v25 + 1;
        }

        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0LL;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v32 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 40) |= 8u;
        int v33 = *(char **)(a1 + 24);
        if (!v33)
        {
          int v33 = (char *)operator new(0x28uLL);
          *(void *)int v33 = off_101869C08;
          *(_OWORD *)(v33 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v33 + 24) = 0u;
          *(void *)(a1 + 24) = v33;
        }

        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v43)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v43 = *v34;
          *((void *)this + 1) = v34 + 1;
        }

        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0LL;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_40;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        goto LABEL_54;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A568BC( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(_DWORD *)(result + 32),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1B30 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v7,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_13;
  }

uint64_t sub_100A56980(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_31;
  }

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }

    else
    {
      uint64_t v4 = 2LL;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }

  else
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 40) & 2) == 0) {
      goto LABEL_16;
    }
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_1019A1B30 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A53318(v6, a2);
  int v8 = (int)v7;
  else {
    int v9 = 1;
  }
  uint64_t v4 = (v4 + v8 + v9 + 1);
  int v3 = *(_DWORD *)(a1 + 40);
LABEL_16:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }

  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_1019A1B30 + 16);
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A55290(v10, a2);
  int v12 = (int)v11;
  else {
    int v13 = 1;
  }
  uint64_t v4 = (v4 + v12 + v13 + 1);
  if ((*(_DWORD *)(a1 + 40) & 8) != 0)
  {
LABEL_25:
    uint64_t v14 = *(void *)(a1 + 24);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_1019A1B30 + 24);
    }
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A55290(v14, a2);
    int v17 = (int)v15;
    else {
      int v18 = 1;
    }
    uint64_t v4 = (v4 + v17 + v18 + 1);
  }

double sub_100A56ACC(uint64_t a1, void *lpsrc)
{
  return sub_100A56144(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A56B18()
{
  return 1LL;
}

void *sub_100A56B20@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.GalileoTimeInfo");
}

void sub_100A56B30(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v10,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  14059LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v10,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v9, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v6 = *(char **)(a1 + 8);
      if (!v6)
      {
        uint64_t v6 = (char *)operator new(0x28uLL);
        *(void *)uint64_t v6 = off_101869C08;
        *(_OWORD *)(v6 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(void *)(a1 + _Block_object_dispose(va, 8) = v6;
      }

      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_1019A1B38 + 8);
      }
      sub_100A54ED8((uint64_t)v6, v7);
      int v5 = *(_DWORD *)(a2 + 24);
    }

    if ((v5 & 2) != 0)
    {
      int v8 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v8;
    }
  }

void sub_100A56C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A56C2C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_101869D70;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_1019A1B38 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100A56C80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

void *sub_100A56C94()
{
  uint64_t result = operator new(0x20uLL);
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = &off_101869D70;
  *((_DWORD *)result + 6) = 0;
  return result;
}

uint64_t sub_100A56CC0(uint64_t result)
{
  if (*(_BYTE *)(result + 24))
  {
    if ((*(_BYTE *)(result + 24) & 1) != 0)
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(void *)(v1 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v1 + 16) = 0LL;
          *(void *)(v1 + 24) = 0LL;
        }

        *(_DWORD *)(v1 + 36) = 0;
      }
    }

    *(_DWORD *)(result + 16) = 0;
  }

  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100A56CF4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      else
      {
        TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
        *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!(_DWORD)TagFallback) {
          return 1LL;
        }
      }

      if (TagFallback >> 3 == 2)
      {
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          uint64_t v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_30;
        }
      }

      else
      {
        int v8 = TagFallback & 7;
      }

uint64_t sub_100A56F28( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 16),  a2,  a4);
  }

  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_1019A1B38 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 16),  a2,  a4);
  }
  return result;
}

uint64_t sub_100A56F94(uint64_t a1, unint64_t a2)
{
  if (!*(_BYTE *)(a1 + 24))
  {
    uint64_t v3 = 0LL;
    goto LABEL_16;
  }

  if ((*(_BYTE *)(a1 + 24) & 1) == 0)
  {
    uint64_t v3 = 0LL;
    if ((*(_BYTE *)(a1 + 24) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }

  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_1019A1B38 + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A55290(v4, a2);
  int v6 = (int)v5;
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    else {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }

void sub_100A5703C(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A57088()
{
  return 1LL;
}

void *sub_100A57090@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.NavicTimeInfo");
}

void sub_100A570A0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v17,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  14394LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v17,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v16, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }

  LOBYTE(sub_1012279C0(0LL, v4, v5) = *(_BYTE *)(a2 + 52);
  if (!(_BYTE)v5) {
    return;
  }
  if ((*(_BYTE *)(a2 + 52) & 1) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    int v6 = *(void **)(a1 + 8);
    if (!v6)
    {
      int v6 = operator new(0x28uLL);
      *int v6 = off_101869AA0;
      v6[1] = 0LL;
      v6[2] = 0LL;
      void v6[3] = 0LL;
      *((_DWORD *)v6 + _Block_object_dispose(va, 8) = 0;
      *(void *)(a1 + _Block_object_dispose(va, 8) = v6;
    }

    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A1B40 + 8);
    }
    sub_100A53994((uint64_t)v6, v7);
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_20:
      *(_DWORD *)(a1 + 52) |= 4u;
      uint64_t v10 = *(char **)(a1 + 24);
      if (!v10)
      {
        uint64_t v10 = (char *)operator new(0x40uLL);
        *(void *)uint64_t v10 = off_101869C80;
        *(_OWORD *)(v10 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v10 + 24) = 0u;
        *(_OWORD *)(v10 + 40) = 0u;
        *((_DWORD *)v10 + 14) = 0;
        *(void *)(a1 + 24) = v10;
      }

      uint64_t v11 = *(void *)(a2 + 24);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_1019A1B40 + 24);
      }
      sub_100A55358((uint64_t)v10, v11);
      int v5 = *(_DWORD *)(a2 + 52);
      if ((v5 & 8) == 0)
      {
LABEL_8:
        if ((v5 & 0x10) == 0) {
          return;
        }
        goto LABEL_30;
      }

      goto LABEL_25;
    }
  }

  else if ((*(_BYTE *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }

  *(_DWORD *)(a1 + 52) |= 2u;
  int v8 = *(char **)(a1 + 16);
  if (!v8)
  {
    int v8 = (char *)operator new(0x30uLL);
    *(void *)int v8 = off_101869B90;
    *(_OWORD *)(v8 + _Block_object_dispose(va, 8) = 0u;
    *(_OWORD *)(v8 + 24) = 0u;
    *((_DWORD *)v8 + 10) = 0;
    *(void *)(a1 + 16) = v8;
  }

  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_1019A1B40 + 16);
  }
  sub_100A54538((uint64_t)v8, v9);
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v5 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_25:
  *(_DWORD *)(a1 + 52) |= 8u;
  int v12 = *(char **)(a1 + 32);
  if (!v12)
  {
    int v12 = (char *)operator new(0x30uLL);
    *(void *)int v12 = off_101869CF8;
    *(_OWORD *)(v12 + _Block_object_dispose(va, 8) = 0u;
    *(_OWORD *)(v12 + 24) = 0u;
    *((_DWORD *)v12 + 10) = 0;
    *(void *)(a1 + 32) = v12;
  }

  uint64_t v13 = *(void *)(a2 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_1019A1B40 + 32);
  }
  sub_100A56144((uint64_t)v12, v13);
  if ((*(_DWORD *)(a2 + 52) & 0x10) != 0)
  {
LABEL_30:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    int v14 = *(void **)(a1 + 40);
    if (!v14)
    {
      int v14 = operator new(0x20uLL);
      v14[1] = 0LL;
      unsigned int v14[2] = 0LL;
      *int v14 = &off_101869D70;
      *((_DWORD *)v14 + 6) = 0;
      *(void *)(a1 + 40) = v14;
    }

    uint64_t v15 = *(void *)(a2 + 40);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_1019A1B40 + 40);
    }
    sub_100A56B30((uint64_t)v14, v15);
  }

void sub_100A572E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100A572FC(void *result)
{
  if ((void *)qword_1019A1B40 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
    uint64_t result = (void *)v1[5];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A57394(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869DE8;
  sub_100A572FC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A573C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869DE8;
  sub_100A572FC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_100A573F8()
{
  uint64_t v0 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v0 = off_101869DE8;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  return result;
}

uint64_t sub_100A5742C(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 52);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 52) & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100A53BDC(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }

    if ((v2 & 2) != 0)
    {
      double result = *(void *)(v1 + 16);
      if (result)
      {
        double result = sub_100A547C8(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }

    if ((v2 & 4) != 0)
    {
      double result = *(void *)(v1 + 24);
      if (result)
      {
        double result = sub_100A556F8(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }

    if ((v2 & 8) != 0)
    {
      double result = *(void *)(v1 + 32);
      if (result)
      {
        double result = sub_100A56400(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }

    if ((v2 & 0x10) != 0)
    {
      double result = *(void *)(v1 + 40);
      if (result) {
        double result = sub_100A56CC0(result);
      }
    }
  }

  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_100A574B4( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_6;
    }

    TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        int v8 = *(void **)(a1 + 8);
        if (!v8)
        {
          int v8 = operator new(0x28uLL);
          void *v8 = off_101869AA0;
          v8[1] = 0LL;
          _DWORD v8[2] = 0LL;
          uint64_t v8[3] = 0LL;
          *((_DWORD *)v8 + _Block_object_dispose(va, 8) = 0;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v8;
        }

        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v54)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v54 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0LL;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
        goto LABEL_33;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 52) |= 2u;
        BOOL v18 = *(char **)(a1 + 16);
        if (!v18)
        {
          BOOL v18 = (char *)operator new(0x30uLL);
          *(void *)BOOL v18 = off_101869B90;
          *(_OWORD *)(v18 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v18 + 24) = 0u;
          *((_DWORD *)v18 + 10) = 0;
          *(void *)(a1 + 16) = v18;
        }

        int v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v54)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v54 = *v19;
          *((void *)this + 1) = v19 + 1;
        }

        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0LL;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v26 + 1;
LABEL_47:
        *(_DWORD *)(a1 + 52) |= 4u;
        int v27 = *(char **)(a1 + 24);
        if (!v27)
        {
          int v27 = (char *)operator new(0x40uLL);
          *(void *)int v27 = off_101869C80;
          *(_OWORD *)(v27 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v27 + 24) = 0u;
          *(_OWORD *)(v27 + 40) = 0u;
          *((_DWORD *)v27 + 14) = 0;
          *(void *)(a1 + 24) = v27;
        }

        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v54)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v54 = *v28;
          *((void *)this + 1) = v28 + 1;
        }

        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0LL;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v35 + 1;
LABEL_61:
        *(_DWORD *)(a1 + 52) |= 8u;
        int v36 = *(char **)(a1 + 32);
        if (!v36)
        {
          int v36 = (char *)operator new(0x30uLL);
          *(void *)int v36 = off_101869CF8;
          *(_OWORD *)(v36 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v36 + 24) = 0u;
          *((_DWORD *)v36 + 10) = 0;
          *(void *)(a1 + 32) = v36;
        }

        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v54)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v54 = *v37;
          *((void *)this + 1) = v37 + 1;
        }

        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0LL;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        int v44 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v44 + 1;
LABEL_75:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        int v45 = *(void **)(a1 + 40);
        if (!v45)
        {
          int v45 = operator new(0x20uLL);
          v45[1] = 0LL;
          v45[2] = 0LL;
          *int v45 = &off_101869D70;
          *((_DWORD *)v45 + 6) = 0;
          *(void *)(a1 + 40) = v45;
        }

        int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v54)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v54 = *v46;
          *((void *)this + 1) = v46 + 1;
        }

        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0LL;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v15) {
          *((_DWORD *)this + 14) = v52;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
          uint64_t result = 1LL;
          *((_BYTE *)this + 36) = 1;
          return result;
        }

        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_47;
        }
        goto LABEL_21;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_61;
        }
        goto LABEL_21;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_21:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A57A90( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A1B40 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A1B40 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }

uint64_t sub_100A57B90(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_40;
  }

  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A1B40 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A54014(v5, a2);
  int v7 = (int)v6;
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A1B40 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A54D10(v9, a2);
    int v11 = (int)v10;
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 52);
  }

void sub_100A57D44(uint64_t a1, void *lpsrc)
{
}

uint64_t sub_100A57D90()
{
  return 1LL;
}

void *sub_100A57D98@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.TimeConversionInfo");
}

float sub_100A57DA8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v9,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  14813LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v9,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v8, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }

  int v6 = *(_DWORD *)(a2 + 52);
  if (!(_BYTE)v6) {
    goto LABEL_13;
  }
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
    int v6 = *(_DWORD *)(a2 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }

  float result = *(float *)(a2 + 16);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(float *)(a1 + 16) = result;
  int v6 = *(_DWORD *)(a2 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

void sub_100A57F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A57F50(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869E60;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A57F60(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869E60;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100A57F80()
{
  uint64_t v0 = (char *)operator new(0x38uLL);
  *(void *)uint64_t v0 = off_101869E60;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  return result;
}

uint64_t sub_100A57FB4(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 52);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(va, 8) = 0u;
  }

  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 44) = 0;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_100A57FE4( _DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 2);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!(_DWORD)result) {
            return result;
          }
          int v11 = (_BYTE *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }

        else
        {
          *uint64_t v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }

        a1[13] |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 21)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_36;
        }

        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_28;
        }
LABEL_36:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0LL;
        }
        a1[4] = v20;
        a1[13] |= 2u;
        uint64_t v13 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v13 + 1;
LABEL_40:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0LL;
        }
        a1[5] = v20;
        a1[13] |= 4u;
        int v14 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v14 + 1;
LABEL_44:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0LL;
        }
        a1[6] = v20;
        a1[13] |= 8u;
        int v15 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v15 + 1;
LABEL_48:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0LL;
        }
        a1[7] = v20;
        a1[13] |= 0x10u;
        int v16 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v16 + 1;
LABEL_52:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0LL;
        }
        a1[8] = v20;
        a1[13] |= 0x20u;
        uint64_t v17 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v17 + 1;
LABEL_56:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0LL;
        }
        a1[9] = v20;
        a1[13] |= 0x40u;
        BOOL v18 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v18 + 1;
LABEL_60:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0LL;
        }
        a1[10] = v20;
        a1[13] |= 0x80u;
        int v19 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v19 + 1;
LABEL_64:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) != 0)
        {
          a1[11] = v20;
          a1[13] |= 0x100u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }

          continue;
        }

        return 0LL;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_40;
        }
        goto LABEL_28;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_44;
        }
        goto LABEL_28;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_48;
        }
        goto LABEL_28;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_52;
        }
        goto LABEL_28;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_56;
        }
        goto LABEL_28;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_60;
        }
        goto LABEL_28;
      case 9u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_28;
        }
        goto LABEL_64;
      default:
        int v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A583C8( uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if ((v6 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  *(void *)(result + 8),  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v4,  *(float *)(v5 + 16),  a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }

uint64_t sub_100A584E8(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8),  a2)
         + 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }

    else
    {
      unsigned int v4 = 0;
    }

    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 5;
    }
  }

  else
  {
    unsigned int v4 = 0;
  }

  if ((v3 & 0x100) != 0) {
    uint64_t result = v4 + 5;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 4_Block_object_dispose(va, 8) = result;
  return result;
}

float sub_100A58598(uint64_t a1, void *lpsrc)
{
  return sub_100A57DA8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A585E4()
{
  return 1LL;
}

void *sub_100A585EC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.KlobucharModelParameters");
}

double sub_100A585FC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  15070LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + _Block_object_dispose(va, 8) = result;
      int v6 = *(_DWORD *)(a2 + 36);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }

  return result;
}

void sub_100A586CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A586E4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869ED8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A586F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869ED8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100A58714()
{
  uint64_t v0 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v0 = off_101869ED8;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_100A58744(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100A5875C( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        unint64_t v9 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0LL;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          uint64_t v10 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }

      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }

      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }

      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1LL;
      }
    }

uint64_t sub_100A58914( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
  }
  return result;
}

uint64_t sub_100A5898C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(_BYTE *)(a1 + 36))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_100A589C4(uint64_t a1, void *lpsrc)
{
  return sub_100A585FC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A58A10()
{
  return 1LL;
}

void *sub_100A58A18@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.SfcfXyz");
}

double sub_100A58A28(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v14,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  15360LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v14,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v13, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      unsigned int v7 = *(void **)(a1 + 8);
      if (!v7)
      {
        unsigned int v7 = operator new(0x20uLL);
        v7[1] = 0LL;
        v7[2] = 0LL;
        *unsigned int v7 = &off_101868AB0;
        *((_DWORD *)v7 + 6) = 0;
        *(void *)(a1 + _Block_object_dispose(va, 8) = v7;
      }

      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_1019A1B58 + 8);
      }
      sub_100A420FC((uint64_t)v7, v8);
      int v6 = *(_DWORD *)(a2 + 36);
    }

    if ((v6 & 2) != 0)
    {
      unsigned int v9 = *(_DWORD *)(a2 + 16);
      if (v9 >= 0xD) {
        sub_10125A480();
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 16) = v9;
      int v6 = *(_DWORD *)(a2 + 36);
    }

    if ((v6 & 4) != 0)
    {
      unsigned int v10 = *(_DWORD *)(a2 + 20);
      if (v10 >= 4) {
        sub_10125A458();
      }
      *(_DWORD *)(a1 + 36) |= 4u;
      *(_DWORD *)(a1 + 20) = v10;
      int v6 = *(_DWORD *)(a2 + 36);
    }

    if ((v6 & 8) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 8u;
      int v11 = *(char **)(a1 + 24);
      if (!v11)
      {
        int v11 = (char *)operator new(0x28uLL);
        *(void *)int v11 = off_101869ED8;
        *(_OWORD *)(v11 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(void *)(a1 + 24) = v11;
      }

      uint64_t v12 = *(void *)(a2 + 24);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_1019A1B58 + 24);
      }
      return sub_100A585FC((uint64_t)v11, v12);
    }
  }

  return result;
}

void sub_100A58B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100A58BAC(void *result)
{
  if ((void *)qword_1019A1B58 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    double result = (void *)v1[3];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A58C08(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869F50;
  sub_100A58BAC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A58C38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869F50;
  sub_100A58BAC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v2);
}

double sub_100A58C6C()
{
  uint64_t v0 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v0 = off_101869F50;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_100A58C9C(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 36);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 36) & 1) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100A42290(result);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }

    *(void *)(v1 + 16) = 0LL;
    if ((v2 & 8) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
      }
    }
  }

  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_100A58CFC( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    else
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
    }

    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v8 = *(void **)(a1 + 8);
        if (!v8)
        {
          uint64_t v8 = operator new(0x20uLL);
          v8[1] = 0LL;
          _DWORD v8[2] = 0LL;
          void *v8 = &off_101868AB0;
          *((_DWORD *)v8 + 6) = 0;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v8;
        }

        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v35)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v35 = *v9;
          *((void *)this + 1) = v9 + 1;
        }

        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0LL;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        uint64_t v21 = (_BYTE *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        int v11 = v21 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_31:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v22 = v35;
        }

        else
        {
          unsigned int v22 = *v11;
          *((void *)this + 1) = v11 + 1;
        }

        if (v22 <= 0xC)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 16) = v22;
        }

        int v24 = (_BYTE *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        char v13 = v24 + 1;
        *((void *)this + 1) = v13;
LABEL_41:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
          if (!(_DWORD)result) {
            return result;
          }
          unsigned int v25 = v35;
        }

        else
        {
          unsigned int v25 = *v13;
          *((void *)this + 1) = v13 + 1;
        }

        if (v25 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 4u;
          *(_DWORD *)(a1 + 20) = v25;
        }

        int v26 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v26 + 1;
LABEL_51:
        *(_DWORD *)(a1 + 36) |= 8u;
        int v27 = *(char **)(a1 + 24);
        if (!v27)
        {
          int v27 = (char *)operator new(0x28uLL);
          *(void *)int v27 = off_101869ED8;
          *(_OWORD *)(v27 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v27 + 24) = 0u;
          *(void *)(a1 + 24) = v27;
        }

        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  &v35)) {
            return 0LL;
          }
        }

        else
        {
          unsigned int v35 = *v28;
          *((void *)this + 1) = v28 + 1;
        }

        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 < v30)
        {
          int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
          if (sub_100A5875C((uint64_t)v27, this, v32))
          {
            if (*((_BYTE *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
              int v33 = *((_DWORD *)this + 14);
              BOOL v19 = __OFSUB__(v33, 1);
              int v34 = v33 - 1;
              if (v34 < 0 == v19) {
                *((_DWORD *)this + 14) = v34;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
                uint64_t result = 1LL;
                *((_BYTE *)this + 36) = 1;
                return result;
              }

              continue;
            }
          }
        }

        return 0LL;
      case 3u:
        int v7 = TagFallback & 7;
        char v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_41;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        goto LABEL_51;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A590C8( uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A1B58 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(_DWORD *)(v5 + 20),  (int)a2,  a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }

  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  *(_DWORD *)(v5 + 16),  (int)a2,  a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_11:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_1019A1B58 + 24);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  v8,  a2,  a4);
}

uint64_t sub_100A5917C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0LL;
    goto LABEL_36;
  }

  if ((*(_BYTE *)(a1 + 36) & 1) == 0)
  {
    uint64_t v4 = 0LL;
    if ((*(_BYTE *)(a1 + 36) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_1019A1B58 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A42570(v5, a2);
  int v7 = (int)v6;
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }

    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }

    else
    {
      int v10 = 2;
    }

    uint64_t v4 = (v10 + v4);
  }

double sub_100A592C0(uint64_t a1, void *lpsrc)
{
  return sub_100A58A28(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A5930C()
{
  return 1LL;
}

void *sub_100A59314@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.AntennaPhaseCenterSvOffset");
}

double sub_100A59324(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v8,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  15595LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v8,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v7, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }

  LOBYTE(v6) = *(_BYTE *)(a2 + 36);
  if ((_BYTE)v6)
  {
    if ((*(_BYTE *)(a2 + 36) & 1) != 0)
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + _Block_object_dispose(va, 8) = result;
      int v6 = *(_DWORD *)(a2 + 36);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }

    else if ((*(_BYTE *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }

    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }

  return result;
}

void sub_100A593F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A5940C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869FC8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100A5941C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_101869FC8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
  operator delete(v1);
}

double sub_100A5943C()
{
  uint64_t v0 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v0 = off_101869FC8;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t sub_100A5946C(uint64_t result)
{
  if (*(_BYTE *)(result + 36))
  {
    *(void *)(result + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
  }

  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100A59484( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        else
        {
          TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v5;
          *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!(_DWORD)TagFallback) {
            return 1LL;
          }
        }

        unsigned int v7 = TagFallback >> 3;
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + _Block_object_dispose(va, 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        unsigned int v9 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0LL;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          int v10 = (_BYTE *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }

      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }

      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }

      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1LL;
      }
    }

uint64_t sub_100A5963C( uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  a2,  *(double *)(result + 8),  a3);
    int v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        return result;
      }
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
    }
  }

  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  a2,  *(double *)(v4 + 16),  a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  a2,  *(double *)(v4 + 24),  a3);
  }
  return result;
}

uint64_t sub_100A596B4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(_BYTE *)(a1 + 36))
  {
    unsigned int v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }

  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_100A596EC(uint64_t a1, void *lpsrc)
{
  return sub_100A59324(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A59738()
{
  return 1LL;
}

void *sub_100A59740@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.ReceivedTimeStamp");
}

float sub_100A59750(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage( v41,  3LL,  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc",  16046LL);
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<( v41,  "CHECK failed: (&from) != (this): ");
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=(&v40, v4);
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v41);
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24),  *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 24) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 36);
      uint64_t v8 = *(int *)(a1 + 32);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24),  v7 + 1);
          int v7 = *(_DWORD *)(a1 + 36);
        }

        *(_DWORD *)(a1 + 36) = v7 + 1;
        int v10 = operator new(0xB0uLL);
        *(void *)int v10 = off_101869848;
        __int16 v10[8] = 0u;
        v10[9] = 0u;
        v10[10] = 0u;
        *(_OWORD *)((char *)v10 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)((char *)v10 + 24) = 0u;
        *((_DWORD *)v10 + 10) = 0;
        v10[3] = 0u;
        _DWORD v10[4] = 0u;
        v10[5] = 0u;
        v10[6] = 0u;
        *(_OWORD *)((char *)v10 + 10_Block_object_dispose(va, 8) = 0u;
        uint64_t v11 = *(void *)(a1 + 24);
        uint64_t v12 = *(int *)(a1 + 32);
        *(_DWORD *)(a1 + 32) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }

      else
      {
        uint64_t v9 = *(void *)(a1 + 24);
        *(_DWORD *)(a1 + 32) = v8 + 1;
        int v10 = *(_OWORD **)(v9 + 8 * v8);
      }

      sub_100A506C4((uint64_t)v10, v6);
      ++v5;
    }

    while (v5 < *(int *)(a2 + 32));
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48),  *(_DWORD *)(a2 + 56) + *(_DWORD *)(a1 + 56));
  if (*(int *)(a2 + 56) >= 1)
  {
    uint64_t v13 = 0LL;
    do
    {
      uint64_t v14 = *(void *)(*(void *)(a2 + 48) + 8 * v13);
      int v15 = *(_DWORD *)(a1 + 60);
      uint64_t v16 = *(int *)(a1 + 56);
      if ((int)v16 >= v15)
      {
        if (v15 == *(_DWORD *)(a1 + 64))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48),  v15 + 1);
          int v15 = *(_DWORD *)(a1 + 60);
        }

        *(_DWORD *)(a1 + 60) = v15 + 1;
        int v18 = operator new(0x28uLL);
        *int v18 = off_1018698C0;
        v18[1] = 0LL;
        unsigned int v18[2] = 0LL;
        v18[3] = 0LL;
        *((_DWORD *)v18 + _Block_object_dispose(va, 8) = 0;
        uint64_t v19 = *(void *)(a1 + 48);
        uint64_t v20 = *(int *)(a1 + 56);
        *(_DWORD *)(a1 + 56) = v20 + 1;
        *(void *)(v19 + 8 * v20) = v18;
      }

      else
      {
        uint64_t v17 = *(void *)(a1 + 48);
        *(_DWORD *)(a1 + 56) = v16 + 1;
        int v18 = *(void **)(v17 + 8 * v16);
      }

      sub_100A52490((uint64_t)v18, v14);
      ++v13;
    }

    while (v13 < *(int *)(a2 + 56));
  }

  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104),  *(_DWORD *)(a2 + 112) + *(_DWORD *)(a1 + 112));
  if (*(int *)(a2 + 112) >= 1)
  {
    uint64_t v22 = 0LL;
    do
    {
      uint64_t v23 = *(void *)(*(void *)(a2 + 104) + 8 * v22);
      int v24 = *(_DWORD *)(a1 + 116);
      uint64_t v25 = *(int *)(a1 + 112);
      if ((int)v25 >= v24)
      {
        if (v24 == *(_DWORD *)(a1 + 120))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve( (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104),  v24 + 1);
          int v24 = *(_DWORD *)(a1 + 116);
        }

        *(_DWORD *)(a1 + 116) = v24 + 1;
        int v27 = (char *)operator new(0x28uLL);
        *(void *)int v27 = off_101869F50;
        *(_OWORD *)(v27 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v27 + 24) = 0u;
        uint64_t v28 = *(void *)(a1 + 104);
        uint64_t v29 = *(int *)(a1 + 112);
        *(_DWORD *)(a1 + 112) = v29 + 1;
        *(void *)(v28 + 8 * v29) = v27;
      }

      else
      {
        uint64_t v26 = *(void *)(a1 + 104);
        *(_DWORD *)(a1 + 112) = v25 + 1;
        int v27 = *(char **)(v26 + 8 * v25);
      }

      double v21 = sub_100A58A28((uint64_t)v27, v23);
      ++v22;
    }

    while (v22 < *(int *)(a2 + 112));
  }

  LOBYTE(v30) = *(_BYTE *)(a2 + 132);
  if ((_BYTE)v30)
  {
    if ((*(_BYTE *)(a2 + 132) & 1) != 0)
    {
      *(_DWORD *)(a1 + 132) |= 1u;
      int v31 = *(char **)(a1 + 8);
      if (!v31)
      {
        int v31 = (char *)operator new(0x28uLL);
        *(void *)int v31 = off_101869FC8;
        *(_OWORD *)(v31 + _Block_object_dispose(va, 8) = 0u;
        *(_OWORD *)(v31 + 24) = 0u;
        *(void *)(a1 + _Block_object_dispose(va, 8) = v31;
      }

      uint64_t v32 = *(void *)(a2 + 8);
      if (!v32) {
        uint64_t v32 = *(void *)(qword_1019A1B68 + 8);
      }
      double v21 = sub_100A59324((uint64_t)v31, v32);
      int v30 = *(_DWORD *)(a2 + 132);
      if ((v30 & 2) == 0)
      {
LABEL_30:
        if ((v30 & 0x10) == 0) {
          goto LABEL_31;
        }
        goto LABEL_45;
      }
    }

    else if ((*(_BYTE *)(a2 + 132) & 2) == 0)
    {
      goto LABEL_30;
    }

    *(_DWORD *)(a1 + 132) |= 2u;
    int v33 = *(void **)(a1 + 16);
    if (!v33)
    {
      int v33 = operator new(0x30uLL);
      v33[5] = 0LL;
      *int v33 = off_1018695F0;
      v33[1] = 0LL;
      v33[2] = 0LL;
      v33[3] = 0LL;
      *((_DWORD *)v33 + _Block_object_dispose(va, 8) = 0;
      *(void *)(a1 + 16) = v33;
    }

    uint64_t v34 = *(void *)(a2 + 16);
    if (!v34) {
      uint64_t v34 = *(void *)(qword_1019A1B68 + 16);
    }
    double v21 = sub_100A4E558((uint64_t)v33, v34);
    int v30 = *(_DWORD *)(a2 + 132);
    if ((v30 & 0x10) == 0)
    {
LABEL_31:
      if ((v30 & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_50;
    }

void sub_100A59BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100A59C00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_10186A040;
  uint64_t v2 = (uint64_t)a1 + 104;
  sub_100A59C58(a1);
  sub_10008D0EC(v2);
  sub_10008D0EC((uint64_t)a1 + 48);
  sub_10008D0EC((uint64_t)a1 + 24);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void *sub_100A59C58(void *result)
{
  if ((void *)qword_1019A1B68 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
    uint64_t v4 = v1[9];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    uint64_t result = (void *)v1[12];
    if (result) {
      return (void *)(*(uint64_t (**)(void *))(*result + 8LL))(result);
    }
  }

  return result;
}

void sub_100A59CE0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
}

uint64_t sub_100A59CF4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1019A1B68;
  if (!qword_1019A1B68)
  {
    sub_100A3FD08(0LL, a2, a3, a4);
    return qword_1019A1B68;
  }

  return result;
}

double sub_100A59D20()
{
  uint64_t v0 = (char *)operator new(0x88uLL);
  *(void *)uint64_t v0 = off_10186A040;
  *((void *)v0 + 6) = 0LL;
  *((void *)v0 + 7) = 0LL;
  *((_DWORD *)v0 + 16) = 0;
  *((void *)v0 + 16) = 0LL;
  double result = 0.0;
  *(_OWORD *)(v0 + _Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *((_DWORD *)v0 + 10) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 8_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *((_DWORD *)v0 + 30) = 0;
  return result;
}

uint64_t sub_100A59D70(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(_BYTE *)(result + 132);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(result + 132) & 1) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(void *)(v3 + _Block_object_dispose(va, 8) = 0LL;
          *(void *)(v3 + 16) = 0LL;
          *(void *)(v3 + 24) = 0LL;
        }

        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 132);
      }
    }

    if ((v2 & 2) != 0)
    {
      double result = *(void *)(result + 16);
      if (result)
      {
        double result = sub_100A4E7C8(result);
        int v2 = *(_DWORD *)(v1 + 132);
      }
    }

    if ((v2 & 0x10) != 0)
    {
      double result = *(void *)(v1 + 72);
      if (result)
      {
        double result = sub_100A5742C(result);
        int v2 = *(_DWORD *)(v1 + 132);
      }
    }

    *(void *)(v1 + 80) = 0LL;
    *(void *)(v1 + 8_Block_object_dispose(va, 8) = 0LL;
    if ((v2 & 0x80) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 96);
      if (v4)
      {
        int v5 = *(_DWORD *)(v4 + 52);
        if ((_BYTE)v5)
        {
          *(_DWORD *)(v4 + 40) = 0;
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + _Block_object_dispose(va, 8) = 0u;
        }

        if ((v5 & 0xFF00) != 0) {
          *(_DWORD *)(v4 + 44) = 0;
        }
        *(_DWORD *)(v4 + 52) = 0;
      }
    }
  }

  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v6 = 0LL;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(v1 + 24) + 8 * v6);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 32LL))(v7);
      ++v6;
    }

    while (v6 < *(int *)(v1 + 32));
  }

  *(_DWORD *)(v1 + 32) = 0;
  if (*(int *)(v1 + 56) >= 1)
  {
    uint64_t v8 = 0LL;
    do
    {
      uint64_t v9 = *(void *)(*(void *)(v1 + 48) + 8 * v8);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 32LL))(v9);
      ++v8;
    }

    while (v8 < *(int *)(v1 + 56));
  }

  *(_DWORD *)(v1 + 56) = 0;
  if (*(int *)(v1 + 112) >= 1)
  {
    uint64_t v10 = 0LL;
    do
    {
      uint64_t v11 = *(void *)(*(void *)(v1 + 104) + 8 * v10);
      double result = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 32LL))(v11);
      ++v10;
    }

    while (v10 < *(int *)(v1 + 112));
  }

  *(_DWORD *)(v1 + 112) = 0;
  *(_DWORD *)(v1 + 132) = 0;
  return result;
}

uint64_t sub_100A59EC8( uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104);
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!(_DWORD)TagFallback) {
        return 1LL;
      }
      goto LABEL_7;
    }

    TagFallbacuint64_t k = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + _Block_object_dispose(va, 8) = (_DWORD)TagFallback;
    if (!(_DWORD)TagFallback) {
      return 1LL;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 132) |= 1u;
        uint64_t v11 = *(char **)(a1 + 8);
        if (!v11)
        {
          uint64_t v11 = (char *)operator new(0x28uLL);
          *(void *)uint64_t v11 = off_101869FC8;
          *(_OWORD *)(v11 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v11 + 24) = 0u;
          *(void *)(a1 + _Block_object_dispose(va, 8) = v11;
        }

        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v94)) {
            return 0LL;
          }
        }

        else
        {
          v94[0] = *v12;
          *((void *)this + 1) = v12 + 1;
        }

        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0LL;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v94[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        double v21 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v21 + 1;
        goto LABEL_42;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
LABEL_42:
        *(_DWORD *)(a1 + 132) |= 2u;
        uint64_t v22 = *(void **)(a1 + 16);
        if (!v22)
        {
          uint64_t v22 = operator new(0x30uLL);
          v22[5] = 0LL;
          *uint64_t v22 = off_1018695F0;
          v22[1] = 0LL;
          unsigned int v22[2] = 0LL;
          void v22[3] = 0LL;
          *((_DWORD *)v22 + _Block_object_dispose(va, 8) = 0;
          *(void *)(a1 + 16) = v22;
        }

        uint64_t v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v94)) {
            return 0LL;
          }
        }

        else
        {
          v94[0] = *v23;
          *((void *)this + 1) = v23 + 1;
        }

        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0LL;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v94[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (_BYTE *)*((void *)this + 1);
        do
        {
          *((void *)this + 1) = v30 + 1;
LABEL_56:
          int v31 = *(_DWORD *)(a1 + 36);
          uint64_t v32 = *(int *)(a1 + 32);
          if ((int)v32 >= v31)
          {
            if (v31 == *(_DWORD *)(a1 + 40))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v31 + 1);
              int v31 = *(_DWORD *)(a1 + 36);
            }

            *(_DWORD *)(a1 + 36) = v31 + 1;
            uint64_t v34 = operator new(0xB0uLL);
            *(void *)uint64_t v34 = off_101869848;
            v34[8] = 0u;
            v34[9] = 0u;
            _BYTE v34[10] = 0u;
            *(_OWORD *)((char *)v34 + _Block_object_dispose(va, 8) = 0u;
            *(_OWORD *)((char *)v34 + 24) = 0u;
            *((_DWORD *)v34 + 10) = 0;
            void v34[3] = 0u;
            _DWORD v34[4] = 0u;
            v34[5] = 0u;
            v34[6] = 0u;
            *(_OWORD *)((char *)v34 + 10_Block_object_dispose(va, 8) = 0u;
            uint64_t v35 = *(void *)(a1 + 24);
            uint64_t v36 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v36 + 1;
            *(void *)(v35 + 8 * v36) = v34;
          }

          else
          {
            uint64_t v33 = *(void *)(a1 + 24);
            *(_DWORD *)(a1 + 32) = v32 + 1;
            uint64_t v34 = *(_OWORD **)(v33 + 8 * v32);
          }

          int v37 = (char *)*((void *)this + 1);
          if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v94)) {
              return 0LL;
            }
          }

          else
          {
            v94[0] = *v37;
            *((void *)this + 1) = v37 + 1;
          }

          int v38 = *((_DWORD *)this + 14);
          int v39 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v38 + 1;
          if (v38 >= v39) {
            return 0LL;
          }
          int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v94[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
          int v42 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v42, 1);
          int v43 = v42 - 1;
          if (v43 < 0 == v19) {
            *((_DWORD *)this + 14) = v43;
          }
          int v30 = (_BYTE *)*((void *)this + 1);
          int v44 = *v30;
        }

        while (v44 == 26);
        if (v44 != 34) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v30 + 1;
LABEL_74:
          int v45 = *(_DWORD *)(a1 + 60);
          uint64_t v46 = *(int *)(a1 + 56);
          if ((int)v46 >= v45)
          {
            if (v45 == *(_DWORD *)(a1 + 64))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v45 + 1);
              int v45 = *(_DWORD *)(a1 + 60);
            }

            *(_DWORD *)(a1 + 60) = v45 + 1;
            int v48 = operator new(0x28uLL);
            *int v48 = off_1018698C0;
            v48[1] = 0LL;
            v48[2] = 0LL;
            v48[3] = 0LL;
            *((_DWORD *)v48 + _Block_object_dispose(va, 8) = 0;
            uint64_t v49 = *(void *)(a1 + 48);
            uint64_t v50 = *(int *)(a1 + 56);
            *(_DWORD *)(a1 + 56) = v50 + 1;
            *(void *)(v49 + 8 * v50) = v48;
          }

          else
          {
            uint64_t v47 = *(void *)(a1 + 48);
            *(_DWORD *)(a1 + 56) = v46 + 1;
            int v48 = *(void **)(v47 + 8 * v46);
          }

          int v51 = (char *)*((void *)this + 1);
          if ((unint64_t)v51 >= *((void *)this + 2) || *v51 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v94)) {
              return 0LL;
            }
          }

          else
          {
            v94[0] = *v51;
            *((void *)this + 1) = v51 + 1;
          }

          int v52 = *((_DWORD *)this + 14);
          int v53 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v52 + 1;
          if (v52 >= v53) {
            return 0LL;
          }
          int v54 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v94[0]);
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v54);
          int v56 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v56, 1);
          int v57 = v56 - 1;
          if (v57 < 0 == v19) {
            *((_DWORD *)this + 14) = v57;
          }
          int v30 = (_BYTE *)*((void *)this + 1);
          int v58 = *v30;
        }

        while (v58 == 34);
        if (v58 != 42) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_92:
        *(_DWORD *)(a1 + 132) |= 0x10u;
        unsigned int v59 = *(char **)(a1 + 72);
        if (!v59)
        {
          unsigned int v59 = (char *)operator new(0x38uLL);
          *(void *)unsigned int v59 = off_101869DE8;
          *(_OWORD *)(v59 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v59 + 24) = 0u;
          *(_OWORD *)(v59 + 40) = 0u;
          *(void *)(a1 + 72) = v59;
        }

        unsigned int v60 = (char *)*((void *)this + 1);
        if ((unint64_t)v60 >= *((void *)this + 2) || *v60 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v94)) {
            return 0LL;
          }
        }

        else
        {
          v94[0] = *v60;
          *((void *)this + 1) = v60 + 1;
        }

        int v61 = *((_DWORD *)this + 14);
        int v62 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v61 + 1;
        if (v61 >= v62) {
          return 0LL;
        }
        int v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v94[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
        int v65 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v65, 1);
        int v66 = v65 - 1;
        if (v66 < 0 == v19) {
          *((_DWORD *)this + 14) = v66;
        }
        unsigned int v67 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v67 + 1;
LABEL_106:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v94) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 80) = *(void *)v94;
        *(_DWORD *)(a1 + 132) |= 0x20u;
        int v68 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v68 + 1;
LABEL_110:
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback( this,  (unint64_t *)v94) & 1) == 0) {
          return 0LL;
        }
        *(void *)(a1 + 8_Block_object_dispose(va, 8) = *(void *)v94;
        int v13 = *(_DWORD *)(a1 + 132) | 0x40;
        *(_DWORD *)(a1 + 132) = v13;
        unsigned int v69 = (_BYTE *)*((void *)this + 1);
        *((void *)this + 1) = v69 + 1;
LABEL_114:
        *(_DWORD *)(a1 + 132) = v13 | 0x80;
        unsigned int v70 = *(char **)(a1 + 96);
        if (!v70)
        {
          unsigned int v70 = (char *)operator new(0x38uLL);
          *(void *)unsigned int v70 = off_101869E60;
          *(_OWORD *)(v70 + _Block_object_dispose(va, 8) = 0u;
          *(_OWORD *)(v70 + 24) = 0u;
          *(_OWORD *)(v70 + 40) = 0u;
          *(void *)(a1 + 96) = v70;
        }

        unsigned int v71 = (char *)*((void *)this + 1);
        if ((unint64_t)v71 >= *((void *)this + 2) || *v71 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v94)) {
            return 0LL;
          }
        }

        else
        {
          v94[0] = *v71;
          *((void *)this + 1) = v71 + 1;
        }

        int v72 = *((_DWORD *)this + 14);
        int v73 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v72 + 1;
        if (v72 >= v73) {
          return 0LL;
        }
        int v74 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v94[0]);
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v74);
        int v76 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v76, 1);
        int v77 = v76 - 1;
        if (v77 < 0 == v19) {
          *((_DWORD *)this + 14) = v77;
        }
        int v78 = (_BYTE *)*((void *)this + 1);
        if ((unint64_t)v78 < *((void *)this + 2) && *v78 == 74)
        {
          do
          {
            *((void *)this + 1) = v78 + 1;
LABEL_128:
            int v79 = *(_DWORD *)(a1 + 116);
            uint64_t v80 = *(int *)(a1 + 112);
            if ((int)v80 >= v79)
            {
              if (v79 == *(_DWORD *)(a1 + 120))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v79 + 1);
                int v79 = *(_DWORD *)(a1 + 116);
              }

              *(_DWORD *)(a1 + 116) = v79 + 1;
              uint64_t v82 = (char *)operator new(0x28uLL);
              *(void *)uint64_t v82 = off_101869F50;
              *(_OWORD *)(v82 + _Block_object_dispose(va, 8) = 0u;
              *(_OWORD *)(v82 + 24) = 0u;
              uint64_t v83 = *(void *)(a1 + 104);
              uint64_t v84 = *(int *)(a1 + 112);
              *(_DWORD *)(a1 + 112) = v84 + 1;
              *(void *)(v83 + 8 * v84) = v82;
            }

            else
            {
              uint64_t v81 = *(void *)(a1 + 104);
              *(_DWORD *)(a1 + 112) = v80 + 1;
              uint64_t v82 = *(char **)(v81 + 8 * v80);
            }

            int v85 = (char *)*((void *)this + 1);
            if ((unint64_t)v85 >= *((void *)this + 2) || *v85 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback( this,  v94)) {
                return 0LL;
              }
            }

            else
            {
              v94[0] = *v85;
              *((void *)this + 1) = v85 + 1;
            }

            int v86 = *((_DWORD *)this + 14);
            int v87 = *((_DWORD *)this + 15);
            *((_DWORD *)this + 14) = v86 + 1;
            if (v86 >= v87) {
              return 0LL;
            }
            int v88 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v94[0]);
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v88);
            int v90 = *((_DWORD *)this + 14);
            BOOL v19 = __OFSUB__(v90, 1);
            int v91 = v90 - 1;
            if (v91 < 0 == v19) {
              *((_DWORD *)this + 14) = v91;
            }
            int v78 = (_BYTE *)*((void *)this + 1);
            unint64_t v92 = (_BYTE *)*((void *)this + 2);
          }

          while (v78 < v92 && *v78 == 74);
          if (v78 == v92 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + _Block_object_dispose(va, 8) = 0;
            uint64_t result = 1LL;
            *((_BYTE *)this + 36) = 1;
            return result;
          }
        }

        break;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_56;
        }
        goto LABEL_30;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_74;
        }
        goto LABEL_30;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_92;
        }
        goto LABEL_30;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_106;
        }
        goto LABEL_30;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_110;
        }
        goto LABEL_30;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
        int v13 = *(_DWORD *)(a1 + 132);
        goto LABEL_114;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
        goto LABEL_128;
      default:
        int v10 = TagFallback & 7;
LABEL_30:
        if (v10 == 4) {
          return 1LL;
        }
        continue;
    }
  }

uint64_t sub_100A5A854( uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 132);
  if ((v6 & 1) != 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_1019A1B68 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1,  v7,  a2,  a4);
    int v6 = *(_DWORD *)(v5 + 132);
  }

  if ((v6 & 2) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_1019A1B68 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2,  v8,  a2,  a4);
  }

  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v9 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3,  *(void *)(*(void *)(v5 + 24) + 8 * v9++),  a2,  a4);
    while (v9 < *(int *)(v5 + 32));
  }

  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v10 = 0LL;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4,  *(void *)(*(void *)(v5 + 48) + 8 * v10++),  a2,  a4);
    while (v10 < *(int *)(v5 + 56));
  }

  int v11 = *(_DWORD *)(v5 + 132);
  if ((v11 & 0x10) != 0)
  {
    uint64_t v12 = *(void *)(v5 + 72);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_1019A1B68 + 72);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5,  v12,  a2,  a4);
    int v11 = *(_DWORD *)(v5 + 132);
    if ((v11 & 0x20) == 0)
    {
LABEL_17:
      if ((v11 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_24;
    }
  }

  else if ((v11 & 0x20) == 0)
  {
    goto LABEL_17;
  }

  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6,  (int)a2,  *(double *)(v5 + 80),  a3);
  int v11 = *(_DWORD *)(v5 + 132);
  if ((v11 & 0x40) == 0)
  {
LABEL_18:
    if ((v11 & 0x80) == 0) {
      goto LABEL_28;
    }
    goto LABEL_25;
  }

uint64_t sub_100A5A9F8(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(_BYTE *)(a1 + 132);
  if (!(_BYTE)v3)
  {
    int v5 = 0;
    goto LABEL_40;
  }

  if ((*(_BYTE *)(a1 + 132) & 1) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_1019A1B68 + 8);
    }
    int v7 = *(unsigned __int8 *)(v6 + 36);
    if (*(_BYTE *)(v6 + 36))
    {
      int v8 = (v7 << 31 >> 31) & 9;
      if ((v7 & 2) != 0) {
        v8 += 9;
      }
      if ((v7 & 4) != 0) {
        int v7 = v8 + 9;
      }
      else {
        int v7 = v8;
      }
    }

    *(_DWORD *)(v6 + 32) = v7;
    int v4 = v7 + 2;
    int v3 = *(_DWORD *)(a1 + 132);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }

  int v4 = 0;
  if ((*(_BYTE *)(a1 + 132) & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_1019A1B68 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100A4EBF4(v9, a2);
    int v11 = (int)v10;
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *(_DWORD *)(a1 + 132);
  }

float sub_100A5AC78(uint64_t a1, void *lpsrc)
{
  return sub_100A59750(a1, (uint64_t)lpsrc);
}

uint64_t sub_100A5ACC4()
{
  return 1LL;
}

void *sub_100A5ACCC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "CLP.LogEntry.PrivateData.MeasurementReportCallbackContents");
}

uint64_t sub_100A5ACDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 108);
}

uint64_t sub_100A5ACE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 168);
}

uint64_t sub_100A5ACF0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1002DC708((uint64_t)(a2 + 754), a1 + 3016);
}

void sub_100A5AD3C(_Unwind_Exception *a1)
{
}

_DWORD *sub_100A5AD50(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = sub_1002E0454(a1);
  sub_1002DCA80((uint64_t)v4, a2);
  sub_1002DC4C4((uint64_t)(a1 + 202), a2 + 808);
  sub_1002DC708((uint64_t)(a1 + 754), a2 + 3016);
  return a1;
}

void sub_100A5AD98(_Unwind_Exception *a1)
{
}

_DWORD *sub_100A5ADAC(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = sub_1002E0454(a1);
  sub_1002DCA80((uint64_t)v4, a2);
  sub_1002DC4C4((uint64_t)(a1 + 202), a2 + 808);
  sub_1002DC708((uint64_t)(a1 + 754), a2 + 3016);
  return a1;
}

void sub_100A5ADF4(_Unwind_Exception *a1)
{
}

void sub_100A5AE08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 5020;
  sub_100A5AD50((_DWORD *)a2, a1);
  if (*(_BYTE *)(v4 + 1356) && *(int *)(a1 + 6400) >= 1)
  {
    if (*(_BYTE *)(v4 + 1359))
    {
      unsigned int v5 = *(_DWORD *)(a1 + 6368) - 1;
      double v6 = *(double *)(a1 + 6384) - *(double *)v4;
      BOOL v7 = v6 < 300.0 && *(double *)(a1 + 5952) < *(double *)v4;
      int v8 = sub_100869780(a1 + 4944);
      if (v5 < 2) {
        int v9 = v8;
      }
      else {
        int v9 = 0;
      }
      *(_BYTE *)(a2 + 5960) = 0;
      if (*(_BYTE *)(v4 + 940)) {
        BOOL v10 = 0;
      }
      else {
        BOOL v10 = v7;
      }
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      int v11 = v10 & v9;
      int v12 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = *(unsigned __int8 *)(v4 + 940);
        double v14 = *(double *)v4;
        uint64_t v15 = *(void *)(a1 + 5952);
        *(_DWORD *)std::stringbuf::string_type buf = 67241984;
        int v36 = v11;
        __int16 v37 = 1026;
        int v38 = v13;
        __int16 v39 = 1026;
        BOOL v40 = v7;
        __int16 v41 = 2050;
        double v42 = v14;
        __int16 v43 = 2050;
        uint64_t v44 = v15;
        __int16 v45 = 2050;
        double v46 = v6;
        __int16 v47 = 1026;
        int v48 = v9;
        __int16 v49 = 1026;
        BOOL v50 = v5 < 2;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "WifiTimer, reissue, %{public}d, force, %{public}d, time, %{public}d, %{public}.1f, %{public}.1f, %{public}.1f, place, %{public}d, %{public}d",  buf,  0x3Eu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        int v16 = *(unsigned __int8 *)(v4 + 940);
        double v17 = *(double *)v4;
        uint64_t v18 = *(void *)(a1 + 5952);
        v20[0] = 67241984;
        v20[1] = v11;
        __int16 v21 = 1026;
        int v22 = v16;
        __int16 v23 = 1026;
        BOOL v24 = v7;
        __int16 v25 = 2050;
        double v26 = v17;
        __int16 v27 = 2050;
        uint64_t v28 = v18;
        __int16 v29 = 2050;
        double v30 = v6;
        __int16 v31 = 1026;
        int v32 = v9;
        __int16 v33 = 1026;
        BOOL v34 = v5 < 2;
        BOOL v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiTimer, reissue, %{public}d, force, %{public}d, time, %{public}d, %{public}.1f, %{public}.1f, %{public}.1f, place, %{public}d, %{public}d",  v20,  62);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::U pdateTimer &) const",  "%s\n",  v19);
      }

      *(_BYTE *)(a2 + 810) = v11;
    }

    else
    {
      *(void *)(a2 + 6160) = 0x4018000000000000LL;
    }
  }

void sub_100A5B110(_Unwind_Exception *a1)
{
}

void sub_100A5B128(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  double v6 = (_BYTE *)(a1 + 6172);
  BOOL v7 = (_BYTE *)(a3 + 5960);
  sub_100A5AD50((_DWORD *)a3, a1);
  *(_BYTE *)(a3 + 6379) = *a2 == 0;
  if (*v6)
  {
    *(_OWORD *)(a3 + 6184) = *(_OWORD *)(a1 + 6184);
    *(_OWORD *)(a3 + 616_Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 6168);
    *(_OWORD *)(a3 + 6216) = *(_OWORD *)(a1 + 6216);
    *(_OWORD *)(a3 + 6232) = *(_OWORD *)(a1 + 6232);
    *(_OWORD *)(a3 + 624_Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 6248);
    *(_OWORD *)(a3 + 6200) = *(_OWORD *)(a1 + 6200);
    *(_OWORD *)(a3 + 6257) = *(_OWORD *)(a1 + 6257);
    if (*(double *)(a3 + 6192) <= *(double *)(a3 + 6176))
    {
      *(void *)(a3 + 6192) = *(void *)(a1 + 6384);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      int v8 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        double v9 = *(double *)(a3 + 6192) - *(double *)(a3 + 6176);
        *(_DWORD *)std::stringbuf::string_type buf = 134349056;
        double v15 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "@EmerTick, wifi, %{public}.1f", buf, 0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        double v10 = *(double *)(a3 + 6192) - *(double *)(a3 + 6176);
        int v12 = 134349056;
        double v13 = v10;
        int v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerTick, wifi, %{public}.1f",  &v12,  12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Power &) const",  "%s\n",  v11);
      }
    }
  }

  if (v6[204])
  {
    *BOOL v7 = 0;
    *(void *)(a3 + 6160) = 0x4018000000000000LL;
  }

void sub_100A5B3A0(_Unwind_Exception *a1)
{
}

void sub_100A5B3B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(_BYTE *)(a1 + 6376))
  {
    sub_1000C6980(v11, a2);
    sub_100B83D58(v15, v11);
    sub_1000C6980(&v20, a2);
    LODWORD(v19) = 5;
    double v6 = sub_100446354((int *)&v19);
    sub_100A5B5EC(a3 + 3208, (uint64_t)v15, (uint64_t)v6);
    sub_1002DDAD8((uint64_t)&v19);
    if (v18 && v17 < 0) {
      operator delete(__p);
    }
    if (v14 && v13 < 0) {
      operator delete(v12);
    }
    sub_1000C6980(v15, a2);
    sub_100B83D58(&v19, v15);
    sub_100351804(a3 + 3208, (uint64_t)&v19);
    *(_WORD *)(a3 + 3304) = v23;
    if (v22 && v21 < 0) {
      operator delete(v20);
    }
    if (v18 && v17 < 0) {
      operator delete(__p);
    }
    int v7 = sub_100B83D5C(a3 + 3208);
    int v8 = *(void **)(a3 + 3312);
    if (v7)
    {
      uint64_t v19 = sub_1005B46E8(a3 + 3208);
      double Current = CFAbsoluteTimeGetCurrent();
      sub_100F34A30(v8, (unint64_t *)&v19, Current);
    }

    else
    {
      double v10 = CFAbsoluteTimeGetCurrent();
      sub_100F35340(v8, v10);
    }
  }

void sub_100A5B550( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, void *__p, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38, uint64_t a39, uint64_t a40, char a41)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A5B5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t size = __s1.__r_.__value_.__s.__size_;
  if ((__s1.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    std::string::size_type v6 = __s1.__r_.__value_.__s.__size_;
  }
  else {
    std::string::size_type v6 = __s1.__r_.__value_.__l.__size_;
  }
  std::string::size_type v7 = __p.__r_.__value_.__s.__size_;
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    std::string::size_type v7 = __p.__r_.__value_.__l.__size_;
  }
  if (v6 == v7)
  {
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__s1.__r_.__value_.__s.__size_ & 0x80) != 0)
    {
      if (!memcmp(__s1.__r_.__value_.__l.__data_, p_p, __s1.__r_.__value_.__l.__size_)) {
        goto LABEL_26;
      }
    }

    else
    {
      if (!__s1.__r_.__value_.__s.__size_) {
        goto LABEL_26;
      }
      p_s1 = &__s1;
      while (p_s1->__r_.__value_.__s.__data_[0] == p_p->__r_.__value_.__s.__data_[0])
      {
        p_s1 = (std::string *)((char *)p_s1 + 1);
        p_p = (std::string *)((char *)p_p + 1);
        if (!--size) {
          goto LABEL_26;
        }
      }
    }
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  double v10 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = &__s1;
    if ((__s1.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      int v11 = (std::string *)__s1.__r_.__value_.__r.__words[0];
    }
    int v12 = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      int v12 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136381187;
    __int16 v25 = v11;
    __int16 v26 = 2081;
    __int16 v27 = v12;
    __int16 v28 = 2081;
    uint64_t v29 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "WifiFlow, updating associated AP from %{private}s to %{private}s using event %{private}s",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    char v13 = &__s1;
    if ((__s1.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      char v13 = (std::string *)__s1.__r_.__value_.__r.__words[0];
    }
    char v14 = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      char v14 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int v18 = 136381187;
    uint64_t v19 = v13;
    __int16 v20 = 2081;
    char v21 = v14;
    __int16 v22 = 2081;
    uint64_t v23 = a3;
    double v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiFlow, updating associated AP from %{private}s to %{private}s using event %{private}s",  &v18,  32);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::logAssociatedApUpdate(const Types::AssociatedAp &, co nst Types::AssociatedAp &, const char *)",  "%s\n",  v15);
  }

void sub_100A5B8C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A5B900(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(_BYTE *)(a1 + 6376))
  {
    sub_1000C6980(v11, a2);
    sub_100B83D58(v15, v11);
    sub_1000C6980(&v20, a2);
    LODWORD(v19) = 6;
    std::string::size_type v6 = sub_100446354((int *)&v19);
    sub_100A5B5EC(a3 + 3208, (uint64_t)v15, (uint64_t)v6);
    sub_1002DDAD8((uint64_t)&v19);
    if (v18 && v17 < 0) {
      operator delete(__p);
    }
    if (v14 && v13 < 0) {
      operator delete(v12);
    }
    sub_1000C6980(v15, a2);
    sub_100B83D58(&v19, v15);
    sub_100351804(a3 + 3208, (uint64_t)&v19);
    *(_WORD *)(a3 + 3304) = v23;
    if (v22 && v21 < 0) {
      operator delete(v20);
    }
    if (v18 && v17 < 0) {
      operator delete(__p);
    }
    int v7 = sub_100B83D5C(a3 + 3208);
    int v8 = *(void **)(a3 + 3312);
    if (v7)
    {
      uint64_t v19 = sub_1005B46E8(a3 + 3208);
      double Current = CFAbsoluteTimeGetCurrent();
      sub_100F34A30(v8, (unint64_t *)&v19, Current);
    }

    else
    {
      double v10 = CFAbsoluteTimeGetCurrent();
      sub_100F35340(v8, v10);
    }
  }

void sub_100A5BA98( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, void *__p, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38, uint64_t a39, uint64_t a40, char a41)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100A5BB34(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  unsigned int v5 = a3;
  sub_100A5AD50(a3, a1);
  int v6 = *(unsigned __int8 *)(a2 + 48);
  if (v6 != 5) {
    *((_BYTE *)v5 + 6152) = 1;
  }
  if (*(_BYTE *)(a1 + 6376))
  {
    sub_1000C6980(buf, a2 + 56);
    if (v143)
    {
      if ((v133[7] & 0x80000000) != 0) {
        operator delete(*(void **)&buf[8]);
      }
      sub_1000C6980(v113, a2 + 56);
      if (!v118) {
        sub_100036CD8();
      }
      __int128 v120 = *(_OWORD *)&v113[8];
      __int128 v122 = v114;
      uint64_t v119 = *(void *)v113;
      uint64_t v121 = *(void *)&v113[24];
      memset(&v113[8], 0, 24);
      __int128 v123 = v115;
      __int128 v124 = v116;
      uint64_t v125 = v117;
      sub_100B83B40(v126, &v119);
      *(_DWORD *)std::stringbuf::string_type buf = sub_100A694C8((uint64_t)&buf[8], a2);
      int v7 = sub_100446354((int *)buf);
      sub_100A5B5EC((uint64_t)(v5 + 802), (uint64_t)v126, (uint64_t)v7);
      sub_1002DDAD8((uint64_t)buf);
      if (v130 && (v127[7] & 0x80000000) != 0) {
        operator delete(*(void **)&v126[8]);
      }
      if (SHIBYTE(v121) < 0) {
        operator delete((void *)v120);
      }
      if (v118 && (v113[31] & 0x80000000) != 0) {
        operator delete(*(void **)&v113[8]);
      }
      sub_1000C6980(v126, a2 + 56);
      if (!v130) {
        sub_100036CD8();
      }
      uint64_t v106 = *(void *)v126;
      *(_OWORD *)__int128 v107 = *(_OWORD *)&v126[8];
      uint64_t v108 = *(void *)v127;
      *(void *)&v126[8] = 0LL;
      *(void *)&v126[16] = 0LL;
      *(void *)__int128 v127 = 0LL;
      __int128 v109 = *(_OWORD *)&v127[8];
      __int128 v110 = *(_OWORD *)&v127[24];
      __int128 v111 = v128;
      uint64_t v112 = v129;
      sub_100B83B40(buf, &v106);
      sub_100351804((uint64_t)(v5 + 802), (uint64_t)buf);
      *((_WORD *)v5 + 1652) = v144;
      if (v143 && (v133[7] & 0x80000000) != 0) {
        operator delete(*(void **)&buf[8]);
      }
      if (SHIBYTE(v108) < 0) {
        operator delete(v107[0]);
      }
      if (v130 && (v127[7] & 0x80000000) != 0) {
        operator delete(*(void **)&v126[8]);
      }
      int v8 = sub_100B83D5C((uint64_t)(v5 + 802));
      double v9 = (void *)*((void *)v5 + 414);
      if (v8)
      {
        *(void *)std::stringbuf::string_type buf = sub_1005B46E8((uint64_t)(v5 + 802));
        double Current = CFAbsoluteTimeGetCurrent();
        sub_100F34A30(v9, (unint64_t *)buf, Current);
      }

      else
      {
        double v13 = CFAbsoluteTimeGetCurrent();
        sub_100F35340(v9, v13);
      }
    }

    int v14 = *(_DWORD *)(a1 + 6168);
    int v15 = *(_DWORD *)(a1 + 6172);
    double v16 = *(double *)(a1 + 6176);
    __int128 v17 = *(_OWORD *)(a1 + 6184);
    uint64_t v105 = *(void *)(a1 + 6200);
    double v18 = *(double *)(a1 + 6208);
    __int128 v103 = *(_OWORD *)(a1 + 6216);
    __int128 v104 = v17;
    double v19 = *(double *)(a1 + 6232);
    __int128 v20 = *(_OWORD *)(a1 + 6256);
    *(_OWORD *)char v113 = *(_OWORD *)(a1 + 6240);
    *(_OWORD *)&v113[16] = v20;
    char v21 = (_DWORD *)(a1 + 5968);
    *(void *)&__int128 v114 = *(void *)(a1 + 6272);
    uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (sub_100495E64((_DWORD *)(a1 + 5968)))
    {
      if (v6 == 12)
      {
        if ((v14 - 3) > 1)
        {
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10186A5E8);
          }
          __int16 v39 = (os_log_s *)qword_101934868;
          if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 67240192;
            *(_DWORD *)&uint8_t buf[4] = v14;
            _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "@EmerWarn, unexpected state, onWifiNotification, %{public}d, #CloneMe",  buf,  8u);
          }

          if (sub_1002921D0(115, 2))
          {
            int v100 = v5;
            bzero(buf, 0x65CuLL);
            if (qword_101934860 == -1) {
              goto LABEL_139;
            }
            goto LABEL_166;
          }
        }

        else
        {
          if (v14 == 4) {
            int v27 = 6;
          }
          else {
            int v27 = 5;
          }
          if (v19 < v16)
          {
            double v19 = *(double *)(a1 + 6384);
            if (qword_101934860 != -1) {
              dispatch_once(&qword_101934860, &stru_10186A5E8);
            }
            __int16 v28 = (os_log_s *)qword_101934868;
            if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 134349056;
              *(double *)&uint8_t buf[4] = v19 - v16;
              _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "@EmerTick, scanreply5ghz, %{public}.1f",  buf,  0xCu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934860 != -1) {
                dispatch_once(&qword_101934860, &stru_10186A5E8);
              }
              *(_DWORD *)__int128 v126 = 134349056;
              *(double *)&v126[4] = v19 - v16;
              int v97 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerTick, scanreply5ghz, %{public}.1f",  v126,  12);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wif i::Scan &) const",  "%s\n",  v97);
              if (v97 != buf) {
                free(v97);
              }
              uint64_t p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
            }
          }

          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10186A5E8);
          }
          uint64_t v29 = (os_log_s *)p_vtable[269];
          if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
          {
            double v30 = sub_10099EBD8(0xCu);
            __int16 v31 = "ScanReply5GHzWithPendingAls";
            if (v14 == 4) {
              __int16 v31 = "ScanReply5GHzWithAlsReply";
            }
            uint64_t v32 = *(void *)(a2 + 24);
            *(_DWORD *)std::stringbuf::string_type buf = 136446978;
            *(void *)&uint8_t buf[4] = v31;
            *(_WORD *)&_BYTE buf[12] = 2082;
            *(void *)&buf[14] = v30;
            __int16 v132 = 2050;
            *(void *)__int128 v133 = v32;
            *(_WORD *)&v133[8] = 2050;
            *(double *)__int128 v134 = v19 - v16;
            _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, %{public}s, %{public}s, aps, %{public}lu, tte, %{public}.1f",  buf,  0x2Au);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934860 != -1) {
              dispatch_once(&qword_101934860, &stru_10186A5E8);
            }
            int v91 = p_vtable[269];
            unint64_t v92 = sub_10099EBD8(0xCu);
            uint64_t v93 = "ScanReply5GHzWithPendingAls";
            if (v14 == 4) {
              uint64_t v93 = "ScanReply5GHzWithAlsReply";
            }
            uint64_t v94 = *(void *)(a2 + 24);
            *(_DWORD *)__int128 v126 = 136446978;
            *(void *)&v126[4] = v93;
            *(_WORD *)&v126[12] = 2082;
            *(void *)&v126[14] = v92;
            *(_WORD *)&v126[22] = 2050;
            *(void *)__int128 v127 = v94;
            *(_WORD *)&v127[8] = 2050;
            *(double *)&v127[10] = v19 - v16;
            LODWORD(v9_Block_object_dispose(va, 8) = 42;
            int v95 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v91,  0LL,  "@EmerFlow, %{public}s, %{public}s, aps, %{public}lu, tte, %{public}.1f",  v126,  v98);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  v95);
            if (v95 != buf) {
              free(v95);
            }
            int v14 = v27;
          }

          else
          {
            int v14 = v27;
          }
        }
      }

      else if (v6 == 10)
      {
        if (v14 == 1)
        {
          if (v18 < v16)
          {
            double v18 = *(double *)(a1 + 6384);
            if (qword_101934860 != -1) {
              dispatch_once(&qword_101934860, &stru_10186A5E8);
            }
            __int16 v23 = (os_log_s *)qword_101934868;
            if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 134349056;
              *(double *)&uint8_t buf[4] = v18 - v16;
              _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "@EmerTick, scanreply, %{public}.1f",  buf,  0xCu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934860 != -1) {
                dispatch_once(&qword_101934860, &stru_10186A5E8);
              }
              *(_DWORD *)__int128 v126 = 134349056;
              *(double *)&v126[4] = v18 - v16;
              int v96 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerTick, scanreply, %{public}.1f",  v126,  12);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wif i::Scan &) const",  "%s\n",  v96);
              if (v96 != buf) {
                free(v96);
              }
              uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
            }
          }

          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10186A5E8);
          }
          BOOL v24 = (os_log_s *)qword_101934868;
          if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v25 = sub_10099EBD8(0xAu);
            uint64_t v26 = *(void *)(a2 + 24);
            *(_DWORD *)std::stringbuf::string_type buf = 136446722;
            *(void *)&uint8_t buf[4] = v25;
            *(_WORD *)&_BYTE buf[12] = 2050;
            *(void *)&buf[14] = v26;
            __int16 v132 = 2050;
            *(double *)__int128 v133 = v18 - v16;
            _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, ScanReply, %{public}s, aps, %{public}lu, tte, %{public}.1f",  buf,  0x20u);
          }

          if (!sub_1002921D0(115, 2))
          {
            int v14 = 2;
            goto LABEL_92;
          }

          int v100 = v5;
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10186A5E8);
          }
          uint64_t v87 = qword_101934868;
          int v88 = sub_10099EBD8(0xAu);
          uint64_t v89 = *(void *)(a2 + 24);
          *(_DWORD *)__int128 v126 = 136446722;
          *(void *)&v126[4] = v88;
          *(_WORD *)&v126[12] = 2050;
          *(void *)&v126[14] = v89;
          *(_WORD *)&v126[22] = 2050;
          *(double *)__int128 v127 = v18 - v16;
          LODWORD(v9_Block_object_dispose(va, 8) = 32;
          int v90 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v87,  0LL,  "@EmerFlow, ScanReply, %{public}s, aps, %{public}lu, tte, %{public}.1f",  v126,  v98);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  v90);
          if (v90 != buf) {
            free(v90);
          }
          int v14 = 2;
          goto LABEL_146;
        }

        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        int v38 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 67240192;
          *(_DWORD *)&uint8_t buf[4] = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "@EmerWarn, unexpected state, onWifiNotification, %{public}d, #CloneMe",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          int v100 = v5;
          bzero(buf, 0x65CuLL);
          if (qword_101934860 == -1)
          {
LABEL_139:
            *(_DWORD *)__int128 v126 = 67240192;
            *(_DWORD *)&v126[4] = v14;
            int v86 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerWarn, unexpected state, onWifiNotification, %{public}d, #CloneMe",  v126,  8);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  v86);
            if (v86 != buf) {
              free(v86);
            }
LABEL_146:
            unsigned int v5 = v100;
            uint64_t p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
            goto LABEL_92;
          }

void sub_100A5D020( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

double sub_100A5D178(uint64_t a1, int a2, int a3)
{
  if (*(_BYTE *)(a1 + 6172))
  {
    uint64_t v4 = "Emer";
LABEL_3:
    uint64_t v5 = 6LL;
    goto LABEL_17;
  }

  if (*(_BYTE *)(a1 + 6421))
  {
    int v6 = "Motion";
    uint64_t v7 = 6LL;
    uint64_t v8 = 60LL;
    if (a3) {
      uint64_t v8 = 15LL;
    }
    uint64_t v9 = 300LL;
    if (a3) {
      uint64_t v9 = 15LL;
    }
    if (a2 == 1)
    {
      uint64_t v7 = v9;
      int v6 = "Frozen";
    }

    if (a2 == 2) {
      uint64_t v5 = v8;
    }
    else {
      uint64_t v5 = v7;
    }
    if (a2 == 2) {
      uint64_t v4 = "Static";
    }
    else {
      uint64_t v4 = v6;
    }
  }

  else
  {
    uint64_t v12 = a1 + 3208;
    if (!sub_100B83D5C(a1 + 3208))
    {
      uint64_t v4 = "Unassociated";
      goto LABEL_3;
    }

    if (sub_100B83D64(v12) && (sub_100B83D7C(v12) & 1) != 0)
    {
      uint64_t v4 = "InvalidAssoc";
      goto LABEL_3;
    }

    uint64_t v4 = "Assoc";
    uint64_t v5 = 300LL;
  }

void sub_100A5D428(void **a1, double a2)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  int v2 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134349312;
    *(void *)&uint8_t buf[4] = 0x2E8BA2E8BA2E8BA3LL * ((v5 - v4) >> 3);
    __int16 v11 = 2050;
    uint64_t v12 = 30LL;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "remove old APs from scan history, count, %{public}ld, max_secs, %{public}lld",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v6 = 134349312;
    uint64_t v7 = 0x2E8BA2E8BA2E8BA3LL * ((v5 - v4) >> 3);
    __int16 v8 = 2050;
    uint64_t v9 = 30LL;
    int v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "remove old APs from scan history, count, %{public}ld, max_secs, %{public}lld",  &v6,  22);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::removeOldApsFromWifiScanHistory(c l::chrono::CFAbsoluteTimeClock::time_point, std::shared_ptr<Types::WifiScanHistory>)",  "%s\n",  v3);
    if (v3 != buf) {
      free(v3);
    }
  }

  *(void *)std::stringbuf::string_type buf = &v4;
  sub_100023498((void ***)buf);
}

void sub_100A5D644( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void **a19)
{
  a19 = (void **)&a12;
  sub_100023498(&a19);
  _Unwind_Resume(a1);
}

void sub_100A5D66C(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 16);
  if (v4)
  {
    do
    {
      sub_100A68B40(a1, v4 + 2);
      uint64_t v4 = (void *)*v4;
    }

    while (v4);
    for (int i = *(void **)(a2 + 16); i; int i = (void *)*i)
      sub_1002DDF18((uint64_t)a1, i + 2, (uint64_t)(i + 2));
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  int v6 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = a1[3];
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)std::stringbuf::string_type buf = 134349312;
    uint64_t v17 = v7;
    __int16 v18 = 2050;
    uint64_t v19 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "@WifiAps, history, %{public}lu, add, %{public}lu",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    uint64_t v9 = a1[3];
    uint64_t v10 = *(void *)(a2 + 24);
    int v12 = 134349312;
    uint64_t v13 = v9;
    __int16 v14 = 2050;
    uint64_t v15 = v10;
    __int16 v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiAps, history, %{public}lu, add, %{public}lu",  &v12,  22);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CL::Wifi1::Types::WifiScanHistory::addScan(const WifiScan &)",  "%s\n",  v11);
  }

void sub_100A5D87C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  uint64_t v4 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "WifiFlow, scanreply, warn, error", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    v11[0] = 0;
    uint64_t v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiFlow, scanreply, warn, error",  v11,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::ScanError &) const",  "%s\n",  v10);
  }

  *(_BYTE *)(a2 + 6152) = 0;
  if (*(_BYTE *)(a1 + 6376))
  {
    ++*(_DWORD *)(*(void *)(a2 + 6424) + 208LL);
    uint64_t v5 = (void *)(a1 + 5968);
    if (sub_100495E98((_DWORD *)(a1 + 5968)))
    {
      *(_BYTE *)(a2 + 5960) = 1;
      *(void *)std::stringbuf::string_type buf = *v5;
      char v13 = *(_BYTE *)(a1 + 5976);
      else {
        std::string v14 = *(std::string *)(a1 + 5984);
      }
      __int128 v16 = *(_OWORD *)(a1 + 6024);
      __int128 v17 = *(_OWORD *)(a1 + 6040);
      v18[0] = *(_OWORD *)(a1 + 6056);
      *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)(a1 + 6068);
      __int128 v15 = *(_OWORD *)(a1 + 6008);
      else {
        __p[0] = *(std::string *)(a1 + 6088);
      }
      if (sub_100495E64(buf)) {
        *(_DWORD *)(a2 + 6112) = sub_100496E10((unsigned int *)buf);
      }
      *(void *)(a2 + 816) = *v5;
      *(_BYTE *)(a2 + 824) = *(_BYTE *)(a1 + 5976);
      std::string::operator=((std::string *)(a2 + 832), (const std::string *)(a1 + 5984));
      __int128 v6 = *(_OWORD *)(a1 + 6056);
      *(_OWORD *)(a2 + 88_Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 6040);
      *(_OWORD *)(a2 + 904) = v6;
      *(_OWORD *)(a2 + 916) = *(_OWORD *)(a1 + 6068);
      __int128 v7 = *(_OWORD *)(a1 + 6024);
      *(_OWORD *)(a2 + 856) = *(_OWORD *)(a1 + 6008);
      *(_OWORD *)(a2 + 872) = v7;
      std::string::operator=((std::string *)(a2 + 936), (const std::string *)(a1 + 6088));
      sub_100495EC8((int *)buf);
      *(_BYTE *)(a2 + 5976) = v13;
      *(void *)(a2 + 596_Block_object_dispose(va, 8) = *(void *)buf;
      std::string::operator=((std::string *)(a2 + 5984), &v14);
      *(_OWORD *)(a2 + 606_Block_object_dispose(va, 8) = *(_OWORD *)((char *)v18 + 12);
      __int128 v8 = v15;
      *(_OWORD *)(a2 + 6024) = v16;
      __int128 v9 = v18[0];
      *(_OWORD *)(a2 + 6040) = v17;
      *(_OWORD *)(a2 + 6056) = v9;
      *(_OWORD *)(a2 + 600_Block_object_dispose(va, 8) = v8;
      std::string::operator=((std::string *)(a2 + 6088), __p);
    }
  }

void sub_100A5DC38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

void sub_100A5DC80(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  __int128 v6 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "WifiFlow, scanreply, warn, busy", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    v13[0] = 0;
    int v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiFlow, scanreply, warn, busy",  v13,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::ScanBusy &) const",  "%s\n",  v12);
  }

  if (*(_BYTE *)(a1 + 6376))
  {
    ++*(_DWORD *)(*(void *)(a3 + 6424) + 212LL);
    *(void *)(a3 + 816) = *(void *)(a1 + 5968);
    *(_BYTE *)(a3 + 824) = *(_BYTE *)(a1 + 5976);
    std::string::operator=((std::string *)(a3 + 832), (const std::string *)(a1 + 5984));
    __int128 v7 = *(_OWORD *)(a1 + 6024);
    __int128 v8 = *(_OWORD *)(a1 + 6056);
    *(_OWORD *)(a3 + 88_Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 6040);
    *(_OWORD *)(a3 + 904) = v8;
    *(_OWORD *)(a3 + 916) = *(_OWORD *)(a1 + 6068);
    *(_OWORD *)(a3 + 856) = *(_OWORD *)(a1 + 6008);
    *(_OWORD *)(a3 + 872) = v7;
    std::string::operator=((std::string *)(a3 + 936), (const std::string *)(a1 + 6088));
    __int128 v9 = (unsigned int *)(a1 + 5968);
    *(_BYTE *)(a3 + 5960) = 1;
    if (sub_100495E98(v9))
    {
      BOOL v10 = sub_100495E64(v9);
      if (*a2 == 10 && v10)
      {
        *(_DWORD *)(a3 + 6112) = sub_100496E10(v9);
        sub_100495EC8((int *)(a3 + 5968));
      }
    }
  }

void sub_100A5DEFC(_Unwind_Exception *a1)
{
}

void sub_100A5DF18(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(_BYTE *)(a1 + 6376))
  {
    *(_BYTE *)(a3 + 1096) = *(void *)(a1 + 6328) == 0LL;
    uint64_t v61 = 0LL;
    unint64_t v62 = 0LL;
    unint64_t v63 = 0LL;
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    if (*a2 != v7)
    {
      unint64_t v8 = 0LL;
      do
      {
        if (v8 >= v63)
        {
          unint64_t v8 = sub_100023888(&v61, v6);
        }

        else
        {
          sub_100023800((uint64_t)&v61, v6);
          v8 += 88LL;
        }

        unint64_t v62 = v8;
        v6 += 88LL;
      }

      while (v6 != v7);
      if (v61 != v8)
      {
        uint64_t v10 = *a2;
        uint64_t v9 = (uint64_t)(a2 + 4);
        double v11 = *(double *)(v10 + 56);
        sub_1000C6980(buf, v9);
        if (!v67) {
          goto LABEL_20;
        }
        sub_1000C6980(v68, v9);
        if (!v72) {
          sub_100036CD8();
        }
        int v12 = v71;
        if (SHIBYTE(v70) < 0) {
          operator delete(*(void **)&v68[8]);
        }
        if (v67 && SHIBYTE(v66) < 0) {
          operator delete(*(void **)&buf[8]);
        }
        if (v12)
        {
          char v13 = *(void **)(a3 + 3312);
          sub_1000C6980(buf, v9);
          *(void *)uint64_t v68 = *(void *)buf;
          sub_100F34A30(v13, (unint64_t *)v68, v11);
          if (v67 && SHIBYTE(v66) < 0) {
            operator delete(*(void **)&buf[8]);
          }
        }

        else
        {
LABEL_20:
          sub_100F35340(*(void **)(a3 + 3312), v11);
        }

        uint64_t v14 = v61;
        unint64_t v15 = v62;
        double v16 = *(double *)(v61 + 56);
        unint64_t v58 = 0LL;
        unint64_t v59 = 0LL;
        unint64_t v60 = 0LL;
        unsigned int v55 = 0LL;
        unint64_t v56 = 0LL;
        uint64_t v57 = 0LL;
        __int128 v17 = &OBJC_INSTANCE_METHODS_TRANSITPbTransitMacTile;
        if (v61 != v62)
        {
          unint64_t v18 = 0LL;
          while (1)
          {
            if (vabdd_f64(v16, *(double *)(v14 + 56)) <= 4.0)
            {
              if (v18 >= v60) {
                goto LABEL_43;
              }
              sub_100023800((uint64_t)&v58, v14);
              v18 += 88LL;
            }

            else
            {
              uint64_t v19 = v58;
              sub_100680F80((uint64_t *)&v55, (uint64_t)&v58);
              if (qword_101934860 != -1) {
                dispatch_once(&qword_101934860, &stru_10186A5E8);
              }
              uint64_t v20 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(v18 - v19) >> 3);
              __int16 v21 = (os_log_s *)qword_101934868;
              if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)std::stringbuf::string_type buf = 134349568;
                *(void *)&uint8_t buf[4] = 0xAAAAAAAAAAAAAAABLL * (v56 - v55);
                *(_WORD *)&_BYTE buf[12] = 2050;
                *(void *)&buf[14] = v20;
                __int16 v65 = 2050;
                double v66 = v16;
                _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "@WsbGroup, add, %{public}lu, aps, %{public}lu, time, %{public}.1f",  buf,  0x20u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934860 != -1) {
                  dispatch_once(&qword_101934860, &stru_10186A5E8);
                }
                *(_DWORD *)uint64_t v68 = 134349568;
                *(void *)&v68[4] = 0xAAAAAAAAAAAAAAABLL * (v56 - v55);
                *(_WORD *)&_BYTE v68[12] = 2050;
                *(void *)&v68[14] = v20;
                __int16 v69 = 2050;
                double v70 = v16;
                LODWORD(v4_Block_object_dispose(va, 8) = 32;
                __int16 v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbGroup, add, %{public}lu, aps, %{public}lu, time, %{public}.1f",  v68,  v48);
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::W ifi::Wsb &) const",  "%s\n",  v25);
                if (v25 != buf) {
                  free(v25);
                }
              }

              if (qword_101934860 != -1) {
                dispatch_once(&qword_101934860, &stru_10186A5E8);
              }
              int v22 = (os_log_s *)qword_101934868;
              if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
              {
                *(_DWORD *)std::stringbuf::string_type buf = 134349056;
                *(void *)&uint8_t buf[4] = v20;
                _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "WsbMetric, scanaps, %{public}lu",  buf,  0xCu);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934860 != -1) {
                  dispatch_once(&qword_101934860, &stru_10186A5E8);
                }
                *(_DWORD *)uint64_t v68 = 134349056;
                *(void *)&v68[4] = v20;
                LODWORD(v4_Block_object_dispose(va, 8) = 12;
                uint64_t v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WsbMetric, scanaps, %{public}lu",  v68,  v48);
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::W ifi::Wsb &) const",  "%s\n",  v26);
                if (v26 != buf) {
                  free(v26);
                }
              }

              v54[0] = _NSConcreteStackBlock;
              v54[1] = 3221225472LL;
              v54[2] = sub_100A5ED68;
              v54[3] = &unk_101820718;
              v54[4] = v20;
              AnalyticsSendEventLazy(@"com.apple.clx.wsb.scanaps", v54);
              double v16 = *(double *)(v14 + 56);
              unint64_t v23 = v58;
              for (unint64_t i = v59; i != v23; i -= 88LL)
              {
              }

              unint64_t v59 = v23;
              if (v23 >= v60)
              {
LABEL_43:
                unint64_t v18 = sub_100023888((uint64_t *)&v58, v14);
                goto LABEL_44;
              }

              sub_100023800((uint64_t)&v58, v14);
              unint64_t v18 = v23 + 88;
            }

void sub_100A5ECA8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36, uint64_t a37, uint64_t a38, char a39, uint64_t a40, uint64_t a41, char a42, uint64_t a43, uint64_t a44, char *a45, void *__p, uint64_t a47, int a48, __int16 a49, char a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  a45 = &a36;
  sub_1002E067C((void ***)&a45);
  a45 = &a39;
  sub_100023498((void ***)&a45);
  a45 = &a42;
  sub_100023498((void ***)&a45);
  sub_1002D9D34(v59);
  _Unwind_Resume(a1);
}

NSDictionary *sub_100A5ED68(uint64_t a1)
{
  int v2 = @"aps";
  int v3 = +[NSNumber numberWithUnsignedLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLong:", *(void *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v3,  &v2,  1LL);
}

NSDictionary *sub_100A5EDE8(uint64_t a1)
{
  int v2 = @"aps";
  int v3 = +[NSNumber numberWithUnsignedLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLong:", *(void *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v3,  &v2,  1LL);
}

NSDictionary *sub_100A5EE68(uint64_t a1)
{
  v2[1] = @"numInGroup";
  v3[0] = @"discard";
  v2[0] = @"groupResult";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

NSDictionary *sub_100A5EEFC(uint64_t a1)
{
  v2[1] = @"numInGroup";
  v3[0] = @"discard:privacy";
  v2[0] = @"groupResult";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

void sub_100A5EF90(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  int v6 = *a2;
  *(_DWORD *)(a3 + 636_Block_object_dispose(va, 8) = *a2;
  int v7 = sub_100869780(a1 + 4944);
  *(double *)(a3 + 6160) = sub_100A5D178(a1, v6, v7);
}

void sub_100A5F014(_Unwind_Exception *a1)
{
}

void sub_100A5F028(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  int v6 = *(uint64_t **)(a1 + 6280);
  int v7 = *(uint64_t **)(a1 + 6288);
  if (v6 == v7)
  {
    uint64_t v12 = *(void *)(a1 + 6280);
  }

  else
  {
    uint64_t v27 = a2;
    do
    {
      __int128 v39 = 0uLL;
      uint64_t v40 = 0LL;
      sub_1002DE3C8(&v39, *v6, v6[1], 0x2E8BA2E8BA2E8BA3LL * ((v6[1] - *v6) >> 3));
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      unint64_t v8 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v9 = *(void *)(v39 + 56);
        *(_DWORD *)std::stringbuf::string_type buf = 134349312;
        *(void *)&uint8_t buf[4] = v9;
        __int16 v33 = 2050;
        uint64_t v34 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)&v39 + 1) - v39) >> 3);
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "@WsbDiscard, privacy, %{public}.1f, aps, %{public}ld",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        uint64_t v10 = *(void *)(v39 + 56);
        int v35 = 134349312;
        uint64_t v36 = v10;
        __int16 v37 = 2050;
        uint64_t v38 = 0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*((void *)&v39 + 1) - v39) >> 3);
        LODWORD(v26) = 22;
        double v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbDiscard, privacy, %{public}.1f, aps, %{public}ld",  &v35,  v26);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::Privacy &) const",  "%s\n",  v11);
        if (v11 != buf) {
          free(v11);
        }
      }

      *(void *)std::stringbuf::string_type buf = &v39;
      sub_100023498((void ***)buf);
      v6 += 3;
    }

    while (v6 != v7);
    uint64_t v12 = *(void *)(a1 + 6288);
    int v6 = *(uint64_t **)(a1 + 6280);
    a2 = v27;
  }

  int v13 = -1431655765 * ((unint64_t)(v12 - (void)v6) >> 3);
  if (v13 > 0)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    uint64_t v14 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "WsbMetric, groupresult, privacy, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      LODWORD(v39) = 67240192;
      DWORD1(v39) = v13;
      LODWORD(v26) = 8;
      __int16 v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WsbMetric, groupresult, privacy, %{public}d",  &v39,  v26);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::Privacy &) const",  "%s\n",  v21);
      if (v21 != buf) {
        free(v21);
      }
    }

    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472LL;
    v30[2] = sub_100A5F884;
    void v30[3] = &unk_1018333B8;
    int v31 = v13;
    AnalyticsSendEventLazy(@"com.apple.clx.wsb.groupresult", v30);
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472LL;
    v28[2] = sub_100A5F918;
    void v28[3] = &unk_1018333B8;
    int v29 = v13;
    AnalyticsSendEventLazy(@"com.apple.clx.wsb.groupresult", v28);
  }

  sub_100A5F9AC(a1 + 3016, (uint64_t)buf);
  sub_100442CA8(a3 + 3016, (uint64_t)buf);
  sub_1002E1244((uint64_t)buf);
  int v15 = *a2;
  if (*a2 != 2)
  {
    *(_BYTE *)(a3 + 6376) = v15 == 1;
    if (v15 == 1)
    {
      *(_OWORD *)(a3 + 616_Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 6168);
      *(_OWORD *)(a3 + 6216) = *(_OWORD *)(a1 + 6216);
      *(_OWORD *)(a3 + 6232) = *(_OWORD *)(a1 + 6232);
      *(_OWORD *)(a3 + 624_Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 6248);
      *(_OWORD *)(a3 + 6184) = *(_OWORD *)(a1 + 6184);
      *(_OWORD *)(a3 + 6200) = *(_OWORD *)(a1 + 6200);
      *(_OWORD *)(a3 + 6257) = *(_OWORD *)(a1 + 6257);
      *(_DWORD *)(a3 + 616_Block_object_dispose(va, 8) = 0;
      sub_1000C6A74(a3 + 3208, a1 + 3208);
      *(_WORD *)(a3 + 3304) = *(_WORD *)(a1 + 3304);
      if (*(_BYTE *)(a1 + 6172))
      {
        if (*(double *)(a3 + 6184) <= *(double *)(a3 + 6176))
        {
          *(void *)(a3 + 6184) = *(void *)(a1 + 6384);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10186A5E8);
          }
          double v16 = (os_log_s *)qword_101934868;
          if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
          {
            double v17 = *(double *)(a3 + 6184) - *(double *)(a3 + 6176);
            *(_DWORD *)std::stringbuf::string_type buf = 134349056;
            *(double *)&uint8_t buf[4] = v17;
            _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "@EmerTick, toggle, %{public}.1f",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934860 != -1) {
              dispatch_once(&qword_101934860, &stru_10186A5E8);
            }
            double v24 = *(double *)(a3 + 6184) - *(double *)(a3 + 6176);
            LODWORD(v39) = 134349056;
            *(double *)((char *)&v39 + 4) = v24;
            LODWORD(v26) = 12;
            __int16 v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerTick, toggle, %{public}.1f",  &v39,  v26);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Syste m::Privacy &) const",  "%s\n",  v25);
            if (v25 != buf) {
              free(v25);
            }
          }
        }

        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        unint64_t v18 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
        {
          double v19 = *(double *)(a3 + 6184) - *(double *)(a3 + 6176);
          *(_DWORD *)std::stringbuf::string_type buf = 134349056;
          *(double *)&uint8_t buf[4] = v19;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, ToggleOn, %{public}.1f",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10186A5E8);
          }
          double v22 = *(double *)(a3 + 6184) - *(double *)(a3 + 6176);
          LODWORD(v39) = 134349056;
          *(double *)((char *)&v39 + 4) = v22;
          LODWORD(v26) = 12;
          unint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, ToggleOn, %{public}.1f",  &v39,  v26);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System: :Privacy &) const",  "%s\n",  v23);
          if (v23 != buf) {
            free(v23);
          }
        }
      }
    }
  }

  uint64_t v20 = *(void *)(a1 + 6384);
  *(void *)(a3 + 3404) = v20;
  *(void *)(a3 + 6144) = v20;
}

void sub_100A5F83C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
}

NSDictionary *sub_100A5F884(uint64_t a1)
{
  v2[1] = @"numInGroup";
  v3[0] = @"discard";
  v2[0] = @"groupResult";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

NSDictionary *sub_100A5F918(uint64_t a1)
{
  v2[1] = @"numInGroup";
  v3[0] = @"discard:privacy";
  v2[0] = @"groupResult";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

__n128 sub_100A5F9AC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1002E06EC(a2);
  *(void *)(v3 + 336_Block_object_dispose(va, 8) = *(void *)(a1 + 3368);
  *(void *)(v3 + 3120) = *(void *)(a1 + 3120);
  *(_OWORD *)(v3 + 3384) = *(_OWORD *)(a1 + 3384);
  *(_DWORD *)(v3 + 3400) = *(_DWORD *)(a1 + 3400);
  *(_BYTE *)(v3 + 3156) = *(_BYTE *)(a1 + 3156);
  *(_BYTE *)(v3 + 3256) = *(_BYTE *)(a1 + 3256);
  *(_DWORD *)(v3 + 3360) = *(_DWORD *)(a1 + 3360);
  *(void *)(v3 + 12_Block_object_dispose(va, 8) = *(void *)(a1 + 128);
  __int128 v4 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v3 + 112) = v4;
  __int128 v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v3 + 80) = v5;
  __int128 v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v3 + 4_Block_object_dispose(va, 8) = v6;
  __n128 result = *(__n128 *)(a1 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  *(__n128 *)(v3 + 16) = result;
  *(_BYTE *)(v3 + 136) = *(_BYTE *)(a1 + 136);
  return result;
}

_DWORD *sub_100A5FA40@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  __n128 result = sub_100A5AD50(a3, a1);
  *((_BYTE *)result + 5960) = 1;
  BOOL v6 = *a2 != 2 || a2[1] == 2;
  if (!v6 && *(int *)(a1 + 6412) >= 1)
  {
    if (*(void *)(a1 + 6328))
    {
      *((_BYTE *)result + 1656) = 1;
      *((void *)result + 794) = 0x402E000000000000LL;
    }
  }

  return result;
}

uint64_t sub_100A5FAAC@<X0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a3 + 3192);
  sub_100A68CE0((void *)(v5 + 8), a2);
  unint64_t v7 = a2->n128_u64[1];
  return sub_1008FCD88(v5, (double *)&v7);
}

void sub_100A5FB0C(_Unwind_Exception *a1)
{
}

void sub_100A5FB20(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (*a2 == -1)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    BOOL v6 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v31) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "@WifiFlow, alsreply, aps, 0, tag, -1",  (uint8_t *)&v31,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&v31, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      LOWORD(v25) = 0;
      double v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v31,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiFlow, alsreply, aps, 0, tag, -1",  &v25,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network::Al sRequestResult &) const",  "%s\n",  v17);
    }
  }

  int v7 = a2[1];
  if (v7 == 1)
  {
    if (*a2 == -1)
    {
      *(_BYTE *)(a3 + 1656) = 1;
      *(void *)(a3 + 6352) = 0x4082C00000000000LL;
    }

    else
    {
      int v8 = sub_100B83D5C(a1 + 3208);
      if (*(_DWORD *)(a1 + 6348)) {
        uint64_t v9 = "reproc";
      }
      else {
        uint64_t v9 = "live";
      }
      if (v8) {
        uint64_t v10 = "Wifi";
      }
      else {
        uint64_t v10 = "Cell";
      }
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      double v11 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v12 = *(void *)(a3 + 6328);
        int v31 = 136446722;
        *(void *)uint64_t v32 = v10;
        *(_WORD *)&v32[8] = 2082;
        *(void *)&_BYTE v32[10] = v9;
        *(_WORD *)&v32[18] = 2050;
        v33[0] = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "WsbMetric, als, %{public}s, %{public}s, %{public}ld",  (uint8_t *)&v31,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&v31, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        uint64_t v18 = *(void *)(a3 + 6328);
        int v25 = 136446722;
        uint64_t v26 = v10;
        __int16 v27 = 2082;
        uint64_t v28 = v9;
        __int16 v29 = 2050;
        uint64_t v30 = v18;
        LODWORD(v20) = 32;
        double v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v31,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WsbMetric, als, %{public}s, %{public}s, %{public}ld",  &v25,  v20);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network:: AlsRequestResult &) const",  "%s\n",  v19);
      }

      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3321888768LL;
      v21[2] = sub_100A600C8;
      void v21[3] = &unk_10186A558;
      sub_1002E1330((uint64_t)v22, a3);
      v24[432] = v9;
      v24[433] = v10;
      AnalyticsSendEventLazy(@"com.apple.clx.wsb.als", v21);
      *(_DWORD *)(a3 + 6344) = *a2;
      if (*(void *)(a3 + 6328)) {
        sub_10001CE40((void *)(a3 + 6304));
      }
      uint64_t v13 = *(void *)(a1 + 6288);
      if (v13 != *(void *)(a1 + 6280)) {
        *(void *)(a3 + 6360) = *(void *)(*(void *)(v13 - 24) + 56LL);
      }
      sub_1002E1244((uint64_t)v24);
      sub_1002E1094((uint64_t)&v23);
      sub_1002DDAD8((uint64_t)v22);
    }
  }

  else if (!v7 && *a2 != -1)
  {
    *(void *)(a3 + 612_Block_object_dispose(va, 8) = *(void *)(a1 + 6384);
    *(_BYTE *)(a3 + 5960) = 1;
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  uint64_t v14 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    int v15 = *a2;
    if (a2[1]) {
      double v16 = "wsb";
    }
    else {
      double v16 = "normal";
    }
    int v31 = 68289538;
    *(_DWORD *)uint64_t v32 = 0;
    *(_WORD *)&v32[4] = 2082;
    *(void *)&v32[6] = "";
    *(_WORD *)&v32[14] = 1026;
    *(_DWORD *)&v32[16] = v15;
    LOWORD(v33[0]) = 2082;
    *(void *)((char *)v33 + 2) = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#pre-wifi-position-calculation-state-update, als request results indicate success, tag :%{public}d, requestType:%{public, location:escape_only}s}",  (uint8_t *)&v31,  0x22u);
  }

void sub_100A60094(_Unwind_Exception *a1)
{
}

NSDictionary *sub_100A600C8(void *a1)
{
  v3[0] = @"aps";
  v4[0] = +[NSNumber numberWithUnsignedLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLong:", a1[795]);
  v3[1] = @"pass";
  v4[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", a1[813]);
  void v3[2] = @"reachability";
  _DWORD v4[2] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", a1[814]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

uint64_t sub_100A6018C(uint64_t a1, uint64_t a2)
{
  return sub_1002E1330(a1 + 32, a2 + 32);
}

void sub_100A60198(uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  sub_1002E1244(a1 + 3048);
  sub_1002E1094(a1 + 840);
  sub_1002DDAD8(v2);
}

void sub_100A601CC(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  BOOL v6 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = *a2;
    int v7 = a2[1];
    *(_DWORD *)std::stringbuf::string_type buf = 67240448;
    *(_DWORD *)char v67 = v7;
    *(_WORD *)&v67[4] = 1026;
    *(_DWORD *)&v67[6] = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "@WifiFlow, alsreply, aps, %{public}d, tag, %{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v42 = *a2;
    int v41 = a2[1];
    int v60 = 67240448;
    *(_DWORD *)uint64_t v61 = v41;
    *(_WORD *)&v61[4] = 1026;
    *(_DWORD *)&v61[6] = v42;
    BOOL v43 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiFlow, alsreply, aps, %{public}d, tag, %{public}d",  &v60,  14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network::AlsF inished &) const",  "%s\n",  v43);
  }

  if (sub_100495E64((_DWORD *)(a1 + 5968)) || *(_BYTE *)(a1 + 6172))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    uint64_t v9 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      BOOL v10 = sub_100495E64((_DWORD *)(a1 + 5968));
      int v11 = *(unsigned __int8 *)(a1 + 6172);
      int v12 = *(_DWORD *)(a1 + 6168);
      *(_DWORD *)std::stringbuf::string_type buf = 67240704;
      *(_DWORD *)char v67 = v10;
      *(_WORD *)&v67[4] = 1026;
      *(_DWORD *)&v67[6] = v11;
      *(_WORD *)uint64_t v68 = 1026;
      *(_DWORD *)&v68[2] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "EmerCheck, als, top, highinteg, %{public}d, emer, %{public}d, state, %{public}d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      uint64_t v44 = qword_101934868;
      BOOL v45 = sub_100495E64((_DWORD *)(a1 + 5968));
      int v46 = *(unsigned __int8 *)(a1 + 6172);
      int v47 = *(_DWORD *)(a1 + 6168);
      int v60 = 67240704;
      *(_DWORD *)uint64_t v61 = v45;
      *(_WORD *)&v61[4] = 1026;
      *(_DWORD *)&v61[6] = v46;
      *(_WORD *)unint64_t v62 = 1026;
      *(_DWORD *)&v62[2] = v47;
      LODWORD(v5_Block_object_dispose(va, 8) = 20;
      uint64_t v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v44,  2LL,  "EmerCheck, als, top, highinteg, %{public}d, emer, %{public}d, state, %{public}d",  &v60,  v58);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network::Al sFinished &) const",  "%s\n",  v48);
    }

    *(_DWORD *)(a3 + 6156) = 0;
    int v13 = *(_DWORD *)(a1 + 6168);
    if (v13 == 3 || v13 == 5)
    {
      if (v13 == 5) {
        int v26 = 6;
      }
      else {
        int v26 = 4;
      }
      *(_DWORD *)(a3 + 616_Block_object_dispose(va, 8) = v26;
      if (*(double *)(a3 + 6224) < *(double *)(a3 + 6176))
      {
        *(void *)(a3 + 6224) = *(void *)(a1 + 6384);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        __int16 v27 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
        {
          double v28 = *(double *)(a3 + 6224) - *(double *)(a3 + 6176);
          *(_DWORD *)std::stringbuf::string_type buf = 134349056;
          *(double *)char v67 = v28;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "@EmerTick, preliminaryAlsReplyTick, %{public}.1f",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10186A5E8);
          }
          double v54 = *(double *)(a3 + 6224) - *(double *)(a3 + 6176);
          int v60 = 134349056;
          *(double *)uint64_t v61 = v54;
          LODWORD(v5_Block_object_dispose(va, 8) = 12;
          unsigned int v55 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerTick, preliminaryAlsReplyTick, %{public}.1f",  &v60,  v58);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network ::AlsFinished &) const",  "%s\n",  v55);
        }
      }

      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      __int16 v29 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v30 = "ScanRequest5GHzWithAlsReply";
        if (v13 == 5) {
          uint64_t v30 = "ScanReply5GHzWithAlsReply";
        }
        int v32 = *a2;
        int v31 = a2[1];
        int v33 = *(_DWORD *)(a3 + 6156);
        double v34 = *(double *)(a3 + 6248) - *(double *)(a3 + 6176);
        *(_DWORD *)std::stringbuf::string_type buf = 136447234;
        *(void *)char v67 = v30;
        *(_WORD *)&v67[8] = 1026;
        *(_DWORD *)uint64_t v68 = v31;
        *(_WORD *)&v68[4] = 1026;
        *(_DWORD *)__int16 v69 = v32;
        *(_WORD *)&v69[4] = 1026;
        *(_DWORD *)&v69[6] = v33;
        __int16 v70 = 2050;
        double v71 = v34;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, %{public}s, aps, %{public}d, tag, %{public}d, queryType, %{public}d, tte, %{public}.1f",  buf,  0x28u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        __int16 v49 = "ScanRequest5GHzWithAlsReply";
        if (v13 == 5) {
          __int16 v49 = "ScanReply5GHzWithAlsReply";
        }
        int v51 = *a2;
        int v50 = a2[1];
        int v52 = *(_DWORD *)(a3 + 6156);
        double v53 = *(double *)(a3 + 6248) - *(double *)(a3 + 6176);
        int v60 = 136447234;
        *(void *)uint64_t v61 = v49;
        *(_WORD *)&v61[8] = 1026;
        *(_DWORD *)unint64_t v62 = v50;
        *(_WORD *)&v62[4] = 1026;
        *(_DWORD *)unint64_t v63 = v51;
        *(_WORD *)&v63[4] = 1026;
        *(_DWORD *)&v63[6] = v52;
        __int16 v64 = 2050;
        double v65 = v53;
        LODWORD(v5_Block_object_dispose(va, 8) = 40;
        int v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, %{public}s, aps, %{public}d, tag, %{public}d, queryType, %{public}d, tte, %{public}.1f",  &v60,  v58);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network:: AlsFinished &) const",  "%s\n",  v25);
        goto LABEL_68;
      }
    }

    else if (v13 == 7)
    {
      *(_DWORD *)(a3 + 616_Block_object_dispose(va, 8) = 8;
      if (*(double *)(a3 + 6248) < *(double *)(a3 + 6176))
      {
        *(void *)(a3 + 624_Block_object_dispose(va, 8) = *(void *)(a1 + 6384);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        uint64_t v14 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
        {
          double v15 = *(double *)(a3 + 6248) - *(double *)(a3 + 6176);
          *(_DWORD *)std::stringbuf::string_type buf = 134349056;
          *(double *)char v67 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "@EmerTick, alsreply, %{public}.1f",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10186A5E8);
          }
          double v56 = *(double *)(a3 + 6248) - *(double *)(a3 + 6176);
          int v60 = 134349056;
          *(double *)uint64_t v61 = v56;
          LODWORD(v5_Block_object_dispose(va, 8) = 12;
          uint64_t v57 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerTick, alsreply, %{public}.1f",  &v60,  v58);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network ::AlsFinished &) const",  "%s\n",  v57);
        }
      }

      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      double v16 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        int v18 = *a2;
        int v17 = a2[1];
        int v19 = *(_DWORD *)(a3 + 6156);
        double v20 = *(double *)(a3 + 6248) - *(double *)(a3 + 6176);
        *(_DWORD *)std::stringbuf::string_type buf = 67240960;
        *(_DWORD *)char v67 = v17;
        *(_WORD *)&v67[4] = 1026;
        *(_DWORD *)&v67[6] = v18;
        *(_WORD *)uint64_t v68 = 1026;
        *(_DWORD *)&v68[2] = v19;
        *(_WORD *)__int16 v69 = 2050;
        *(double *)&v69[2] = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, AlsReply, aps, %{public}d, tag, %{public}d, queryType, %{public}d, tte, %{public}.1f",  buf,  0x1Eu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        int v22 = *a2;
        int v21 = a2[1];
        int v23 = *(_DWORD *)(a3 + 6156);
        double v24 = *(double *)(a3 + 6248) - *(double *)(a3 + 6176);
        int v60 = 67240960;
        *(_DWORD *)uint64_t v61 = v21;
        *(_WORD *)&v61[4] = 1026;
        *(_DWORD *)&v61[6] = v22;
        *(_WORD *)unint64_t v62 = 1026;
        *(_DWORD *)&v62[2] = v23;
        *(_WORD *)unint64_t v63 = 2050;
        *(double *)&v63[2] = v24;
        LODWORD(v5_Block_object_dispose(va, 8) = 30;
        int v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, AlsReply, aps, %{public}d, tag, %{public}d, queryType, %{public}d, tte, %{public}.1f",  &v60,  v58);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network:: AlsFinished &) const",  "%s\n",  v25);
LABEL_68:
      }
    }
  }

  double v35 = *(double *)(a3 + 6384);
  uint64_t v36 = *(std::__shared_weak_count **)(a3 + 3168);
  v59[0] = *(void **)(a3 + 3160);
  v59[1] = &v36->__vftable;
  if (v36)
  {
    p_shared_owners = (unint64_t *)&v36->__shared_owners_;
    do
      unint64_t v38 = __ldxr(p_shared_owners);
    while (__stxr(v38 + 1, p_shared_owners));
  }

  sub_100A5D428(v59, v35);
  if (v36)
  {
    __int128 v39 = (unint64_t *)&v36->__shared_owners_;
    do
      unint64_t v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }

void sub_100A60C6C(_Unwind_Exception *a1)
{
}

void sub_100A60CB4(uint64_t a1@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  if (*(void *)(a1 + 6288) != *(void *)(a1 + 6280) && *(_DWORD *)(a1 + 6344) == *a2)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    BOOL v6 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "WsbAls, reply, 0", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      v8[0] = 0;
      int v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WsbAls, reply, 0",  v8,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Network::Al sAllUnknown &) const",  "%s\n",  v7);
    }

    a3[1587] = 2;
  }

void sub_100A60E80(_Unwind_Exception *a1)
{
}

void sub_100A60E98(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v6 = (char *)(a1 + 6007);
  sub_100A5AD50((_DWORD *)a3, a1);
  double v7 = *(double *)(a1 + 6384);
  int v8 = v6[433] & 0xF;
  double v9 = *(double *)(*(void *)(a1 + 6424) + 320LL);
  BOOL v10 = (v6[433] & 0xF) == 0;
  if (v9 <= 0.0) {
    int v11 = -1;
  }
  else {
    int v11 = (int)(v7 - v9);
  }
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  int v12 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    sub_100496B38((char *)a2, (uint64_t)__p);
    int v13 = v101[9] >= 0 ? __p : *(_BYTE **)__p;
    *(_DWORD *)std::stringbuf::string_type buf = 136446722;
    *(void *)&uint8_t buf[4] = v13;
    __int16 v109 = 1026;
    *(_DWORD *)__int128 v110 = v11;
    *(_WORD *)&v110[4] = 1026;
    *(_DWORD *)&v110[6] = v8 == 0;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "WlpMetric, locreq, %{public}s, dt, %{public}d, metric, %{public}d",  buf,  0x18u);
    if ((v101[9] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    uint64_t v65 = qword_101934868;
    sub_100496B38((char *)a2, (uint64_t)&v83);
    if (v85.__r_.__value_.__s.__data_[7] >= 0) {
      double v66 = &v83;
    }
    else {
      double v66 = v83;
    }
    *(_DWORD *)std::string __p = 136446722;
    *(void *)&__p[4] = v66;
    __int16 v100 = 1026;
    *(_DWORD *)int v101 = v11;
    *(_WORD *)&v101[4] = 1026;
    *(_DWORD *)&v101[6] = v8 == 0;
    char v67 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v65,  2LL,  "WlpMetric, locreq, %{public}s, dt, %{public}d, metric, %{public}d",  __p,  24);
    if (v85.__r_.__value_.__s.__data_[7] < 0) {
      operator delete(v83);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::Locat ionRequest &) const",  "%s\n",  v67);
    if (v67 != buf) {
      free(v67);
    }
  }

  if (!v8)
  {
    v91[0] = _NSConcreteStackBlock;
    v91[1] = 3221225472LL;
    v91[2] = sub_100A62044;
    v91[3] = &unk_1018333B8;
    int v92 = v11;
    AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.locreq", v91);
  }

  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v15 = *(void *)(a3 + 6424);
  *(CFAbsoluteTime *)(v15 + 320) = Current;
  sub_100496B38((char *)a2, (uint64_t)buf);
  *(void *)std::string __p = buf;
  double v16 = sub_1002E2BC8((uint64_t **)(v15 + 8), (const void **)buf, (uint64_t)&unk_1012CF090, (_OWORD **)__p);
  ++*((_DWORD *)v16 + 14);
  if ((v110[9] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  uint64_t v17 = *(void *)(a3 + 6424);
  int v18 = (char *)sub_1004970A0((_DWORD *)a2);
  sub_1010DDBC0(buf, v18);
  *(void *)std::string __p = buf;
  int v19 = sub_1002E2BC8((uint64_t **)(v17 + 32), (const void **)buf, (uint64_t)&unk_1012CF090, (_OWORD **)__p);
  ++*((_DWORD *)v19 + 14);
  if ((v110[9] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  uint64_t v20 = *(void *)(a3 + 6424);
  sub_1010DDBC0(buf, "total");
  *(void *)std::string __p = buf;
  int v21 = sub_1002E2BC8((uint64_t **)(v20 + 8), (const void **)buf, (uint64_t)&unk_1012CF090, (_OWORD **)__p);
  ++*((_DWORD *)v21 + 14);
  if ((v110[9] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  uint64_t v22 = *(void *)(a3 + 6424);
  sub_1010DDBC0(buf, "total");
  *(void *)std::string __p = buf;
  int v23 = sub_1002E2BC8((uint64_t **)(v22 + 32), (const void **)buf, (uint64_t)&unk_1012CF090, (_OWORD **)__p);
  ++*((_DWORD *)v23 + 14);
  if ((v110[9] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  ++*(_BYTE *)(a3 + 6440);
  if (v6[372])
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    double v24 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      sub_100496B38((char *)a2, (uint64_t)__p);
      int v25 = v101[9] >= 0 ? __p : *(_BYTE **)__p;
      int v26 = sub_1004970A0((_DWORD *)a2);
      __int16 v27 = sub_1004970A0((_DWORD *)(a1 + 5968));
      *(_DWORD *)std::stringbuf::string_type buf = 136446722;
      *(void *)&uint8_t buf[4] = v25;
      __int16 v109 = 2082;
      *(void *)__int128 v110 = v26;
      *(_WORD *)&v110[8] = 2082;
      __int128 v111 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "@WifiFlow, locreq, %{public}s, %{public}s, current, %{public}s",  buf,  0x20u);
      if ((v101[9] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      uint64_t v68 = qword_101934868;
      sub_100496B38((char *)a2, (uint64_t)&v83);
      if (v85.__r_.__value_.__s.__data_[7] >= 0) {
        __int16 v69 = &v83;
      }
      else {
        __int16 v69 = v83;
      }
      __int16 v70 = sub_1004970A0((_DWORD *)a2);
      double v71 = sub_1004970A0((_DWORD *)(a1 + 5968));
      *(_DWORD *)std::string __p = 136446722;
      *(void *)&__p[4] = v69;
      __int16 v100 = 2082;
      *(void *)int v101 = v70;
      *(_WORD *)&v101[8] = 2082;
      *(void *)&v101[10] = v71;
      LODWORD(v81) = 32;
      char v72 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v68,  0LL,  "@WifiFlow, locreq, %{public}s, %{public}s, current, %{public}s",  __p,  v81);
      if (v85.__r_.__value_.__s.__data_[7] < 0) {
        operator delete(v83);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::Loc ationRequest &) const",  "%s\n",  v72);
      if (v72 != buf) {
        free(v72);
      }
    }

    *(void *)(a3 + 816) = *(void *)(a1 + 5968);
    *(_BYTE *)(a3 + 824) = *(_BYTE *)(a1 + 5976);
    std::string::operator=((std::string *)(a3 + 832), (const std::string *)(a1 + 5984));
    __int128 v28 = *(_OWORD *)(a1 + 6024);
    __int128 v29 = *(_OWORD *)(a1 + 6056);
    *(_OWORD *)(a3 + 88_Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 6040);
    *(_OWORD *)(a3 + 904) = v29;
    *(_OWORD *)(a3 + 916) = *(_OWORD *)(a1 + 6068);
    *(_OWORD *)(a3 + 856) = *(_OWORD *)(a1 + 6008);
    *(_OWORD *)(a3 + 872) = v28;
    std::string::operator=((std::string *)(a3 + 936), (const std::string *)(a1 + 6088));
    double v30 = *(double *)(a1 + 6384);
    double v31 = *(double *)(a1 + 6120);
    *(void *)std::string __p = *(void *)(a1 + 5968);
    __p[8] = *(_BYTE *)(a1 + 5976);
    if (*v6 < 0)
    {
      sub_1010DD48C(&v101[2], *(void **)(a1 + 5984), *(void *)(a1 + 5992));
    }

    else
    {
      *(_OWORD *)&v101[2] = *(_OWORD *)(a1 + 5984);
      uint64_t v102 = *(void *)(a1 + 6000);
    }

    __int128 v33 = *(_OWORD *)(a1 + 6008);
    __int128 v104 = *(_OWORD *)(a1 + 6024);
    __int128 v34 = *(_OWORD *)(a1 + 6056);
    __int128 v105 = *(_OWORD *)(a1 + 6040);
    *(_OWORD *)uint64_t v106 = v34;
    *(_OWORD *)&v106[12] = *(_OWORD *)(a1 + 6068);
    __int128 v103 = v33;
    if (v6[104] < 0) {
      sub_1010DD48C(&v107, *(void **)(a1 + 6088), *(void *)(a1 + 6096));
    }
    else {
      std::string v107 = *(std::string *)(a1 + 6088);
    }
    int v83 = *(void **)a2;
    char v84 = *(_BYTE *)(a2 + 8);
    else {
      std::string v85 = *(std::string *)(a2 + 16);
    }
    __int128 v35 = *(_OWORD *)(a2 + 72);
    __int128 v87 = *(_OWORD *)(a2 + 56);
    __int128 v88 = v35;
    v89[0] = *(_OWORD *)(a2 + 88);
    *(_OWORD *)((char *)v89 + 12) = *(_OWORD *)(a2 + 100);
    __int128 v86 = *(_OWORD *)(a2 + 40);
    else {
      std::string v90 = *(std::string *)(a2 + 120);
    }
    *(void *)&__int128 v88 = *(void *)(a3 + 888);
    v106[22] = v10;
    if (v6[413] && !sub_100495E64(&v83))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 2;
      sub_100496E04(&v83, buf);
    }

    if (v6[165])
    {
      *(_DWORD *)std::stringbuf::string_type buf = 6;
      sub_100496E04(&v83, buf);
      buf[0] = 0;
      sub_100496E18((uint64_t)__p, buf);
    }

    double v36 = vabdd_f64(v30, v31);
    if (sub_100495E98(__p) && v36 >= 6.0)
    {
      sub_10049609C(a3 + 5968, 5, 2u, v7);
      sub_100495EC8((int *)__p);
      if (sub_100495E64(&v83))
      {
        *(void *)(a3 + 504_Block_object_dispose(va, 8) = 0LL;
        *(void *)(a3 + 5040) = 0LL;
        *(_DWORD *)(a3 + 5056) = 0;
        *(_BYTE *)(a3 + 5096) = 0;
        *(void *)(a3 + 5072) = 0LL;
        *(void *)(a3 + 508_Block_object_dispose(va, 8) = 0LL;
        *(void *)(a3 + 5080) = 0LL;
        *(_DWORD *)(a3 + 4944) = 0xFFFF;
        *(void *)(a3 + 4956) = 0LL;
        *(void *)(a3 + 494_Block_object_dispose(va, 8) = 0LL;
        __asm { FMOV            V1.2D, #-1.0 }

        *(_OWORD *)(a3 + 4964) = xmmword_1012E0070;
        *(_OWORD *)(a3 + 4980) = _Q1;
        *(_OWORD *)(a3 + 4996) = _Q1;
        *(_OWORD *)(a3 + 5012) = _Q1;
        *(_DWORD *)(a3 + 502_Block_object_dispose(va, 8) = 0;
        *(void *)(a3 + 5032) = 0xBFF0000000000000LL;
        *(void *)(a3 + 5060) = 0xBFF0000000000000LL;
        *(_DWORD *)(a3 + 506_Block_object_dispose(va, 8) = 0x7FFFFFFF;
        *(void *)(a3 + 5100) = 0LL;
        *(void *)(a3 + 5112) = 0xBFF0000000000000LL;
        *(_DWORD *)(a3 + 5120) = 0;
        *(_BYTE *)(a3 + 5124) = 0;
        *(_WORD *)(a3 + 5126) = 0;
      }
    }

    if (sub_100495E98(__p))
    {
      int v42 = sub_100496E10((unsigned int *)&v83);
      if (v42 <= (int)sub_100496E10((unsigned int *)__p))
      {
        if (!sub_100496E24((uint64_t)__p)
          || ((v63 = sub_100496E24((uint64_t)&v83), v36 < 6.0) ? (char v64 = 1) : (char v64 = v63), (v64 & 1) != 0))
        {
          char v54 = 0;
LABEL_77:
          *(_BYTE *)(a3 + 5976) = __p[8];
          *(void *)(a3 + 596_Block_object_dispose(va, 8) = *(void *)__p;
          std::string::operator=((std::string *)(a3 + 5984), (const std::string *)&v101[2]);
          *(_OWORD *)(a3 + 606_Block_object_dispose(va, 8) = *(_OWORD *)&v106[12];
          __int128 v55 = v103;
          *(_OWORD *)(a3 + 6024) = v104;
          __int128 v56 = *(_OWORD *)v106;
          *(_OWORD *)(a3 + 6040) = v105;
          *(_OWORD *)(a3 + 6056) = v56;
          *(_OWORD *)(a3 + 600_Block_object_dispose(va, 8) = v55;
          std::string::operator=((std::string *)(a3 + 6088), &v107);
          *(_BYTE *)(a3 + 811) = v54;
          *(_BYTE *)(a3 + 809) = !sub_100495E64(&v83);
          double v57 = *(double *)(a3 + 6384);
          uint64_t v58 = *(std::__shared_weak_count **)(a3 + 3168);
          v82[0] = *(void **)(a3 + 3160);
          v82[1] = &v58->__vftable;
          if (v58)
          {
            p_shared_owners = (unint64_t *)&v58->__shared_owners_;
            do
              unint64_t v60 = __ldxr(p_shared_owners);
            while (__stxr(v60 + 1, p_shared_owners));
          }

          sub_100A5D428(v82, v57);
          if (v58)
          {
            uint64_t v61 = (unint64_t *)&v58->__shared_owners_;
            do
              unint64_t v62 = __ldaxr(v61);
            while (__stlxr(v62 - 1, v61));
            if (!v62)
            {
              ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
              std::__shared_weak_count::__release_weak(v58);
            }
          }

          if (SHIBYTE(v102) < 0) {
            operator delete(*(void **)&v101[2]);
          }
          return;
        }
      }

      *(_DWORD *)std::stringbuf::string_type buf = sub_100496E10((unsigned int *)&v83);
      sub_100496E04(__p, buf);
      *(void *)std::stringbuf::string_type buf = sub_100496E38((uint64_t)&v83);
      sub_100496E2C((uint64_t)__p, (double *)buf);
      buf[0] = sub_100496E24((uint64_t)&v83);
      sub_100496E18((uint64_t)__p, buf);
      *(_DWORD *)std::stringbuf::string_type buf = 0;
      sub_100496E40((uint64_t)__p, buf);
      sub_10049609C((uint64_t)__p, 5, 1u, v7);
    }

    else
    {
      *(void *)std::string __p = v83;
      __p[8] = v84;
      std::string::operator=((std::string *)&v101[2], &v85);
      __int128 v105 = v88;
      *(_OWORD *)uint64_t v106 = v89[0];
      *(_OWORD *)&v106[12] = *(_OWORD *)((char *)v89 + 12);
      __int128 v103 = v86;
      __int128 v104 = v87;
      std::string::operator=(&v107, &v90);
    }

    sub_10049609C((uint64_t)__p, 1, 0, v7);
    BOOL v43 = (int *)(a3 + 6444);
    *(void *)(a3 + 6444) = *(void *)(a3 + 6456);
    *(_BYTE *)(a3 + 6452) = *(_BYTE *)(a3 + 6464);
    uint64_t v44 = (int *)(a3 + 6456);
    *(void *)(a3 + 6456) = sub_100787B64((int *)(a3 + 6444));
    *(_BYTE *)(a3 + 6464) = v45;
    if (!*(_BYTE *)(a3 + 6422))
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      int v46 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_INFO,  "@WifiFlow, platform not support 5GHz, revert to default inter-locreq state",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        LOWORD(v93) = 0;
        LODWORD(v81) = 2;
        int v80 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "@WifiFlow, platform not support 5GHz, revert to default inter-locreq state",  &v93,  v81);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::L ocationRequest &) const",  "%s\n",  v80);
        if (v80 != buf) {
          free(v80);
        }
      }

      *(void *)BOOL v43 = sub_100787B08();
      *(_BYTE *)(a3 + 6452) = v47;
      *(void *)uint64_t v44 = sub_100787B08();
      *(_BYTE *)(a3 + 6464) = v48;
    }

    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    __int16 v49 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      int v50 = sub_100496E10((unsigned int *)__p);
      int v51 = sub_100496B64(v50);
      int v52 = sub_100787ADC(*v43);
      double v53 = sub_100787ADC(*v44);
      *(_DWORD *)std::stringbuf::string_type buf = 136381187;
      *(void *)&uint8_t buf[4] = v51;
      __int16 v109 = 2082;
      *(void *)__int128 v110 = v52;
      *(_WORD *)&v110[8] = 2082;
      __int128 v111 = v53;
      _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_INFO,  "@WifiFlow, inter-locreq state per request type, %{private}s, current %{public}s, staging %{public}s",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      uint64_t v73 = qword_101934868;
      int v74 = sub_100496E10((unsigned int *)__p);
      uint64_t v75 = sub_100496B64(v74);
      int v76 = sub_100787ADC(*v43);
      uint64_t v77 = sub_100787ADC(*v44);
      int v93 = 136381187;
      uint64_t v94 = v75;
      __int16 v95 = 2082;
      int v96 = v76;
      __int16 v97 = 2082;
      uint64_t v98 = v77;
      LODWORD(v81) = 32;
      int v78 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v73,  1LL,  "@WifiFlow, inter-locreq state per request type, %{private}s, current %{public}s, staging %{public}s",  &v93,  v81);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::Loc ationRequest &) const",  "%s\n",  v78);
      if (v78 != buf) {
        free(v78);
      }
      char v54 = 1;
    }

    else
    {
      char v54 = 1;
    }

    goto LABEL_77;
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  int v32 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "WifiFlow, locreq, skip, WifiOff", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    *(_WORD *)std::string __p = 0;
    LODWORD(v81) = 2;
    int v79 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WifiFlow, locreq, skip, WifiOff",  __p,  v81);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::Locat ionRequest &) const",  "%s\n",  v79);
    if (v79 != buf) {
      free(v79);
    }
  }

  *(_BYTE *)(a3 + 809) = 0;
}

void sub_100A61F0C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41)
{
}

NSDictionary *sub_100A62044(uint64_t a1)
{
  v2[1] = @"delta";
  v3[0] = @"locreq";
  v2[0] = @"trigger";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

_DWORD *sub_100A620D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __n128 result = sub_100A5AD50((_DWORD *)a3, a1);
  if (*(_DWORD *)(a2 + 96) != 4 || *(_DWORD *)(a2 + 84) >= 0x42u)
  {
    __int128 v6 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a3 + 3424) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a3 + 3440) = v6;
    *(_OWORD *)(a3 + 3456) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a3 + 346_Block_object_dispose(va, 8) = *(_OWORD *)(a2 + 140);
    __int128 v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a3 + 3360) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a3 + 3376) = v7;
    __int128 v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a3 + 3392) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a3 + 340_Block_object_dispose(va, 8) = v8;
    __int128 v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a3 + 332_Block_object_dispose(va, 8) = *(_OWORD *)a2;
    *(_OWORD *)(a3 + 3344) = v9;
    memcpy((void *)(a3 + 3488), (const void *)(a2 + 160), 0x201uLL);
    sub_1000F2F30((void *)(a3 + 4008), (uint64_t *)(a2 + 680));
    __int128 v10 = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a3 + 4072) = *(_OWORD *)(a2 + 744);
    __int128 v11 = *(_OWORD *)(a2 + 776);
    *(_OWORD *)(a3 + 408_Block_object_dispose(va, 8) = *(_OWORD *)(a2 + 760);
    *(_OWORD *)(a3 + 4104) = v11;
    __int128 v12 = *(_OWORD *)(a2 + 712);
    *(_OWORD *)(a3 + 4024) = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a3 + 4040) = v12;
    *(void *)(a3 + 4117) = *(void *)(a2 + 789);
    *(_OWORD *)(a3 + 4056) = v10;
    if (*(_DWORD *)(a2 + 96) == 6)
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10186A608);
      }
      int v13 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        sub_100869A44(a2, __p);
        uint64_t v14 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
            ? __p
            : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
        LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v14;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, updating reference cell location to %{private}s",  (uint8_t *)&buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_10186A608);
        }
        uint64_t v22 = qword_101934858;
        sub_100869A44(a2, &buf);
        if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          p_std::stringbuf::string_type buf = &buf;
        }
        else {
          p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        }
        int v26 = 136380675;
        __int16 v27 = p_buf;
        double v24 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v22,  2LL,  "WifiCalc, integrity, updating reference cell location to %{private}s",  &v26,  12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::L eechLocation &) const",  "%s\n",  (const char *)v24);
        if (v24 != __p) {
          free(v24);
        }
      }

      __int128 v15 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a3 + 4224) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a3 + 4240) = v15;
      *(_OWORD *)(a3 + 4256) = *(_OWORD *)(a2 + 128);
      __int128 v16 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a3 + 4160) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a3 + 4sub_1002E0644(v1 + 176) = v16;
      __int128 v17 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a3 + 4192) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a3 + 420_Block_object_dispose(va, 8) = v17;
      __int128 v18 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a3 + 412_Block_object_dispose(va, 8) = *(_OWORD *)a2;
      *(_OWORD *)(a3 + 426_Block_object_dispose(va, 8) = *(_OWORD *)(a2 + 140);
      *(_OWORD *)(a3 + 4144) = v18;
      memcpy((void *)(a3 + 4288), (const void *)(a2 + 160), 0x201uLL);
      sub_1000F2F30((void *)(a3 + 4808), (uint64_t *)(a2 + 680));
      __int128 v19 = *(_OWORD *)(a2 + 728);
      *(_OWORD *)(a3 + 4872) = *(_OWORD *)(a2 + 744);
      __int128 v20 = *(_OWORD *)(a2 + 776);
      *(_OWORD *)(a3 + 488_Block_object_dispose(va, 8) = *(_OWORD *)(a2 + 760);
      *(_OWORD *)(a3 + 4904) = v20;
      __int128 v21 = *(_OWORD *)(a2 + 712);
      *(_OWORD *)(a3 + 4824) = *(_OWORD *)(a2 + 696);
      *(_OWORD *)(a3 + 4840) = v21;
      *(void *)(a3 + 4917) = *(void *)(a2 + 789);
      *(_OWORD *)(a3 + 4856) = v19;
    }

    return (_DWORD *)sub_100E669D8(*(void *)(a3 + 4928), a2);
  }

  return result;
}

void sub_100A62470(_Unwind_Exception *a1)
{
}

void sub_100A62490(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v265 = sub_100A5AD50(a2, a1);
  uint64_t v2 = (int *)*((void *)v265 + 803);
  int v3 = *v2;
  __int128 v275 = (uint64_t **)(v2 + 20);
  if (*v2 < 25) {
    ++v3;
  }
  *uint64_t v2 = v3;
  v270 = (uint64_t **)(v2 + 44);
  sub_1010DDBC0(buf, "total");
  __int128 v4 = (uint64_t **)(v2 + 2);
  v338[0] = buf;
  int v5 = *((_DWORD *)sub_1002E2BC8((uint64_t **)v2 + 1, (const void **)buf, (uint64_t)&unk_1012CF090, (_OWORD **)v338) + 14);
  sub_1010DDBC0(v338, "awareness");
  v312[0] = v338;
  int v6 = *((_DWORD *)sub_1002E2BC8((uint64_t **)v2 + 1, (const void **)v338, (uint64_t)&unk_1012CF090, (_OWORD **)v312) + 14);
  sub_1010DDBC0(v312, "geofence");
  *(void *)v328 = v312;
  int v7 = *((_DWORD *)sub_1002E2BC8((uint64_t **)v2 + 1, (const void **)v312, (uint64_t)&unk_1012CF090, (_OWORD **)v328) + 14);
  sub_1010DDBC0(v328, "slc");
  *(void *)__int128 __dst = v328;
  int v8 = *((_DWORD *)sub_1002E2BC8((uint64_t **)v2 + 1, (const void **)v328, (uint64_t)&unk_1012CF090, (_OWORD **)__dst) + 14);
  sub_1010DDBC0(__dst, "speedestimator");
  __int128 v324 = __dst;
  __int128 v9 = (uint64_t **)(v2 + 2);
  sub_1010DDBC0(&v324, "cpi");
  v266 = v2;
  v360.__r_.__value_.__r.__words[0] = (std::string::size_type)&v324;
  int v11 = *((_DWORD *)sub_1002E2BC8((uint64_t **)v2 + 1, (const void **)&v324, (uint64_t)&unk_1012CF090, &v360) + 14);
  sub_1010DDBC0(&v360, "registrant");
  v359.__r_.__value_.__r.__words[0] = (std::string::size_type)&v360;
  LODWORD(v4) = *((_DWORD *)sub_1002E2BC8( v4,  (const void **)&v360.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  &v359)
                + 14);
  sub_1010DDBC0(&v359, "scanready");
  int loga = v10;
  int v12 = v7;
  *(void *)v355 = &v359;
  int v13 = v6;
  int v14 = *((_DWORD *)sub_1002E2BC8( v9,  (const void **)&v359.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v355)
        + 14);
  sub_1010DDBC0(v355, "emergency");
  int v15 = v5;
  v322[0] = v355;
  int v16 = *((_DWORD *)sub_1002E2BC8(v9, (const void **)v355, (uint64_t)&unk_1012CF090, (_OWORD **)v322) + 14);
  sub_1010DDBC0(v322, "timer");
  __p[0] = v322;
  int v17 = *((_DWORD *)sub_1002E2BC8(v9, (const void **)v322, (uint64_t)&unk_1012CF090, (_OWORD **)__p) + 14);
  sub_1010DDBC0(__p, "other");
  v318[0] = __p;
  *((_DWORD *)sub_1002E2BC8(v9, (const void **)__p, (uint64_t)&unk_1012CF090, (_OWORD **)v318) + 14) = v15 - (v16 + v17) - (v13 + v12 + v8 + loga + v11 + (_DWORD)v4 + v14);
  if (v321 < 0) {
    operator delete(__p[0]);
  }
  __int128 v18 = (uint64_t **)v266;
  __int128 v19 = v9;
  if (v323 < 0) {
    operator delete(v322[0]);
  }
  if (v358 < 0) {
    operator delete(*(void **)v355);
  }
  if (SHIBYTE(v326) < 0) {
    operator delete(v324);
  }
  if ((__dst[23] & 0x80000000) != 0) {
    operator delete(*(void **)__dst);
  }
  if ((v328[23] & 0x80000000) != 0) {
    operator delete(*(void **)v328);
  }
  if (SHIBYTE(v313) < 0) {
    operator delete(v312[0]);
  }
  if (SBYTE7(v339) < 0) {
    operator delete(v338[0]);
  }
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  uint64_t v20 = qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    sub_1010DDBC0(v338, "total");
    v312[0] = v338;
    int v21 = *((_DWORD *)sub_1002E2BC8(v9, (const void **)v338, (uint64_t)&unk_1012CF090, (_OWORD **)v312) + 14);
    sub_1010DDBC0(v312, "awareness");
    *(void *)v328 = v312;
    int v22 = *((_DWORD *)sub_1002E2BC8(v9, (const void **)v312, (uint64_t)&unk_1012CF090, (_OWORD **)v328) + 14);
    sub_1010DDBC0(v328, "geofence");
    *(void *)__int128 __dst = v328;
    int v23 = *((_DWORD *)sub_1002E2BC8(v9, (const void **)v328, (uint64_t)&unk_1012CF090, (_OWORD **)__dst) + 14);
    sub_1010DDBC0(__dst, "slc");
    __int128 v324 = __dst;
    int v24 = *((_DWORD *)sub_1002E2BC8(v9, (const void **)__dst, (uint64_t)&unk_1012CF090, (_OWORD **)&v324) + 14);
    sub_1010DDBC0(&v324, "speedestimator");
    v360.__r_.__value_.__r.__words[0] = (std::string::size_type)&v324;
    int v25 = *((_DWORD *)sub_1002E2BC8(v9, (const void **)&v324, (uint64_t)&unk_1012CF090, &v360) + 14);
    sub_1010DDBC0(&v360, "cpi");
    v359.__r_.__value_.__r.__words[0] = (std::string::size_type)&v360;
    sub_1010DDBC0(&v359, "registrant");
    *(void *)v355 = &v359;
    int v276 = *((_DWORD *)sub_1002E2BC8( v19,  (const void **)&v359.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v355)
           + 14);
    sub_1010DDBC0(v355, "scanready");
    v322[0] = v355;
    __int16 v27 = v19;
    logb = (os_log_s *)v20;
    int v28 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)v355, (uint64_t)&unk_1012CF090, (_OWORD **)v322) + 14);
    sub_1010DDBC0(v322, "emergency");
    __p[0] = v322;
    int v29 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)v322, (uint64_t)&unk_1012CF090, (_OWORD **)__p) + 14);
    sub_1010DDBC0(__p, "timer");
    v318[0] = __p;
    int v30 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)__p, (uint64_t)&unk_1012CF090, (_OWORD **)v318) + 14);
    sub_1010DDBC0(v318, "other");
    v316[0] = v318;
    int v31 = *((_DWORD *)sub_1002E2BC8(v27, (const void **)v318, (uint64_t)&unk_1012CF090, (_OWORD **)v316) + 14);
    *(_DWORD *)std::stringbuf::string_type buf = 67242752;
    *(_DWORD *)&uint8_t buf[4] = v21;
    *(_WORD *)&uint8_t buf[8] = 1026;
    *(_DWORD *)&buf[10] = v22;
    *(_WORD *)&buf[14] = 1026;
    *(_DWORD *)&uint8_t buf[16] = v23;
    *(_WORD *)&_BYTE buf[20] = 1026;
    *(_DWORD *)&_BYTE buf[22] = v24;
    *(_WORD *)&buf[26] = 1026;
    *(_DWORD *)&_BYTE buf[28] = v25;
    *(_WORD *)&_BYTE buf[32] = 1026;
    *(_DWORD *)&buf[34] = v26;
    *(_WORD *)&buf[38] = 1026;
    int v362 = v276;
    __int16 v363 = 1026;
    int v364 = v28;
    __int16 v365 = 1026;
    int v366 = v29;
    __int16 v367 = 1026;
    int v368 = v30;
    __int16 v369 = 1026;
    int v370 = v31;
    _os_log_impl( (void *)&_mh_execute_header,  logb,  OS_LOG_TYPE_DEBUG,  "WlpMetric, heartbeat, requesters, %{public}d, aware, %{public}d, gf, %{public}d, slc, %{public}d, speedest, %{publ ic}d, cpi, %{public}d, registrant, %{public}d, scanready, %{public}d, emer, %{public}d, timer, %{public}d, other, %{public}d",  buf,  0x44u);
    if (v319 < 0) {
      operator delete(v318[0]);
    }
    __int128 v18 = (uint64_t **)v266;
    __int128 v19 = v27;
    if (v321 < 0) {
      operator delete(__p[0]);
    }
    if (v323 < 0) {
      operator delete(v322[0]);
    }
    if (v358 < 0) {
      operator delete(*(void **)v355);
    }
    if (SHIBYTE(v326) < 0) {
      operator delete(v324);
    }
    if ((__dst[23] & 0x80000000) != 0) {
      operator delete(*(void **)__dst);
    }
    if ((v328[23] & 0x80000000) != 0) {
      operator delete(*(void **)v328);
    }
    if (SHIBYTE(v313) < 0) {
      operator delete(v312[0]);
    }
    if (SBYTE7(v339) < 0) {
      operator delete(v338[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    uint64_t v205 = qword_101934868;
    sub_1010DDBC0(v312, "total");
    *(void *)v328 = v312;
    int v206 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)v312, (uint64_t)&unk_1012CF090, (_OWORD **)v328) + 14);
    sub_1010DDBC0(v328, "awareness");
    *(void *)__int128 __dst = v328;
    int v207 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)v328, (uint64_t)&unk_1012CF090, (_OWORD **)__dst) + 14);
    sub_1010DDBC0(__dst, "geofence");
    __int128 v324 = __dst;
    int v208 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)__dst, (uint64_t)&unk_1012CF090, (_OWORD **)&v324) + 14);
    sub_1010DDBC0(&v324, "slc");
    v360.__r_.__value_.__r.__words[0] = (std::string::size_type)&v324;
    int v209 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)&v324, (uint64_t)&unk_1012CF090, &v360) + 14);
    sub_1010DDBC0(&v360, "speedestimator");
    v359.__r_.__value_.__r.__words[0] = (std::string::size_type)&v360;
    int v210 = *((_DWORD *)sub_1002E2BC8( v19,  (const void **)&v360.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  &v359)
           + 14);
    sub_1010DDBC0(&v359, "cpi");
    *(void *)v355 = &v359;
    int v211 = *((_DWORD *)sub_1002E2BC8( v19,  (const void **)&v359.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v355)
           + 14);
    sub_1010DDBC0(v355, "registrant");
    v322[0] = v355;
    int v212 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)v355, (uint64_t)&unk_1012CF090, (_OWORD **)v322) + 14);
    sub_1010DDBC0(v322, "scanready");
    __p[0] = v322;
    int v278 = v212;
    int logc = *((_DWORD *)sub_1002E2BC8(v19, (const void **)v322, (uint64_t)&unk_1012CF090, (_OWORD **)__p) + 14);
    sub_1010DDBC0(__p, "emergency");
    int v213 = v210;
    v318[0] = __p;
    int v214 = v208;
    int v215 = v207;
    int v216 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)__p, (uint64_t)&unk_1012CF090, (_OWORD **)v318) + 14);
    sub_1010DDBC0(v318, "timer");
    v316[0] = v318;
    int v217 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)v318, (uint64_t)&unk_1012CF090, (_OWORD **)v316) + 14);
    sub_1010DDBC0(v316, "other");
    v327 = v316;
    int v218 = *((_DWORD *)sub_1002E2BC8(v19, (const void **)v316, (uint64_t)&unk_1012CF090, (_OWORD **)&v327) + 14);
    LODWORD(v338[0]) = 67242752;
    HIDWORD(v338[0]) = v206;
    LOWORD(v338[1]) = 1026;
    *(_DWORD *)((char *)&v338[1] + 2) = v215;
    HIWORD(v338[1]) = 1026;
    LODWORD(v339) = v214;
    WORD2(v339) = 1026;
    *(_DWORD *)((char *)&v339 + 6) = v209;
    WORD5(v339) = 1026;
    HIDWORD(v339) = v213;
    __int16 v340 = 1026;
    int v341 = v211;
    __int16 v342 = 1026;
    int v343 = v278;
    __int16 v344 = 1026;
    int v345 = logc;
    __int16 v346 = 1026;
    int v347 = v216;
    __int16 v348 = 1026;
    int v349 = v217;
    __int16 v350 = 1026;
    int v351 = v218;
    v219 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v205,  2LL,  "WlpMetric, heartbeat, requesters, %{public}d, aware, %{public}d, gf, %{public}d, slc, %{public}d, s peedest, %{public}d, cpi, %{public}d, registrant, %{public}d, scanready, %{public}d, emer, %{public }d, timer, %{public}d, other, %{public}d",  v338,  68);
    if (v317 < 0) {
      operator delete(v316[0]);
    }
    __int128 v18 = (uint64_t **)v266;
    if (v319 < 0) {
      operator delete(v318[0]);
    }
    if (v321 < 0) {
      operator delete(__p[0]);
    }
    if (v323 < 0) {
      operator delete(v322[0]);
    }
    if (v358 < 0) {
      operator delete(*(void **)v355);
    }
    if (SHIBYTE(v326) < 0) {
      operator delete(v324);
    }
    if ((__dst[23] & 0x80000000) != 0) {
      operator delete(*(void **)__dst);
    }
    if ((v328[23] & 0x80000000) != 0) {
      operator delete(*(void **)v328);
    }
    if (SHIBYTE(v313) < 0) {
      operator delete(v312[0]);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::Metri cHeartbeat &) const",  "%s\n",  v219);
    if (v219 != buf) {
      free(v219);
    }
  }

  sub_1010DDBC0(buf, "total");
  int v32 = v18 + 4;
  v338[0] = buf;
  int v33 = *((_DWORD *)sub_1002E2BC8(v18 + 4, (const void **)buf, (uint64_t)&unk_1012CF090, (_OWORD **)v338) + 14);
  sub_1010DDBC0(v338, "cpi");
  v312[0] = v338;
  unint64_t v34 = *((unsigned int *)sub_1002E2BC8(v18 + 4, (const void **)v338, (uint64_t)&unk_1012CF090, (_OWORD **)v312) + 14);
  sub_1010DDBC0(v312, "lowpower");
  *(void *)v328 = v312;
  int v35 = *((_DWORD *)sub_1002E2BC8(v32, (const void **)v312, (uint64_t)&unk_1012CF090, (_OWORD **)v328) + 14);
  sub_1010DDBC0(v328, "clientupdate");
  *(void *)__int128 __dst = v328;
  int v36 = *((_DWORD *)sub_1002E2BC8(v32, (const void **)v328, (uint64_t)&unk_1012CF090, (_OWORD **)__dst) + 14);
  sub_1010DDBC0(__dst, "emergency");
  __int128 v324 = __dst;
  int v37 = *((_DWORD *)sub_1002E2BC8(v32, (const void **)__dst, (uint64_t)&unk_1012CF090, (_OWORD **)&v324) + 14);
  sub_1010DDBC0(&v324, "other");
  v360.__r_.__value_.__r.__words[0] = (std::string::size_type)&v324;
  *((_DWORD *)sub_1002E2BC8(v32, (const void **)&v324, (uint64_t)&unk_1012CF090, &v360) + 14) = v33
                                                                                             - (v34
                                                                                              + v35
                                                                                              + v36
                                                                                              + v37);
  if (SHIBYTE(v326) < 0) {
    operator delete(v324);
  }
  if ((__dst[23] & 0x80000000) != 0) {
    operator delete(*(void **)__dst);
  }
  if ((v328[23] & 0x80000000) != 0) {
    operator delete(*(void **)v328);
  }
  if (SHIBYTE(v313) < 0) {
    operator delete(v312[0]);
  }
  if (SBYTE7(v339) < 0) {
    operator delete(v338[0]);
  }
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  unint64_t v38 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    sub_1010DDBC0(v338, "total");
    v312[0] = v338;
    unint64_t v34 = *((unsigned int *)sub_1002E2BC8(v32, (const void **)v338, (uint64_t)&unk_1012CF090, (_OWORD **)v312) + 14);
    sub_1010DDBC0(v312, "cpi");
    *(void *)v328 = v312;
    int v39 = *((_DWORD *)sub_1002E2BC8(v32, (const void **)v312, (uint64_t)&unk_1012CF090, (_OWORD **)v328) + 14);
    sub_1010DDBC0(v328, "lowpower");
    *(void *)__int128 __dst = v328;
    int v40 = *((_DWORD *)sub_1002E2BC8(v32, (const void **)v328, (uint64_t)&unk_1012CF090, (_OWORD **)__dst) + 14);
    sub_1010DDBC0(__dst, "clientupdate");
    __int128 v324 = __dst;
    int v41 = *((_DWORD *)sub_1002E2BC8(v32, (const void **)__dst, (uint64_t)&unk_1012CF090, (_OWORD **)&v324) + 14);
    sub_1010DDBC0(&v324, "emergency");
    v360.__r_.__value_.__r.__words[0] = (std::string::size_type)&v324;
    int v42 = *((_DWORD *)sub_1002E2BC8(v32, (const void **)&v324, (uint64_t)&unk_1012CF090, &v360) + 14);
    sub_1010DDBC0(&v360, "other");
    v359.__r_.__value_.__r.__words[0] = (std::string::size_type)&v360;
    *(_DWORD *)std::stringbuf::string_type buf = 67241472;
    *(_DWORD *)&uint8_t buf[4] = v34;
    *(_WORD *)&uint8_t buf[8] = 1026;
    *(_DWORD *)&buf[10] = v39;
    *(_WORD *)&buf[14] = 1026;
    *(_DWORD *)&uint8_t buf[16] = v40;
    *(_WORD *)&_BYTE buf[20] = 1026;
    *(_DWORD *)&_BYTE buf[22] = v41;
    *(_WORD *)&buf[26] = 1026;
    *(_DWORD *)&_BYTE buf[28] = v42;
    *(_WORD *)&_BYTE buf[32] = 1026;
    *(_DWORD *)&buf[34] = v43;
    _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "WlpMetric, heartbeat, locreqtypes, %{public}d, cpi, %{public}d, lowpower, %{public}d, clientupdate, %{public}d, em ergency, %{public}d, other, %{public}d",  buf,  0x26u);
    if (SHIBYTE(v326) < 0) {
      operator delete(v324);
    }
    if ((__dst[23] & 0x80000000) != 0) {
      operator delete(*(void **)__dst);
    }
    if ((v328[23] & 0x80000000) != 0) {
      operator delete(*(void **)v328);
    }
    if (SHIBYTE(v313) < 0) {
      operator delete(v312[0]);
    }
    if (SBYTE7(v339) < 0) {
      operator delete(v338[0]);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    uint64_t v220 = qword_101934868;
    sub_1010DDBC0(v312, "total");
    *(void *)v328 = v312;
    unint64_t v34 = *((unsigned int *)sub_1002E2BC8(v32, (const void **)v312, (uint64_t)&unk_1012CF090, (_OWORD **)v328) + 14);
    sub_1010DDBC0(v328, "cpi");
    *(void *)__int128 __dst = v328;
    int v221 = *((_DWORD *)sub_1002E2BC8(v32, (const void **)v328, (uint64_t)&unk_1012CF090, (_OWORD **)__dst) + 14);
    sub_1010DDBC0(__dst, "lowpower");
    __int128 v324 = __dst;
    int v222 = *((_DWORD *)sub_1002E2BC8(v32, (const void **)__dst, (uint64_t)&unk_1012CF090, (_OWORD **)&v324) + 14);
    sub_1010DDBC0(&v324, "clientupdate");
    v360.__r_.__value_.__r.__words[0] = (std::string::size_type)&v324;
    int v223 = *((_DWORD *)sub_1002E2BC8(v32, (const void **)&v324, (uint64_t)&unk_1012CF090, &v360) + 14);
    sub_1010DDBC0(&v360, "emergency");
    v359.__r_.__value_.__r.__words[0] = (std::string::size_type)&v360;
    int v224 = *((_DWORD *)sub_1002E2BC8( v32,  (const void **)&v360.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  &v359)
           + 14);
    sub_1010DDBC0(&v359, "other");
    *(void *)v355 = &v359;
    int v225 = *((_DWORD *)sub_1002E2BC8( v32,  (const void **)&v359.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v355)
           + 14);
    LODWORD(v338[0]) = 67241472;
    HIDWORD(v338[0]) = v34;
    LOWORD(v338[1]) = 1026;
    *(_DWORD *)((char *)&v338[1] + 2) = v221;
    HIWORD(v338[1]) = 1026;
    LODWORD(v339) = v222;
    WORD2(v339) = 1026;
    *(_DWORD *)((char *)&v339 + 6) = v223;
    WORD5(v339) = 1026;
    HIDWORD(v339) = v224;
    __int16 v340 = 1026;
    int v341 = v225;
    LODWORD(v263) = 38;
    v226 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v220,  2LL,  "WlpMetric, heartbeat, locreqtypes, %{public}d, cpi, %{public}d, lowpower, %{public}d, clientupdate, %{public}d, emergency, %{public}d, other, %{public}d",  v338,  v263);
    if (SHIBYTE(v326) < 0) {
      operator delete(v324);
    }
    if ((__dst[23] & 0x80000000) != 0) {
      operator delete(*(void **)__dst);
    }
    if ((v328[23] & 0x80000000) != 0) {
      operator delete(*(void **)v328);
    }
    if (SHIBYTE(v313) < 0) {
      operator delete(v312[0]);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::Metri cHeartbeat &) const",  "%s\n",  v226);
    if (v226 != buf) {
      free(v226);
    }
  }

  uint64_t v44 = (os_log_s *)operator new(6uLL);
  *(_DWORD *)uint64_t v44 = 151521030;
  os_log_t log = v44;
  *((_WORD *)v44 + 2) = 3082;
  uint64_t v45 = 0LL;
  __int128 v277 = operator new(2uLL);
  *__int128 v277 = 256;
  __int128 v325 = 0LL;
  __int128 v324 = 0LL;
  unint64_t v326 = 0LL;
  do
  {
    char v46 = *((_BYTE *)log + v45);
    sub_1002DAEE8(v46, 0, (std::stringbuf::string_type *)v338);
    char v47 = v325;
    if ((unint64_t)v325 >= v326)
    {
      unint64_t v49 = 0xAAAAAAAAAAAAAAABLL * (((char *)v325 - (_BYTE *)v324) >> 3);
      unint64_t v50 = v49 + 1;
      if (v49 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_100007008();
      }
      else {
        unint64_t v51 = v50;
      }
      *(void *)&_BYTE buf[32] = &v326;
      if (v51) {
        int v52 = (char *)sub_10000701C((uint64_t)&v326, v51);
      }
      else {
        int v52 = 0LL;
      }
      double v53 = &v52[24 * v49];
      *(void *)std::stringbuf::string_type buf = v52;
      *(void *)&uint8_t buf[8] = v53;
      *(void *)&_BYTE buf[24] = &v52[24 * v51];
      __int128 v54 = *(_OWORD *)v338;
      *((void *)v53 + 2) = v339;
      *(_OWORD *)double v53 = v54;
      *(void *)&__int128 v339 = 0LL;
      v338[1] = 0LL;
      v338[0] = 0LL;
      *(void *)&uint8_t buf[16] = v53 + 24;
      sub_100013F10((uint64_t *)&v324, buf);
      __int128 v55 = v325;
      sub_100014098((uint64_t)buf);
      __int128 v325 = v55;
      if (SBYTE7(v339) < 0) {
        operator delete(v338[0]);
      }
    }

    else
    {
      __int128 v48 = *(_OWORD *)v338;
      v325[2] = v339;
      *char v47 = v48;
      __int128 v325 = (void *)v47 + 3;
    }

    if (v46 == 12)
    {
      for (uint64_t i = 0LL; i != 2; ++i)
      {
        unint64_t v34 = v34 & 0xFFFFFFFFFFFF0000LL | *((unsigned __int8 *)v277 + i) | 0x100;
        sub_1002DAEE8(0xCu, v34, (std::stringbuf::string_type *)v338);
        double v57 = v325;
        if ((unint64_t)v325 >= v326)
        {
          unint64_t v59 = 0xAAAAAAAAAAAAAAABLL * (((char *)v325 - (_BYTE *)v324) >> 3);
          unint64_t v60 = v59 + 1;
          if (v59 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          else {
            unint64_t v61 = v60;
          }
          *(void *)&_BYTE buf[32] = &v326;
          if (v61) {
            unint64_t v62 = (char *)sub_10000701C((uint64_t)&v326, v61);
          }
          else {
            unint64_t v62 = 0LL;
          }
          char v63 = &v62[24 * v59];
          *(void *)std::stringbuf::string_type buf = v62;
          *(void *)&uint8_t buf[8] = v63;
          *(void *)&_BYTE buf[24] = &v62[24 * v61];
          __int128 v64 = *(_OWORD *)v338;
          *((void *)v63 + 2) = v339;
          *(_OWORD *)char v63 = v64;
          *(void *)&__int128 v339 = 0LL;
          v338[1] = 0LL;
          v338[0] = 0LL;
          *(void *)&uint8_t buf[16] = v63 + 24;
          sub_100013F10((uint64_t *)&v324, buf);
          uint64_t v65 = v325;
          sub_100014098((uint64_t)buf);
          __int128 v325 = v65;
          if (SBYTE7(v339) < 0) {
            operator delete(v338[0]);
          }
        }

        else
        {
          __int128 v58 = *(_OWORD *)v338;
          v325[2] = v339;
          *double v57 = v58;
          __int128 v325 = (void *)v57 + 3;
        }
      }
    }

    ++v45;
  }

  while (v45 != 6);
  sub_10000CE18((uint64_t)v338);
  sub_10000CE18((uint64_t)v312);
  double v66 = (char *)v324;
  char v67 = (char *)v325;
  if (v324 == v325)
  {
    int v68 = 0;
  }

  else
  {
    int v68 = 0;
    do
    {
      if (v66[23] < 0)
      {
        sub_1010DD48C(buf, *(void **)v66, *((void *)v66 + 1));
      }

      else
      {
        __int128 v69 = *(_OWORD *)v66;
        *(void *)&uint8_t buf[16] = *((void *)v66 + 2);
        *(_OWORD *)std::stringbuf::string_type buf = v69;
      }

      __int16 v70 = sub_10000CF44(&v339, (uint64_t)", ", 2LL);
      if (buf[23] >= 0) {
        double v71 = buf;
      }
      else {
        double v71 = *(_BYTE **)buf;
      }
      if (buf[23] >= 0) {
        uint64_t v72 = buf[23];
      }
      else {
        uint64_t v72 = *(void *)&buf[8];
      }
      uint64_t v73 = sub_10000CF44(v70, (uint64_t)v71, v72);
      int v74 = sub_10000CF44(v73, (uint64_t)", ", 2LL);
      *(void *)v328 = buf;
      uint64_t v75 = sub_1002E2A90(v275, (const void **)buf, (uint64_t)&unk_1012CF090, (__int128 **)v328);
      std::ostream::operator<<(v74, *((unsigned int *)v75 + 14));
      *(void *)v328 = buf;
      int v76 = *((_DWORD *)sub_1002E2A90(v275, (const void **)buf, (uint64_t)&unk_1012CF090, (__int128 **)v328) + 14);
      uint64_t v77 = sub_10000CF44(&v313, (uint64_t)", ", 2LL);
      if (buf[23] >= 0) {
        int v78 = buf;
      }
      else {
        int v78 = *(_BYTE **)buf;
      }
      if (buf[23] >= 0) {
        uint64_t v79 = buf[23];
      }
      else {
        uint64_t v79 = *(void *)&buf[8];
      }
      int v80 = sub_10000CF44(v77, (uint64_t)v78, v79);
      uint64_t v81 = sub_10000CF44(v80, (uint64_t)", ", 2LL);
      *(void *)v328 = buf;
      uint64_t v82 = sub_1002E2A90(v270, (const void **)buf, (uint64_t)&unk_1012CF090, (__int128 **)v328);
      std::ostream::operator<<(v81, *((unsigned int *)v82 + 14));
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      v68 += v76;
      v66 += 24;
    }

    while (v66 != v67);
  }

  sub_1010DDBC0(buf, "total");
  *(void *)v328 = buf;
  int v83 = *((_DWORD *)sub_1002E2BC8(v275, (const void **)buf, (uint64_t)&unk_1012CF090, (_OWORD **)v328) + 14);
  sub_1010DDBC0(v328, "other");
  *(void *)__int128 __dst = v328;
  *((_DWORD *)sub_1002E2BC8(v275, (const void **)v328, (uint64_t)&unk_1012CF090, (_OWORD **)__dst) + 14) = v83 - v68;
  if ((v328[23] & 0x80000000) != 0) {
    operator delete(*(void **)v328);
  }
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  char v84 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    sub_1010DDBC0(v328, "total");
    *(void *)__int128 __dst = v328;
    int v85 = *((_DWORD *)sub_1002E2BC8(v275, (const void **)v328, (uint64_t)&unk_1012CF090, (_OWORD **)__dst) + 14);
    __int128 v86 = __dst;
    std::stringbuf::str((std::stringbuf::string_type *)__dst, (const std::stringbuf *)((char *)&v339 + 8));
    if (__dst[23] < 0) {
      __int128 v86 = *(_BYTE **)__dst;
    }
    sub_1010DDBC0(&v360, "other");
    v359.__r_.__value_.__r.__words[0] = (std::string::size_type)&v360;
    int v87 = *((_DWORD *)sub_1002E2BC8( v275,  (const void **)&v360.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  &v359)
          + 14);
    *(_DWORD *)std::stringbuf::string_type buf = 67240706;
    *(_DWORD *)&uint8_t buf[4] = v85;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = v86;
    *(_WORD *)&_BYTE buf[18] = 1026;
    *(_DWORD *)&_BYTE buf[20] = v87;
    _os_log_impl( (void *)&_mh_execute_header,  v84,  OS_LOG_TYPE_DEBUG,  "WlpMetric, heartbeat, scanreqtypes, %{public}d%{public}s, other, %{public}d",  buf,  0x18u);
    if ((__dst[23] & 0x80000000) != 0) {
      operator delete(*(void **)__dst);
    }
    if ((v328[23] & 0x80000000) != 0) {
      operator delete(*(void **)v328);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    uint64_t v227 = qword_101934868;
    sub_1010DDBC0(__dst, "total");
    v360.__r_.__value_.__r.__words[0] = (std::string::size_type)__dst;
    int v228 = *((_DWORD *)sub_1002E2BC8(v275, (const void **)__dst, (uint64_t)&unk_1012CF090, &v360) + 14);
    v229 = &v360;
    std::stringbuf::str(&v360, (const std::stringbuf *)((char *)&v339 + 8));
    if ((v360.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      v229 = (std::stringbuf::string_type *)v360.__r_.__value_.__r.__words[0];
    }
    sub_1010DDBC0(&v359, "other");
    *(void *)v355 = &v359;
    int v230 = *((_DWORD *)sub_1002E2BC8( v275,  (const void **)&v359.__r_.__value_.__l.__data_,  (uint64_t)&unk_1012CF090,  (_OWORD **)v355)
           + 14);
    *(_DWORD *)v328 = 67240706;
    *(_DWORD *)&v328[4] = v228;
    *(_WORD *)&v328[8] = 2082;
    *(void *)&v328[10] = v229;
    *(_WORD *)&v328[18] = 1026;
    *(_DWORD *)&v328[20] = v230;
    LODWORD(v263) = 24;
    uint64_t v231 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v227,  2LL,  "WlpMetric, heartbeat, scanreqtypes, %{public}d%{public}s, other, %{public}d",  v328,  v263);
    if ((__dst[23] & 0x80000000) != 0) {
      operator delete(*(void **)__dst);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::Metri cHeartbeat &) const",  "%s\n",  v231);
    if (v231 != buf) {
      free(v231);
    }
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  __int128 v88 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    std::stringbuf::str((std::stringbuf::string_type *)buf, &v314);
    uint64_t v89 = buf[23] >= 0 ? buf : *(_BYTE **)buf;
    *(_DWORD *)v328 = 136446210;
    *(void *)&v328[4] = v89;
    _os_log_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_DEBUG,  "WlpMetric, heartbeat, empty scans per scanreqtypes %{public}s",  v328,  0xCu);
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    uint64_t v232 = qword_101934868;
    std::stringbuf::str((std::stringbuf::string_type *)v328, &v314);
    if (v328[23] >= 0) {
      uint64_t v233 = v328;
    }
    else {
      uint64_t v233 = *(_BYTE **)v328;
    }
    *(_DWORD *)__int128 __dst = 136446210;
    *(void *)&__dst[4] = v233;
    LODWORD(v263) = 12;
    v234 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v232,  2LL,  "WlpMetric, heartbeat, empty scans per scanreqtypes %{public}s",  __dst,  v263);
    if ((v328[23] & 0x80000000) != 0) {
      operator delete(*(void **)v328);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::Metri cHeartbeat &) const",  "%s\n",  v234);
    if (v234 != buf) {
      free(v234);
    }
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  std::string v90 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    int v91 = *v266;
    int v92 = v266[50];
    int v93 = v266[51];
    int v95 = v266[52];
    int v94 = v266[53];
    *(_DWORD *)std::stringbuf::string_type buf = 67241216;
    *(_DWORD *)&uint8_t buf[4] = v91;
    *(_WORD *)&uint8_t buf[8] = 1026;
    *(_DWORD *)&buf[10] = v92;
    *(_WORD *)&buf[14] = 1026;
    *(_DWORD *)&uint8_t buf[16] = v93;
    *(_WORD *)&_BYTE buf[20] = 1026;
    *(_DWORD *)&_BYTE buf[22] = v94;
    *(_WORD *)&buf[26] = 1026;
    *(_DWORD *)&_BYTE buf[28] = v95;
    _os_log_impl( (void *)&_mh_execute_header,  v90,  OS_LOG_TYPE_DEBUG,  "WlpMetric, heartbeat, misc, %{public}d, alsAps, %{public}d, fixes, %{public}d, scanErrors, %{public}d, scanBusys, %{public}d",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v235 = *v266;
    int v236 = v266[50];
    int v237 = v266[51];
    int v239 = v266[52];
    int v238 = v266[53];
    *(_DWORD *)v328 = 67241216;
    *(_DWORD *)&v328[4] = v235;
    *(_WORD *)&v328[8] = 1026;
    *(_DWORD *)&v328[10] = v236;
    *(_WORD *)&v328[14] = 1026;
    *(_DWORD *)&v328[16] = v237;
    *(_WORD *)&v328[20] = 1026;
    *(_DWORD *)&v328[22] = v238;
    *(_WORD *)&v328[26] = 1026;
    *(_DWORD *)&v328[28] = v239;
    LODWORD(v263) = 32;
    v240 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WlpMetric, heartbeat, misc, %{public}d, alsAps, %{public}d, fixes, %{public}d, scanErrors, %{public }d, scanBusys, %{public}d",  v328,  v263);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::Metri cHeartbeat &) const",  "%s\n",  v240);
    if (v240 != buf) {
      free(v240);
    }
  }

  int v96 = (int *)*((void *)v266 + 1);
  if (v96 != v266 + 4)
  {
    do
    {
      if (*((char *)v96 + 55) < 0)
      {
        sub_1010DD48C(buf, *((void **)v96 + 4), *((void *)v96 + 5));
      }

      else
      {
        *(_OWORD *)std::stringbuf::string_type buf = *((_OWORD *)v96 + 2);
        *(void *)&uint8_t buf[16] = *((void *)v96 + 6);
      }

      int v97 = v96[14];
      *(_DWORD *)&_BYTE buf[24] = v97;
      if (v97)
      {
        v308[0] = _NSConcreteStackBlock;
        v308[1] = 3321888768LL;
        v308[2] = sub_100A66834;
        v308[3] = &unk_10186A588;
        if ((buf[23] & 0x80000000) != 0)
        {
          sub_1010DD48C(&v309, *(void **)buf, *(unint64_t *)&buf[8]);
          int v97 = *(_DWORD *)&buf[24];
        }

        else
        {
          __int128 v309 = *(_OWORD *)buf;
          uint64_t v310 = *(void *)&buf[16];
        }

        int v311 = v97;
        AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.requesters", v308);
        if (SHIBYTE(v310) < 0) {
          operator delete((void *)v309);
        }
      }

      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      uint64_t v98 = (int *)*((void *)v96 + 1);
      if (v98)
      {
        do
        {
          int v99 = v98;
          uint64_t v98 = *(int **)v98;
        }

        while (v98);
      }

      else
      {
        do
        {
          int v99 = (int *)*((void *)v96 + 2);
          BOOL v100 = *(void *)v99 == (void)v96;
          int v96 = v99;
        }

        while (!v100);
      }

      int v96 = v99;
    }

    while (v99 != v266 + 4);
  }

  int v101 = (int *)*((void *)v266 + 4);
  if (v101 != v266 + 10)
  {
    do
    {
      if (*((char *)v101 + 55) < 0)
      {
        sub_1010DD48C(buf, *((void **)v101 + 4), *((void *)v101 + 5));
      }

      else
      {
        *(_OWORD *)std::stringbuf::string_type buf = *((_OWORD *)v101 + 2);
        *(void *)&uint8_t buf[16] = *((void *)v101 + 6);
      }

      int v102 = v101[14];
      *(_DWORD *)&_BYTE buf[24] = v102;
      if (v102)
      {
        v304[0] = _NSConcreteStackBlock;
        v304[1] = 3321888768LL;
        v304[2] = sub_100A6694C;
        v304[3] = &unk_10186A588;
        if ((buf[23] & 0x80000000) != 0)
        {
          sub_1010DD48C(&v305, *(void **)buf, *(unint64_t *)&buf[8]);
          int v102 = *(_DWORD *)&buf[24];
        }

        else
        {
          __int128 v305 = *(_OWORD *)buf;
          uint64_t v306 = *(void *)&buf[16];
        }

        int v307 = v102;
        AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.requesttypes", v304);
        if (SHIBYTE(v306) < 0) {
          operator delete((void *)v305);
        }
      }

      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      __int128 v103 = (int *)*((void *)v101 + 1);
      if (v103)
      {
        do
        {
          __int128 v104 = v103;
          __int128 v103 = *(int **)v103;
        }

        while (v103);
      }

      else
      {
        do
        {
          __int128 v104 = (int *)*((void *)v101 + 2);
          BOOL v100 = *(void *)v104 == (void)v101;
          int v101 = v104;
        }

        while (!v100);
      }

      int v101 = v104;
    }

    while (v104 != v266 + 10);
  }

  uint64_t v105 = *((void *)v265 + 803);
  uint64_t v106 = *(void **)(v105 + 56);
  std::string v107 = (void *)(v105 + 64);
  if (v106 != (void *)(v105 + 64))
  {
    do
    {
      if (*((int *)v106 + 14) >= 1)
      {
        uint64_t v108 = v106 + 4;
        v336[0] = @"scanRequester";
        v337[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v108);
        v336[1] = @"numRequests";
        v337[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *((unsigned int *)v106 + 14));
        __int16 v109 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v337,  v336,  2LL);
        v303[0] = _NSConcreteStackBlock;
        v303[1] = 3221225472LL;
        v303[2] = sub_100A669FC;
        v303[3] = &unk_101820740;
        v303[4] = v109;
        AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.scanrequesters", v303);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        __int128 v110 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 68289539;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&_BYTE buf[18] = 2113;
          *(void *)&_BYTE buf[20] = @"WifiLocationScanRequesters";
          *(_WORD *)&_BYTE buf[28] = 2113;
          *(void *)&buf[30] = v109;
          _os_log_impl( (void *)&_mh_execute_header,  v110,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#Wlp submitting PowerLog event, eventName:%{private, location:escape_only}@,  dictionary:%{private, location:escape_only}@}",  buf,  0x26u);
        }

        PLLogRegisteredEvent(4LL, @"WifiLocationScanRequesters", v109, 0LL);
      }

      __int128 v111 = (void *)v106[1];
      if (v111)
      {
        do
        {
          uint64_t v112 = v111;
          __int128 v111 = (void *)*v111;
        }

        while (v111);
      }

      else
      {
        do
        {
          uint64_t v112 = (void *)v106[2];
          BOOL v100 = *v112 == (void)v106;
          uint64_t v106 = v112;
        }

        while (!v100);
      }

      uint64_t v106 = v112;
    }

    while (v112 != v107);
  }

  char v113 = (int *)*((void *)v266 + 10);
  if (v113 != v266 + 22)
  {
    do
    {
      if (*((char *)v113 + 55) < 0)
      {
        sub_1010DD48C(buf, *((void **)v113 + 4), *((void *)v113 + 5));
      }

      else
      {
        *(_OWORD *)std::stringbuf::string_type buf = *((_OWORD *)v113 + 2);
        *(void *)&uint8_t buf[16] = *((void *)v113 + 6);
      }

      int v114 = v113[14];
      *(_DWORD *)&_BYTE buf[24] = v114;
      if (v114)
      {
        v299[0] = _NSConcreteStackBlock;
        v299[1] = 3321888768LL;
        v299[2] = sub_100A66A04;
        v299[3] = &unk_10186A588;
        if ((buf[23] & 0x80000000) != 0)
        {
          sub_1010DD48C(&v300, *(void **)buf, *(unint64_t *)&buf[8]);
          int v114 = *(_DWORD *)&buf[24];
        }

        else
        {
          __int128 v300 = *(_OWORD *)buf;
          uint64_t v301 = *(void *)&buf[16];
        }

        int v302 = v114;
        AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.scantypes", v299);
        if (SHIBYTE(v301) < 0) {
          operator delete((void *)v300);
        }
      }

      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      __int128 v115 = (int *)*((void *)v113 + 1);
      if (v115)
      {
        do
        {
          __int128 v116 = v115;
          __int128 v115 = *(int **)v115;
        }

        while (v115);
      }

      else
      {
        do
        {
          __int128 v116 = (int *)*((void *)v113 + 2);
          BOOL v100 = *(void *)v116 == (void)v113;
          char v113 = v116;
        }

        while (!v100);
      }

      char v113 = v116;
    }

    while (v116 != v266 + 22);
  }

  uint64_t v117 = (__int128 *)*((void *)v266 + 19);
  if (v117 != (__int128 *)(v266 + 40))
  {
    do
    {
      sub_100A690A8(__dst, v117 + 2);
      memset(&v360, 0, sizeof(v360));
      sub_10001B72C(&v360, *(const void **)&__dst[24], v335, (v335 - *(void *)&__dst[24]) >> 2);
      sub_10000CE18((uint64_t)v328);
      std::string::size_type v118 = v360.__r_.__value_.__r.__words[0];
      if (v360.__r_.__value_.__l.__size_ != v360.__r_.__value_.__r.__words[0])
      {
        unint64_t v119 = 0LL;
        do
        {
          if (*(_DWORD *)(v118 + 4 * v119))
          {
            v290[0] = _NSConcreteStackBlock;
            v290[1] = 3321888768LL;
            v290[2] = sub_100A66AB4;
            v290[3] = &unk_10186A5B8;
            sub_100A690A8(&v291, (__int128 *)__dst);
            unint64_t v295 = v119;
            __int128 v297 = 0LL;
            uint64_t v298 = 0LL;
            __int128 v296 = 0LL;
            sub_10001B72C( &v296,  v360.__r_.__value_.__l.__data_,  v360.__r_.__value_.__l.__size_,  (uint64_t)(v360.__r_.__value_.__l.__size_ - v360.__r_.__value_.__r.__words[0]) >> 2);
            AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.fixapcountperscantype", v290);
            if (v296)
            {
              __int128 v297 = v296;
              operator delete(v296);
            }

            if (v293)
            {
              __int128 v294 = v293;
              operator delete(v293);
            }

            if (v292 < 0) {
              operator delete(v291);
            }
          }

          __int128 v120 = sub_10000CF44(&v328[16], (uint64_t)", ", 2LL);
          std::ostream::operator<<(v120, *(unsigned int *)(v360.__r_.__value_.__r.__words[0] + 4 * v119++));
          std::string::size_type v118 = v360.__r_.__value_.__r.__words[0];
        }

        while (v119 < (uint64_t)(v360.__r_.__value_.__l.__size_ - v360.__r_.__value_.__r.__words[0]) >> 2);
      }

      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      uint64_t v121 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        int v122 = __dst[23];
        __int128 v123 = *(_BYTE **)__dst;
        std::stringbuf::str((std::stringbuf::string_type *)buf, (const std::stringbuf *)&v328[24]);
        __int128 v124 = __dst;
        if (v122 < 0) {
          __int128 v124 = v123;
        }
        uint64_t v125 = buf;
        if (buf[23] < 0) {
          uint64_t v125 = *(_BYTE **)buf;
        }
        LODWORD(v359.__r_.__value_.__l.__data_) = 136446466;
        *(std::string::size_type *)((char *)v359.__r_.__value_.__r.__words + 4) = (std::string::size_type)v124;
        WORD2(v359.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&v359.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v125;
        _os_log_impl( (void *)&_mh_execute_header,  v121,  OS_LOG_TYPE_DEBUG,  "WlpMetric, heartbeat, scanreqtype, %{public}s, fix ap count per bucket %{public}s",  (uint8_t *)&v359,  0x16u);
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        uint64_t v128 = qword_101934868;
        int v129 = __dst[23];
        char v130 = *(_BYTE **)__dst;
        std::stringbuf::str(&v359, (const std::stringbuf *)&v328[24]);
        __int128 v131 = __dst;
        if (v129 < 0) {
          __int128 v131 = v130;
        }
        __int16 v132 = &v359;
        if ((v359.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          __int16 v132 = (std::stringbuf::string_type *)v359.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)v355 = 136446466;
        *(void *)&v355[4] = v131;
        __int16 v356 = 2082;
        CLMotionActivity v357 = v132;
        LODWORD(v263) = 22;
        __int128 v133 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v128,  2LL,  "WlpMetric, heartbeat, scanreqtype, %{public}s, fix ap count per bucket %{public}s",  v355,  v263);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::M etricHeartbeat &) const",  "%s\n",  v133);
        if (v133 != buf) {
          free(v133);
        }
      }

      *(void *)v328 = v269;
      *(void *)&v328[*(void *)(v269 - 24)] = v268;
      *(void *)&v328[16] = v267;
      if (v332 < 0) {
        operator delete(v331);
      }
      std::streambuf::~streambuf(&v328[24]);
      std::ios::~ios(&v333);
      if (v360.__r_.__value_.__r.__words[0])
      {
        v360.__r_.__value_.__l.__size_ = v360.__r_.__value_.__r.__words[0];
        operator delete(v360.__r_.__value_.__l.__data_);
      }

      if (*(void *)&__dst[24])
      {
        uint64_t v335 = *(void *)&__dst[24];
        operator delete(*(void **)&__dst[24]);
      }

      if ((__dst[23] & 0x80000000) != 0) {
        operator delete(*(void **)__dst);
      }
      __int128 v126 = (__int128 *)*((void *)v117 + 1);
      if (v126)
      {
        do
        {
          __int128 v127 = v126;
          __int128 v126 = *(__int128 **)v126;
        }

        while (v126);
      }

      else
      {
        do
        {
          __int128 v127 = (__int128 *)*((void *)v117 + 2);
          BOOL v100 = *(void *)v127 == (void)v117;
          uint64_t v117 = v127;
        }

        while (!v100);
      }

      uint64_t v117 = v127;
    }

    while (v127 != (__int128 *)(v266 + 40));
  }

  __int128 v134 = (int *)*((void *)v266 + 22);
  if (v134 != v266 + 46)
  {
    do
    {
      if (*((char *)v134 + 55) < 0)
      {
        sub_1010DD48C(buf, *((void **)v134 + 4), *((void *)v134 + 5));
      }

      else
      {
        *(_OWORD *)std::stringbuf::string_type buf = *((_OWORD *)v134 + 2);
        *(void *)&uint8_t buf[16] = *((void *)v134 + 6);
      }

      int v135 = v134[14];
      *(_DWORD *)&_BYTE buf[24] = v135;
      if (v135)
      {
        v286[0] = _NSConcreteStackBlock;
        v286[1] = 3321888768LL;
        v286[2] = sub_100A66C44;
        v286[3] = &unk_10186A588;
        if ((buf[23] & 0x80000000) != 0)
        {
          sub_1010DD48C(&v287, *(void **)buf, *(unint64_t *)&buf[8]);
          int v135 = *(_DWORD *)&buf[24];
        }

        else
        {
          __int128 v287 = *(_OWORD *)buf;
          uint64_t v288 = *(void *)&buf[16];
        }

        int v289 = v135;
        AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.fixapcountperscantype", v286);
        if (SHIBYTE(v288) < 0) {
          operator delete((void *)v287);
        }
      }

      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      int v136 = (int *)*((void *)v134 + 1);
      if (v136)
      {
        do
        {
          __int16 v137 = v136;
          int v136 = *(int **)v136;
        }

        while (v136);
      }

      else
      {
        do
        {
          __int16 v137 = (int *)*((void *)v134 + 2);
          BOOL v100 = *(void *)v137 == (void)v134;
          __int128 v134 = v137;
        }

        while (!v100);
      }

      __int128 v134 = v137;
    }

    while (v137 != v266 + 46);
  }

  v285[0] = _NSConcreteStackBlock;
  v285[1] = 3221225472LL;
  v285[2] = sub_100A66D08;
  v285[3] = &unk_101820718;
  v285[4] = v266;
  AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.heartbeat", v285);
  *(void *)v328 = _NSConcreteStackBlock;
  *(void *)&v328[8] = 3221225472LL;
  *(void *)&v328[16] = sub_100A6912C;
  *(void *)&v328[24] = &unk_101820718;
  __int16 v329 = (NSDictionary *)v266;
  AnalyticsSendEventLazy(@"com.apple.clx.wifi1.yield", v328);
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  int v138 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    int v139 = v266[59];
    int v140 = v266[60];
    *(_DWORD *)std::stringbuf::string_type buf = 67240448;
    *(_DWORD *)&uint8_t buf[4] = v139;
    *(_WORD *)&uint8_t buf[8] = 1026;
    *(_DWORD *)&buf[10] = v140;
    _os_log_impl( (void *)&_mh_execute_header,  v138,  OS_LOG_TYPE_DEFAULT,  "WlpMetric, numWifi1YieldValid, %{public}d, numWifi1YieldInvalid, %{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v241 = v266[59];
    int v242 = v266[60];
    *(_DWORD *)__int128 __dst = 67240448;
    *(_DWORD *)&__dst[4] = v241;
    *(_WORD *)&__dst[8] = 1026;
    *(_DWORD *)&__dst[10] = v242;
    LODWORD(v263) = 14;
    v243 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WlpMetric, numWifi1YieldValid, %{public}d, numWifi1YieldInvalid, %{public}d",  __dst,  v263);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::submitWifi1YieldMetrics(Types::HeartbeatMetrics &)",  "%s\n",  v243);
    if (v243 != buf) {
      free(v243);
    }
  }

  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  __int16 v141 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    int v142 = v266[61];
    int v143 = v266[62];
    int v144 = v266[63];
    int v145 = v266[64];
    *(_DWORD *)std::stringbuf::string_type buf = 67240960;
    *(_DWORD *)&uint8_t buf[4] = v142;
    *(_WORD *)&uint8_t buf[8] = 1026;
    *(_DWORD *)&buf[10] = v143;
    *(_WORD *)&buf[14] = 1026;
    *(_DWORD *)&uint8_t buf[16] = v144;
    *(_WORD *)&_BYTE buf[20] = 1026;
    *(_DWORD *)&_BYTE buf[22] = v145;
    _os_log_impl( (void *)&_mh_execute_header,  v141,  OS_LOG_TYPE_DEFAULT,  "WlpMetric, numNotifyLocationAvailable, %{public}d, numNotifyLocationUnavailable, %{public}d, numNotifyBatchedLocat ions, %{public}d, numNotifyWsbLocations, %{public}d",  buf,  0x1Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v244 = v266[61];
    int v245 = v266[62];
    int v246 = v266[63];
    int v247 = v266[64];
    *(_DWORD *)__int128 __dst = 67240960;
    *(_DWORD *)&__dst[4] = v244;
    *(_WORD *)&__dst[8] = 1026;
    *(_DWORD *)&__dst[10] = v245;
    *(_WORD *)&__dst[14] = 1026;
    *(_DWORD *)&__dst[16] = v246;
    *(_WORD *)&__dst[20] = 1026;
    *(_DWORD *)&__dst[22] = v247;
    LODWORD(v263) = 26;
    int v248 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WlpMetric, numNotifyLocationAvailable, %{public}d, numNotifyLocationUnavailable, %{public}d, numNot ifyBatchedLocations, %{public}d, numNotifyWsbLocations, %{public}d",  __dst,  v263);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::submitWifi1YieldMetrics(Types::HeartbeatMetrics &)",  "%s\n",  v248);
    if (v248 != buf) {
      free(v248);
    }
  }

  *(void *)(v266 + 61) = 0LL;
  *(void *)(v266 + 59) = 0LL;
  *(void *)(v266 + 63) = 0LL;
  char v146 = (int *)*((void *)v266 + 33);
  unint64_t v147 = v266 + 68;
  if (v146 != v266 + 68)
  {
    do
    {
      uint64_t v148 = v146 + 8;
      v359.__r_.__value_.__r.__words[0] = (std::string::size_type)@"wifi1UnavailableReason";
      uint64_t v149 = v146 + 8;
      v360.__r_.__value_.__r.__words[0] = (std::string::size_type)+[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  v149);
      v359.__r_.__value_.__l.__size_ = (std::string::size_type)@"wifi1UnavailableReasonCount";
      v360.__r_.__value_.__l.__size_ = (std::string::size_type)+[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  v146[14]);
      uint64_t v150 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v360,  &v359,  2LL);
      *(void *)v328 = _NSConcreteStackBlock;
      *(void *)&v328[8] = 3221225472LL;
      *(void *)&v328[16] = sub_100A69258;
      *(void *)&v328[24] = &unk_101820740;
      __int16 v329 = v150;
      AnalyticsSendEventLazy(@"com.apple.locationd.wifi1UnavailableReason", v328);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      uint64_t v151 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v152 = v146 + 8;
        int v153 = v146[14];
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        *(void *)&uint8_t buf[4] = v152;
        *(_WORD *)&_BYTE buf[12] = 1026;
        *(_DWORD *)&buf[14] = v153;
        _os_log_impl( (void *)&_mh_execute_header,  v151,  OS_LOG_TYPE_DEFAULT,  "WlpMetric, notifyLocationUnavailableReason, %{public}s, count, %{public}d",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        int v156 = v146[14];
        *(_DWORD *)__int128 __dst = 136446466;
        *(void *)&__dst[4] = v148;
        *(_WORD *)&_BYTE __dst[12] = 1026;
        *(_DWORD *)&__dst[14] = v156;
        LODWORD(v263) = 18;
        uint64_t v157 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WlpMetric, notifyLocationUnavailableReason, %{public}s, count, %{public}d",  __dst,  v263);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::submitWifi1UnavailableReasonMetrics(Types::HeartbeatMetrics &)",  "%s\n",  v157);
        if (v157 != buf) {
          free(v157);
        }
      }

      uint64_t v154 = (int *)*((void *)v146 + 1);
      if (v154)
      {
        do
        {
          __int128 v155 = v154;
          uint64_t v154 = *(int **)v154;
        }

        while (v154);
      }

      else
      {
        do
        {
          __int128 v155 = (int *)*((void *)v146 + 2);
          BOOL v100 = *(void *)v155 == (void)v146;
          char v146 = v155;
        }

        while (!v100);
      }

      char v146 = v155;
    }

    while (v155 != v147);
  }

  sub_1000229D4((uint64_t)(v266 + 66), *((char **)v266 + 34));
  *((void *)v266 + 34) = 0LL;
  *((void *)v266 + 35) = 0LL;
  *((void *)v266 + 33) = v147;
  if (v266[54] + v266[55])
  {
    *(void *)v328 = _NSConcreteStackBlock;
    *(void *)&v328[8] = 3221225472LL;
    *(void *)&v328[16] = sub_100A69260;
    *(void *)&v328[24] = &unk_101820718;
    __int16 v329 = (NSDictionary *)v266;
    AnalyticsSendEventLazy(@"com.apple.clx.wifiFixWithAssociatedAp", v328);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    unint64_t v158 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      int v159 = v266[54];
      int v160 = v266[55];
      int v161 = v266[56];
      *(_DWORD *)std::stringbuf::string_type buf = 67240704;
      *(_DWORD *)&uint8_t buf[4] = v159;
      *(_WORD *)&uint8_t buf[8] = 1026;
      *(_DWORD *)&buf[10] = v160;
      *(_WORD *)&buf[14] = 1026;
      *(_DWORD *)&uint8_t buf[16] = v161;
      _os_log_impl( (void *)&_mh_execute_header,  v158,  OS_LOG_TYPE_DEFAULT,  "WlpMetric, wifiFixWithAssociatedAp, numAssociated, %{public}d, numUnassociated, %{public}d, numWifiFixesWithAsso ciatedAp, %{public}d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      int v258 = v266[54];
      int v259 = v266[55];
      int v260 = v266[56];
      *(_DWORD *)__int128 __dst = 67240704;
      *(_DWORD *)&__dst[4] = v258;
      *(_WORD *)&__dst[8] = 1026;
      *(_DWORD *)&__dst[10] = v259;
      *(_WORD *)&__dst[14] = 1026;
      *(_DWORD *)&__dst[16] = v260;
      LODWORD(v263) = 20;
      char v261 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WlpMetric, wifiFixWithAssociatedAp, numAssociated, %{public}d, numUnassociated, %{public}d, numWi fiFixesWithAssociatedAp, %{public}d",  __dst,  v263);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::submitWifi1WithAssociatedApMetrics(Types::HeartbeatMetrics &)",  "%s\n",  v261);
      if (v261 != buf) {
        free(v261);
      }
    }

    *((void *)v266 + 27) = 0LL;
    v266[56] = 0;
  }

  int v162 = v266[57];
  int v163 = v266[58] + v162;
  if (v163)
  {
    *(void *)v328 = _NSConcreteStackBlock;
    *(void *)&v328[8] = 3221225472LL;
    *(void *)&v328[16] = sub_100A6932C;
    *(void *)&v328[24] = &unk_101827B10;
    double v164 = (float)((float)v162 / (float)v163);
    __int16 v329 = (NSDictionary *)v266;
    double v330 = v164;
    AnalyticsSendEventLazy(@"com.apple.clx.associatedApCentroidMacPresencesFromScansWhenUnassociated", v328);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v165 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      int v166 = v266[57];
      int v167 = v266[58];
      *(_DWORD *)std::stringbuf::string_type buf = 67240704;
      *(_DWORD *)&uint8_t buf[4] = v166;
      *(_WORD *)&uint8_t buf[8] = 1026;
      *(_DWORD *)&buf[10] = v167;
      *(_WORD *)&buf[14] = 2050;
      *(double *)&uint8_t buf[16] = v164;
      _os_log_impl( (void *)&_mh_execute_header,  v165,  OS_LOG_TYPE_DEFAULT,  "WlpMetric, wifiFixWithAssociatedAp, numAssociatedApCentroidMacPresencesFromScansWhenUnassociated, %{public}d, nu mAssociatedApCentroidMacAbsencesFromScansWhenUnassociated, %{public}d, associatedApCentroidMacPresencePercentage WhenUnassociated, %{public}.1f",  buf,  0x18u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      int v255 = v266[57];
      int v256 = v266[58];
      *(_DWORD *)__int128 __dst = 67240704;
      *(_DWORD *)&__dst[4] = v255;
      *(_WORD *)&__dst[8] = 1026;
      *(_DWORD *)&__dst[10] = v256;
      *(_WORD *)&__dst[14] = 2050;
      *(double *)&__dst[16] = v164;
      LODWORD(v263) = 24;
      BOOL v257 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WlpMetric, wifiFixWithAssociatedAp, numAssociatedApCentroidMacPresencesFromScansWhenUnassociated, %{public}d, numAssociatedApCentroidMacAbsencesFromScansWhenUnassociated, %{public}d, associatedA pCentroidMacPresencePercentageWhenUnassociated, %{public}.1f",  __dst,  v263);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::submitAssociatedApCentroidMacPresencesFromScansWhen UnassociatedMetrics(Types::HeartbeatMetrics &)",  "%s\n",  v257);
      if (v257 != buf) {
        free(v257);
      }
    }

    v266[57] = 0;
    v266[58] = 0;
  }

  *(void *)v328 = _NSConcreteStackBlock;
  *(void *)&v328[8] = 3221225472LL;
  *(void *)&v328[16] = sub_100A693F4;
  *(void *)&v328[24] = &unk_101820718;
  __int16 v329 = (NSDictionary *)v266;
  AnalyticsSendEventLazy(@"com.apple.clx.wifiFixWithReachIntersection", v328);
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  int v168 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    int v169 = v266[73];
    int v170 = v266[72];
    int v171 = v266[74];
    *(_DWORD *)std::stringbuf::string_type buf = 67240704;
    *(_DWORD *)&uint8_t buf[4] = v169;
    *(_WORD *)&uint8_t buf[8] = 1026;
    *(_DWORD *)&buf[10] = v170;
    *(_WORD *)&buf[14] = 1026;
    *(_DWORD *)&uint8_t buf[16] = v171;
    _os_log_impl( (void *)&_mh_execute_header,  v168,  OS_LOG_TYPE_DEBUG,  "WlpMetric, wifiFixwithReachIntersection, numReachIntersectionYield, %{public}d, numWifi1Yield, %{public}d, numReac hIntersectionConservativeUsed, , %{public}d",  buf,  0x14u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v249 = v266[73];
    int v250 = v266[72];
    int v251 = v266[74];
    *(_DWORD *)__int128 __dst = 67240704;
    *(_DWORD *)&__dst[4] = v249;
    *(_WORD *)&__dst[8] = 1026;
    *(_DWORD *)&__dst[10] = v250;
    *(_WORD *)&__dst[14] = 1026;
    *(_DWORD *)&__dst[16] = v251;
    LODWORD(v263) = 20;
    int v252 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WlpMetric, wifiFixwithReachIntersection, numReachIntersectionYield, %{public}d, numWifi1Yield, %{pu blic}d, numReachIntersectionConservativeUsed, , %{public}d",  __dst,  v263);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::submitWifi1WithReachIntersectionMetrics(Types::HeartbeatMetrics &)",  "%s\n",  v252);
    if (v252 != buf) {
      free(v252);
    }
  }

  *((void *)v266 + 36) = 0LL;
  v266[74] = 0;
  if (*((void *)v266 + 15))
  {
    char v172 = (int *)*((void *)v266 + 13);
    uint64_t v173 = v266 + 28;
    if (v172 != v266 + 28)
    {
      do
      {
        uint64_t v174 = v172 + 8;
        *(void *)__int128 __dst = @"reason";
        *(void *)v328 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v174);
        *(void *)&__dst[8] = @"tally";
        *(void *)&v328[8] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  v172[14]);
        uint64_t v175 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v328,  __dst,  2LL);
        *(void *)std::stringbuf::string_type buf = _NSConcreteStackBlock;
        *(void *)&uint8_t buf[8] = 3221225472LL;
        *(void *)&uint8_t buf[16] = sub_100A694C0;
        *(void *)&_BYTE buf[24] = &unk_101820740;
        *(void *)&_BYTE buf[32] = v175;
        AnalyticsSendEventLazy(@"com.apple.locationd.alsrequestreasontally", buf);
        int v176 = (int *)*((void *)v172 + 1);
        if (v176)
        {
          do
          {
            __int16 v177 = v176;
            int v176 = *(int **)v176;
          }

          while (v176);
        }

        else
        {
          do
          {
            __int16 v177 = (int *)*((void *)v172 + 2);
            BOOL v100 = *(void *)v177 == (void)v172;
            char v172 = v177;
          }

          while (!v100);
        }

        char v172 = v177;
      }

      while (v177 != v173);
    }

    sub_1000229D4((uint64_t)(v266 + 26), *((char **)v266 + 14));
    *((void *)v266 + 14) = 0LL;
    *((void *)v266 + 15) = 0LL;
    *((void *)v266 + 13) = v173;
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v178 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v178,  OS_LOG_TYPE_INFO,  "alsRequestReasonsTally metrics nothing to submit",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      *(_WORD *)v328 = 0;
      LODWORD(v263) = 2;
      v262 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "alsRequestReasonsTally metrics nothing to submit",  v328,  v263);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::submitAlsRequestReasonsTally(Types::HeartbeatMetrics &)",  "%s\n",  v262);
      if (v262 != buf) {
        free(v262);
      }
    }
  }

  __int16 v179 = (void *)*((void *)v265 + 803);
  double v180 = (char *)v179[2];
  v179 += 2;
  sub_1000229D4((uint64_t)(v179 - 1), v180);
  *(v179 - 1) = v179;
  *__int16 v179 = 0LL;
  v179[1] = 0LL;
  __int16 v181 = (void *)*((void *)v265 + 803);
  double v182 = (char *)v181[5];
  v181 += 5;
  sub_1000229D4((uint64_t)(v181 - 1), v182);
  *(v181 - 1) = v181;
  *__int16 v181 = 0LL;
  v181[1] = 0LL;
  __int16 v183 = (void *)*((void *)v265 + 803);
  uint64_t v184 = (char *)v183[8];
  v183 += 8;
  sub_1000229D4((uint64_t)(v183 - 1), v184);
  *(v183 - 1) = v183;
  *__int16 v183 = 0LL;
  v183[1] = 0LL;
  __int16 v185 = (void *)*((void *)v265 + 803);
  int v186 = (char *)v185[11];
  v185 += 11;
  sub_1000229D4((uint64_t)(v185 - 1), v186);
  *(v185 - 1) = v185;
  *__int16 v185 = 0LL;
  v185[1] = 0LL;
  __int16 v187 = (void *)*((void *)v265 + 803);
  double v188 = (void *)v187[20];
  v187 += 20;
  sub_1002E1008((uint64_t)(v187 - 1), v188);
  *(v187 - 1) = v187;
  void *v187 = 0LL;
  v187[1] = 0LL;
  __int16 v189 = (void *)*((void *)v265 + 803);
  int v190 = (char *)v189[23];
  v189 += 23;
  sub_1000229D4((uint64_t)(v189 - 1), v190);
  *(v189 - 1) = v189;
  void *v189 = 0LL;
  v189[1] = 0LL;
  uint64_t v191 = *((void *)v265 + 803);
  *(void *)(v191 + 200) = 0LL;
  *(void *)(v191 + 20_Block_object_dispose(va, 8) = 0LL;
  double v192 = *(double *)(a1 + 6384);
  uint64_t v193 = *(void *)(a1 + 6424);
  int v194 = *(_DWORD *)(v193 + 300);
  int v195 = (unint64_t)(2290649225LL * (int)(v192 - *(double *)(v193 + 304) + 30.0)) >> 32;
  double v196 = v192 - *(double *)(v193 + 312);
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  int v197 = (v195 >> 5) + (v195 >> 31);
  double v198 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240704;
    *(_DWORD *)&uint8_t buf[4] = v194;
    *(_WORD *)&uint8_t buf[8] = 1026;
    *(_DWORD *)&buf[10] = v197;
    *(_WORD *)&buf[14] = 1026;
    *(_DWORD *)&uint8_t buf[16] = (int)v196;
    _os_log_impl( (void *)&_mh_execute_header,  v198,  OS_LOG_TYPE_DEBUG,  "WlpMetric, clients, beat, %{public}d, sum, %{public}d, bin, %{public}d",  buf,  0x14u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    *(_DWORD *)v328 = 67240704;
    *(_DWORD *)&v328[4] = v194;
    *(_WORD *)&v328[8] = 1026;
    *(_DWORD *)&v328[10] = v197;
    *(_WORD *)&v328[14] = 1026;
    *(_DWORD *)&v328[16] = (int)v196;
    LODWORD(v263) = 20;
    int v253 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WlpMetric, clients, beat, %{public}d, sum, %{public}d, bin, %{public}d",  v328,  v263);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::Metri cHeartbeat &) const",  "%s\n",  v253);
    if (v253 != buf) {
      free(v253);
    }
  }

  v281[0] = _NSConcreteStackBlock;
  v281[1] = 3221225472LL;
  v281[2] = sub_100A66E14;
  v281[3] = &unk_1018486F8;
  int v282 = v194;
  int v283 = v197;
  int v284 = (int)v196;
  AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.clients", v281);
  double v199 = *(double *)(*(void *)(a1 + 6424) + 320LL);
  if (v199 <= 0.0) {
    int v200 = -1;
  }
  else {
    int v200 = (int)(v192 - v199);
  }
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  v201 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v200;
    _os_log_impl( (void *)&_mh_execute_header,  v201,  OS_LOG_TYPE_DEBUG,  "WlpMetric, locreq, heartbeat, dt, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    *(_DWORD *)v328 = 67240192;
    *(_DWORD *)&v328[4] = v200;
    LODWORD(v263) = 8;
    uint64_t v254 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WlpMetric, locreq, heartbeat, dt, %{public}d",  v328,  v263);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::System::Metri cHeartbeat &) const",  "%s\n",  v254);
    if (v254 != buf) {
      free(v254);
    }
  }

  v279[0] = _NSConcreteStackBlock;
  v279[1] = 3221225472LL;
  v279[2] = sub_100A66EE4;
  v279[3] = &unk_1018333B8;
  int v280 = v200;
  AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.locreq", v279);
  *(void **)((char *)v312
  uint64_t v313 = v203;
  std::streambuf::~streambuf(&v314);
  std::ios::~ios(&v315);
  v338[0] = v202;
  *(void **)((char *)v338 + *((void *)v202 - 3)) = v204;
  *(void *)&__int128 v339 = v203;
  if (v353 < 0) {
    operator delete(v352);
  }
  std::streambuf::~streambuf((char *)&v339 + 8);
  std::ios::~ios(&v354);
  *(void *)std::stringbuf::string_type buf = &v324;
  sub_1000129D4((void ***)buf);
  operator delete(v277);
  operator delete(log);
}

void sub_100A66178( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, void *a24, uint64_t a25, uint64_t a26, void *__p)
{
  STACK[0x5C0] = (unint64_t)&STACK[0x428];
  sub_1000129D4((void ***)&STACK[0x5C0]);
  operator delete(__p);
  operator delete(a24);
  sub_1002D9D34(a13);
  _Unwind_Resume(a1);
}

NSDictionary *sub_100A66834(uint64_t a1)
{
  v4[0] = @"name";
  uint64_t v2 = (void *)(a1 + 32);
  v4[1] = @"requests";
  v5[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  v5[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 56));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL);
}

void *sub_100A668E4(uint64_t a1, uint64_t a2)
{
  __n128 result = (void *)(a1 + 32);
  if (*(char *)(a2 + 55) < 0)
  {
    __n128 result = sub_1010DD48C(result, *(void **)(a2 + 32), *(void *)(a2 + 40));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 32);
    result[2] = *(void *)(a2 + 48);
    *(_OWORD *)__n128 result = v5;
  }

  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return result;
}

void sub_100A66938(uint64_t a1)
{
}

NSDictionary *sub_100A6694C(uint64_t a1)
{
  v4[0] = @"name";
  uint64_t v2 = (void *)(a1 + 32);
  v4[1] = @"requests";
  v5[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  v5[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 56));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL);
}

uint64_t sub_100A669FC(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

NSDictionary *sub_100A66A04(uint64_t a1)
{
  v4[0] = @"name";
  uint64_t v2 = (void *)(a1 + 32);
  v4[1] = @"requests";
  v5[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  v5[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 56));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL);
}

NSDictionary *sub_100A66AB4(uint64_t a1)
{
  v4[0] = @"scantype";
  uint64_t v2 = (void *)(a1 + 32);
  v5[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  v4[1] = @"fixApsBucketed";
  v5[1] = +[NSNumber numberWithUnsignedLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLong:", *(void *)(a1 + 80));
  void v4[2] = @"wifiFixes";
  void v5[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 88) + 4LL * *(void *)(a1 + 80)));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  3LL);
}

void *sub_100A66B88(void *a1, uint64_t a2)
{
  int v3 = a1;
  sub_100A690A8(a1 + 4, (__int128 *)(a2 + 32));
  v3[11] = 0LL;
  v3[12] = 0LL;
  v3 += 11;
  void v3[2] = 0LL;
  return sub_10001B72C( v3,  *(const void **)(a2 + 88),  *(void *)(a2 + 96),  (uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 2);
}

void sub_100A66BDC(_Unwind_Exception *a1)
{
}

void sub_100A66BF0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 88);
  if (v2)
  {
    *(void *)(a1 + 96) = v2;
    operator delete(v2);
  }

  int v3 = *(void **)(a1 + 56);
  if (v3)
  {
    *(void *)(a1 + 64) = v3;
    operator delete(v3);
  }

NSDictionary *sub_100A66C44(uint64_t a1)
{
  v4[0] = @"scantype";
  uint64_t v2 = (void *)(a1 + 32);
  v5[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  v5[1] = &off_1018D3E78;
  v4[1] = @"fixApsBucketed";
  void v4[2] = @"wifiFixes";
  void v5[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 56));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  3LL);
}

NSDictionary *sub_100A66D08(uint64_t a1)
{
  v3[0] = @"beats";
  v4[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", **(unsigned int **)(a1 + 32));
  v3[1] = @"alsAps";
  v4[1] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 200LL));
  void v3[2] = @"fixes";
  void v4[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 204LL));
  void v3[3] = @"scanErrors";
  void v4[3] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 208LL));
  void v3[4] = @"scanBusys";
  void v4[4] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 212LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  5LL);
}

NSDictionary *sub_100A66E14(unsigned int *a1)
{
  v3[0] = @"clients";
  v4[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1[8]);
  v4[1] = @"heartbeat";
  v3[1] = @"trigger";
  void v3[2] = @"sum";
  void v4[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1[9]);
  void v3[3] = @"bin";
  void v4[3] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1[10]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  4LL);
}

NSDictionary *sub_100A66EE4(uint64_t a1)
{
  v2[1] = @"delta";
  v3[0] = @"heartbeat";
  v2[0] = @"trigger";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

_DWORD *sub_100A66F78@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  __n128 result = sub_100A5AD50((_DWORD *)a3, a1);
  *(void *)(a3 + 6160) = 0x4018000000000000LL;
  *(void *)(a3 + 6136) = *(void *)(a3 + 6384);
  if (*a2) {
    return result;
  }
  double v7 = *(double *)(a1 + 6384);
  uint64_t v8 = *(void *)(a1 + 6424);
  int v9 = *(_DWORD *)(v8 + 300);
  double v10 = *(double *)(v8 + 304);
  if (v10 <= 0.0)
  {
    int v11 = -1;
    if (!v9) {
      goto LABEL_6;
    }
LABEL_8:
    int v13 = -1;
    goto LABEL_9;
  }

  int v11 = (int)(v7 - v10 + 30.0) / 60;
  if (v9) {
    goto LABEL_8;
  }
LABEL_6:
  double v12 = *(double *)(v8 + 312);
  if (v12 <= 0.0) {
    goto LABEL_8;
  }
  int v13 = (int)(v7 - v12);
LABEL_9:
  int v14 = *(_DWORD *)(a1 + 6400);
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  int v15 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240704;
    int v28 = v9;
    __int16 v29 = 1026;
    int v30 = v11;
    __int16 v31 = 1026;
    int v32 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "WlpMetric, clients, reg, %{public}d, sum, %{public}d, bin, %{public}d",  buf,  0x14u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    v22[0] = 67240704;
    v22[1] = v9;
    __int16 v23 = 1026;
    int v24 = v11;
    __int16 v25 = 1026;
    int v26 = v13;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WlpMetric, clients, reg, %{public}d, sum, %{public}d, bin, %{public}d",  v22,  20);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::Regis tration &) const",  "%s\n",  v17);
  }

  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472LL;
  _OWORD v18[2] = sub_100A67270;
  v18[3] = &unk_1018486F8;
  int v19 = v9;
  int v20 = v11;
  int v21 = v13;
  __n128 result = (_DWORD *)AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.clients", v18);
  uint64_t v16 = *(void *)(a3 + 6424);
  if (!v9) {
    *(double *)(v16 + 312) = v7;
  }
  *(double *)(v16 + 304) = v7;
  *(_DWORD *)(v16 + 300) = v14;
  return result;
}

void sub_100A67258(_Unwind_Exception *a1)
{
}

NSDictionary *sub_100A67270(unsigned int *a1)
{
  v3[0] = @"clients";
  v4[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1[8]);
  v4[1] = @"register";
  v3[1] = @"trigger";
  void v3[2] = @"sum";
  void v4[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1[9]);
  void v3[3] = @"bin";
  void v4[3] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1[10]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  4LL);
}

void sub_100A67340(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 6160) = 0x4018000000000000LL;
  if (*a2) {
    return;
  }
  double v6 = *(double *)(a1 + 6384);
  uint64_t v7 = *(void *)(a1 + 6424);
  int v8 = *(_DWORD *)(v7 + 300);
  double v9 = *(double *)(v7 + 304);
  if (v9 <= 0.0)
  {
    int v10 = -1;
    if (!v8)
    {
LABEL_8:
      int v12 = -1;
      goto LABEL_9;
    }
  }

  else
  {
    int v10 = (int)(v6 - v9 + 30.0) / 60;
    if (!v8) {
      goto LABEL_8;
    }
  }

  double v11 = *(double *)(v7 + 312);
  if (v11 <= 0.0) {
    goto LABEL_8;
  }
  int v12 = (int)(v6 - v11);
LABEL_9:
  int v13 = *(_DWORD *)(a1 + 6400);
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  int v14 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240704;
    *(_DWORD *)int v36 = v8;
    *(_WORD *)&v36[4] = 1026;
    *(_DWORD *)&v36[6] = v10;
    LOWORD(v37) = 1026;
    *(_DWORD *)((char *)&v37 + 2) = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "WlpMetric, clients, unreg, %{public}d, sum, %{public}d, bin, %{public}d",  buf,  0x14u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v32 = 67240704;
    *(_DWORD *)int v33 = v8;
    *(_WORD *)&v33[4] = 1026;
    *(_DWORD *)&v33[6] = v10;
    LOWORD(v34) = 1026;
    *(_DWORD *)((char *)&v34 + 2) = v12;
    int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WlpMetric, clients, unreg, %{public}d, sum, %{public}d, bin, %{public}d",  &v32,  20);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::Unreg istration &) const",  "%s\n",  v22);
  }

  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472LL;
  v28[2] = sub_100A677F4;
  void v28[3] = &unk_1018486F8;
  int v29 = v8;
  int v30 = v10;
  int v31 = v12;
  AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.clients", v28);
  uint64_t v15 = *(void *)(a3 + 6424);
  if (v8) {
    *(double *)(v15 + 312) = v6;
  }
  *(double *)(v15 + 304) = v6;
  *(_DWORD *)(v15 + 300) = v13;
  if (*(int *)(a1 + 6400) <= 0)
  {
    uint64_t v16 = (int *)(a3 + 6444);
    *(void *)(a3 + 6444) = sub_100787B08();
    *(_BYTE *)(a3 + 6452) = v17;
    *(void *)(a3 + 6456) = sub_100787B08();
    *(_BYTE *)(a3 + 6464) = v18;
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v19 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      int v20 = sub_100787ADC(*v16);
      int v21 = sub_100787ADC(*(_DWORD *)(a3 + 6456));
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      *(void *)int v36 = v20;
      *(_WORD *)&v36[8] = 2082;
      int v37 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "@WifiFlow, reset inter-locreq state, current, %{public}s, staging, %{public}s",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      uint64_t v23 = qword_101934868;
      int v24 = sub_100787ADC(*v16);
      __int16 v25 = sub_100787ADC(*(_DWORD *)(a3 + 6456));
      int v32 = 136446466;
      *(void *)int v33 = v24;
      *(_WORD *)&v33[8] = 2082;
      unint64_t v34 = v25;
      LODWORD(v27) = 22;
      int v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v23,  1LL,  "@WifiFlow, reset inter-locreq state, current, %{public}s, staging, %{public}s",  &v32,  v27);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::Unr egistration &) const",  "%s\n",  v26);
    }
  }

void sub_100A677C8(_Unwind_Exception *a1)
{
}

NSDictionary *sub_100A677F4(unsigned int *a1)
{
  v3[0] = @"clients";
  v4[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1[8]);
  v4[1] = @"unregister";
  v3[1] = @"trigger";
  void v3[2] = @"sum";
  void v4[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1[9]);
  void v3[3] = @"bin";
  void v4[3] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1[10]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  4LL);
}

void sub_100A678C4(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  double v6 = (_BYTE *)(a3 + 6172);
  uint64_t v7 = (unsigned __int8 *)(a1 + 6172);
  sub_100A5AD50((_DWORD *)a3, a1);
  int v8 = *v7;
  int v9 = *a2;
  double v10 = *(double *)(a1 + 6384);
  __int128 v11 = *(_OWORD *)(a1 + 6232);
  *(_OWORD *)(a3 + 100_Block_object_dispose(va, 8) = *(_OWORD *)(a1 + 6216);
  *(_OWORD *)(a3 + 1024) = v11;
  *(_OWORD *)(a3 + 1040) = *(_OWORD *)(a1 + 6248);
  *(_OWORD *)(a3 + 1049) = *(_OWORD *)(a1 + 6257);
  __int128 v12 = *(_OWORD *)(a1 + 6184);
  *(_OWORD *)(a3 + 960) = *(_OWORD *)(a1 + 6168);
  *(_OWORD *)(a3 + 976) = v12;
  *(_OWORD *)(a3 + 992) = *(_OWORD *)(a1 + 6200);
  *double v6 = v9;
  int v13 = v7[100];
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  int v14 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240448;
    *(_DWORD *)int v33 = v8;
    *(_WORD *)&v33[4] = 1026;
    *(_DWORD *)&v33[6] = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, StateChange, wasEmer, %{public}d, nowEmer, %{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v29 = 67240448;
    *(_DWORD *)int v30 = v8;
    *(_WORD *)&void v30[4] = 1026;
    *(_DWORD *)&v30[6] = v9;
    int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, StateChange, wasEmer, %{public}d, nowEmer, %{public}d",  &v29,  14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::Emerg encyState &) const",  "%s\n",  v22);
  }

  *(_OWORD *)(a3 + 6256) = 0u;
  *(_OWORD *)(a3 + 6240) = 0u;
  *(_OWORD *)(a3 + 6224) = 0u;
  *(_OWORD *)(a3 + 620_Block_object_dispose(va, 8) = 0u;
  *(_OWORD *)(a3 + 6192) = 0u;
  *(_OWORD *)(a3 + 6sub_1002E0644(v1 + 176) = 0u;
  if (v9)
  {
    uint64_t v15 = (uint64_t *)(a3 + 6176);
    *(double *)(a3 + 6sub_1002E0644(v1 + 176) = v10;
    *(double *)(a3 + 6184) = v10;
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    uint64_t v16 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *v15;
      *(_DWORD *)std::stringbuf::string_type buf = 134349056;
      *(void *)int v33 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "@EmerTick, on, %{public}.1f", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      uint64_t v23 = *v15;
      int v29 = 134349056;
      *(void *)int v30 = v23;
      LODWORD(v2_Block_object_dispose(va, 8) = 12;
      int v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerTick, on, %{public}.1f",  &v29,  v28);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::Eme rgencyState &) const",  "%s\n",  v24);
    }

    if (v8)
    {
      BOOL v18 = v13 != 0;
    }

    else
    {
      *(double *)(a3 + 6sub_1002E0644(v1 + 176) = v10;
      *(double *)(a3 + 6184) = v10;
      *(double *)(a3 + 6192) = v10;
      BOOL v18 = v13 != 0;
      if (!v7[207])
      {
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        int v21 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "@EmerFlow, RequestWifiOn", buf, 2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_10186A5E8);
          }
          LOWORD(v29) = 0;
          LODWORD(v2_Block_object_dispose(va, 8) = 2;
          uint64_t v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, RequestWifiOn",  &v29,  v28);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client: :EmergencyState &) const",  "%s\n",  v27);
        }

        BOOL v18 = 1;
      }
    }
  }

  else
  {
    if (v8)
    {
      *(_DWORD *)(a3 + 616_Block_object_dispose(va, 8) = 0;
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      int v19 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134349312;
        *(void *)int v33 = fmax(v10, 0.0);
        *(_WORD *)&v33[8] = 2050;
        uint64_t v34 = *(void *)v33;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "@EmerFlow, Off, any, %{public}.1f, sufficient, %{public}.1f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        int v29 = 134349312;
        *(void *)int v30 = fmax(v10, 0.0);
        *(_WORD *)&v30[8] = 2050;
        uint64_t v31 = *(void *)v30;
        LODWORD(v2_Block_object_dispose(va, 8) = 22;
        __int16 v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, Off, any, %{public}.1f, sufficient, %{public}.1f",  &v29,  v28);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::E mergencyState &) const",  "%s\n",  v25);
      }
    }

    if (v13)
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      int v20 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "@EmerFlow, RequestWifiOff", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        LOWORD(v29) = 0;
        LODWORD(v2_Block_object_dispose(va, 8) = 2;
        int v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@EmerFlow, RequestWifiOff",  &v29,  v28);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::E mergencyState &) const",  "%s\n",  v26);
      }
    }

    BOOL v18 = 0;
  }

  *(_BYTE *)(a3 + 6272) = v18;
}

void sub_100A68084(_Unwind_Exception *a1)
{
}

void sub_100A680B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 + 634_Block_object_dispose(va, 8) = *(_DWORD *)(a1 + 6348) + 1;
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10186A5E8);
  }
  __int128 v4 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(_DWORD *)(a2 + 6348);
    unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 6288) - *(void *)(a1 + 6280)) >> 3);
    *(_DWORD *)std::stringbuf::string_type buf = 67240448;
    *(_DWORD *)int v35 = v5;
    *(_WORD *)&v35[4] = 2050;
    *(void *)&v35[6] = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "WsbReproc, pass, %{public}d, groups, %{public}ld",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    int v18 = *(_DWORD *)(a2 + 6348);
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 6288) - *(void *)(a1 + 6280)) >> 3);
    int v30 = 67240448;
    *(_DWORD *)uint64_t v31 = v18;
    *(_WORD *)&v31[4] = 2050;
    *(void *)&v31[6] = v19;
    int v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WsbReproc, pass, %{public}d, groups, %{public}ld",  &v30,  18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::ReprocessWifi ScanBuffer &) const",  "%s\n",  v20);
  }

  uint64_t v7 = *(void *)(a2 + 6280);
  uint64_t v8 = *(void *)(a2 + 6288);
  if (v7 != v8)
  {
    unsigned int v9 = 0;
    __int16 v25 = (uint64_t **)(a2 + 6280);
    while (1)
    {
      double v10 = *(double *)(a1 + 6384) - *(double *)(*(void *)v7 + 56LL);
      if (v10 < 14400.0) {
        break;
      }
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      __int128 v11 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = *(void *)(*(void *)v7 + 56LL);
        *(_DWORD *)std::stringbuf::string_type buf = 134349568;
        *(void *)int v35 = v12;
        *(_WORD *)&v35[8] = 1026;
        *(_DWORD *)&v35[10] = v9 + 1;
        __int16 v36 = 1026;
        int v37 = (int)v10;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "@WsbDiscard, age, %{public}.1f, aps, %{public}d, delta, %{public}d",  buf,  0x18u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        uint64_t v13 = *(void *)(*(void *)v7 + 56LL);
        int v30 = 134349568;
        *(void *)uint64_t v31 = v13;
        *(_WORD *)&v31[8] = 1026;
        *(_DWORD *)&v31[10] = v9 + 1;
        __int16 v32 = 1026;
        int v33 = (int)v10;
        LODWORD(v24) = 24;
        int v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WsbDiscard, age, %{public}.1f, aps, %{public}d, delta, %{public}d",  &v30,  v24,  v25);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Reprocess WifiScanBuffer &) const",  "%s\n",  v14);
      }

      v7 += 24LL;
      ++v9;
      if (v7 == v8) {
        goto LABEL_26;
      }
    }

    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10186A5E8);
    }
    uint64_t v15 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v16 = *(void *)(*(void *)v7 + 56LL);
      *(_DWORD *)std::stringbuf::string_type buf = 134349312;
      *(void *)int v35 = v16;
      *(_WORD *)&v35[8] = 1026;
      *(_DWORD *)&v35[10] = (int)v10;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "@WsbReproc, inrange, %{public}.1f, count, %{public}d",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      uint64_t v22 = *(void *)(*(void *)v7 + 56LL);
      int v30 = 134349312;
      *(void *)uint64_t v31 = v22;
      *(_WORD *)&v31[8] = 1026;
      *(_DWORD *)&v31[10] = (int)v10;
      LODWORD(v24) = 18;
      uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WsbReproc, inrange, %{public}.1f, count, %{public}d",  &v30,  v24,  v25);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::ReprocessWi fiScanBuffer &) const",  "%s\n",  v23);
    }

    if (v9)
    {
LABEL_26:
      sub_100A68844((uint64_t)v25, *v25, (uint64_t)&(*v25)[3 * v9]);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10186A5E8);
      }
      uint64_t v17 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        *(_DWORD *)int v35 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "WsbMetric, groupresult, aged, %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10186A5E8);
        }
        int v30 = 67240192;
        *(_DWORD *)uint64_t v31 = v9;
        LODWORD(v24) = 8;
        int v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WsbMetric, groupresult, aged, %{public}d",  &v30,  v24);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Reprocess WifiScanBuffer &) const",  "%s\n",  v21);
      }

      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472LL;
      v28[2] = sub_100A688C4;
      void v28[3] = &unk_1018333B8;
      unsigned int v29 = v9;
      AnalyticsSendEventLazy(@"com.apple.clx.wsb.groupresult", v28);
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472LL;
      void v26[2] = sub_100A68958;
      v26[3] = &unk_1018333B8;
      unsigned int v27 = v9;
      AnalyticsSendEventLazy(@"com.apple.clx.wsb.groupresult", v26);
    }
  }

void sub_100A68810( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

uint64_t *sub_100A68844(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  if (a2 != (uint64_t *)a3)
  {
    sub_100A6975C((uint64_t)&v9, a3, *(void *)(a1 + 8), a2);
    unint64_t v6 = v5;
    uint64_t v7 = *(void ***)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        v7 -= 3;
        double v10 = v7;
        sub_100023498(&v10);
      }

      while (v7 != v6);
    }

    *(void *)(a1 + _Block_object_dispose(va, 8) = v6;
  }

  return a2;
}

NSDictionary *sub_100A688C4(uint64_t a1)
{
  v2[1] = @"numInGroup";
  v3[0] = @"discard";
  v2[0] = @"groupResult";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

NSDictionary *sub_100A68958(uint64_t a1)
{
  v2[1] = @"numInGroup";
  v3[0] = @"discard:aged";
  v2[0] = @"groupResult";
  v3[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v3,  v2,  2LL);
}

void sub_100A689EC(_DWORD *a1@<X1>, _DWORD *a2@<X8>)
{
}

void sub_100A68A94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100A68AB0(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_100A68ADC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  if (sub_100B83D5C(a1))
  {
    sub_1005B46E8(a1);
    sub_1007EC360(a2);
  }

  else
  {
    sub_1010DDBC0(a2, "none");
  }

uint64_t *sub_100A68B40(void *a1, uint64_t *a2)
{
  __n128 result = sub_100A68B74(a1, a2);
  if (result)
  {
    sub_100A68C98(a1, result);
    return (uint64_t *)1;
  }

  return result;
}

void *sub_100A68B74(void *a1, uint64_t *a2)
{
  uint64_t v16 = *a2;
  unint64_t v4 = sub_1005B46E8((uint64_t)&v16);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0LL;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }

  else
  {
    unint64_t v9 = (*(void *)&v5 - 1LL) & v4;
  }

  double v10 = *(void **)(*a1 + 8 * v9);
  if (!v10) {
    return 0LL;
  }
  __int128 v11 = (void *)*v10;
  if (*v10)
  {
    do
    {
      unint64_t v12 = v11[1];
      if (v12 == v6)
      {
        uint64_t v16 = v11[2];
        uint64_t v13 = sub_1005B46E8((uint64_t)&v16);
        uint64_t v15 = *a2;
      }

      else
      {
        if (v8 > 1)
        {
          if (v12 >= *(void *)&v5) {
            v12 %= *(void *)&v5;
          }
        }

        else
        {
          v12 &= *(void *)&v5 - 1LL;
        }

        if (v12 != v9) {
          return 0LL;
        }
      }

      __int128 v11 = (void *)*v11;
    }

    while (v11);
  }

  return v11;
}

uint64_t sub_100A68C98(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_10005BEB8(a1, a2, (uint64_t)&__p);
  int v3 = (void **)__p;
  std::string __p = 0LL;
  if (v3) {
    sub_1002DD658((uint64_t)&v6, v3);
  }
  return v2;
}

__n128 sub_100A68CE0(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 32 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100A68D68(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  __n128 result = *a2;
  *(__n128 *)(*(void *)(v5 + ((v7 >> 5) & 0x7FFFFFFFFFFFFF8LL)) + 16LL * v7) = *a2;
  ++a1[5];
  return result;
}

void sub_100A68D68(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x100;
  unint64_t v4 = v2 - 256;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      int v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      unint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        int v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)int v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100A69030( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100A6907C(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void *sub_100A690A8(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__int128 __dst = v4;
  }

  __dst[3] = 0LL;
  __dst[4] = 0LL;
  __dst[5] = 0LL;
  sub_10001B72C( __dst + 3,  *((const void **)a2 + 3),  *((void *)a2 + 4),  (uint64_t)(*((void *)a2 + 4) - *((void *)a2 + 3)) >> 2);
  return __dst;
}

void sub_100A69110(_Unwind_Exception *exception_object)
{
}

NSDictionary *sub_100A6912C(uint64_t a1)
{
  v3[0] = @"numWifi1YieldValid";
  v4[0] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 236LL));
  v3[1] = @"numWifi1YieldInvalid";
  v4[1] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 240LL));
  void v3[2] = @"numNotifyLocationAvailable";
  void v4[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 244LL));
  void v3[3] = @"numNotifyLocationUnavailable";
  void v4[3] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 248LL));
  void v3[4] = @"numNotifyBatchedLocations";
  void v4[4] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 252LL));
  void v3[5] = @"numNotifyWsbLocations";
  void v4[5] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 256LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  6LL);
}

uint64_t sub_100A69258(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

NSDictionary *sub_100A69260(uint64_t a1)
{
  v3[0] = @"numAssociated";
  v4[0] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 216LL));
  v3[1] = @"numUnassociated";
  v4[1] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 220LL));
  void v3[2] = @"numWifiFixesWithAssociatedAp";
  void v4[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 224LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

NSDictionary *sub_100A6932C(uint64_t a1)
{
  v3[0] = @"numAssociatedApCentroidMacPresencesFromScansWhenUnassociated";
  v4[0] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 228LL));
  v3[1] = @"numAssociatedApCentroidMacAbsencesFromScansWhenUnassociated";
  v4[1] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 232LL));
  void v3[2] = @"associatedApCentroidMacPresencePercentageWhenUnassociated";
  void v4[2] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 40));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

NSDictionary *sub_100A693F4(uint64_t a1)
{
  v3[0] = @"numReachIntersectionYield";
  v4[0] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 292LL));
  v3[1] = @"numWifi1Yield";
  v4[1] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 288LL));
  void v3[2] = @"numReachIntersectionConservativeUsed";
  void v4[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 32) + 296LL));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

uint64_t sub_100A694C0(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

uint64_t sub_100A694C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1002DDEA4(a1, a2);
  *(void *)(v3 + 40) = *(void *)(a2 + 40);
  *(_BYTE *)(v3 + 4_Block_object_dispose(va, 8) = *(_BYTE *)(a2 + 48);
  sub_1000C6980((_BYTE *)(v3 + 56), a2 + 56);
  return 7LL;
}

void sub_100A6950C(_Unwind_Exception *a1)
{
}

void *sub_100A69520@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  __int128 v4 = operator new(0x48uLL);
  __n128 result = sub_100A69578(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100A69564(_Unwind_Exception *a1)
{
}

void *sub_100A69578(void *a1, uint64_t a2)
{
  a1[2] = 0LL;
  *a1 = off_1018300F0;
  a1[1] = 0LL;
  sub_1002DDEA4((uint64_t)(a1 + 3), a2);
  a1[8] = *(void *)(a2 + 40);
  return a1;
}

void sub_100A695BC(_Unwind_Exception *a1)
{
}

void *sub_100A695D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  *uint64_t v3 = 0LL;
  v3[1] = 0LL;
  void v3[2] = 0LL;
  __n128 result = sub_1002DE3C8(v3, *a2, a2[1], 0x2E8BA2E8BA2E8BA3LL * ((a2[1] - *a2) >> 3));
  *(void *)(a1 + _Block_object_dispose(va, 8) = v3 + 3;
  return result;
}

void sub_100A6962C(_Unwind_Exception *a1)
{
  *(void *)(v1 + _Block_object_dispose(va, 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100A69634(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_100007008();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555LL) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_10000701C(v7, v9);
  }
  else {
    uint64_t v10 = 0LL;
  }
  uint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  uint64_t v15 = v11;
  uint64_t v16 = &v10[24 * v9];
  *(void *)uint64_t v11 = 0LL;
  *((void *)v11 + 1) = 0LL;
  *((void *)v11 + 2) = 0LL;
  sub_1002DE3C8(v11, *a2, a2[1], 0x2E8BA2E8BA2E8BA3LL * ((a2[1] - *a2) >> 3));
  v15 += 24;
  sub_100682F38(a1, v14);
  uint64_t v12 = a1[1];
  sub_1006830C8(v14);
  return v12;
}

void sub_100A69748(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100A6975C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    sub_1002DD898(a4);
    *(_OWORD *)a4 = *(_OWORD *)v5;
    a4[2] = *(void *)(v5 + 16);
    *(void *)uint64_t v5 = 0LL;
    *(void *)(v5 + _Block_object_dispose(va, 8) = 0LL;
    *(void *)(v5 + 16) = 0LL;
    a4 += 3;
    v5 += 24LL;
  }

  while (v5 != v6);
  return v6;
}

void sub_100A697D0(_DWORD *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v3 = (__n128 *)(a1 + 2);
  uint64_t v5 = a3 + 1490;
  switch(*a1 ^ ((int)*a1 >> 31))
  {
    case 0:
    case 1:
    case 0x13:
      sub_100A5AD50(a3, a2);
      break;
    case 2:
      sub_100A5D87C(a2, (uint64_t)a3);
      break;
    case 3:
      sub_100A5DC80(a2, v3, (uint64_t)a3);
      break;
    case 4:
      sub_100A5B128(a2, v3, (uint64_t)a3);
      break;
    case 5:
      sub_100A5B3B8(a2, (uint64_t)v3, (uint64_t)a3);
      break;
    case 6:
      sub_100A5B900(a2, (uint64_t)v3, (uint64_t)a3);
      break;
    case 7:
      sub_100A5BB34(a2, (uint64_t)v3, a3);
      break;
    case 8:
      sub_100A5DF18(a2, (uint64_t *)v3, (uint64_t)a3);
      break;
    case 9:
      sub_100A5F028(a2, v3, (uint64_t)a3);
      break;
    case 0xA:
      sub_100A5FA40(a2, v3, a3);
      break;
    case 0xB:
      sub_100A5EF90(a2, (int *)v3, (uint64_t)a3);
      break;
    case 0xC:
      sub_100A5AD50(a3, a2);
      v5[417] = v3->n128_u8[0];
      break;
    case 0xD:
      uint64_t v6 = sub_100A5AD50(a3, a2);
      else {
        uint64_t v7 = *(void *)(a2 + 6384);
      }
      *((void *)v6 + 744) = v7;
      break;
    case 0xE:
      sub_100A5AD50(a3, a2);
      v5[418] = v3->n128_u8[0];
      break;
    case 0xF:
      sub_100A5AD50(a3, a2)[1593] = v3->n128_u32[0];
      break;
    case 0x10:
      sub_100A620D8(a2, (uint64_t)v3, (uint64_t)a3);
      break;
    case 0x11:
      sub_100A62490(a2, a3);
      break;
    case 0x12:
      sub_100A5FAAC(a2, v3, (uint64_t)a3);
      break;
    case 0x14:
      sub_100A601CC(a2, (int *)v3, (uint64_t)a3);
      break;
    case 0x15:
      sub_100A5FB20(a2, v3, (uint64_t)a3);
      break;
    case 0x16:
      sub_100A60CB4(a2, v3, a3);
      break;
    case 0x17:
      sub_100A678C4(a2, (unsigned __int8 *)v3, (uint64_t)a3);
      break;
    case 0x18:
      sub_100A60E98(a2, (uint64_t)v3, (uint64_t)a3);
      break;
    case 0x19:
      sub_100A66F78(a2, v3, (uint64_t)a3);
      break;
    case 0x1A:
      sub_100A67340(a2, v3, (uint64_t)a3);
      break;
    case 0x1B:
      sub_100A5AE08(a2, (uint64_t)a3);
      break;
    case 0x1C:
      sub_100A5AD50(a3, a2)[1587] = 0;
      break;
    case 0x1D:
      sub_100A680B0(a2, (uint64_t)a3);
      break;
    default:
      sub_1002DDAB0();
  }

void sub_100A69B20()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_100A69BBC(_Unwind_Exception *a1)
{
}

void sub_100A69BD4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      _WORD *v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_100A69C60(_Unwind_Exception *a1)
{
}

void sub_100A69D38(uint64_t a1, void *a2)
{
  dispatch_time_t v3 = dispatch_time(0LL, 5000000000LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100A6A1E8;
  block[3] = &unk_10181D3D0;
  void block[4] = a2;
  dispatch_after(v3, (dispatch_queue_t)objc_msgSend(objc_msgSend(a2, "silo"), "queue"), block);
}

id sub_100A6A1E8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) handleSysTimeChanged];
}

void sub_100A6A1F0(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void *sub_100A6A21C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  sub_100951FD4( a1,  *(const void **)a2,  *(void *)(a2 + 8),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5));
  uint64_t v3 = *a1;
  unint64_t v4 = (__n128 *)a1[1];
  unint64_t v5 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((uint64_t)v4 - *a1) >> 5));
  a1[3] = 0LL;
  uint64_t v6 = (void **)(a1 + 3);
  a1[4] = 0LL;
  a1[5] = 0LL;
  if (v4 == (__n128 *)v3) {
    uint64_t v7 = 0LL;
  }
  else {
    uint64_t v7 = v5;
  }
  sub_100A6C4CC(v3, v4, v7, 1);
  if (*a1 != a1[1])
  {
    sub_100A6A318(a1, (void **)&v10, *(double *)(*a1 + 8LL), *(double *)(*a1 + 16LL));
    unint64_t v8 = *v6;
    if (*v6)
    {
      a1[4] = v8;
      operator delete(v8);
      *uint64_t v6 = 0LL;
      a1[4] = 0LL;
      a1[5] = 0LL;
    }

    *(_OWORD *)(a1 + 3) = v10;
    a1[5] = v11;
  }

  return a1;
}

void sub_100A6A2E8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = v2;
  unint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 32) = v5;
    operator delete(v5);
  }

  uint64_t v6 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose(va, 8) = v6;
    operator delete(v6);
  }

  _Unwind_Resume(exception_object);
}

void sub_100A6A318(uint64_t *a1@<X0>, void **a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1 != v5)
  {
    uint64_t v9 = (uint64_t)(a2 + 2);
    do
    {
      uint64_t v27 = 0LL;
      uint64_t v28 = 0LL;
      uint64_t v26 = 0LL;
      sub_100D2D9A4((uint64_t)v25);
      sub_100D2DA44( v25,  (double *)&v28,  (double *)&v27,  (double *)&v26,  a3,  a4,  0.0,  *(double *)(v4 + 8),  *(double *)(v4 + 16),  0.0);
      uint64_t v11 = v27;
      uint64_t v10 = v28;
      double v12 = (double)*(int *)(v4 + 48);
      BOOL v14 = (char *)a2[1];
      uint64_t v13 = (char *)a2[2];
      if (v14 >= v13)
      {
        uint64_t v16 = (char *)*a2;
        unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((v14 - (_BYTE *)*a2) >> 3);
        unint64_t v18 = v17 + 1;
        if (v17 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_100007008();
        }
        unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((v13 - v16) >> 3);
        if (2 * v19 > v18) {
          unint64_t v18 = 2 * v19;
        }
        if (v19 >= 0x555555555555555LL) {
          unint64_t v20 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v20 = v18;
        }
        if (v20)
        {
          uint64_t v21 = (char *)sub_10000701C(v9, v20);
          uint64_t v16 = (char *)*a2;
          BOOL v14 = (char *)a2[1];
        }

        else
        {
          uint64_t v21 = 0LL;
        }

        unint64_t v22 = &v21[24 * v17];
        *(void *)unint64_t v22 = v11;
        *((void *)v22 + 1) = v10;
        *((double *)v22 + 2) = v12;
        uint64_t v23 = v22;
        if (v14 != v16)
        {
          do
          {
            __int128 v24 = *(_OWORD *)(v14 - 24);
            *((void *)v23 - 1) = *((void *)v14 - 1);
            *(_OWORD *)(v23 - 24) = v24;
            v23 -= 24;
            v14 -= 24;
          }

          while (v14 != v16);
          uint64_t v16 = (char *)*a2;
        }

        uint64_t v15 = v22 + 24;
        *a2 = v23;
        a2[1] = v22 + 24;
        a2[2] = &v21[24 * v20];
        if (v16) {
          operator delete(v16);
        }
      }

      else
      {
        *(void *)BOOL v14 = v27;
        *((void *)v14 + 1) = v10;
        uint64_t v15 = v14 + 24;
        *((double *)v14 + 2) = v12;
      }

      a2[1] = v15;
      v4 += 96LL;
    }

    while (v4 != v5);
  }