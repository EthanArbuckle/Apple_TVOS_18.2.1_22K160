void sub_10092FEFC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  void *v22;

  _Unwind_Resume(a1);
}

void sub_10092FF80(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = sub_10092B578(a1, a2);
  sub_10092A8A4(v2, v3, 0LL);
}

void *sub_10092FFAC@<X0>(uint64_t a1@<X8>)
{
  v11[0] = &off_101861168;
  v11[1] = sub_10092F458;
  v11[2] = 0LL;
  v12 = v11;
  sub_1010DDBC0(v13, "kCLConnectionMessagePlaceInference");
  sub_100894D0C((uint64_t)&v14, (uint64_t)v11);
  v9[0] = &off_101861168;
  v9[1] = sub_10092ECE8;
  v9[2] = 0LL;
  v10 = v9;
  sub_1010DDBC0(v15, "kCLConnectionMessagePlaceInferenceStop");
  sub_100894D0C((uint64_t)v16, (uint64_t)v9);
  sub_100930E78(a1, (unsigned __int8 *)v13, 2LL);
  for (uint64_t i = 0LL; i != -14; i -= 7LL)
  {
    id v3 = *(_BYTE **)&v16[i * 8 + 24];
    if (&v16[i * 8] == v3)
    {
      id v3 = &v16[i * 8];
      uint64_t v4 = 4LL;
    }

    else
    {
      if (!v3) {
        goto LABEL_7;
      }
      uint64_t v4 = 5LL;
    }

    (*(void (**)(void))(*(void *)v3 + 8 * v4))();
LABEL_7:
    if (SHIBYTE(v15[i + 2]) < 0) {
      operator delete((void *)v15[i]);
    }
  }

  v5 = v10;
  if (v10 == v9)
  {
    uint64_t v6 = 4LL;
    v5 = v9;
LABEL_14:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }

  else if (v10)
  {
    uint64_t v6 = 5LL;
    goto LABEL_14;
  }

  result = v12;
  if (v12 == v11)
  {
    uint64_t v8 = 4LL;
    result = v11;
    return (void *)(*(uint64_t (**)(void))(*result + 8 * v8))();
  }

  else if (v12)
  {
    uint64_t v8 = 5LL;
    return (void *)(*(uint64_t (**)(void))(*result + 8 * v8))();
  }

  return result;
}

void sub_100930144( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17)
{
  for (uint64_t i = 56LL; i != -56; i -= 56LL)
    sub_10026E430(v17 + i);
  v20 = a13;
  if (a13 == &a10)
  {
    uint64_t v21 = 4LL;
    v20 = &a10;
  }

  else
  {
    if (!a13) {
      goto LABEL_8;
    }
    uint64_t v21 = 5LL;
  }

  (*(void (**)(void))(*(void *)v20 + 8 * v21))();
LABEL_8:
  v22 = a17;
  if (a17 == &a14)
  {
    uint64_t v23 = 4LL;
    v22 = &a14;
  }

  else
  {
    if (!a17) {
      goto LABEL_13;
    }
    uint64_t v23 = 5LL;
  }

  (*(void (**)(void))(*(void *)v22 + 8 * v23))();
LABEL_13:
  _Unwind_Resume(a1);
}

uint64_t sub_100930214(uint64_t a1, uint64_t a2)
{
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101861108);
  }
  uint64_t v4 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 24);
    *(_DWORD *)buf = 138543618;
    uint64_t v15 = v5;
    __int16 v16 = 2082;
    uint64_t v17 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#dsa client '%{public}@ %{public}s'; stopping place inference location and wifi scans",
      buf,
      0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101861108);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    int v10 = 138543618;
    uint64_t v11 = v7;
    __int16 v12 = 2082;
    uint64_t v13 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  0LL,  "#dsa client '%{public}@ %{public}s'; stopping place inference location and wifi scans",
      &v10,
      22);
    v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPlaceInferenceSubscription::shutDownCurrentSessionWithReason(const char *)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  sub_1002B70AC(a1 + 160);
  return sub_100925678(a1);
}

void sub_1009303F0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 41))
  {
    if (sub_100C6ADAC(a1, 4))
    {
      uint64_t v2 = "lost precise location authorization";
    }

    else
    {
      uint64_t v2 = "authorization status changed for location";
    }

    sub_100930214(a1, (uint64_t)v2);
    sub_100927F78( a1,  (uint64_t)+[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  kCLErrorDomain,  1LL,  0LL));
  }

id sub_100930488(uint64_t a1, void *a2)
{
  if ([a2 type] == 1)
  {
    ++*(_DWORD *)(a1 + 196);
  }

  else if ([a2 type] == 4)
  {
    ++*(_DWORD *)(a1 + 200);
  }

  else if ([a2 type] == 6)
  {
    ++*(_DWORD *)(a1 + 204);
  }

  else
  {
    ++*(_DWORD *)(a1 + 208);
  }

  ++*(_DWORD *)(a1 + 192);
  uint64_t v4 = *(void **)(a1 + 144);
  if (!v4)
  {
    uint64_t v8 = 0LL;
    goto LABEL_12;
  }

  [v4 horizontalAccuracy];
  double v6 = v5;
  [a2 horizontalAccuracy];
  if (v6 > v7)
  {
    uint64_t v8 = *(void **)(a1 + 144);
LABEL_12:

    *(void *)(a1 + 144) = a2;
  }

  id result = [a2 horizontalAccuracy];
  if (v10 < 200.0)
  {
    if ([a2 type] == 1
      || [a2 type] == 4
      || [a2 type] == 11
      || (id result = [a2 type], (_DWORD)result == 13))
    {

      id result = a2;
      *(void *)(a1 + 128) = result;
    }
  }

  return result;
}

void sub_1009305D4(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (*a3 < 2)
  {
    double v6 = objc_alloc(&OBJC_CLASS___CLLocation);
    __int128 v7 = *(_OWORD *)(a4 + 112);
    v25[6] = *(_OWORD *)(a4 + 96);
    v25[7] = v7;
    v26[0] = *(_OWORD *)(a4 + 128);
    *(_OWORD *)((char *)v26 + 12) = *(_OWORD *)(a4 + 140);
    __int128 v8 = *(_OWORD *)(a4 + 48);
    v25[2] = *(_OWORD *)(a4 + 32);
    v25[3] = v8;
    __int128 v9 = *(_OWORD *)(a4 + 80);
    v25[4] = *(_OWORD *)(a4 + 64);
    v25[5] = v9;
    __int128 v10 = *(_OWORD *)(a4 + 16);
    v25[0] = *(_OWORD *)a4;
    v25[1] = v10;
    uint64_t v11 = -[CLLocation initWithClientLocation:](v6, "initWithClientLocation:", v25);
LABEL_5:
    sub_100930488(a1, v11);
    return;
  }

  if (*a3 == 2)
  {
    __int16 v12 = objc_alloc(&OBJC_CLASS___CLLocation);
    __int128 v13 = *(_OWORD *)(a4 + 112);
    v23[6] = *(_OWORD *)(a4 + 96);
    v23[7] = v13;
    v24[0] = *(_OWORD *)(a4 + 128);
    *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)(a4 + 140);
    __int128 v14 = *(_OWORD *)(a4 + 48);
    v23[2] = *(_OWORD *)(a4 + 32);
    v23[3] = v14;
    __int128 v15 = *(_OWORD *)(a4 + 80);
    v23[4] = *(_OWORD *)(a4 + 64);
    v23[5] = v15;
    __int128 v16 = *(_OWORD *)(a4 + 16);
    v23[0] = *(_OWORD *)a4;
    v23[1] = v16;
    uint64_t v11 = -[CLLocation initWithClientLocation:coarseMetaData:]( v12,  "initWithClientLocation:coarseMetaData:",  v23,  *(void *)(a4 + 1320));
    goto LABEL_5;
  }

  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101861108);
  }
  v18 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
  {
    int v19 = *a3;
    *(_DWORD *)buf = 67240192;
    int v29 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "#dsa received unhandled notification %{public, location:CLLocationProvider_Type::Notification}d In onLocationNotification",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101861108);
    }
    int v20 = *a3;
    v27[0] = 67240192;
    v27[1] = v20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "#dsa received unhandled notification %{public, location:CLLocationProvider_Type::Notification}d In onLocationNotification",  v27,  8);
    v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPlaceInferenceSubscription::onLocationNotification(int, const CLLocationProvider_Type::Notification &, cons t CLLocationProvider_Type::NotificationData &)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

void sub_100930844(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (*a3 == 3)
  {
    uint64_t v6 = *(void *)(a4 + 112);
    uint64_t v5 = *(void *)(a4 + 120);
    if (v5 != v6)
    {
      do
      {
        id v8 = objc_alloc(&OBJC_CLASS___RTWiFiAccessPoint);
        *(void *)uint64_t v21 = *(void *)v6;
        sub_1007EC360(__p);
        if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int128 v9 = __p;
        }
        else {
          __int128 v9 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
        }
        id v10 =  objc_msgSend( v8,  "initWithMac:rssi:channel:age:date:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v9),  *(int *)(v6 + 32),  *(int *)(v6 + 40),  +[NSDate dateWithTimeIntervalSinceReferenceDate:]( NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  *(double *)(v6 + 56)),  *(double *)(v6 + 48));
        [*(id *)(a1 + 152) addObject:v10];
        v6 += 88LL;
      }

      while (v6 != v5);
      return;
    }

    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101861108);
    }
    __int128 v16 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v17 = sub_10099EBB4(*a3);
      LODWORD(__p[0].__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "#dsa empty accessPoints, %{pubic}s",  (uint8_t *)__p,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101861108);
      }
      uint64_t v18 = qword_101934978;
      int v19 = sub_10099EBB4(*a3);
      *(_DWORD *)uint64_t v21 = 136315138;
      *(void *)&v21[4] = v19;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v18,  2LL,  "#dsa empty accessPoints, %{pubic}s",  v21,  12);
      __int128 v15 = (std::string *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPlaceInferenceSubscription::onWifiServiceNotification(int, const CLWifiService_Type::Notification &, cons t CLWifiService_Type::NotificationData &)",  "%s\n",  v20);
      if (v15 != __p) {
LABEL_28:
      }
        free(v15);
    }
  }

  else
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101861108);
    }
    uint64_t v11 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
    {
      int v12 = *a3;
      LODWORD(__p[0].__r_.__value_.__l.__data_) = 67240192;
      HIDWORD(__p[0].__r_.__value_.__r.__words[0]) = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "#dsa received unhandled notification %{public, CLWifiService_Type::Notification}d In onWifiServiceNotification",  (uint8_t *)__p,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101861108);
      }
      int v13 = *a3;
      *(_DWORD *)uint64_t v21 = 67240192;
      *(_DWORD *)&v21[4] = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "#dsa received unhandled notification %{public, CLWifiService_Type::Notification}d In onWifiServiceNotification",  v21,  8);
      __int128 v15 = (std::string *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPlaceInferenceSubscription::onWifiServiceNotification(int, const CLWifiService_Type::Notification &, cons t CLWifiService_Type::NotificationData &)",  "%s\n",  v14);
      if (v15 != __p) {
        goto LABEL_28;
      }
    }
  }

void sub_100930C30( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
}

void sub_100930C54(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100930C80(id a1)
{
  qword_101934978 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

void sub_100930CAC(id a1)
{
  qword_101934898 = (uint64_t)os_log_create("com.apple.locationd.Position", "Emergency");
}

__n128 sub_100930CD8(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &off_101861168;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100930D14(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101861168;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100930D38(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_100930D40(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100930D7C()
{
}

void sub_100930D88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  id v3 = (std::__shared_weak_count *)a3[1];
  __int128 v15 = v3;
  *a3 = 0LL;
  a3[1] = 0LL;
  uint64_t v5 = *(void (**)(void *, uint64_t *))a1;
  uint64_t v6 = *(void *)(a1 + 8);
  __int128 v7 = (void *)(a2 + (v6 >> 1));
  if ((v6 & 1) != 0) {
    uint64_t v5 = *(void (**)(void *, uint64_t *))(*v7 + v5);
  }
  uint64_t v16 = v4;
  uint64_t v17 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      unint64_t v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }

  v5(v7, &v16);
  id v10 = v17;
  if (v17)
  {
    uint64_t v11 = (unint64_t *)&v17->__shared_owners_;
    do
      unint64_t v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  if (v15)
  {
    int v13 = (unint64_t *)&v15->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

void sub_100930E5C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_100930E78(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 56 * a3;
    do
    {
      sub_100930EF0(a1, a2, (__int128 *)a2);
      a2 += 56;
      v5 -= 56LL;
    }

    while (v5);
  }

  return a1;
}

void sub_100930EDC(_Unwind_Exception *a1)
{
}

unsigned __int8 *sub_100930EF0(uint64_t a1, unsigned __int8 *a2, __int128 *a3)
{
  __int128 v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_10004B1A4(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }

    int v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if ((sub_100022A24(a1 + 32, i + 16, a2) & 1) != 0) {
            return i;
          }
        }

        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }

          else
          {
            v15 &= v10 - 1;
          }

          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }

  sub_100931170(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1LL);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1LL;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100019E10(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }

    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }

  v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }

  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8LL);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }

      else
      {
        v23 &= v10 - 1;
      }

      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }

  uint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0LL;
  ++*v7;
  sub_100272D04((uint64_t)v25, 0LL);
  return i;
}

void sub_100931158(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100931170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x48uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *unint64_t v8 = 0LL;
  v8[1] = a2;
  __n128 result = sub_1009311E4(v8 + 2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_1009311CC(_Unwind_Exception *a1)
{
}

void *sub_1009311E4(void *__dst, __int128 *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1010DD48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }

  else
  {
    __int128 v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }

  sub_10001A504((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_10093123C(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100931258(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 8LL))(a1);
}

void sub_100931264()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_101340F38;
      v1[3] = unk_101340F48;
      v1[4] = xmmword_101340F58;
      v1[0] = xmmword_101340F18;
      v1[1] = unk_101340F28;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_100931338(_Unwind_Exception *a1)
{
}

double sub_100931350(double a1)
{
  double v1 = -1.0;
  if (a1 >= 0.0)
  {
    double v1 = 1.0;
    if (a1 > 0.0)
    {
      double v1 = 0.0;
      if (a1 <= 5.0) {
        return dbl_10198DAD8[(int)(a1 / 0.02)];
      }
    }
  }

  return v1;
}

uint64_t sub_100931398(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100DA9558(a1, a2);
  *(void *)uint64_t v3 = off_1018611F8;
  *(void *)(v3 + 208) = 0LL;
  sub_100468458((uint64_t)sub_1009314A8, a1, *(void **)(v3 + 32), &v9);
  uint64_t v4 = v9;
  uint64_t v9 = 0LL;
  uint64_t v5 = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = v4;
  if (v5)
  {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    uint64_t v6 = v9;
    uint64_t v9 = 0LL;
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
  }

  [*(id *)(*(void *)(a1 + 208) + 16) register:*(void *)(*(void *)(a1 + 208) + 8) forNotification:2 registrationInfo:0];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_100931680;
  v8[3] = &unk_10181D3D0;
  v8[4] = a1;
  [*(id *)(a1 + 152) setHandler:v8];
  return a1;
}

void sub_100931474(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void *)(v1 + 208);
  *(void *)(v1 + 208) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_100DAA148(v1);
  _Unwind_Resume(a1);
}

void sub_1009314A8(uint64_t a1, _DWORD *a2, __int128 *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101861300);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateObserverWatch::onMotionStateMediatorNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101861300);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      unint64_t v15 = "";
      __int16 v16 = 2082;
      float v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateObserverWatch::onMotionStateMediatorNotification, event:%{public, loca tion:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100931910((char *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100931660( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_100931680(uint64_t a1)
{
  return sub_100931688(*(void *)(a1 + 32));
}

id sub_100931688(uint64_t a1)
{
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101861320);
  }
  uint64_t v2 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *(_DWORD *)(a1 + 117);
    int v4 = *(_DWORD *)(a1 + 121);
    *(_DWORD *)buf = 67109376;
    LODWORD(v14) = v3;
    WORD2(v14) = 1024;
    *(_DWORD *)((char *)&v14 + 6) = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "MotionStateObserver, Sending session update, user type, %d, predicted type, %d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101861320);
    }
    int v6 = *(_DWORD *)(a1 + 117);
    int v7 = *(_DWORD *)(a1 + 121);
    v10[0] = 67109376;
    v10[1] = v6;
    __int16 v11 = 1024;
    int v12 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "MotionStateObserver, Sending session update, user type, %d, predicted type, %d",  v10,  14);
    uint64_t v9 = (uint8_t *)v8;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateObserverWatch::sendSessionUpdate()", "%s\n", v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  *(_DWORD *)buf = 0;
  __int128 v14 = *(_OWORD *)(a1 + 109);
  __int128 v15 = *(_OWORD *)(a1 + 125);
  int v16 = *(_DWORD *)(a1 + 141);
  return sub_100931C30(a1, (uint64_t)buf);
}

uint64_t sub_100931884(void *a1)
{
  *a1 = off_1018611F8;
  uint64_t v2 = a1[26];
  a1[26] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  return sub_100DAA148((uint64_t)a1);
}

void sub_1009318C8(void *a1)
{
  *a1 = off_1018611F8;
  uint64_t v2 = a1[26];
  a1[26] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  int v3 = (void *)sub_100DAA148((uint64_t)a1);
  operator delete(v3);
}

char *sub_100931910(char *result, uint64_t a2, _DWORD *a3, __int128 *a4)
{
  if (*a3 == 2)
  {
    uint64_t v5 = (uint64_t)result;
    __int128 v6 = a4[13];
    __int128 v29 = a4[12];
    __int128 v30 = v6;
    uint64_t v31 = *((void *)a4 + 28);
    __int128 v7 = a4[9];
    __int128 v25 = a4[8];
    __int128 v26 = v7;
    __int128 v8 = a4[11];
    __int128 v27 = a4[10];
    __int128 v28 = v8;
    __int128 v9 = a4[5];
    __int128 v21 = a4[4];
    __int128 v22 = v9;
    __int128 v10 = a4[7];
    __int128 v23 = a4[6];
    __int128 v24 = v10;
    __int128 v11 = a4[1];
    __int128 v17 = *a4;
    __int128 v18 = v11;
    __int128 v12 = a4[3];
    __int128 v19 = a4[2];
    __int128 v20 = v12;
    if (!(void)v11 || (void)v18 == 9LL || (void)v18 == 7LL)
    {
      else {
        int v13 = 0;
      }
      *(void *)&__int128 v14 = *((void *)&v18 + 1);
      *((void *)&v14 + 1) = __PAIR64__( *(_DWORD *)(v5 + 121),  +[CMWorkout CLMotionActivityTypeFromCMWorkoutType:]( &OBJC_CLASS___CMWorkout,  "CLMotionActivityTypeFromCMWorkoutType:",  (void)v24));
      int v15 = v13;
      v16[1] = 0LL;
      v16[0] = 0LL;
      uuid_copy((unsigned __int8 *)v16, (const unsigned __int8 *)a4 + 96);
      [*(id *)(v5 + 152) setNextFireDelay:1.0 interval:60.0];
      return (char *)sub_100DAA21C(v5, &v14);
    }

    else
    {
      __n128 result = (char *)sub_100BEF640((uint64_t)&v17);
      if ((_DWORD)result == 2) {
        return sub_100931A6C((char *)v5);
      }
    }
  }

  return result;
}

char *sub_100931A6C(char *result)
{
  uint64_t v1 = (uint64_t)result;
  if (*(_DWORD *)(result + 117) || *(_DWORD *)(result + 121))
  {
    sub_100DAA634((uint64_t)result);
    sub_100931688(v1);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101861320);
    }
    uint64_t v2 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "MotionStateObserver, Disabling update timer.",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101861320);
      }
      v5[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "MotionStateObserver, Disabling update timer.",  v5,  2);
      int v4 = (uint8_t *)v3;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateObserverWatch::stopSessionAndTimer()", "%s\n", v3);
      if (v4 != buf) {
        free(v4);
      }
    }

    return (char *)[*(id *)(v1 + 152) setNextFireDelay:1.79769313e308 interval:1.79769313e308];
  }

  return result;
}

id sub_100931C30(uint64_t a1, uint64_t a2)
{
  int v3 = +[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", a2, 40LL);
  id v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLCompanionNotifier");
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_100931CB8;
  v6[3] = &unk_101840D20;
  v6[4] = v3;
  return [v4 doAsync:v6];
}

id sub_100931CB8(uint64_t a1, uint64_t a2)
{
  return sub_10039FB50(120.0, a2, 18, *(void **)(a1 + 32), 300LL, 0LL, 0LL, 0LL, 0, 0LL);
}

uint64_t sub_100931D00(uint64_t result, _DWORD *a2, uint64_t *a3)
{
  if (*a2 == 10)
  {
    uint64_t v4 = result;
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101861320);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *a3;
      int v7 = *((_DWORD *)a3 + 2);
      int v8 = *((_DWORD *)a3 + 3);
      int v9 = *((_DWORD *)a3 + 4);
      *(_DWORD *)buf = 134218752;
      *(void *)&uint8_t buf[4] = v6;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = v7;
      *(_WORD *)&buf[18] = 1024;
      int v25 = v8;
      __int16 v26 = 1024;
      int v27 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "MotionStateObserver,RemoteState,startTime,%.3f,activityType,%d,vehicularConfidence,%d,vehicleType,%d",  buf,  0x1Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101861320);
      }
      uint64_t v10 = *a3;
      int v11 = *((_DWORD *)a3 + 2);
      int v12 = *((_DWORD *)a3 + 3);
      int v13 = *((_DWORD *)a3 + 4);
      int v16 = 134218752;
      uint64_t v17 = v10;
      __int16 v18 = 1024;
      int v19 = v11;
      __int16 v20 = 1024;
      int v21 = v12;
      __int16 v22 = 1024;
      int v23 = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "MotionStateObserver,RemoteState,startTime,%.3f,activityType,%d,vehicularConfidence,%d,vehicleType,%d",  COERCE_DOUBLE(&v16),  30);
      int v15 = (char *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateObserverWatch::handleCompanionNotification(const CLCompanionNotifier_Type::Notificatio n &, const CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    sub_100DAA888(v4, (__int128 *)a3);
    *(_OWORD *)buf = *(_OWORD *)a3;
    *(_DWORD *)&buf[16] = *((_DWORD *)a3 + 4);
    int v16 = 1;
    return (*(uint64_t (**)(uint64_t, int *, _BYTE *, uint64_t, uint64_t, void))(*(void *)v4 + 152LL))( v4,  &v16,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
  }

  return result;
}

void sub_100931F50(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100931F7C(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_100931FA8()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_101999328, (void *)&_mh_execute_header);
}

void *sub_100931FEC@<X0>(unsigned int a1@<W0>, void *a2@<X8>)
{
  if (a1 > 8) {
    uint64_t v2 = "UNKNOWN";
  }
  else {
    uint64_t v2 = off_101861340[a1];
  }
  return sub_1010DDBC0(a2, v2);
}

void sub_100932018(uint64_t a1)
{
  __int128 v11 = 0u;
  __int128 v10 = 0u;
  __int128 v9 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v5 = 0u;
  __int128 v6 = 0u;
  __int128 v4 = 0u;
  memset(v3, 0, sizeof(v3));
  sub_100C7E27C((uint64_t)v3);
  *(_OWORD *)(a1 + 8) = v3[0];
  *(_WORD *)(a1 + 24) = v3[1];
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(void *)(a1 + 40) = v2;
    operator delete(v2);
  }

  *(_OWORD *)(a1 + 32) = *(_OWORD *)((char *)&v3[1] + 8);
  *(void *)(a1 + 48) = *((void *)&v3[2] + 1);
  memset((char *)&v3[1] + 8, 0, 24);
  *(_OWORD *)(a1 + 120) = v8;
  *(_OWORD *)(a1 + 136) = v9;
  *(_OWORD *)(a1 + 152) = v10;
  *(_OWORD *)(a1 + 168) = v11;
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 88) = v6;
  *(_OWORD *)(a1 + 104) = v7;
  sub_1009321C0((void *)(a1 + 184), (uint64_t)v12);
  sub_100210A00(v12);
  if (*((void *)&v3[1] + 1))
  {
    *(void *)&v3[2] = *((void *)&v3[1] + 1);
    operator delete(*((void **)&v3[1] + 1));
  }

void *sub_100932138(void *a1)
{
  *a1 = off_101861398;
  sub_100210A00(a1 + 23);
  uint64_t v2 = (void *)a1[4];
  if (v2)
  {
    a1[5] = v2;
    operator delete(v2);
  }

  return a1;
}

BOOL sub_100932178(uint64_t a1, double *a2)
{
  return sub_100C7E2D4(a1 + 8, a2);
}

void sub_100932180(void *a1)
{
  *a1 = off_101861398;
  sub_100210A00(a1 + 23);
  uint64_t v2 = (void *)a1[4];
  if (v2)
  {
    a1[5] = v2;
    operator delete(v2);
  }

  operator delete(a1);
}

uint64_t sub_1009321C0(void *a1, uint64_t a2)
{
  __int128 v4 = (void **)a1[1];
  uint64_t v5 = a1[2];
  a1[5] = 0LL;
  unint64_t v6 = v5 - (void)v4;
  if (v6 >= 0x11)
  {
    do
    {
      operator delete(*v4);
      uint64_t v7 = a1[2];
      __int128 v4 = (void **)(a1[1] + 8LL);
      a1[1] = v4;
      unint64_t v6 = v7 - (void)v4;
    }

    while (v6 > 0x10);
  }

  if (v6 >> 3 == 1)
  {
    uint64_t v8 = 85LL;
    goto LABEL_7;
  }

  if (v6 >> 3 == 2)
  {
    uint64_t v8 = 170LL;
LABEL_7:
    a1[4] = v8;
  }

  sub_100932260(a1);
  uint64_t result = sub_100932390((uint64_t)a1, a2);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = *(void *)(a2 + 40);
  *(void *)(a2 + 32) = 0LL;
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100932260(void *a1)
{
  if (a1[5])
  {
    sub_100211164((uint64_t)a1, 0);
    sub_10025BDF8(a1, 0);
  }

  else
  {
    uint64_t v3 = a1[1];
    for (uint64_t i = a1[2]; i != v3; a1[2] = i)
    {
      operator delete(*(void **)(i - 8));
      uint64_t v3 = a1[1];
      uint64_t i = a1[2] - 8LL;
    }

    a1[4] = 0LL;
  }

  sub_1009322D0((uint64_t)a1);
}

void sub_1009322D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v2 = a1 + 24;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = (v5 - v4) >> 3;
  if (v6 < (v3 - *(void *)a1) >> 3)
  {
    if (v5 == v4)
    {
      __int128 v10 = 0LL;
      uint64_t v7 = 0LL;
    }

    else
    {
      uint64_t v7 = (char *)sub_1000071BC(v2, v6);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      __int128 v10 = &v7[8 * v9];
      uint64_t v11 = v5 - v8;
      if (v5 != v8)
      {
        uint64_t v12 = 0LL;
        uint64_t v13 = 8 * (v11 >> 3);
        do
        {
          *(void *)&v7[v12] = *(void *)(v8 + v12);
          v12 += 8LL;
        }

        while (v13 != v12);
        uint64_t v5 = *(void *)(a1 + 8);
        uint64_t v14 = *(void *)(a1 + 16);
        goto LABEL_9;
      }
    }

    uint64_t v14 = v5;
LABEL_9:
    uint64_t v15 = v14 - v5;
    int v16 = *(void **)a1;
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = &v7[v15];
    *(void *)(a1 + 24) = v10;
    if (v16) {
      operator delete(v16);
    }
  }

uint64_t sub_100932390(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 != v5) {
    *(void *)(a1 + 16) = v4 + ((v5 - v4 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  }
  sub_1009322D0(a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return a1;
}

uint64_t sub_100932DC4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString(a2);

        *(void *)(a1 + 24) = String;
        goto LABEL_95;
      case 2u:
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0LL;
        *(_BYTE *)(a1 + 60) |= 1u;
        while (2)
        {
          unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v17 == -1LL || v17 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v18 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 1;
            v16 |= (unint64_t)(v18 & 0x7F) << v14;
            if (v18 < 0)
            {
              v14 += 7;
              BOOL v9 = v15++ >= 9;
              if (v9)
              {
                LODWORD(v16) = 0;
                goto LABEL_72;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_72:
        uint64_t v43 = 8LL;
        goto LABEL_89;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0LL;
        *(_BYTE *)(a1 + 60) |= 8u;
        while (2)
        {
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 == -1LL || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v23 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
            v21 |= (unint64_t)(v23 & 0x7F) << v19;
            if (v23 < 0)
            {
              v19 += 7;
              BOOL v9 = v20++ >= 9;
              if (v9)
              {
                uint64_t v21 = 0LL;
                goto LABEL_76;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v21 = 0LL;
        }
LABEL_76:
        BOOL v44 = v21 != 0;
        uint64_t v45 = 56LL;
        goto LABEL_94;
      case 4u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v16 = 0LL;
        *(_BYTE *)(a1 + 60) |= 4u;
        while (2)
        {
          unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v26 == -1LL || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v27 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
            v16 |= (unint64_t)(v27 & 0x7F) << v24;
            if (v27 < 0)
            {
              v24 += 7;
              BOOL v9 = v25++ >= 9;
              if (v9)
              {
                LODWORD(v16) = 0;
                goto LABEL_80;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_80:
        uint64_t v43 = 36LL;
        goto LABEL_89;
      case 5u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v16 = 0LL;
        while (2)
        {
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 == -1LL || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v31 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
            v16 |= (unint64_t)(v31 & 0x7F) << v28;
            if (v31 < 0)
            {
              v28 += 7;
              BOOL v9 = v29++ >= 9;
              if (v9)
              {
                LODWORD(v16) = 0;
                goto LABEL_84;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_84:
        uint64_t v43 = 40LL;
        goto LABEL_89;
      case 6u:
        v32 = objc_alloc_init(&OBJC_CLASS___CLAuthSyncVectorClock);
        [(id)a1 addVectorClocks:v32];

        goto LABEL_54;
      case 7u:
        v33 = objc_alloc_init(&OBJC_CLASS___CLCompanionSyncInterestZone);
        [(id)a1 addInterestZones:v33];

        if (PBReaderPlaceMark(a2, v46) && (sub_10040D660((uint64_t)v33, a2) & 1) != 0)
        {
LABEL_54:
          PBReaderRecallMark(a2, v46);
LABEL_95:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
      case 8u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v16 = 0LL;
        *(_BYTE *)(a1 + 60) |= 2u;
        while (2)
        {
          unint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v36 == -1LL || v36 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v37 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v36 + 1;
            v16 |= (unint64_t)(v37 & 0x7F) << v34;
            if (v37 < 0)
            {
              v34 += 7;
              BOOL v9 = v35++ >= 9;
              if (v9)
              {
                LODWORD(v16) = 0;
                goto LABEL_88;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_88:
        uint64_t v43 = 32LL;
LABEL_89:
        *(_DWORD *)(a1 + v43) = v16;
        goto LABEL_95;
      case 9u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0LL;
        *(_BYTE *)(a1 + 60) |= 0x10u;
        while (2)
        {
          unint64_t v41 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v41 == -1LL || v41 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v42 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v41);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v41 + 1;
            v40 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              BOOL v9 = v39++ >= 9;
              if (v9)
              {
                uint64_t v40 = 0LL;
                goto LABEL_93;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v40 = 0LL;
        }
LABEL_93:
        BOOL v44 = v40 != 0;
        uint64_t v45 = 57LL;
LABEL_94:
        *(_BYTE *)(a1 + v45) = v44;
        goto LABEL_95;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_95;
    }
  }

void sub_100934188(id a1)
{
  qword_101999340 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLPressureCalibrationDatabaseSilo");
}

uint64_t sub_100934244(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100935AF4;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_1019A1868 != -1) {
    dispatch_once(&qword_1019A1868, block);
  }
  return qword_1019A1860;
}

void sub_1009343E4(id a1)
{
  if (sub_1005BDE54())
  {
    if (sub_1004FC7C4()) {
      byte_101999350 = 1;
    }
  }

uint64_t sub_100934410(uint64_t a1, void *a2)
{
  char v4 = sub_100E44F04((void *)a1, a2) + 2;
  sub_1009346DC((uint64_t)v4, "CLPressureCalibrationDatabase", a2);
  *(void *)a1 = off_101861450;
  *(void *)(a1 + 16) = off_1018614C8;
  sub_100934778((uint64_t)&v13);
  sub_1003B35F4(a1 + 128, &v13);
  if (v15 < 0) {
    operator delete(__p[0]);
  }
  *(void *)(a1 + 264) = 0xFFFFFFFFLL;
  *(void *)(a1 + 272) = 0xFFFFFFFF00000000LL;
  *(void *)(a1 + 288) = 0LL;
  *(void *)(a1 + 296) = 0LL;
  *(void *)(a1 + 280) = 0LL;
  *(_BYTE *)(a1 + 304) = 0;
  *(void *)(a1 + 320) = 0LL;
  *(void *)(a1 + 328) = 0LL;
  *(void *)(a1 + 312) = 0LL;
  *(_DWORD *)(a1 + 336) = 0x7FFFFFFF;
  sub_100821188(a1 + 344, 20, 55);
  sub_100B14CF0((void *)(a1 + 456), 0LL, 0LL);
  LOBYTE(v13) = 0;
  sub_1012049AC((unsigned __int8 *)(a1 + 472), "KeepAllSensorCalibrationRoundsInDb", (unsigned __int8 *)&v13, 0);
  if ((sub_1003B59A0( a1 + 128,  "PressureCalibration",  (const char **)&off_101861680,  (const std::string::value_type **)&off_10198E370,  1) & 1) == 0) {
    sub_100934818((void *)a1);
  }
  __int128 v13 = *(_OWORD *)off_101861598;
  *(_OWORD *)__p = *(_OWORD *)&off_1018615A8;
  *(void *)(a1 + 456) = sub_1003C0BC0(a1 + 128, "PressureCalibration", (const char **)&v13, 0);
  *(void *)(a1 + 464) = v5;
  sub_100934C2C(a1 + 312);
  char v8 = 0LL;
  BOOL v9 = 0LL;
  uint64_t v10 = 0LL;
  sub_100938850( &v8,  *(const void **)(a1 + 280),  *(void *)(a1 + 288),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 288) - *(void *)(a1 + 280)) >> 2));
  *(_BYTE *)(a1 + 304) = sub_1009355A8((int **)&v8, (float *)(a1 + 312));
  if (v8)
  {
    BOOL v9 = v8;
    operator delete(v8);
  }

  sub_1004F2598();
  if ((sub_1004F75F8() & 1) != 0)
  {
    int v6 = 8;
  }

  else
  {
    sub_1004F2598();
    int v6 = 10;
  }

  *(_DWORD *)(a1 + 336) = v6;
LABEL_12:
  if (*(_BYTE *)(a1 + 304))
  {
    __int128 v12 = *(_OWORD *)(a1 + 312);
    int v11 = 0;
    (*(void (**)(void *, int *, __int128 *, uint64_t, uint64_t, void))(*v4 + 152LL))( v4,  &v11,  &v12,  1LL,  0xFFFFFFFFLL,  0LL);
  }

  return a1;
}

void sub_100934648( _Unwind_Exception *a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (__p) {
    operator delete(__p);
  }
  sub_100821200(v25, a2);
  char v27 = (void *)v22[35];
  if (v27)
  {
    v22[36] = v27;
    operator delete(v27);
  }

  sub_1003B3930(v24);
  sub_100935970(v23);
  sub_100E450D4(v22);
  _Unwind_Resume(a1);
}

uint64_t sub_1009346DC(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101861770;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_10093475C(_Unwind_Exception *exception_object)
{
}

void sub_100934778(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x400000000LL;
  *(_WORD *)(a1 + 8) = 0;
  uint64_t v2 = (_BYTE *)(a1 + 16);
  if (SHIBYTE(v5) < 0)
  {
    sub_1010DD48C(v2, __p[0], (unint64_t)__p[1]);
    int v3 = SHIBYTE(v5);
    *(void *)(a1 + 40) = 0LL;
    if (v3 < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    *(_OWORD *)uint64_t v2 = *(_OWORD *)__p;
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = 0LL;
  }

void sub_1009347FC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100934818(void *a1)
{
  a1[36] = a1[35];
  uint64_t v35 = (uint64_t)(a1 + 16);
  sub_1003C0D54( (uint64_t)(a1 + 16),  "SELECT Round, TemperatureOffsetCoefficient, MedianAbsoluteDeviation FROM PressureCalibration WHERE Round IN (SELECT DISTINCT Round FROM PressureCalibration ORDER BY Round DESC LIMIT ?) ORDER BY Round",  __p);
  uint64_t v2 = __p[0].__r_.__value_.__r.__words[0];
  int v3 = (sqlite3_stmt *)sub_100019240((uint64_t)__p[0].__r_.__value_.__l.__data_);
  sub_1003C28BC(v3, 1, 100);
  char v4 = (void **)(a1 + 35);
  while (1)
  {
    uint64_t v5 = (sqlite3_stmt *)sub_100019240(v2);
    int v6 = sqlite3_step(v5);
    if (v6 != 100) {
      break;
    }
    unint64_t v7 = (sqlite3_stmt *)sub_100019240(v2);
    double v8 = sqlite3_column_double(v7, 1);
    BOOL v9 = (sqlite3_stmt *)sub_100019240(v2);
    double v10 = sqlite3_column_double(v9, 2);
    int v11 = (sqlite3_stmt *)sub_100019240(v2);
    int v12 = sqlite3_column_int(v11, 0);
    int v13 = v12;
    float v14 = v8;
    float v15 = v10;
    unint64_t v17 = (float *)a1[36];
    unint64_t v16 = a1[37];
    if ((unint64_t)v17 >= v16)
    {
      char v19 = (float *)*v4;
      unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * (((char *)v17 - (_BYTE *)*v4) >> 2);
      unint64_t v21 = v20 + 1;
      if (v20 + 1 > 0x1555555555555555LL) {
        sub_100007008();
      }
      unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v16 - (void)v19) >> 2);
      if (2 * v22 > v21) {
        unint64_t v21 = 2 * v22;
      }
      if (v22 >= 0xAAAAAAAAAAAAAAALL) {
        unint64_t v23 = 0x1555555555555555LL;
      }
      else {
        unint64_t v23 = v21;
      }
      if (v23)
      {
        uint64_t v24 = (char *)sub_1005AADE4((uint64_t)(a1 + 37), v23);
        char v19 = (float *)a1[35];
        unint64_t v17 = (float *)a1[36];
      }

      else
      {
        uint64_t v24 = 0LL;
      }

      uint64_t v25 = (float *)&v24[12 * v20];
      *uint64_t v25 = v14;
      v25[1] = v15;
      *((_DWORD *)v25 + 2) = v13;
      unint64_t v26 = v25;
      if (v17 != v19)
      {
        do
        {
          uint64_t v27 = *(void *)(v17 - 3);
          v17 -= 3;
          int v28 = *((_DWORD *)v17 + 2);
          *(void *)(v26 - 3) = v27;
          v26 -= 3;
          *((_DWORD *)v26 + 2) = v28;
        }

        while (v17 != v19);
        char v19 = (float *)*v4;
      }

      char v18 = v25 + 3;
      a1[35] = v26;
      a1[36] = v25 + 3;
      a1[37] = &v24[12 * v23];
      if (v19) {
        operator delete(v19);
      }
    }

    else
    {
      *unint64_t v17 = v14;
      v17[1] = v15;
      char v18 = v17 + 3;
      *((_DWORD *)v17 + 2) = v12;
    }

    a1[36] = v18;
  }

  if (v6 != 101)
  {
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_101861740);
    }
    unsigned int v29 = (os_log_s *)qword_1019345B8;
    if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_FAULT))
    {
      sub_1003C3A08(v35, __p);
      unint64_t v30 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0 ? __p : (std::string *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v30;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_FAULT, "SQL error: %s", (uint8_t *)&buf, 0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_101861740);
      }
      uint64_t v31 = qword_1019345B8;
      sub_1003C3A08(v35, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::string buf = &buf;
      }
      else {
        p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
      }
      int v37 = 136315138;
      char v38 = p_buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v31,  17LL,  "SQL error: %s",  (const char *)&v37);
      char v34 = v33;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLPressureCalibrationDatabase::loadFromDatabase()",  "%s\n",  (const char *)v34);
      if (v34 != __p) {
        free(v34);
      }
    }
  }

  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
}

void sub_100934BE8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100934C2C(uint64_t a1)
{
  char v42 = @"name";
  uint64_t v43 = @"pressure";
  uint64_t v40 = @"IOPropertyMatch";
  unint64_t v41 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v43,  &v42,  1LL);
  io_service_t MatchingService = IOServiceGetMatchingService( kIOMainPortDefault,  (CFDictionaryRef) +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v41,  &v40,  1LL));
  CFProperty = (void *)IORegistryEntryCreateCFProperty( MatchingService,  @"pressure-offset-calibration",  kCFAllocatorDefault,  0);
  IOObjectRelease(MatchingService);
  if (CFProperty)
  {
    CFTypeID v4 = CFGetTypeID(CFProperty);
    if (v4 == CFDataGetTypeID())
    {
      uint64_t v5 = (int *)[CFProperty bytes];
      int v6 = (char *)[CFProperty length];
      if ((unint64_t)v6 <= 3)
      {
        if (qword_1019345B0 != -1) {
          dispatch_once(&qword_1019345B0, &stru_101861740);
        }
        unint64_t v7 = (os_log_s *)qword_1019345B8;
        if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "data not long enough to get version properly",  buf,  2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019345B0 != -1) {
            dispatch_once(&qword_1019345B0, &stru_101861740);
          }
          LOWORD(v29) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  17LL,  "data not long enough to get version properly",  &v29,  2);
          BOOL v9 = (uint8_t *)v8;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLPressureCalibrationDatabase::readFactoryData(CLMotionTypePressureBiasFit &)",  "%s\n",  v8);
          if (v9 != buf) {
            free(v9);
          }
        }

        goto LABEL_54;
      }

      int v11 = v6;
      int v12 = *v5;
      if (*v5 != 2 && v12 != 5)
      {
        if (qword_1019345B0 != -1) {
          dispatch_once(&qword_1019345B0, &stru_101861740);
        }
        float v14 = (os_log_s *)qword_1019345B8;
        if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)std::string buf = 67109632;
          *(_DWORD *)char v34 = v12;
          *(_WORD *)&v34[4] = 1024;
          *(_DWORD *)&v34[6] = 2;
          LOWORD(v35) = 1024;
          *(_DWORD *)((char *)&v35 + 2) = 5;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "SPPO version (%u) does not match expected versions (%u, %u)",  buf,  0x14u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019345B0 != -1) {
            dispatch_once(&qword_1019345B0, &stru_101861740);
          }
          *(_WORD *)&v30[4] = 1024;
          *(_DWORD *)&v30[6] = 2;
          __int16 v31 = 1024;
          int v32 = 5;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  17LL,  "SPPO version (%u) does not match expected versions (%u, %u)",  &v29,  20,  67109632);
          int v28 = (uint8_t *)v27;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLPressureCalibrationDatabase::readFactoryData(CLMotionTypePressureBiasFit &)",  "%s\n",  v27);
          if (v28 != buf) {
            free(v28);
          }
        }
      }

      if ((unint64_t)(v11 - 20) > 0xFFFFFFFFFFFFFFEFLL)
      {
        if (qword_1019345B0 != -1) {
          dispatch_once(&qword_1019345B0, &stru_101861740);
        }
        unint64_t v21 = (os_log_s *)qword_1019345B8;
        if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 134217984;
          *(void *)char v34 = 0x4043000000000000LL;
          _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "Warning: using default factory calibrated temperature: %f",  buf,  0xCu);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_52;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1019345B0 != -1) {
          dispatch_once(&qword_1019345B0, &stru_101861740);
        }
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "Warning: using default factory calibrated temperature: %f");
      }

      else
      {
        float v15 = (float)v5[4];
        if (qword_1019345B0 != -1) {
          dispatch_once(&qword_1019345B0, &stru_101861740);
        }
        float v16 = v15 * 0.0039062;
        unint64_t v17 = (os_log_s *)qword_1019345B8;
        if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 134217984;
          *(double *)char v34 = v16;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "factory calibrated temperature from syscfg: %f",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019345B0 != -1) {
            dispatch_once(&qword_1019345B0, &stru_101861740);
          }
          int v29 = 134217984;
          *(double *)unint64_t v30 = v16;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "factory calibrated temperature from syscfg: %f",  COERCE_DOUBLE(&v29));
          uint64_t v25 = (uint8_t *)v24;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLPressureCalibrationDatabase::readFactoryData(CLMotionTypePressureBiasFit &)",  "%s\n",  v24);
          if (v25 != buf) {
            free(v25);
          }
        }

        if (v16 >= 10.0 && v16 <= 70.0) {
          goto LABEL_53;
        }
        if (qword_1019345B0 != -1) {
          dispatch_once(&qword_1019345B0, &stru_101861740);
        }
        char v19 = (os_log_s *)qword_1019345B8;
        if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 134218752;
          *(double *)char v34 = v16;
          *(_WORD *)&v34[8] = 2048;
          uint64_t v35 = 0x4024000000000000LL;
          __int16 v36 = 2048;
          uint64_t v37 = 0x4051800000000000LL;
          __int16 v38 = 2048;
          uint64_t v39 = 0x4043000000000000LL;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "Warning: factory calibrated temperature (%f) is not within acceptable bounds: [%f, %f], using default: %f",  buf,  0x2Au);
        }

        if (!sub_1002921D0(115, 2))
        {
LABEL_52:
          float v16 = 38.0;
LABEL_53:
          *(float *)(a1 + 4) = v16;
LABEL_54:

          return;
        }

        bzero(buf, 0x65CuLL);
        if (qword_1019345B0 != -1) {
          dispatch_once(&qword_1019345B0, &stru_101861740);
        }
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "Warning: factory calibrated temperature (%f) is not within acceptable bounds: [%f, %f], using default: %f");
      }

      unint64_t v26 = (uint8_t *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLPressureCalibrationDatabase::readFactoryData(CLMotionTypePressureBiasFit &)",  "%s\n",  v20);
      if (v26 != buf) {
        free(v26);
      }
      goto LABEL_52;
    }
  }

  if (qword_1019345B0 != -1) {
    dispatch_once(&qword_1019345B0, &stru_101861740);
  }
  double v10 = (os_log_s *)qword_1019345B8;
  if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "Cannot get SPPO property", buf, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_101861740);
    }
    LOWORD(v29) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  17LL,  "Cannot get SPPO property",  &v29,  2);
    unint64_t v23 = (uint8_t *)v22;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLPressureCalibrationDatabase::readFactoryData(CLMotionTypePressureBiasFit &)",  "%s\n",  v22);
    if (v23 != buf) {
      free(v23);
    }
  }

  if (CFProperty) {
    CFRelease(CFProperty);
  }
}

BOOL sub_1009355A8(int **a1, float *a2)
{
  int v3 = *a1;
  CFTypeID v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * (v4 - *a1);
  if (v5 <= 2)
  {
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_101861740);
    }
    unint64_t v20 = (os_log_s *)qword_1019345B8;
    if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * (a1[1] - *a1);
      *(_DWORD *)std::string buf = 134218240;
      *(void *)&uint8_t buf[4] = v21;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = 3;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "size of tco list (%lu) is less than minimum (%d) required for median computation",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345B0 != -1) {
        dispatch_once(&qword_1019345B0, &stru_101861740);
      }
      unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * (a1[1] - *a1);
      LODWORD(__p[0]) = 134218240;
      *(void **)((char *)__p + 4) = (void *)v25;
      WORD2(__p[1]) = 1024;
      *(_DWORD *)((char *)&__p[1] + 6) = 3;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "size of tco list (%lu) is less than minimum (%d) required for median computation",  __p,  18);
      uint64_t v27 = (uint8_t *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLPressureCalibrationDatabase::computeMedianTemperatureOffsetCoefficient(const std::vector<Temperatu reOffsetCoefficientRound>, CLMotionTypePressureBiasFit &)",  "%s\n",  v26);
      if (v27 != buf) {
        free(v27);
      }
    }

    *a2 = 0.0;
  }

  else
  {
    memset(__p, 0, 24);
    if (v5 <= 9) {
      int v6 = v3;
    }
    else {
      int v6 = v4 - 30;
    }
    if (v4 == v6)
    {
      unint64_t v7 = 0LL;
      char v18 = 0LL;
    }

    else
    {
      unint64_t v7 = 0LL;
      do
      {
        int v8 = *v6;
        if (v7 >= __p[2])
        {
          BOOL v9 = (char *)__p[0];
          uint64_t v10 = (v7 - (char *)__p[0]) >> 2;
          unint64_t v11 = v10 + 1;
          int64_t v12 = (char *)__p[2] - (char *)__p[0];
          else {
            unint64_t v13 = v11;
          }
          if (v13)
          {
            float v14 = (char *)sub_10000956C((uint64_t)&__p[2], v13);
            BOOL v9 = (char *)__p[0];
            unint64_t v7 = (char *)__p[1];
          }

          else
          {
            float v14 = 0LL;
          }

          float v15 = &v14[4 * v10];
          *(_DWORD *)float v15 = v8;
          float v16 = v15 + 4;
          while (v7 != v9)
          {
            int v17 = *((_DWORD *)v7 - 1);
            v7 -= 4;
            *((_DWORD *)v15 - 1) = v17;
            v15 -= 4;
          }

          __p[0] = v15;
          __p[1] = v16;
          __p[2] = &v14[4 * v13];
          if (v9) {
            operator delete(v9);
          }
          unint64_t v7 = (char *)v16;
        }

        else
        {
          *(_DWORD *)unint64_t v7 = v8;
          v7 += 4;
        }

        __p[1] = v7;
        v6 += 3;
      }

      while (v6 != v4);
      char v18 = __p[0];
    }

    memset(buf, 0, 24);
    sub_10001B72C(buf, v18, (uint64_t)v7, (v7 - (_BYTE *)v18) >> 2);
    float v23 = sub_1002C3BB8(*(float **)buf, *(float **)&buf[8], v22);
    if (*(void *)buf)
    {
      *(void *)&buf[8] = *(void *)buf;
      operator delete(*(void **)buf);
    }

    *a2 = v23;
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }

  return v5 > 2;
}

void sub_10093592C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  if (a11) {
    operator delete(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100935970(uint64_t a1)
{
  *(void *)a1 = off_101861770;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

void *sub_1009359E4@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

void *sub_100935A5C@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_100935AD4()
{
  return 1LL;
}

uint64_t sub_100935ADC()
{
  return 1LL;
}

uint64_t sub_100935AE4()
{
  return 1LL;
}

uint64_t sub_100935AEC()
{
  return 1LL;
}

uint64_t sub_100935AF4(uint64_t a1)
{
  uint64_t v2 = operator new(0x1E0uLL);
  uint64_t result = sub_100934410((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A1860 = (uint64_t)v2;
  return result;
}

void sub_100935B2C(_Unwind_Exception *a1)
{
}

void sub_100935B40(uint64_t a1, int a2)
{
  if (qword_1019345B0 != -1) {
    dispatch_once(&qword_1019345B0, &stru_101861740);
  }
  CFTypeID v4 = (os_log_s *)qword_1019345B8;
  if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67109120;
    int v14 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Starting pressure calibration, user initiated, %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_101861740);
    }
    v12[0] = 67109120;
    v12[1] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "Starting pressure calibration, user initiated, %d",  v12);
    BOOL v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLPressureCalibrationDatabase::startCalibration(BOOL)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  if (!*(void *)(a1 + 328)) {
    goto LABEL_13;
  }
  if (qword_1019345B0 != -1) {
    dispatch_once(&qword_1019345B0, &stru_101861740);
  }
  unint64_t v5 = (os_log_s *)qword_1019345B8;
  if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Pressure dispatcher was expected to be null.",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_101861740);
    }
    LOWORD(v12[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  17LL,  "Pressure dispatcher was expected to be null.",  v12,  2);
    unint64_t v11 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLPressureCalibrationDatabase::startCalibration(BOOL)",  "%s\n",  v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  if (!*(void *)(a1 + 328))
  {
LABEL_13:
    int v6 = operator new(0x38uLL);
    sub_10122121C(v6, *(void **)(a1 + 56), (uint64_t)sub_100935E84, a1, 0LL);
    *(void *)(a1 + 328) = v6;
    uint64_t v7 = sub_1005BDE54();
    sub_1006DCB40(v7, 0, *(void *)(a1 + 328), 0.0399999991);
  }

void sub_100935E68(_Unwind_Exception *a1)
{
}

void sub_100935E84(__n128 *a1, uint64_t a2)
{
}

uint64_t sub_100935EC4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 288);
  if (*(void *)(result + 280) == v1)
  {
    int v3 = 0;
    goto LABEL_5;
  }

  int v2 = *(_DWORD *)(v1 - 4);
  if ((v2 & 0x80000000) == 0)
  {
    int v3 = v2 + 1;
LABEL_5:
    *(_DWORD *)(result + 264) = v3;
    return result;
  }

  uint64_t v4 = sub_101253E9C();
  return sub_100935EFC(v4);
}

uint64_t sub_100935EFC(uint64_t result)
{
  *(_DWORD *)(result + 264) = -1;
  return result;
}

uint64_t sub_100935F08(uint64_t a1)
{
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a1 + 264);
  *(void *)(a1 + 268) = *(void *)v16;
  if (qword_1019345B0 != -1) {
    dispatch_once(&qword_1019345B0, &stru_101861740);
  }
  int v2 = (os_log_s *)qword_1019345B8;
  if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134219008;
    *(double *)&uint8_t buf[4] = v16[0];
    *(_WORD *)&buf[12] = 2048;
    *(double *)&buf[14] = v16[1];
    __int16 v32 = 1024;
    int v33 = v17;
    __int16 v34 = 1024;
    int v35 = v18;
    __int16 v36 = 1024;
    int v37 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "temperatureOffsetCoefficient,%f,medianAbsoluteDeviation,%f,minTemp,%d,maxTemp,%d,valid,%d",  buf,  0x28u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_101861740);
    }
    int v21 = 134219008;
    double v22 = v16[0];
    __int16 v23 = 2048;
    double v24 = v16[1];
    __int16 v25 = 1024;
    int v26 = v17;
    __int16 v27 = 1024;
    int v28 = v18;
    __int16 v29 = 1024;
    int v30 = v19;
    LODWORD(v12) = 40;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "temperatureOffsetCoefficient,%f,medianAbsoluteDeviation,%f,minTemp,%d,maxTemp,%d,valid,%d",  COERCE_DOUBLE(&v21),  v12,  (_DWORD)__p,  (_DWORD)v14,  v15);
    unint64_t v11 = (char *)v10;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLPressureCalibrationDatabase::endRun()", "%s\n", v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  if (*(float *)(a1 + 272) <= 0.0025 && v19 != 0)
  {
    uint64_t v4 = *(void *)(a1 + 280);
    uint64_t v5 = *(void *)(a1 + 288);
    if (0xAAAAAAAAAAAAAAABLL * ((v5 - v4) >> 2) < 0x64 || v4 == v5) {
      int v7 = -1;
    }
    else {
      int v7 = *(_DWORD *)(v4 + 8);
    }
    sub_100936290(a1, v7);
    sub_100936404(a1, v7);
    __p = 0LL;
    int v14 = 0LL;
    uint64_t v15 = 0LL;
    sub_100938850( &__p,  *(const void **)(a1 + 280),  *(void *)(a1 + 288),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 288) - *(void *)(a1 + 280)) >> 2));
    int v8 = sub_1009355A8((int **)&__p, (float *)(a1 + 312));
    *(_BYTE *)(a1 + 304) = v8;
    if (__p)
    {
      int v14 = __p;
      operator delete(__p);
      int v8 = *(unsigned __int8 *)(a1 + 304);
    }

    *(_DWORD *)(a1 + 264) = -1;
    if (v8)
    {
      *(_OWORD *)std::string buf = *(_OWORD *)(a1 + 312);
      int v21 = 0;
      (*(void (**)(uint64_t, int *, _BYTE *, uint64_t, uint64_t, void))(*(void *)(a1 + 16) + 152LL))( a1 + 16,  &v21,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
    }
  }

  return sub_100210578(v20);
}

void sub_100936250( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, void *__p, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

uint64_t sub_100936290(uint64_t a1, int a2)
{
  uint64_t v4 = a1 + 128;
  sub_1003C0454(a1 + 128);
  if ((a2 & 0x80000000) == 0 && !*(_BYTE *)(a1 + 473))
  {
    sub_1003C0D54(v4, "DELETE FROM PressureCalibration WHERE Round <= ?", &v14);
    uint64_t v5 = v14;
    int v6 = (sqlite3_stmt *)sub_100019240(v14);
    sub_1003C28BC(v6, 1, a2);
    int v7 = (sqlite3_stmt *)sub_100019240(v5);
    sub_1003BB2BC(v4, v7);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  sub_100B14CF8((uint64_t *)(a1 + 456), &v14);
  int v8 = (sqlite3_stmt *)sub_100019240(v14);
  sub_1003C28BC(v8, 1, *(_DWORD *)(a1 + 276));
  BOOL v9 = (sqlite3_stmt *)sub_100019240(v14);
  sub_1003B7480(v9, 2, *(float *)(a1 + 268));
  uint64_t v10 = (sqlite3_stmt *)sub_100019240(v14);
  sub_1003B7480(v10, 3, *(float *)(a1 + 272));
  unint64_t v11 = (sqlite3_stmt *)sub_100019240(v14);
  sub_1003BB2BC(v4, v11);
  sub_1003C05BC(v4);
  else {
    uint64_t v12 = *(void *)(a1 + 216);
  }
  sub_1003C1EC0(v4, v12);
  uint64_t result = v14;
  uint64_t v14 = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

void sub_1009363C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100936404(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    uint64_t v4 = *(char **)(a1 + 288);
  }

  else
  {
    uint64_t v5 = *(char **)(a1 + 280);
    uint64_t v4 = *(char **)(a1 + 288);
    if (v5 != v4)
    {
      while (*((_DWORD *)v5 + 2) != a2)
      {
        v5 += 12;
        if (v5 == v4) {
          goto LABEL_11;
        }
      }
    }

    if (v5 != v4)
    {
      size_t v6 = v4 - (v5 + 12);
      if (v4 != v5 + 12) {
        memmove(v5, v5 + 12, v6);
      }
      uint64_t v4 = &v5[v6];
      *(void *)(a1 + 288) = &v5[v6];
    }
  }

void sub_1009364B8(uint64_t a1)
{
  if (qword_1019345B0 != -1) {
    dispatch_once(&qword_1019345B0, &stru_101861740);
  }
  int v2 = (os_log_s *)qword_1019345B8;
  if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Stopped pressure calibration", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_101861740);
    }
    v7[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "Stopped pressure calibration",  v7,  2);
    size_t v6 = (uint8_t *)v5;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLPressureCalibrationDatabase::teardown()", "%s\n", v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  if (*(void *)(a1 + 328))
  {
    uint64_t v3 = sub_1005BDE54();
    sub_1006DD2A0(v3, 0, *(void *)(a1 + 328));
    uint64_t v4 = *(void *)(a1 + 328);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    *(void *)(a1 + 328) = 0LL;
  }

  sub_100822AC0(a1 + 344);
}

char *sub_100936680(uint64_t a1, char *__src, unint64_t a3)
{
  unint64_t v3 = a3;
  uint64_t v4 = __src;
  size_t v6 = *(char **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    unint64_t v13 = *(char **)a1;
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v6[-*(void *)a1] >> 2) + 1;
    if (v14 > 0x1555555555555555LL) {
      sub_100007008();
    }
    uint64_t v15 = __src - v13;
    int64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((__src - v13) >> 2);
    unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - (void)v13) >> 2);
    if (2 * v17 > v14) {
      unint64_t v14 = 2 * v17;
    }
    if (v17 >= 0xAAAAAAAAAAAAAAALL) {
      unint64_t v18 = 0x1555555555555555LL;
    }
    else {
      unint64_t v18 = v14;
    }
    uint64_t v33 = a1 + 16;
    if (v18) {
      unsigned __int8 v19 = (char *)sub_1005AADE4(a1 + 16, v18);
    }
    else {
      unsigned __int8 v19 = 0LL;
    }
    double v22 = &v19[12 * v16];
    __p = v19;
    int v30 = v22;
    __int16 v31 = v22;
    __int16 v32 = &v19[12 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4) {
          unint64_t v24 = 1LL;
        }
        else {
          unint64_t v24 = 2 * v16;
        }
        __int16 v25 = (char *)sub_1005AADE4(v8, v24);
        double v22 = &v25[12 * (v24 >> 2)];
        __p = v25;
        int v30 = v22;
        __int16 v32 = &v25[12 * v26];
        if (v19) {
          operator delete(v19);
        }
      }

      else
      {
        uint64_t v23 = v16 + 2;
        if (v16 >= -1) {
          uint64_t v23 = v16 + 1;
        }
        v22 -= 12 * (v23 >> 1);
        int v30 = v22;
      }
    }

    uint64_t v27 = *(void *)v3;
    *((_DWORD *)v22 + 2) = *(_DWORD *)(v3 + 8);
    *(void *)double v22 = v27;
    __int16 v31 = v22 + 12;
    uint64_t v4 = (char *)sub_100938918((void **)a1, (uint64_t)&__p, v4);
    if (v31 != v30) {
      __int16 v31 = &v30[(v31 - v30 - 12) % 0xCuLL];
    }
    if (__p) {
      operator delete(__p);
    }
  }

  else if (__src == v6)
  {
    uint64_t v21 = *(void *)a3;
    *((_DWORD *)__src + 2) = *(_DWORD *)(a3 + 8);
    *(void *)__src = v21;
    *(void *)(a1 + 8) = __src + 12;
  }

  else
  {
    BOOL v9 = __src + 12;
    uint64_t v10 = v6 - 12;
    uint64_t v11 = *(void *)(a1 + 8);
    while (v10 < v6)
    {
      uint64_t v12 = *(void *)v10;
      *(_DWORD *)(v11 + 8) = *((_DWORD *)v10 + 2);
      *(void *)uint64_t v11 = v12;
      v11 += 12LL;
      v10 += 12;
    }

    *(void *)(a1 + 8) = v11;
    if (v6 != v9) {
      memmove(__src + 12, __src, v6 - v9);
    }
    uint64_t v20 = *(void *)v3;
    *((_DWORD *)v4 + 2) = *(_DWORD *)(v3 + 8);
    *(void *)uint64_t v4 = v20;
  }

  return v4;
}

void sub_1009368F4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100936940(uint64_t a1, _OWORD *a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 304);
  if (*(_BYTE *)(a1 + 304)) {
    *a2 = *(_OWORD *)(a1 + 312);
  }
  return v2 != 0;
}

void sub_100936960(uint64_t a1, __n128 *a2)
{
  if (qword_1019345B0 != -1) {
    dispatch_once(&qword_1019345B0, &stru_101861740);
  }
  uint64_t v4 = (os_log_s *)qword_1019345B8;
  if (os_log_type_enabled((os_log_t)qword_1019345B8, OS_LOG_TYPE_DEBUG))
  {
    double v5 = a2->n128_f32[2];
    double v6 = a2->n128_f32[3];
    unint64_t v7 = a2->n128_u64[0];
    *(_DWORD *)std::string buf = 134218496;
    double v21 = v5;
    __int16 v22 = 2048;
    double v23 = v6;
    __int16 v24 = 2048;
    unint64_t v25 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "pressure,%f,temperature,%f,timestamp,%f",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345B0 != -1) {
      dispatch_once(&qword_1019345B0, &stru_101861740);
    }
    double v8 = a2->n128_f32[2];
    double v9 = a2->n128_f32[3];
    unint64_t v10 = a2->n128_u64[0];
    int v14 = 134218496;
    double v15 = v8;
    __int16 v16 = 2048;
    double v17 = v9;
    __int16 v18 = 2048;
    unint64_t v19 = v10;
    LODWORD(v13) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345B8,  2LL,  "pressure,%f,temperature,%f,timestamp,%f",  COERCE_DOUBLE(&v14),  v13);
    uint64_t v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPressureCalibrationDatabase::onPressureData(const CLPressure::Sample *)",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  sub_10082210C(a1 + 344, a2);
}

void sub_100936B60(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  double v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLPressureCalibrationDatabase");
  sub_100936C28((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *double v8 = &off_1018615C8;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100936BFC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100936C28(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_101861900;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    uint64_t v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_100936D00(void *a1, uint64_t a2)
{
  int v2 = sub_1009387F0(a1, a2);
  operator delete(v2);
}

void *sub_100936D14(uint64_t a1, uint64_t a2)
{
  return sub_1009387F0((void *)(a1 - 16), a2);
}

void sub_100936D1C(uint64_t a1, uint64_t a2)
{
  int v2 = sub_1009387F0((void *)(a1 - 16), a2);
  operator delete(v2);
}

void sub_100936D34(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        double v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::string buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101861660);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v11 = (void *)(a1 + 8);
        *(_DWORD *)std::string buf = 136446466;
        double v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101861660);
        }
        uint64_t v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        double v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLPressureCalibrationDatabase_Type::Notification, CLPressureCalibrationDatabase_Type:: NotificationData>::removeClient(int) [Notification_T = CLPressureCalibrationDatabase_Type::Notification, Notif icationData_T = CLPressureCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_100936FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_10198E380);
}

uint64_t sub_100936FBC(uint64_t a1, int a2, int *a3, char *a4)
{
  int v42 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)uint64_t v43 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          __int16 v24 = (uint64_t *)v18;
        }
        else {
          __int16 v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          __int16 v29 = (uint64_t *)v25;
        }
        else {
          __int16 v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v41 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)std::string buf = &v42;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        *(void *)std::string buf = 0LL;
        *(void *)&buf[8] = 0LL;
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          __int16 v36 = sub_100939810(buf);
          sub_100938E38((_BYTE *)a1, (uint64_t)v43, (uint64_t)&v41, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v41 = a1 + 64;
        char v30 = byte_10198E381;
        HIDWORD(v40) = v17;
        *(void *)std::string buf = (char *)&v40 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 80) = v30;
        HIDWORD(v40) = *a3;
        *(void *)std::string buf = (char *)&v40 + 4;
        __int16 v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v40) = *a3;
        *(void *)std::string buf = (char *)&v40 + 4;
        uint64_t v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::string buf = &v42;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        *(_DWORD *)std::string buf = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v43 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101861660);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)std::string buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&buf[12] = 1026;
    *(_DWORD *)&buf[14] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101861660);
    }
    int v37 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t v43 = 136446466;
    *(void *)&v43[4] = v37;
    __int16 v44 = 1026;
    int v45 = a2;
    LODWORD(v40) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v43,
      v40);
    uint64_t v39 = (char *)v38;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLPressureCalibrationDatabase_Type::Notification, CLPressureCalibrationDatabase_Type::Noti ficationData>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLPressureCalibrationDatabase_Type::Notification, NotificationData_T = CLPressureCalibrationDatabase_Type::Notific ationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    if (v39 != buf) {
      free(v39);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_100937418(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      double v9 = (uint64_t *)v5;
    }
    else {
      double v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101861660);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::string buf = 136446466;
      char v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101861660);
      }
      int v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      uint64_t v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      __int16 v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLPressureCalibrationDatabase_Type::Notification, CLPressureCalibrationDatabase_Type::No tificationData>::clientRegistered(int, const Notification_T &) [Notification_T = CLPressureCalibrationDatabase_T ype::Notification, NotificationData_T = CLPressureCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100937698(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101861660);
              }
              uint64_t v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)std::string buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                int v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101861660);
                }
                __int16 v29 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                int v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLPressureCalibrationDatabase_Type::Notification, CLPressureCalibrationDatabas e_Type::NotificationData>::unregisterForNotification(int, const Notification_T &) [Notification_T = CL PressureCalibrationDatabase_Type::Notification, NotificationData_T = CLPressureCalibrationDatabase_Typ e::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100937A20(uint64_t a1, int *a2, _OWORD *a3)
{
  uint64_t v6 = (char *)operator new(0x28uLL);
  *((void *)v6 + 2) = 0LL;
  *(void *)uint64_t v6 = off_101861890;
  *((void *)v6 + 1) = 0LL;
  *(_OWORD *)(v6 + 24) = *a3;
  *(void *)&__int128 v13 = v6 + 24;
  *((void *)&v13 + 1) = v6;
  int v12 = *a2;
  uint64_t v14 = &v12;
  int v7 = sub_10023347C((uint64_t **)(a1 + 56), &v12, (uint64_t)&unk_1012CF090, &v14);
  sub_10005F550((uint64_t)(v7 + 8), &v13);
  BOOL v8 = (std::__shared_weak_count *)*((void *)&v13 + 1);
  if (*((void *)&v13 + 1))
  {
    int v9 = (unint64_t *)(*((void *)&v13 + 1) + 8LL);
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  return 1LL;
}

void sub_100937AF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100937B08(uint64_t a1, unsigned int *a2, _OWORD *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    unint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101861660);
    }
    int v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v12 = (void *)(a1 + 8);
      __int128 v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::string buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&_BYTE buf[20] = "activity";
      __int16 v67 = 2082;
      v68 = v12;
      __int16 v69 = 2050;
      v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)v71 = &v71[8];
      memset(&v71[8], 0, 24);
      v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      __int16 v27 = (char *)operator new(0x28uLL);
      *((void *)v27 + 2) = 0LL;
      *(void *)__int16 v27 = off_101861890;
      *((void *)v27 + 1) = 0LL;
      *(_OWORD *)(v27 + 24) = *a3;
      *(void *)std::string buf = v27 + 24;
      *(void *)&buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      int v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        __int16 v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    __int16 v31 = sub_1009389E4(a3);
    if (a5 == -1)
    {
      sub_100938A64((void *)a1, (int *)a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          int v37 = (uint64_t *)v33;
        }
        else {
          int v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v64 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      uint64_t v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          uint64_t v43 = (unint64_t *)v38;
        }
        else {
          uint64_t v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          uint64_t v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        v63 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101861660);
        }
        char v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          int v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            v46 = v71;
          }
          else {
            v46 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::string buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&_BYTE buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101861660);
          }
          v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v62 >= 0) {
            v49 = __p;
          }
          else {
            v49 = (void **)__p[0];
          }
          *(_DWORD *)v71 = 136315650;
          *(void *)&v71[4] = v47;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v49;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v60);
          v51 = v50;
          if (v62 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLPressureCalibrationDatabase_Type::Notification, CLPressureCalibrationDatabase_Type ::NotificationData>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, bo ol) [Notification_T = CLPressureCalibrationDatabase_Type::Notification, NotificationData_T = CLPressureCalib rationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v51);
          if (v51 != buf) {
            free(v51);
          }
        }

        goto LABEL_83;
      }

      v63 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v54 = v40[3].n128_i64[0];
      v52 = v40 + 3;
      v53 = (__n128 *)v54;
      if (!v54) {
        goto LABEL_60;
      }
      int v55 = *(_DWORD *)(v34 + 32);
      v56 = v52;
      do
      {
        int v57 = v53[1].n128_i32[3];
        BOOL v58 = v57 < v55;
        if (v57 >= v55) {
          v59 = v53;
        }
        else {
          v59 = (__n128 *)&v53->n128_i8[8];
        }
        if (!v58) {
          v56 = v53;
        }
        v53 = (__n128 *)v59->n128_u64[0];
      }

      while (v59->n128_u64[0]);
      sub_100938E38((_BYTE *)a1, (uint64_t)&v64, (uint64_t)&v63, v31);
    }

void sub_100938140( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_10093818C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101861660);
    }
    int v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v3 = (void *)(a1 + 8);
      *(_DWORD *)std::string buf = 136315138;
      int v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101861660);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLPressureCalibrationDatabase_Type::Notification, CLPressureCalibrationDatabase_Type::No tificationData>::listClients() [Notification_T = CLPressureCalibrationDatabase_Type::Notification, NotificationD ata_T = CLPressureCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101861660);
    }
    int v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::string buf = 136315394;
      int v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101861660);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      unint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLPressureCalibrationDatabase_Type::Notification, CLPressureCalibrationDatabase_Type::No tificationData>::listClients() [Notification_T = CLPressureCalibrationDatabase_Type::Notification, NotificationD ata_T = CLPressureCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    unint64_t v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      int v11 = (void *)(a1 + 8);
      do
      {
        int v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101861660);
            }
            __int128 v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::string buf = 136315650;
              int v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101861660);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLPressureCalibrationDatabase_Type::Notification, CLPressureCalibrationDatabase_ Type::NotificationData>::listClients() [Notification_T = CLPressureCalibrationDatabase_Type::Notificatio n, NotificationData_T = CLPressureCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                int v12 = v18;
              }

              while (!v19);
            }

            int v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            unint64_t v10 = v26;
          }

          while (!v19);
        }

        unint64_t v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100938738(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009397B0(a1);
  operator delete(v1);
}

void sub_10093874C(uint64_t a1, int a2, void *a3)
{
  if (v5)
  {
    int v6 = a2;
    (*(void (**)(void, int *, uint64_t, void))(a1 + 24))(0LL, &v6, v5, *(void *)(a1 + 32));
  }

void sub_100938798(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1009387C4(id a1)
{
  qword_1019345B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pressure");
}

void *sub_1009387F0(void *a1, uint64_t a2)
{
  *a1 = off_101861450;
  a1[2] = off_1018614C8;
  uint64_t v3 = (uint64_t)(a1 + 2);
  sub_100821200(a1 + 43, a2);
  uint64_t v4 = (void *)a1[35];
  if (v4)
  {
    a1[36] = v4;
    operator delete(v4);
  }

  sub_1003B3930(a1 + 16);
  sub_100935970(v3);
  return sub_100E450D4(a1);
}

void *sub_100938850(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    BOOL result = sub_1009388C8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      BOOL result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_1009388AC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

char *sub_1009388C8(void *a1, unint64_t a2)
{
  if (a2 >= 0x1555555555555556LL) {
    sub_100007008();
  }
  BOOL result = (char *)sub_1005AADE4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[12 * v4];
  return result;
}

_DWORD *sub_100938918(void **a1, uint64_t a2, char *__src)
{
  uint64_t v5 = *(_DWORD **)(a2 + 8);
  int v6 = (char *)*a1;
  uint64_t v7 = v5;
  if (*a1 != __src)
  {
    size_t v8 = __src;
    uint64_t v7 = *(_DWORD **)(a2 + 8);
    do
    {
      uint64_t v9 = *(void *)(v8 - 12);
      v8 -= 12;
      int v10 = *((_DWORD *)v8 + 2);
      *(void *)(v7 - 3) = v9;
      v7 -= 3;
      v7[2] = v10;
    }

    while (v8 != v6);
  }

  *(void *)(a2 + 8) = v7;
  int v11 = a1[1];
  uint64_t v12 = *(void *)(a2 + 16);
  int64_t v13 = v11 - __src;
  if (v11 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v11 - __src);
    uint64_t v7 = *(_DWORD **)(a2 + 8);
  }

  *(void *)(a2 + 16) = v12 + v13;
  uint64_t v14 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + 8) = v14;
  int v15 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v15;
  int v16 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v16;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

CLCppContainer *sub_1009389E4(_OWORD *a1)
{
  int v2 = operator new(0x10uLL);
  *int v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_100938F54;
  uint64_t v7 = &unk_10181D3D0;
  size_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100938A64(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        v51 = v9;
        sub_100938F64(a3);
        (*(void (**)(void *, int *, uint64_t, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              v50 = v19;
              sub_100938E38(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              __int16 v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  __int16 v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              v51 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                int v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    int v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      BOOL v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      BOOL v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  uint64_t v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      uint64_t v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      int v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101861660);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::string buf = 136446466;
                int v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101861660);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                uint64_t v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLPressureCalibrationDatabase_Type::Notification, CLPressureCalibrationDatabase_Type:: NotificationData>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = C LPressureCalibrationDatabase_Type::Notification, NotificationData_T = CLPressureCalibrationDatabase_Ty pe::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100938E38(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v14) = *(_DWORD *)(*(void *)a3 + 32LL);
    sub_100938F64(a4);
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)a3 + 80LL;
    uint64_t v12 = (uint64_t **)(*(void *)a3 + 40LL);
    int v15 = (int *)(*(void *)a2 + 32LL);
    uint64_t v13 = sub_1004EF3D4(v12, v15, (uint64_t)&unk_1012CF090, &v15);
    BOOL result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v14,  v10,  v11,  v13 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v14);
    }
  }

  return result;
}

void sub_100938F14(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101861890;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100938F28(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101861890;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100938F54(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_100938F64(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0)
  {
    sub_100938FDC(a1);
  }

  else
  {
    objc_opt_class(&OBJC_CLASS___CLCppContainer);
    if ((objc_opt_isKindOfClass(a1, v3) & 1) != 0) {
      sub_100939364(a1);
    }
  }

void sub_100938FDC(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2)
  {
    sub_100939710((uint64_t)&v7 + 7, a1);
    return;
  }

  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018618D0);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013413C2LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934470 != -1) {
        dispatch_once(&qword_101934470, &stru_1018618D0);
      }
      LODWORD(v8) = 134218498;
      HIDWORD(v8) = (_DWORD)v2;
      LODWORD(v7) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  v7,  v8);
LABEL_21:
      int v6 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLPressureCalibrationDatabase_Type::Notifica tionData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018618D0);
    }
    uint64_t v5 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013413C2LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934470 != -1) {
        dispatch_once(&qword_101934470, &stru_1018618D0);
      }
      LODWORD(v8) = 134218498;
      HIDWORD(v8) = (_DWORD)v2;
      LODWORD(v7) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  v7,  v8);
      goto LABEL_21;
    }
  }

id sub_100939364(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018618D0);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013413C2LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018618D0);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018618D0);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013413C2LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_1018618D0);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLPressureCalibrationDatabase_Type::Notification Data, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_100939710(uint64_t a1, void *a2)
{
  if ([a2 cppObjectPtr]
    || !objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D3CC8))
  {
    goto LABEL_5;
  }

  if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") == (id)16)
  {
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
LABEL_5:
    [a2 cppObjectPtr];
    return;
  }

  uint64_t v3 = (void *)sub_101254194();
  sub_100939784(v3);
}

void sub_100939784(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_1009397B0(uint64_t a1)
{
  *(void *)a1 = &off_101861900;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *id v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_100939810(_OWORD *a1)
{
  id v2 = operator new(0x10uLL);
  *id v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  int v6 = sub_100939890;
  uint64_t v7 = &unk_10181D3D0;
  uint64_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100939890(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_100939944(id a1)
{
  qword_101999360 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLCapabilityMonitorSilo");
}

id sub_100939B44(uint64_t a1, unsigned int *a2, unsigned __int8 *a3, void *a4)
{
  return _[a4 onDarwinNotification:*a2 data:*a3];
}

const void **sub_100939B58(uint64_t a1, unsigned int *a2, const void **a3, void *a4)
{
  uint64_t v5 = *a2;
  int v6 = *a3;
  uint64_t v8 = v6;
  if (v6) {
    CFRetain(v6);
  }
  [a4 onTelephonyNotification:v5 data:&v8];
  return sub_10032AC64(&v8);
}

void sub_100939BA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

id sub_100939F38(int8x16_t *a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100939F98;
  v4[3] = &unk_101861968;
  int8x16_t v2 = a1[2];
  int8x16_t v5 = vextq_s8(v2, v2, 8uLL);
  return [(id)v2.i64[0] accountsWithAccountType:a2 completion:v4];
}

id sub_100939F98(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "universe"), "silo");
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10093A00C;
  v6[3] = &unk_10181A2D8;
  v6[4] = a2;
  __int128 v7 = *(_OWORD *)(a1 + 32);
  return [v4 async:v6];
}

void sub_10093A00C(uint64_t a1)
{
  uint64_t v4 = 0LL;
  int8x16_t v5 = &v4;
  uint64_t v6 = 0x2020000000LL;
  char v7 = 0;
  int8x16_t v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_10093A0C0;
  _OWORD v3[3] = &unk_101861940;
  v3[4] = &v4;
  [v2 enumerateObjectsUsingBlock:v3];
  [*(id *)(a1 + 40) setICloudManagedAppleID:*((unsigned __int8 *)v5 + 24)];

  _Block_object_dispose(&v4, 8);
}

void sub_10093A0A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_10093A0C0(uint64_t a1, void *a2)
{
  id result = objc_msgSend(a2, "aa_isAccountClass:", AAAccountClassPrimary);
  if ((_DWORD)result)
  {
    id result = objc_msgSend(a2, "aa_isManagedAppleID");
    if ((_DWORD)result) {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
    }
  }

  return result;
}

void sub_10093A3C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_10093A3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_msgSend( objc_msgSend( +[MCProfileConnection sharedConnection](MCProfileConnection, "sharedConnection"),  "installedProfileWithIdentifier:",  a2),  "payloads");
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_10093A468;
  v8[3] = &unk_1018619B8;
  v8[4] = *(void *)(a1 + 32);
  void v8[5] = a4;
  return [v6 enumerateObjectsUsingBlock:v8];
}

id sub_10093A468(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id result = objc_msgSend(objc_msgSend(a2, "type"), "isEqualToString:", @"com.apple.education");
  if ((_DWORD)result)
  {
    *a4 = 1;
    **(_BYTE **)(a1 + 40) = 1;
    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
  }

  return result;
}

void sub_10093B194(id a1, CLCapabilityMonitorClientProtocol *a2, BOOL *a3)
{
}

void sub_10093B308(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_10093B334(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

uint64_t sub_10093B360()
{
  if (qword_1019A1878 != -1) {
    dispatch_once(&qword_1019A1878, &stru_101861A80);
  }
  return qword_1019A1870;
}

void *sub_10093B3A4(void *result)
{
  char *result = off_101861AB0;
  return result;
}

void sub_10093B3BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_1006E27E8();
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10093B438;
  void v9[3] = &unk_101861AD0;
  v9[4] = a1;
  v9[5] = a2;
  char v10 = a3;
  v9[6] = a4;
  sub_1006E28B8(v8, (uint64_t)v9);
}

uint64_t sub_10093B438(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(**(void **)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 56),  *(void *)(a1 + 48));
}

void sub_10093B454(uint64_t a1)
{
  uint64_t v2 = sub_1006E27E8();
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_10093B4B4;
  _OWORD v3[3] = &unk_10181D3D0;
  v3[4] = a1;
  sub_1006E28B8(v2, (uint64_t)v3);
}

uint64_t sub_10093B4B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 24LL))(*(void *)(a1 + 32));
}

uint64_t sub_10093B4C4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1002DC708((uint64_t)(a2 + 754), a1 + 3016);
}

void sub_10093B510(_Unwind_Exception *a1)
{
}

_DWORD *sub_10093B524(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = sub_1002E0454(a1);
  sub_1002DCA80((uint64_t)v4, a2);
  sub_1002DC4C4((uint64_t)(a1 + 202), a2 + 808);
  sub_1002DC708((uint64_t)(a1 + 754), a2 + 3016);
  return a1;
}

void sub_10093B56C(_Unwind_Exception *a1)
{
}

_DWORD *sub_10093B580(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = sub_1002E0454(a1);
  sub_1002DCA80((uint64_t)v4, a2);
  sub_1002DC4C4((uint64_t)(a1 + 202), a2 + 808);
  sub_1002DC708((uint64_t)(a1 + 754), a2 + 3016);
  return a1;
}

void sub_10093B5C8(_Unwind_Exception *a1)
{
}

void sub_10093B5DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(_BYTE *)(a1 + 808))
  {
    buf[0] = *(_BYTE *)(a2 + 48);
    buf[1] = 1;
    sub_10093BA8C(a1, buf, (uint64_t)v19);
    sub_1002DFA20(a3 + 1760, (uint64_t)v19);
    if (*(_BYTE *)(a3 + 1808))
    {
      int v6 = *(_DWORD *)(a3 + 1784);
      if (v6)
      {
        *(_DWORD *)(*(void *)(a3 + 6424) + 200LL) += v6;
        *(_BYTE *)(a3 + 6077) = 1;
      }

      if (v23)
      {
        if (SHIBYTE(v22) < 0)
        {
          sub_1010DD48C(__p, (void *)v21, *((unint64_t *)&v21 + 1));
        }

        else
        {
          *(_OWORD *)__p = v21;
          uint64_t v18 = v22;
        }

        uint64_t v9 = (uint64_t **)(*(void *)(a3 + 6424) + 104LL);
        *(void *)std::string buf = __p;
        char v10 = sub_1002E2A90(v9, (const void **)__p, (uint64_t)&unk_1012CF090, (__int128 **)buf);
        ++*((_DWORD *)v10 + 14);
        __int16 v11 = (uint64_t **)(*(void *)(a3 + 6424) + 104LL);
        *(void *)std::string buf = __p;
        int v12 = *((_DWORD *)sub_1002E2A90(v11, (const void **)__p, (uint64_t)&unk_1012CF090, (__int128 **)buf) + 14);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101861B00);
        }
        __int16 v13 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
        {
          unint64_t v14 = __p;
          if (v18 < 0) {
            unint64_t v14 = (void **)__p[0];
          }
          *(_DWORD *)std::string buf = 136315394;
          *(void *)&uint8_t buf[4] = v14;
          __int16 v29 = 1024;
          int v30 = v12;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "#alsquery alsRequestReasonTally, reason: %s tally: %d",  buf,  0x12u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_101861B00);
          }
          int v15 = __p;
          if (v18 < 0) {
            int v15 = (void **)__p[0];
          }
          int v24 = 136315394;
          int v25 = v15;
          __int16 v26 = 1024;
          int v27 = v12;
          int v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "#alsquery alsRequestReasonTally, reason: %s tally: %d",  (const char *)&v24,  18);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::AlsQuery::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  v16);
          if (v16 != buf) {
            free(v16);
          }
        }

        if (SHIBYTE(v18) < 0) {
          operator delete(__p[0]);
        }
      }
    }

    if (v23 && SHIBYTE(v22) < 0) {
      operator delete((void *)v21);
    }
    if (v20) {
      sub_100019CEC((uint64_t)v19);
    }
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101861B00);
    }
    char v7 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "#alsquery, skip, should not compute location from scan event",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101861B00);
      }
      v19[0] = 0;
      uint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "#alsquery, skip, should not compute location from scan event",  v19,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "Output CL::Wifi1::Policies::AlsQuery::HandleEvent::operator()(const Events::Wifi::Scan &) const",  "%s\n",  v8);
      if (v8 != buf) {
        free(v8);
      }
    }
  }

void sub_10093BA3C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_10093CA90((uint64_t)&a18);
  sub_1002D9D34(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_10093BA8C@<X0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v6 = *(int *)(a1 + 6400) <= 0 && *(_DWORD *)(a1 + 6404) <= 0;
  if (v6 && !sub_100495E74((_DWORD *)(a1 + 5968)))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101861B00);
    }
    uint64_t v17 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "#alsquery, skip, no location or spectator clients, and location request is not atypical",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_101;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101861B00);
    }
    LOWORD(v65) = 0;
    uint64_t v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "#alsquery, skip, no location or spectator clients, and location request is not atypical",  &v65,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "HandleEvent::alsRequestResultPair CL::Wifi1::Policies::AlsQuery::HandleEvent::defaultAlsRequestLogicUsedWhenComput ingLocation(const Input &, const std::optional<CLWifiService_Type::ScanType> &) const",  "%s\n",  v18);
    goto LABEL_156;
  }

  if (a2[1]) {
    BOOL v7 = sub_10099EDD8(*a2);
  }
  else {
    BOOL v7 = 0;
  }
  double v8 = vabdd_f64(*(double *)(a1 + 6384), *(double *)(a1 + 6128));
  if (v8 >= 4.0 || sub_100495E74((_DWORD *)(a1 + 5968))) {
    goto LABEL_18;
  }
  if (v7)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101861B00);
    }
    uint64_t v9 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = (int)v8;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "proceed #alsquery eval due to 5GHz scan, since_last_query_secs, %d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101861B00);
      }
      int v65 = 67109120;
      *(_DWORD *)v66 = (int)v8;
      uint64_t v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "proceed #alsquery eval due to 5GHz scan, since_last_query_secs, %d",  &v65);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "HandleEvent::alsRequestResultPair CL::Wifi1::Policies::AlsQuery::HandleEvent::defaultAlsRequestLogicUsedWhenComp utingLocation(const Input &, const std::optional<CLWifiService_Type::ScanType> &) const",  "%s\n",  v48);
      if (v48 != buf) {
        free(v48);
      }
    }

void sub_10093C9EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void *__p, uint64_t a28, int a29, __int16 a30, char a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, char a42, uint64_t a43, char a44)
{
  if (a42) {
    sub_100019CEC((uint64_t)&a36);
  }
  sub_100019CEC((uint64_t)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_10093CA90(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48)) {
    sub_100019CEC(a1);
  }
  return a1;
}

uint64_t sub_10093CAD8(uint64_t a1, uint64_t *a2)
{
  if (*(_BYTE *)(a1 + 48))
  {
    sub_10001CDA0(a1, a2);
    uint64_t v4 = a2[5];
  }

  else
  {
    sub_10001B9CC(a1, a2);
    uint64_t v4 = a2[5];
    *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 1;
  }

  *(void *)(a1 + 40) = v4;
  return a1;
}

uint64_t sub_10093CB34(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 48)) {
    sub_100019CEC(a1);
  }
  return a1;
}

void sub_10093CB74(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  if (v4[48]) {
    sub_100019CEC((uint64_t)v4);
  }
}

void sub_10093CBD8(_Unwind_Exception *a1)
{
}

void sub_10093CBEC(uint64_t a1@<X0>, int a2@<W1>, _BYTE *a3@<X8>)
{
  *a3 = 0;
  a3[48] = 0;
  if (a2) {
    uint64_t v4 = "reproc";
  }
  else {
    uint64_t v4 = "live";
  }
  if (*(void *)(a1 + 6328) && *(_DWORD *)(a1 + 6348) != 2)
  {
    BOOL v7 = !a2 && sub_100B83D5C(a1 + 3208) && *(_BYTE *)(a1 + 1096) != 0;
    int v9 = a2 == 1 && *(_DWORD *)(a1 + 6348) == 1 || v7;
    if (v9 == 1)
    {
      sub_1002DFAAC((uint64_t)&v18, a1 + 6304);
      sub_10074FD4C(v23, 1);
      int v10 = v23[0];
      uint64_t v11 = v18;
      unint64_t v12 = v19;
      uint64_t v18 = 0LL;
      unint64_t v19 = 0LL;
      *(void *)std::string buf = v11;
      *(void *)__int16 v29 = v12;
      *(void *)&v29[8] = v20;
      *(void *)&v29[16] = v21;
      int v30 = v22;
      if (v21)
      {
        unint64_t v13 = *(void *)(v20 + 8);
        if ((v12 & (v12 - 1)) != 0)
        {
          if (v13 >= v12) {
            v13 %= v12;
          }
        }

        else
        {
          v13 &= v12 - 1;
        }

        *(void *)(v11 + 8 * v13) = &v29[8];
        uint64_t v20 = 0LL;
        uint64_t v21 = 0LL;
      }

      int v31 = v10;
      sub_10093CFAC((uint64_t)a3, (uint64_t)buf);
      sub_100019CEC((uint64_t)buf);
      sub_100019CEC((uint64_t)&v18);
    }

    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101861B00);
    }
    unint64_t v14 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void *)(a1 + 6328);
      *(_DWORD *)std::string buf = 67240706;
      *(_DWORD *)&uint8_t buf[4] = v9;
      *(_WORD *)__int16 v29 = 2082;
      *(void *)&v29[2] = v4;
      *(_WORD *)&v29[10] = 2050;
      *(void *)&v29[12] = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "WsbAls, query, %{public}d, %{public}s, unknown, %{public}ld",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101861B00);
      }
      uint64_t v16 = *(void *)(a1 + 6328);
      v23[0] = 67240706;
      v23[1] = v9;
      __int16 v24 = 2082;
      int v25 = v4;
      __int16 v26 = 2050;
      uint64_t v27 = v16;
      uint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "WsbAls, query, %{public}d, %{public}s, unknown, %{public}ld",  v23,  28);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static std::optional<Decisions::AlsRequestForWsb> CL::Wifi1::Policies::AlsQuery::HandleEvent::shouldQueryForWsb( const Input &, Types::WsbPassType)",  "%s\n",  v17);
    }
  }

void sub_10093CEEC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21)
{
  if (*(_BYTE *)(v21 + 48)) {
    sub_100019CEC(v21);
  }
  _Unwind_Resume(exception_object);
}

void sub_10093CF34(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  if (v4[48]) {
    sub_100019CEC((uint64_t)v4);
  }
}

void sub_10093CF98(_Unwind_Exception *a1)
{
}

uint64_t sub_10093CFAC(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 48))
  {
    sub_10001CDA0(a1, (uint64_t *)a2);
    int v4 = *(_DWORD *)(a2 + 40);
  }

  else
  {
    sub_10001B9CC(a1, (uint64_t *)a2);
    int v4 = *(_DWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 1;
  }

  *(_DWORD *)(a1 + 40) = v4;
  return a1;
}

void sub_10093D008(int *a1@<X1>, _DWORD *a2@<X8>)
{
}

void sub_10093D0B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10093D0CC(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

uint64_t sub_10093D0F8(uint64_t result, uint64_t a2)
{
  *(_BYTE *)uint64_t result = 0;
  *(_BYTE *)(result + 4_Block_object_dispose(va, 8) = 0;
  if (*(_BYTE *)(a2 + 48))
  {
    uint64_t result = sub_10001B9CC(result, (uint64_t *)a2);
    *(void *)(result + 40) = *(void *)(a2 + 40);
    *(_BYTE *)(result + 4_Block_object_dispose(va, 8) = 1;
  }

  *(_BYTE *)(result + 56) = 0;
  *(_BYTE *)(result + 80) = 0;
  return result;
}

__n128 sub_10093D140(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 0;
  if (*(_BYTE *)(a2 + 48))
  {
    a1 = sub_10001B9CC(a1, (uint64_t *)a2);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 1;
  }

  __n128 result = *(__n128 *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(__n128 *)(a1 + 56) = result;
  *(void *)(a2 + 64) = 0LL;
  *(void *)(a2 + 72) = 0LL;
  *(void *)(a2 + 56) = 0LL;
  *(_BYTE *)(a1 + 80) = 1;
  return result;
}

void sub_10093D1A4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48))
  {
    if (*(_BYTE *)(a1 + 48))
    {
      sub_10001CDA0(a1, (uint64_t *)a2);
      *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    }
  }

  else if (*(_BYTE *)(a1 + 48))
  {
    sub_100019CEC(a1);
    *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 0;
  }

  else
  {
    sub_10001B9CC(a1, (uint64_t *)a2);
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 1;
  }

void sub_10093D21C(int *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  switch(*a1 ^ (*a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
      sub_10093B524(a3, a2);
      break;
    case 7:
      sub_10093B5DC(a2, (uint64_t)(a1 + 2), (uint64_t)a3);
      break;
    case 8:
      sub_10093CB74(a2, a3);
      break;
    case 0x1D:
      sub_10093CF34(a2, a3);
      break;
    default:
      sub_1002DDAB0();
  }

void sub_10093D288()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_10093D324(_Unwind_Exception *a1)
{
}

void sub_10093D33C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      *uint64_t v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_10093D3C8(_Unwind_Exception *a1)
{
}

uint64_t sub_10093D798(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0LL;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0LL;
        while (1)
        {
          uint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v17 = v16 + 1;
          if (v16 == -1 || v17 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v18 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17;
          v15 |= (unint64_t)(v18 & 0x7F) << v13;
          if ((v18 & 0x80) == 0) {
            goto LABEL_45;
          }
          v13 += 7;
          BOOL v10 = v14++ >= 9;
          if (v10)
          {
            LODWORD(v15) = 0;
            goto LABEL_47;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_45:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_47:
        uint64_t v32 = 8LL;
        goto LABEL_56;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v15 = 0LL;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (2)
        {
          uint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v24 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23;
            v15 |= (unint64_t)(v24 & 0x7F) << v20;
            if (v24 < 0)
            {
              v20 += 7;
              BOOL v10 = v21++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_51;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_51:
        uint64_t v32 = 12LL;
        goto LABEL_56;
      case 3u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v15 = 0LL;
        *(_BYTE *)(a1 + 24) |= 2u;
        break;
      case 4u:
        *(_BYTE *)(a1 + 24) |= 4u;
        unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v31 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 4;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v31 = 0;
        }

        *(_DWORD *)(a1 + 20) = v31;
        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        continue;
    }

    while (1)
    {
      uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v29 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
      v15 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0) {
        goto LABEL_53;
      }
      v25 += 7;
      BOOL v10 = v26++ >= 9;
      if (v10)
      {
        LODWORD(v15) = 0;
        goto LABEL_55;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_53:
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v15) = 0;
    }
LABEL_55:
    uint64_t v32 = 16LL;
LABEL_56:
    *(_DWORD *)(a1 + v32) = v15;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_10093E200(uint64_t a1)
{
  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)&OBJC_METACLASS___CLMapsXPCServiceManager;
  qword_101999370 = (uint64_t)objc_msgSend(objc_msgSendSuper2(&v2, "allocWithZone:", 0), "init");
  return [(id)qword_101999370 createConnection];
}

void sub_10093E8EC(_Unwind_Exception *a1)
{
}

uint64_t sub_10093E904(uint64_t a1, void *a2)
{
  if (qword_1019348C0 != -1) {
    dispatch_once(&qword_1019348C0, &stru_101861BD0);
  }
  char v4 = (os_log_s *)qword_1019348C8;
  if (os_log_type_enabled((os_log_t)qword_1019348C8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 134349571;
    id v16 = [a2 code];
    __int16 v17 = 2114;
    id v18 = [a2 domain];
    __int16 v19 = 2113;
    id v20 = [a2 localizedDescription];
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,CLMapHelperService XPCService synchronous map data query returned error,%{public}lld,domain,%{public}@, description,%{private}@",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348C0 != -1) {
      dispatch_once(&qword_1019348C0, &stru_101861BD0);
    }
    uint64_t v6 = qword_1019348C8;
    int v9 = 134349571;
    id v10 = [a2 code];
    __int16 v11 = 2114;
    id v12 = [a2 domain];
    __int16 v13 = 2113;
    id v14 = [a2 localizedDescription];
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v6,  16LL,  "CLMM,CLTSP,CLMapHelperService XPCService synchronous map data query returned error,%{public}lld,domain,%{public}@, description,%{private}@",  &v9,  32);
    unint64_t v8 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CLMapsXPCServiceManager collectMapDataOfType:aroundCoordinate:inRadius:allowNetwork:isPedestrianOrCycling:clearT iles:callSynchronously:WithReply:]_block_invoke",  "%s\n",  v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10093EB3C(uint64_t a1, void *a2)
{
  if (qword_1019348C0 != -1) {
    dispatch_once(&qword_1019348C0, &stru_101861BD0);
  }
  char v4 = (os_log_s *)qword_1019348C8;
  if (os_log_type_enabled((os_log_t)qword_1019348C8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 134349571;
    id v16 = [a2 code];
    __int16 v17 = 2114;
    id v18 = [a2 domain];
    __int16 v19 = 2113;
    id v20 = [a2 localizedDescription];
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,CLMapHelperService XPCService asynchronous map data query returned error,%{public}lld,domain,%{public}@ ,description,%{private}@",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348C0 != -1) {
      dispatch_once(&qword_1019348C0, &stru_101861BD0);
    }
    uint64_t v6 = qword_1019348C8;
    int v9 = 134349571;
    id v10 = [a2 code];
    __int16 v11 = 2114;
    id v12 = [a2 domain];
    __int16 v13 = 2113;
    id v14 = [a2 localizedDescription];
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v6,  16LL,  "CLMM,CLTSP,CLMapHelperService XPCService asynchronous map data query returned error,%{public}lld,domain,%{public}@ ,description,%{private}@",  &v9,  32);
    unint64_t v8 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CLMapsXPCServiceManager collectMapDataOfType:aroundCoordinate:inRadius:allowNetwork:isPedestrianOrCycling:clearT iles:callSynchronously:WithReply:]_block_invoke",  "%s\n",  v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10093ED74(uint64_t a1, void *a2)
{
  double v4 = (sub_101171D4C() - *(double *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL)) * 1000.0;
  if (v4 > 200.0)
  {
    if (qword_1019348C0 != -1) {
      dispatch_once(&qword_1019348C0, &stru_101861BD0);
    }
    unsigned int v5 = (os_log_s *)qword_1019348C8;
    if (os_log_type_enabled((os_log_t)qword_1019348C8, OS_LOG_TYPE_DEBUG))
    {
      if (a2) {
        unsigned int v6 = [a2 count];
      }
      else {
        unsigned int v6 = -1;
      }
      uint64_t v7 = *(void *)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 56);
      uint64_t v9 = *(void *)(a1 + 64);
      int v10 = *(unsigned __int8 *)(a1 + 72);
      *(_DWORD *)std::string buf = 67241729;
      unsigned int v34 = v6;
      __int16 v35 = 1026;
      BOOL v36 = a2 == 0LL;
      __int16 v37 = 2050;
      double v38 = v4;
      __int16 v39 = 2049;
      uint64_t v40 = v7;
      __int16 v41 = 2049;
      uint64_t v42 = v8;
      __int16 v43 = 2050;
      uint64_t v44 = v9;
      __int16 v45 = 1026;
      int v46 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLMM,CLTSP,MapHelperService,XPCService returned data,roadCount,%{public}d,error,%{public}d,responseTime,%{public }.1lf,LL,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,syncCall,%{public}d",  buf,  0x3Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348C0 != -1) {
        dispatch_once(&qword_1019348C0, &stru_101861BD0);
      }
      uint64_t v12 = qword_1019348C8;
      if (a2) {
        unsigned int v13 = [a2 count];
      }
      else {
        unsigned int v13 = -1;
      }
      uint64_t v14 = *(void *)(a1 + 48);
      uint64_t v15 = *(void *)(a1 + 56);
      uint64_t v16 = *(void *)(a1 + 64);
      int v17 = *(unsigned __int8 *)(a1 + 72);
      v20[0] = 67241729;
      v20[1] = v13;
      __int16 v21 = 1026;
      BOOL v22 = a2 == 0LL;
      __int16 v23 = 2050;
      double v24 = v4;
      __int16 v25 = 2049;
      uint64_t v26 = v14;
      __int16 v27 = 2049;
      uint64_t v28 = v15;
      __int16 v29 = 2050;
      uint64_t v30 = v16;
      __int16 v31 = 1026;
      int v32 = v17;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  2LL,  "CLMM,CLTSP,MapHelperService,XPCService returned data,roadCount,%{public}d,error,%{public}d,responseTime,%{public }.1lf,LL,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,syncCall,%{public}d",  v20,  60);
      __int16 v19 = (uint8_t *)v18;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLMapsXPCServiceManager collectMapDataOfType:aroundCoordinate:inRadius:allowNetwork:isPedestrianOrCycling:clea rTiles:callSynchronously:WithReply:]_block_invoke",  "%s\n",  v18);
      if (v19 != buf) {
        free(v19);
      }
    }
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10093F034(uint64_t a1, void *a2)
{
  double v4 = (sub_101171D4C() - *(double *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL)) * 1000.0;
  if (v4 > 200.0)
  {
    if (qword_1019348C0 != -1) {
      dispatch_once(&qword_1019348C0, &stru_101861BD0);
    }
    unsigned int v5 = (os_log_s *)qword_1019348C8;
    if (os_log_type_enabled((os_log_t)qword_1019348C8, OS_LOG_TYPE_DEBUG))
    {
      if (a2) {
        unsigned int v6 = [a2 count];
      }
      else {
        unsigned int v6 = -1;
      }
      uint64_t v7 = *(void *)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 56);
      uint64_t v9 = *(void *)(a1 + 64);
      int v10 = *(unsigned __int8 *)(a1 + 72);
      *(_DWORD *)std::string buf = 67241729;
      unsigned int v34 = v6;
      __int16 v35 = 1026;
      BOOL v36 = a2 == 0LL;
      __int16 v37 = 2050;
      double v38 = v4;
      __int16 v39 = 2049;
      uint64_t v40 = v7;
      __int16 v41 = 2049;
      uint64_t v42 = v8;
      __int16 v43 = 2050;
      uint64_t v44 = v9;
      __int16 v45 = 1026;
      int v46 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLMM,CLTSP,MapHelperService,XPCService returned Basic style building data,buildingCount,%{public}d,error,%{publi c}d,responseTime,%{public}.1lf,LL,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,syncCall,%{public}d",  buf,  0x3Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348C0 != -1) {
        dispatch_once(&qword_1019348C0, &stru_101861BD0);
      }
      uint64_t v12 = qword_1019348C8;
      if (a2) {
        unsigned int v13 = [a2 count];
      }
      else {
        unsigned int v13 = -1;
      }
      uint64_t v14 = *(void *)(a1 + 48);
      uint64_t v15 = *(void *)(a1 + 56);
      uint64_t v16 = *(void *)(a1 + 64);
      int v17 = *(unsigned __int8 *)(a1 + 72);
      v20[0] = 67241729;
      v20[1] = v13;
      __int16 v21 = 1026;
      BOOL v22 = a2 == 0LL;
      __int16 v23 = 2050;
      double v24 = v4;
      __int16 v25 = 2049;
      uint64_t v26 = v14;
      __int16 v27 = 2049;
      uint64_t v28 = v15;
      __int16 v29 = 2050;
      uint64_t v30 = v16;
      __int16 v31 = 1026;
      int v32 = v17;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  2LL,  "CLMM,CLTSP,MapHelperService,XPCService returned Basic style building data,buildingCount,%{public}d,error,%{publi c}d,responseTime,%{public}.1lf,LL,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,syncCall,%{public}d",  v20,  60);
      __int16 v19 = (uint8_t *)v18;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLMapsXPCServiceManager collectMapDataOfType:aroundCoordinate:inRadius:allowNetwork:isPedestrianOrCycling:clea rTiles:callSynchronously:WithReply:]_block_invoke",  "%s\n",  v18);
      if (v19 != buf) {
        free(v19);
      }
    }
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10093F2F4(uint64_t a1, void *a2)
{
  double v4 = (sub_101171D4C() - *(double *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL)) * 1000.0;
  if (v4 > 200.0)
  {
    if (qword_1019348C0 != -1) {
      dispatch_once(&qword_1019348C0, &stru_101861BD0);
    }
    unsigned int v5 = (os_log_s *)qword_1019348C8;
    if (os_log_type_enabled((os_log_t)qword_1019348C8, OS_LOG_TYPE_DEBUG))
    {
      if (a2) {
        unsigned int v6 = [a2 count];
      }
      else {
        unsigned int v6 = -1;
      }
      uint64_t v7 = *(void *)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 56);
      uint64_t v9 = *(void *)(a1 + 64);
      int v10 = *(unsigned __int8 *)(a1 + 72);
      *(_DWORD *)std::string buf = 67241729;
      unsigned int v34 = v6;
      __int16 v35 = 1026;
      BOOL v36 = a2 == 0LL;
      __int16 v37 = 2050;
      double v38 = v4;
      __int16 v39 = 2049;
      uint64_t v40 = v7;
      __int16 v41 = 2049;
      uint64_t v42 = v8;
      __int16 v43 = 2050;
      uint64_t v44 = v9;
      __int16 v45 = 1026;
      int v46 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLMM,CLTSP,MapHelperService,XPCService returned Extended style building data,buildingCount,%{public}d,error,%{pu blic}d,responseTime,%{public}.1lf,LL,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,syncCall,%{public}d",  buf,  0x3Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348C0 != -1) {
        dispatch_once(&qword_1019348C0, &stru_101861BD0);
      }
      uint64_t v12 = qword_1019348C8;
      if (a2) {
        unsigned int v13 = [a2 count];
      }
      else {
        unsigned int v13 = -1;
      }
      uint64_t v14 = *(void *)(a1 + 48);
      uint64_t v15 = *(void *)(a1 + 56);
      uint64_t v16 = *(void *)(a1 + 64);
      int v17 = *(unsigned __int8 *)(a1 + 72);
      v20[0] = 67241729;
      v20[1] = v13;
      __int16 v21 = 1026;
      BOOL v22 = a2 == 0LL;
      __int16 v23 = 2050;
      double v24 = v4;
      __int16 v25 = 2049;
      uint64_t v26 = v14;
      __int16 v27 = 2049;
      uint64_t v28 = v15;
      __int16 v29 = 2050;
      uint64_t v30 = v16;
      __int16 v31 = 1026;
      int v32 = v17;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  2LL,  "CLMM,CLTSP,MapHelperService,XPCService returned Extended style building data,buildingCount,%{public}d,error,%{pu blic}d,responseTime,%{public}.1lf,LL,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,syncCall,%{public}d",  v20,  60);
      __int16 v19 = (uint8_t *)v18;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLMapsXPCServiceManager collectMapDataOfType:aroundCoordinate:inRadius:allowNetwork:isPedestrianOrCycling:clea rTiles:callSynchronously:WithReply:]_block_invoke",  "%s\n",  v18);
      if (v19 != buf) {
        free(v19);
      }
    }
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10093F780(id a1, NSError *a2)
{
  if (qword_1019348C0 != -1) {
    dispatch_once(&qword_1019348C0, &stru_101861BD0);
  }
  uint64_t v3 = (os_log_s *)qword_1019348C8;
  if (os_log_type_enabled((os_log_t)qword_1019348C8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 134349571;
    NSInteger v14 = -[NSError code](a2, "code");
    __int16 v15 = 2114;
    uint64_t v16 = -[NSError domain](a2, "domain");
    __int16 v17 = 2113;
    id v18 = -[NSError localizedDescription](a2, "localizedDescription");
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,CLMapHelperService XPCService returned error,%{public}lld,domain,%{public}@,description,%{private}@",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348C0 != -1) {
      dispatch_once(&qword_1019348C0, &stru_101861BD0);
    }
    uint64_t v4 = qword_1019348C8;
    int v7 = 134349571;
    NSInteger v8 = -[NSError code](a2, "code");
    __int16 v9 = 2114;
    int v10 = -[NSError domain](a2, "domain");
    __int16 v11 = 2113;
    uint64_t v12 = -[NSError localizedDescription](a2, "localizedDescription");
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v4,  16LL,  "CLMM,CLTSP,CLMapHelperService XPCService returned error,%{public}lld,domain,%{public}@,description,%{private}@",  &v7,  32);
    unsigned int v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CLMapsXPCServiceManager clearMemoryAndExitHelperProcessCleanly]_block_invoke",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
  }

NSTimer *sub_10093FBD4(uint64_t a1)
{
  uint64_t result = +[NSTimer scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:]( &OBJC_CLASS___NSTimer,  "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:",  *(void *)(a1 + 32),  "onTimerFire:",  0LL,  0LL,  300.0);
  *(void *)(*(void *)(a1 + 32) + 8LL) = result;
  return result;
}

void sub_1009400C8(id a1, NSError *a2)
{
  if (qword_1019348C0 != -1) {
    dispatch_once(&qword_1019348C0, &stru_101861BD0);
  }
  uint64_t v3 = (os_log_s *)qword_1019348C8;
  if (os_log_type_enabled((os_log_t)qword_1019348C8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 134349571;
    NSInteger v14 = -[NSError code](a2, "code");
    __int16 v15 = 2114;
    uint64_t v16 = -[NSError domain](a2, "domain");
    __int16 v17 = 2113;
    id v18 = -[NSError localizedDescription](a2, "localizedDescription");
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,CLMapHelperService XPCService returned error,%{public}lld,domain,%{public}@,description,%{private}@",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348C0 != -1) {
      dispatch_once(&qword_1019348C0, &stru_101861BD0);
    }
    uint64_t v4 = qword_1019348C8;
    int v7 = 134349571;
    NSInteger v8 = -[NSError code](a2, "code");
    __int16 v9 = 2114;
    int v10 = -[NSError domain](a2, "domain");
    __int16 v11 = 2113;
    uint64_t v12 = -[NSError localizedDescription](a2, "localizedDescription");
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v4,  16LL,  "CLMM,CLTSP,CLMapHelperService XPCService returned error,%{public}lld,domain,%{public}@,description,%{private}@",  &v7,  32);
    unsigned int v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CLMapsXPCServiceManager releaseMapHelperServiceOSTransaction]_block_invoke",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
  }

void sub_1009402FC(id a1)
{
  qword_1019348C8 = (uint64_t)os_log_create("com.apple.locationd.Position", "TripSegmentProcessor");
}

double sub_100940328(double a1, double a2, double a3, double a4, double a5)
{
  return (a5 - a1) / (a3 - a1) * a4 + (1.0 - (a5 - a1) / (a3 - a1)) * a2;
}

BOOL sub_100940348(uint64_t a1)
{
  return *(double *)(a1 + 80) <= 2.33333325 && (*(_BYTE *)(a1 + 152) & 0xFD) == 1;
}

uint64_t sub_10094036C(_DWORD *a1)
{
  if (*a1 == 1) {
    return CLMotionActivity::isTypePedestrian(a1[2]);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_100940388(uint64_t a1)
{
  int v2 = sub_1001B9A1C();
  uint64_t result = 0LL;
  if (v2 && *(_DWORD *)a1 == 1)
  {
    unint64_t v4 = *(void *)(a1 + 144);
    BOOL v5 = v4 > 0x31;
    unint64_t v6 = (0x23E8000000000uLL >> v4) & 1;
    if (v5) {
      return 0LL;
    }
    else {
      return v6;
    }
  }

  return result;
}

BOOL sub_1009403E0(uint64_t a1)
{
  int v2 = sub_1001B9A1C();
  BOOL result = 0LL;
  if (v2)
  {
    if (*(_DWORD *)a1 == 1) {
      return *(void *)(a1 + 144) == 27LL;
    }
  }

  return result;
}

double sub_100940428(double a1, double a2)
{
  return round(1.0 / a2 * a1) / (1.0 / a2);
}

uint64_t sub_100940440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v94 = a1;
  sub_100B078AC((void *)a1, a2, (uint64_t)v106);
  unint64_t v6 = v107;
  if (v107 == v106)
  {
    uint64_t v7 = 4LL;
    unint64_t v6 = v106;
  }

  else
  {
    if (!v107) {
      goto LABEL_6;
    }
    uint64_t v7 = 5LL;
  }

  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_6:
  *(void *)a1 = off_101861C00;
  sub_100F29B20(a1 + 48);
  sub_100903CCC(a1 + 456);
  *(_DWORD *)(a1 + 224_Block_object_dispose((const void *)(v1 - 224), 8) = 0xFFFF;
  *(void *)(a1 + 2260) = 0LL;
  *(void *)(a1 + 2252) = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v93 = _Q0;
  *(_OWORD *)(a1 + 226_Block_object_dispose((const void *)(v1 - 224), 8) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 2284) = _Q0;
  *(_OWORD *)(a1 + 2300) = _Q0;
  *(_OWORD *)(a1 + 2316) = _Q0;
  *(_DWORD *)(a1 + 2332) = 0;
  *(void *)(a1 + 2336) = 0xBFF0000000000000LL;
  *(void *)(a1 + 2352) = 0LL;
  *(void *)(a1 + 2344) = 0LL;
  *(_DWORD *)(a1 + 2360) = 0;
  *(void *)(a1 + 2364) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 2372) = 0x7FFFFFFF;
  *(void *)(a1 + 2376) = 0LL;
  *(void *)(a1 + 2392) = 0LL;
  *(void *)(a1 + 2384) = 0LL;
  *(_BYTE *)(a1 + 2400) = 0;
  *(_WORD *)(a1 + 2416) = 256;
  *(void *)(a1 + 240_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  sub_100DD5E6C((_OWORD *)(a1 + 2424));
  *(_DWORD *)(a1 + 2472) = 0xFFFF;
  *(_OWORD *)(a1 + 2476) = 0u;
  *(_OWORD *)(a1 + 2492) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 250_Block_object_dispose((const void *)(v1 - 224), 8) = v93;
  *(_OWORD *)(a1 + 2524) = v93;
  *(_OWORD *)(a1 + 2540) = v93;
  *(_DWORD *)(a1 + 2556) = 0;
  *(void *)(a1 + 2560) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 2584) = 0;
  *(_OWORD *)(a1 + 256_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(void *)(a1 + 258_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 2596) = 0x7FFFFFFF;
  *(void *)(a1 + 2600) = 0LL;
  *(_OWORD *)(a1 + 260_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_BYTE *)(a1 + 2624) = 0;
  *(void *)(a1 + 2632) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 2676) = 0;
  *(_BYTE *)(a1 + 2680) = 0;
  *(_WORD *)(a1 + 2672) = 0;
  *(_OWORD *)(a1 + 2656) = 0u;
  *(_OWORD *)(a1 + 2640) = 0u;
  *(void *)(a1 + 268_Block_object_dispose((const void *)(v1 - 224), 8) = 0x5FFFFFFFFLL;
  *(_DWORD *)(a1 + 2696) = 3;
  *(_DWORD *)(a1 + 2700) = 16777217;
  *(void *)(a1 + 2704) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 2712) = 0;
  *(void *)(a1 + 2720) = 0x600000006LL;
  *(_OWORD *)(a1 + 272_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(void *)(a1 + 2744) = 0LL;
  *(_OWORD *)(a1 + 2752) = v93;
  *(_BYTE *)(a1 + 276_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  *(_OWORD *)(a1 + 2776) = 0u;
  sub_10001A504(a1 + 2792, a3);
  [*(id *)(a1 + 8) silo];
  sub_1004F2598();
  if (sub_1004F8540())
  {
    sub_1010DDBC0(&v105, "geomapfeatureaccess");
    sub_1002F0B04(&buf);
    sub_1002A8560(buf, "MapMatchingGeometryType", &v105);
    uint64_t v12 = (std::__shared_weak_count *)*((void *)&buf + 1);
    if (*((void *)&buf + 1))
    {
      unsigned int v13 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
      do
        unint64_t v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    __int16 v15 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v16 = &v105;
      if ((v105.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v16 = (std::string *)v105.__r_.__value_.__r.__words[0];
      }
      LODWORD(buf) = 136446210;
      *(void *)((char *)&buf + 4) = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "CLMM,MapMatchingGeometryType,%{public}s",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      v89 = &v105;
      if ((v105.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        v89 = (std::string *)v105.__r_.__value_.__r.__words[0];
      }
      int v101 = 136446210;
      v102 = v89;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM,MapMatchingGeometryType,%{public}s",  &v101,  12);
      v91 = (char *)v90;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationFilterController::CLLocationFilterController(id<CLIntersiloUniverse>, NonSystemLocationClientKeysCallback)",  "%s\n",  v90);
    }

    __int16 v17 = operator new(0x430uLL);
    sub_100D8012C(v17, *(void *)(a1 + 8), &v105);
    uint64_t v18 = *(void *)(a1 + 2408);
    *(void *)(a1 + 240_Block_object_dispose((const void *)(v1 - 224), 8) = v17;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
    id v19 = objc_msgSend(objc_msgSend(*(id *)(a1 + 8), "silo"), "newTimer");
    *(void *)(a1 + 2776) = v19;
    v99[0] = _NSConcreteStackBlock;
    v99[1] = 3221225472LL;
    v99[2] = sub_1009415A0;
    v99[3] = &unk_10181D3D0;
    v99[4] = a1;
    [v19 setHandler:v99];
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101861DE0);
  }
  id v20 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    BOOL v21 = *(void *)(a1 + 2408) != 0LL;
    LODWORD(buf) = 67240192;
    DWORD1(buf) = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "CLMM, PlatformSupportsMapMatching, %{public}d",  (uint8_t *)&buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    BOOL v74 = *(void *)(a1 + 2408) != 0LL;
    LODWORD(v105.__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(v105.__r_.__value_.__r.__words[0]) = v74;
    LODWORD(v92) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM, PlatformSupportsMapMatching, %{public}d",  &v105,  v92);
    uint64_t v76 = (char *)v75;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationFilterController::CLLocationFilterController(id<CLIntersiloUniverse>, NonSystemLocationClientKeysCallback)",  "%s\n",  v75);
  }

  LOBYTE(v101) = 0;
  sub_1002F0B04(&buf);
  int v22 = sub_1002A6F64(buf, "EnableNMEAMapMatching", (BOOL *)&v101);
  int v23 = v22;
  double v24 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (!*((void *)&buf + 1)) {
    goto LABEL_32;
  }
  __int16 v25 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
  do
    unint64_t v26 = __ldaxr(v25);
  while (__stlxr(v26 - 1, v25));
  if (v26)
  {
LABEL_32:
    if (!v22) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }

  ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
  std::__shared_weak_count::__release_weak(v24);
  if (v23) {
LABEL_33:
  }
    *(_BYTE *)(a1 + 2416) = v101;
LABEL_34:
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101861DE0);
  }
  __int16 v27 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v28 = *(unsigned __int8 *)(a1 + 2416);
    LODWORD(buf) = 67240192;
    DWORD1(buf) = v28;
    _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "CLMM, EnableNMEAMapMatching, %{public}d",  (uint8_t *)&buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    int v77 = *(unsigned __int8 *)(a1 + 2416);
    LODWORD(v105.__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(v105.__r_.__value_.__r.__words[0]) = v77;
    LODWORD(v92) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM, EnableNMEAMapMatching, %{public}d",  &v105,  v92);
    v79 = (char *)v78;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationFilterController::CLLocationFilterController(id<CLIntersiloUniverse>, NonSystemLocationClientKeysCallback)",  "%s\n",  v78);
  }

  sub_1002F0B04(&buf);
  int v29 = sub_1002A6F64(buf, "EnableVerboseMapMatching", (BOOL *)&v101);
  int v30 = v29;
  __int16 v31 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (!*((void *)&buf + 1)) {
    goto LABEL_43;
  }
  int v32 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
  do
    unint64_t v33 = __ldaxr(v32);
  while (__stlxr(v33 - 1, v32));
  if (v33)
  {
LABEL_43:
    if (!v29) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }

  ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
  std::__shared_weak_count::__release_weak(v31);
  if (v30) {
LABEL_44:
  }
    *(_BYTE *)(a1 + 2417) = v101;
LABEL_45:
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101861DE0);
  }
  unsigned int v34 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v35 = *(unsigned __int8 *)(a1 + 2417);
    LODWORD(buf) = 67240192;
    DWORD1(buf) = v35;
    _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "CLMM, EnableVerboseMapMatching, %{public}d",  (uint8_t *)&buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    int v80 = *(unsigned __int8 *)(a1 + 2417);
    LODWORD(v105.__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(v105.__r_.__value_.__r.__words[0]) = v80;
    LODWORD(v92) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM, EnableVerboseMapMatching, %{public}d",  &v105,  v92);
    v82 = (char *)v81;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationFilterController::CLLocationFilterController(id<CLIntersiloUniverse>, NonSystemLocationClientKeysCallback)",  "%s\n",  v81);
  }

  uint64_t v36 = *(void *)(a1 + 2408);
  if (v36) {
    (*(void (**)(uint64_t, void))(*(void *)v36 + 80LL))(v36, *(unsigned __int8 *)(a1 + 2417));
  }
  sub_1002F0B04(&buf);
  sub_1002A6F64(buf, "IgnoreSignalEnvironment", (BOOL *)(a1 + 2673));
  __int16 v37 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (*((void *)&buf + 1))
  {
    double v38 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
    do
      unint64_t v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }

  sub_1002F0B04(&buf);
  int v40 = sub_1002A6F64(buf, "MapMatchingNetworkUsageThermalLevelHighThreshold", (BOOL *)&v101);
  int v41 = v40;
  uint64_t v42 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (!*((void *)&buf + 1)) {
    goto LABEL_61;
  }
  __int16 v43 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
  do
    unint64_t v44 = __ldaxr(v43);
  while (__stlxr(v44 - 1, v43));
  if (v44)
  {
LABEL_61:
    if (!v40) {
      goto LABEL_63;
    }
    goto LABEL_62;
  }

  ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
  std::__shared_weak_count::__release_weak(v42);
  if (v41) {
LABEL_62:
  }
    *(_DWORD *)(a1 + 2692) = v101;
LABEL_63:
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101861DE0);
  }
  __int16 v45 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v46 = *(_DWORD *)(a1 + 2692);
    LODWORD(buf) = 67240192;
    DWORD1(buf) = v46;
    _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "CLMM, MapMatchingNetworkUsageThermalLevelHighThreshold, %{public}d",  (uint8_t *)&buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    int v83 = *(_DWORD *)(a1 + 2692);
    LODWORD(v105.__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(v105.__r_.__value_.__r.__words[0]) = v83;
    LODWORD(v92) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM, MapMatchingNetworkUsageThermalLevelHighThreshold, %{public}d",  &v105,  v92);
    v85 = (char *)v84;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationFilterController::CLLocationFilterController(id<CLIntersiloUniverse>, NonSystemLocationClientKeysCallback)",  "%s\n",  v84);
  }

  sub_1002F0B04(&buf);
  int v47 = sub_1002A6F64(buf, "MapMatchingNetworkUsageThermalLevelLowThreshold", (BOOL *)&v101);
  int v48 = v47;
  uint64_t v49 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (!*((void *)&buf + 1)) {
    goto LABEL_72;
  }
  unint64_t v50 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
  do
    unint64_t v51 = __ldaxr(v50);
  while (__stlxr(v51 - 1, v50));
  if (v51)
  {
LABEL_72:
    if (!v47) {
      goto LABEL_74;
    }
    goto LABEL_73;
  }

  ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
  std::__shared_weak_count::__release_weak(v49);
  if (v48) {
LABEL_73:
  }
    *(_DWORD *)(a1 + 2696) = v101;
LABEL_74:
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101861DE0);
  }
  char v52 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v53 = *(_DWORD *)(a1 + 2696);
    LODWORD(buf) = 67240192;
    DWORD1(buf) = v53;
    _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEBUG,  "CLMM, MapMatchingNetworkUsageThermalLevelLowThreshold, %{public}d",  (uint8_t *)&buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    int v86 = *(_DWORD *)(a1 + 2696);
    LODWORD(v105.__r_.__value_.__l.__data_) = 67240192;
    HIDWORD(v105.__r_.__value_.__r.__words[0]) = v86;
    LODWORD(v92) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM, MapMatchingNetworkUsageThermalLevelLowThreshold, %{public}d",  &v105,  v92);
    v88 = (char *)v87;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationFilterController::CLLocationFilterController(id<CLIntersiloUniverse>, NonSystemLocationClientKeysCallback)",  "%s\n",  v87);
  }

  if (*(void *)(a1 + 2408))
  {
    uint64_t v54 = *(void *)(a1 + 2816);
    if (v54)
    {
      uint64_t v55 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v54 + 48LL))(v54);
      uint64_t v56 = v55;
      if (v55)
      {
        __int128 v97 = 0u;
        __int128 v98 = 0u;
        __int128 v95 = 0u;
        __int128 v96 = 0u;
        char v57 = 0;
        char v58 = 0;
        id v59 = [v55 countByEnumeratingWithState:&v95 objects:v100 count:16];
        if (!v59) {
          goto LABEL_114;
        }
        uint64_t v60 = *(void *)v96;
        while (1)
        {
          for (uint64_t i = 0LL; i != v59; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v96 != v60) {
              objc_enumerationMutation(v56);
            }
            sub_1010DDBC0(&buf, (char *)[*(id *)(*((void *)&v95 + 1) + 8 * (void)i) UTF8String]);
            if (v104 >= 0) {
              p___int128 buf = (const char *)&buf;
            }
            else {
              p___int128 buf = (const char *)buf;
            }
            CFStringRef v63 = CFStringCreateWithCString(kCFAllocatorDefault, p_buf, 0x8000100u);
            CFStringRef v64 = v63;
            if (&_SBSGetApplicationState)
            {
              int v65 = SBSGetApplicationState(v63);
              if (v65 == 32 || v65 == 8)
              {
                if (v104 < 0)
                {
                  if (*((void *)&buf + 1) == 14LL)
                  {
                    __int16 v67 = (unint64_t *)buf;
LABEL_101:
                    unint64_t v68 = bswap64(*v67);
                    unint64_t v69 = 0x636F6D2E6170706CLL;
                    if (v68 == 0x636F6D2E6170706CLL
                      && (unint64_t v68 = bswap64(*(unint64_t *)((char *)v67 + 6)),
                          unint64_t v69 = 0x706C652E4D617073LL,
                          v68 == 0x706C652E4D617073LL))
                    {
                      int v70 = 0;
                    }

                    else if (v68 < v69)
                    {
                      int v70 = -1;
                    }

                    else
                    {
                      int v70 = 1;
                    }

                    if (!v70) {
                      char v58 = 1;
                    }
                  }
                }

                else if (v104 == 14)
                {
                  __int16 v67 = (unint64_t *)&buf;
                  goto LABEL_101;
                }

                char v57 = 1;
              }
            }

            CFRelease(v64);
            if (v104 < 0) {
              operator delete((void *)buf);
            }
          }

          id v59 = [v56 countByEnumeratingWithState:&v95 objects:v100 count:16];
          if (!v59)
          {
LABEL_114:
            uint64_t v71 = v57 & 1;
            int v72 = v58 & 1;
            goto LABEL_116;
          }
        }
      }
    }

    uint64_t v71 = 0LL;
    int v72 = 0;
LABEL_116:
    sub_1009419D0(v94, v71, v72);
  }

  return v94;
}

void sub_1009413C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void **a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20)
{
  int v22 = (void *)a20[352];
  if (v22 == a17)
  {
    int v22 = a17;
    uint64_t v23 = 4LL;
  }

  else
  {
    if (!v22) {
      goto LABEL_8;
    }
    uint64_t v23 = 5LL;
  }

  (*(void (**)(void))(*v22 + 8 * v23))();
LABEL_8:
  double v24 = *a15;
  if (*a15)
  {
    a20[342] = v24;
    operator delete(v24);
  }

  __n128 v25 = nullsub_10(a12);
  uint64_t v26 = a20[301];
  a20[301] = 0LL;
  if (v26) {
    (*(void (**)(uint64_t, __n128))(*(void *)v26 + 8LL))(v26, v25);
  }
  sub_100903CD0(a13);
  sub_100F29C08(a14);
  *a20 = &off_10186FE20;
  __int16 v27 = (void *)a20[5];
  if (v27 == a20 + 2)
  {
    uint64_t v28 = 4LL;
    __int16 v27 = a20 + 2;
  }

  else
  {
    if (!v27) {
      goto LABEL_17;
    }
    uint64_t v28 = 5LL;
  }

  (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_17:
  _Unwind_Resume(a1);
}

void sub_1009415A0(uint64_t a1)
{
}

void sub_1009415A8(uint64_t a1)
{
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101861E00);
  }
  int v2 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "CLMM,onMapMatcherStopped,timer triggered",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101861E00);
    }
    v15[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  0LL,  "CLMM,onMapMatcherStopped,timer triggered",  v15,  2);
    __int16 v9 = (uint8_t *)v8;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationFilterController::onMapMatcherStopped()", "%s\n", v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  uint64_t v3 = *(void **)(a1 + 2408);
  if (v3)
  {
    sub_1005F5F88(v3, 1);
    id v4 = sub_1005F5F88(*(void **)(a1 + 2408), 0);
    GEOResetGeoCodecsAllocator(v4);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101861E00);
    }
    BOOL v5 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "CLMM,onMapMatcherStopped,road and building tiles cleared from process memory",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101861E00);
      }
      v15[0] = 0;
      LODWORD(v14) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  0LL,  "CLMM,onMapMatcherStopped,road and building tiles cleared from process memory",  v15,  v14);
      __int16 v11 = (uint8_t *)v10;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationFilterController::onMapMatcherStopped()", "%s\n", v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  unint64_t v6 = *(void **)(a1 + 2776);
  if (v6) {
    [v6 setNextFireDelay:1.79769313e308];
  }
  if (*(void *)(a1 + 2784))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101861E00);
    }
    uint64_t v7 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CLMM,Releasing mapmatcher collection OS transaction",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101861E00);
      }
      v15[0] = 0;
      LODWORD(v14) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  0LL,  "CLMM,Releasing mapmatcher collection OS transaction",  v15,  v14);
      unsigned int v13 = (uint8_t *)v12;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationFilterController::onMapMatcherStopped()", "%s\n", v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    *(void *)(a1 + 2784) = 0LL;
  }

void sub_1009419D0(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a2;
  *(_BYTE *)(a1 + 276_Block_object_dispose((const void *)(v1 - 224), 8) = a2 & a3;
  uint64_t v6 = *(void *)(a1 + 2408);
  if (v6) {
    sub_100D82888(v6, a2);
  }
  sub_100B3D768(a1 + 2688, v4);
  uint64_t v7 = *(void **)(a1 + 2408);
  if (v7) {
    sub_100D82ABC(v7, *(_BYTE *)(a1 + 2703) == 0);
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101861DE0);
  }
  NSInteger v8 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v9 = *(unsigned __int8 *)(a1 + 2703);
    *(_DWORD *)__int128 buf = 67109632;
    int v19 = v4;
    __int16 v20 = 1024;
    int v21 = a3;
    __int16 v22 = 1024;
    int v23 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "CLMM,Change in locationApp foreground status,isForeGround,%d,isAppleMaps,%d,networkusage,%d",  buf,  0x14u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    int v10 = *(unsigned __int8 *)(a1 + 2703);
    __int16 v14 = 1024;
    int v15 = a3;
    __int16 v16 = 1024;
    int v17 = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM,Change in locationApp foreground status,isForeGround,%d,isAppleMaps,%d,networkusage,%d",  &v13,  20,  67109632);
    uint64_t v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationFilterController::setLocationApplicationIsForeground(BOOL, BOOL)",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

BOOL sub_100941BF8(uint64_t a1, uint64_t a2)
{
  return sub_100F2A284(a1 + 48, a2);
}

uint64_t sub_100941C00(uint64_t a1)
{
  *(void *)a1 = off_101861C00;
  int v2 = *(void **)(a1 + 2776);
  if (v2)
  {
    [v2 invalidate];

    *(void *)(a1 + 2776) = 0LL;
  }

  uint64_t v3 = *(void **)(a1 + 2816);
  if (v3 == (void *)(a1 + 2792))
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = (void *)(a1 + 2792);
  }

  else
  {
    if (!v3) {
      goto LABEL_8;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_8:
  BOOL v5 = *(void **)(a1 + 2728);
  if (v5)
  {
    *(void *)(a1 + 2736) = v5;
    operator delete(v5);
  }

  __n128 v6 = nullsub_10(a1 + 2424);
  uint64_t v7 = *(void *)(a1 + 2408);
  *(void *)(a1 + 240_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t, __n128))(*(void *)v7 + 8LL))(v7, v6);
  }
  sub_100903CD0((void *)(a1 + 456));
  sub_100F29C08(a1 + 48);
  *(void *)a1 = &off_10186FE20;
  NSInteger v8 = *(void **)(a1 + 40);
  if (v8 == (void *)(a1 + 16))
  {
    uint64_t v9 = 4LL;
    NSInteger v8 = (void *)(a1 + 16);
    goto LABEL_16;
  }

  if (v8)
  {
    uint64_t v9 = 5LL;
LABEL_16:
    (*(void (**)(void))(*v8 + 8 * v9))();
  }

  return a1;
}

void sub_100941CFC(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100941C00(a1);
  operator delete(v1);
}

void sub_100941D10(uint64_t a1)
{
  *(_DWORD *)(a1 + 224_Block_object_dispose((const void *)(v1 - 224), 8) = 0xFFFF;
  *(void *)(a1 + 2260) = 0LL;
  *(void *)(a1 + 2252) = 0LL;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 226_Block_object_dispose((const void *)(v1 - 224), 8) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 2284) = _Q1;
  *(_OWORD *)(a1 + 2300) = _Q1;
  *(_OWORD *)(a1 + 2316) = _Q1;
  *(_DWORD *)(a1 + 2332) = 0;
  *(void *)(a1 + 2336) = 0xBFF0000000000000LL;
  *(void *)(a1 + 2352) = 0LL;
  *(void *)(a1 + 2344) = 0LL;
  *(_DWORD *)(a1 + 2360) = 0;
  *(void *)(a1 + 2364) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 2372) = 0x7FFFFFFF;
  *(void *)(a1 + 2376) = 0LL;
  *(void *)(a1 + 2392) = 0LL;
  *(void *)(a1 + 2384) = 0LL;
  *(_BYTE *)(a1 + 2400) = 0;
  sub_100903D68(a1 + 456);
  sub_100F29C0C(a1 + 48);
}

double sub_100941D98(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 224_Block_object_dispose((const void *)(v1 - 224), 8) = 0xFFFF;
  *(void *)(a1 + 2260) = 0LL;
  uint64_t v4 = a1 + 2268;
  *(void *)(a1 + 2252) = 0LL;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 226_Block_object_dispose((const void *)(v1 - 224), 8) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 2284) = _Q1;
  *(_OWORD *)(a1 + 2300) = _Q1;
  *(_OWORD *)(a1 + 2316) = _Q1;
  *(_DWORD *)(a1 + 2332) = 0;
  *(void *)(a1 + 2336) = 0xBFF0000000000000LL;
  *(void *)(a1 + 2352) = 0LL;
  *(void *)(a1 + 2344) = 0LL;
  *(_DWORD *)(a1 + 2360) = 0;
  *(void *)(a1 + 2364) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 2372) = 0x7FFFFFFF;
  *(void *)(a1 + 2376) = 0LL;
  *(void *)(a1 + 2392) = 0LL;
  *(void *)(a1 + 2384) = 0LL;
  *(_BYTE *)(a1 + 2400) = 0;
  if (sub_100904754(a1 + 456, a2, a1 + 2248))
  {
    *(void *)(v4 + 56) = *(void *)(a2 + 76);
    double result = *(double *)(a2 + 76);
    *(double *)(a1 + 2656) = result;
  }

  return result;
}

BOOL sub_100941E3C(uint64_t a1, _OWORD *a2)
{
  __int128 v2 = *(_OWORD *)(a1 + 2264);
  *a2 = *(_OWORD *)(a1 + 2248);
  a2[1] = v2;
  __int128 v3 = *(_OWORD *)(a1 + 2280);
  __int128 v4 = *(_OWORD *)(a1 + 2296);
  __int128 v5 = *(_OWORD *)(a1 + 2328);
  a2[4] = *(_OWORD *)(a1 + 2312);
  a2[5] = v5;
  a2[2] = v3;
  a2[3] = v4;
  __int128 v6 = *(_OWORD *)(a1 + 2344);
  __int128 v7 = *(_OWORD *)(a1 + 2360);
  __int128 v8 = *(_OWORD *)(a1 + 2376);
  *(_OWORD *)((char *)a2 + 140) = *(_OWORD *)(a1 + 2388);
  a2[7] = v7;
  a2[8] = v8;
  a2[6] = v6;
  return *(double *)(a1 + 2268) >= 0.0;
}

uint64_t sub_100941E80(uint64_t a1, uint64_t a2, double a3)
{
  double v9 = a3;
  *(void *)(a2 + 96) = 0LL;
  *(void *)(a2 + 104) = 0LL;
  *(_DWORD *)(a2 + 112) = 0;
  *(void *)(a2 + 136) = 0LL;
  *(void *)(a2 + 144) = 0LL;
  *(void *)(a2 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_BYTE *)(a2 + 152) = 0;
  *(_DWORD *)a2 = 0xFFFF;
  *(void *)(a2 + 12) = 0LL;
  *(void *)(a2 + 4) = 0LL;
  *(_OWORD *)(a2 + 20) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a2 + 36) = _Q0;
  *(_OWORD *)(a2 + 52) = _Q0;
  *(_OWORD *)(a2 + 6_Block_object_dispose((const void *)(v1 - 224), 8) = _Q0;
  *(_DWORD *)(a2 + 84) = 0;
  *(void *)(a2 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
  *(void *)(a2 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a2 + 124) = 0x7FFFFFFF;
  return sub_10090BBCC(a1 + 456, &v9, a2);
}

uint64_t sub_100941F04(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 2408);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 48LL))(result);
  }
  return result;
}

uint64_t sub_100941F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_BYTE *)(a1 + 2680)) {
    return 0LL;
  }
  if (!*(void *)(a1 + 2408) || *(_BYTE *)(a3 + 425) != 0) {
    return 0LL;
  }
  int v8 = *(_DWORD *)(a2 + 96);
  if ((v8 & 0xFFFFFFF7) != 1 && (v8 | 8) != 11 && (v8 != 2 || *(_BYTE *)(a1 + 2416) == 0)) {
    return 0LL;
  }
  sub_100942194(a1);
  __int128 v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 2472) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 248_Block_object_dispose((const void *)(v1 - 224), 8) = v10;
  __int128 v11 = *(_OWORD *)(a2 + 32);
  __int128 v12 = *(_OWORD *)(a2 + 48);
  __int128 v13 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 2536) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 2552) = v13;
  *(_OWORD *)(a1 + 2504) = v11;
  *(_OWORD *)(a1 + 2520) = v12;
  __int128 v14 = *(_OWORD *)(a2 + 96);
  __int128 v15 = *(_OWORD *)(a2 + 112);
  __int128 v16 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 2612) = *(_OWORD *)(a2 + 140);
  *(_OWORD *)(a1 + 2584) = v15;
  *(_OWORD *)(a1 + 2600) = v16;
  *(_OWORD *)(a1 + 256_Block_object_dispose((const void *)(v1 - 224), 8) = v14;
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(**(void **)(a1 + 2408) + 40LL))( *(void *)(a1 + 2408),  a2,  a3);
  int v17 = *(void **)(a1 + 2776);
  if (v17 && (_DWORD)result)
  {
    if (!*(void *)(a1 + 2784))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101861E00);
      }
      uint64_t v18 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "CLMM,Creating mapmatcher OS transaction",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101861E00);
        }
        v22[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  0LL,  "CLMM,Creating mapmatcher OS transaction",  v22,  2);
        int v21 = (uint8_t *)v20;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationFilterController::mapMatch(CLDaemonLocation &, CLDaemonLocationPrivate &)",  "%s\n",  v20);
        if (v21 != buf) {
          free(v21);
        }
      }

      *(void *)(a1 + 2784) = os_transaction_create("CLMapMatcher");
      int v17 = *(void **)(a1 + 2776);
    }

    [v17 setNextFireDelay:300.0];
    return 1LL;
  }

  return result;
}

uint64_t sub_100942194(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 2408);
  if (result)
  {
    if (*(_BYTE *)(a1 + 2768)
      && (uint64_t v3 = sub_10080E94C(),
          int v7 = 1,
          double v4 = sub_10080EB58(v3, &v7),
          BOOL v5 = sub_1005F5294((_DWORD *)(a1 + 2720), v4),
          uint64_t result = *(void *)(a1 + 2408),
          !v5))
    {
      BOOL v6 = sub_100D82D10(result);
      uint64_t result = *(void *)(a1 + 2408);
    }

    else
    {
      BOOL v6 = 0;
    }

    return sub_100D825D0(result, v6);
  }

  return result;
}

double sub_10094220C(uint64_t a1)
{
  uint64_t v2 = a1 + 2492;
  uint64_t v3 = *(void *)(a1 + 2408);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16LL))(v3);
  }
  *(_DWORD *)(a1 + 2472) = 0xFFFF;
  *(void *)(a1 + 2484) = 0LL;
  *(void *)(a1 + 2476) = 0LL;
  double result = -1.0;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)uint64_t v2 = xmmword_1012E0070;
  *(_OWORD *)(v2 + 16) = _Q1;
  *(_OWORD *)(v2 + 32) = _Q1;
  *(_OWORD *)(v2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = _Q1;
  *(_DWORD *)(a1 + 2556) = 0;
  *(void *)(a1 + 2560) = 0xBFF0000000000000LL;
  *(void *)(a1 + 2576) = 0LL;
  *(void *)(a1 + 256_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_DWORD *)(a1 + 2584) = 0;
  *(void *)(v2 + 96) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 2596) = 0x7FFFFFFF;
  *(void *)(a1 + 2600) = 0LL;
  *(void *)(a1 + 2616) = 0LL;
  *(void *)(a1 + 260_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_BYTE *)(a1 + 2624) = 0;
  return result;
}

uint64_t sub_10094229C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 2408);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 24LL))(result);
  }
  return result;
}

uint64_t sub_1009422B4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 2408);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 32LL))(result);
  }
  return result;
}

uint64_t sub_1009422CC(uint64_t result, int *a2)
{
  uint64_t v3 = result;
  if (*(void *)(result + 2408))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101861E00);
    }
    double v4 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      int v5 = *a2;
      unint64_t v6 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3);
      uint64_t v7 = sub_10080E94C();
      *(_DWORD *)__int128 buf = 1;
      double v8 = sub_10080EB58(v7, buf);
      uint64_t v9 = sub_10080E94C();
      double v10 = sub_10080EF30(v9);
      *(_DWORD *)__int128 buf = 67240960;
      int v26 = v5;
      __int16 v27 = 2050;
      unint64_t v28 = v6;
      __int16 v29 = 2050;
      double v30 = v8;
      __int16 v31 = 2050;
      double v32 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLMM,RouteHints,CLLocationFilterController,setMapMatchingRouteHint,type,%{public}d,sz,%{public}zu,mct,%{public}. 3f,propagation_us,%{public}.3f",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101861E00);
      }
      uint64_t v11 = qword_1019348B8;
      int v12 = *a2;
      unint64_t v13 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3);
      double v14 = sub_1003713F0();
      uint64_t v15 = sub_10080E94C();
      v18[0] = 67240960;
      v18[1] = v12;
      __int16 v19 = 2050;
      unint64_t v20 = v13;
      __int16 v21 = 2050;
      double v22 = v14;
      __int16 v23 = 2050;
      double v24 = sub_10080EF30(v15);
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v11,  2LL,  "CLMM,RouteHints,CLLocationFilterController,setMapMatchingRouteHint,type,%{public}d,sz,%{public}zu,mct,%{public}. 3f,propagation_us,%{public}.3f",  v18,  38);
      int v17 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedMapMatchingRouteHint(const CLMapsRouteHintData &)",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }

    uint64_t result = sub_100D82424(*(void *)(v3 + 2408), (double *)a2);
  }

  *(void *)(v3 + 2720) = *(void *)a2;
  if ((int *)(v3 + 2720) != a2) {
    uint64_t result = (uint64_t)sub_1005F6B84( (char *)(v3 + 2728),  *((char **)a2 + 1),  *((void *)a2 + 2),  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3));
  }
  *(_OWORD *)(v3 + 2752) = *((_OWORD *)a2 + 2);
  return result;
}

uint64_t sub_10094257C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 2408);
  if (result) {
    return sub_100D8254C(result, a2);
  }
  return result;
}

double sub_10094258C()
{
  return 166.0;
}

BOOL sub_100942598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v4 = *(double *)(a4 + 544);
  if (v4 > 0.0)
  {
    *(void *)(a2 + 2_Block_object_dispose((const void *)(v1 - 224), 8) = *(void *)(a4 + 28);
    *(_DWORD *)(a3 + 316) = *(_DWORD *)(a4 + 476);
    *(_DWORD *)(a3 + 312) = *(_DWORD *)(a4 + 472);
    *(double *)(a3 + 384) = v4;
    *(void *)(a3 + 360) = *(void *)(a4 + 520);
    *(_OWORD *)(a3 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = *(_OWORD *)(a4 + 528);
    *(void *)(a3 + 624) = *(void *)(a4 + 784);
    *(_OWORD *)(a3 + 496) = *(_OWORD *)(a4 + 656);
  }

  return v4 > 0.0;
}

void sub_1009425EC(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 2408);
  if (v3) {
    BOOL v4 = *a2 == 0;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    BOOL v6 = (*(void *)a3 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000LL;
    BOOL v7 = *(_DWORD *)(a3 + 8) == 71 || (*(void *)a3 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000LL;
    if (!v7 && *(double *)a3 > 0.0)
    {
      __int128 v8 = *(_OWORD *)(a3 + 16);
      v23[0] = *(_OWORD *)a3;
      v23[1] = v8;
      int v24 = *(_DWORD *)(a3 + 32);
      sub_100D7CE7C(v3, (uint64_t)v23);
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    uint64_t v9 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v10 = *(_DWORD *)(a3 + 8);
      unint64_t v11 = *(void *)a3;
      if (!v6) {
        unint64_t v11 = 0xBFF0000000000000LL;
      }
      *(_DWORD *)__int128 buf = 67240448;
      int v20 = v10;
      __int16 v21 = 2050;
      unint64_t v22 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "CLMM,CLLocationFilterController,Received NotificationWorkoutSessionOverride,fitnessSession,%{public}d,startTime,%{public}.1lf",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      int v12 = *(_DWORD *)(a3 + 8);
      unint64_t v13 = *(void *)a3;
      if (!v6) {
        unint64_t v13 = 0xBFF0000000000000LL;
      }
      v16[0] = 67240448;
      v16[1] = v12;
      __int16 v17 = 2050;
      unint64_t v18 = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM,CLLocationFilterController,Received NotificationWorkoutSessionOverride,fitnessSession,%{public}d,startTime,%{public}.1lf",  v16,  18);
      uint64_t v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedMotionStateObserverNotification(const CLMotionStateObserver_Type::N otification &, const CLMotionStateObserver_Type::NotificationData &)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }
  }

void sub_100942830(uint64_t a1, int *a2, __int128 *a3)
{
  if ((*a2 - 1) >= 2)
  {
    if (*a2)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      unint64_t v22 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        int v23 = *a2;
        *(_DWORD *)__int128 buf = 67240192;
        int v76 = v23;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "#Warning Unknown notification %{public}d",  buf,  8u);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      uint64_t v19 = qword_101934838;
      int v24 = *a2;
      LODWORD(v66) = 67240192;
      DWORD1(v66) = v24;
      LODWORD(v56) = 8;
      uint64_t v55 = (int *)&v66;
      int v20 = "#Warning Unknown notification %{public}d";
    }

    else
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      unint64_t v18 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "#Warning unexpected kNotificationMovementCoarse",  buf,  2u);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      uint64_t v19 = qword_101934838;
      LOWORD(v66) = 0;
      LODWORD(v56) = 2;
      uint64_t v55 = (int *)&v66;
      int v20 = "#Warning unexpected kNotificationMovementCoarse";
    }

    uint64_t v25 = 0LL;
    goto LABEL_77;
  }

  uint64_t v5 = sub_10080E94C();
  *(_DWORD *)__int128 buf = 0;
  double v6 = sub_10080EB58(v5, buf);
  double v57 = v6;
  __int128 v7 = a3[6];
  __int128 v8 = a3[7];
  __int128 v9 = a3[4];
  __int128 v71 = a3[5];
  __int128 v72 = v7;
  __int128 v73 = v8;
  uint64_t v74 = *((void *)a3 + 16);
  __int128 v10 = a3[3];
  __int128 v68 = a3[2];
  __int128 v69 = v10;
  __int128 v70 = v9;
  __int128 v11 = a3[1];
  __int128 v66 = *a3;
  __int128 v67 = v11;
  double v12 = vabdd_f64(v6, *(double *)(a1 + 2640));
  if (v12 >= 1.5)
  {
    int v17 = v66;
  }

  else
  {
    BOOL v16 = *(double *)(a1 + 2632) == 0.0
       && ((v13 = (double *)(a1 + 2516), double v14 = vabdd_f64(v6, *(double *)(a1 + 2548)), v12 < 0.5)
         ? (BOOL v15 = v14 < 1.5)
         : (BOOL v15 = 0),
           v15 && *v13 >= 0.0)
       && *v13 + *(double *)(a1 + 2524) * -2.0 < 0.0;
    int v17 = v66;
    if ((int)v66 > 40)
    {
      if ((_DWORD)v66 == 41)
      {
LABEL_13:
        *(void *)&__int128 v66 = 0x200000005LL;
        int v17 = 5;
      }

      else if ((_DWORD)v66 == 52 || (_DWORD)v66 == 56)
      {
LABEL_47:
        DWORD1(v66) = 2;
      }

      else
      {
LABEL_36:
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101861DE0);
        }
        int v26 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "Unhandled case", buf, 2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101861DE0);
          }
          LOWORD(v5_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  17LL,  "Unhandled case",  &v58,  2);
          unint64_t v28 = (uint8_t *)v27;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLLocationFilterController::feedMotionNotification(const CLMotionState_Type::Notification &, co nst CLMotionState_Type::NotificationData &)",  "%s\n",  v27);
          if (v28 != buf) {
            free(v28);
          }
        }
      }
    }

    else
    {
      switch((int)v66)
      {
        case 0:
        case 6:
          break;
        case 1:
          int v17 = 10;
          LODWORD(v66) = 10;
          if (v16)
          {
            DWORD1(v66) = 2;
            int v17 = 10;
          }

          break;
        case 2:
          int v17 = 11;
          LODWORD(v66) = 11;
          if (v16)
          {
            DWORD1(v66) = 2;
            int v17 = 11;
          }

          break;
        case 3:
        case 4:
        case 7:
        case 8:
        case 9:
          goto LABEL_13;
        case 5:
          goto LABEL_47;
        case 10:
        case 11:
          if (v16) {
            goto LABEL_47;
          }
          break;
        default:
          goto LABEL_36;
      }
    }
  }

  if (*(_BYTE *)(a1 + 2672)
    && v17
    && ((double v29 = v6 - *(double *)(a1 + 2648), v29 >= 0.0) ? (v30 = v29 < 10.0) : (v30 = 0), v30))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    int v48 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v49 = sub_10080E94C();
      double v50 = sub_10080EF30(v49);
      *(_DWORD *)__int128 buf = 67240704;
      int v76 = v17;
      __int16 v77 = 2050;
      *(double *)unint64_t v78 = v6;
      *(_WORD *)&v78[8] = 2050;
      double v79 = v50;
      _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEBUG,  "Going to sleep. Not providing motion state, %{public}d, to the location KF,now,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      uint64_t v40 = qword_101934838;
      uint64_t v51 = sub_10080E94C();
      double v52 = sub_10080EF30(v51);
      int v58 = 67240704;
      int v59 = v17;
      __int16 v60 = 2050;
      *(double *)int v61 = v6;
      *(_WORD *)&v61[8] = 2050;
      double v62 = v52;
      LODWORD(v56) = 28;
      uint64_t v55 = &v58;
      int v20 = "Going to sleep. Not providing motion state, %{public}d, to the location KF,now,%{public}.3f,propagation_us,%{public}.3f";
      goto LABEL_76;
    }
  }

  else
  {
    sub_100F2B370(a1 + 48, &v57, &v66, (int *)&v66 + 1);
    sub_100903E30(a1 + 456, &v57, (int *)&v66, (int *)&v66 + 1);
    uint64_t v31 = *(void *)(a1 + 2408);
    if (v31)
    {
      (*(void (**)(uint64_t, double *, __int128 *))(*(void *)v31 + 64LL))(v31, &v57, &v66);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      double v32 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        int v33 = v66;
        int v34 = DWORD1(v66);
        int v35 = HIDWORD(v66);
        int v36 = v67;
        double v37 = v57;
        uint64_t v38 = sub_10080E94C();
        double v39 = sub_10080EF30(v38);
        *(_DWORD *)__int128 buf = 67241472;
        int v76 = v33;
        __int16 v77 = 1026;
        *(_DWORD *)unint64_t v78 = v34;
        *(_WORD *)&v78[4] = 1026;
        *(_DWORD *)&v78[6] = v35;
        LOWORD(v79) = 1026;
        *(_DWORD *)((char *)&v79 + 2) = v36;
        HIWORD(v79) = 2050;
        double v80 = v37;
        __int16 v81 = 2050;
        double v82 = v39;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "CLMM, MotionState,type,%{public}d,confidence,%{public}d,mountedState,%{public}d,mountedConfidence,%{public}d,n ow,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x2Eu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101861DE0);
        }
        uint64_t v40 = qword_101934838;
        int v41 = v66;
        int v42 = DWORD1(v66);
        int v43 = HIDWORD(v66);
        int v44 = v67;
        double v45 = v57;
        uint64_t v46 = sub_10080E94C();
        double v47 = sub_10080EF30(v46);
        int v58 = 67241472;
        int v59 = v41;
        __int16 v60 = 1026;
        *(_DWORD *)int v61 = v42;
        *(_WORD *)&v61[4] = 1026;
        *(_DWORD *)&v61[6] = v43;
        LOWORD(v62) = 1026;
        *(_DWORD *)((char *)&v62 + 2) = v44;
        HIWORD(v62) = 2050;
        double v63 = v45;
        __int16 v64 = 2050;
        double v65 = v47;
        LODWORD(v56) = 46;
        uint64_t v55 = &v58;
        int v20 = "CLMM, MotionState,type,%{public}d,confidence,%{public}d,mountedState,%{public}d,mountedConfidence,%{public"
              "}d,now,%{public}.3f,propagation_us,%{public}.3f";
LABEL_76:
        uint64_t v19 = v40;
        uint64_t v25 = 2LL;
LABEL_77:
        _os_log_send_and_compose_impl(2LL, 0LL, buf, 1628LL, &_mh_execute_header, v19, v25, v20, v55, v56);
        uint64_t v54 = (uint8_t *)v53;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedMotionNotification(const CLMotionState_Type::Notification &, cons t CLMotionState_Type::NotificationData &)",  "%s\n",  v53);
        if (v54 != buf) {
          free(v54);
        }
      }
    }
  }

void sub_1009430C0(uint64_t a1, int *a2, uint64_t a3)
{
  int v4 = *a2;
  if (*a2 <= 6)
  {
    if (v4 == 2)
    {
      uint64_t v28 = sub_10080E94C();
      *(_DWORD *)__int128 buf = 0;
      *(double *)(a1 + 264_Block_object_dispose((const void *)(v1 - 224), 8) = sub_10080EB58(v28, buf);
      sub_10090BB8C(a1 + 456, (double *)(a1 + 2648));
      *(_BYTE *)(a1 + 2672) = 1;
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      double v29 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v30 = sub_10080E94C();
        *(_DWORD *)__int128 buf = 0;
        double v31 = sub_10080EB58(v30, buf);
        uint64_t v32 = sub_10080E94C();
        double v33 = sub_10080EF30(v32);
        *(_DWORD *)__int128 buf = 134349312;
        double v63 = v31;
        __int16 v64 = 2050;
        *(double *)double v65 = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "device entering sleep - no longer has active cell,now,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101861DE0);
        }
        uint64_t v45 = qword_101934838;
        double v46 = sub_10037FE24();
        uint64_t v47 = sub_10080E94C();
        int v57 = 134349312;
        double v58 = v46;
        __int16 v59 = 2050;
        *(void *)__int16 v60 = sub_10080EF30(v47);
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v45,  2LL,  "device entering sleep - no longer has active cell,now,%{public}.3f,propagation_us,%{public}.3f",  &v57,  22);
        uint64_t v49 = (uint8_t *)v48;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v48);
        if (v49 != buf) {
          free(v49);
        }
      }

      *(_DWORD *)__int128 buf = 0;
      int v57 = 2;
      sub_100903E30(a1 + 456, (double *)(a1 + 2648), (int *)buf, &v57);
      *(_DWORD *)__int128 buf = 0;
      int v57 = 2;
      sub_100F2B370(a1 + 48, (void *)(a1 + 2648), buf, &v57);
    }

    else if (v4 == 3)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      __int128 v8 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v9 = sub_10080E94C();
        *(_DWORD *)__int128 buf = 0;
        double v10 = sub_10080EB58(v9, buf);
        uint64_t v11 = sub_10080E94C();
        double v12 = sub_10080EF30(v11);
        *(_DWORD *)__int128 buf = 134349312;
        double v63 = v10;
        __int16 v64 = 2050;
        *(double *)double v65 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "device wake - checking for corresponding sleep,now,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101861DE0);
        }
        uint64_t v34 = qword_101934838;
        double v35 = sub_10037FE24();
        uint64_t v36 = sub_10080E94C();
        int v57 = 134349312;
        double v58 = v35;
        __int16 v59 = 2050;
        *(void *)__int16 v60 = sub_10080EF30(v36);
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v34,  2LL,  "device wake - checking for corresponding sleep,now,%{public}.3f,propagation_us,%{public}.3f",  &v57,  22);
        uint64_t v38 = (uint8_t *)v37;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v37);
        if (v38 != buf) {
          free(v38);
        }
      }

      if (!*(_BYTE *)(a1 + 2672))
      {
        uint64_t v13 = sub_10080E94C();
        *(_DWORD *)__int128 buf = 0;
        double v14 = sub_10080EB58(v13, buf);
        if (v14 - *(double *)(a1 + 2664) > 2.0)
        {
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101861DE0);
          }
          BOOL v15 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
          {
            double v16 = *(double *)(a1 + 2656);
            uint64_t v17 = sub_10080E94C();
            double v18 = sub_10080EF30(v17);
            *(_DWORD *)__int128 buf = 134349568;
            double v63 = v16;
            __int16 v64 = 2050;
            *(double *)double v65 = v14;
            *(_WORD *)&v65[8] = 2050;
            double v66 = v18;
            _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "#Warning wake detected with no prior sleep known, sending unknown motion to location KF at time, %{public} .3lf,now,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x20u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101861DE0);
            }
            uint64_t v50 = qword_101934838;
            double v51 = *(double *)(a1 + 2656);
            uint64_t v52 = sub_10080E94C();
            double v53 = sub_10080EF30(v52);
            int v57 = 134349568;
            double v58 = v51;
            __int16 v59 = 2050;
            *(double *)__int16 v60 = v14;
            *(_WORD *)&v60[8] = 2050;
            double v61 = v53;
            LODWORD(v56) = 32;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v50,  0LL,  "#Warning wake detected with no prior sleep known, sending unknown motion to location KF at time, %{public} .3lf,now,%{public}.3f,propagation_us,%{public}.3f",  &v57,  v56);
            uint64_t v55 = (uint8_t *)v54;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notificat ion &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v54);
            if (v55 != buf) {
              free(v55);
            }
          }

          *(_DWORD *)__int128 buf = 0;
          int v57 = 2;
          sub_100903E30(a1 + 456, (double *)(a1 + 2656), (int *)buf, &v57);
        }
      }

      uint64_t v19 = sub_10080E94C();
      *(_DWORD *)__int128 buf = 0;
      *(double *)(a1 + 2664) = sub_10080EB58(v19, buf);
      *(_BYTE *)(a1 + 2672) = 0;
    }
  }

  else
  {
    uint64_t v6 = *(void *)(a1 + 2408);
    if (v4 == 7)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      int v20 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        double v21 = *(double *)a3;
        int v22 = *(unsigned __int8 *)(a3 + 8);
        int v23 = *(unsigned __int8 *)(a3 + 9);
        int v24 = *(unsigned __int8 *)(a3 + 16);
        *(_DWORD *)__int128 buf = 134349824;
        double v63 = v21;
        __int16 v64 = 1026;
        *(_DWORD *)double v65 = v22;
        *(_WORD *)&v65[4] = 1026;
        *(_DWORD *)&v65[6] = v23;
        LOWORD(v66) = 1026;
        *(_DWORD *)((char *)&v66 + 2) = v24;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "CLMM,Battery notification,level,%{public}.2lf,charged,%{public}d,connected,%{public}d,wasConnected,%{public}d",  buf,  0x1Eu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101861DE0);
        }
        double v39 = *(double *)a3;
        int v40 = *(unsigned __int8 *)(a3 + 8);
        int v41 = *(unsigned __int8 *)(a3 + 9);
        int v42 = *(unsigned __int8 *)(a3 + 16);
        int v57 = 134349824;
        double v58 = v39;
        __int16 v59 = 1026;
        *(_DWORD *)__int16 v60 = v40;
        *(_WORD *)&v60[4] = 1026;
        *(_DWORD *)&v60[6] = v41;
        LOWORD(v61) = 1026;
        *(_DWORD *)((char *)&v61 + 2) = v42;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM,Battery notification,level,%{public}.2lf,charged,%{public}d,connected,%{public}d,wasConnected,%{public}d",  &v57,  30);
        int v44 = (uint8_t *)v43;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)",  "%s\n",  v43);
        if (v44 != buf) {
          free(v44);
        }
      }

      if (v6)
      {
        double v25 = *(double *)a3;
        if (*(double *)a3 >= 0.0 && v25 <= 100.0)
        {
          sub_100B3DAD0(a1 + 2688, v25);
          int v26 = *(void **)(a1 + 2408);
          if (v26) {
            sub_100D82ABC(v26, *(_BYTE *)(a1 + 2703) == 0);
          }
        }
      }
    }

    else
    {
      if (v4 == 13)
      {
        if (!v6) {
          return;
        }
        sub_100B3DA08(a1 + 2688, *(_DWORD *)a3);
        goto LABEL_37;
      }

      if (v4 == 15 && v6 != 0)
      {
        sub_100B3DA80(a1 + 2688, *(_BYTE *)a3);
LABEL_37:
        __int16 v27 = *(void **)(a1 + 2408);
        if (v27) {
          sub_100D82ABC(v27, *(_BYTE *)(a1 + 2703) == 0);
        }
      }
    }
  }

uint64_t sub_10094394C(uint64_t result, uint64_t a2, int *a3)
{
  if (!*(_BYTE *)(result + 2673))
  {
    uint64_t v4 = result;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    uint64_t v5 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v6 = *(_DWORD *)(v4 + 2712);
      int v7 = *a3;
      int v8 = a3[1];
      *(_DWORD *)__int128 buf = 67240704;
      int v20 = v6;
      __int16 v21 = 1026;
      int v22 = v7;
      __int16 v23 = 1026;
      int v24 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "priorSignalEnvironment,%{public}d,newSignalEnvironment,%{public}d,fidelity,%{public}d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      int v9 = *(_DWORD *)(v4 + 2712);
      int v10 = *a3;
      int v11 = a3[1];
      v14[0] = 67240704;
      v14[1] = v9;
      __int16 v15 = 1026;
      int v16 = v10;
      __int16 v17 = 1026;
      int v18 = v11;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "priorSignalEnvironment,%{public}d,newSignalEnvironment,%{public}d,fidelity,%{public}d",  v14,  20);
      uint64_t v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedSignalEnvironmentNotification(const CLSignalEnvironmentProvider_Typ e::Notification &, const CLSignalEnvironmentProvider_Type::NotificationData &)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    sub_100B3DAA8((int *)(v4 + 2688), *a3);
    uint64_t result = *(void *)(v4 + 2408);
    if (result)
    {
      sub_100D82ABC((void *)result, *(_BYTE *)(v4 + 2703) == 0);
      uint64_t result = *(void *)(v4 + 2408);
      *(_DWORD *)(v4 + 2676) = *a3;
      if (result) {
        return sub_100D7CBA0(result, *(void *)a3);
      }
    }

    else
    {
      *(_DWORD *)(v4 + 2676) = *a3;
    }
  }

  return result;
}

uint64_t sub_100943B84(uint64_t a1, int *a2)
{
  uint64_t v4 = (const void *)sub_100320878(a2);
  if (CFEqual(v4, kCTRegistrationStatusChangedNotification))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    uint64_t v5 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = sub_10080E94C();
      *(_DWORD *)__int128 buf = 0;
      double v7 = sub_10080EB58(v6, buf);
      uint64_t v8 = sub_10080E94C();
      double v9 = sub_10080EF30(v8);
      *(_DWORD *)__int128 buf = 134349312;
      *(double *)&uint8_t buf[4] = v7;
      __int16 v28 = 2050;
      double v29 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "device lost registration - no longer has active cell,now,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x16u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_16;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    uint64_t v10 = qword_101934838;
    double v11 = sub_10037FE24();
    uint64_t v12 = sub_10080E94C();
    *(_DWORD *)int v26 = 134349312;
    *(double *)&v26[4] = v11;
    *(_WORD *)&v26[12] = 2050;
    *(void *)&v26[14] = sub_10080EF30(v12);
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  2LL,  "device lost registration - no longer has active cell,now,%{public}.3f,propagation_us,%{public}.3f",  v26,  22,  *(_OWORD *)v26,  *(void *)&v26[16]);
    goto LABEL_21;
  }

  double v14 = (const void *)sub_100320878(a2);
  uint64_t result = CFEqual(v14, kCTCallStatusChangeNotification);
  if (!(_DWORD)result) {
    return result;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101861DE0);
  }
  int v16 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v17 = sub_10080E94C();
    *(_DWORD *)__int128 buf = 0;
    double v18 = sub_10080EB58(v17, buf);
    uint64_t v19 = sub_10080E94C();
    double v20 = sub_10080EF30(v19);
    *(_DWORD *)__int128 buf = 134349312;
    *(double *)&uint8_t buf[4] = v18;
    __int16 v28 = 2050;
    double v29 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "device on active call - no longer has active cell,now,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    uint64_t v22 = qword_101934838;
    double v23 = sub_10037FE24();
    uint64_t v24 = sub_10080E94C();
    *(_DWORD *)int v26 = 134349312;
    *(double *)&v26[4] = v23;
    *(_WORD *)&v26[12] = 2050;
    *(void *)&v26[14] = sub_10080EF30(v24);
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "device on active call - no longer has active cell,now,%{public}.3f,propagation_us,%{public}.3f",  v26,  22,  *(_OWORD *)v26,  *(void *)&v26[16]);
LABEL_21:
    double v25 = (char *)v13;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedTelephonyNotification(const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)",  "%s\n",  v13);
    if (v25 != buf) {
      free(v25);
    }
  }

uint64_t sub_100943F0C(uint64_t a1, unsigned __int8 **a2)
{
  uint64_t v2 = *(void *)(a1 + 2816);
  if (v2
    && (uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v2 + 48LL))(v2)) != 0LL
    && (uint64_t v5 = v4,
        __int128 v26 = 0u,
        __int128 v27 = 0u,
        __int128 v24 = 0u,
        __int128 v25 = 0u,
        (id v6 = [v4 countByEnumeratingWithState:&v24 objects:v28 count:16]) != 0))
  {
    char v7 = 0;
    uint64_t v8 = *(void *)v25;
    while (2)
    {
      for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v25 != v8) {
          objc_enumerationMutation(v5);
        }
        sub_1010DDBC0(&__p, (char *)[*(id *)(*((void *)&v24 + 1) + 8 * (void)i) UTF8String]);
        if ((v23 & 0x80u) == 0) {
          size_t v10 = v23;
        }
        else {
          size_t v10 = __n;
        }
        double v11 = (unsigned __int8 *)*((unsigned __int8 *)a2 + 23);
        int v12 = (char)v11;
        if ((unsigned __int8 *)v10 == v11)
        {
          if (v12 >= 0) {
            uint64_t v13 = (unsigned __int8 *)a2;
          }
          else {
            uint64_t v13 = *a2;
          }
          if ((v23 & 0x80) != 0)
          {
            double v18 = __p;
            int v19 = memcmp(__p, v13, __n);
            operator delete(v18);
            if (!v19)
            {
LABEL_35:
              char v7 = 1;
              return v7 & 1;
            }
          }

          else
          {
            if (!v23) {
              goto LABEL_35;
            }
            uint64_t v14 = 0LL;
            do
            {
              int v15 = *((unsigned __int8 *)&__p + v14);
              int v16 = v13[v14];
            }

            while (v15 == v16 && v23 - 1LL != v14++);
            v7 |= v15 == v16;
            if (v15 == v16) {
              return v7 & 1;
            }
          }
        }

        else if ((v23 & 0x80) != 0)
        {
          operator delete(__p);
        }
      }

      id v6 = [v5 countByEnumeratingWithState:&v24 objects:v28 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }

  else
  {
    char v7 = 0;
  }

  return v7 & 1;
}

void sub_1009440E4(uint64_t a1, int *a2, uint64_t a3)
{
  if (*(void *)(a1 + 2408))
  {
    int v5 = *a2;
    if ((*a2 - 1) < 3)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      id v6 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v7 = a3 + 8;
        *(_DWORD *)__int128 buf = 136315138;
        uint64_t v30 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CLMM,locationApp backgrounded or terminated,%s",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_10;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      uint64_t v19 = *(void *)(a3 + 8);
      uint64_t v18 = a3 + 8;
      uint64_t v17 = v19;
      int v27 = 136315138;
      uint64_t v28 = v17;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM,locationApp backgrounded or terminated,%s",  (const char *)&v27);
      uint64_t v21 = (uint8_t *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedAppNotification(const CLAppMonitor_Type::Notification &, const CLAp pMonitor_Type::NotificationData &)",  "%s\n",  v20);
      if (v21 == buf) {
        goto LABEL_10;
      }
      goto LABEL_53;
    }

    if (v5 == 9 || v5 == 4)
    {
      double v9 = (void *)(a3 + 8);
      if (!sub_100943F0C(a1, (unsigned __int8 **)(a3 + 8)))
      {
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101861DE0);
        }
        uint64_t v13 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          else {
            uint64_t v14 = *(void *)(a3 + 8);
          }
          *(_DWORD *)__int128 buf = 136315138;
          uint64_t v30 = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "CLMM,locationApp is not foreground,%s",  buf,  0xCu);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_10;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101861DE0);
        }
        uint64_t v25 = *(char *)(a3 + 31) >= 0 ? a3 + 8 : *(void *)(a3 + 8);
        int v27 = 136315138;
        uint64_t v28 = v25;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM,locationApp is not foreground,%s",  (const char *)&v27);
        uint64_t v21 = (uint8_t *)v26;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedAppNotification(const CLAppMonitor_Type::Notification &, const CL AppMonitor_Type::NotificationData &)",  "%s\n",  v26);
        if (v21 == buf) {
          goto LABEL_10;
        }
LABEL_53:
        free(v21);
LABEL_10:
        sub_1009419D0(a1, 0LL, 0);
        return;
      }

      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      size_t v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        else {
          uint64_t v11 = *(void *)(a3 + 8);
        }
        *(_DWORD *)__int128 buf = 136315138;
        uint64_t v30 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CLMM,locationApp in foreground,%s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101861DE0);
        }
        else {
          uint64_t v22 = *(void *)(a3 + 8);
        }
        int v27 = 136315138;
        uint64_t v28 = v22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLMM,locationApp in foreground,%s",  (const char *)&v27);
        __int128 v24 = (uint8_t *)v23;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::feedAppNotification(const CLAppMonitor_Type::Notification &, const CL AppMonitor_Type::NotificationData &)",  "%s\n",  v23);
        if (v24 != buf) {
          free(v24);
        }
      }

      int v12 = *(char *)(a3 + 31);
      if (v12 < 0)
      {
        if (*(void *)(a3 + 16) != 14LL)
        {
LABEL_45:
          BOOL v16 = 0;
LABEL_46:
          sub_1009419D0(a1, 1LL, v16);
          return;
        }

        double v9 = (void *)*v9;
      }

      else if (v12 != 14)
      {
        goto LABEL_45;
      }

      BOOL v16 = *v9 == 0x6C7070612E6D6F63LL && *(void *)((char *)v9 + 6) == 0x7370614D2E656C70LL;
      goto LABEL_46;
    }
  }

uint64_t sub_100944650(uint64_t result, int a2)
{
  int v5 = a2;
  uint64_t v2 = *(void *)(result + 2408);
  if (v2)
  {
    uint64_t v3 = sub_10080E94C();
    LODWORD(v4) = 0;
    double v4 = sub_10080EB58(v3, &v4);
    return (*(uint64_t (**)(uint64_t, int *, double *))(*(void *)v2 + 72LL))(v2, &v5, &v4);
  }

  return result;
}

double sub_1009446A8(uint64_t a1, uint64_t a2, _BYTE *a3, double *a4)
{
  return sub_100DD5E80(a1 + 2424, a2, a3, a4);
}

void sub_1009446B0(uint64_t a1, void *a2, double *a3, _BYTE *a4, void *a5)
{
  if (*a3 >= 0.0 && *a3 < 16.6666)
  {
    uint64_t v10 = sub_10080E94C();
    *(_DWORD *)__int128 buf = 0;
    *(double *)(a1 + 2640) = sub_10080EB58(v10, buf);
    *(double *)(a1 + 2632) = *a3;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101861DE0);
    }
    uint64_t v11 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = *(void *)a3;
      uint64_t v13 = sub_10080E94C();
      *(_DWORD *)__int128 buf = 0;
      double v14 = sub_10080EB58(v13, buf);
      uint64_t v15 = sub_10080E94C();
      double v16 = sub_10080EF30(v15);
      *(_DWORD *)__int128 buf = 134218496;
      uint64_t v31 = v12;
      __int16 v32 = 2048;
      double v33 = v14;
      __int16 v34 = 2048;
      double v35 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "LocationController,updateVehicleSpeedFilter,vehicleSpeed,%.3f,now,%.3f,propagation_us,%.3f",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101861DE0);
      }
      uint64_t v17 = qword_101934838;
      uint64_t v18 = *(void *)a3;
      double v19 = sub_10037FE24();
      uint64_t v20 = sub_10080E94C();
      int v24 = 134218496;
      uint64_t v25 = v18;
      __int16 v26 = 2048;
      double v27 = v19;
      __int16 v28 = 2048;
      double v29 = sub_10080EF30(v20);
      LODWORD(v23) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v17,  2LL,  "LocationController,updateVehicleSpeedFilter,vehicleSpeed,%.3f,now,%.3f,propagation_us,%.3f",  COERCE_DOUBLE(&v24),  v23);
      uint64_t v22 = (uint8_t *)v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::updateVehicleSpeedFilter(const CFAbsoluteTime &, const double &, BOOL &, double &)",  "%s\n",  v21);
      if (v22 != buf) {
        free(v22);
      }
    }
  }

  sub_100DD5EF8(a1 + 2424, a2, a3, a4, a5);
}

uint64_t sub_100944930(uint64_t a1, _DWORD *a2, char a3)
{
  uint64_t result = *(void *)(a1 + 2408);
  if (result) {
    return sub_100D82390(result, a2, a3);
  }
  return result;
}

void sub_100944940(uint64_t a1, int a2)
{
  *(_BYTE *)(a1 + 2680) = a2;
  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_101861E20);
  }
  uint64_t v3 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)__int128 buf = 67240192;
    int v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "CLMM,isAirborne,%{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101861E20);
    }
    v6[0] = 67240192;
    v6[1] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "CLMM,isAirborne,%{public}d",  v6,  8);
    int v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationFilterController::updateAirborneClientStatus(const BOOL)",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

uint64_t sub_100944AEC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 2676) - 1;
  else {
    return dword_101341464[v1];
  }
}

void sub_100944B18(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_100944B44(id a1)
{
  qword_1019348B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

void sub_100944B70(id a1)
{
  qword_101934888 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_100944B9C()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_1019997A0, (void *)&_mh_execute_header);
}

void sub_1009452D0()
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101861E70);
  }
  unsigned __int8 v0 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "FenceCal: init globals", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    LOWORD(v19) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: init globals",  &v19,  2);
    double v14 = (uint8_t *)v13;
    sub_10029211C("Generic", 1LL, 0, 2LL, "static void CLWifiFenceCalculator::initStaticGlobals()", "%s\n", v13);
    if (v14 != buf) {
      free(v14);
    }
  }

  sub_1002F0B04(buf);
  int v1 = sub_1002A6F64(*(uint64_t *)buf, "WifiFenceCalculatorDebug", (BOOL *)&byte_10198E4A8);
  int v2 = v1;
  uint64_t v3 = v22;
  if (!v22) {
    goto LABEL_10;
  }
  p_shared_owners = (unint64_t *)&v22->__shared_owners_;
  do
    unint64_t v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!v2) {
      goto LABEL_16;
    }
  }

  else
  {
LABEL_10:
    if (!v1) {
      goto LABEL_16;
    }
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101861E70);
  }
  id v6 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = byte_10198E4A8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "FenceCal: Overriding WifiFenceCalculatorDebug =%d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    int v19 = 67109120;
    int v20 = byte_10198E4A8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "FenceCal: Overriding WifiFenceCalculatorDebug =%d",  &v19);
    double v16 = (uint8_t *)v15;
    sub_10029211C("Generic", 1LL, 0, 2LL, "static void CLWifiFenceCalculator::initStaticGlobals()", "%s\n", v15);
    if (v16 != buf) {
      free(v16);
    }
  }

void sub_1009457D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_1009457F4(uint64_t a1, int a2, int a3)
{
  *(void *)a1 = off_101861E50;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  sub_10070045C(a1 + 32);
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_DWORD *)(a1 + 392) = -1;
  *(void *)(a1 + 456) = 0LL;
  *(void *)(a1 + 464) = 0LL;
  *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_DWORD *)(a1 + 472) = 1;
  *(_BYTE *)(a1 + 476) = 0;
  *(_DWORD *)(a1 + 480) = 1;
  *(void *)(a1 + 48_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 496) = a3;
  *(_DWORD *)(a1 + 500) = a2;
  pthread_once(&stru_10198E4B0, sub_1009452D0);
  int v6 = *(_DWORD *)(a1 + 496);
  if (v6 < 1)
  {
    int v7 = 4;
  }

  else
  {
    int v7 = 165;
  }

  *(_DWORD *)(a1 + 496) = v7;
LABEL_6:
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101861E70);
  }
  int v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v9 = *(_DWORD *)(a1 + 496);
    int v10 = *(_DWORD *)(a1 + 500);
    *(_DWORD *)__int128 buf = 67175169;
    int v22 = v9;
    __int16 v23 = 1025;
    int v24 = 165;
    __int16 v25 = 1025;
    int v26 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "FenceCal: fMaxChannelSetSize, %{private}d, kMaxChannel, %{private}d, fChannelFilter, 0x%{private}X",  buf,  0x14u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    int v12 = *(_DWORD *)(a1 + 496);
    int v13 = *(_DWORD *)(a1 + 500);
    v16[0] = 67175169;
    v16[1] = v12;
    __int16 v17 = 1025;
    int v18 = 165;
    __int16 v19 = 1025;
    int v20 = v13;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: fMaxChannelSetSize, %{private}d, kMaxChannel, %{private}d, fChannelFilter, 0x%{private}X",  v16,  20);
    uint64_t v15 = (uint8_t *)v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiFenceCalculator::CLWifiFenceCalculator(unsigned int, int)",  "%s\n",  v14);
    if (v15 != buf) {
      free(v15);
    }
  }

  return a1;
}

void sub_100945A90(_Unwind_Exception *a1)
{
  unint64_t v5 = (void *)v1[56];
  if (v5)
  {
    v1[57] = v5;
    operator delete(v5);
  }

  sub_100945AD4(v2);
  int v6 = *v3;
  if (*v3)
  {
    v1[2] = v6;
    operator delete(v6);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_100945AD4(void *a1)
{
  int v2 = (void *)a1[42];
  if (v2)
  {
    a1[43] = v2;
    operator delete(v2);
  }

  uint64_t v3 = (void *)a1[39];
  if (v3)
  {
    a1[40] = v3;
    operator delete(v3);
  }

  return sub_100700568((uint64_t)a1);
}

void *sub_100945B18(void *a1)
{
  *a1 = off_101861E50;
  int v2 = (void *)a1[56];
  if (v2)
  {
    a1[57] = v2;
    operator delete(v2);
  }

  uint64_t v3 = (void *)a1[46];
  if (v3)
  {
    a1[47] = v3;
    operator delete(v3);
  }

  double v4 = (void *)a1[43];
  if (v4)
  {
    a1[44] = v4;
    operator delete(v4);
  }

  sub_100700568((uint64_t)(a1 + 4));
  unint64_t v5 = (void *)a1[1];
  if (v5)
  {
    a1[2] = v5;
    operator delete(v5);
  }

  return a1;
}

void sub_100945B94(void *a1)
{
  int v1 = sub_100945B18(a1);
  operator delete(v1);
}

uint64_t sub_100945BA8(void *a1, unint64_t *a2)
{
  uint64_t v3 = a1[56];
  uint64_t v23 = a1[57];
  if (v3 == v23)
  {
    double v6 = 0.0;
    double v8 = 1.0;
LABEL_27:
    double v20 = 0.0;
    goto LABEL_28;
  }

  unint64_t v4 = 0LL;
  unint64_t v5 = *a2;
  double v6 = 0.0;
  double v7 = 1.0;
  double v8 = 1.0;
  double v9 = 0.0;
  do
  {
    uint64_t v10 = a1[43];
    uint64_t v11 = a1[44];
    if (v10 != v11 && v5 != 0)
    {
      unint64_t v13 = 0LL;
      uint64_t v14 = v10 + 96;
      do
      {
        double v16 = sub_100931350(v15);
        if (v16 >= 0.0)
        {
          double v7 = v7 * (1.0 - v16);
          ++v13;
        }

        else
        {
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101861E70);
          }
          __int16 v17 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)__int128 buf = 134349312;
            double v30 = v15;
            __int16 v31 = 2050;
            double v32 = v16;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_FAULT,  "bad CLStandardNormalDistribution(%{public}lf) = %{public}lf",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101861E70);
            }
            int v25 = 134349312;
            double v26 = v15;
            __int16 v27 = 2050;
            double v28 = v16;
            LODWORD(v22) = 22;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "bad CLStandardNormalDistribution(%{public}lf) = %{public}lf",  &v25,  v22);
            __int16 v19 = (uint8_t *)v18;
            sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CLWifiFenceCalculator::calculateScore(Score &)", "%s\n", v18);
            if (v19 != buf) {
              free(v19);
            }
          }
        }

        unint64_t v5 = *a2;
        if (v14 == v11) {
          break;
        }
        v14 += 96LL;
      }

      while (v13 < v5);
    }

    double v8 = fmin(1.0 - v7, v8);
    double v6 = fmax(1.0 - v7, v6);
    double v9 = v9 + 1.0 - v7;
    ++v4;
    v3 += 64LL;
  }

  while (v3 != v23);
  if (!v4) {
    goto LABEL_27;
  }
  double v20 = v9 / (double)v4;
LABEL_28:
  *((double *)a2 + 1) = (v8 + v20) * 0.5;
  *((double *)a2 + 2) = v8;
  *((double *)a2 + 3) = v6;
  *((double *)a2 + 4) = v20;
  return 1LL;
}

double sub_100945E94(double a1, double a2, double a3, double a4)
{
  for (; a2 < 0.0; a2 = a2 + 360.0)
    ;
  for (; a4 < 0.0; a4 = a4 + 360.0)
    ;
  double v4 = a1 * 0.0174532925;
  double v5 = a3 * 0.0174532925;
  double v6 = a2 * 0.0174532925;
  double v7 = a4 * 0.0174532925;
  __double2 v8 = __sincos_stret(a1 * 0.0174532925);
  double v9 = sqrt(v8.__sinval * -0.00669437999 * v8.__sinval + 1.0);
  double v10 = (v5 - v4) * (6335439.33 / (v9 * (v9 * v9)) + 0.0);
  double v11 = v8.__cosval * (6378137.0 / v9 + 0.0) * (v7 - v6);
  return sqrt(v11 * v11 + v10 * v10);
}

BOOL sub_100945F70(uint64_t a1)
{
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)&v47[8] = _Q0;
  *(_OWORD *)&v47[24] = _Q0;
  uint64_t v6 = *(void *)(a1 + 344);
  uint64_t v5 = *(void *)(a1 + 352);
  *(void *)uint64_t v47 = 0xAAAAAAAAAAAAAAABLL * ((v5 - v6) >> 5);
  if (v5 == v6)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    int v24 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v58.__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "#Warning fChosenAPs is empty",  (uint8_t *)&v58,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&v58, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      *(_WORD *)__p = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &v58,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning fChosenAPs is empty",  __p,  2);
      double v26 = (std::string *)v25;
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLWifiFenceCalculator::addScore()", "%s\n", v25);
      if (v26 != &v58) {
        free(v26);
      }
    }
  }

  else
  {
    sub_100945BA8((void *)a1, (unint64_t *)v47);
    if (byte_10198E4A8) {
      _ZF = byte_1019A1880 == 0;
    }
    else {
      _ZF = 1;
    }
    if (!_ZF)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      double v9 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        else {
          size_t v10 = *(void *)(a1 + 40);
        }
        double v11 = &v58;
        sub_1000392EC((uint64_t)&v58, v10 + 1);
        if ((v58.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          double v11 = (std::string *)v58.__r_.__value_.__r.__words[0];
        }
        if (v10)
        {
          else {
            int v12 = *(const void **)(a1 + 32);
          }
          memmove(v11, v12, v10);
        }

        *(_WORD *)((char *)&v11->__r_.__value_.__l.__data_ + v10) = 47;
        int v13 = *(char *)(a1 + 79);
        if (v13 >= 0) {
          uint64_t v14 = (const std::string::value_type *)(a1 + 56);
        }
        else {
          uint64_t v14 = *(const std::string::value_type **)(a1 + 56);
        }
        if (v13 >= 0) {
          std::string::size_type v15 = *(unsigned __int8 *)(a1 + 79);
        }
        else {
          std::string::size_type v15 = *(void *)(a1 + 64);
        }
        double v16 = std::string::append(&v58, v14, v15);
        __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
        *(void *)&__p[16] = v16->__r_.__value_.__l.__cap_;
        *(_OWORD *)__p = v17;
        v16->__r_.__value_.__l.__size_ = 0LL;
        v16->__r_.__value_.__l.__cap_ = 0LL;
        v16->__r_.__value_.__r.__words[0] = 0LL;
        int v18 = __p;
        if (__p[23] < 0) {
          int v18 = *(_BYTE **)__p;
        }
        unint64_t v19 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 376) - *(void *)(a1 + 368)) >> 3) + 1;
        LODWORD(v58.__r_.__value_.__l.__data_) = 136382211;
        *(std::string::size_type *)((char *)v58.__r_.__value_.__r.__words + 4) = (std::string::size_type)v18;
        WORD2(v58.__r_.__value_.__r.__words[1]) = 2049;
        *(std::string::size_type *)((char *)&v58.__r_.__value_.__r.__words[1] + 6) = *(void *)&v47[8];
        HIWORD(v58.__r_.__value_.__r.__words[2]) = 2049;
        uint64_t v59 = *(void *)&v47[16];
        __int16 v60 = 2049;
        uint64_t v61 = *(void *)&v47[32];
        __int16 v62 = 2049;
        uint64_t v63 = *(void *)&v47[24];
        __int16 v64 = 2049;
        unint64_t v65 = v19;
        __int16 v66 = 2049;
        uint64_t v67 = *(void *)v47;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "FenceCal: Adding score, fence, %{private}20s, score, %{private}.8lf, min, %{private}.8lf, avg, %{private}.8lf, max, %{private}.8lf, scores, %{private}lu, aps, %{private}zu",  (uint8_t *)&v58,  0x48u);
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&v58, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        uint64_t v41 = qword_101934878;
        sub_10065EF44((const void **)(a1 + 32), &v46);
        if ((v46.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          int v42 = &v46;
        }
        else {
          int v42 = (std::string *)v46.__r_.__value_.__r.__words[0];
        }
        unint64_t v43 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 376) - *(void *)(a1 + 368)) >> 3) + 1;
        *(_DWORD *)__p = 136382211;
        *(void *)&__p[4] = v42;
        *(_WORD *)&__p[12] = 2049;
        *(void *)&__p[14] = *(void *)&v47[8];
        *(_WORD *)&__p[22] = 2049;
        uint64_t v49 = *(void *)&v47[16];
        __int16 v50 = 2049;
        uint64_t v51 = *(void *)&v47[32];
        __int16 v52 = 2049;
        uint64_t v53 = *(void *)&v47[24];
        __int16 v54 = 2049;
        unint64_t v55 = v43;
        __int16 v56 = 2049;
        uint64_t v57 = *(void *)v47;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &v58,  1628LL,  &_mh_execute_header,  v41,  2LL,  "FenceCal: Adding score, fence, %{private}20s, score, %{private}.8lf, min, %{private}.8lf, avg, %{private}.8lf, max, %{private}.8lf, scores, %{private}lu, aps, %{private}zu",  __p,  72);
        uint64_t v45 = v44;
        sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLWifiFenceCalculator::addScore()", "%s\n", (const char *)v45);
        if (v45 != &v58) {
          free(v45);
        }
      }
    }

    unint64_t v20 = *(void *)(a1 + 376);
    unint64_t v21 = *(void *)(a1 + 384);
    if (v20 >= v21)
    {
      uint64_t v27 = *(void *)(a1 + 368);
      unint64_t v28 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v20 - v27) >> 3);
      unint64_t v29 = v28 + 1;
      if (v28 + 1 > 0x666666666666666LL) {
        sub_100007008();
      }
      unint64_t v30 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v21 - v27) >> 3);
      if (2 * v30 > v29) {
        unint64_t v29 = 2 * v30;
      }
      if (v30 >= 0x333333333333333LL) {
        unint64_t v31 = 0x666666666666666LL;
      }
      else {
        unint64_t v31 = v29;
      }
      if (v31) {
        double v32 = (char *)sub_100100EF8(a1 + 384, v31);
      }
      else {
        double v32 = 0LL;
      }
      double v33 = &v32[40 * v28];
      __int16 v34 = &v32[40 * v31];
      __int128 v35 = *(_OWORD *)&v47[16];
      *(_OWORD *)double v33 = *(_OWORD *)v47;
      *((_OWORD *)v33 + 1) = v35;
      *((void *)v33 + 4) = *(void *)&v47[32];
      uint64_t v23 = v33 + 40;
      double v37 = *(char **)(a1 + 368);
      uint64_t v36 = *(char **)(a1 + 376);
      if (v36 != v37)
      {
        do
        {
          __int128 v38 = *(_OWORD *)(v36 - 40);
          __int128 v39 = *(_OWORD *)(v36 - 24);
          *((void *)v33 - 1) = *((void *)v36 - 1);
          *(_OWORD *)(v33 - 24) = v39;
          *(_OWORD *)(v33 - 40) = v38;
          v33 -= 40;
          v36 -= 40;
        }

        while (v36 != v37);
        uint64_t v36 = *(char **)(a1 + 368);
      }

      *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = v33;
      *(void *)(a1 + 376) = v23;
      *(void *)(a1 + 384) = v34;
      if (v36) {
        operator delete(v36);
      }
    }

    else
    {
      __int128 v22 = *(_OWORD *)&v47[16];
      *(_OWORD *)unint64_t v20 = *(_OWORD *)v47;
      *(_OWORD *)(v20 + 16) = v22;
      *(void *)(v20 + 32) = *(void *)&v47[32];
      uint64_t v23 = (char *)(v20 + 40);
    }

    *(void *)(a1 + 376) = v23;
  }

  return v5 != v6;
}

void sub_100946588( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, void *__p, uint64_t a30, int a31, __int16 a32, char a33, char a34)
{
  if (a34 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009465AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v258 = a2;
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101861E70);
  }
  double v7 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    sub_100923668(a3, (std::stringbuf::string_type *)__p);
    int v8 = v275[9];
    double v9 = *(_BYTE **)__p;
    uint64_t v11 = *(void *)(a3 + 72);
    uint64_t v10 = *(void *)(a3 + 80);
    double v12 = sub_1009232CC(a3);
    int v13 = __p;
    *(_DWORD *)__int128 buf = 136381699;
    if (v8 < 0) {
      int v13 = v9;
    }
    *(void *)&uint8_t buf[4] = v13;
    *(_WORD *)&_BYTE buf[12] = 2049;
    *(void *)&buf[14] = v11;
    *(_WORD *)&_BYTE buf[22] = 2049;
    *(void *)&buf[24] = v10;
    *(_WORD *)&buf[32] = 2049;
    *(double *)&buf[34] = v12;
    *(_WORD *)&buf[42] = 1025;
    *(_DWORD *)&buf[44] = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "FenceCal: start calculate fence, %{private}-24s, C, center, %{private}.8lf, %{private}.8lf, radius, %{private}.8lf , isMonitorForExit, %{private}d",  buf,  0x30u);
    if ((v275[9] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    uint64_t v210 = qword_101934878;
    sub_100923668(a3, &v277);
    int size = (char)v277.__r_.__value_.__s.__size_;
    std::string::size_type v212 = v277.__r_.__value_.__r.__words[0];
    uint64_t v214 = *(void *)(a3 + 72);
    uint64_t v213 = *(void *)(a3 + 80);
    double v215 = sub_1009232CC(a3);
    v216 = &v277;
    *(_DWORD *)__p = 136381699;
    if (size < 0) {
      v216 = (std::stringbuf::string_type *)v212;
    }
    *(void *)&__p[4] = v216;
    *(_WORD *)&__p[12] = 2049;
    *(void *)v275 = v214;
    *(_WORD *)&v275[8] = 2049;
    *(void *)&v275[10] = v213;
    *(_WORD *)&v275[18] = 2049;
    *(double *)&v275[20] = v215;
    *(_WORD *)&v275[28] = 1025;
    *(_DWORD *)&v275[30] = a4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v210,  2LL,  "FenceCal: start calculate fence, %{private}-24s, C, center, %{private}.8lf, %{private}.8lf, radius, %{private}.8lf , isMonitorForExit, %{private}d",  __p,  48);
    v218 = v217;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiFenceCalculator::calculate(CLWifiAccessPointLocationService &, const CLFenceManager_Type::CombinedFence &, BOOL, BOOL)",  "%s\n",  v218);
    if (v218 != buf) {
      free(v218);
    }
  }

  sub_10070045C((uint64_t)buf);
  memset(v286, 0, sizeof(v286));
  __int128 v285 = 0u;
  int v287 = -1;
  sub_10065E968(a1 + 32, (__int128 *)buf);
  uint64_t v14 = a1 + 288;
  sub_1007005F0(a1 + 280, *(void **)(a1 + 288));
  uint64_t v15 = v281;
  *(void *)(a1 + 280) = v280;
  *(void *)(a1 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = v15;
  uint64_t v16 = v282;
  *(void *)(a1 + 296) = v282;
  if (v16)
  {
    *(void *)(v15 + 16) = v14;
    v280 = &v281;
    uint64_t v281 = 0LL;
    uint64_t v282 = 0LL;
  }

  else
  {
    *(void *)(a1 + 280) = v14;
  }

  __int128 v17 = *(_OWORD *)v284;
  *(_OWORD *)(a1 + 304) = v283;
  *(_OWORD *)(a1 + 320) = v17;
  *(void *)(a1 + 333) = *(void *)&v284[13];
  int v18 = (void *)(a1 + 344);
  unint64_t v19 = *(void **)(a1 + 344);
  if (v19)
  {
    *(void *)(a1 + 352) = v19;
    operator delete(v19);
    void *v18 = 0LL;
    *(void *)(a1 + 352) = 0LL;
    *(void *)(a1 + 360) = 0LL;
  }

  v263 = (char **)(a1 + 344);
  *(_OWORD *)int v18 = v285;
  *(void *)(a1 + 360) = v286[0];
  v286[0] = 0LL;
  __int128 v285 = 0uLL;
  unint64_t v20 = *(void **)(a1 + 368);
  v259 = (const char *)(a1 + 368);
  if (v20)
  {
    *(void *)(a1 + 376) = v20;
    operator delete(v20);
    *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
    *(void *)(a1 + 376) = 0LL;
    *(void *)(a1 + 384) = 0LL;
    unint64_t v20 = (void *)v285;
  }

  *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = *(_OWORD *)&v286[1];
  *(void *)(a1 + 384) = v286[3];
  memset(&v286[1], 0, 24);
  *(_DWORD *)(a1 + 392) = v287;
  if (v20)
  {
    *((void *)&v285 + 1) = v20;
    operator delete(v20);
  }

  sub_100700568((uint64_t)buf);
  *(void *)(a1 + 456) = *(void *)(a1 + 448);
  *(_BYTE *)(a1 + 476) = a4;
  if (a4) {
    int v21 = 4;
  }
  else {
    int v21 = 1;
  }
  *(_DWORD *)(a1 + 480) = v21;
  sub_1009485F8(a1 + 32, a3);
  unsigned int v22 = *(_DWORD *)sub_100D0ABC0();
  double v23 = sub_1009232CC(a3);
  *(void *)(a1 + 400) = *(void *)(a3 + 72);
  *(void *)(a1 + 40_Block_object_dispose((const void *)(v1 - 224), 8) = *(void *)(a3 + 80);
  int v24 = (double *)sub_100D0ABC0();
  if ((a4 & 1) != 0)
  {
    double v23 = v23 + v24[2];
  }

  else if (v23 >= v24[1])
  {
    double v23 = v23 - *((double *)sub_100D0ABC0() + 2);
  }

  if (v23 < *((double *)sub_100D0ABC0() + 4))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    int v25 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      sub_100923668(a3, (std::stringbuf::string_type *)buf);
      int v26 = buf[23];
      uint64_t v27 = *(_BYTE **)buf;
      unint64_t v28 = sub_100D0ABC0();
      unint64_t v29 = buf;
      uint64_t v30 = v28[4];
      if (v26 < 0) {
        unint64_t v29 = v27;
      }
      *(_DWORD *)__p = 136380931;
      *(void *)&__p[4] = v29;
      *(_WORD *)&__p[12] = 2049;
      *(void *)v275 = v30;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "FenceCal: limit ePNO min fence size, fence, %{private}s, minRadius, %{private}.1lf",  __p,  0x16u);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      uint64_t v230 = qword_101934878;
      sub_100923668(a3, (std::stringbuf::string_type *)__p);
      int v231 = v275[9];
      v232 = *(_BYTE **)__p;
      v233 = sub_100D0ABC0();
      v234 = __p;
      std::string::size_type v235 = v233[4];
      if (v231 < 0) {
        v234 = v232;
      }
      LODWORD(v277.__r_.__value_.__l.__data_) = 136380931;
      *(std::string::size_type *)((char *)v277.__r_.__value_.__r.__words + 4) = (std::string::size_type)v234;
      WORD2(v277.__r_.__value_.__r.__words[1]) = 2049;
      *(std::string::size_type *)((char *)&v277.__r_.__value_.__r.__words[1] + 6) = v235;
      LODWORD(v255) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v230,  2LL,  "FenceCal: limit ePNO min fence size, fence, %{private}s, minRadius, %{private}.1lf",  &v277,  v255);
      v237 = v236;
      if ((v275[9] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiFenceCalculator::calculate(CLWifiAccessPointLocationService &, const CLFenceManager_Type::CombinedFen ce &, BOOL, BOOL)",  "%s\n",  v237);
      if (v237 != buf) {
        free(v237);
      }
    }

    double v23 = *((double *)sub_100D0ABC0() + 4);
  }

  double v31 = v23;
  if (v23 >= *((double *)sub_100D0ABC0() + 3))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    double v32 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      sub_100923668(a3, (std::stringbuf::string_type *)buf);
      int v33 = buf[23];
      __int16 v34 = *(_BYTE **)buf;
      __int128 v35 = sub_100D0ABC0();
      uint64_t v36 = buf;
      uint64_t v37 = v35[3];
      if (v33 < 0) {
        uint64_t v36 = v34;
      }
      *(_DWORD *)__p = 136380931;
      *(void *)&__p[4] = v36;
      *(_WORD *)&__p[12] = 2049;
      *(void *)v275 = v37;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "FenceCal: limit ePNO max fence size, fence, %{private}s, maxRadius, %{private}.1lf",  __p,  0x16u);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      uint64_t v238 = qword_101934878;
      sub_100923668(a3, (std::stringbuf::string_type *)__p);
      int v239 = v275[9];
      v240 = *(_BYTE **)__p;
      v241 = sub_100D0ABC0();
      v242 = __p;
      std::string::size_type v243 = v241[3];
      if (v239 < 0) {
        v242 = v240;
      }
      LODWORD(v277.__r_.__value_.__l.__data_) = 136380931;
      *(std::string::size_type *)((char *)v277.__r_.__value_.__r.__words + 4) = (std::string::size_type)v242;
      WORD2(v277.__r_.__value_.__r.__words[1]) = 2049;
      *(std::string::size_type *)((char *)&v277.__r_.__value_.__r.__words[1] + 6) = v243;
      LODWORD(v255) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v238,  2LL,  "FenceCal: limit ePNO max fence size, fence, %{private}s, maxRadius, %{private}.1lf",  &v277,  v255);
      v245 = v244;
      if ((v275[9] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiFenceCalculator::calculate(CLWifiAccessPointLocationService &, const CLFenceManager_Type::CombinedFen ce &, BOOL, BOOL)",  "%s\n",  v245);
      if (v245 != buf) {
        free(v245);
      }
    }

    double v31 = *((double *)sub_100D0ABC0() + 3);
  }

  double v38 = *(double *)(a1 + 400);
  __double2 v39 = __sincos_stret(v38 * 0.0174532925);
  double v40 = sqrt(v39.__sinval * -0.00669437999 * v39.__sinval + 1.0);
  double v41 = v31 / (v39.__cosval * (6378137.0 / v40 + 0.0)) / 0.0174532925;
  double v42 = v31 / (6335439.33 / (v40 * (v40 * v40)) + 0.0) / 0.0174532925;
  double v43 = v38 + v42;
  double v44 = *(double *)(a1 + 408);
  double v45 = v44 - v41;
  *(double *)(a1 + 416) = v38 + v42;
  *(double *)(a1 + 424) = v44 - v41;
  double v46 = v38 - v42;
  double v47 = v44 + v41;
  *(double *)(a1 + 432) = v46;
  *(double *)(a1 + 440) = v47;
  if (v22 <= 1) {
    unsigned int v48 = 1;
  }
  else {
    unsigned int v48 = v22;
  }
  double v270 = vabdd_f64(v43, v46) / (double)v48;
  unsigned int v271 = v48;
  if (v270 <= 0.0 || (double v269 = vabdd_f64(v45, v47) / (double)v48, v269 <= 0.0))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    uint64_t v49 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      sub_100923668(a3, (std::stringbuf::string_type *)__p);
      int v50 = v275[9];
      uint64_t v51 = *(_BYTE **)__p;
      uint64_t v53 = *(void *)(a3 + 72);
      uint64_t v52 = *(void *)(a3 + 80);
      double v54 = sub_1009232CC(a3);
      unint64_t v55 = __p;
      *(_DWORD *)__int128 buf = 136381443;
      if (v50 < 0) {
        unint64_t v55 = v51;
      }
      *(void *)&uint8_t buf[4] = v55;
      *(_WORD *)&_BYTE buf[12] = 2049;
      *(void *)&buf[14] = v53;
      *(_WORD *)&_BYTE buf[22] = 2049;
      *(void *)&buf[24] = v52;
      *(_WORD *)&buf[32] = 2049;
      *(double *)&buf[34] = v54;
      _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_FAULT,  "Invalid fence name, %{private}s, latitude, %{private}lf, longitude, %{private}lf, radius, %{private}lf",  buf,  0x2Au);
      if ((v275[9] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }

    BOOL v56 = sub_1002921D0(115, 0);
    unsigned int v48 = v271;
    double v269 = 0.00001;
    if (v56)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      uint64_t v246 = qword_101934878;
      sub_100923668(a3, &v277);
      int v247 = (char)v277.__r_.__value_.__s.__size_;
      std::string::size_type v248 = v277.__r_.__value_.__r.__words[0];
      uint64_t v250 = *(void *)(a3 + 72);
      uint64_t v249 = *(void *)(a3 + 80);
      double v251 = sub_1009232CC(a3);
      v252 = &v277;
      *(_DWORD *)__p = 136381443;
      if (v247 < 0) {
        v252 = (std::stringbuf::string_type *)v248;
      }
      *(void *)&__p[4] = v252;
      *(_WORD *)&__p[12] = 2049;
      *(void *)v275 = v250;
      *(_WORD *)&v275[8] = 2049;
      *(void *)&v275[10] = v249;
      *(_WORD *)&v275[18] = 2049;
      *(double *)&v275[20] = v251;
      LODWORD(v255) = 42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v246,  17LL,  "Invalid fence name, %{private}s, latitude, %{private}lf, longitude, %{private}lf, radius, %{private}lf",  __p,  v255);
      v254 = v253;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLWifiFenceCalculator::calculate(CLWifiAccessPointLocationService &, const CLFenceManager_Type::CombinedFen ce &, BOOL, BOOL)",  "%s\n",  v254);
      if (v254 != buf) {
        free(v254);
      }
      double v270 = 0.00001;
      unsigned int v48 = v271;
    }

    else
    {
      double v270 = 0.00001;
    }
  }

  double v265 = v31;
  unsigned int v57 = 0;
  std::string v58 = (char **)(a1 + 448);
  do
  {
    unsigned int v59 = 0;
    int v60 = v57 * v48;
    do
    {
      double v61 = *(double *)(a1 + 416) + -(double)v57 * v270;
      double v62 = *(double *)(a1 + 424) + (double)v59 * v269;
      double v63 = v61 - v270;
      double v64 = v269 + v62;
      double v65 = (v61 + v61 - v270) * 0.5;
      double v66 = (v62 + v269 + v62) * 0.5;
      double v67 = sub_100945E94(v65, v66, *(double *)(a1 + 400), *(double *)(a1 + 408));
      if (v67 / v265 < 1.0) {
        double v68 = 1.0 - v67 / v265;
      }
      else {
        double v68 = 0.0;
      }
      int v69 = (int)(v68 * 4.5);
      if (byte_10198E4A8 && byte_1019A1880)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        __int128 v70 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)__int128 buf = 67110400;
          *(_DWORD *)&uint8_t buf[4] = v57;
          *(_WORD *)&uint8_t buf[8] = 1024;
          *(_DWORD *)&buf[10] = v59;
          *(_WORD *)&buf[14] = 1024;
          *(_DWORD *)&buf[16] = v59 + v60;
          *(_WORD *)&_BYTE buf[20] = 2048;
          *(double *)&_BYTE buf[22] = v67;
          *(_WORD *)&buf[30] = 1024;
          *(_DWORD *)&buf[32] = (int)(v68 * 4.5);
          *(_WORD *)&_BYTE buf[36] = 2048;
          *(double *)&buf[38] = v68;
          _os_log_impl( (void *)&_mh_execute_header,  v70,  OS_LOG_TYPE_DEBUG,  "FenceCal: tile, y, %d, x, %d, index, %d, distanceFromCenter, %5.5lf, maxApsPerTile, %d, ApsFactor, %.5lf",  buf,  0x2Eu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101861E70);
          }
          *(_DWORD *)__p = 67110400;
          *(_DWORD *)&__p[4] = v57;
          *(_WORD *)&__p[8] = 1024;
          *(_DWORD *)&__p[10] = v59;
          *(_WORD *)v275 = 1024;
          *(_DWORD *)&v275[2] = v59 + v60;
          *(_WORD *)&v275[6] = 2048;
          *(double *)&v275[8] = v67;
          *(_WORD *)&v275[16] = 1024;
          *(_DWORD *)&v275[18] = (int)(v68 * 4.5);
          *(_WORD *)&v275[22] = 2048;
          *(double *)&v275[24] = v68;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: tile, y, %d, x, %d, index, %d, distanceFromCenter, %5.5lf, maxApsPerTile, %d, ApsFactor, %.5lf",  __p,  46,  v256,  v257,  v258,  *(double *)&v259);
          v87 = (char *)v86;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiFenceCalculator::calculate(CLWifiAccessPointLocationService &, const CLFenceManager_Type::Combine dFence &, BOOL, BOOL)",  "%s\n",  v86);
          if (v87 != buf) {
            free(v87);
          }
        }
      }

      unint64_t v71 = *(void *)(a1 + 456);
      unint64_t v72 = *(void *)(a1 + 464);
      if (v71 >= v72)
      {
        uint64_t v74 = (uint64_t)(v71 - (void)*v58) >> 6;
        unint64_t v75 = v74 + 1;
        uint64_t v76 = v72 - (void)*v58;
        if (v76 >> 5 > v75) {
          unint64_t v75 = v76 >> 5;
        }
        else {
          unint64_t v77 = v75;
        }
        if (v77) {
          unint64_t v78 = (char *)sub_10001275C(a1 + 464, v77);
        }
        else {
          unint64_t v78 = 0LL;
        }
        double v79 = (double *)&v78[64 * v74];
        double *v79 = v61;
        v79[1] = v62;
        v79[2] = v63;
        v79[3] = v64;
        v79[4] = v65;
        v79[5] = v66;
        *((_DWORD *)v79 + 12) = 0;
        *((_DWORD *)v79 + 13) = v69;
        v79[7] = v67;
        __int16 v81 = *(char **)(a1 + 448);
        double v80 = *(char **)(a1 + 456);
        double v82 = v79;
        if (v80 != v81)
        {
          do
          {
            __int128 v83 = *((_OWORD *)v80 - 4);
            __int128 v84 = *((_OWORD *)v80 - 3);
            __int128 v85 = *((_OWORD *)v80 - 1);
            *((_OWORD *)v82 - 2) = *((_OWORD *)v80 - 2);
            *((_OWORD *)v82 - 1) = v85;
            *((_OWORD *)v82 - 4) = v83;
            *((_OWORD *)v82 - 3) = v84;
            v82 -= 8;
            v80 -= 64;
          }

          while (v80 != v81);
          double v80 = *v58;
        }

        __int128 v73 = (char *)(v79 + 8);
        *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = v82;
        *(void *)(a1 + 456) = v79 + 8;
        *(void *)(a1 + 464) = &v78[64 * v77];
        if (v80) {
          operator delete(v80);
        }
      }

      else
      {
        *(double *)unint64_t v71 = v61;
        *(double *)(v71 + _Block_object_dispose((const void *)(v1 - 224), 8) = v62;
        *(double *)(v71 + 16) = v63;
        *(double *)(v71 + 24) = v64;
        *(double *)(v71 + 32) = v65;
        *(double *)(v71 + 40) = v66;
        *(_DWORD *)(v71 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
        *(_DWORD *)(v71 + 52) = v69;
        __int128 v73 = (char *)(v71 + 64);
        *(double *)(v71 + 56) = v67;
      }

      *(void *)(a1 + 456) = v73;
      ++v59;
    }

    while (v59 != v271);
    ++v57;
    unsigned int v48 = v271;
  }

  while (v57 != v271);
  uint64_t v89 = *(void *)(a1 + 8);
  uint64_t v88 = *(void *)(a1 + 16);
  v90 = (void **)(a1 + 8);
  if (v89 == v88 || a5)
  {
    double v91 = *(double *)(a3 + 72);
    double v92 = *(double *)(a3 + 80);
    int v93 = sub_100923FF0(a3);
    sub_100F7B41C(v258, v93, -1, 0, (char **)buf, v91, v92, v265, -1.0);
    uint64_t v94 = *v90;
    if (*v90)
    {
      *(void *)(a1 + 16) = v94;
      operator delete(v94);
      const char *v90 = 0LL;
      *(void *)(a1 + 16) = 0LL;
      *(void *)(a1 + 24) = 0LL;
    }

    uint64_t v95 = *(void *)buf;
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = *(void *)buf;
    uint64_t v96 = *(void *)&buf[8];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)&buf[8];
    uint64_t v97 = v96;
    if (v95 != v96)
    {
      while (sub_10099EDC8(*(_DWORD *)(v95 + 52)))
      {
        v95 += 96LL;
        if (v95 == v97)
        {
          uint64_t v95 = v97;
          goto LABEL_108;
        }
      }

      if (v95 != v97)
      {
        for (uint64_t i = v95 + 96; i != v97; i += 96LL)
        {
          if (sub_10099EDC8(*(_DWORD *)(i + 52)))
          {
            __int128 v99 = *(_OWORD *)(i + 16);
            *(_OWORD *)uint64_t v95 = *(_OWORD *)i;
            *(_OWORD *)(v95 + 16) = v99;
            __int128 v100 = *(_OWORD *)(i + 32);
            __int128 v101 = *(_OWORD *)(i + 48);
            __int128 v102 = *(_OWORD *)(i + 80);
            *(_OWORD *)(v95 + 64) = *(_OWORD *)(i + 64);
            *(_OWORD *)(v95 + 80) = v102;
            *(_OWORD *)(v95 + 32) = v100;
            *(_OWORD *)(v95 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v101;
            v95 += 96LL;
          }
        }
      }
    }

void sub_100948514( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, void *a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, void *__p, uint64_t a48, int a49, __int16 a50,char a51,char a52)
{
  if (a52 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1009485F8(uint64_t a1, uint64_t a2)
{
  std::string::operator=((std::string *)a1, (const std::string *)a2);
  std::string::operator=((std::string *)(a1 + 24), (const std::string *)(a2 + 24));
  std::string::operator=((std::string *)(a1 + 48), (const std::string *)(a2 + 48));
  __int128 v4 = *(_OWORD *)(a2 + 88);
  __int128 v5 = *(_OWORD *)(a2 + 104);
  __int128 v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 120) = v6;
  *(_OWORD *)(a1 + 104) = v5;
  *(_OWORD *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = v4;
  __int128 v7 = *(_OWORD *)(a2 + 152);
  __int128 v8 = *(_OWORD *)(a2 + 168);
  uint64_t v9 = *(void *)(a2 + 181);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 181) = v9;
  *(_OWORD *)(a1 + 16_Block_object_dispose((const void *)(v1 - 224), 8) = v8;
  *(_OWORD *)(a1 + 152) = v7;
  std::string::operator=((std::string *)(a1 + 192), (const std::string *)(a2 + 192));
  uint64_t v10 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = *(id *)(a2 + 216);

  if (a1 != a2)
  {
    sub_10009B244( (char *)(a1 + 224),  *(char **)(a2 + 224),  *(void *)(a2 + 232),  (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
    sub_10094DF08((uint64_t **)(a1 + 248), *(__int128 **)(a2 + 248), (__int128 *)(a2 + 256));
  }

  __int128 v11 = *(_OWORD *)(a2 + 272);
  __int128 v12 = *(_OWORD *)(a2 + 288);
  *(void *)(a1 + 301) = *(void *)(a2 + 301);
  *(_OWORD *)(a1 + 272) = v11;
  *(_OWORD *)(a1 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = v12;
  return a1;
}

void sub_1009486E4(uint64_t a1)
{
  int v2 = *(char **)a1;
  int64x2_t v3 = *(int64x2_t *)(a1 + 8);
  int64x2_t v4 = vshrq_n_s64(vsubq_s64(v3, vdupq_n_s64((unint64_t)v2)), 3uLL);
  unint64_t v5 = 0xCCCCCCCCCCCCCCCDLL * v4.i64[0];
  unint64_t v6 = v5;
  if (0xCCCCCCCCCCCCCCCDLL * v4.i64[1] > v5)
  {
    if ((char *)v3.i64[0] == v2)
    {
      __int128 v11 = 0LL;
      uint64_t v9 = 40 * v5;
    }

    else
    {
      __int128 v7 = (char *)sub_100100EF8(a1 + 16, v5);
      int v2 = *(char **)a1;
      __int128 v8 = *(char **)(a1 + 8);
      uint64_t v9 = (uint64_t)&v7[40 * v6];
      __int128 v11 = &v7[40 * v10];
      if (v8 != *(char **)a1)
      {
        uint64_t v12 = v9;
        do
        {
          __int128 v13 = *(_OWORD *)(v8 - 40);
          __int128 v14 = *(_OWORD *)(v8 - 24);
          *(void *)(v12 - _Block_object_dispose((const void *)(v1 - 224), 8) = *((void *)v8 - 1);
          *(_OWORD *)(v12 - 24) = v14;
          *(_OWORD *)(v12 - 40) = v13;
          v12 -= 40LL;
          v8 -= 40;
        }

        while (v8 != v2);
        int v2 = *(char **)a1;
        goto LABEL_9;
      }
    }

    uint64_t v12 = v9;
LABEL_9:
    *(void *)a1 = v12;
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v9;
    *(void *)(a1 + 16) = v11;
    if (v2) {
      operator delete(v2);
    }
  }

uint64_t sub_1009487E0( uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, std::string::size_type a8)
{
  double v54 = *(const char **)a1;
  int v15 = *(_DWORD *)(a1 + 52);
  unint64_t v16 = *(void *)(a4 + 16) + *(void *)(a3 + 16);
  if (a2 && sub_100C3A408(a1))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    __int128 v17 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      double Current = CFAbsoluteTimeGetCurrent();
      sub_100C39CE0(a1, &__p, Current);
      unint64_t v19 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &__p
          : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v19;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "FenceCal: avoid adding moving AP as an exit AP, %{private}s",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&__p, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      uint64_t v20 = qword_101934878;
      double v21 = CFAbsoluteTimeGetCurrent();
      sub_100C39CE0(a1, &buf, v21);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      LODWORD(v55.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v55.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v20,  2LL,  "FenceCal: avoid adding moving AP as an exit AP, %{private}s",  &v55,  12);
      int v24 = v23;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::addAPToOutput(const CLWifiAPLocation &, BOOL, std::map<CLMacAddress, CLWifiAP Location> &, std::map<CLMacAddress, CLWifiAPLocation> &, unsigned int, const std::map<CLMacAddress, CLWifiAPLoca tion> &, unsigned int, const char *)",  "%s\n",  (const char *)v24);
      if (v24 != &__p) {
        free(v24);
      }
    }

    goto LABEL_42;
  }

  uint64_t v25 = 0LL;
  if (v16 < a5 && (v15 - 166) >= 0xFFFFFF5B && ((1 << v15) & a7) != 0)
  {
    if (!sub_10099EDC8(v15))
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      uint64_t v27 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        double v28 = CFAbsoluteTimeGetCurrent();
        sub_100C39CE0(a1, &__p, v28);
        unint64_t v29 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &__p
            : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = a8;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v29;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "FenceCal: adding non-2GHz, reason: %{private}s, %{private}s",  (uint8_t *)&buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&__p, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        uint64_t v46 = qword_101934878;
        double v47 = CFAbsoluteTimeGetCurrent();
        sub_100C39CE0(a1, &buf, v47);
        if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          unsigned int v48 = &buf;
        }
        else {
          unsigned int v48 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        }
        LODWORD(v55.__r_.__value_.__l.__data_) = 136380931;
        *(std::string::size_type *)((char *)v55.__r_.__value_.__r.__words + 4) = a8;
        WORD2(v55.__r_.__value_.__r.__words[1]) = 2081;
        *(std::string::size_type *)((char *)&v55.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v48;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v46,  2LL,  "FenceCal: adding non-2GHz, reason: %{private}s, %{private}s",  &v55,  22);
        int v50 = v49;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::addAPToOutput(const CLWifiAPLocation &, BOOL, std::map<CLMacAddress, CLWifi APLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, unsigned int, const std::map<CLMacAddress, CLWifiAP Location> &, unsigned int, const char *)",  "%s\n",  (const char *)v50);
        if (v50 != &__p) {
          free(v50);
        }
      }
    }

    uint64_t v30 = sub_1002FB09C(a4, &v54);
    if (a2)
    {
      if ((void *)(a4 + 8) != v30) {
        sub_1004C3264((uint64_t **)a4, &v54);
      }
      sub_1002FAF5C((uint64_t **)a4, &v54, &v54, (_OWORD *)a1);
      if ((void *)(a3 + 8) != sub_1002FB09C(a3, &v54)) {
        sub_1004C3264((uint64_t **)a3, &v54);
      }
    }

    else
    {
      if ((void *)(a4 + 8) != v30)
      {
LABEL_42:
        uint64_t v25 = 0LL;
        goto LABEL_47;
      }

      sub_1002FB09C(a6, &v54);
      if ((void *)(a3 + 8) != sub_1002FB09C(a3, &v54)) {
        sub_1004C3264((uint64_t **)a3, &v54);
      }
      sub_1002FAF5C((uint64_t **)a3, &v54, &v54, (_OWORD *)a1);
    }

    uint64_t v25 = 1LL;
  }

unint64_t sub_100948FBC(uint64_t *a1, char **a2)
{
  int v4 = 0;
  unint64_t v5 = (float *)*a2;
  a2[1] = *a2;
  unint64_t v6 = a2 + 2;
  do
  {
    if ((unint64_t)v5 >= *v6)
    {
      __int128 v7 = (float *)*a2;
      uint64_t v8 = ((char *)v5 - *a2) >> 3;
      unint64_t v9 = v8 + 1;
      uint64_t v10 = *v6 - (void)v7;
      if (v10 >> 2 > v9) {
        unint64_t v9 = v10 >> 2;
      }
      else {
        unint64_t v11 = v9;
      }
      if (v11)
      {
        uint64_t v12 = (char *)sub_1000071BC((uint64_t)v6, v11);
        __int128 v7 = (float *)*a2;
        unint64_t v5 = (float *)a2[1];
      }

      else
      {
        uint64_t v12 = 0LL;
      }

      __int128 v13 = &v12[8 * v8];
      *(_DWORD *)__int128 v13 = v4;
      *((_DWORD *)v13 + 1) = 0;
      __int128 v14 = v13;
      if (v5 != v7)
      {
        do
        {
          uint64_t v15 = *((void *)v5 - 1);
          v5 -= 2;
          *((void *)v14 - 1) = v15;
          v14 -= 8;
        }

        while (v5 != v7);
        __int128 v7 = (float *)*a2;
      }

      unint64_t v5 = (float *)(v13 + 8);
      *a2 = v14;
      a2[1] = v13 + 8;
      a2[2] = &v12[8 * v11];
      if (v7) {
        operator delete(v7);
      }
    }

    else
    {
      *(_DWORD *)unint64_t v5 = v4;
      v5[1] = 0.0;
      v5 += 2;
    }

    a2[1] = (char *)v5;
    ++v4;
  }

  while (v4 != 166);
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  if (*a1 == v17)
  {
    unint64_t v18 = 0LL;
    int v20 = 4;
    float v19 = 0.0;
  }

  else
  {
    LODWORD(v1_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
    float v19 = 0.0;
    int v20 = 4;
    do
    {
      if (v20 > *(_DWORD *)(v16 + 496))
      {
        int v21 = 0;
      }

      else
      {
        int v20 = *(_DWORD *)(v16 + 496);
        int v21 = *(_DWORD *)(v16 + 500);
      }

      uint64_t v22 = *(void *)(v16 + 8);
      uint64_t v23 = *(void *)(v16 + 16);
      if (v22 != v23)
      {
        int v24 = (float *)*a2;
        do
        {
          unsigned int v25 = *(_DWORD *)(v22 + 52) & ~(*(int *)(v22 + 52) >> 31);
          if (v25 <= 0xA5)
          {
            v24[2 * v25 + 1] = v24[2 * v25 + 1] + 1.0;
            float v19 = v19 + 1.0;
          }

          v22 += 96LL;
        }

        while (v22 != v23);
      }

      unint64_t v18 = v21 | v18;
      v16 += 504LL;
    }

    while (v16 != v17);
  }

  int v26 = (float *)*a2;
  if (*a2 != (char *)v5)
  {
    uint64_t v27 = (float *)*a2;
    do
    {
      if (v19 > 0.0) {
        v27[1] = v27[1] / v19;
      }
      v27 += 2;
    }

    while (v27 != v5);
  }

  unint64_t v28 = 126 - 2 * __clz(((char *)v5 - (char *)v26) >> 3);
  if (v5 == v26) {
    uint64_t v29 = 0LL;
  }
  else {
    uint64_t v29 = v28;
  }
  sub_10095014C(v26, v5, v29, 1);
  double v31 = (float *)*a2;
  double v32 = (float *)a2[1];
  if (*a2 == (char *)v32)
  {
    double v34 = 0.0;
  }

  else
  {
    double v33 = v19;
    double v34 = 0.0;
    *(void *)&__int128 v30 = 67110144LL;
    __int128 v54 = v30;
    do
    {
      if (*(int *)v31 >= 1 && sub_10099EDC8(*(_DWORD *)v31))
      {
        int v35 = sub_1002964C4(v18);
        int v36 = 1 << *(_DWORD *)v31;
        if ((v36 & v18) == 0 && (v35 < v20 ? (BOOL v37 = *(_DWORD *)v31 <= 0) : (BOOL v37 = 1), v37))
        {
          int v38 = 0;
        }

        else
        {
          double v34 = v34 + v31[1];
          unint64_t v18 = v36 | v18;
          int v38 = 1;
        }

        if (byte_10198E4A8)
        {
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101861E70);
          }
          __double2 v39 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            int v40 = *(_DWORD *)v31;
            double v41 = v31[1];
            *(_DWORD *)std::stringbuf::string_type buf = v54;
            int v65 = v38;
            __int16 v66 = 1024;
            int v67 = v20;
            __int16 v68 = 2048;
            double v69 = v33;
            __int16 v70 = 1024;
            int v71 = v40;
            __int16 v72 = 2048;
            double v73 = v41;
            _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEBUG,  "FenceCal: isAddChannel, %d, maxChannelSetSize, %d, totalAps, %.0lf, channelHistogram, sorted, channel, %2d, weight, %.3lf",  buf,  0x28u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101861E70);
            }
            int v42 = *(_DWORD *)v31;
            double v43 = v31[1];
            __int16 v56 = 1024;
            int v57 = v20;
            __int16 v58 = 2048;
            double v59 = v33;
            __int16 v60 = 1024;
            int v61 = v42;
            __int16 v62 = 2048;
            double v63 = v43;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: isAddChannel, %d, maxChannelSetSize, %d, totalAps, %.0lf, channelHistogram, sorted, channel, %2d, weight, %.3lf",  v55,  40,  *(double *)&v54,  DWORD2(v54),  COERCE_DOUBLE(__PAIR64__(v38, v54)));
            double v45 = (uint8_t *)v44;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "static unsigned int CLWifiFenceCalculator::calculateChannelHistogram(const std::vector<CLWifiFenceCalculat or> &, ChannelHistogram &)",  "%s\n",  v44);
            if (v45 != buf) {
              free(v45);
            }
          }
        }
      }

      v31 += 2;
    }

    while (v31 != v32);
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101861E70);
  }
  uint64_t v46 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v47 = sub_1002964C4(v18);
    *(_DWORD *)std::stringbuf::string_type buf = 67175169;
    int v65 = v47;
    __int16 v66 = 1025;
    int v67 = v18;
    __int16 v68 = 2049;
    double v69 = v34;
    _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "FenceCal: addedChannels, %{private}d, channelFilter, 0x%{private}08x, totalWeight, %{private}.3lf",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    uint64_t v49 = qword_101934878;
    int v50 = sub_1002964C4(v18);
    v55[0] = 67175169;
    v55[1] = v50;
    __int16 v56 = 1025;
    int v57 = v18;
    __int16 v58 = 2049;
    double v59 = v34;
    LODWORD(v53) = 24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v49,  2LL,  "FenceCal: addedChannels, %{private}d, channelFilter, 0x%{private}08x, totalWeight, %{private}.3lf",  v55,  v53);
    uint64_t v52 = (uint8_t *)v51;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static unsigned int CLWifiFenceCalculator::calculateChannelHistogram(const std::vector<CLWifiFenceCalculator> &, C hannelHistogram &)",  "%s\n",  v51);
    if (v52 != buf) {
      free(v52);
    }
  }

  return v18;
}

uint64_t sub_1009495CC( void *a1, uint64_t *a2, unsigned int a3, uint64_t *a4, uint64_t a5, uint64_t **a6, void *a7, void *a8, double a9, uint64_t a10)
{
  v411 = a2;
  double Current_1 = j__CFAbsoluteTimeGetCurrent_1();
  v444 = 0LL;
  v445 = 0LL;
  uint64_t v446 = 0LL;
  std::stringbuf::string_type __p = 0LL;
  v442 = 0LL;
  v443 = 0LL;
  sub_100D2D9A4((uint64_t)v440);
  v439[0] = 0LL;
  v439[1] = 0LL;
  v437[1] = 0LL;
  v438 = (uint64_t *)v439;
  v436 = v437;
  v437[0] = 0LL;
  if (byte_10198E4A8)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    __int128 v14 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v15 = 0xEFBEFBEFBEFBEFBFLL * ((v411[1] - *v411) >> 3);
      uint64_t v16 = 0x2E8BA2E8BA2E8BA3LL * ((a4[1] - *a4) >> 3);
      *(_DWORD *)std::stringbuf::string_type buf = 134218752;
      *(void *)&uint8_t buf[4] = v15;
      *(_WORD *)&_BYTE buf[12] = 1024;
      *(_DWORD *)&buf[14] = a3;
      *(_WORD *)&buf[18] = 2048;
      *(void *)&_BYTE buf[20] = v16;
      *(_WORD *)&_BYTE buf[28] = 2048;
      *(double *)&buf[30] = a9;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "FenceCal: calculateGroup, start, group size, %zu, apsBudget, %u, currentlySeen, %zu, minScoreThresh, %.4lf",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      unint64_t v397 = 0xEFBEFBEFBEFBEFBFLL * ((v411[1] - *v411) >> 3);
      uint64_t v398 = 0x2E8BA2E8BA2E8BA3LL * ((a4[1] - *a4) >> 3);
      *(_DWORD *)v450 = 134218752;
      *(void *)&v450[4] = v397;
      *(_WORD *)&v450[12] = 1024;
      *(_DWORD *)&v450[14] = a3;
      *(_WORD *)&v450[18] = 2048;
      *(void *)&v450[20] = v398;
      *(_WORD *)&v450[28] = 2048;
      *(double *)&v450[30] = a9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: calculateGroup, start, group size, %zu, apsBudget, %u, currentlySeen, %zu, minScoreThresh, %.4lf",  (size_t)v450,  38,  (size_t)v407,  *((double *)&v407 + 1));
      v400 = (char *)v399;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenceCal culator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWifiServic e_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLocation> &, s td::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v399);
      if (v400 != buf) {
        free(v400);
      }
    }
  }

  unint64_t v17 = sub_100948FBC(v411, (char **)&v444);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101861E70);
  }
  unint64_t v18 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v19 = sub_1002964C4(v17);
    *(_DWORD *)std::stringbuf::string_type buf = 67174913;
    *(_DWORD *)&uint8_t buf[4] = v17;
    *(_WORD *)&uint8_t buf[8] = 1025;
    *(_DWORD *)&buf[10] = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "FenceCal: channelFilter, 0x%{private}08X,countNumOfSetBits,%{private}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    uint64_t v393 = qword_101934878;
    int v394 = sub_1002964C4(v17);
    *(_DWORD *)v450 = 67174913;
    *(_DWORD *)&v450[4] = v17;
    *(_WORD *)&v450[8] = 1025;
    *(_DWORD *)&v450[10] = v394;
    LODWORD(v406) = 14;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v393,  2LL,  "FenceCal: channelFilter, 0x%{private}08X,countNumOfSetBits,%{private}d",  v450,  *(void *)&v406);
    v396 = (char *)v395;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenceCalcu lator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWifiService_Ty pe::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLocation> &, std::ma p<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v395);
    if (v396 != buf) {
      free(v396);
    }
  }

  uint64_t v20 = *v411;
  uint64_t v21 = v411[1];
  if (*v411 == v21)
  {
    int v22 = 0;
  }

  else
  {
    int v22 = 0;
    do
    {
      *(_DWORD *)(v20 + 392) = -1;
      *(_DWORD *)(v20 + 472) = 1;
      v22 += *(unsigned __int8 *)(v20 + 476);
      v20 += 504LL;
    }

    while (v20 != v21);
  }

  if (*(_BYTE *)(a5 + 88))
  {
    if (Current_1 == 0.0)
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101861E90);
      }
      uint64_t v23 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "fencecalculator timestamp is 0", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101861E90);
        }
        *(_WORD *)v450 = 0;
        LODWORD(v406) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "fencecalculator timestamp is 0",  v450,  *(void *)&v406);
        v405 = (char *)v404;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenceC alculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWifiSe rvice_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLocation > &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v404);
        if (v405 != buf) {
          free(v405);
        }
      }
    }

    *(void *)std::stringbuf::string_type buf = *(void *)a5;
    if (*(char *)(a5 + 31) < 0)
    {
      sub_1010DD48C(&buf[8], *(void **)(a5 + 8), *(void *)(a5 + 16));
    }

    else
    {
      *(_OWORD *)&uint8_t buf[8] = *(_OWORD *)(a5 + 8);
      *(void *)&buf[24] = *(void *)(a5 + 24);
    }

    __int128 v24 = *(_OWORD *)(a5 + 48);
    *(_OWORD *)&buf[32] = *(_OWORD *)(a5 + 32);
    *(_OWORD *)&_BYTE buf[48] = v24;
    *(_OWORD *)&buf[64] = *(_OWORD *)(a5 + 64);
    *(void *)&buf[80] = *(void *)(a5 + 80);
    memset(&v448, 0, sizeof(v448));
    LOBYTE(v435) = 0;
    v448.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x58uLL);
    v448.__r_.__value_.__l.__size_ = v448.__r_.__value_.__r.__words[0];
    v448.__r_.__value_.__l.__cap_ = v448.__r_.__value_.__r.__words[0] + 88;
    v448.__r_.__value_.__l.__size_ = sub_100353930( (uint64_t)&v448.__r_.__value_.__l.__cap_,  (uint64_t)buf,  (uint64_t)&buf[88],  (uint64_t)v448.__r_.__value_.__l.__data_);
    sub_100F77920(a1, (uint64_t)&v448, a10, (uint64_t)v450, Current_1);
    v434 = &v448;
    sub_100023498((void ***)&v434);
    if ((buf[31] & 0x80000000) != 0) {
      operator delete(*(void **)&buf[8]);
    }
    sub_100C3A4B8(*(void *)a5, *(_DWORD *)(a5 + 32), *(_DWORD *)(a5 + 40), (uint64_t)buf, *(double *)(a5 + 56));
    if (&v450[8] == (_BYTE *)sub_100950B34((uint64_t)v450, (uint64_t *)a5))
    {
      int v30 = *(_DWORD *)(a5 + 40);
    }

    else
    {
      unsigned int v25 = (_OWORD *)sub_10094D874((uint64_t)v450, (uint64_t *)a5);
      __int128 v26 = v25[4];
      __int128 v27 = v25[5];
      __int128 v28 = v25[2];
      *(_OWORD *)&_BYTE buf[48] = v25[3];
      __int128 v29 = v25[1];
      *(_OWORD *)std::stringbuf::string_type buf = *v25;
      *(_OWORD *)&buf[16] = v29;
      *(_OWORD *)&buf[64] = v26;
      *(_OWORD *)&buf[80] = v27;
      *(_OWORD *)&buf[32] = v28;
      int v30 = *(_DWORD *)(a5 + 40);
      *(_DWORD *)&buf[52] = v30;
    }

    if (sub_10099EDC8(v30)) {
      LODWORD(v17) = (1 << *(_DWORD *)(a5 + 40)) | v17;
    }
    if (v22) {
      sub_1009487E0( (uint64_t)buf,  1,  (uint64_t)a7,  (uint64_t)a8,  a3,  (uint64_t)&v438,  -1,  (std::string::size_type)"associated");
    }
    sub_100528854((uint64_t)v450, *(char **)&v450[8]);
  }

  sub_100F77920(a1, (uint64_t)a4, a10, (uint64_t)&v434, Current_1);
  unsigned int v416 = v17;
  uint64_t v32 = *a4;
  uint64_t v31 = a4[1];
  HIDWORD(v410) = v22;
  if (*a4 == v31)
  {
    int v422 = 0;
    int v33 = 0;
  }

  else
  {
    int v33 = 0;
    int v422 = 0;
    do
    {
      sub_100C3A4B8(*(void *)v32, *(_DWORD *)(v32 + 32), *(_DWORD *)(v32 + 40), (uint64_t)buf, *(double *)(v32 + 56));
      double v34 = (char **)sub_100950B34((uint64_t)&v434, (uint64_t *)v32);
      if (&v435 != v34)
      {
        __int128 v35 = *(_OWORD *)(v34 + 21);
        *(_OWORD *)&buf[32] = *(_OWORD *)(v34 + 19);
        *(_OWORD *)&_BYTE buf[48] = v35;
        __int128 v36 = *(_OWORD *)(v34 + 25);
        *(_OWORD *)&buf[64] = *(_OWORD *)(v34 + 23);
        *(_OWORD *)&buf[80] = v36;
        __int128 v37 = *(_OWORD *)(v34 + 17);
        *(_OWORD *)std::stringbuf::string_type buf = *(_OWORD *)(v34 + 15);
        *(_OWORD *)&buf[16] = v37;
      }

      *(_DWORD *)&buf[52] = *(_DWORD *)(v32 + 40);
      if (sub_10099EDC8(*(int *)&buf[52]))
      {
        int v38 = v442;
        if (v442 >= v443)
        {
          double v44 = (char *)__p;
          unint64_t v45 = 0xAAAAAAAAAAAAAAABLL * ((v442 - (_BYTE *)__p) >> 5);
          unint64_t v46 = v45 + 1;
          if (v45 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_100007008();
          }
          if (0x5555555555555556LL * ((v443 - (_BYTE *)__p) >> 5) > v46) {
            unint64_t v46 = 0x5555555555555556LL * ((v443 - (_BYTE *)__p) >> 5);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((v443 - (_BYTE *)__p) >> 5) >= 0x155555555555555LL) {
            unint64_t v47 = 0x2AAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v47 = v46;
          }
          if (v47)
          {
            unsigned int v48 = (char *)sub_1003F6AEC((uint64_t)&v443, v47);
            double v44 = (char *)__p;
            int v38 = v442;
          }

          else
          {
            unsigned int v48 = 0LL;
          }

          uint64_t v49 = &v48[96 * v45];
          __int128 v50 = *(_OWORD *)&buf[16];
          *(_OWORD *)uint64_t v49 = *(_OWORD *)buf;
          *((_OWORD *)v49 + 1) = v50;
          __int128 v51 = *(_OWORD *)&buf[32];
          __int128 v52 = *(_OWORD *)&buf[48];
          __int128 v53 = *(_OWORD *)&buf[80];
          *((_OWORD *)v49 + 4) = *(_OWORD *)&buf[64];
          *((_OWORD *)v49 + 5) = v53;
          *((_OWORD *)v49 + 2) = v51;
          *((_OWORD *)v49 + 3) = v52;
          if (v38 == v44)
          {
            double v59 = &v48[96 * v45];
          }

          else
          {
            __int128 v54 = &v48[96 * v45];
            do
            {
              __int128 v55 = *((_OWORD *)v38 - 5);
              *((_OWORD *)v54 - 6) = *((_OWORD *)v38 - 6);
              *((_OWORD *)v54 - 5) = v55;
              __int128 v56 = *((_OWORD *)v38 - 4);
              __int128 v57 = *((_OWORD *)v38 - 3);
              __int128 v58 = *((_OWORD *)v38 - 1);
              double v59 = v54 - 96;
              *((_OWORD *)v54 - 2) = *((_OWORD *)v38 - 2);
              *((_OWORD *)v54 - 1) = v58;
              *((_OWORD *)v54 - 4) = v56;
              *((_OWORD *)v54 - 3) = v57;
              v38 -= 96;
              v54 -= 96;
            }

            while (v38 != v44);
          }

          double v43 = v49 + 96;
          std::stringbuf::string_type __p = v59;
          v442 = v49 + 96;
          v443 = &v48[96 * v47];
          if (v44) {
            operator delete(v44);
          }
        }

        else
        {
          __int128 v39 = *(_OWORD *)&buf[16];
          *(_OWORD *)v442 = *(_OWORD *)buf;
          *((_OWORD *)v38 + 1) = v39;
          __int128 v40 = *(_OWORD *)&buf[32];
          __int128 v41 = *(_OWORD *)&buf[48];
          __int128 v42 = *(_OWORD *)&buf[80];
          *((_OWORD *)v38 + 4) = *(_OWORD *)&buf[64];
          *((_OWORD *)v38 + 5) = v42;
          *((_OWORD *)v38 + 2) = v40;
          *((_OWORD *)v38 + 3) = v41;
          double v43 = v38 + 96;
        }

        v442 = v43;
        if (sub_100C3A418((double *)buf))
        {
          int v60 = *(_DWORD *)&buf[48];
          ++v33;
        }
      }

      v32 += 88LL;
    }

    while (v32 != v31);
  }

  sub_10049AD68((uint64_t)&__p);
  double v63 = (char *)__p;
  __int16 v62 = v442;
  int v64 = v22;
  if (__p != v442)
  {
    *(void *)&__int128 v61 = 134283777LL;
    __int128 v408 = v61;
    *(void *)&__int128 v61 = 136381187LL;
    __int128 v407 = v61;
    int v65 = v422;
    do
    {
      BOOL v66 = sub_100C3A418((double *)v63);
      if (v33)
      {
        if (v65) {
          BOOL v67 = v66;
        }
        else {
          BOOL v67 = 0;
        }
        if (v67)
        {
          int v68 = *((_DWORD *)v63 + 12);
          BOOL v69 = *((double *)sub_100D0ABC0() + 5) < (double)v68 || v64 == 0;
          if (v69) {
            goto LABEL_89;
          }
        }

        else
        {
          if (v64) {
            BOOL v70 = v66;
          }
          else {
            BOOL v70 = 0;
          }
          if (!v70) {
            goto LABEL_89;
          }
        }
      }

      else if (!v64)
      {
        goto LABEL_89;
      }

      sub_1009487E0( (uint64_t)v63,  1,  (uint64_t)a7,  (uint64_t)a8,  a3,  (uint64_t)&v438,  v416,  (std::string::size_type)"CurrentlySeen");
LABEL_89:
      double v71 = *(double *)(a10 + 20);
      BOOL v72 = v71 < 0.0 || v71 > 100.0;
      if (!v72 && sub_100C3A418((double *)v63))
      {
        uint64_t v73 = *v411;
        uint64_t v74 = v411[1];
        if (*v411 != v74)
        {
          do
          {
            __int16 v75 = *(void **)(v73 + 8);
            unint64_t v76 = *(void **)(v73 + 16);
            while (v75 != v76)
            {
              *(void *)std::stringbuf::string_type buf = *(void *)v63;
              *(void *)v450 = *v75;
              if (sub_1007EC0B0(buf, v450)) {
                goto LABEL_101;
              }
              v75 += 12;
            }

            v73 += 504LL;
          }

          while (v73 != v74);
          uint64_t v73 = v74;
LABEL_101:
          int v65 = v422;
        }

        uint64_t v77 = v411[1];
        unsigned int v78 = (double *)(v73 + 104);
        __int16 v79 = (double *)(v73 + 112);
        if (v73 == v77)
        {
          unsigned int v78 = (double *)(a10 + 4);
          __int16 v79 = (double *)(a10 + 12);
        }

        double v80 = *v78;
        double v81 = *v79;
        double v82 = sub_100D2E080(v440, a10, *((double *)v63 + 1), *((double *)v63 + 2));
        double v83 = sub_100D2E080(v440, a10, v80, v81);
        if (v73 != v77)
        {
          char v84 = *(_BYTE *)(v73 + 476);
          if (v84) {
            char v84 = v83 - sub_1009232CC(v73 + 32) >= 300.0;
          }
          if ((v84 & 1) != 0) {
            goto LABEL_110;
          }
        }

        double v85 = *((double *)v63 + 4);
        if (v85 >= 450.0 || v82 - v85 >= 450.0)
        {
LABEL_110:
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101861E70);
          }
          uint64_t v86 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            double Current = CFAbsoluteTimeGetCurrent();
            sub_100C39CE0((uint64_t)v63, (std::stringbuf::string_type *)buf, Current);
            uint64_t v88 = buf;
            if (buf[23] < 0) {
              uint64_t v88 = *(_BYTE **)buf;
            }
            *(_DWORD *)v450 = 136380675;
            *(void *)&v450[4] = v88;
            _os_log_impl( (void *)&_mh_execute_header,  v86,  OS_LOG_TYPE_DEBUG,  "FenceCal: before devaluing, apLocation, %{private}s",  v450,  0xCu);
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101861E70);
            }
            uint64_t v108 = qword_101934878;
            double v109 = CFAbsoluteTimeGetCurrent();
            sub_100C39CE0((uint64_t)v63, (std::stringbuf::string_type *)v450, v109);
            double v110 = v450;
            if (v450[23] < 0) {
              double v110 = *(_BYTE **)v450;
            }
            LODWORD(v448.__r_.__value_.__l.__data_) = 136380675;
            *(std::string::size_type *)((char *)v448.__r_.__value_.__r.__words + 4) = (std::string::size_type)v110;
            LODWORD(v406) = 12;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v108,  2LL,  "FenceCal: before devaluing, apLocation, %{private}s",  &v448,  *(void *)&v406);
            double v112 = v111;
            if ((v450[23] & 0x80000000) != 0) {
              operator delete(*(void **)v450);
            }
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFe nceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional< CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWi fiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v112);
            if (v112 != buf) {
              free(v112);
            }
          }

          double v433 = *(double *)v63;
          sub_100F7CE28((uint64_t)a1, *(uint64_t *)&v433);
          double v89 = v433;
          int v90 = (double *)operator new(8uLL);
          *(void *)std::stringbuf::string_type buf = v90;
          double *v90 = v89;
          *(void *)&buf[16] = v90 + 1;
          *(void *)&uint8_t buf[8] = v90 + 1;
          (*(void (**)(void **__return_ptr, void *, _BYTE *, uint64_t, double))(*a1 + 16LL))( v431,  a1,  buf,  a10,  Current_1);
          if (*(void *)buf)
          {
            *(void *)&uint8_t buf[8] = *(void *)buf;
            operator delete(*(void **)buf);
          }

          __int128 v91 = *((_OWORD *)v63 + 1);
          *(_OWORD *)v450 = *(_OWORD *)v63;
          *(_OWORD *)&v450[16] = v91;
          __int128 v92 = *((_OWORD *)v63 + 2);
          __int128 v93 = *((_OWORD *)v63 + 3);
          __int128 v94 = *((_OWORD *)v63 + 5);
          *(_OWORD *)&v450[64] = *((_OWORD *)v63 + 4);
          *(_OWORD *)&v450[80] = v94;
          *(_OWORD *)&v450[32] = v92;
          *(_OWORD *)&v450[48] = v93;
          if (&v431[1] != sub_1002FB09C((uint64_t)v431, &v433))
          {
            uint64_t v95 = (_OWORD *)sub_1002FAEF4((uint64_t)v431, &v433);
            __int128 v96 = v95[1];
            *(_OWORD *)v450 = *v95;
            *(_OWORD *)&v450[16] = v96;
            __int128 v97 = v95[2];
            __int128 v98 = v95[3];
            __int128 v99 = v95[5];
            *(_OWORD *)&v450[64] = v95[4];
            *(_OWORD *)&v450[80] = v99;
            *(_OWORD *)&v450[32] = v97;
            *(_OWORD *)&v450[48] = v98;
          }

          if (sub_100C3A418((double *)v450))
          {
            *(void *)std::stringbuf::string_type buf = *(void *)v450;
            if (v439 != sub_1002FB09C((uint64_t)&v438, buf))
            {
              *(void *)std::stringbuf::string_type buf = *(void *)v450;
              sub_1004C3264(&v438, buf);
            }

            *(void *)std::stringbuf::string_type buf = *(void *)v450;
            sub_1002FAF5C(&v438, buf, buf, v450);
          }

          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101861E70);
          }
          __int128 v100 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)std::stringbuf::string_type buf = v408;
            *(double *)&uint8_t buf[4] = v82;
            *(_WORD *)&_BYTE buf[12] = 2049;
            *(double *)&buf[14] = v83;
            _os_log_impl( (void *)&_mh_execute_header,  v100,  OS_LOG_TYPE_DEBUG,  "FenceCal: devaluing, distanceToExpectedApLocation, %{private}.1lf, distanceToFenceCenter, %{private}.1lf",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101861E70);
            }
            LODWORD(v448.__r_.__value_.__l.__data_) = v408;
            *(double *)((char *)v448.__r_.__value_.__r.__words + 4) = v82;
            WORD2(v448.__r_.__value_.__r.__words[1]) = 2049;
            *(double *)((char *)&v448.__r_.__value_.__r.__words[1] + 6) = v83;
            LODWORD(v406) = 22;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: devaluing, distanceToExpectedApLocation, %{private}.1lf, distanceToFenceCenter, %{private}.1lf",  &v448,  *(void *)&v406);
            uint64_t v114 = (char *)v113;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFe nceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional< CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWi fiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v113);
            if (v114 != buf) {
              free(v114);
            }
          }

          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101861E70);
          }
          __int128 v101 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
          {
            double v102 = CFAbsoluteTimeGetCurrent();
            sub_100C39CE0((uint64_t)v450, (std::stringbuf::string_type *)buf, v102);
            uint64_t v103 = buf;
            if (buf[23] < 0) {
              uint64_t v103 = *(_BYTE **)buf;
            }
            LODWORD(v448.__r_.__value_.__l.__data_) = 136380675;
            *(std::string::size_type *)((char *)v448.__r_.__value_.__r.__words + 4) = (std::string::size_type)v103;
            _os_log_impl( (void *)&_mh_execute_header,  v101,  OS_LOG_TYPE_DEBUG,  "FenceCal: after devaluing, apLocation, %{private}s",  (uint8_t *)&v448,  0xCu);
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101861E70);
            }
            uint64_t v115 = qword_101934878;
            double v116 = CFAbsoluteTimeGetCurrent();
            sub_100C39CE0((uint64_t)v450, &v448, v116);
            double v117 = &v448;
            if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              double v117 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
            }
            LODWORD(v447.__r_.__value_.__l.__data_) = 136380675;
            *(std::string::size_type *)((char *)v447.__r_.__value_.__r.__words + 4) = (std::string::size_type)v117;
            LODWORD(v406) = 12;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v115,  2LL,  "FenceCal: after devaluing, apLocation, %{private}s",  &v447,  *(void *)&v406);
            __int128 v119 = v118;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFe nceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional< CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWi fiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v119);
            if (v119 != buf) {
              free(v119);
            }
          }

          if (v73 != v77)
          {
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101861E70);
            }
            unint64_t v104 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
            {
              sub_100923668(v73 + 32, &v448);
              uint64_t v105 = &v448;
              if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                uint64_t v105 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
              }
              unint64_t v106 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v73 + 352) - *(void *)(v73 + 344)) >> 5);
              int v107 = *(unsigned __int8 *)(v73 + 476);
              *(_DWORD *)std::stringbuf::string_type buf = v407;
              *(void *)&uint8_t buf[4] = v105;
              *(_WORD *)&_BYTE buf[12] = 2049;
              *(void *)&buf[14] = v106;
              *(_WORD *)&_BYTE buf[22] = 1025;
              *(_DWORD *)&buf[24] = v107;
              _os_log_impl( (void *)&_mh_execute_header,  v104,  OS_LOG_TYPE_DEBUG,  "FenceCal: devaluing, fence, %{private}s, result.fChosenAPs, %{private}lu, isExit, %{private}d",  buf,  0x1Cu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101861E70);
              }
              uint64_t v120 = qword_101934878;
              sub_100923668(v73 + 32, &v447);
              __int128 v121 = &v447;
              if ((v447.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                __int128 v121 = (std::stringbuf::string_type *)v447.__r_.__value_.__r.__words[0];
              }
              unint64_t v122 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v73 + 352) - *(void *)(v73 + 344)) >> 5);
              int v123 = *(unsigned __int8 *)(v73 + 476);
              LODWORD(v448.__r_.__value_.__l.__data_) = v407;
              *(std::string::size_type *)((char *)v448.__r_.__value_.__r.__words + 4) = (std::string::size_type)v121;
              WORD2(v448.__r_.__value_.__r.__words[1]) = 2049;
              *(std::string::size_type *)((char *)&v448.__r_.__value_.__r.__words[1] + 6) = v122;
              HIWORD(v448.__r_.__value_.__r.__words[2]) = 1025;
              int v449 = v123;
              LODWORD(v406) = 28;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v120,  2LL,  "FenceCal: devaluing, fence, %{private}s, result.fChosenAPs, %{private}lu, isExit, %{private}d",  &v448,  *(void *)&v406);
              v125 = v124;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifi FenceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optio nal<CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress , CLWifiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v125);
              if (v125 != buf) {
                free(v125);
              }
            }
          }

          sub_100008390((uint64_t)v431, (void *)v431[1]);
        }
      }

      v63 += 96;
    }

    while (v63 != v62);
  }

  int v423 = 0;
  unsigned int v413 = 0;
  *(void *)&__int128 v61 = 136316162LL;
  __int128 v412 = v61;
  do
  {
    uint64_t v126 = *v411;
    uint64_t v414 = v411[1];
    if (*v411 == v414)
    {
      uint64_t v129 = 0LL;
      unsigned int v128 = 0;
      char v127 = 0;
    }

    else
    {
      char v127 = 0;
      unsigned int v128 = 0;
      uint64_t v129 = 0LL;
      do
      {
        else {
          size_t v130 = *(void *)(v126 + 40);
        }
        sub_1000392EC((uint64_t)buf, v130 + 1);
        if (buf[23] >= 0) {
          double v131 = buf;
        }
        else {
          double v131 = *(_BYTE **)buf;
        }
        if (v130)
        {
          else {
            v132 = *(const void **)(v126 + 32);
          }
          memmove(v131, v132, v130);
        }

        *(_WORD *)&v131[v130] = 47;
        int v133 = *(char *)(v126 + 79);
        if (v133 >= 0) {
          v134 = (const std::string::value_type *)(v126 + 56);
        }
        else {
          v134 = *(const std::string::value_type **)(v126 + 56);
        }
        if (v133 >= 0) {
          std::string::size_type v135 = *(unsigned __int8 *)(v126 + 79);
        }
        else {
          std::string::size_type v135 = *(void *)(v126 + 64);
        }
        int v136 = std::string::append((std::string *)buf, v134, v135);
        __int128 v61 = *(_OWORD *)&v136->__r_.__value_.__l.__data_;
        v448.__r_.__value_.__l.__cap_ = v136->__r_.__value_.__l.__cap_;
        *(_OWORD *)&v448.__r_.__value_.__l.__data_ = v61;
        v136->__r_.__value_.__l.__size_ = 0LL;
        v136->__r_.__value_.__l.__cap_ = 0LL;
        v136->__r_.__value_.__r.__words[0] = 0LL;
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        if (*(int *)(v126 + 480) >= 1)
        {
          int v137 = 0;
          BOOL v139 = v413 < a3 && v128 < a3;
          do
          {
            unsigned int v140 = *(_DWORD *)(v126 + 392);
            uint64_t v141 = *(void *)(v126 + 368);
            if ((v140 & 0x80000000) != 0) {
              double v142 = 0.0;
            }
            else {
              double v142 = *(double *)(v141 + 40LL * v140 + 8);
            }
            int v143 = *(_DWORD *)(v126 + 472);
            signed int v144 = v140 + v143;
            double v145 = -1.0;
            if (byte_10198E4A8) {
              BOOL v146 = byte_1019A1880 == 0;
            }
            else {
              BOOL v146 = 1;
            }
            if (!v146)
            {
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101861E70);
              }
              double v147 = (os_log_s *)qword_101934878;
              if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
              {
                int v148 = &v448;
                if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  int v148 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
                }
                int v149 = *(_DWORD *)(v126 + 480);
                *(_DWORD *)std::stringbuf::string_type buf = 136317186;
                *(void *)&uint8_t buf[4] = v148;
                *(_WORD *)&_BYTE buf[12] = 1024;
                *(_DWORD *)&buf[14] = v423;
                *(_WORD *)&buf[18] = 1024;
                *(_DWORD *)&_BYTE buf[20] = v137;
                *(_WORD *)&buf[24] = 1024;
                *(_DWORD *)&buf[26] = v149;
                *(_WORD *)&buf[30] = 2048;
                *(double *)&buf[32] = v142;
                *(_WORD *)&buf[40] = 2048;
                *(double *)&buf[42] = v145;
                *(_WORD *)&buf[50] = 2048;
                *(double *)&buf[52] = a9;
                *(_WORD *)&buf[60] = 1024;
                *(_DWORD *)&buf[62] = v128;
                *(_WORD *)&buf[66] = 1024;
                *(_DWORD *)&buf[68] = a3;
                _os_log_impl( (void *)&_mh_execute_header,  v147,  OS_LOG_TYPE_DEBUG,  "FenceCal: fence, %s, group pass, %3d, currentWeight, %3d, %3d, score, %+.4lf, newScore, %+.4lf, minSco reThresh, %+.4lf, totalChosenAps, %d, apsBudget, %d",  buf,  0x48u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934870 != -1) {
                  dispatch_once(&qword_101934870, &stru_101861E70);
                }
                __int128 v167 = &v448;
                if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  __int128 v167 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
                }
                int v168 = *(_DWORD *)(v126 + 480);
                *(_DWORD *)v450 = 136317186;
                *(void *)&v450[4] = v167;
                *(_WORD *)&v450[12] = 1024;
                *(_DWORD *)&v450[14] = v423;
                *(_WORD *)&v450[18] = 1024;
                *(_DWORD *)&v450[20] = v137;
                *(_WORD *)&v450[24] = 1024;
                *(_DWORD *)&v450[26] = v168;
                *(_WORD *)&v450[30] = 2048;
                *(double *)&v450[32] = v142;
                *(_WORD *)&v450[40] = 2048;
                *(double *)&v450[42] = v145;
                *(_WORD *)&v450[50] = 2048;
                *(double *)&v450[52] = a9;
                *(_WORD *)&v450[60] = 1024;
                *(_DWORD *)&v450[62] = v128;
                *(_WORD *)&v450[66] = 1024;
                *(_DWORD *)&v450[68] = a3;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: fence, %s, group pass, %3d, currentWeight, %3d, %3d, score, %+.4lf, newScore, %+.4lf, minSco reThresh, %+.4lf, totalChosenAps, %d, apsBudget, %d",  v450,  72,  (_DWORD)v407,  DWORD2(v407),  *(double *)&v408,  *((double *)&v408 + 1),  v410,  (_DWORD)v411,  (_DWORD)v412);
                v170 = (char *)v169;
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWi fiFenceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::o ptional<CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacA ddress, CLWifiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v169);
                if (v170 != buf) {
                  free(v170);
                }
              }
            }

            BOOL v150 = v142 < a9 && v139;
            unsigned int v151 = *(_DWORD *)(v126 + 392);
            if (v150
              && (uint64_t v152 = *(void *)(v126 + 368),
                  int v153 = -858993459 * ((unint64_t)(*(void *)(v126 + 376) - v152) >> 3),
                  (int)(v151 + v143) < v153))
            {
              if (vabdd_f64(v145, v142) <= 0.005)
              {
                if ((v151 & 0x80000000) != 0) {
                  uint64_t v129 = 0LL;
                }
                else {
                  uint64_t v129 = *(void *)(v152 + 40LL * v151);
                }
                int v159 = *(_DWORD *)(v126 + 472);
                if (v159 < v153)
                {
                  *(_DWORD *)(v126 + 472) = v159 + 1;
                  if (byte_10198E4A8)
                  {
                    if (qword_101934870 != -1) {
                      dispatch_once(&qword_101934870, &stru_101861E70);
                    }
                    unint64_t v160 = (os_log_s *)qword_101934878;
                    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
                    {
                      unint64_t v161 = &v448;
                      if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                        unint64_t v161 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
                      }
                      int v162 = *(_DWORD *)(v126 + 472);
                      *(_DWORD *)std::stringbuf::string_type buf = v412;
                      *(void *)&uint8_t buf[4] = v161;
                      *(_WORD *)&_BYTE buf[12] = 2048;
                      *(double *)&buf[14] = v142;
                      *(_WORD *)&_BYTE buf[22] = 2048;
                      *(double *)&buf[24] = v145;
                      *(_WORD *)&buf[32] = 2048;
                      *(void *)&buf[34] = 0x3F747AE147AE147BLL;
                      *(_WORD *)&buf[42] = 1024;
                      *(_DWORD *)&buf[44] = v162;
                      _os_log_impl( (void *)&_mh_execute_header,  v160,  OS_LOG_TYPE_DEBUG,  "FenceCal: fence, %s, score too close, currentScore, %lf, newScore, %lf, significantUpdateThresh, %lf, updating next step to, %d",  buf,  0x30u);
                    }

                    if (sub_1002921D0(115, 2))
                    {
                      bzero(buf, 0x65CuLL);
                      if (qword_101934870 != -1) {
                        dispatch_once(&qword_101934870, &stru_101861E70);
                      }
                      __int128 v176 = &v448;
                      if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                        __int128 v176 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
                      }
                      int v177 = *(_DWORD *)(v126 + 472);
                      *(_DWORD *)v450 = v412;
                      *(void *)&v450[4] = v176;
                      *(_WORD *)&v450[12] = 2048;
                      *(double *)&v450[14] = v142;
                      *(_WORD *)&v450[22] = 2048;
                      *(double *)&v450[24] = v145;
                      *(_WORD *)&v450[32] = 2048;
                      *(void *)&v450[34] = 0x3F747AE147AE147BLL;
                      *(_WORD *)&v450[42] = 1024;
                      *(_DWORD *)&v450[44] = v177;
                      LODWORD(v406) = 48;
                      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: fence, %s, score too close, currentScore, %lf, newScore, %lf, significantUpdateThresh, %lf, updating next step to, %d",  v450,  v406,  *(double *)&v407,  *((double *)&v407 + 1),  (_DWORD)v408);
                      std::string::size_type v179 = (char *)v178;
                      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vecto r<CLWifiFenceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoin t> &, std::optional<CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v178);
                      if (v179 != buf) {
                        free(v179);
                      }
                    }
                  }

                  char v127 = 1;
                }
              }

              else
              {
                if (byte_10198E4A8)
                {
                  if (qword_101934870 != -1) {
                    dispatch_once(&qword_101934870, &stru_101861E70);
                  }
                  unint64_t v154 = (os_log_s *)qword_101934878;
                  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
                  {
                    __int128 v155 = &v448;
                    if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                      __int128 v155 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
                    }
                    int v156 = *(_DWORD *)(v126 + 392);
                    uint64_t v157 = *(void *)(v126 + 368);
                    if (v156 < 1) {
                      uint64_t v158 = 0LL;
                    }
                    else {
                      uint64_t v158 = *(void *)(v157 + 40LL * v156);
                    }
                    int v163 = *(_DWORD *)(v126 + 480);
                    int v164 = v156 + v143;
                    uint64_t v165 = *(void *)(v157 + 40LL * v164);
                    *(_DWORD *)std::stringbuf::string_type buf = 136317698;
                    *(void *)&uint8_t buf[4] = v155;
                    *(_WORD *)&_BYTE buf[12] = 1024;
                    *(_DWORD *)&buf[14] = v423;
                    *(_WORD *)&buf[18] = 1024;
                    *(_DWORD *)&_BYTE buf[20] = v137;
                    *(_WORD *)&buf[24] = 1024;
                    *(_DWORD *)&buf[26] = v163;
                    *(_WORD *)&buf[30] = 2048;
                    *(double *)&buf[32] = v142;
                    *(_WORD *)&buf[40] = 2048;
                    *(double *)&buf[42] = v145;
                    *(_WORD *)&buf[50] = 2048;
                    *(void *)&buf[52] = v158;
                    *(_WORD *)&buf[60] = 2048;
                    *(void *)&buf[62] = v165;
                    *(_WORD *)&buf[70] = 1024;
                    *(_DWORD *)&buf[72] = v164;
                    *(_WORD *)&buf[76] = 1024;
                    *(_DWORD *)&buf[78] = v128;
                    *(_WORD *)&buf[82] = 1024;
                    *(_DWORD *)&buf[84] = a3;
                    _os_log_impl( (void *)&_mh_execute_header,  v154,  OS_LOG_TYPE_DEBUG,  "FenceCal: fence, %s, group pass, %3d, currentWeight, %3d, %3d, upgrading score from, %.4lf, to, %. 4lf, from, %4zu, to, %4zu, APs, index, %2d, totalChosenAps, %d, apsBudget, %d",  buf,  0x58u);
                  }

                  if (sub_1002921D0(115, 2))
                  {
                    bzero(buf, 0x65CuLL);
                    if (qword_101934870 != -1) {
                      dispatch_once(&qword_101934870, &stru_101861E70);
                    }
                    v171 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
                    if ((v448.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                      v171 = &v448;
                    }
                    int v172 = *(_DWORD *)(v126 + 480);
                    int v173 = *(_DWORD *)(v126 + 392);
                    uint64_t v174 = *(void *)(v126 + 368);
                    if (v173 < 1) {
                      uint64_t v175 = 0LL;
                    }
                    else {
                      uint64_t v175 = *(void *)(v174 + 40LL * v173);
                    }
                    int v180 = v173 + v143;
                    uint64_t v181 = *(void *)(v174 + 40LL * v180);
                    *(_DWORD *)v450 = 136317698;
                    *(void *)&v450[4] = v171;
                    *(_WORD *)&v450[12] = 1024;
                    *(_DWORD *)&v450[14] = v423;
                    *(_WORD *)&v450[18] = 1024;
                    *(_DWORD *)&v450[20] = v137;
                    *(_WORD *)&v450[24] = 1024;
                    *(_DWORD *)&v450[26] = v172;
                    *(_WORD *)&v450[30] = 2048;
                    *(double *)&v450[32] = v142;
                    *(_WORD *)&v450[40] = 2048;
                    *(double *)&v450[42] = v145;
                    *(_WORD *)&v450[50] = 2048;
                    *(void *)&v450[52] = v175;
                    *(_WORD *)&v450[60] = 2048;
                    *(void *)&v450[62] = v181;
                    *(_WORD *)&v450[70] = 1024;
                    *(_DWORD *)&v450[72] = v180;
                    *(_WORD *)&v450[76] = 1024;
                    *(_DWORD *)&v450[78] = v128;
                    *(_WORD *)&v450[82] = 1024;
                    *(_DWORD *)&v450[84] = a3;
                    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: fence, %s, group pass, %3d, currentWeight, %3d, %3d, upgrading score from, %.4lf, to, %. 4lf, from, %4zu, to, %4zu, APs, index, %2d, totalChosenAps, %d, apsBudget, %d",  v450,  88,  (_DWORD)v407,  DWORD2(v407),  *(double *)&v408,  *((double *)&v408 + 1),  *(size_t *)&v410,  (size_t)v411,  (_DWORD)v412,  DWORD2(v412),  v413);
                    unint64_t v183 = (char *)v182;
                    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector< CLWifiFenceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> & , std::optional<CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std ::map<CLMacAddress, CLWifiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemo nLocation &, double)",  "%s\n",  v182);
                    if (v183 != buf) {
                      free(v183);
                    }
                  }
                }

                int v166 = *(_DWORD *)(v126 + 392) + v143;
                *(_DWORD *)(v126 + 392) = v166;
                uint64_t v129 = *(void *)(*(void *)(v126 + 368) + 40LL * v166);
                char v127 = 1;
                *(_DWORD *)(v126 + 472) = 1;
              }
            }

            else if ((v151 & 0x80000000) != 0)
            {
              uint64_t v129 = 0LL;
            }

            else
            {
              uint64_t v129 = *(void *)(*(void *)(v126 + 368) + 40LL * v151);
            }

            ++v137;
          }

          while (v137 < *(_DWORD *)(v126 + 480));
        }

        v128 += v129;
        v126 += 504LL;
      }

      while (v126 != v414);
    }

    unsigned int v413 = v128;
    if (byte_10198E4A8)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      v184 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67109888;
        *(_DWORD *)&uint8_t buf[4] = v423;
        *(_WORD *)&uint8_t buf[8] = 1024;
        *(_DWORD *)&buf[10] = v128;
        *(_WORD *)&buf[14] = 1024;
        *(_DWORD *)&buf[16] = v128;
        *(_WORD *)&_BYTE buf[20] = 2048;
        *(void *)&_BYTE buf[22] = v129;
        _os_log_impl( (void *)&_mh_execute_header,  v184,  OS_LOG_TYPE_DEBUG,  "FenceCal: passNum, %d, commitedAPs, %d, totalChosenAps, %d, numOfAps, %zu",  buf,  0x1Eu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        *(_DWORD *)v450 = 67109888;
        *(_DWORD *)&v450[4] = v423;
        *(_WORD *)&v450[8] = 1024;
        *(_DWORD *)&v450[10] = v128;
        *(_WORD *)&v450[14] = 1024;
        *(_DWORD *)&v450[16] = v128;
        *(_WORD *)&v450[20] = 2048;
        *(void *)&v450[22] = v129;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: passNum, %d, commitedAPs, %d, totalChosenAps, %d, numOfAps, %zu",  v450,  30,  (_DWORD)v407,  *((size_t *)&v407 + 1));
        int v186 = (char *)v185;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenceC alculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWifiSe rvice_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLocation > &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v185);
        if (v186 != buf) {
          free(v186);
        }
      }
    }

    ++v423;
  }

  while ((v127 & 1) != 0);
  uint64_t v187 = *v411;
  uint64_t v188 = v411[1];
  if (*v411 != v188)
  {
    uint64_t v189 = 0LL;
    int v190 = 0;
    while (1)
    {
      unsigned int v191 = *(_DWORD *)(v187 + 392);
      if ((v191 & 0x80000000) != 0)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        v211 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          sub_100923668(v187 + 32, (std::stringbuf::string_type *)buf);
          std::string::size_type v212 = buf;
          if (buf[23] < 0) {
            std::string::size_type v212 = *(_BYTE **)buf;
          }
          *(_DWORD *)v450 = 136380675;
          *(void *)&v450[4] = v212;
          _os_log_impl( (void *)&_mh_execute_header,  v211,  OS_LOG_TYPE_DEBUG,  "FenceCal: group result, %{private}30s, can't be monitored",  v450,  0xCu);
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_324;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        uint64_t v213 = qword_101934878;
        sub_100923668(v187 + 32, (std::stringbuf::string_type *)v450);
        uint64_t v214 = v450;
        if (v450[23] < 0) {
          uint64_t v214 = *(_BYTE **)v450;
        }
        LODWORD(v448.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)v448.__r_.__value_.__r.__words + 4) = (std::string::size_type)v214;
        LODWORD(v406) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v213,  2LL,  "FenceCal: group result, %{private}30s, can't be monitored",  &v448,  *(void *)&v406);
        uint64_t v210 = v215;
        if ((v450[23] & 0x80000000) != 0) {
          operator delete(*(void **)v450);
        }
      }

      else
      {
        int v192 = *(_DWORD *)(*(void *)(v187 + 368) + 40LL * v191);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        v190 += v192;
        uint64_t v193 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          sub_100923668(v187 + 32, (std::stringbuf::string_type *)v450);
          v194 = v450;
          if (v450[23] < 0) {
            v194 = *(_BYTE **)v450;
          }
          unint64_t v195 = 0xEFBEFBEFBEFBEFBFLL * ((v411[1] - *v411) >> 3);
          int v196 = *(_DWORD *)(v187 + 392);
          uint64_t v197 = (uint64_t *)(*(void *)(v187 + 368) + 40LL * v196);
          unint64_t v198 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v187 + 352) - *(void *)(v187 + 344)) >> 5);
          uint64_t v200 = *v197;
          uint64_t v199 = v197[1];
          *(_DWORD *)std::stringbuf::string_type buf = 136382979;
          *(void *)&uint8_t buf[4] = v194;
          *(_WORD *)&_BYTE buf[12] = 1025;
          *(_DWORD *)&buf[14] = v128;
          *(_WORD *)&buf[18] = 1025;
          *(_DWORD *)&_BYTE buf[20] = a3;
          *(_WORD *)&buf[24] = 2049;
          *(void *)&buf[26] = v189;
          *(_WORD *)&buf[34] = 2049;
          *(void *)&_BYTE buf[36] = v195;
          *(_WORD *)&buf[44] = 2049;
          *(void *)&buf[46] = v200;
          *(_WORD *)&buf[54] = 2049;
          *(void *)&buf[56] = v198;
          *(_WORD *)&buf[64] = 2049;
          *(void *)&buf[66] = v199;
          *(_WORD *)&buf[74] = 1025;
          *(_DWORD *)&buf[76] = v196;
          *(_WORD *)&buf[80] = 1025;
          *(_DWORD *)&buf[82] = v190;
          _os_log_impl( (void *)&_mh_execute_header,  v193,  OS_LOG_TYPE_DEBUG,  "FenceCal: group result, %{private}30s, totalChosenAps, %{private}4d, apsBudget, %{private}4d, index, %{priva te}4zu , %{private}4zu, aps, %{private}4zu, %{private}4zu, score, %{private}.2lf, index, %{private}4d, dbgCo unter, %{private}4d",  buf,  0x56u);
          if ((v450[23] & 0x80000000) != 0) {
            operator delete(*(void **)v450);
          }
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_324;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        uint64_t v201 = qword_101934878;
        sub_100923668(v187 + 32, &v448);
        double v202 = &v448;
        if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          double v202 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
        }
        unint64_t v203 = 0xEFBEFBEFBEFBEFBFLL * ((v411[1] - *v411) >> 3);
        int v204 = *(_DWORD *)(v187 + 392);
        double v205 = (uint64_t *)(*(void *)(v187 + 368) + 40LL * v204);
        unint64_t v206 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v187 + 352) - *(void *)(v187 + 344)) >> 5);
        uint64_t v208 = *v205;
        uint64_t v207 = v205[1];
        *(_DWORD *)v450 = 136382979;
        *(void *)&v450[4] = v202;
        *(_WORD *)&v450[12] = 1025;
        *(_DWORD *)&v450[14] = v128;
        *(_WORD *)&v450[18] = 1025;
        *(_DWORD *)&v450[20] = a3;
        *(_WORD *)&v450[24] = 2049;
        *(void *)&v450[26] = v189;
        *(_WORD *)&v450[34] = 2049;
        *(void *)&v450[36] = v203;
        *(_WORD *)&v450[44] = 2049;
        *(void *)&v450[46] = v208;
        *(_WORD *)&v450[54] = 2049;
        *(void *)&v450[56] = v206;
        *(_WORD *)&v450[64] = 2049;
        *(void *)&v450[66] = v207;
        *(_WORD *)&v450[74] = 1025;
        *(_DWORD *)&v450[76] = v204;
        *(_WORD *)&v450[80] = 1025;
        *(_DWORD *)&v450[82] = v190;
        LODWORD(v406) = 86;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v201,  2LL,  "FenceCal: group result, %{private}30s, totalChosenAps, %{private}4d, apsBudget, %{private}4d, index, %{private }4zu , %{private}4zu, aps, %{private}4zu, %{private}4zu, score, %{private}.2lf, index, %{private}4d, dbgCounter, %{private}4d",  v450,  *(void *)&v406);
        uint64_t v210 = v209;
      }

      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenceCal culator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWifiServic e_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLocation> &, s td::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v210);
      if (v210 != buf) {
        free(v210);
      }
LABEL_324:
      ++v189;
      v187 += 504LL;
      if (v187 == v188)
      {
        uint64_t v216 = *v411;
        uint64_t v424 = v411[1];
        if (*v411 != v424)
        {
          do
          {
            if ((*(_DWORD *)(v216 + 392) & 0x80000000) != 0)
            {
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101861E70);
              }
              std::string::size_type v235 = (os_log_s *)qword_101934878;
              if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
              {
                sub_100923668(v216 + 32, (std::stringbuf::string_type *)buf);
                v236 = buf;
                if (buf[23] < 0) {
                  v236 = *(_BYTE **)buf;
                }
                unint64_t v237 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v216 + 352) - *(void *)(v216 + 344)) >> 5);
                *(_DWORD *)v450 = 136380931;
                *(void *)&v450[4] = v236;
                *(_WORD *)&v450[12] = 2050;
                *(void *)&v450[14] = v237;
                _os_log_impl( (void *)&_mh_execute_header,  v235,  OS_LOG_TYPE_DEFAULT,  "#Warning FenceCal: no score for, %{private}s, fChosenAps, %{public}4zu",  v450,  0x16u);
                if ((buf[23] & 0x80000000) != 0) {
                  operator delete(*(void **)buf);
                }
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934870 != -1) {
                  dispatch_once(&qword_101934870, &stru_101861E70);
                }
                uint64_t v238 = qword_101934878;
                sub_100923668(v216 + 32, (std::stringbuf::string_type *)v450);
                int v239 = v450;
                if (v450[23] < 0) {
                  int v239 = *(_BYTE **)v450;
                }
                unint64_t v240 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v216 + 352) - *(void *)(v216 + 344)) >> 5);
                LODWORD(v448.__r_.__value_.__l.__data_) = 136380931;
                *(std::string::size_type *)((char *)v448.__r_.__value_.__r.__words + 4) = (std::string::size_type)v239;
                WORD2(v448.__r_.__value_.__r.__words[1]) = 2050;
                *(std::string::size_type *)((char *)&v448.__r_.__value_.__r.__words[1] + 6) = v240;
                LODWORD(v406) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v238,  0LL,  "#Warning FenceCal: no score for, %{private}s, fChosenAps, %{public}4zu",  &v448,  *(void *)&v406);
                v242 = v241;
                if ((v450[23] & 0x80000000) != 0) {
                  operator delete(*(void **)v450);
                }
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWi fiFenceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::o ptional<CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacA ddress, CLWifiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v242);
                if (v242 != buf) {
                  free(v242);
                }
              }
            }

            else
            {
              v217 = sub_10094D8B0(v216);
              if (byte_10198E4A8) {
                BOOL v218 = byte_1019A1880 == 0;
              }
              else {
                BOOL v218 = 1;
              }
              if (!v218)
              {
                if (qword_101934870 != -1) {
                  dispatch_once(&qword_101934870, &stru_101861E70);
                }
                unint64_t v219 = (os_log_s *)qword_101934878;
                if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
                {
                  v220 = (void *)(v216 + 56);
                  int v221 = *(_DWORD *)(v216 + 392);
                  unint64_t v222 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v216 + 352) - *(void *)(v216 + 344)) >> 5);
                  uint64_t v223 = *v217;
                  uint64_t v224 = v217[1];
                  *(_DWORD *)std::stringbuf::string_type buf = v412;
                  *(void *)&uint8_t buf[4] = v220;
                  *(_WORD *)&_BYTE buf[12] = 1024;
                  *(_DWORD *)&buf[14] = v221;
                  *(_WORD *)&buf[18] = 2048;
                  *(void *)&_BYTE buf[20] = v223;
                  *(_WORD *)&_BYTE buf[28] = 2048;
                  *(void *)&buf[30] = v222;
                  *(_WORD *)&buf[38] = 2048;
                  *(void *)&buf[40] = v224;
                  _os_log_impl( (void *)&_mh_execute_header,  v219,  OS_LOG_TYPE_DEBUG,  "FenceCal: chosenScore, %-16s, fChosenScoreIndex, %4d, numOfAps, %4zu, %4zu, score, %.2lf",  buf,  0x30u);
                }

                if (sub_1002921D0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_101934870 != -1) {
                    dispatch_once(&qword_101934870, &stru_101861E70);
                  }
                  std::string::size_type v243 = (void *)(v216 + 56);
                  int v244 = *(_DWORD *)(v216 + 392);
                  unint64_t v245 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v216 + 352) - *(void *)(v216 + 344)) >> 5);
                  uint64_t v246 = *v217;
                  uint64_t v247 = v217[1];
                  *(_DWORD *)v450 = v412;
                  *(void *)&v450[4] = v243;
                  *(_WORD *)&v450[12] = 1024;
                  *(_DWORD *)&v450[14] = v244;
                  *(_WORD *)&v450[18] = 2048;
                  *(void *)&v450[20] = v246;
                  *(_WORD *)&v450[28] = 2048;
                  *(void *)&v450[30] = v245;
                  *(_WORD *)&v450[38] = 2048;
                  *(void *)&v450[40] = v247;
                  _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: chosenScore, %-16s, fChosenScoreIndex, %4d, numOfAps, %4zu, %4zu, score, %.2lf",  v450,  48,  (size_t)v407,  *((size_t *)&v407 + 1),  *(double *)&v408);
                  uint64_t v249 = (char *)v248;
                  sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CL WifiFenceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, st d::optional<CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map< CLMacAddress, CLWifiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v248);
                  if (v249 != buf) {
                    free(v249);
                  }
                }
              }

              if (*v217)
              {
                unint64_t v225 = 0LL;
                uint64_t v226 = *(void *)(v216 + 344);
                v227 = (unsigned __int8 *)(v216 + 288);
                do
                {
                  uint64_t v228 = *(void *)(v216 + 352);
                  if (v226 == v228) {
                    break;
                  }
                  if (0xAAAAAAAAAAAAAAABLL * ((v228 - *(void *)(v216 + 344)) >> 5) >= 6) {
                    v229 = &v438;
                  }
                  else {
                    v229 = (uint64_t **)&v436;
                  }
                  std::string::size_type v230 = v216 + 56;
                  if (sub_1009487E0( v226,  *(_BYTE *)(v216 + 476) != 0,  (uint64_t)a7,  (uint64_t)a8,  a3,  (uint64_t)v229,  v416,  v230))
                  {
                    int v231 = *(unsigned __int8 **)(v216 + 280);
                    if (v231 != v227)
                    {
                      do
                      {
                        uint64_t v232 = sub_100700B84((uint64_t)a6, v231 + 32);
                        if (a6 + 1 == (uint64_t **)v232)
                        {
                          *(void *)std::stringbuf::string_type buf = v231 + 32;
                          *((_DWORD *)sub_100950C6C(a6, v231 + 32, (uint64_t)&unk_1012CF090, (__int128 **)buf) + 70) = 1;
                        }

                        else
                        {
                          ++*(_DWORD *)(v232 + 280);
                        }

                        v233 = (unsigned __int8 *)*((void *)v231 + 1);
                        if (v233)
                        {
                          do
                          {
                            v234 = v233;
                            v233 = *(unsigned __int8 **)v233;
                          }

                          while (v233);
                        }

                        else
                        {
                          do
                          {
                            v234 = (unsigned __int8 *)*((void *)v231 + 2);
                            BOOL v69 = *(void *)v234 == (void)v231;
                            int v231 = v234;
                          }

                          while (!v69);
                        }

                        int v231 = v234;
                      }

                      while (v234 != v227);
                    }
                  }

                  v226 += 96LL;
                  ++v225;
                }

                while (v225 < *v217);
              }
            }

            v216 += 504LL;
          }

          while (v216 != v424);
        }

        break;
      }
    }
  }

  *(void *)&__int128 v61 = 134349313LL;
  __int128 v409 = v61;
  do
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    uint64_t v250 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v251 = a8[2] + a7[2];
      *(_DWORD *)std::stringbuf::string_type buf = v409;
      *(void *)&uint8_t buf[4] = v251;
      *(_WORD *)&_BYTE buf[12] = 1025;
      *(_DWORD *)&buf[14] = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v250,  OS_LOG_TYPE_DEBUG,  "FenceCal: topping, %{public}zu, apsBudget, %{private}u",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      uint64_t v313 = a8[2] + a7[2];
      *(_DWORD *)v450 = v409;
      *(void *)&v450[4] = v313;
      *(_WORD *)&v450[12] = 1025;
      *(_DWORD *)&v450[14] = a3;
      LODWORD(v406) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: topping, %{public}zu, apsBudget, %{private}u",  v450,  *(void *)&v406);
      v315 = (char *)v314;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenceCal culator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWifiServic e_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLocation> &, s td::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v314);
      if (v315 != buf) {
        free(v315);
      }
    }

    uint64_t v253 = *v411;
    uint64_t v252 = v411[1];
    if (*v411 == v252)
    {
      char v254 = 0;
    }

    else
    {
      char v254 = 0;
      uint64_t v415 = v411[1];
      do
      {
        int v255 = *(_DWORD *)(v253 + 392);
        if ((v255 & 0x80000000) == 0)
        {
          signed int v256 = v255 + 1;
          if (v256 < (int)(-858993459 * ((*(void *)(v253 + 376) - *(void *)(v253 + 368)) >> 3)))
          {
            *(_DWORD *)(v253 + 392) = v256;
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101861E70);
            }
            double v257 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
            {
              else {
                size_t v258 = *(void *)(v253 + 40);
              }
              sub_1000392EC((uint64_t)v450, v258 + 1);
              if (v450[23] >= 0) {
                v259 = v450;
              }
              else {
                v259 = *(_BYTE **)v450;
              }
              if (v258)
              {
                else {
                  v260 = *(const void **)(v253 + 32);
                }
                memmove(v259, v260, v258);
              }

              *(_WORD *)&v259[v258] = 47;
              int v261 = *(char *)(v253 + 79);
              if (v261 >= 0) {
                v262 = (const std::string::value_type *)(v253 + 56);
              }
              else {
                v262 = *(const std::string::value_type **)(v253 + 56);
              }
              if (v261 >= 0) {
                std::string::size_type v263 = *(unsigned __int8 *)(v253 + 79);
              }
              else {
                std::string::size_type v263 = *(void *)(v253 + 64);
              }
              int v264 = std::string::append((std::string *)v450, v262, v263);
              __int128 v265 = *(_OWORD *)&v264->__r_.__value_.__l.__data_;
              v448.__r_.__value_.__l.__cap_ = v264->__r_.__value_.__l.__cap_;
              *(_OWORD *)&v448.__r_.__value_.__l.__data_ = v265;
              v264->__r_.__value_.__l.__size_ = 0LL;
              v264->__r_.__value_.__l.__cap_ = 0LL;
              v264->__r_.__value_.__r.__words[0] = 0LL;
              if ((v450[23] & 0x80000000) != 0) {
                operator delete(*(void **)v450);
              }
              int v266 = &v448;
              if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                int v266 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
              }
              int v267 = *(_DWORD *)(v253 + 392);
              unint64_t v268 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(v253 + 376) - *(void *)(v253 + 368)) >> 3);
              *(_DWORD *)std::stringbuf::string_type buf = 136381187;
              *(void *)&uint8_t buf[4] = v266;
              *(_WORD *)&_BYTE buf[12] = 1025;
              *(_DWORD *)&buf[14] = v267;
              *(_WORD *)&buf[18] = 2049;
              *(void *)&_BYTE buf[20] = v268;
              _os_log_impl( (void *)&_mh_execute_header,  v257,  OS_LOG_TYPE_DEBUG,  "FenceCal: Topping, %{private}s, fChosenScoreIndex, %{private}d, total, %{private}zu",  buf,  0x1Cu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101861E70);
              }
              uint64_t v293 = qword_101934878;
              else {
                size_t v294 = *(void *)(v253 + 40);
              }
              sub_1000392EC((uint64_t)&v448, v294 + 1);
              if ((v448.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                v295 = &v448;
              }
              else {
                v295 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
              }
              if (v294)
              {
                else {
                  v296 = *(const void **)(v253 + 32);
                }
                memmove(v295, v296, v294);
              }

              *(_WORD *)((char *)&v295->__r_.__value_.__l.__data_ + v294) = 47;
              int v297 = *(char *)(v253 + 79);
              if (v297 >= 0) {
                v298 = (const std::string::value_type *)(v253 + 56);
              }
              else {
                v298 = *(const std::string::value_type **)(v253 + 56);
              }
              if (v297 >= 0) {
                std::string::size_type v299 = *(unsigned __int8 *)(v253 + 79);
              }
              else {
                std::string::size_type v299 = *(void *)(v253 + 64);
              }
              v300 = std::string::append(&v448, v298, v299);
              __int128 v301 = *(_OWORD *)&v300->__r_.__value_.__l.__data_;
              int64_t cap = v300->__r_.__value_.__l.__cap_;
              *(_OWORD *)v431 = v301;
              v300->__r_.__value_.__l.__size_ = 0LL;
              v300->__r_.__value_.__l.__cap_ = 0LL;
              v300->__r_.__value_.__r.__words[0] = 0LL;
              v302 = v431;
              if (cap < 0) {
                v302 = (void **)v431[0];
              }
              int v303 = *(_DWORD *)(v253 + 392);
              unint64_t v304 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(v253 + 376) - *(void *)(v253 + 368)) >> 3);
              *(_DWORD *)v450 = 136381187;
              *(void *)&v450[4] = v302;
              *(_WORD *)&v450[12] = 1025;
              *(_DWORD *)&v450[14] = v303;
              *(_WORD *)&v450[18] = 2049;
              *(void *)&v450[20] = v304;
              LODWORD(v406) = 28;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v293,  2LL,  "FenceCal: Topping, %{private}s, fChosenScoreIndex, %{private}d, total, %{private}zu",  v450,  *(void *)&v406);
              v306 = v305;
              if (SHIBYTE(cap) < 0) {
                operator delete(v431[0]);
              }
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifi FenceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optio nal<CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress , CLWifiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v306);
              if (v306 != buf) {
                free(v306);
              }
            }

            uint64_t v269 = *(int *)(v253 + 392);
            uint64_t v270 = *(void *)(v253 + 368);
            else {
              size_t v271 = *(void *)(v253 + 40);
            }
            sub_1000392EC((uint64_t)buf, v271 + 1);
            if (buf[23] >= 0) {
              std::string v272 = buf;
            }
            else {
              std::string v272 = *(_BYTE **)buf;
            }
            if (v271)
            {
              else {
                std::stringbuf::string_type v273 = *(const void **)(v253 + 32);
              }
              memmove(v272, v273, v271);
            }

            *(_WORD *)&v272[v271] = 47;
            int v274 = *(char *)(v253 + 79);
            if (v274 >= 0) {
              v275 = (const std::string::value_type *)(v253 + 56);
            }
            else {
              v275 = *(const std::string::value_type **)(v253 + 56);
            }
            if (v274 >= 0) {
              std::string::size_type v276 = *(unsigned __int8 *)(v253 + 79);
            }
            else {
              std::string::size_type v276 = *(void *)(v253 + 64);
            }
            std::stringbuf::string_type v277 = std::string::append((std::string *)buf, v275, v276);
            v420 = (void *)v277->__r_.__value_.__r.__words[0];
            int size = (char)v277->__r_.__value_.__s.__size_;
            v277->__r_.__value_.__r.__words[0] = 0LL;
            v277->__r_.__value_.__l.__size_ = 0LL;
            v277->__r_.__value_.__l.__cap_ = 0LL;
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
            int v425 = size;
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101861E70);
            }
            unint64_t v279 = (unint64_t *)(v270 + 40LL * (int)v269);
            v280 = (unint64_t *)(v270 + 40LL * (int)(v269 - (v269 > 0)));
            uint64_t v281 = (os_log_s *)qword_101934878;
            if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
            {
              unint64_t v282 = *v280;
              unint64_t v283 = *v279;
              *(_DWORD *)std::stringbuf::string_type buf = 134283777;
              *(void *)&uint8_t buf[4] = v282;
              *(_WORD *)&_BYTE buf[12] = 2049;
              *(void *)&buf[14] = v283;
              _os_log_impl( (void *)&_mh_execute_header,  v281,  OS_LOG_TYPE_DEBUG,  "FenceCal: topping, from APs, %{private}zu, to APs, %{private}zu",  buf,  0x16u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934870 != -1) {
                dispatch_once(&qword_101934870, &stru_101861E70);
              }
              unint64_t v307 = *v280;
              unint64_t v308 = *v279;
              *(_DWORD *)v450 = 134283777;
              *(void *)&v450[4] = v307;
              *(_WORD *)&v450[12] = 2049;
              *(void *)&v450[14] = v308;
              LODWORD(v406) = 22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: topping, from APs, %{private}zu, to APs, %{private}zu",  v450,  *(void *)&v406);
              v310 = (char *)v309;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifi FenceCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optio nal<CLWifiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress , CLWifiAPLocation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v309);
              if (v310 != buf) {
                free(v310);
              }
            }

            unint64_t v284 = *v280;
            if (v284 < *v279)
            {
              uint64_t v285 = *(void *)(v253 + 344) + 96 * v284;
              v286 = (unsigned __int8 *)(v253 + 288);
              do
              {
                if (v285 == *(void *)(v253 + 352)) {
                  break;
                }
                std::string::size_type v287 = v253 + 56;
                if (sub_1009487E0( v285,  *(_BYTE *)(v253 + 476) != 0,  (uint64_t)a7,  (uint64_t)a8,  a3,  (uint64_t)&v438,  v416,  v287))
                {
                  v288 = *(unsigned __int8 **)(v253 + 280);
                  if (v288 != v286)
                  {
                    do
                    {
                      uint64_t v289 = sub_100700B84((uint64_t)a6, v288 + 32);
                      if (a6 + 1 == (uint64_t **)v289)
                      {
                        *(void *)std::stringbuf::string_type buf = v288 + 32;
                        uint64_t v289 = (uint64_t)sub_100950C6C(a6, v288 + 32, (uint64_t)&unk_1012CF090, (__int128 **)buf);
                        int v290 = 1;
                      }

                      else
                      {
                        int v290 = *(_DWORD *)(v289 + 280) + 1;
                      }

                      *(_DWORD *)(v289 + 280) = v290;
                      v291 = (unsigned __int8 *)*((void *)v288 + 1);
                      if (v291)
                      {
                        do
                        {
                          v292 = v291;
                          v291 = *(unsigned __int8 **)v291;
                        }

                        while (v291);
                      }

                      else
                      {
                        do
                        {
                          v292 = (unsigned __int8 *)*((void *)v288 + 2);
                          BOOL v69 = *(void *)v292 == (void)v288;
                          v288 = v292;
                        }

                        while (!v69);
                      }

                      v288 = v292;
                    }

                    while (v292 != v286);
                  }
                }

                ++v284;
                v285 += 96LL;
              }

              while (v284 < *v279);
            }

            if (v425 < 0) {
              operator delete(v420);
            }
            char v254 = 1;
            uint64_t v252 = v415;
          }
        }

        v253 += 504LL;
      }

      while (v253 != v252);
    }

    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    v311 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v312 = a8[2] + a7[2];
      *(_DWORD *)std::stringbuf::string_type buf = 134283777;
      *(void *)&uint8_t buf[4] = v312;
      *(_WORD *)&_BYTE buf[12] = 1025;
      *(_DWORD *)&buf[14] = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v311,  OS_LOG_TYPE_DEBUG,  "FenceCal: finised topping, %{private}zu, apsBudget, %{private}u",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      uint64_t v316 = a8[2] + a7[2];
      *(_DWORD *)v450 = 134283777;
      *(void *)&v450[4] = v316;
      *(_WORD *)&v450[12] = 1025;
      *(_DWORD *)&v450[14] = a3;
      LODWORD(v406) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: finised topping, %{private}zu, apsBudget, %{private}u",  v450,  *(void *)&v406);
      v318 = (char *)v317;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenceCal culator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWifiServic e_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLocation> &, s td::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v317);
      if (v318 != buf) {
        free(v318);
      }
    }
  }

  while ((v254 & 1) != 0);
  uint64_t v319 = *v411;
  uint64_t v320 = v411[1];
  char v321 = 1;
  if (*v411 == v320)
  {
    int v360 = 1;
    int v323 = 1;
LABEL_591:
    int v361 = 1;
    goto LABEL_593;
  }

  char v322 = 1;
  int v323 = 1;
  do
  {
    if (!byte_10198E4A8) {
      goto LABEL_564;
    }
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    v324 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      else {
        size_t v325 = *(void *)(v319 + 40);
      }
      sub_1000392EC((uint64_t)v450, v325 + 1);
      if (v450[23] >= 0) {
        v326 = v450;
      }
      else {
        v326 = *(_BYTE **)v450;
      }
      if (v325)
      {
        else {
          v327 = *(const void **)(v319 + 32);
        }
        memmove(v326, v327, v325);
      }

      *(_WORD *)&v326[v325] = 47;
      int v328 = *(char *)(v319 + 79);
      if (v328 >= 0) {
        v329 = (const std::string::value_type *)(v319 + 56);
      }
      else {
        v329 = *(const std::string::value_type **)(v319 + 56);
      }
      if (v328 >= 0) {
        std::string::size_type v330 = *(unsigned __int8 *)(v319 + 79);
      }
      else {
        std::string::size_type v330 = *(void *)(v319 + 64);
      }
      v331 = std::string::append((std::string *)v450, v329, v330);
      __int128 v332 = *(_OWORD *)&v331->__r_.__value_.__l.__data_;
      v448.__r_.__value_.__l.__cap_ = v331->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v448.__r_.__value_.__l.__data_ = v332;
      v331->__r_.__value_.__l.__size_ = 0LL;
      v331->__r_.__value_.__l.__cap_ = 0LL;
      v331->__r_.__value_.__r.__words[0] = 0LL;
      if ((v450[23] & 0x80000000) != 0) {
        operator delete(*(void **)v450);
      }
      BOOL v333 = 0;
      if ((v448.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        v334 = &v448;
      }
      else {
        v334 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
      }
      int v335 = *(unsigned __int8 *)(v319 + 476);
      int v336 = *(_DWORD *)(v319 + 392);
      v338 = *(void **)(v319 + 368);
      v337 = *(void **)(v319 + 376);
      uint64_t v339 = *(void *)(v319 + 352) - *(void *)(v319 + 344);
      if (!v339) {
        goto LABEL_554;
      }
      int v340 = 0;
      if (v337 == v338) {
        goto LABEL_561;
      }
      BOOL v333 = *v338 != 0LL;
      if (!*(_BYTE *)(v319 + 476))
      {
        if (*v338) {
          BOOL v341 = v336 <= 0;
        }
        else {
          BOOL v341 = 1;
        }
        int v340 = !v341;
      }

      else
      {
LABEL_554:
        int v340 = v333;
      }

LABEL_561:
      *(_DWORD *)std::stringbuf::string_type buf = 136316930;
      *(void *)&uint8_t buf[4] = v334;
      *(_WORD *)&_BYTE buf[12] = 1024;
      *(_DWORD *)&buf[14] = v335;
      *(_WORD *)&buf[18] = 1024;
      *(_DWORD *)&_BYTE buf[20] = v336;
      *(_WORD *)&buf[24] = 2048;
      *(void *)&buf[26] = 0xAAAAAAAAAAAAAAABLL * (v339 >> 5);
      *(_WORD *)&buf[34] = 2048;
      *(void *)&_BYTE buf[36] = 0xCCCCCCCCCCCCCCCDLL * (v337 - v338);
      *(_WORD *)&buf[44] = 1024;
      *(_DWORD *)&buf[46] = v333;
      *(_WORD *)&buf[50] = 1024;
      *(_DWORD *)&buf[52] = v340;
      *(_WORD *)&buf[56] = 1024;
      *(_DWORD *)&buf[58] = HIDWORD(v410);
      _os_log_impl( (void *)&_mh_execute_header,  v324,  OS_LOG_TYPE_DEBUG,  "FenceCal: fence, %s, isExit, %d, fChosenScoreIndex, %d, fChosenAPs, %zu, fChosenAPsScores, %zu, canBeMonitored, %d, canBeMonitoredInGroup, %d, numOfExitFences, %u",  buf,  0x3Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      uint64_t v347 = qword_101934878;
      sub_10065EF44((const void **)(v319 + 32), &v448);
      BOOL v348 = 0;
      if ((v448.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        v349 = &v448;
      }
      else {
        v349 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
      }
      v351 = *(void **)(v319 + 368);
      v350 = *(void **)(v319 + 376);
      uint64_t v352 = *(void *)(v319 + 352) - *(void *)(v319 + 344);
      uint64_t v428 = v347;
      v426 = v349;
      if (v352 && v350 != v351) {
        BOOL v348 = *v351 != 0LL;
      }
      int v353 = *(unsigned __int8 *)(v319 + 476);
      int v421 = *(_DWORD *)(v319 + 392);
      unint64_t v354 = 0xAAAAAAAAAAAAAAABLL * (v352 >> 5);
      unint64_t v355 = 0xCCCCCCCCCCCCCCCDLL * (v350 - v351);
      BOOL v356 = v348;
      BOOL v357 = sub_10094DAB4(v319);
      *(_DWORD *)v450 = 136316930;
      *(void *)&v450[4] = v426;
      *(_WORD *)&v450[12] = 1024;
      *(_DWORD *)&v450[14] = v353;
      *(_WORD *)&v450[18] = 1024;
      *(_DWORD *)&v450[20] = v421;
      *(_WORD *)&v450[24] = 2048;
      *(void *)&v450[26] = v354;
      *(_WORD *)&v450[34] = 2048;
      *(void *)&v450[36] = v355;
      *(_WORD *)&v450[44] = 1024;
      *(_DWORD *)&v450[46] = v356;
      *(_WORD *)&v450[50] = 1024;
      *(_DWORD *)&v450[52] = v357;
      *(_WORD *)&v450[56] = 1024;
      *(_DWORD *)&v450[58] = HIDWORD(v410);
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v428,  2LL,  "FenceCal: fence, %s, isExit, %d, fChosenScoreIndex, %d, fChosenAPs, %zu, fChosenAPsScores, %zu, canBeMonitored, %d, canBeMonitoredInGroup, %d, numOfExitFences, %u",  v450,  62,  (_DWORD)v407,  *((size_t *)&v407 + 1),  (size_t)v409,  DWORD2(v409),  LODWORD(v410),  (_DWORD)v411);
      v359 = v358;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenceCal culator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWifiServic e_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLocation> &, s td::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v359);
      if (v359 != buf) {
        free(v359);
      }
    }

LABEL_564:
    if (*(void *)(v319 + 352) == *(void *)(v319 + 344)
      || (v342 = *(uint64_t **)(v319 + 368), *(uint64_t **)(v319 + 376) == v342))
    {
      int v323 = 0;
      BOOL v346 = 0;
      char v345 = 0;
      LOBYTE(v344) = 0;
      if (*(_BYTE *)(v319 + 476)) {
        goto LABEL_569;
      }
    }

    else
    {
      uint64_t v343 = *v342;
      BOOL v344 = *v342 != 0;
      v323 &= v344;
      if (*(_BYTE *)(v319 + 476))
      {
        char v345 = v322 & (v343 != 0);
LABEL_569:
        v321 &= v344;
        char v322 = v345;
        goto LABEL_574;
      }

      if (v343) {
        BOOL v346 = *(_DWORD *)(v319 + 392) > 0;
      }
      else {
        BOOL v346 = 0;
      }
    }

    v322 &= v346;
LABEL_574:
    v319 += 504LL;
  }

  while (v319 != v320);
  if ((v322 & 1) != 0)
  {
    int v360 = 1;
    goto LABEL_591;
  }

  int v360 = 0;
  int v361 = (HIDWORD(v410) != 0) & v321;
LABEL_593:
  unsigned int v429 = v361;
  if (byte_10198E4A8)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    v362 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v363 = 0xEFBEFBEFBEFBEFBFLL * ((v411[1] - *v411) >> 3);
      *(_DWORD *)std::stringbuf::string_type buf = 67110400;
      *(_DWORD *)&uint8_t buf[4] = v429;
      *(_WORD *)&uint8_t buf[8] = 2048;
      *(void *)&buf[10] = v363;
      *(_WORD *)&buf[18] = 1024;
      *(_DWORD *)&_BYTE buf[20] = HIDWORD(v410);
      *(_WORD *)&buf[24] = 1024;
      *(_DWORD *)&buf[26] = v323;
      *(_WORD *)&buf[30] = 1024;
      *(_DWORD *)&buf[32] = v360;
      *(_WORD *)&_BYTE buf[36] = 1024;
      *(_DWORD *)&buf[38] = v321 & 1;
      _os_log_impl( (void *)&_mh_execute_header,  v362,  OS_LOG_TYPE_DEBUG,  "FenceCal: calculateGroup, end, return val, isOK, %d, numOfFences, %zu, numOfExitFences, %d, combinedCanMonitor, %d, combinedCanMonitorGroup, %d, combinedCanMonitorExitGroup, %d",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      unint64_t v401 = 0xEFBEFBEFBEFBEFBFLL * ((v411[1] - *v411) >> 3);
      *(_DWORD *)v450 = 67110400;
      *(_DWORD *)&v450[4] = v429;
      *(_WORD *)&v450[8] = 2048;
      *(void *)&v450[10] = v401;
      *(_WORD *)&v450[18] = 1024;
      *(_DWORD *)&v450[20] = HIDWORD(v410);
      *(_WORD *)&v450[24] = 1024;
      *(_DWORD *)&v450[26] = v323;
      *(_WORD *)&v450[30] = 1024;
      *(_DWORD *)&v450[32] = v360;
      *(_WORD *)&v450[36] = 1024;
      *(_DWORD *)&v450[38] = v321 & 1;
      LODWORD(v406) = 42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "FenceCal: calculateGroup, end, return val, isOK, %d, numOfFences, %zu, numOfExitFences, %d, combinedCanMonitor, %d, combinedCanMonitorGroup, %d, combinedCanMonitorExitGroup, %d",  v450,  *(size_t *)&v406,  (_DWORD)v407,  DWORD2(v407),  (_DWORD)v409,  DWORD2(v409));
      v403 = (char *)v402;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenceCal culator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWifiServic e_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLocation> &, s td::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v402);
      if (v403 != buf) {
        free(v403);
      }
    }

    v364 = (void *)*a7;
    if ((void *)*a7 != a7 + 1)
    {
      uint64_t v365 = 0LL;
      do
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        v366 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v367 = a7[2];
          double v368 = CFAbsoluteTimeGetCurrent();
          sub_100C39CE0((uint64_t)(v364 + 5), (std::stringbuf::string_type *)v450, v368);
          if (v450[23] >= 0) {
            v369 = v450;
          }
          else {
            v369 = *(_BYTE **)v450;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 134218498;
          *(void *)&uint8_t buf[4] = v365;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&buf[14] = v367;
          *(_WORD *)&_BYTE buf[22] = 2080;
          *(void *)&buf[24] = v369;
          _os_log_impl( (void *)&_mh_execute_header,  v366,  OS_LOG_TYPE_DEBUG,  "Return entry AP, index, %2zu, %2zu, %s",  buf,  0x20u);
          if ((v450[23] & 0x80000000) != 0) {
            operator delete(*(void **)v450);
          }
          ++v365;
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101861E70);
          }
          uint64_t v372 = qword_101934878;
          uint64_t v373 = a7[2];
          double v374 = CFAbsoluteTimeGetCurrent();
          sub_100C39CE0((uint64_t)(v364 + 5), &v448, v374);
          v375 = &v448;
          if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            v375 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v450 = 134218498;
          *(void *)&v450[4] = v365;
          *(_WORD *)&v450[12] = 2048;
          *(void *)&v450[14] = v373;
          *(_WORD *)&v450[22] = 2080;
          *(void *)&v450[24] = v375;
          LODWORD(v406) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v372,  2LL,  "Return entry AP, index, %2zu, %2zu, %s",  (size_t)v450,  *(size_t *)&v406,  (const char *)v407);
          v377 = v376;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenc eCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWi fiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLo cation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v377);
          if (v377 != buf) {
            free(v377);
          }
          ++v365;
        }

        v370 = (void *)v364[1];
        if (v370)
        {
          do
          {
            v371 = v370;
            v370 = (void *)*v370;
          }

          while (v370);
        }

        else
        {
          do
          {
            v371 = (void *)v364[2];
            BOOL v69 = *v371 == (void)v364;
            v364 = v371;
          }

          while (!v69);
        }

        v364 = v371;
      }

      while (v371 != a7 + 1);
    }

    v378 = (void *)*a8;
    if ((void *)*a8 != a8 + 1)
    {
      uint64_t v379 = 0LL;
      do
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        v380 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v381 = a8[2];
          double v382 = CFAbsoluteTimeGetCurrent();
          sub_100C39CE0((uint64_t)(v378 + 5), (std::stringbuf::string_type *)v450, v382);
          if (v450[23] >= 0) {
            v383 = v450;
          }
          else {
            v383 = *(_BYTE **)v450;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 134218498;
          *(void *)&uint8_t buf[4] = v379;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&buf[14] = v381;
          *(_WORD *)&_BYTE buf[22] = 2080;
          *(void *)&buf[24] = v383;
          _os_log_impl( (void *)&_mh_execute_header,  v380,  OS_LOG_TYPE_DEBUG,  "Return exit AP, index, %2zu, %2zu, %s",  buf,  0x20u);
          if ((v450[23] & 0x80000000) != 0) {
            operator delete(*(void **)v450);
          }
          ++v379;
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101861E70);
          }
          uint64_t v386 = qword_101934878;
          uint64_t v387 = a8[2];
          double v388 = CFAbsoluteTimeGetCurrent();
          sub_100C39CE0((uint64_t)(v378 + 5), &v448, v388);
          v389 = &v448;
          if ((v448.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            v389 = (std::stringbuf::string_type *)v448.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v450 = 134218498;
          *(void *)&v450[4] = v379;
          *(_WORD *)&v450[12] = 2048;
          *(void *)&v450[14] = v387;
          *(_WORD *)&v450[22] = 2080;
          *(void *)&v450[24] = v389;
          LODWORD(v406) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v386,  2LL,  "Return exit AP, index, %2zu, %2zu, %s",  (size_t)v450,  *(size_t *)&v406,  (const char *)v407);
          v391 = v390;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiFenceCalculator::calculateGroup(CLWifiAccessPointLocationService &, std::vector<CLWifiFenc eCalculator> &, const unsigned int, const std::vector<CLWifiService_Type::AccessPoint> &, std::optional<CLWi fiService_Type::AccessPoint>, std::map<CLFenceManager_Type::Fence, int> &, std::map<CLMacAddress, CLWifiAPLo cation> &, std::map<CLMacAddress, CLWifiAPLocation> &, const CLDaemonLocation &, double)",  "%s\n",  v391);
          if (v391 != buf) {
            free(v391);
          }
          ++v379;
        }

        v384 = (void *)v378[1];
        if (v384)
        {
          do
          {
            v385 = v384;
            v384 = (void *)*v384;
          }

          while (v384);
        }

        else
        {
          do
          {
            v385 = (void *)v378[2];
            BOOL v69 = *v385 == (void)v378;
            v378 = v385;
          }

          while (!v69);
        }

        v378 = v385;
      }

      while (v385 != a8 + 1);
    }
  }

  sub_100528854((uint64_t)&v434, v435);
  sub_100008390((uint64_t)&v436, v437[0]);
  sub_100008390((uint64_t)&v438, v439[0]);
  if (__p)
  {
    v442 = (char *)__p;
    operator delete(__p);
  }

  if (v444)
  {
    v445 = v444;
    operator delete(v444);
  }

  return v429;
}

void sub_10094D604( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, char a42, uint64_t a43, uint64_t a44, char a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,uint64_t a55,void *a56,uint64_t a57)
{
  if (__p)
  {
    a54 = (uint64_t)__p;
    operator delete(__p);
  }

  if (a56)
  {
    a57 = (uint64_t)a56;
    operator delete(a56);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10094D874(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *sub_100950BC4(a1, &v4, a2);
  if (!v2) {
    sub_10000C918("map::at:  key not found");
  }
  return v2 + 120;
}

uint64_t *sub_10094D8B0(uint64_t a1)
{
  unsigned __int8 v1 = atomic_load((unsigned __int8 *)&qword_10198E4E8);
  if ((v1 & 1) == 0)
  {
    uint64_t v7 = a1;
    int v8 = __cxa_guard_acquire(&qword_10198E4E8);
    a1 = v7;
    if (v8)
    {
      qword_10198E4C0 = 0LL;
      __asm { FMOV            V0.2D, #-1.0 }

      unk_10198E4C8 = _Q0;
      unk_10198E4D8 = _Q0;
      __cxa_guard_release(&qword_10198E4E8);
      a1 = v7;
    }
  }

  unsigned int v2 = *(_DWORD *)(a1 + 392);
  if ((v2 & 0x80000000) == 0) {
    return (uint64_t *)(*(void *)(a1 + 368) + 40LL * v2);
  }
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101861E70);
  }
  uint64_t v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "dCOLLECT: no chosen score, was calculateGroup called?",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101861E70);
    }
    v14[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "dCOLLECT: no chosen score, was calculateGroup called?",  v14,  2);
    unint64_t v6 = (uint8_t *)v5;
    sub_10029211C("Generic", 1LL, 0, 0LL, "const Score &CLWifiFenceCalculator::getChosenGroupScore() const", "%s\n", v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  return &qword_10198E4C0;
}

BOOL sub_10094DAB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 344);
  uint64_t v1 = *(void *)(a1 + 352);
  if (*(_BYTE *)(a1 + 476))
  {
    if (v1 != v2)
    {
      int64x2_t v3 = *(void **)(a1 + 368);
      if (*(void **)(a1 + 376) != v3) {
        return *v3 != 0LL;
      }
    }
  }

  else if (v1 != v2)
  {
    unint64_t v5 = *(void **)(a1 + 368);
    if (*(void **)(a1 + 376) != v5)
    {
      if (*v5) {
        return *(_DWORD *)(a1 + 392) > 0;
      }
    }
  }

  return 0LL;
}

void sub_10094DB14(uint64_t a1, double **a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)&qword_1019997E0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_1019997E0))
  {
    sub_100D2D9A4((uint64_t)dbl_1019997B8);
    __cxa_guard_release(&qword_1019997E0);
  }

  unint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  if (*a2 == v6)
  {
    uint64_t v16 = (uint64_t)*a2;
  }

  else
  {
    uint64_t v20 = (uint64_t *)a2;
    do
    {
      double v7 = -1.0;
      v5[61] = v7;
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101861E70);
      }
      int v8 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        std::string::size_type v9 = *((void *)v5 + 61);
        sub_100923668((uint64_t)(v5 + 4), __p);
        uint64_t v10 = __p;
        if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
          uint64_t v10 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 134283779;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v9;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v10;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "FenceCal: fDistanceFromCurrentLocation, %{private}.2lf, %{private}s",  (uint8_t *)&buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101861E70);
        }
        uint64_t v11 = qword_101934878;
        uint64_t v12 = *((void *)v5 + 61);
        sub_100923668((uint64_t)(v5 + 4), &buf);
        p_std::stringbuf::string_type buf = &buf;
        if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
        }
        int v22 = 134283779;
        uint64_t v23 = v12;
        __int16 v24 = 2081;
        unsigned int v25 = p_buf;
        LODWORD(v19) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v11,  2LL,  "FenceCal: fDistanceFromCurrentLocation, %{private}.2lf, %{private}s",  &v22,  v19);
        unint64_t v15 = v14;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLWifiFenceCalculator::sortCalculatorGroup(const CLDaemonLocation &, std::vector<CLWifiFenceCalculator> &)",  "%s\n",  (const char *)v15);
        if (v15 != __p) {
          free(v15);
        }
      }

      v5 += 63;
    }

    while (v5 != v6);
    uint64_t v16 = *v20;
    unint64_t v5 = (double *)v20[1];
  }

  unint64_t v17 = 126 - 2 * __clz(0xEFBEFBEFBEFBEFBFLL * (((uint64_t)v5 - v16) >> 3));
  else {
    uint64_t v18 = v17;
  }
  sub_100950E48(v16, (unint64_t)v5, v18, 1);
}

void sub_10094DE28(_Unwind_Exception *a1)
{
}

float sub_10094DE48(float *a1, float *a2)
{
  float v2 = *a1;
  if (*a1 <= 0.0) {
    sub_1012544CC();
  }
  float v3 = *a2;
  float result = -1.0;
  if (*a2 <= -1.0) {
    sub_1012544F4();
  }
  if (v2 >= 0.0 && v3 >= 0.0)
  {
    if (v2 <= 30.0)
    {
      return *a2;
    }

    else if (v2 <= 570.0)
    {
      return (float)((float)((float)(v2 + -30.0) * -0.0016667) + 1.0) * v3;
    }

    else
    {
      return v3 * 0.1;
    }
  }

  return result;
}

void sub_10094DEDC(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

uint64_t **sub_10094DF08(uint64_t **result, __int128 *a2, __int128 *a3)
{
  unint64_t v5 = result;
  if (result[2])
  {
    unint64_t v6 = *result;
    double v7 = result[1];
    NSTimer *result = (uint64_t *)(result + 1);
    v7[2] = 0LL;
    result[1] = 0LL;
    result[2] = 0LL;
    if (v6[1]) {
      int v8 = (uint64_t *)v6[1];
    }
    else {
      int v8 = v6;
    }
    uint64_t v21 = result;
    int v22 = v8;
    uint64_t v23 = v8;
    if (v8)
    {
      int v22 = sub_100115560((uint64_t)v8);
      if (a2 != a3)
      {
        std::string::size_type v9 = (uint64_t *)a2;
        do
        {
          std::string::operator=((std::string *)(v8 + 4), (const std::string *)(v9 + 4));
          std::string::operator=((std::string *)(v8 + 7), (const std::string *)(v9 + 7));
          std::string::operator=((std::string *)(v8 + 10), (const std::string *)(v9 + 10));
          __int128 v10 = *(_OWORD *)(v9 + 13);
          __int128 v11 = *(_OWORD *)(v9 + 15);
          __int128 v12 = *(_OWORD *)(v9 + 17);
          *(_OWORD *)(v8 + 19) = *(_OWORD *)(v9 + 19);
          *(_OWORD *)(v8 + 17) = v12;
          *(_OWORD *)(v8 + 15) = v11;
          *(_OWORD *)(v8 + 13) = v10;
          __int128 v13 = *(_OWORD *)(v9 + 21);
          __int128 v14 = *(_OWORD *)(v9 + 23);
          __int128 v15 = *(_OWORD *)(v9 + 25);
          *(uint64_t *)((char *)v8 + 213) = *(uint64_t *)((char *)v9 + 213);
          *(_OWORD *)(v8 + 25) = v15;
          *(_OWORD *)(v8 + 23) = v14;
          *(_OWORD *)(v8 + 21) = v13;
          std::string::operator=((std::string *)(v8 + 28), (const std::string *)(v9 + 28));
          uint64_t v16 = (void *)v8[31];
          v8[31] = (uint64_t)(id)v9[31];

          if (v8 != v9) {
            sub_10009B244((char *)v8 + 256, (char *)v9[32], v9[33], (v9[33] - v9[32]) >> 4);
          }
          sub_10094E100(v5, (uint64_t)v23);
          int v8 = v22;
          uint64_t v23 = v22;
          if (v22) {
            int v22 = sub_100115560((uint64_t)v22);
          }
          unint64_t v17 = (__int128 *)v9[1];
          if (v17)
          {
            do
            {
              a2 = v17;
              unint64_t v17 = *(__int128 **)v17;
            }

            while (v17);
          }

          else
          {
            do
            {
              a2 = (__int128 *)v9[2];
              BOOL v18 = *(void *)a2 == (void)v9;
              std::string::size_type v9 = (uint64_t *)a2;
            }

            while (!v18);
          }

          if (!v8) {
            break;
          }
          std::string::size_type v9 = (uint64_t *)a2;
        }

        while (a2 != a3);
      }
    }

    float result = (uint64_t **)sub_10094E184((uint64_t)&v21);
  }

  if (a2 != a3)
  {
    do
    {
      float result = (uint64_t **)sub_10094E1D8((uint64_t)v5, a2 + 2);
      uint64_t v19 = (__int128 *)*((void *)a2 + 1);
      if (v19)
      {
        do
        {
          uint64_t v20 = v19;
          uint64_t v19 = *(__int128 **)v19;
        }

        while (v19);
      }

      else
      {
        do
        {
          uint64_t v20 = (__int128 *)*((void *)a2 + 2);
          BOOL v18 = *(void *)v20 == (void)a2;
          a2 = v20;
        }

        while (!v18);
      }

      a2 = v20;
    }

    while (v20 != a3);
  }

  return result;
}

void sub_10094E0EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10094E100(uint64_t **a1, uint64_t a2)
{
  unint64_t v5 = a1 + 1;
  unsigned __int8 v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        unint64_t v5 = (uint64_t **)v4;
        unsigned __int8 v4 = *v5;
        unint64_t v6 = v5;
        if (!*v5) {
          goto LABEL_8;
        }
      }

      unsigned __int8 v4 = v5[1];
    }

    while (v4);
    unint64_t v6 = v5 + 1;
  }

  else
  {
    unint64_t v6 = a1 + 1;
  }

uint64_t sub_10094E184(uint64_t a1)
{
  float v2 = *(void **)(a1 + 8);
  if (v2)
  {
    float v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        float v2 = v3;
        float v3 = (void *)v3[2];
      }

      while (v3);
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v2;
    }

    sub_1007005F0(*(void *)a1, v2);
  }

  return a1;
}

uint64_t *sub_10094E1D8(uint64_t a1, __int128 *a2)
{
  unsigned __int8 v4 = (uint64_t **)(a1 + 8);
  float v3 = *(uint64_t **)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = (unsigned __int8 *)(v9[0] + 4);
    do
    {
      while (1)
      {
        unsigned __int8 v4 = (uint64_t **)v3;
        float v3 = *v4;
        unint64_t v6 = v4;
        if (!*v4) {
          goto LABEL_9;
        }
      }

      float v3 = v4[1];
    }

    while (v3);
    unint64_t v6 = v4 + 1;
  }

  else
  {
    unint64_t v6 = (uint64_t **)(a1 + 8);
  }

void sub_10094E280(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10094E298(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_10094E2C4(uint64_t a1, double *a2, uint64_t a3, char a4)
{
LABEL_1:
  int v8 = a2 - 12;
  uint64_t v303 = (uint64_t)(a2 - 36);
  uint64_t v304 = (uint64_t)(a2 - 24);
  unint64_t v9 = a1;
  uint64_t v306 = (uint64_t)a2;
  while (2)
  {
    a1 = v9;
    uint64_t v10 = (uint64_t)a2 - v9;
    uint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)((uint64_t)a2 - v9) >> 5);
    switch(v11)
    {
      case 0LL:
      case 1LL:
        return;
      case 2LL:
        float v150 = *(a2 - 8);
        *(float *)&__int128 v315 = v150;
        *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC((uint64_t)v8);
        float v151 = sub_10094DE48((float *)&v315, (float *)&v309);
        float v152 = *(double *)(a1 + 32);
        *(float *)&__int128 v315 = v152;
        *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(a1);
        float v153 = sub_10094DE48((float *)&v315, (float *)&v309);
        if (v151 > 0.0 && v151 > v153)
        {
          __int128 v154 = *(_OWORD *)(a1 + 16);
          __int128 v315 = *(_OWORD *)a1;
          __int128 v316 = v154;
          __int128 v155 = *(_OWORD *)(a1 + 32);
          __int128 v156 = *(_OWORD *)(a1 + 48);
          __int128 v157 = *(_OWORD *)(a1 + 80);
          __int128 v319 = *(_OWORD *)(a1 + 64);
          __int128 v320 = v157;
          __int128 v317 = v155;
          __int128 v318 = v156;
          __int128 v158 = *((_OWORD *)v8 + 5);
          __int128 v160 = *((_OWORD *)v8 + 2);
          __int128 v159 = *((_OWORD *)v8 + 3);
          *(_OWORD *)(a1 + 64) = *((_OWORD *)v8 + 4);
          *(_OWORD *)(a1 + 80) = v158;
          *(_OWORD *)(a1 + 32) = v160;
          *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v159;
          __int128 v161 = *((_OWORD *)v8 + 1);
          *(_OWORD *)a1 = *(_OWORD *)v8;
          *(_OWORD *)(a1 + 16) = v161;
          __int128 v162 = v316;
          *(_OWORD *)int v8 = v315;
          *((_OWORD *)v8 + 1) = v162;
          __int128 v163 = v317;
          __int128 v164 = v318;
          __int128 v165 = v320;
          *((_OWORD *)v8 + 4) = v319;
          *((_OWORD *)v8 + 5) = v165;
          *((_OWORD *)v8 + 2) = v163;
          *((_OWORD *)v8 + 3) = v164;
        }

        return;
      case 3LL:
        sub_10094F748(a1, a1 + 96, (uint64_t)v8);
        return;
      case 4LL:
        sub_10094FDE0(a1, a1 + 96, a1 + 192, (uint64_t)v8);
        return;
      case 5LL:
        sub_10094F44C(a1, a1 + 96, a1 + 192, a1 + 288, (uint64_t)v8);
        return;
      default:
        if (v10 <= 2303)
        {
          if ((a4 & 1) != 0)
          {
            if ((double *)a1 != a2)
            {
              uint64_t v166 = a1 + 96;
              if ((double *)(a1 + 96) != a2)
              {
                uint64_t v167 = 0LL;
                int v168 = (__int128 *)a1;
                do
                {
                  uint64_t v169 = (uint64_t)v168;
                  int v168 = (__int128 *)v166;
                  float v170 = *(double *)(v169 + 128);
                  *(float *)&__int128 v315 = v170;
                  *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(v166);
                  float v171 = sub_10094DE48((float *)&v315, (float *)&v309);
                  float v172 = *(double *)(v169 + 32);
                  *(float *)&__int128 v315 = v172;
                  *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(v169);
                  float v173 = sub_10094DE48((float *)&v315, (float *)&v309);
                  if (v171 > 0.0 && v171 > v173)
                  {
                    __int128 v175 = v168[1];
                    __int128 v315 = *v168;
                    __int128 v316 = v175;
                    __int128 v176 = v168[2];
                    __int128 v177 = v168[3];
                    __int128 v178 = v168[5];
                    __int128 v319 = v168[4];
                    __int128 v320 = v178;
                    __int128 v317 = v176;
                    __int128 v318 = v177;
                    uint64_t v179 = v167;
                    while (1)
                    {
                      int v180 = (double *)(a1 + v179);
                      __int128 v181 = *(_OWORD *)(a1 + v179 + 48);
                      *((_OWORD *)v180 + _Block_object_dispose((const void *)(v1 - 224), 8) = *(_OWORD *)(a1 + v179 + 32);
                      *((_OWORD *)v180 + 9) = v181;
                      __int128 v182 = *(_OWORD *)(a1 + v179 + 80);
                      *((_OWORD *)v180 + 10) = *(_OWORD *)(a1 + v179 + 64);
                      *((_OWORD *)v180 + 11) = v182;
                      __int128 v183 = *(_OWORD *)(a1 + v179 + 16);
                      *((_OWORD *)v180 + 6) = *(_OWORD *)(a1 + v179);
                      *((_OWORD *)v180 + 7) = v183;
                      if (!v179) {
                        break;
                      }
                      float v184 = *(double *)&v317;
                      *(float *)&__int128 v309 = v184;
                      v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v315);
                      float v185 = sub_10094DE48((float *)&v309, v321);
                      float v186 = *(v180 - 8);
                      *(float *)&__int128 v309 = v186;
                      v321[0] = (float)(int)sub_100C3A4FC((uint64_t)(v180 - 12));
                      float v187 = sub_10094DE48((float *)&v309, v321);
                      v179 -= 96LL;
                      if (v185 <= 0.0 || v185 <= v187)
                      {
                        uint64_t v188 = (_OWORD *)(a1 + v179 + 96);
                        goto LABEL_114;
                      }
                    }

                    uint64_t v188 = (_OWORD *)a1;
LABEL_114:
                    __int128 v189 = v316;
                    *uint64_t v188 = v315;
                    v188[1] = v189;
                    __int128 v190 = v317;
                    __int128 v191 = v318;
                    __int128 v192 = v320;
                    v188[4] = v319;
                    v188[5] = v192;
                    v188[2] = v190;
                    v188[3] = v191;
                    a2 = (double *)v306;
                  }

                  uint64_t v166 = (uint64_t)(v168 + 6);
                  v167 += 96LL;
                }

                while (v168 + 6 != (__int128 *)a2);
              }
            }
          }

          else if ((double *)a1 != a2)
          {
            uint64_t v280 = a1 + 96;
            if ((double *)(a1 + 96) != a2)
            {
              uint64_t v281 = a1 - 96;
              do
              {
                uint64_t v282 = a1;
                a1 = v280;
                float v283 = *(double *)(v282 + 128);
                *(float *)&__int128 v315 = v283;
                *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(v280);
                float v284 = sub_10094DE48((float *)&v315, (float *)&v309);
                float v285 = *(double *)(v282 + 32);
                *(float *)&__int128 v315 = v285;
                *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(v282);
                float v286 = sub_10094DE48((float *)&v315, (float *)&v309);
                if (v284 > 0.0 && v284 > v286)
                {
                  __int128 v288 = *(_OWORD *)(a1 + 16);
                  __int128 v315 = *(_OWORD *)a1;
                  __int128 v316 = v288;
                  __int128 v289 = *(_OWORD *)(a1 + 32);
                  __int128 v290 = *(_OWORD *)(a1 + 48);
                  __int128 v291 = *(_OWORD *)(a1 + 80);
                  __int128 v319 = *(_OWORD *)(a1 + 64);
                  __int128 v320 = v291;
                  __int128 v317 = v289;
                  __int128 v318 = v290;
                  uint64_t v292 = v281;
                  do
                  {
                    __int128 v293 = *(_OWORD *)(v292 + 176);
                    *(_OWORD *)(v292 + 256) = *(_OWORD *)(v292 + 160);
                    *(_OWORD *)(v292 + 272) = v293;
                    __int128 v294 = *(_OWORD *)(v292 + 144);
                    *(_OWORD *)(v292 + 224) = *(_OWORD *)(v292 + 128);
                    *(_OWORD *)(v292 + 240) = v294;
                    __int128 v295 = *(_OWORD *)(v292 + 112);
                    *(_OWORD *)(v292 + 192) = *(_OWORD *)(v292 + 96);
                    *(_OWORD *)(v292 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = v295;
                    *(float *)&__int128 v294 = *(double *)&v317;
                    LODWORD(v309) = v294;
                    v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v315);
                    float v296 = sub_10094DE48((float *)&v309, v321);
                    float v297 = *(double *)(v292 + 32);
                    *(float *)&__int128 v309 = v297;
                    v321[0] = (float)(int)sub_100C3A4FC(v292);
                    float v298 = sub_10094DE48((float *)&v309, v321);
                    v292 -= 96LL;
                  }

                  while (v296 > 0.0 && v296 > v298);
                  __int128 v299 = v316;
                  *(_OWORD *)(v292 + 192) = v315;
                  *(_OWORD *)(v292 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = v299;
                  __int128 v300 = v317;
                  __int128 v301 = v318;
                  __int128 v302 = v320;
                  *(_OWORD *)(v292 + 256) = v319;
                  *(_OWORD *)(v292 + 272) = v302;
                  *(_OWORD *)(v292 + 224) = v300;
                  *(_OWORD *)(v292 + 240) = v301;
                }

                uint64_t v280 = a1 + 96;
                v281 += 96LL;
              }

              while ((double *)(a1 + 96) != a2);
            }
          }

          return;
        }

        if (!a3)
        {
          if ((double *)a1 != a2)
          {
            int64_t v193 = (unint64_t)(v11 - 2) >> 1;
            int64_t v305 = v193;
            do
            {
              int64_t v194 = v193;
              if (v305 >= v193)
              {
                uint64_t v195 = (2 * v193) | 1;
                uint64_t v196 = a1 + 96 * v195;
                if (2 * v193 + 2 < v11)
                {
                  float v197 = *(double *)(a1 + 96 * v195 + 32);
                  *(float *)&__int128 v315 = v197;
                  *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(a1 + 96 * v195);
                  float v198 = sub_10094DE48((float *)&v315, (float *)&v309);
                  float v199 = *(double *)(v196 + 128);
                  *(float *)&__int128 v315 = v199;
                  *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(v196 + 96);
                  if (((v198 > 0.0) & (v198 > sub_10094DE48((float *)&v315, (float *)&v309))) != 0)
                  {
                    v196 += 96LL;
                    uint64_t v195 = 2 * v194 + 2;
                  }
                }

                uint64_t v200 = a1 + 96 * v194;
                float v201 = *(double *)(v196 + 32);
                *(float *)&__int128 v315 = v201;
                *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(v196);
                float v202 = sub_10094DE48((float *)&v315, (float *)&v309);
                float v203 = *(double *)(v200 + 32);
                *(float *)&__int128 v315 = v203;
                *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(v200);
                float v204 = sub_10094DE48((float *)&v315, (float *)&v309);
                if (v202 <= 0.0 || v202 <= v204)
                {
                  __int128 v205 = *(_OWORD *)(v200 + 16);
                  __int128 v315 = *(_OWORD *)v200;
                  __int128 v316 = v205;
                  __int128 v206 = *(_OWORD *)(v200 + 32);
                  __int128 v207 = *(_OWORD *)(v200 + 48);
                  __int128 v208 = *(_OWORD *)(v200 + 80);
                  __int128 v319 = *(_OWORD *)(v200 + 64);
                  __int128 v320 = v208;
                  __int128 v317 = v206;
                  __int128 v318 = v207;
                  while (1)
                  {
                    v209 = (_OWORD *)v196;
                    __int128 v210 = *(_OWORD *)(v196 + 16);
                    *(_OWORD *)uint64_t v200 = *(_OWORD *)v196;
                    *(_OWORD *)(v200 + 16) = v210;
                    __int128 v211 = *(_OWORD *)(v196 + 32);
                    __int128 v212 = *(_OWORD *)(v196 + 48);
                    __int128 v213 = *(_OWORD *)(v196 + 80);
                    *(_OWORD *)(v200 + 64) = *(_OWORD *)(v196 + 64);
                    *(_OWORD *)(v200 + 80) = v213;
                    *(_OWORD *)(v200 + 32) = v211;
                    *(_OWORD *)(v200 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v212;
                    if (v305 < v195) {
                      break;
                    }
                    uint64_t v214 = (2 * v195) | 1;
                    uint64_t v196 = a1 + 96 * v214;
                    uint64_t v195 = 2 * v195 + 2;
                    if (v195 >= v11)
                    {
                      uint64_t v195 = v214;
                    }

                    else
                    {
                      float v215 = *(double *)(a1 + 96 * v214 + 32);
                      *(float *)&__int128 v309 = v215;
                      v321[0] = (float)(int)sub_100C3A4FC(a1 + 96 * v214);
                      float v216 = sub_10094DE48((float *)&v309, v321);
                      float v217 = *(double *)(v196 + 128);
                      *(float *)&__int128 v309 = v217;
                      v321[0] = (float)(int)sub_100C3A4FC(v196 + 96);
                      else {
                        uint64_t v195 = v214;
                      }
                    }

                    float v218 = *(double *)(v196 + 32);
                    *(float *)&__int128 v309 = v218;
                    v321[0] = (float)(int)sub_100C3A4FC(v196);
                    float v219 = sub_10094DE48((float *)&v309, v321);
                    float v220 = *(double *)&v317;
                    *(float *)&__int128 v309 = v220;
                    v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v315);
                    float v221 = sub_10094DE48((float *)&v309, v321);
                    uint64_t v200 = (uint64_t)v209;
                    if (v219 > 0.0)
                    {
                      uint64_t v200 = (uint64_t)v209;
                      if (v219 > v221) {
                        break;
                      }
                    }
                  }

                  __int128 v222 = v316;
                  _OWORD *v209 = v315;
                  v209[1] = v222;
                  __int128 v223 = v317;
                  __int128 v224 = v318;
                  __int128 v225 = v320;
                  v209[4] = v319;
                  v209[5] = v225;
                  v209[2] = v223;
                  v209[3] = v224;
                }
              }

              int64_t v193 = v194 - 1;
            }

            while (v194);
            int64_t v226 = v10 / 0x60uLL;
            v227 = (_OWORD *)v306;
            do
            {
              unint64_t v307 = v227;
              uint64_t v228 = 0LL;
              __int128 v229 = *(_OWORD *)(a1 + 16);
              __int128 v309 = *(_OWORD *)a1;
              __int128 v310 = v229;
              __int128 v230 = *(_OWORD *)(a1 + 32);
              __int128 v231 = *(_OWORD *)(a1 + 48);
              __int128 v232 = *(_OWORD *)(a1 + 80);
              __int128 v313 = *(_OWORD *)(a1 + 64);
              __int128 v314 = v232;
              __int128 v311 = v230;
              __int128 v312 = v231;
              v233 = (_OWORD *)a1;
              do
              {
                uint64_t v234 = (uint64_t)&v233[6 * v228 + 6];
                uint64_t v235 = (2 * v228) | 1;
                uint64_t v236 = 2 * v228 + 2;
                if (v236 < v226)
                {
                  float v237 = *(double *)&v233[6 * v228 + 8];
                  *(float *)&__int128 v315 = v237;
                  v321[0] = (float)(int)sub_100C3A4FC(v234);
                  float v238 = sub_10094DE48((float *)&v315, v321);
                  float v239 = *(double *)(v234 + 128);
                  *(float *)&__int128 v315 = v239;
                  v321[0] = (float)(int)sub_100C3A4FC(v234 + 96);
                  if (((v238 > 0.0) & (v238 > sub_10094DE48((float *)&v315, v321))) != 0)
                  {
                    v234 += 96LL;
                    uint64_t v235 = v236;
                  }
                }

                __int128 v240 = *(_OWORD *)(v234 + 16);
                _OWORD *v233 = *(_OWORD *)v234;
                v233[1] = v240;
                __int128 v241 = *(_OWORD *)(v234 + 32);
                __int128 v242 = *(_OWORD *)(v234 + 48);
                __int128 v243 = *(_OWORD *)(v234 + 80);
                v233[4] = *(_OWORD *)(v234 + 64);
                v233[5] = v243;
                v233[2] = v241;
                v233[3] = v242;
                v233 = (_OWORD *)v234;
                uint64_t v228 = v235;
              }

              while (v235 <= (uint64_t)((unint64_t)(v226 - 2) >> 1));
              v227 = v307 - 6;
              if ((_OWORD *)v234 == v307 - 6)
              {
                __int128 v276 = v310;
                *(_OWORD *)uint64_t v234 = v309;
                *(_OWORD *)(v234 + 16) = v276;
                __int128 v277 = v311;
                __int128 v278 = v312;
                __int128 v279 = v314;
                *(_OWORD *)(v234 + 64) = v313;
                *(_OWORD *)(v234 + 80) = v279;
                *(_OWORD *)(v234 + 32) = v277;
                *(_OWORD *)(v234 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v278;
              }

              else
              {
                __int128 v244 = *(v307 - 5);
                *(_OWORD *)uint64_t v234 = *v227;
                *(_OWORD *)(v234 + 16) = v244;
                __int128 v245 = *(v307 - 4);
                __int128 v246 = *(v307 - 3);
                __int128 v247 = *(v307 - 1);
                *(_OWORD *)(v234 + 64) = *(v307 - 2);
                *(_OWORD *)(v234 + 80) = v247;
                *(_OWORD *)(v234 + 32) = v245;
                *(_OWORD *)(v234 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v246;
                __int128 v248 = v314;
                __int128 v250 = v311;
                __int128 v249 = v312;
                *(v307 - 2) = v313;
                *(v307 - 1) = v248;
                *(v307 - 4) = v250;
                *(v307 - 3) = v249;
                __int128 v251 = v310;
                _OWORD *v227 = v309;
                *(v307 - 5) = v251;
                uint64_t v252 = v234 - a1 + 96;
                if (v252 >= 97)
                {
                  unint64_t v253 = (v252 / 0x60uLL - 2) >> 1;
                  uint64_t v254 = a1 + 96 * v253;
                  float v255 = *(double *)(v254 + 32);
                  *(float *)&__int128 v315 = v255;
                  v321[0] = (float)(int)sub_100C3A4FC(v254);
                  float v256 = sub_10094DE48((float *)&v315, v321);
                  float v257 = *(double *)(v234 + 32);
                  *(float *)&__int128 v315 = v257;
                  v321[0] = (float)(int)sub_100C3A4FC(v234);
                  float v258 = sub_10094DE48((float *)&v315, v321);
                  if (v256 > 0.0 && v256 > v258)
                  {
                    __int128 v259 = *(_OWORD *)(v234 + 16);
                    __int128 v315 = *(_OWORD *)v234;
                    __int128 v316 = v259;
                    __int128 v260 = *(_OWORD *)(v234 + 32);
                    __int128 v261 = *(_OWORD *)(v234 + 48);
                    __int128 v262 = *(_OWORD *)(v234 + 80);
                    __int128 v319 = *(_OWORD *)(v234 + 64);
                    __int128 v320 = v262;
                    __int128 v317 = v260;
                    __int128 v318 = v261;
                    do
                    {
                      std::string::size_type v263 = (_OWORD *)v254;
                      __int128 v264 = *(_OWORD *)(v254 + 16);
                      *(_OWORD *)uint64_t v234 = *(_OWORD *)v254;
                      *(_OWORD *)(v234 + 16) = v264;
                      __int128 v265 = *(_OWORD *)(v254 + 32);
                      __int128 v266 = *(_OWORD *)(v254 + 48);
                      __int128 v267 = *(_OWORD *)(v254 + 80);
                      *(_OWORD *)(v234 + 64) = *(_OWORD *)(v254 + 64);
                      *(_OWORD *)(v234 + 80) = v267;
                      *(_OWORD *)(v234 + 32) = v265;
                      *(_OWORD *)(v234 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v266;
                      if (!v253) {
                        break;
                      }
                      unint64_t v253 = (v253 - 1) >> 1;
                      uint64_t v254 = a1 + 96 * v253;
                      float v268 = *(double *)(v254 + 32);
                      v321[0] = v268;
                      float v308 = (float)(int)sub_100C3A4FC(v254);
                      float v269 = sub_10094DE48(v321, &v308);
                      float v270 = *(double *)&v317;
                      v321[0] = v270;
                      float v308 = (float)(int)sub_100C3A4FC((uint64_t)&v315);
                      float v271 = sub_10094DE48(v321, &v308);
                      if (v269 <= 0.0) {
                        break;
                      }
                      uint64_t v234 = (uint64_t)v263;
                    }

                    while (v269 > v271);
                    __int128 v272 = v316;
                    *std::string::size_type v263 = v315;
                    v263[1] = v272;
                    __int128 v273 = v317;
                    __int128 v274 = v318;
                    __int128 v275 = v320;
                    v263[4] = v319;
                    v263[5] = v275;
                    v263[2] = v273;
                    v263[3] = v274;
                  }
                }
              }

              BOOL v40 = v226-- <= 2;
            }

            while (!v40);
          }

          return;
        }

        unint64_t v12 = (unint64_t)v11 >> 1;
        __int128 v13 = (_OWORD *)(a1 + 96 * ((unint64_t)v11 >> 1));
        if ((unint64_t)v10 <= 0x3000)
        {
          sub_10094F748((uint64_t)v13, a1, (uint64_t)v8);
        }

        else
        {
          sub_10094F748(a1, (uint64_t)v13, (uint64_t)v8);
          uint64_t v14 = 3 * v12;
          sub_10094F748(a1 + 96, a1 + 32 * v14 - 96, v304);
          sub_10094F748(a1 + 192, a1 + 96 + 32 * v14, v303);
          sub_10094F748(a1 + 32 * v14 - 96, (uint64_t)v13, a1 + 96 + 32 * v14);
          __int128 v15 = *(_OWORD *)(a1 + 16);
          __int128 v315 = *(_OWORD *)a1;
          __int128 v316 = v15;
          __int128 v16 = *(_OWORD *)(a1 + 32);
          __int128 v17 = *(_OWORD *)(a1 + 48);
          __int128 v18 = *(_OWORD *)(a1 + 80);
          __int128 v319 = *(_OWORD *)(a1 + 64);
          __int128 v320 = v18;
          __int128 v317 = v16;
          __int128 v318 = v17;
          __int128 v19 = v13[5];
          __int128 v21 = v13[2];
          __int128 v20 = v13[3];
          *(_OWORD *)(a1 + 64) = v13[4];
          *(_OWORD *)(a1 + 80) = v19;
          *(_OWORD *)(a1 + 32) = v21;
          *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v20;
          __int128 v22 = v13[1];
          *(_OWORD *)a1 = *v13;
          *(_OWORD *)(a1 + 16) = v22;
          __int128 v23 = v316;
          *__int128 v13 = v315;
          v13[1] = v23;
          __int128 v24 = v317;
          __int128 v25 = v318;
          __int128 v26 = v320;
          v13[4] = v319;
          v13[5] = v26;
          v13[2] = v24;
          void v13[3] = v25;
        }

        --a3;
        if ((a4 & 1) == 0)
        {
          float v27 = *(double *)(a1 - 64);
          *(float *)&__int128 v315 = v27;
          *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(a1 - 96);
          float v28 = sub_10094DE48((float *)&v315, (float *)&v309);
          float v29 = *(double *)(a1 + 32);
          *(float *)&__int128 v315 = v29;
          *(float *)&__int128 v309 = (float)(int)sub_100C3A4FC(a1);
          float v30 = sub_10094DE48((float *)&v315, (float *)&v309);
          if (v28 <= 0.0 || v28 <= v30)
          {
            __int128 v91 = *(_OWORD *)(a1 + 16);
            __int128 v309 = *(_OWORD *)a1;
            __int128 v310 = v91;
            __int128 v92 = *(_OWORD *)(a1 + 32);
            __int128 v93 = *(_OWORD *)(a1 + 48);
            __int128 v94 = *(_OWORD *)(a1 + 80);
            __int128 v313 = *(_OWORD *)(a1 + 64);
            __int128 v314 = v94;
            __int128 v311 = v92;
            __int128 v312 = v93;
            *(float *)&__int128 v92 = *(double *)&v92;
            LODWORD(v315) = v92;
            v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v309);
            float v95 = sub_10094DE48((float *)&v315, v321);
            float v96 = *(a2 - 8);
            *(float *)&__int128 v315 = v96;
            v321[0] = (float)(int)sub_100C3A4FC((uint64_t)v8);
            float v97 = sub_10094DE48((float *)&v315, v321);
            if (v95 <= 0.0 || v95 <= v97)
            {
              unint64_t v104 = a1 + 96;
              do
              {
                unint64_t v9 = v104;
                float v105 = *(double *)&v311;
                *(float *)&__int128 v315 = v105;
                v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v309);
                float v106 = sub_10094DE48((float *)&v315, v321);
                float v107 = *(double *)(v9 + 32);
                *(float *)&__int128 v315 = v107;
                v321[0] = (float)(int)sub_100C3A4FC(v9);
                float v108 = sub_10094DE48((float *)&v315, v321);
                unint64_t v104 = v9 + 96;
              }

              while (v106 <= 0.0 || v106 <= v108);
            }

            else
            {
              uint64_t v98 = a1 + 96;
              do
              {
                float v99 = *(double *)&v311;
                *(float *)&__int128 v315 = v99;
                v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v309);
                float v100 = sub_10094DE48((float *)&v315, v321);
                float v101 = *(double *)(v98 + 32);
                *(float *)&__int128 v315 = v101;
                v321[0] = (float)(int)sub_100C3A4FC(v98);
                float v102 = sub_10094DE48((float *)&v315, v321);
                v98 += 96LL;
              }

              while (v100 <= 0.0 || v100 <= v102);
              unint64_t v9 = v98 - 96;
            }

            double v110 = a2;
            if (v9 < (unint64_t)a2)
            {
              v111 = a2;
              do
              {
                double v110 = v111 - 12;
                float v112 = *(double *)&v311;
                *(float *)&__int128 v315 = v112;
                v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v309);
                float v113 = sub_10094DE48((float *)&v315, v321);
                float v114 = *(v111 - 8);
                *(float *)&__int128 v315 = v114;
                v321[0] = (float)(int)sub_100C3A4FC((uint64_t)(v111 - 12));
                float v115 = sub_10094DE48((float *)&v315, v321);
                BOOL v116 = v113 <= 0.0 || v113 <= v115;
                v111 -= 12;
              }

              while (!v116);
            }

            while (v9 < (unint64_t)v110)
            {
              __int128 v117 = *(_OWORD *)(v9 + 16);
              __int128 v315 = *(_OWORD *)v9;
              __int128 v316 = v117;
              __int128 v118 = *(_OWORD *)(v9 + 32);
              __int128 v119 = *(_OWORD *)(v9 + 48);
              __int128 v120 = *(_OWORD *)(v9 + 80);
              __int128 v319 = *(_OWORD *)(v9 + 64);
              __int128 v320 = v120;
              __int128 v317 = v118;
              __int128 v318 = v119;
              __int128 v121 = *((_OWORD *)v110 + 5);
              __int128 v123 = *((_OWORD *)v110 + 2);
              __int128 v122 = *((_OWORD *)v110 + 3);
              *(_OWORD *)(v9 + 64) = *((_OWORD *)v110 + 4);
              *(_OWORD *)(v9 + 80) = v121;
              *(_OWORD *)(v9 + 32) = v123;
              *(_OWORD *)(v9 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v122;
              __int128 v124 = *((_OWORD *)v110 + 1);
              *(_OWORD *)unint64_t v9 = *(_OWORD *)v110;
              *(_OWORD *)(v9 + 16) = v124;
              uint64_t v125 = v9 + 96;
              __int128 v126 = v316;
              *(_OWORD *)double v110 = v315;
              *((_OWORD *)v110 + 1) = v126;
              __int128 v127 = v317;
              __int128 v128 = v318;
              __int128 v129 = v320;
              *((_OWORD *)v110 + 4) = v319;
              *((_OWORD *)v110 + 5) = v129;
              *((_OWORD *)v110 + 2) = v127;
              *((_OWORD *)v110 + 3) = v128;
              do
              {
                float v130 = *(double *)&v311;
                *(float *)&__int128 v315 = v130;
                v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v309);
                float v131 = sub_10094DE48((float *)&v315, v321);
                float v132 = *(double *)(v125 + 32);
                *(float *)&__int128 v315 = v132;
                v321[0] = (float)(int)sub_100C3A4FC(v125);
                float v133 = sub_10094DE48((float *)&v315, v321);
                v125 += 96LL;
              }

              while (v131 <= 0.0 || v131 <= v133);
              unint64_t v9 = v125 - 96;
              do
              {
                std::string::size_type v135 = v110;
                v110 -= 12;
                float v136 = *(double *)&v311;
                *(float *)&__int128 v315 = v136;
                v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v309);
                float v137 = sub_10094DE48((float *)&v315, v321);
                float v138 = *(v135 - 8);
                *(float *)&__int128 v315 = v138;
                v321[0] = (float)(int)sub_100C3A4FC((uint64_t)v110);
                float v139 = sub_10094DE48((float *)&v315, v321);
              }

              while (v137 > 0.0 && v137 > v139);
            }

            uint64_t v141 = (_OWORD *)(v9 - 96);
            if (v9 - 96 != a1)
            {
              __int128 v142 = *(_OWORD *)(v9 - 80);
              *(_OWORD *)a1 = *v141;
              *(_OWORD *)(a1 + 16) = v142;
              __int128 v143 = *(_OWORD *)(v9 - 64);
              __int128 v144 = *(_OWORD *)(v9 - 48);
              __int128 v145 = *(_OWORD *)(v9 - 16);
              *(_OWORD *)(a1 + 64) = *(_OWORD *)(v9 - 32);
              *(_OWORD *)(a1 + 80) = v145;
              *(_OWORD *)(a1 + 32) = v143;
              *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v144;
            }

            a4 = 0;
            __int128 v146 = v310;
            *uint64_t v141 = v309;
            *(_OWORD *)(v9 - 80) = v146;
            __int128 v147 = v311;
            __int128 v148 = v312;
            __int128 v149 = v314;
            *(_OWORD *)(v9 - 32) = v313;
            *(_OWORD *)(v9 - 16) = v149;
            *(_OWORD *)(v9 - 64) = v147;
            *(_OWORD *)(v9 - 4_Block_object_dispose((const void *)(v1 - 224), 8) = v148;
            continue;
          }
        }

        uint64_t v31 = 0LL;
        __int128 v32 = *(_OWORD *)(a1 + 16);
        __int128 v309 = *(_OWORD *)a1;
        __int128 v310 = v32;
        __int128 v33 = *(_OWORD *)(a1 + 32);
        __int128 v34 = *(_OWORD *)(a1 + 48);
        __int128 v35 = *(_OWORD *)(a1 + 80);
        __int128 v313 = *(_OWORD *)(a1 + 64);
        __int128 v314 = v35;
        __int128 v311 = v33;
        __int128 v312 = v34;
        do
        {
          float v36 = *(double *)(a1 + v31 + 128);
          *(float *)&__int128 v315 = v36;
          v321[0] = (float)(int)sub_100C3A4FC(a1 + v31 + 96);
          float v37 = sub_10094DE48((float *)&v315, v321);
          float v38 = *(double *)&v311;
          *(float *)&__int128 v315 = v38;
          v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v309);
          float v39 = sub_10094DE48((float *)&v315, v321);
          v31 += 96LL;
          BOOL v40 = v37 <= 0.0 || v37 <= v39;
        }

        while (!v40);
        unint64_t v41 = a1 + v31;
        uint64_t v42 = v306;
        if (v31 == 96)
        {
          unint64_t v49 = v306;
          while (v41 < v49)
          {
            double v43 = (double *)(v49 - 96);
            float v50 = *(double *)(v49 - 64);
            *(float *)&__int128 v315 = v50;
            v321[0] = (float)(int)sub_100C3A4FC(v49 - 96);
            float v51 = sub_10094DE48((float *)&v315, v321);
            float v52 = *(double *)&v311;
            *(float *)&__int128 v315 = v52;
            v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v309);
            float v53 = sub_10094DE48((float *)&v315, v321);
            BOOL v54 = v51 <= 0.0 || v51 <= v53;
            unint64_t v49 = (unint64_t)v43;
            if (!v54) {
              goto LABEL_31;
            }
          }

          double v43 = (double *)v49;
        }

        else
        {
          do
          {
            double v43 = (double *)(v42 - 96);
            float v44 = *(double *)(v42 - 64);
            *(float *)&__int128 v315 = v44;
            v321[0] = (float)(int)sub_100C3A4FC(v42 - 96);
            float v45 = sub_10094DE48((float *)&v315, v321);
            float v46 = *(double *)&v311;
            *(float *)&__int128 v315 = v46;
            v321[0] = (float)(int)sub_100C3A4FC((uint64_t)&v309);
            float v47 = sub_10094DE48((float *)&v315, v321);
            BOOL v48 = v45 <= 0.0 || v45 <= v47;
            uint64_t v42 = (uint64_t)v43;
          }

          while (v48);
        }

void sub_10094F44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  float v10 = *(double *)(a5 + 32);
  *(float *)&__int128 v65 = v10;
  float v64 = (float)(int)sub_100C3A4FC(a5);
  float v11 = sub_10094DE48((float *)&v65, &v64);
  float v12 = *(double *)(a4 + 32);
  *(float *)&__int128 v65 = v12;
  float v64 = (float)(int)sub_100C3A4FC(a4);
  float v13 = sub_10094DE48((float *)&v65, &v64);
  if (v11 > 0.0 && v11 > v13)
  {
    __int128 v15 = *(_OWORD *)(a4 + 48);
    __int128 v67 = *(_OWORD *)(a4 + 32);
    __int128 v68 = v15;
    __int128 v16 = *(_OWORD *)(a4 + 80);
    __int128 v69 = *(_OWORD *)(a4 + 64);
    __int128 v70 = v16;
    __int128 v17 = *(_OWORD *)(a4 + 16);
    __int128 v65 = *(_OWORD *)a4;
    __int128 v66 = v17;
    __int128 v18 = *(_OWORD *)(a5 + 16);
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *(_OWORD *)(a4 + 16) = v18;
    __int128 v19 = *(_OWORD *)(a5 + 80);
    __int128 v21 = *(_OWORD *)(a5 + 32);
    __int128 v20 = *(_OWORD *)(a5 + 48);
    *(_OWORD *)(a4 + 64) = *(_OWORD *)(a5 + 64);
    *(_OWORD *)(a4 + 80) = v19;
    *(_OWORD *)(a4 + 32) = v21;
    *(_OWORD *)(a4 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v20;
    __int128 v22 = v70;
    *(_OWORD *)(a5 + 64) = v69;
    *(_OWORD *)(a5 + 80) = v22;
    __int128 v23 = v68;
    *(_OWORD *)(a5 + 32) = v67;
    *(_OWORD *)(a5 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v23;
    __int128 v24 = v66;
    *(_OWORD *)a5 = v65;
    *(_OWORD *)(a5 + 16) = v24;
    *(float *)&__int128 v23 = *(double *)(a4 + 32);
    LODWORD(v65) = v23;
    float v64 = (float)(int)sub_100C3A4FC(a4);
    float v25 = sub_10094DE48((float *)&v65, &v64);
    float v26 = *(double *)(a3 + 32);
    *(float *)&__int128 v65 = v26;
    float v64 = (float)(int)sub_100C3A4FC(a3);
    float v27 = sub_10094DE48((float *)&v65, &v64);
    if (v25 > 0.0 && v25 > v27)
    {
      __int128 v28 = *(_OWORD *)(a3 + 48);
      __int128 v67 = *(_OWORD *)(a3 + 32);
      __int128 v68 = v28;
      __int128 v29 = *(_OWORD *)(a3 + 80);
      __int128 v69 = *(_OWORD *)(a3 + 64);
      __int128 v70 = v29;
      __int128 v30 = *(_OWORD *)(a3 + 16);
      __int128 v65 = *(_OWORD *)a3;
      __int128 v66 = v30;
      __int128 v31 = *(_OWORD *)(a4 + 16);
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *(_OWORD *)(a3 + 16) = v31;
      __int128 v32 = *(_OWORD *)(a4 + 80);
      __int128 v34 = *(_OWORD *)(a4 + 32);
      __int128 v33 = *(_OWORD *)(a4 + 48);
      *(_OWORD *)(a3 + 64) = *(_OWORD *)(a4 + 64);
      *(_OWORD *)(a3 + 80) = v32;
      *(_OWORD *)(a3 + 32) = v34;
      *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v33;
      __int128 v35 = v70;
      *(_OWORD *)(a4 + 64) = v69;
      *(_OWORD *)(a4 + 80) = v35;
      __int128 v36 = v68;
      *(_OWORD *)(a4 + 32) = v67;
      *(_OWORD *)(a4 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v36;
      __int128 v37 = v66;
      *(_OWORD *)a4 = v65;
      *(_OWORD *)(a4 + 16) = v37;
      *(float *)&__int128 v36 = *(double *)(a3 + 32);
      LODWORD(v65) = v36;
      float v64 = (float)(int)sub_100C3A4FC(a3);
      float v38 = sub_10094DE48((float *)&v65, &v64);
      float v39 = *(double *)(a2 + 32);
      *(float *)&__int128 v65 = v39;
      float v64 = (float)(int)sub_100C3A4FC(a2);
      float v40 = sub_10094DE48((float *)&v65, &v64);
      if (v38 > 0.0 && v38 > v40)
      {
        __int128 v41 = *(_OWORD *)(a2 + 48);
        __int128 v67 = *(_OWORD *)(a2 + 32);
        __int128 v68 = v41;
        __int128 v42 = *(_OWORD *)(a2 + 80);
        __int128 v69 = *(_OWORD *)(a2 + 64);
        __int128 v70 = v42;
        __int128 v43 = *(_OWORD *)(a2 + 16);
        __int128 v65 = *(_OWORD *)a2;
        __int128 v66 = v43;
        __int128 v44 = *(_OWORD *)(a3 + 16);
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(_OWORD *)(a2 + 16) = v44;
        __int128 v45 = *(_OWORD *)(a3 + 80);
        __int128 v47 = *(_OWORD *)(a3 + 32);
        __int128 v46 = *(_OWORD *)(a3 + 48);
        *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
        *(_OWORD *)(a2 + 80) = v45;
        *(_OWORD *)(a2 + 32) = v47;
        *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v46;
        __int128 v48 = v70;
        *(_OWORD *)(a3 + 64) = v69;
        *(_OWORD *)(a3 + 80) = v48;
        __int128 v49 = v68;
        *(_OWORD *)(a3 + 32) = v67;
        *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v49;
        __int128 v50 = v66;
        *(_OWORD *)a3 = v65;
        *(_OWORD *)(a3 + 16) = v50;
        *(float *)&__int128 v49 = *(double *)(a2 + 32);
        LODWORD(v65) = v49;
        float v64 = (float)(int)sub_100C3A4FC(a2);
        float v51 = sub_10094DE48((float *)&v65, &v64);
        float v52 = *(double *)(a1 + 32);
        *(float *)&__int128 v65 = v52;
        float v64 = (float)(int)sub_100C3A4FC(a1);
        float v53 = sub_10094DE48((float *)&v65, &v64);
        if (v51 > 0.0 && v51 > v53)
        {
          __int128 v54 = *(_OWORD *)(a1 + 48);
          __int128 v67 = *(_OWORD *)(a1 + 32);
          __int128 v68 = v54;
          __int128 v55 = *(_OWORD *)(a1 + 80);
          __int128 v69 = *(_OWORD *)(a1 + 64);
          __int128 v70 = v55;
          __int128 v56 = *(_OWORD *)(a1 + 16);
          __int128 v65 = *(_OWORD *)a1;
          __int128 v66 = v56;
          __int128 v57 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v57;
          __int128 v58 = *(_OWORD *)(a2 + 80);
          __int128 v60 = *(_OWORD *)(a2 + 32);
          __int128 v59 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          *(_OWORD *)(a1 + 80) = v58;
          *(_OWORD *)(a1 + 32) = v60;
          *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v59;
          __int128 v61 = v70;
          *(_OWORD *)(a2 + 64) = v69;
          *(_OWORD *)(a2 + 80) = v61;
          __int128 v62 = v68;
          *(_OWORD *)(a2 + 32) = v67;
          *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v62;
          __int128 v63 = v66;
          *(_OWORD *)a2 = v65;
          *(_OWORD *)(a2 + 16) = v63;
        }
      }
    }
  }

void sub_10094F748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  float v6 = *(double *)(a2 + 32);
  *(float *)&__int128 v73 = v6;
  float v72 = (float)(int)sub_100C3A4FC(a2);
  float v7 = sub_10094DE48((float *)&v73, &v72);
  float v8 = *(double *)(a1 + 32);
  *(float *)&__int128 v73 = v8;
  float v72 = (float)(int)sub_100C3A4FC(a1);
  float v9 = sub_10094DE48((float *)&v73, &v72);
  if (v7 <= 0.0 || v7 <= v9)
  {
    float v11 = *(double *)(a3 + 32);
    *(float *)&__int128 v73 = v11;
    float v72 = (float)(int)sub_100C3A4FC(a3);
    float v12 = sub_10094DE48((float *)&v73, &v72);
    float v13 = *(double *)(a2 + 32);
    *(float *)&__int128 v73 = v13;
    float v72 = (float)(int)sub_100C3A4FC(a2);
    float v14 = sub_10094DE48((float *)&v73, &v72);
    if (v12 > 0.0 && v12 > v14)
    {
      __int128 v15 = *(_OWORD *)(a2 + 48);
      __int128 v75 = *(_OWORD *)(a2 + 32);
      __int128 v76 = v15;
      __int128 v16 = *(_OWORD *)(a2 + 80);
      __int128 v77 = *(_OWORD *)(a2 + 64);
      __int128 v78 = v16;
      __int128 v17 = *(_OWORD *)(a2 + 16);
      __int128 v73 = *(_OWORD *)a2;
      __int128 v74 = v17;
      __int128 v18 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)(a2 + 16) = v18;
      __int128 v19 = *(_OWORD *)(a3 + 80);
      __int128 v21 = *(_OWORD *)(a3 + 32);
      __int128 v20 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
      *(_OWORD *)(a2 + 80) = v19;
      *(_OWORD *)(a2 + 32) = v21;
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v20;
      __int128 v22 = v78;
      *(_OWORD *)(a3 + 64) = v77;
      *(_OWORD *)(a3 + 80) = v22;
      __int128 v23 = v76;
      *(_OWORD *)(a3 + 32) = v75;
      *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v23;
      __int128 v24 = v74;
      *(_OWORD *)a3 = v73;
      *(_OWORD *)(a3 + 16) = v24;
      *(float *)&__int128 v23 = *(double *)(a2 + 32);
      LODWORD(v73) = v23;
      float v72 = (float)(int)sub_100C3A4FC(a2);
      float v25 = sub_10094DE48((float *)&v73, &v72);
      float v26 = *(double *)(a1 + 32);
      *(float *)&__int128 v73 = v26;
      float v72 = (float)(int)sub_100C3A4FC(a1);
      float v27 = sub_10094DE48((float *)&v73, &v72);
      if (v25 > 0.0 && v25 > v27)
      {
        __int128 v28 = *(_OWORD *)(a1 + 48);
        __int128 v75 = *(_OWORD *)(a1 + 32);
        __int128 v76 = v28;
        __int128 v29 = *(_OWORD *)(a1 + 80);
        __int128 v77 = *(_OWORD *)(a1 + 64);
        __int128 v78 = v29;
        __int128 v30 = *(_OWORD *)(a1 + 16);
        __int128 v73 = *(_OWORD *)a1;
        __int128 v74 = v30;
        __int128 v31 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v31;
        __int128 v32 = *(_OWORD *)(a2 + 80);
        __int128 v34 = *(_OWORD *)(a2 + 32);
        __int128 v33 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v32;
        *(_OWORD *)(a1 + 32) = v34;
        *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v33;
        __int128 v35 = v78;
        *(_OWORD *)(a2 + 64) = v77;
        *(_OWORD *)(a2 + 80) = v35;
        __int128 v36 = v76;
        *(_OWORD *)(a2 + 32) = v75;
        *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v36;
        __int128 v37 = v74;
        *(_OWORD *)a2 = v73;
        *(_OWORD *)(a2 + 16) = v37;
      }
    }
  }

  else
  {
    float v38 = *(double *)(a3 + 32);
    *(float *)&__int128 v73 = v38;
    float v72 = (float)(int)sub_100C3A4FC(a3);
    float v39 = sub_10094DE48((float *)&v73, &v72);
    float v40 = *(double *)(a2 + 32);
    *(float *)&__int128 v73 = v40;
    float v72 = (float)(int)sub_100C3A4FC(a2);
    float v41 = sub_10094DE48((float *)&v73, &v72);
    if (v39 > 0.0 && v39 > v41)
    {
      __int128 v42 = *(_OWORD *)(a1 + 48);
      __int128 v75 = *(_OWORD *)(a1 + 32);
      __int128 v76 = v42;
      __int128 v43 = *(_OWORD *)(a1 + 80);
      __int128 v77 = *(_OWORD *)(a1 + 64);
      __int128 v78 = v43;
      __int128 v44 = *(_OWORD *)(a1 + 16);
      __int128 v73 = *(_OWORD *)a1;
      __int128 v74 = v44;
      __int128 v45 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a3;
      *(_OWORD *)(a1 + 16) = v45;
      __int128 v46 = *(_OWORD *)(a3 + 80);
      __int128 v48 = *(_OWORD *)(a3 + 32);
      __int128 v47 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a3 + 64);
      *(_OWORD *)(a1 + 80) = v46;
      *(_OWORD *)(a1 + 32) = v48;
      *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v47;
LABEL_17:
      __int128 v69 = v78;
      *(_OWORD *)(a3 + 64) = v77;
      *(_OWORD *)(a3 + 80) = v69;
      __int128 v70 = v76;
      *(_OWORD *)(a3 + 32) = v75;
      *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v70;
      __int128 v71 = v74;
      *(_OWORD *)a3 = v73;
      *(_OWORD *)(a3 + 16) = v71;
      return;
    }

    __int128 v49 = *(_OWORD *)(a1 + 48);
    __int128 v75 = *(_OWORD *)(a1 + 32);
    __int128 v76 = v49;
    __int128 v50 = *(_OWORD *)(a1 + 80);
    __int128 v77 = *(_OWORD *)(a1 + 64);
    __int128 v78 = v50;
    __int128 v51 = *(_OWORD *)(a1 + 16);
    __int128 v73 = *(_OWORD *)a1;
    __int128 v74 = v51;
    __int128 v52 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v52;
    __int128 v53 = *(_OWORD *)(a2 + 80);
    __int128 v55 = *(_OWORD *)(a2 + 32);
    __int128 v54 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v53;
    *(_OWORD *)(a1 + 32) = v55;
    *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v54;
    __int128 v56 = v78;
    *(_OWORD *)(a2 + 64) = v77;
    *(_OWORD *)(a2 + 80) = v56;
    __int128 v57 = v76;
    *(_OWORD *)(a2 + 32) = v75;
    *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v57;
    __int128 v58 = v74;
    *(_OWORD *)a2 = v73;
    *(_OWORD *)(a2 + 16) = v58;
    *(float *)&__int128 v57 = *(double *)(a3 + 32);
    LODWORD(v73) = v57;
    float v72 = (float)(int)sub_100C3A4FC(a3);
    float v59 = sub_10094DE48((float *)&v73, &v72);
    float v60 = *(double *)(a2 + 32);
    *(float *)&__int128 v73 = v60;
    float v72 = (float)(int)sub_100C3A4FC(a2);
    float v61 = sub_10094DE48((float *)&v73, &v72);
    if (v59 > 0.0 && v59 > v61)
    {
      __int128 v62 = *(_OWORD *)(a2 + 48);
      __int128 v75 = *(_OWORD *)(a2 + 32);
      __int128 v76 = v62;
      __int128 v63 = *(_OWORD *)(a2 + 80);
      __int128 v77 = *(_OWORD *)(a2 + 64);
      __int128 v78 = v63;
      __int128 v64 = *(_OWORD *)(a2 + 16);
      __int128 v73 = *(_OWORD *)a2;
      __int128 v74 = v64;
      __int128 v65 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)(a2 + 16) = v65;
      __int128 v66 = *(_OWORD *)(a3 + 80);
      __int128 v68 = *(_OWORD *)(a3 + 32);
      __int128 v67 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
      *(_OWORD *)(a2 + 80) = v66;
      *(_OWORD *)(a2 + 32) = v68;
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v67;
      goto LABEL_17;
    }
  }

BOOL sub_10094FACC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 5);
  BOOL result = 1LL;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      float v6 = (_OWORD *)(a2 - 96);
      float v7 = *(double *)(a2 - 64);
      *(float *)&__int128 v46 = v7;
      float v53 = (float)(int)sub_100C3A4FC(a2 - 96);
      float v8 = sub_10094DE48((float *)&v46, &v53);
      float v9 = *(double *)(a1 + 32);
      *(float *)&__int128 v46 = v9;
      float v53 = (float)(int)sub_100C3A4FC(a1);
      float v10 = sub_10094DE48((float *)&v46, &v53);
      BOOL result = 1LL;
      if (v8 > 0.0 && v8 > v10)
      {
        __int128 v11 = *(_OWORD *)(a1 + 48);
        __int128 v48 = *(_OWORD *)(a1 + 32);
        __int128 v49 = v11;
        __int128 v12 = *(_OWORD *)(a1 + 80);
        __int128 v50 = *(_OWORD *)(a1 + 64);
        __int128 v51 = v12;
        __int128 v13 = *(_OWORD *)(a1 + 16);
        __int128 v46 = *(_OWORD *)a1;
        __int128 v47 = v13;
        __int128 v14 = *(_OWORD *)(a2 - 80);
        *(_OWORD *)a1 = *v6;
        *(_OWORD *)(a1 + 16) = v14;
        __int128 v15 = *(_OWORD *)(a2 - 16);
        __int128 v17 = *(_OWORD *)(a2 - 64);
        __int128 v16 = *(_OWORD *)(a2 - 48);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 - 32);
        *(_OWORD *)(a1 + 80) = v15;
        *(_OWORD *)(a1 + 32) = v17;
        *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v16;
        __int128 v18 = v51;
        *(_OWORD *)(a2 - 32) = v50;
        *(_OWORD *)(a2 - 16) = v18;
        __int128 v19 = v49;
        *(_OWORD *)(a2 - 64) = v48;
        *(_OWORD *)(a2 - 4_Block_object_dispose((const void *)(v1 - 224), 8) = v19;
        __int128 v20 = v47;
        *float v6 = v46;
        *(_OWORD *)(a2 - 80) = v20;
      }

      return result;
    case 3uLL:
      sub_10094F748(a1, a1 + 96, a2 - 96);
      return 1LL;
    case 4uLL:
      sub_10094FDE0(a1, a1 + 96, a1 + 192, a2 - 96);
      return 1LL;
    case 5uLL:
      sub_10094F44C(a1, a1 + 96, a1 + 192, a1 + 288, a2 - 96);
      return 1LL;
    default:
      uint64_t v21 = a1 + 192;
      sub_10094F748(a1, a1 + 96, a1 + 192);
      uint64_t v22 = a1 + 288;
      if (a1 + 288 == a2) {
        return 1LL;
      }
      uint64_t v23 = 0LL;
      int v24 = 0;
      break;
  }

  while (1)
  {
    float v25 = *(double *)(v22 + 32);
    *(float *)&__int128 v46 = v25;
    float v53 = (float)(int)sub_100C3A4FC(v22);
    float v26 = sub_10094DE48((float *)&v46, &v53);
    float v27 = *(double *)(v21 + 32);
    *(float *)&__int128 v46 = v27;
    float v53 = (float)(int)sub_100C3A4FC(v21);
    float v28 = sub_10094DE48((float *)&v46, &v53);
    if (v26 > 0.0 && v26 > v28)
    {
      __int128 v30 = *(_OWORD *)(v22 + 48);
      __int128 v48 = *(_OWORD *)(v22 + 32);
      __int128 v49 = v30;
      __int128 v31 = *(_OWORD *)(v22 + 80);
      __int128 v50 = *(_OWORD *)(v22 + 64);
      __int128 v51 = v31;
      __int128 v32 = *(_OWORD *)(v22 + 16);
      uint64_t v33 = v23;
      __int128 v46 = *(_OWORD *)v22;
      __int128 v47 = v32;
      while (1)
      {
        uint64_t v34 = a1 + v33;
        __int128 v35 = *(_OWORD *)(a1 + v33 + 240);
        *(_OWORD *)(v34 + 320) = *(_OWORD *)(a1 + v33 + 224);
        *(_OWORD *)(v34 + 336) = v35;
        __int128 v36 = *(_OWORD *)(a1 + v33 + 272);
        *(_OWORD *)(v34 + 352) = *(_OWORD *)(a1 + v33 + 256);
        *(_OWORD *)(v34 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = v36;
        __int128 v37 = *(_OWORD *)(a1 + v33 + 208);
        *(_OWORD *)(v34 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = *(_OWORD *)(a1 + v33 + 192);
        *(_OWORD *)(v34 + 304) = v37;
        if (v33 == -192) {
          break;
        }
        float v38 = *(double *)&v48;
        float v53 = v38;
        float v52 = (float)(int)sub_100C3A4FC((uint64_t)&v46);
        float v39 = sub_10094DE48(&v53, &v52);
        float v40 = *(double *)(v34 + 128);
        float v53 = v40;
        float v52 = (float)(int)sub_100C3A4FC(v34 + 96);
        float v41 = sub_10094DE48(&v53, &v52);
        v33 -= 96LL;
        if (v39 <= 0.0 || v39 <= v41)
        {
          __int128 v42 = (_OWORD *)(a1 + v33 + 288);
          goto LABEL_17;
        }
      }

      __int128 v42 = (_OWORD *)a1;
LABEL_17:
      __int128 v43 = v49;
      v42[2] = v48;
      v42[3] = v43;
      __int128 v44 = v51;
      v42[4] = v50;
      v42[5] = v44;
      __int128 v45 = v47;
      ++v24;
      *__int128 v42 = v46;
      v42[1] = v45;
      if (v24 == 8) {
        return v22 + 96 == a2;
      }
    }

    uint64_t v21 = v22;
    v23 += 96LL;
    v22 += 96LL;
    if (v22 == a2) {
      return 1LL;
    }
  }

void sub_10094FDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  float v8 = *(double *)(a4 + 32);
  *(float *)&__int128 v50 = v8;
  float v49 = (float)(int)sub_100C3A4FC(a4);
  float v9 = sub_10094DE48((float *)&v50, &v49);
  float v10 = *(double *)(a3 + 32);
  *(float *)&__int128 v50 = v10;
  float v49 = (float)(int)sub_100C3A4FC(a3);
  float v11 = sub_10094DE48((float *)&v50, &v49);
  if (v9 > 0.0 && v9 > v11)
  {
    __int128 v13 = *(_OWORD *)(a3 + 48);
    __int128 v52 = *(_OWORD *)(a3 + 32);
    __int128 v53 = v13;
    __int128 v14 = *(_OWORD *)(a3 + 80);
    __int128 v54 = *(_OWORD *)(a3 + 64);
    __int128 v55 = v14;
    __int128 v15 = *(_OWORD *)(a3 + 16);
    __int128 v50 = *(_OWORD *)a3;
    __int128 v51 = v15;
    __int128 v16 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_OWORD *)(a3 + 16) = v16;
    __int128 v17 = *(_OWORD *)(a4 + 80);
    __int128 v19 = *(_OWORD *)(a4 + 32);
    __int128 v18 = *(_OWORD *)(a4 + 48);
    *(_OWORD *)(a3 + 64) = *(_OWORD *)(a4 + 64);
    *(_OWORD *)(a3 + 80) = v17;
    *(_OWORD *)(a3 + 32) = v19;
    *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v18;
    __int128 v20 = v55;
    *(_OWORD *)(a4 + 64) = v54;
    *(_OWORD *)(a4 + 80) = v20;
    __int128 v21 = v53;
    *(_OWORD *)(a4 + 32) = v52;
    *(_OWORD *)(a4 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v21;
    __int128 v22 = v51;
    *(_OWORD *)a4 = v50;
    *(_OWORD *)(a4 + 16) = v22;
    *(float *)&__int128 v21 = *(double *)(a3 + 32);
    LODWORD(v50) = v21;
    float v49 = (float)(int)sub_100C3A4FC(a3);
    float v23 = sub_10094DE48((float *)&v50, &v49);
    float v24 = *(double *)(a2 + 32);
    *(float *)&__int128 v50 = v24;
    float v49 = (float)(int)sub_100C3A4FC(a2);
    float v25 = sub_10094DE48((float *)&v50, &v49);
    if (v23 > 0.0 && v23 > v25)
    {
      __int128 v26 = *(_OWORD *)(a2 + 48);
      __int128 v52 = *(_OWORD *)(a2 + 32);
      __int128 v53 = v26;
      __int128 v27 = *(_OWORD *)(a2 + 80);
      __int128 v54 = *(_OWORD *)(a2 + 64);
      __int128 v55 = v27;
      __int128 v28 = *(_OWORD *)(a2 + 16);
      __int128 v50 = *(_OWORD *)a2;
      __int128 v51 = v28;
      __int128 v29 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)(a2 + 16) = v29;
      __int128 v30 = *(_OWORD *)(a3 + 80);
      __int128 v32 = *(_OWORD *)(a3 + 32);
      __int128 v31 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
      *(_OWORD *)(a2 + 80) = v30;
      *(_OWORD *)(a2 + 32) = v32;
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v31;
      __int128 v33 = v55;
      *(_OWORD *)(a3 + 64) = v54;
      *(_OWORD *)(a3 + 80) = v33;
      __int128 v34 = v53;
      *(_OWORD *)(a3 + 32) = v52;
      *(_OWORD *)(a3 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v34;
      __int128 v35 = v51;
      *(_OWORD *)a3 = v50;
      *(_OWORD *)(a3 + 16) = v35;
      *(float *)&__int128 v34 = *(double *)(a2 + 32);
      LODWORD(v50) = v34;
      float v49 = (float)(int)sub_100C3A4FC(a2);
      float v36 = sub_10094DE48((float *)&v50, &v49);
      float v37 = *(double *)(a1 + 32);
      *(float *)&__int128 v50 = v37;
      float v49 = (float)(int)sub_100C3A4FC(a1);
      float v38 = sub_10094DE48((float *)&v50, &v49);
      if (v36 > 0.0 && v36 > v38)
      {
        __int128 v39 = *(_OWORD *)(a1 + 48);
        __int128 v52 = *(_OWORD *)(a1 + 32);
        __int128 v53 = v39;
        __int128 v40 = *(_OWORD *)(a1 + 80);
        __int128 v54 = *(_OWORD *)(a1 + 64);
        __int128 v55 = v40;
        __int128 v41 = *(_OWORD *)(a1 + 16);
        __int128 v50 = *(_OWORD *)a1;
        __int128 v51 = v41;
        __int128 v42 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v42;
        __int128 v43 = *(_OWORD *)(a2 + 80);
        __int128 v45 = *(_OWORD *)(a2 + 32);
        __int128 v44 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v43;
        *(_OWORD *)(a1 + 32) = v45;
        *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v44;
        __int128 v46 = v55;
        *(_OWORD *)(a2 + 64) = v54;
        *(_OWORD *)(a2 + 80) = v46;
        __int128 v47 = v53;
        *(_OWORD *)(a2 + 32) = v52;
        *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v47;
        __int128 v48 = v51;
        *(_OWORD *)a2 = v50;
        *(_OWORD *)(a2 + 16) = v48;
      }
    }
  }

_OWORD *sub_100950024(uint64_t **a1, void *a2, uint64_t a3, _OWORD **a4)
{
  float v6 = (void **)sub_1009500BC((uint64_t)a1, &v15, a2);
  float v7 = *v6;
  if (!*v6)
  {
    float v8 = (uint64_t **)v6;
    float v7 = operator new(0x88uLL);
    float v9 = *a4;
    __int128 v10 = (*a4)[1];
    v7[2] = **a4;
    v7[3] = v10;
    __int128 v11 = v9[2];
    __int128 v12 = v9[3];
    __int128 v13 = v9[5];
    v7[6] = v9[4];
    v7[7] = v13;
    v7[4] = v11;
    v7[5] = v12;
    *((_BYTE *)v7 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
    sub_1000085FC(a1, v15, v8, (uint64_t *)v7);
  }

  return v7;
}

void *sub_1009500BC(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = (void *)(a1 + 8);
  unint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        float v7 = v4;
        float v8 = v4 + 4;
        if (!sub_100C3A3F4(a3, v4 + 4)) {
          break;
        }
        unint64_t v4 = (void *)*v7;
        unint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      if (!sub_100C3A3F4(v8, a3)) {
        break;
      }
      unint64_t v5 = v7 + 1;
      unint64_t v4 = (void *)v7[1];
    }

    while (v4);
  }

  else
  {
    float v7 = (void *)(a1 + 8);
  }

float *sub_10095014C(float *result, float *a2, uint64_t a3, char a4)
{
  float v7 = result;
LABEL_2:
  unint64_t v8 = (unint64_t)v7;
  while (2)
  {
    float v7 = (float *)v8;
    uint64_t v9 = (uint64_t)a2 - v8;
    unint64_t v10 = (uint64_t)((uint64_t)a2 - v8) >> 3;
    switch(v10)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        if (*(a2 - 1) > *(float *)(v8 + 4))
        {
          uint64_t v40 = *(void *)v8;
          *(void *)unint64_t v8 = *((void *)a2 - 1);
          *((void *)a2 - 1) = v40;
        }

        return result;
      case 3uLL:
        return sub_100950830((float *)v8, (float *)(v8 + 8), a2 - 2);
      case 4uLL:
        return sub_100950AA0((float *)v8, (float *)(v8 + 8), (float *)(v8 + 16), (uint64_t)(a2 - 2));
      case 5uLL:
        BOOL result = sub_100950AA0((float *)v8, (float *)(v8 + 8), (float *)(v8 + 16), v8 + 24);
        if (*(a2 - 1) > *(float *)(v8 + 28))
        {
          uint64_t v41 = *(void *)(v8 + 24);
          *(void *)(v8 + 24) = *((void *)a2 - 1);
          *((void *)a2 - 1) = v41;
          if (*(float *)(v8 + 28) > *(float *)(v8 + 20))
          {
            uint64_t v43 = *(void *)(v8 + 16);
            uint64_t v42 = *(void *)(v8 + 24);
            *(void *)(v8 + 16) = v42;
            *(void *)(v8 + 24) = v43;
            if (*(float *)(v8 + 12) < *((float *)&v42 + 1))
            {
              uint64_t v44 = *(void *)(v8 + 8);
              *(void *)(v8 + _Block_object_dispose((const void *)(v1 - 224), 8) = v42;
              *(void *)(v8 + 16) = v44;
              if (*(float *)(v8 + 4) < *((float *)&v42 + 1))
              {
                uint64_t v45 = *(void *)v8;
                *(void *)unint64_t v8 = v42;
                *(void *)(v8 + _Block_object_dispose((const void *)(v1 - 224), 8) = v45;
              }
            }
          }
        }

        return result;
      default:
        if (v9 <= 191)
        {
          __int128 v46 = (float *)(v8 + 8);
          BOOL v48 = (float *)v8 == a2 || v46 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v48)
            {
              uint64_t v49 = 0LL;
              unint64_t v50 = v8;
              do
              {
                float v51 = *(float *)(v50 + 12);
                float v52 = *(float *)(v50 + 4);
                unint64_t v50 = (unint64_t)v46;
                if (v51 > v52)
                {
                  float v53 = *v46;
                  uint64_t v54 = v49;
                  while (1)
                  {
                    *(void *)(v8 + v54 + _Block_object_dispose((const void *)(v1 - 224), 8) = *(void *)(v8 + v54);
                    if (!v54) {
                      break;
                    }
                    float v55 = *(float *)(v8 + v54 - 4);
                    v54 -= 8LL;
                    if (v55 >= v51)
                    {
                      uint64_t v56 = v8 + v54 + 8;
                      goto LABEL_80;
                    }
                  }

                  uint64_t v56 = v8;
LABEL_80:
                  *(float *)uint64_t v56 = v53;
                  *(float *)(v56 + 4) = v51;
                }

                __int128 v46 = (float *)(v50 + 8);
                v49 += 8LL;
              }

              while ((float *)(v50 + 8) != a2);
            }
          }

          else if (!v48)
          {
            do
            {
              float v81 = v7[3];
              float v82 = v7[1];
              float v7 = v46;
              if (v81 > v82)
              {
                float v83 = *v46;
                do
                {
                  __int128 v84 = v46;
                  uint64_t v85 = *((void *)v46 - 1);
                  v46 -= 2;
                  *(void *)__int128 v84 = v85;
                }

                while (*(v84 - 3) < v81);
                float *v46 = v83;
                v46[1] = v81;
              }

              __int128 v46 = v7 + 2;
            }

            while (v7 + 2 != a2);
          }

          return result;
        }

        if (!a3)
        {
          if ((float *)v8 != a2)
          {
            int64_t v57 = (v10 - 2) >> 1;
            int64_t v58 = v57;
            do
            {
              int64_t v59 = v58;
              if (v57 >= v58)
              {
                uint64_t v60 = (2 * v58) | 1;
                unint64_t v61 = v8 + 8 * v60;
                if (2 * v59 + 2 < (uint64_t)v10 && *(float *)(v61 + 4) > *(float *)(v61 + 12))
                {
                  v61 += 8LL;
                  uint64_t v60 = 2 * v59 + 2;
                }

                float v62 = *(float *)(v8 + 8 * v59 + 4);
                if (*(float *)(v61 + 4) <= v62)
                {
                  unint64_t v63 = v8 + 8 * v59;
                  int v64 = *(_DWORD *)v63;
                  do
                  {
                    __int128 v65 = (void *)v63;
                    unint64_t v63 = v61;
                    *__int128 v65 = *(void *)v61;
                    if (v57 < v60) {
                      break;
                    }
                    uint64_t v66 = 2 * v60;
                    uint64_t v60 = (2 * v60) | 1;
                    unint64_t v61 = v8 + 8 * v60;
                    uint64_t v67 = v66 + 2;
                    if (v67 < (uint64_t)v10 && *(float *)(v61 + 4) > *(float *)(v61 + 12))
                    {
                      v61 += 8LL;
                      uint64_t v60 = v67;
                    }
                  }

                  while (*(float *)(v61 + 4) <= v62);
                  *(_DWORD *)unint64_t v63 = v64;
                  *(float *)(v63 + 4) = v62;
                }
              }

              int64_t v58 = v59 - 1;
            }

            while (v59);
            uint64_t v68 = (unint64_t)v9 >> 3;
            do
            {
              uint64_t v69 = 0LL;
              uint64_t v70 = *(void *)v8;
              unint64_t v71 = v8;
              do
              {
                float v72 = (void *)v71;
                v71 += 8 * (v69 + 1);
                uint64_t v73 = 2 * v69;
                uint64_t v69 = (2 * v69) | 1;
                uint64_t v74 = v73 + 2;
                if (v74 < v68 && *(float *)(v71 + 4) > *(float *)(v71 + 12))
                {
                  v71 += 8LL;
                  uint64_t v69 = v74;
                }

                void *v72 = *(void *)v71;
              }

              while (v69 <= (uint64_t)((unint64_t)(v68 - 2) >> 1));
              a2 -= 2;
              if ((float *)v71 == a2)
              {
                *(void *)unint64_t v71 = v70;
              }

              else
              {
                *(void *)unint64_t v71 = *(void *)a2;
                *(void *)a2 = v70;
                uint64_t v75 = v71 - v8 + 8;
                if (v75 >= 9)
                {
                  unint64_t v76 = (((unint64_t)v75 >> 3) - 2) >> 1;
                  float v77 = *(float *)(v71 + 4);
                  if (*(float *)(v8 + 8 * v76 + 4) > v77)
                  {
                    int v78 = *(_DWORD *)v71;
                    do
                    {
                      __int16 v79 = (void *)v71;
                      unint64_t v71 = v8 + 8 * v76;
                      void *v79 = *(void *)v71;
                      if (!v76) {
                        break;
                      }
                      unint64_t v76 = (v76 - 1) >> 1;
                    }

                    while (*(float *)(v8 + 8 * v76 + 4) > v77);
                    *(_DWORD *)unint64_t v71 = v78;
                    *(float *)(v71 + 4) = v77;
                  }
                }
              }
            }

            while (v68-- > 2);
          }

          return result;
        }

        unint64_t v11 = v10 >> 1;
        __int128 v12 = (float *)(v8 + 8 * (v10 >> 1));
        if ((unint64_t)v9 < 0x401)
        {
          BOOL result = sub_100950830(&v7[2 * (v10 >> 1)], v7, a2 - 2);
        }

        else
        {
          sub_100950830(v7, &v7[2 * (v10 >> 1)], a2 - 2);
          sub_100950830(v7 + 2, v12 - 2, a2 - 4);
          sub_100950830(v7 + 4, &v7[2 * v11 + 2], a2 - 6);
          BOOL result = sub_100950830(v12 - 2, v12, &v7[2 * v11 + 2]);
          uint64_t v13 = *(void *)v7;
          *(void *)float v7 = *(void *)v12;
          *(void *)__int128 v12 = v13;
        }

        --a3;
        if ((a4 & 1) == 0)
        {
          float v14 = v7[1];
          if (*(v7 - 1) > v14) {
            goto LABEL_12;
          }
          if (*(a2 - 1) >= v14)
          {
            __int128 v31 = v7 + 2;
            do
            {
              unint64_t v8 = (unint64_t)v31;
              if (v31 >= a2) {
                break;
              }
              float v32 = v31[1];
              v31 += 2;
            }

            while (v32 >= v14);
          }

          else
          {
            __int128 v29 = v7;
            do
            {
              unint64_t v8 = (unint64_t)(v29 + 2);
              float v30 = v29[3];
              v29 += 2;
            }

            while (v30 >= v14);
          }

          __int128 v33 = a2;
          if (v8 < (unint64_t)a2)
          {
            __int128 v34 = a2;
            do
            {
              __int128 v33 = v34 - 2;
              float v35 = *(v34 - 1);
              v34 -= 2;
            }

            while (v35 < v14);
          }

          float v36 = *v7;
          while (v8 < (unint64_t)v33)
          {
            uint64_t v37 = *(void *)v8;
            *(void *)unint64_t v8 = *(void *)v33;
            *(void *)__int128 v33 = v37;
            do
            {
              float v38 = *(float *)(v8 + 12);
              v8 += 8LL;
            }

            while (v38 >= v14);
            do
            {
              float v39 = *(v33 - 1);
              v33 -= 2;
            }

            while (v39 < v14);
          }

          a4 = 0;
          *(float *)(v8 - _Block_object_dispose((const void *)(v1 - 224), 8) = v36;
          *(float *)(v8 - 4) = v14;
          continue;
        }

        float v14 = v7[1];
LABEL_12:
        uint64_t v15 = 0LL;
        float v16 = *v7;
        do
        {
          float v17 = v7[v15 + 3];
          v15 += 2LL;
        }

        while (v17 > v14);
        __int128 v18 = &v7[v15];
        __int128 v19 = a2;
        if (v15 == 2)
        {
          __int128 v22 = a2;
          while (v18 < v22)
          {
            __int128 v20 = v22 - 2;
            float v23 = *(v22 - 1);
            v22 -= 2;
            if (v23 > v14) {
              goto LABEL_22;
            }
          }

          __int128 v20 = v22;
        }

        else
        {
          do
          {
            __int128 v20 = v19 - 2;
            float v21 = *(v19 - 1);
            v19 -= 2;
          }

          while (v21 <= v14);
        }

float *sub_100950830(float *result, float *a2, float *a3)
{
  float v3 = a2[1];
  float v4 = a3[1];
  if (v3 <= result[1])
  {
    if (v4 > v3)
    {
      uint64_t v6 = *(void *)a2;
      *(void *)a2 = *(void *)a3;
      *(void *)a3 = v6;
      if (a2[1] > result[1])
      {
        uint64_t v7 = *(void *)result;
        *(void *)BOOL result = *(void *)a2;
        *(void *)a2 = v7;
      }
    }
  }

  else
  {
    uint64_t v5 = *(void *)result;
    if (v4 <= v3)
    {
      *(void *)BOOL result = *(void *)a2;
      *(void *)a2 = v5;
      *(void *)a2 = *(void *)a3;
    }

    else
    {
      *(void *)BOOL result = *(void *)a3;
    }

    *(void *)a3 = v5;
  }

  return result;
}

BOOL sub_1009508C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 - a1) >> 3;
  BOOL result = 1LL;
  switch(v4)
  {
    case 0LL:
    case 1LL:
      return result;
    case 2LL:
      if (*(float *)(a2 - 4) > *(float *)(a1 + 4))
      {
        uint64_t v6 = *(void *)a1;
        *(void *)a1 = *(void *)(a2 - 8);
        *(void *)(a2 - _Block_object_dispose((const void *)(v1 - 224), 8) = v6;
      }

      return result;
    case 3LL:
      sub_100950830((float *)a1, (float *)(a1 + 8), (float *)(a2 - 8));
      return 1LL;
    case 4LL:
      sub_100950AA0((float *)a1, (float *)(a1 + 8), (float *)(a1 + 16), a2 - 8);
      return 1LL;
    case 5LL:
      sub_100950AA0((float *)a1, (float *)(a1 + 8), (float *)(a1 + 16), a1 + 24);
      if (*(float *)(a2 - 4) > *(float *)(a1 + 28))
      {
        uint64_t v16 = *(void *)(a1 + 24);
        *(void *)(a1 + 24) = *(void *)(a2 - 8);
        *(void *)(a2 - _Block_object_dispose((const void *)(v1 - 224), 8) = v16;
        if (*(float *)(a1 + 28) > *(float *)(a1 + 20))
        {
          uint64_t v18 = *(void *)(a1 + 16);
          uint64_t v17 = *(void *)(a1 + 24);
          *(void *)(a1 + 16) = v17;
          *(void *)(a1 + 24) = v18;
          if (*(float *)(a1 + 12) < *((float *)&v17 + 1))
          {
            uint64_t v19 = *(void *)(a1 + 8);
            *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v17;
            *(void *)(a1 + 16) = v19;
            if (*(float *)(a1 + 4) < *((float *)&v17 + 1))
            {
              uint64_t v20 = *(void *)a1;
              *(void *)a1 = v17;
              *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v20;
            }
          }
        }
      }

      return 1LL;
    default:
      uint64_t v7 = a1 + 16;
      sub_100950830((float *)a1, (float *)(a1 + 8), (float *)(a1 + 16));
      uint64_t v8 = a1 + 24;
      if (a1 + 24 == a2) {
        return 1LL;
      }
      uint64_t v9 = 0LL;
      int v10 = 0;
      break;
  }

  while (1)
  {
    float v11 = *(float *)(v8 + 4);
    if (v11 > *(float *)(v7 + 4))
    {
      int v12 = *(_DWORD *)v8;
      uint64_t v13 = v9;
      while (1)
      {
        *(void *)(a1 + v13 + 24) = *(void *)(a1 + v13 + 16);
        if (v13 == -16) {
          break;
        }
        float v14 = *(float *)(a1 + v13 + 12);
        v13 -= 8LL;
        if (v14 >= v11)
        {
          uint64_t v15 = a1 + v13 + 24;
          goto LABEL_13;
        }
      }

      uint64_t v15 = a1;
LABEL_13:
      *(_DWORD *)uint64_t v15 = v12;
      *(float *)(v15 + 4) = v11;
      if (++v10 == 8) {
        return v8 + 8 == a2;
      }
    }

    uint64_t v7 = v8;
    v9 += 8LL;
    v8 += 8LL;
    if (v8 == a2) {
      return 1LL;
    }
  }

float *sub_100950AA0(float *a1, float *a2, float *a3, uint64_t a4)
{
  BOOL result = sub_100950830(a1, a2, a3);
  if (*(float *)(a4 + 4) > a3[1])
  {
    uint64_t v9 = *(void *)a3;
    *(void *)a3 = *(void *)a4;
    *(void *)a4 = v9;
    if (a3[1] > a2[1])
    {
      uint64_t v10 = *(void *)a2;
      *(void *)a2 = *(void *)a3;
      *(void *)a3 = v10;
      if (a2[1] > a1[1])
      {
        uint64_t v11 = *(void *)a1;
        *(void *)a1 = *(void *)a2;
        *(void *)a2 = v11;
      }
    }
  }

  return result;
}

void *sub_100950B34(uint64_t a1, uint64_t *a2)
{
  float v2 = (void *)(a1 + 8);
  float v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = (void *)(a1 + 8);
  do
  {
    uint64_t v9 = *a2;
    BOOL v6 = sub_1007EC0D8(v3 + 4, &v9);
    uint64_t v7 = v3 + 1;
    if (!v6)
    {
      uint64_t v7 = v3;
      uint64_t v5 = v3;
    }

    float v3 = (void *)*v7;
  }

  while (*v7);
  if (v5 == v2) {
    return v2;
  }
  uint64_t v9 = v5[4];
  if (sub_1007EC0D8(a2, &v9)) {
    return v2;
  }
  return v5;
}

void *sub_100950BC4(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = v4;
        uint64_t v8 = v4 + 4;
        uint64_t v10 = v4[4];
        if (!sub_1007EC0D8(a3, &v10)) {
          break;
        }
        uint64_t v4 = (void *)*v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      uint64_t v10 = *a3;
      if (!sub_1007EC0D8(v8, &v10)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      uint64_t v4 = (void *)v7[1];
    }

    while (v4);
  }

  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }

uint64_t *sub_100950C6C(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, __int128 **a4)
{
  BOOL v6 = (uint64_t **)sub_1006695D4((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    sub_100950D14((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000085FC(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0LL;
    sub_100950D84((uint64_t)v10, 0LL);
  }

  return v7;
}

char *sub_100950D14@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  BOOL v6 = (char *)operator new(0x120uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 224), 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  BOOL result = sub_1002718F0(v6 + 32, *a2);
  *((_DWORD *)v6 + 70) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_100950D6C(_Unwind_Exception *a1)
{
}

void sub_100950D84(uint64_t a1, uint64_t a2)
{
  float v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_100950DC8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

void sub_100950DC8(uint64_t a1)
{
  float v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }
}

void sub_100950E48(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  unint64_t v80 = a2;
  uint64_t v81 = a1;
  while (2)
  {
    uint64_t v8 = v6 - v7;
    uint64_t v9 = 0xEFBEFBEFBEFBEFBFLL * ((v6 - v7) >> 3);
    switch(v9)
    {
      case 0LL:
      case 1LL:
        return;
      case 2LL:
        unint64_t v80 = v6 - 504;
        if (*(_BYTE *)(v6 - 28)) {
          BOOL v40 = *(_BYTE *)(v7 + 476) == 0;
        }
        else {
          BOOL v40 = 0;
        }
        return;
      case 3LL:
        unint64_t v80 = v6 - 504;
        sub_1009519E8(v7, v7 + 504, v6 - 504);
        return;
      case 4LL:
        unint64_t v80 = v6 - 504;
        sub_100952344(v7, v7 + 504, v7 + 1008, v6 - 504);
        return;
      case 5LL:
        unint64_t v80 = v6 - 504;
        sub_1009518C8(v7, v7 + 504, v7 + 1008, v7 + 1512, v6 - 504);
        return;
      default:
        if (v8 <= 12095)
        {
          if ((a4 & 1) != 0)
          {
            if (v7 != v6)
            {
              uint64_t v41 = v7 + 504;
              if (v7 + 504 != v6)
              {
                uint64_t v42 = 0LL;
                uint64_t v43 = v7;
                do
                {
                  uint64_t v44 = v41;
                  if (*(_BYTE *)(v43 + 980)) {
                    BOOL v45 = *(_BYTE *)(v43 + 476) == 0;
                  }
                  else {
                    BOOL v45 = 0;
                  }
                  if (v45 || *(double *)(v43 + 992) < *(double *)(v43 + 488))
                  {
                    sub_100951E70((uint64_t)v84, v41);
                    for (uint64_t i = v42; ; i -= 504LL)
                    {
                      sub_100951D74(v7 + i + 504, v7 + i);
                      if (!i)
                      {
                        uint64_t v48 = v7;
                        goto LABEL_123;
                      }

                      BOOL v47 = v85 && *(_BYTE *)(v7 + i - 28) == 0;
                    }

                    uint64_t v48 = v7 + i;
LABEL_123:
                    sub_100951D74(v48, (uint64_t)v84);
                    sub_100945B18(v84);
                  }

                  uint64_t v41 = v44 + 504;
                  v42 += 504LL;
                  uint64_t v43 = v44;
                }

                while (v44 + 504 != v6);
              }
            }
          }

          else if (v7 != v6)
          {
            uint64_t v75 = v7 + 504;
            while (v75 != v6)
            {
              uint64_t v76 = v75;
              if (*(_BYTE *)(v7 + 980)) {
                BOOL v77 = *(_BYTE *)(v7 + 476) == 0;
              }
              else {
                BOOL v77 = 0;
              }
              if (v77 || *(double *)(v7 + 992) < *(double *)(v7 + 488))
              {
                sub_100951E70((uint64_t)v84, v75);
                do
                {
                  uint64_t v78 = v7;
                  sub_100951D74(v7 + 504, v7);
                  v7 -= 504LL;
                  if (v85) {
                    BOOL v79 = *(_BYTE *)(v78 - 28) == 0;
                  }
                  else {
                    BOOL v79 = 0;
                  }
                }

                while (v79 || v86 < *(double *)(v78 - 16));
                sub_100951D74(v78, (uint64_t)v84);
                sub_100945B18(v84);
              }

              uint64_t v75 = v76 + 504;
              uint64_t v7 = v76;
            }
          }

          return;
        }

        if (!a3)
        {
          if (v7 != v6)
          {
            int64_t v49 = (unint64_t)(v9 - 2) >> 1;
            int64_t v50 = v49;
            do
            {
              int64_t v51 = v50;
              if (v49 >= v50)
              {
                uint64_t v52 = (2 * v50) | 1;
                uint64_t v53 = v7 + 504 * v52;
                if (2 * v50 + 2 < v9)
                {
                  BOOL v54 = *(_BYTE *)(v7 + 504 * v52 + 476) && *(_BYTE *)(v53 + 980) == 0;
                  if (v54 || *(double *)(v7 + 504 * v52 + 488) < *(double *)(v53 + 992))
                  {
                    v53 += 504LL;
                    uint64_t v52 = 2 * v50 + 2;
                  }
                }

                if (*(_BYTE *)(v53 + 476)) {
                  BOOL v55 = *(_BYTE *)(v7 + 504 * v50 + 476) == 0;
                }
                else {
                  BOOL v55 = 0;
                }
                if (!v55 && *(double *)(v53 + 488) >= *(double *)(v7 + 504 * v50 + 488))
                {
                  uint64_t v56 = v7 + 504 * v50;
                  sub_100951E70((uint64_t)v84, v56);
                  do
                  {
                    uint64_t v57 = v53;
                    sub_100951D74(v56, v53);
                    if (v49 < v52) {
                      break;
                    }
                    uint64_t v58 = (2 * v52) | 1;
                    uint64_t v53 = v7 + 504 * v58;
                    if (2 * v52 + 2 < v9)
                    {
                      BOOL v59 = *(_BYTE *)(v7 + 504 * v58 + 476) && *(_BYTE *)(v53 + 980) == 0;
                      if (v59 || *(double *)(v7 + 504 * v58 + 488) < *(double *)(v53 + 992))
                      {
                        v53 += 504LL;
                        uint64_t v58 = 2 * v52 + 2;
                      }
                    }

                    if (*(_BYTE *)(v53 + 476) && v85 == 0) {
                      break;
                    }
                    uint64_t v56 = v57;
                    uint64_t v52 = v58;
                  }

                  while (*(double *)(v53 + 488) >= v86);
                  sub_100951D74(v57, (uint64_t)v84);
                  sub_100945B18(v84);
                }
              }

              int64_t v50 = v51 - 1;
            }

            while (v51);
            int64_t v61 = v8 / 0x1F8uLL;
            do
            {
              sub_100951E70((uint64_t)v82, v7);
              uint64_t v62 = 0LL;
              uint64_t v63 = v7;
              do
              {
                uint64_t v64 = v62 + 1;
                uint64_t v65 = v63 + 504 * (v62 + 1);
                uint64_t v66 = 2 * v62;
                uint64_t v62 = (2 * v62) | 1;
                int64_t v67 = v66 + 2;
                if (v67 < v61)
                {
                  BOOL v68 = *(_BYTE *)(v63 + 504 * v64 + 476) && *(_BYTE *)(v65 + 980) == 0;
                  if (v68 || *(double *)(v63 + 504 * v64 + 488) < *(double *)(v65 + 992))
                  {
                    v65 += 504LL;
                    uint64_t v62 = v67;
                  }
                }

                sub_100951D74(v63, v65);
                uint64_t v63 = v65;
              }

              while (v62 <= (uint64_t)((unint64_t)(v61 - 2) >> 1));
              v6 -= 504LL;
              if (v65 == v6)
              {
                sub_100951D74(v65, (uint64_t)v82);
              }

              else
              {
                sub_100951D74(v65, v6);
                sub_100951D74(v6, (uint64_t)v82);
                uint64_t v69 = v65 - v7 + 504;
                if (v69 >= 505)
                {
                  unint64_t v70 = (v69 / 0x1F8uLL - 2) >> 1;
                  BOOL v71 = *(_BYTE *)(v7 + 504 * v70 + 476) && *(_BYTE *)(v65 + 476) == 0;
                  if (v71 || *(double *)(v7 + 504 * v70 + 488) < *(double *)(v65 + 488))
                  {
                    sub_100951E70((uint64_t)v84, v65);
                    do
                    {
                      uint64_t v72 = v65;
                      uint64_t v65 = v7 + 504 * v70;
                      sub_100951D74(v72, v65);
                      if (!v70) {
                        break;
                      }
                      unint64_t v70 = (v70 - 1) >> 1;
                      BOOL v73 = *(_BYTE *)(v7 + 504 * v70 + 476) && v85 == 0;
                    }

                    while (v73 || *(double *)(v7 + 504 * v70 + 488) < v86);
                    sub_100951D74(v65, (uint64_t)v84);
                    sub_100945B18(v84);
                  }
                }
              }

              sub_100945B18(v82);
            }

            while (v61-- > 2);
          }

          return;
        }

        unint64_t v10 = (unint64_t)v9 >> 1;
        uint64_t v11 = v6 - 504;
        if ((unint64_t)v8 < 0xFC01)
        {
          sub_1009519E8(v7 + 504 * v10, v7, v11);
        }

        else
        {
          sub_1009519E8(v7, v7 + 504 * v10, v11);
          uint64_t v12 = 504 * v10 - 504;
          sub_1009519E8(v81 + 504, v81 + v12, v80 - 1008);
          sub_1009519E8(v81 + 1008, v81 + 504 * v10 + 504, v80 - 1512);
          sub_1009519E8(v81 + v12, v81 + 504 * v10, v81 + 504 * v10 + 504);
          v84[0] = v81 + 504 * v10;
          sub_100951AE8(&v81, v84);
        }

        --a3;
        uint64_t v13 = v81;
        if ((a4 & 1) == 0)
        {
          BOOL v14 = *(_BYTE *)(v81 - 28) && *(_BYTE *)(v81 + 476) == 0;
          if (!v14 && *(double *)(v81 - 16) >= *(double *)(v81 + 488))
          {
            unint64_t v31 = v80;
            unint64_t v83 = v80;
            sub_100951E70((uint64_t)v84, v81);
            int v32 = *(unsigned __int8 *)(v80 - 28);
            if ((!v85 || *(_BYTE *)(v80 - 28)) && v86 >= *(double *)(v80 - 16))
            {
              unint64_t v39 = v13 + 504;
              do
              {
                unint64_t v34 = v39;
                if (v39 >= v80 || v85 && !*(_BYTE *)(v39 + 476)) {
                  break;
                }
                v39 += 504LL;
              }

              while (v86 >= *(double *)(v34 + 488));
            }

            else
            {
              unint64_t v33 = v13 + 504;
              do
              {
                unint64_t v34 = v33;
                if (v85 && !*(_BYTE *)(v33 + 476)) {
                  break;
                }
                v33 += 504LL;
              }

              while (v86 >= *(double *)(v34 + 488));
            }

            v82[0] = v34;
            if (v34 < v80)
            {
              float v35 = (unsigned __int8 *)(v80 - 532);
              if (v85) {
                goto LABEL_70;
              }
LABEL_71:
              while (v86 < *(double *)(v35 + 516))
              {
                while (1)
                {
                  int v32 = *v35;
                  v35 -= 504;
                  if (!v85) {
                    break;
                  }
LABEL_70:
                  if (v32) {
                    goto LABEL_71;
                  }
                }
              }

              unint64_t v31 = (unint64_t)(v35 + 28);
              unint64_t v83 = (unint64_t)(v35 + 28);
            }

            if (v34 < v31)
            {
              do
              {
                sub_100951858(v82, (uint64_t *)&v83);
                uint64_t v36 = v82[0] + 504;
                do
                {
                  unint64_t v34 = v36;
                  if (v85 && !*(_BYTE *)(v36 + 476)) {
                    break;
                  }
                  v36 += 504LL;
                }

                while (v86 >= *(double *)(v34 + 488));
                v82[0] = v34;
                unint64_t v37 = v83;
                do
                {
                  do
                  {
                    v37 -= 504LL;
                    unint64_t v83 = v37;
                  }

                  while (v85 && !*(_BYTE *)(v37 + 476));
                }

                while (v86 < *(double *)(v37 + 488));
              }

              while (v34 < v37);
            }

            uint64_t v38 = v34 - 504;
            if (v34 - 504 != v13) {
              sub_100951D74(v13, v34 - 504);
            }
            sub_100951D74(v38, (uint64_t)v84);
            uint64_t v7 = v82[0];
            sub_100945B18(v84);
            a4 = 0;
            goto LABEL_59;
          }
        }

        unint64_t v15 = v80;
        sub_100951E70((uint64_t)v84, v81);
        for (uint64_t j = 0LL; ; j += 504LL)
        {
          BOOL v17 = *(_BYTE *)(v13 + j + 980) && v85 == 0;
        }

        uint64_t v18 = v13 + j;
        unint64_t v19 = v13 + j + 504;
        v82[0] = v19;
        if (j)
        {
          unint64_t v20 = v80 - 504;
          do
          {
            unint64_t v15 = v20;
            if (*(_BYTE *)(v20 + 476)) {
              BOOL v21 = v85 == 0;
            }
            else {
              BOOL v21 = 0;
            }
            if (v21) {
              break;
            }
            v20 -= 504LL;
          }

          while (*(double *)(v15 + 488) >= v86);
        }

        else
        {
          while (v19 < v15)
          {
            unint64_t v22 = v15 - 504;
            if (*(_BYTE *)(v15 - 28)) {
              BOOL v23 = v85 == 0;
            }
            else {
              BOOL v23 = 0;
            }
            if (!v23)
            {
              double v24 = *(double *)(v15 - 16);
              v15 -= 504LL;
              if (v24 >= v86) {
                continue;
              }
            }

            unint64_t v15 = v22;
            break;
          }
        }

        unint64_t v83 = v15;
        if (v19 < v15)
        {
          do
          {
            sub_100951858(v82, (uint64_t *)&v83);
            unint64_t v25 = v82[0];
            do
            {
              v25 += 504LL;
              if (*(_BYTE *)(v25 + 476)) {
                BOOL v26 = v85 == 0;
              }
              else {
                BOOL v26 = 0;
              }
            }

            while (v26 || *(double *)(v25 + 488) < v86);
            v82[0] = v25;
            unint64_t v27 = v83 - 504;
            do
            {
              unint64_t v28 = v27;
              if (*(_BYTE *)(v27 + 476)) {
                BOOL v29 = v85 == 0;
              }
              else {
                BOOL v29 = 0;
              }
              if (v29) {
                break;
              }
              v27 -= 504LL;
            }

            while (*(double *)(v28 + 488) >= v86);
            unint64_t v83 = v28;
          }

          while (v25 < v28);
          uint64_t v18 = v25 - 504;
        }

        if (v18 != v13) {
          sub_100951D74(v13, v18);
        }
        sub_100951D74(v18, (uint64_t)v84);
        sub_100945B18(v84);
        if (v19 < v15) {
          goto LABEL_58;
        }
        int v30 = sub_100951B58(v81, v18);
        uint64_t v7 = v18 + 504;
        if (!sub_100951B58(v18 + 504, v80))
        {
          if (!v30)
          {
LABEL_58:
            sub_100950E48(v81, v18, a3, a4 & 1);
            a4 = 0;
            uint64_t v7 = v18 + 504;
          }

void sub_1009517FC(_Unwind_Exception *a1)
{
}

void *sub_100951858(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  sub_100951E70((uint64_t)v5, *a1);
  sub_100951D74(v2, v3);
  sub_100951D74(v3, (uint64_t)v5);
  return sub_100945B18(v5);
}

void sub_1009518B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1009518C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v17 = a2;
  uint64_t v18 = a1;
  uint64_t v15 = a4;
  uint64_t v16 = a3;
  uint64_t v14 = a5;
  sub_100952344(a1, a2, a3, a4);
  if (*(_BYTE *)(a5 + 476)) {
    BOOL v10 = *(_BYTE *)(a4 + 476) == 0;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10 || *(double *)(a5 + 488) < *(double *)(a4 + 488))
  {
    sub_100951858(&v15, &v14);
    BOOL v11 = *(_BYTE *)(v15 + 476) && *(_BYTE *)(a3 + 476) == 0;
    if (v11 || *(double *)(v15 + 488) < *(double *)(a3 + 488))
    {
      sub_100951858(&v16, &v15);
      BOOL v12 = *(_BYTE *)(v16 + 476) && *(_BYTE *)(a2 + 476) == 0;
      if (v12 || *(double *)(v16 + 488) < *(double *)(a2 + 488))
      {
        sub_100951858(&v17, &v16);
        if (*(_BYTE *)(v17 + 476)) {
          BOOL v13 = *(_BYTE *)(a1 + 476) == 0;
        }
        else {
          BOOL v13 = 0;
        }
      }
    }
  }

double sub_1009519E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v11 = a3;
  uint64_t v12 = a2;
  double result = *(double *)(a2 + 488);
  if (*(_BYTE *)(a2 + 476)) {
    BOOL v4 = *(_BYTE *)(a1 + 476) == 0;
  }
  else {
    BOOL v4 = 0;
  }
  if (!v4)
  {
    if (*(_BYTE *)(a2 + 476)) {
      BOOL v5 = 1;
    }
    else {
      BOOL v5 = *(_BYTE *)(a3 + 476) == 0;
    }
    char v6 = !v5;
    if (result >= *(double *)(a1 + 488))
    {
      if ((v6 & 1) != 0 || *(double *)(a3 + 488) < result)
      {
        sub_100951858(&v12, &v11);
        BOOL v10 = *(_BYTE *)(v12 + 476) && *(_BYTE *)(v13 + 476) == 0;
        if (v10 || (double result = *(double *)(v12 + 488), result < *(double *)(v13 + 488)))
        {
          uint64_t v7 = &v13;
          uint64_t v9 = &v12;
          goto LABEL_22;
        }
      }

      return result;
    }

    if ((v6 & 1) != 0)
    {
LABEL_14:
      uint64_t v7 = &v13;
LABEL_21:
      uint64_t v9 = &v11;
LABEL_22:
      sub_100951858(v7, v9);
      return result;
    }
  }

  sub_100951858(&v13, &v12);
  if (*(_BYTE *)(v11 + 476)) {
    BOOL v8 = *(_BYTE *)(v12 + 476) == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8 || (double result = *(double *)(v11 + 488), result < *(double *)(v12 + 488)))
  {
    uint64_t v7 = &v12;
    goto LABEL_21;
  }

  return result;
}

void *sub_100951AE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  sub_100951E70((uint64_t)v5, *a1);
  sub_100951D74(v2, v3);
  sub_100951D74(v3, (uint64_t)v5);
  return sub_100945B18(v5);
}

void sub_100951B44(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100951B58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v17 = a2;
  uint64_t v18 = a1;
  BOOL v4 = 1LL;
  switch(0xEFBEFBEFBEFBEFBFLL * ((a2 - a1) >> 3))
  {
    case 0uLL:
    case 1uLL:
      return v4;
    case 2uLL:
      uint64_t v17 = a2 - 504;
      if (*(_BYTE *)(a2 - 28)) {
        BOOL v5 = *(_BYTE *)(a1 + 476) == 0;
      }
      else {
        BOOL v5 = 0;
      }
      return v4;
    case 3uLL:
      sub_1009519E8(a1, a1 + 504, a2 - 504);
      return v4;
    case 4uLL:
      sub_100952344(a1, a1 + 504, a1 + 1008, a2 - 504);
      return v4;
    case 5uLL:
      sub_1009518C8(a1, a1 + 504, a1 + 1008, a1 + 1512, a2 - 504);
      return v4;
    default:
      uint64_t v6 = a1 + 1008;
      sub_1009519E8(a1, a1 + 504, a1 + 1008);
      uint64_t v7 = a1 + 1512;
      if (a1 + 1512 == v2) {
        return 1LL;
      }
      int v8 = 0;
      uint64_t v9 = a1 + 980;
      break;
  }

  while (1)
  {
    if (*(_BYTE *)(v7 + 476)) {
      BOOL v10 = *(_BYTE *)(v6 + 476) == 0;
    }
    else {
      BOOL v10 = 0;
    }
    sub_100951E70((uint64_t)v14, v7);
    for (uint64_t i = v9; ; i -= 504LL)
    {
      sub_100951D74(i + 532, i + 28);
      if (i + 28 == v18) {
        break;
      }
      BOOL v12 = v15 && *(_BYTE *)i == 0;
    }

    sub_100951D74(i + 28, (uint64_t)v14);
    if (++v8 == 8) {
      break;
    }
    sub_100945B18(v14);
    uint64_t v2 = v17;
LABEL_25:
    uint64_t v6 = v7;
    v9 += 504LL;
    v7 += 504LL;
    if (v7 == v2) {
      return 1LL;
    }
  }

  BOOL v4 = v7 + 504 == v17;
  sub_100945B18(v14);
  return v4;
}

void sub_100951D5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100951D74(uint64_t a1, uint64_t a2)
{
  if (a1 == a2)
  {
    sub_1009485F8(a1 + 32, a2 + 32);
    *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
    __int128 v6 = *(_OWORD *)(a2 + 400);
    __int128 v7 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v7;
    *(_OWORD *)(a1 + 400) = v6;
  }

  else
  {
    sub_100952104( (char *)(a1 + 8),  *(char **)(a2 + 8),  *(void *)(a2 + 16),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 5));
    sub_1009485F8(a1 + 32, a2 + 32);
    sub_100952104( (char *)(a1 + 344),  *(char **)(a2 + 344),  *(void *)(a2 + 352),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 352) - *(void *)(a2 + 344)) >> 5));
    sub_1005F6B84( (char *)(a1 + 368),  *(char **)(a2 + 368),  *(void *)(a2 + 376),  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 376) - *(void *)(a2 + 368)) >> 3));
    *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
    __int128 v4 = *(_OWORD *)(a2 + 400);
    __int128 v5 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v5;
    *(_OWORD *)(a1 + 400) = v4;
    sub_10095223C( (char *)(a1 + 448),  *(char **)(a2 + 448),  *(void *)(a2 + 456),  (uint64_t)(*(void *)(a2 + 456) - *(void *)(a2 + 448)) >> 6);
  }

  __int128 v8 = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 48_Block_object_dispose((const void *)(v1 - 224), 8) = v8;
  return a1;
}

uint64_t sub_100951E70(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_101861E50;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  sub_100951FD4( (void *)(a1 + 8),  *(const void **)(a2 + 8),  *(void *)(a2 + 16),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 5));
  sub_100700714(a1 + 32, a2 + 32);
  *(void *)(a1 + 344) = 0LL;
  *(void *)(a1 + 352) = 0LL;
  *(void *)(a1 + 360) = 0LL;
  sub_100951FD4( (void *)(a1 + 344),  *(const void **)(a2 + 344),  *(void *)(a2 + 352),  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 352) - *(void *)(a2 + 344)) >> 5));
  *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 376) = 0LL;
  *(void *)(a1 + 384) = 0LL;
  sub_1006099EC( (void *)(a1 + 368),  *(const void **)(a2 + 368),  *(void *)(a2 + 376),  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 376) - *(void *)(a2 + 368)) >> 3));
  *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
  __int128 v4 = *(_OWORD *)(a2 + 400);
  __int128 v5 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v5;
  *(_OWORD *)(a1 + 400) = v4;
  *(void *)(a1 + 456) = 0LL;
  *(void *)(a1 + 464) = 0LL;
  *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  sub_10095204C( (void *)(a1 + 448),  *(const void **)(a2 + 448),  *(void *)(a2 + 456),  (uint64_t)(*(void *)(a2 + 456) - *(void *)(a2 + 448)) >> 6);
  __int128 v6 = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 48_Block_object_dispose((const void *)(v1 - 224), 8) = v6;
  return a1;
}

void sub_100951F80(_Unwind_Exception *a1)
{
  __int128 v5 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v5;
    operator delete(v5);
  }

  _Unwind_Resume(a1);
}

void *sub_100951FD4(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    __int128 v6 = result;
    double result = sub_1003F9CE8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      double result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_100952030(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void *sub_10095204C(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    __int128 v6 = result;
    double result = sub_1009520C4(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      double result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_1009520A8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

char *sub_1009520C4(void *a1, unint64_t a2)
{
  if (a2 >> 58) {
    sub_100007008();
  }
  double result = (char *)sub_10001275C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[64 * v4];
  return result;
}

char *sub_100952104(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *(void *)result) >> 5) < a4)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0LL;
      *uint64_t v7 = 0LL;
      v7[1] = 0LL;
      v7[2] = 0LL;
    }

    if (a4 > 0x2AAAAAAAAAAAAAALL) {
      sub_100007008();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 5);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= a4) {
      uint64_t v11 = a4;
    }
    if (v10 >= 0x155555555555555LL) {
      unint64_t v12 = 0x2AAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v12 = v11;
    }
    double result = sub_1003F9CE8(v7, v12);
    uint64_t v14 = (char *)v7[1];
    uint64_t v13 = (void **)(v7 + 1);
    uint64_t v9 = v14;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      unint64_t v19 = __src;
      goto LABEL_18;
    }

    goto LABEL_19;
  }

  uint64_t v13 = (void **)(result + 8);
  char v15 = (_BYTE *)*((void *)result + 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v15 - v9) >> 5) >= a4) {
    goto LABEL_16;
  }
  double v16 = &__src[32 * ((v15 - v9) >> 5)];
  if (v15 != v9)
  {
    double result = (char *)memmove(*(void **)result, __src, v15 - v9);
    uint64_t v9 = (char *)*v13;
  }

  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    unint64_t v19 = v16;
LABEL_18:
    double result = (char *)memmove(v18, v19, v17);
  }

char *sub_10095223C(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 6)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0LL;
      *uint64_t v7 = 0LL;
      v7[1] = 0LL;
      v7[2] = 0LL;
    }

    if (a4 >> 58) {
      sub_100007008();
    }
    uint64_t v10 = v8 >> 5;
    if (v8 >> 5 <= a4) {
      uint64_t v10 = a4;
    }
    else {
      unint64_t v11 = v10;
    }
    double result = sub_1009520C4(v7, v11);
    uint64_t v13 = (char *)v7[1];
    unint64_t v12 = (void **)(v7 + 1);
    uint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      uint64_t v18 = v9;
      unint64_t v19 = __src;
      goto LABEL_18;
    }

    goto LABEL_19;
  }

  unint64_t v12 = (void **)(result + 8);
  uint64_t v14 = (_BYTE *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 6;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  double v16 = &__src[64 * v15];
  if (v14 != v9)
  {
    double result = (char *)memmove(*(void **)result, __src, v14 - v9);
    uint64_t v9 = (char *)*v12;
  }

  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    uint64_t v18 = v9;
    unint64_t v19 = v16;
LABEL_18:
    double result = (char *)memmove(v18, v19, v17);
  }

void sub_100952344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a2;
  uint64_t v14 = a1;
  uint64_t v11 = a4;
  uint64_t v12 = a3;
  sub_1009519E8(a1, a2, a3);
  if (*(_BYTE *)(a4 + 476)) {
    BOOL v8 = *(_BYTE *)(a3 + 476) == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8 || *(double *)(a4 + 488) < *(double *)(a3 + 488))
  {
    sub_100951858(&v12, &v11);
    BOOL v9 = *(_BYTE *)(v12 + 476) && *(_BYTE *)(a2 + 476) == 0;
    if (v9 || *(double *)(v12 + 488) < *(double *)(a2 + 488))
    {
      sub_100951858(&v13, &v12);
      if (*(_BYTE *)(v13 + 476)) {
        BOOL v10 = *(_BYTE *)(a1 + 476) == 0;
      }
      else {
        BOOL v10 = 0;
      }
    }
  }

void sub_100952420()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_100952484()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_1009524F8(_Unwind_Exception *a1)
{
}

BOOL sub_100952510(unsigned int a1, unsigned int *a2)
{
  if (a1 <= 2) {
    *a2 = a1;
  }
  return a1 < 3;
}

void sub_1009525CC(id a1)
{
  qword_101999800 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLSignificantChangeManagerSilo");
}

void *sub_100952680(void *a1)
{
  uint64_t v2 = operator new(0x1D8uLL);
  sub_100952994((uint64_t)v2, a1);
  return v2;
}

void sub_1009526B4(_Unwind_Exception *a1)
{
}

void sub_100952804(uint64_t a1, void *a2)
{
  if (qword_1019349F0 != -1) {
    dispatch_once(&qword_1019349F0, &stru_1018620D0);
  }
  uint64_t v4 = (os_log_s *)qword_1019349F8;
  if (os_log_type_enabled((os_log_t)qword_1019349F8, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)&v11[0] = 68289026LL;
    WORD4(v11[0]) = 2082;
    *(void *)((char *)v11 + 10) = "";
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:SLC simulation request received by CLSignificantChangeManager}",  (uint8_t *)v11,  0x12u);
  }

  *(void *)(a1 + 184) = 0LL;
  objc_msgSend(objc_msgSend(a2, "timestamp"), "timeIntervalSinceReferenceDate");
  *(double *)(a1 + 192) = v5 - *(double *)(a1 + 276);
  if (a2)
  {
    [a2 clientLocation];
  }

  else
  {
    __int128 v17 = 0u;
    memset(v18, 0, 28);
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    __int128 v13 = 0u;
    __int128 v14 = 0u;
    __int128 v12 = 0u;
    memset(v11, 0, sizeof(v11));
  }

  __int128 v6 = v13;
  *(_OWORD *)(a1 + 232) = v12;
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = v6;
  __int128 v7 = v11[1];
  *(_OWORD *)(a1 + 200) = v11[0];
  *(_OWORD *)(a1 + 216) = v7;
  __int128 v8 = v17;
  *(_OWORD *)(a1 + 296) = v16;
  *(_OWORD *)(a1 + 312) = v8;
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = v18[0];
  *(_OWORD *)(a1 + 340) = *(_OWORD *)((char *)v18 + 12);
  __int128 v9 = v15;
  *(_OWORD *)(a1 + 264) = v14;
  *(_OWORD *)(a1 + 280) = v9;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  *(CFAbsoluteTime *)(a1 + 276) = Current;
  *(CFAbsoluteTime *)(a1 + 40_Block_object_dispose((const void *)(v1 - 224), 8) = Current;
  sub_100956478(a1);
}

uint64_t sub_100952994(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_100479C24(a1, "FenceManager", a2);
  *uint64_t v3 = off_101861EE0;
  sub_100D2D9A4((uint64_t)(v3 + 15));
  *(_BYTE *)(a1 + 160) = 0;
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 176) = -[CLSettingsMirror initInUniverse:]( objc_alloc(&OBJC_CLASS___CLSettingsMirror),  "initInUniverse:",  *(void *)(a1 + 32));
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 184) = _Q0;
  *(_DWORD *)(a1 + 200) = 0xFFFF;
  *(void *)(a1 + 212) = 0LL;
  *(void *)(a1 + 204) = 0LL;
  *(_OWORD *)(a1 + 220) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 236) = _Q0;
  *(_OWORD *)(a1 + 252) = _Q0;
  *(_OWORD *)(a1 + 26_Block_object_dispose((const void *)(v1 - 224), 8) = _Q0;
  *(_DWORD *)(a1 + 284) = 0;
  *(void *)(a1 + 296) = 0LL;
  *(void *)(a1 + 304) = 0LL;
  *(void *)(a1 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 312) = 0;
  *(void *)(a1 + 316) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 324) = 0x7FFFFFFF;
  *(void *)(a1 + 336) = 0LL;
  *(void *)(a1 + 344) = 0LL;
  *(void *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_BYTE *)(a1 + 352) = 0;
  *(_WORD *)(a1 + 356) = 0;
  int64x2_t v9 = vdupq_n_s64(0x7FF0000000000000uLL);
  *(int64x2_t *)(a1 + 360) = v9;
  *(_BYTE *)(a1 + 376) = 0;
  *(int64x2_t *)(a1 + 384) = v9;
  *(_BYTE *)(a1 + 400) = 0;
  *(void *)(a1 + 416) = 0LL;
  *(void *)(a1 + 424) = 0LL;
  *(void *)(a1 + 40_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_BYTE *)(a1 + 432) = 1;
  *(void *)(a1 + 440) = 0x4000000000000000LL;
  *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_BYTE *)(a1 + 456) = 0;
  *(void *)(a1 + 464) =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:forClient:",  @"CLClientAuthorizationCache",  @"CLSignificantChangeManager");
  sub_10047D7E0(a1, 0);
  sub_100583844((uint64_t)sub_100953394, a1, *(void **)(a1 + 32), buf);
  uint64_t v10 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  uint64_t v11 = *(void *)(a1 + 424);
  *(void *)(a1 + 424) = v10;
  if (v11)
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    uint64_t v12 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
  }

  [*(id *)(*(void *)(a1 + 424) + 16) register:*(void *)(*(void *)(a1 + 424) + 8) forNotification:4 registrationInfo:0];
  memset(&v42, 0, sizeof(v42));
  std::string::operator=(&v42, (const std::string *)&qword_1019997E8);
  [*(id *)(*(void *)(a1 + 424) + 16) register:*(void *)(*(void *)(a1 + 424) + 8) forNotification:0 registrationInfo:sub_10120E548((uint64_t)&v42)];
  sub_100D311BC((uint64_t)sub_10095356C, a1, *(void **)(a1 + 32), buf);
  uint64_t v13 = *(void *)buf;
  *(void *)std::stringbuf::string_type buf = 0LL;
  uint64_t v14 = *(void *)(a1 + 416);
  *(void *)(a1 + 416) = v13;
  if (v14)
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
    uint64_t v15 = *(void *)buf;
    *(void *)std::stringbuf::string_type buf = 0LL;
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
    }
  }

  char v16 = sub_1001B9A1C();
  *(int64x2_t *)(a1 + 384) = vdupq_n_s64(0x408C200000000000uLL);
  *(_BYTE *)(a1 + 400) = v16 ^ 1;
  *(int64x2_t *)(a1 + 360) = vdupq_n_s64(0x40AC200000000000uLL);
  *(_BYTE *)(a1 + 376) = v16 ^ 1;
  v41[0] = _NSConcreteStackBlock;
  v41[1] = 3221225472LL;
  v41[2] = sub_10095373C;
  v41[3] = &unk_10183FFC8;
  v41[4] = a1;
  [*(id *)(a1 + 176) setSettingsChangeHandler:v41];
  id v17 = [*(id *)(a1 + 176) dictionaryForKey:@"SLCAwarenessParameters" defaultValue:0];
  if (v17)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    uint64_t v18 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      __int16 v46 = 2114;
      id v47 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#SLC Overriding awareness parameters, foundParameters:%{public, location:escape_only}@}",  buf,  0x1Cu);
    }

    sub_100D3178C((double *)(a1 + 360), v17);
  }

  dword_101999810 = [*(id *)(a1 + 176) intForKey:@"SLCShowUI" defaultValue:0];
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101862090);
  }
  unint64_t v19 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = dword_101999810;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "#SLC gSLCShowUI, %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    int v43 = 67109120;
    LODWORD(v44) = dword_101999810;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "#SLC gSLCShowUI, %d",  &v43);
    int v30 = (char *)v29;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignificantChangeManager::CLSignificantChangeManager(id<CLIntersiloUniverse>)",  "%s\n",  v29);
    if (v30 != buf) {
      free(v30);
    }
  }

  unint64_t v20 = *(void **)(a1 + 40);
  v40[0] = _NSConcreteStackBlock;
  v40[1] = 3221225472LL;
  v40[2] = sub_100953C2C;
  v40[3] = &unk_10181D3D0;
  v40[4] = a1;
  [v20 async:v40];
  *(_BYTE *)(a1 + 432) = [*(id *)(a1 + 176) BOOLForKey:@"SLCConsolidateTriggersEnabled" defaultValue:*(unsigned __int8 *)(a1 + 432)];
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101862090);
  }
  BOOL v21 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    int v22 = *(unsigned __int8 *)(a1 + 432);
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v22;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "#SLC fIsConsolidateTriggersEnabled, %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    int v31 = *(unsigned __int8 *)(a1 + 432);
    int v43 = 67109120;
    LODWORD(v44) = v31;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "#SLC fIsConsolidateTriggersEnabled, %d",  &v43);
    unint64_t v33 = (char *)v32;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignificantChangeManager::CLSignificantChangeManager(id<CLIntersiloUniverse>)",  "%s\n",  v32);
    if (v33 != buf) {
      free(v33);
    }
  }

  [*(id *)(a1 + 176) doubleForKey:@"SLCConsolidatedTriggersTimeInterval" defaultValue:*(double *)(a1 + 440)];
  *(void *)(a1 + 440) = v23;
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101862090);
  }
  double v24 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v25 = *(void *)(a1 + 440);
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    *(void *)&uint8_t buf[4] = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "#SLC fConsolidatedTriggersTimeInterval, %.1lf",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    uint64_t v34 = *(void *)(a1 + 440);
    int v43 = 134217984;
    uint64_t v44 = v34;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "#SLC fConsolidatedTriggersTimeInterval, %.1lf",  COERCE_DOUBLE(&v43));
    uint64_t v36 = (char *)v35;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSignificantChangeManager::CLSignificantChangeManager(id<CLIntersiloUniverse>)",  "%s\n",  v35);
    if (v36 != buf) {
      free(v36);
    }
  }

  if (*(_BYTE *)(a1 + 432))
  {
    id v26 = [*(id *)(a1 + 40) newTimer];
    *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = v26;
    if (v26)
    {
      v39[0] = _NSConcreteStackBlock;
      v39[1] = 3221225472LL;
      v39[2] = sub_100953DE8;
      v39[3] = &unk_10181D3D0;
      v39[4] = a1;
      [v26 setHandler:v39];
      [*(id *)(a1 + 448) setFireInterval:43200.0];
    }

    else
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101862090);
      }
      unint64_t v27 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_FAULT,  "#SLC failed to allocate, fConsolidatedTrigger",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101862090);
        }
        LOWORD(v43) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  17LL,  "#SLC failed to allocate, fConsolidatedTrigger",  &v43,  2);
        uint64_t v38 = (char *)v37;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLSignificantChangeManager::CLSignificantChangeManager(id<CLIntersiloUniverse>)",  "%s\n",  v37);
        if (v38 != buf) {
          free(v38);
        }
      }

      *(_BYTE *)(a1 + 432) = 0;
    }
  }

  *(_BYTE *)(a1 + 160) = 0;
  return a1;
}

void sub_100953308( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, void *__p, uint64_t a27, int a28, __int16 a29, char a30, char a31)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  uint64_t v33 = *(void *)(v31 + 424);
  *(void *)(v31 + 424) = 0LL;
  if (v33) {
    (*(void (**)(uint64_t))(*(void *)v33 + 8LL))(v33);
  }
  uint64_t v34 = *(void *)(v31 + 416);
  *(void *)(v31 + 416) = 0LL;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
  }
  sub_10047A1C0(v31);
  _Unwind_Resume(a1);
}

void sub_100953394(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101862070);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLSignificantChangeManager::onClientNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101862070);
    }
    int64x2_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      id v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLSignificantChangeManager::onClientNotification, event:%{public, location:escape_o nly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100956F18(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10095354C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10095356C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101862070);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLSignificantChangeManager::onAwarenessNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101862070);
    }
    int64x2_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      id v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLSignificantChangeManager::onAwarenessNotification, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100956DD0(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10095371C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10095373C(uint64_t a1)
{
}

void sub_100953744(uint64_t a1)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101862090);
  }
  uint64_t v2 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "#SLC onSettingsNotification", (uint8_t *)buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    LOWORD(v32) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "#SLC onSettingsNotification",  &v32,  2);
    unint64_t v27 = (std::stringbuf::string_type *)v26;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSignificantChangeManager::refreshSettings()", "%s\n", v26);
    if (v27 != buf) {
      free(v27);
    }
  }

  id v3 = [*(id *)(a1 + 176) dictionaryForKey:@"SpoofSignificantLocationChange" defaultValue:0];
  if ([v3 hasValueForKey:@"Latitude"]
    && [v3 hasValueForKey:@"Longitude"])
  {
    __int128 v4 = *(_OWORD *)(a1 + 248);
    __int128 v34 = *(_OWORD *)(a1 + 232);
    __int128 v35 = v4;
    __int128 v5 = *(_OWORD *)(a1 + 216);
    __int128 v32 = *(_OWORD *)(a1 + 200);
    __int128 v33 = v5;
    __int128 v6 = *(_OWORD *)(a1 + 312);
    __int128 v38 = *(_OWORD *)(a1 + 296);
    __int128 v39 = v6;
    v40[0] = *(_OWORD *)(a1 + 328);
    *(_OWORD *)((char *)v40 + 12) = *(_OWORD *)(a1 + 340);
    __int128 v7 = *(_OWORD *)(a1 + 280);
    __int128 v36 = *(_OWORD *)(a1 + 264);
    __int128 v37 = v7;
    [v3 doubleForKey:@"Latitude" defaultValue:0.0];
    uint64_t v9 = v8;
    [v3 doubleForKey:@"Longitude" defaultValue:0.0];
    uint64_t v11 = v10;
    [*(id *)(a1 + 176) doubleForKey:@"Timestamp" defaultValue:CFAbsoluteTimeGetCurrent()];
    uint64_t v13 = v12;
    [*(id *)(a1 + 176) doubleForKey:@"HorizontalAccuracy" defaultValue:1.0];
    *(_DWORD *)(a1 + 200) = 0xFFFF;
    *(void *)(a1 + 204) = v9;
    *(void *)(a1 + 212) = v11;
    *(void *)(a1 + 220) = v14;
    *(_OWORD *)(a1 + 22_Block_object_dispose((const void *)(v1 - 224), 8) = xmmword_1012EA5D0;
    __asm { FMOV            V0.2D, #-1.0 }

    *(_OWORD *)(a1 + 244) = _Q0;
    *(_OWORD *)(a1 + 260) = _Q0;
    *(void *)(a1 + 276) = v13;
    *(_DWORD *)(a1 + 284) = 0;
    *(void *)(a1 + 296) = 0LL;
    *(void *)(a1 + 304) = 0LL;
    *(void *)(a1 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
    *(_DWORD *)(a1 + 312) = 0;
    *(void *)(a1 + 316) = 0xBFF0000000000000LL;
    *(_DWORD *)(a1 + 324) = 0x7FFFFFFF;
    *(void *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = &_mh_execute_header;
    *(void *)(a1 + 336) = 0LL;
    *(void *)(a1 + 344) = 0LL;
    *(_BYTE *)(a1 + 352) = 0;
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    unint64_t v20 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      sub_100832C64(a1 + 200, buf);
      BOOL v21 = (buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0
          ? buf
          : (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
      LODWORD(v41.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)v41.__r_.__value_.__r.__words + 4) = (std::string::size_type)v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#SLC Spoofing a Significant Location Change: %s",  (uint8_t *)&v41,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101862090);
      }
      uint64_t v28 = qword_101934988;
      sub_100832C64(a1 + 200, &v41);
      if ((v41.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        BOOL v29 = &v41;
      }
      else {
        BOOL v29 = (std::stringbuf::string_type *)v41.__r_.__value_.__r.__words[0];
      }
      int v42 = 136315138;
      int v43 = v29;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v28,  2LL,  "#SLC Spoofing a Significant Location Change: %s",  (const char *)&v42);
      uint64_t v31 = v30;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignificantChangeManager::refreshSettings()",  "%s\n",  (const char *)v31);
      if (v31 != buf) {
        free(v31);
      }
    }

    sub_100956478(a1);
    __int128 v22 = v39;
    *(_OWORD *)(a1 + 296) = v38;
    *(_OWORD *)(a1 + 312) = v22;
    *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = v40[0];
    *(_OWORD *)(a1 + 340) = *(_OWORD *)((char *)v40 + 12);
    __int128 v23 = v35;
    *(_OWORD *)(a1 + 232) = v34;
    *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = v23;
    __int128 v24 = v37;
    *(_OWORD *)(a1 + 264) = v36;
    *(_OWORD *)(a1 + 280) = v24;
    __int128 v25 = v33;
    *(_OWORD *)(a1 + 200) = v32;
    *(_OWORD *)(a1 + 216) = v25;
    *(_BYTE *)(a1 + 357) = 1;
  }

  else if (*(_BYTE *)(a1 + 357))
  {
    *(_BYTE *)(a1 + 357) = 0;
  }

void sub_100953C2C(uint64_t a1)
{
}

void sub_100953C34(uint64_t a1)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101862090);
  }
  uint64_t v2 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "#SLC Booting up", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  1LL,  "#SLC Booting up",  v6,  2);
    __int128 v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignificantChangeManager::onStartSLC(CLPersistentTimer *)",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  uint64_t v3 = *(void *)(a1 + 168);
  if (v3) {
    sub_1006B6014(v3, 1.79769313e308);
  }
  *(_BYTE *)(a1 + 160) = 1;
  sub_100954208((_BYTE *)a1);
}

void sub_100953DE8(uint64_t a1)
{
}

void sub_100953DF0(uint64_t a1)
{
  if (*(void *)(a1 + 448))
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    uint64_t v2 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "#SLC onConsolidatedTrigger, calling requestLocationUpdate",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101862090);
      }
      v8[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "#SLC onConsolidatedTrigger, calling requestLocationUpdate",  v8,  2);
      __int128 v5 = (uint8_t *)v4;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSignificantChangeManager::onConsolidatedTrigger()", "%s\n", v4);
      if (v5 != buf) {
        free(v5);
      }
    }

    sub_100956B48(a1);
    [*(id *)(a1 + 448) setNextFireDelay:1.79769313e308];
    *(_BYTE *)(a1 + 456) = 0;
  }

  else
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    uint64_t v3 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "#SLC ignore, onConsolidatedTrigger, shutdown?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101862090);
      }
      v8[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "#SLC ignore, onConsolidatedTrigger, shutdown?",  v8,  2);
      __int128 v7 = (uint8_t *)v6;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSignificantChangeManager::onConsolidatedTrigger()", "%s\n", v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

uint64_t sub_1009540D0(void *a1)
{
  *a1 = off_101861EE0;
  sub_10095414C((uint64_t)a1);
  uint64_t v2 = a1[53];
  a1[53] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = a1[52];
  a1[52] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  return sub_10047A1C0(a1);
}

void sub_100954138(void *a1)
{
  uint64_t v1 = (void *)sub_1009540D0(a1);
  operator delete(v1);
}

void sub_10095414C(uint64_t a1)
{
  *(void *)(a1 + 464) = 0LL;
  [*(id *)(a1 + 448) invalidate];

  *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  uint64_t v2 = *(void *)(a1 + 424);
  *(void *)(a1 + 424) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 416);
  *(void *)(a1 + 416) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 168);
  if (v4)
  {
    __int128 v5 = (void *)sub_1006B6010(v4);
    operator delete(v5);
    *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  }

  [*(id *)(a1 + 176) invalidate];
}

BOOL sub_1009541D8(_BYTE *a1, int a2, unsigned int *a3, uint64_t *a4)
{
  BOOL v5 = sub_10047A214((uint64_t)a1, a2, a3, a4);
  sub_100954208(a1);
  return v5;
}

void sub_100954208(_BYTE *a1)
{
  if (a1[160])
  {
    v5[0] = 0;
    int v2 = sub_100247620((uint64_t)a1, v5, 1LL);
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    uint64_t v3 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      int v4 = a1[356];
      v5[0] = 68289538;
      v5[1] = 0;
      __int16 v6 = 2082;
      __int128 v7 = "";
      __int16 v8 = 1026;
      int v9 = v4;
      __int16 v10 = 1026;
      BOOL v11 = v2 != 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#SLC Checking whether we should be monitoring, activeNow:%{public}hhd, hasNotifie rClients:%{public}hhd}",  (uint8_t *)v5,  0x1Eu);
    }

    if (a1[356])
    {
      if (!v2) {
        sub_1009565FC(a1);
      }
    }

    else if (v2)
    {
      sub_1009566F4((uint64_t)a1);
    }
  }

BOOL sub_100954348(char *a1, int a2, int *a3)
{
  BOOL v4 = sub_10047A484(a1, a2, a3);
  sub_100954208(a1);
  return v4;
}

void sub_100954378(double a1, uint64_t a2, uint64_t a3)
{
  if (dword_101999810)
  {
    BOOL v5 = +[NSDate date](&OBJC_CLASS___NSDate, "date");
    __int16 v6 = -[NSCalendar components:fromDate:]( +[NSCalendar currentCalendar](&OBJC_CLASS___NSCalendar, "currentCalendar"),  "components:fromDate:",  252LL,  v5);
    if (sub_100292108())
    {
      __int16 v8 = sub_100832C40(*(_DWORD *)(a3 + 96));
      __int128 v17 = *(_OWORD *)(a3 + 4);
      uint64_t v9 = *(void *)(a3 + 20);
      id v10 = -[NSDateComponents month](v6, "month");
      id v11 = -[NSDateComponents day](v6, "day");
      id v12 = -[NSDateComponents hour](v6, "hour");
      id v13 = -[NSDateComponents minute](v6, "minute");
      id v14 = -[NSDateComponents second](v6, "second");
      -[NSDate timeIntervalSinceReferenceDate](v5, "timeIntervalSinceReferenceDate");
      __int16 v16 = CFStringCreateWithFormat( kCFAllocatorDefault,  0LL,  @"location: %s\n %+.8lf, %+.8lf\n acc:±%.2lfm\n distance:±%.2lfm\n date: %ld/%ld, %ld:%ld:%ld\n time: %.2lf",  v8,  v17,  v9,  *(void *)&a1,  v10,  v11,  v12,  v13,  v14,  v15);
      sub_100A15640(@"SLC", 0, v16);
      CFRelease(v16);
    }
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101862090);
  }
  __int128 v7 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 68290051;
    int v19 = 0;
    __int16 v20 = 2082;
    BOOL v21 = "";
    __int16 v22 = 2050;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    __int16 v24 = 1040;
    int v25 = 156;
    __int16 v26 = 2097;
    uint64_t v27 = a3;
    __int16 v28 = 2049;
    double v29 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#SLC location changed, now_s:%{public}.09f, location:%{private, location:CLCl ientLocation}.*P, distance:%{private}f}",  buf,  0x36u);
  }

void sub_1009545B4(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)(a1 + 357))
  {
    __int16 v8 = (double *)(a2 + 20);
    double v9 = *(double *)(a2 + 20);
    if (v9 < 0.0)
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101862090);
      }
      id v10 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:#SLC Significant location change got invalid location!}",  buf,  0x12u);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101862090);
        }
      }

      id v11 = (os_log_s *)qword_101934988;
      if (os_signpost_enabled((os_log_t)qword_101934988))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v11,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#SLC Significant location change got invalid location!",  "{msg%{public}.0s:#SLC Significant location change got invalid location!}",  buf,  0x12u);
      }

      return;
    }

    int v12 = *(_DWORD *)(a2 + 96);
    if (v9 >= 20000.0 || (v12 - 9) >= 0xFFFFFFFE)
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101862090);
      }
      uint64_t v14 = qword_101934988;
      if (!os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO)) {
        return;
      }
      *(_DWORD *)std::stringbuf::string_type buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      BOOL v4 = "{msg%{public}.0s:#SLC Ignoring inaccurate location}";
      goto LABEL_28;
    }

    if (v12 > 8)
    {
      if (v12 == 13)
      {
        if (v9 < 250.0) {
          goto LABEL_42;
        }
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101862090);
        }
        uint64_t v14 = qword_101934988;
        if (!os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO)) {
          return;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        BOOL v4 = "{msg%{public}.0s:#SLC Ignoring inaccurate LoiOverride location}";
        goto LABEL_28;
      }

      if (v12 != 9) {
        goto LABEL_42;
      }
    }

    else if (v12 != 1)
    {
LABEL_35:
      if (v12 == 4 && v9 >= 250.0)
      {
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101862090);
        }
        uint64_t v14 = qword_101934988;
        if (!os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO)) {
          return;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        BOOL v4 = "{msg%{public}.0s:#SLC Ignoring inaccurate WIFI location}";
        goto LABEL_28;
      }

void sub_100956448( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

void sub_100956478(uint64_t a1)
{
  __int128 v2 = *(_OWORD *)(a1 + 312);
  v17[6] = *(_OWORD *)(a1 + 296);
  v17[7] = v2;
  v18[0] = *(_OWORD *)(a1 + 328);
  *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)(a1 + 340);
  __int128 v3 = *(_OWORD *)(a1 + 248);
  v17[2] = *(_OWORD *)(a1 + 232);
  v17[3] = v3;
  __int128 v4 = *(_OWORD *)(a1 + 280);
  v17[4] = *(_OWORD *)(a1 + 264);
  v17[5] = v4;
  __int128 v5 = *(_OWORD *)(a1 + 216);
  v17[0] = *(_OWORD *)(a1 + 200);
  v17[1] = v5;
  int v16 = 0;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, int *, _OWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v16,  v17,  1LL,  0xFFFFFFFFLL,  0LL);
  sub_100954378(*(double *)(a1 + 184), v6, a1 + 200);

  __int128 v7 = v23;
  if (v23)
  {
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      unint64_t v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }

  if (v22 < 0) {
    operator delete(v21);
  }
  id v10 = v20;
  if (v20)
  {
    id v11 = (unint64_t *)&v20->__shared_owners_;
    do
      unint64_t v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }

  id v13 = v19;
  if (v19)
  {
    uint64_t v14 = (unint64_t *)&v19->__shared_owners_;
    do
      unint64_t v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }

void sub_1009565E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

_BYTE *sub_1009565FC(_BYTE *result)
{
  if (result[356])
  {
    uint64_t v1 = result;
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    __int128 v2 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      __int128 v5 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#SLC Stopping}",  (uint8_t *)v3,  0x12u);
    }

    double result = [*(id *)(*((void *)v1 + 52) + 16) unregister:*(void *)(*((void *)v1 + 52) + 8) forNotification:0];
    *((void *)v1 + 51) = 0LL;
    v1[356] = 0;
  }

  return result;
}

void sub_1009566F4(uint64_t a1)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101862090);
  }
  __int128 v2 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 68289026;
    v3[1] = 0;
    __int16 v4 = 2082;
    __int128 v5 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#SLC Starting}",  (uint8_t *)v3,  0x12u);
  }

  *(_BYTE *)(a1 + 356) = 1;
  *(void *)(a1 + 40_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  [*(id *)(*(void *)(a1 + 416) + 16) register:*(void *)(*(void *)(a1 + 416) + 8) forNotification:0 registrationInfo:sub_100957404((_OWORD *)(a1 + 360))];
  sub_1009567FC(a1);
}

void sub_1009567FC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 356))
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    __int128 v2 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
    {
      int v3 = *(unsigned __int8 *)(a1 + 456);
      uint64_t v5 = *(void *)(a1 + 440);
      uint64_t v4 = *(void *)(a1 + 448);
      *(_DWORD *)std::stringbuf::string_type buf = 134218496;
      uint64_t v23 = v4;
      __int16 v24 = 1024;
      int v25 = v3;
      __int16 v26 = 2048;
      uint64_t v27 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "#SLC slcConsolidate, schedule a consolidated scan, %p, fIsConsolidatedTriggerPending, %d, fConsolidatedTriggersT imeInterval, %.2lf",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101862090);
      }
      int v8 = *(unsigned __int8 *)(a1 + 456);
      uint64_t v10 = *(void *)(a1 + 440);
      uint64_t v9 = *(void *)(a1 + 448);
      int v16 = 134218496;
      uint64_t v17 = v9;
      __int16 v18 = 1024;
      int v19 = v8;
      __int16 v20 = 2048;
      uint64_t v21 = v10;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "#SLC slcConsolidate, schedule a consolidated scan, %p, fIsConsolidatedTriggerPending, %d, fConsolidatedTriggersT imeInterval, %.2lf",  &v16,  28);
      unint64_t v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignificantChangeManager::enableBackgroundWakeServices_nl()",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }

    if (*(_BYTE *)(a1 + 432) && (uint64_t v6 = *(void **)(a1 + 448)) != 0LL)
    {
      if (!*(_BYTE *)(a1 + 456))
      {
        [v6 setNextFireDelay:*(double *)(a1 + 440)];
        *(_BYTE *)(a1 + 456) = 1;
      }
    }

    else
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101862090);
      }
      __int128 v7 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "#SLC enableBackgroundWakeServices_nl, calling requestLocationUpdate",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934980 != -1) {
          dispatch_once(&qword_101934980, &stru_101862090);
        }
        LOWORD(v16) = 0;
        LODWORD(v15) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934988,  2LL,  "#SLC enableBackgroundWakeServices_nl, calling requestLocationUpdate",  &v16,  v15);
        uint64_t v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSignificantChangeManager::enableBackgroundWakeServices_nl()",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }

      sub_100956B48(a1);
    }
  }

void sub_100956B48(uint64_t a1)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101862090);
  }
  __int128 v2 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v18 = 2082;
    *(void *)int v19 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:#SLC Request location update}",  buf,  0x12u);
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_1010DDBC0(__p, "slc");
  sub_100495E50(buf, 4LL, 1LL, __p, Current);
  if (v16 < 0) {
    operator delete(__p[0]);
  }
  id v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLWifiLocationProvider");
  uint64_t v5 = *(void *)buf;
  char v6 = v18;
  if (SHIBYTE(v20) < 0)
  {
    sub_1010DD48C(&v7, *(void **)&v19[6], *(unint64_t *)&v19[14]);
  }

  else
  {
    __int128 v7 = *(_OWORD *)&v19[6];
    uint64_t v8 = v20;
  }

  __int128 v10 = v22;
  __int128 v11 = v23;
  v12[0] = v24[0];
  *(_OWORD *)((char *)v12 + 12) = *(_OWORD *)((char *)v24 + 12);
  __int128 v9 = v21;
  if (SHIBYTE(v26) < 0)
  {
    sub_1010DD48C(&v13, (void *)v25, *((unint64_t *)&v25 + 1));
  }

  else
  {
    __int128 v13 = v25;
    uint64_t v14 = v26;
  }

  [v4 requestLocationUpdateWithParameters:sub_10039A914((uint64_t)&v5)];
  if (SHIBYTE(v14) < 0) {
    operator delete((void *)v13);
  }
  if (SHIBYTE(v8) < 0) {
    operator delete((void *)v7);
  }
  if (SHIBYTE(v26) < 0) {
    operator delete((void *)v25);
  }
  if (SHIBYTE(v20) < 0) {
    operator delete(*(void **)&v19[6]);
  }
}

void sub_100956D74( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, void *a31, uint64_t a32, int a33, __int16 a34, char a35, char a36, char a37)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_1002DDC84((uint64_t)&a37);
  _Unwind_Resume(a1);
}

void sub_100956DD0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101862090);
  }
  char v6 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289539LL;
    __int16 v14 = 2082;
    uint64_t v15 = "";
    __int16 v16 = 1040;
    int v17 = 156;
    __int16 v18 = 2097;
    int v19 = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#SLC Got location, location:%{private, location:CLClientLocation}.*P}",  (uint8_t *)&buf,  0x22u);
  }

  __int128 v7 = a4[7];
  v11[6] = a4[6];
  v11[7] = v7;
  v12[0] = a4[8];
  *(_OWORD *)((char *)v12 + 12) = *(_OWORD *)((char *)a4 + 140);
  __int128 v8 = a4[3];
  _OWORD v11[2] = a4[2];
  void v11[3] = v8;
  __int128 v9 = a4[5];
  v11[4] = a4[4];
  v11[5] = v9;
  __int128 v10 = a4[1];
  v11[0] = *a4;
  v11[1] = v10;
  sub_1009545B4(a1, (uint64_t)v11);
}

void sub_100956F18(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  uint64_t v5 = a1 + 268;
  if (*a3 == 4)
  {
    if (*(_DWORD *)(a4 + 188) != 1)
    {
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101862090);
      }
      __int128 v13 = (os_log_s *)qword_101934988;
      if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEFAULT))
      {
        int v20 = 68289026;
        int v21 = 0;
        __int16 v22 = 2082;
        __int128 v23 = "";
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#SLC Location services is now disabled; Clearing cached location}",
          (uint8_t *)&v20,
          0x12u);
      }

      *(_DWORD *)(a1 + 200) = 0xFFFF;
      *(void *)(a1 + 212) = 0LL;
      *(void *)(a1 + 204) = 0LL;
      *(_OWORD *)(a1 + 220) = xmmword_1012E0070;
      __asm { FMOV            V0.2D, #-1.0 }

      *(_OWORD *)(a1 + 236) = _Q0;
      *(_OWORD *)(a1 + 252) = _Q0;
      *(_OWORD *)uint64_t v5 = _Q0;
      *(_DWORD *)(a1 + 284) = 0;
      *(void *)(a1 + 296) = 0LL;
      *(void *)(a1 + 304) = 0LL;
      *(void *)(a1 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
      *(_DWORD *)(a1 + 312) = 0;
      *(void *)(v5 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
      *(_DWORD *)(a1 + 324) = 0x7FFFFFFF;
      *(void *)(a1 + 336) = 0LL;
      *(void *)(a1 + 344) = 0LL;
      *(void *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
      *(_BYTE *)(a1 + 352) = 0;
      int v20 = 0;
      (*(void (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v20);
    }
  }

  else if (*a3)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101862090);
    }
    __int16 v16 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_ERROR))
    {
      int v17 = *a3;
      int v20 = 68289282;
      int v21 = 0;
      __int16 v22 = 2082;
      __int128 v23 = "";
      __int16 v24 = 1026;
      int v25 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:#SLC Got unknown client notification, notification:%{public}d}",  (uint8_t *)&v20,  0x18u);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101862090);
      }
    }

    __int16 v18 = (os_log_s *)qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      int v19 = *a3;
      int v20 = 68289282;
      int v21 = 0;
      __int16 v22 = 2082;
      __int128 v23 = "";
      __int16 v24 = 1026;
      int v25 = v19;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v18,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#SLC Got unknown client notification",  "{msg%{public}.0s:#SLC Got unknown client notification, notification:%{public}d}",  (uint8_t *)&v20,  0x18u);
    }
  }

  else
  {
    *(_DWORD *)(a1 + 200) = 0xFFFF;
    *(void *)(a1 + 212) = 0LL;
    *(void *)(a1 + 204) = 0LL;
    *(_OWORD *)(a1 + 220) = xmmword_1012E0070;
    __asm { FMOV            V0.2D, #-1.0 }

    *(_OWORD *)(a1 + 236) = _Q0;
    *(_OWORD *)(a1 + 252) = _Q0;
    *(_OWORD *)uint64_t v5 = _Q0;
    *(_DWORD *)(a1 + 284) = 0;
    *(void *)(a1 + 296) = 0LL;
    *(void *)(a1 + 304) = 0LL;
    *(void *)(a1 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
    *(_DWORD *)(a1 + 312) = 0;
    *(void *)(a1 + 316) = 0xBFF0000000000000LL;
    *(_DWORD *)(a1 + 324) = 0x7FFFFFFF;
    *(void *)(a1 + 336) = 0LL;
    *(void *)(a1 + 344) = 0LL;
    *(void *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
    *(_BYTE *)(a1 + 352) = 0;
    id v11 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLClientManager");
    if (byte_1019997FF >= 0) {
      unint64_t v12 = &qword_1019997E8;
    }
    else {
      unint64_t v12 = (uint64_t *)qword_1019997E8;
    }
    objc_msgSend( v11,  "resetNotificationConsumedForIdentifier:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  }

void sub_100957290(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  __int128 v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLSignificantChangeManager");
  sub_10047D890((uint64_t)v8, (uint64_t *)__p, a3, a1, a2);
  *__int128 v8 = &off_101862028;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100957328( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_100957354(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100957380(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_1009573AC(id a1)
{
  qword_101934A98 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

void sub_1009573D8(id a1)
{
  qword_1019349F8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Simulation");
}

CLCppContainer *sub_100957404(_OWORD *a1)
{
  __int128 v2 = operator new(0x30uLL);
  __int128 v3 = a1[1];
  *__int128 v2 = *a1;
  v2[1] = v3;
  v2[2] = a1[2];
  uint64_t v5 = _NSConcreteStackBlock;
  uint64_t v6 = 3221225472LL;
  __int128 v7 = sub_10095748C;
  __int128 v8 = &unk_10181D3D0;
  __int128 v9 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_10095748C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_10095749C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_101341508;
      v1[3] = unk_101341518;
      v1[4] = xmmword_101341528;
      v1[0] = xmmword_1013414E8;
      v1[1] = unk_1013414F8;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_100957570(_Unwind_Exception *a1)
{
}

void sub_100957588()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_1009575EC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_100957660(_Unwind_Exception *a1)
{
}

void sub_100957678()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_100957714(_Unwind_Exception *a1)
{
}

void sub_10095772C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      *uint64_t v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_1009577B8(_Unwind_Exception *a1)
{
}

uint64_t sub_1009577D0()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1019997E8, (void *)&_mh_execute_header);
}

uint64_t sub_100957818(uint64_t a1)
{
  *(_WORD *)a1 = 0;
  *(_BYTE *)(a1 + 2) = 0;
  *(void *)(a1 + 4) = 0LL;
  *(void *)(a1 + 20) = 0LL;
  *(void *)(a1 + 12) = 0LL;
  *(_DWORD *)(a1 + 2_Block_object_dispose((const void *)(v1 - 224), 8) = 1065353216;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(void *)(a1 + 104) = 0x800000000LL;
  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = 0x800000000LL;
  *(_OWORD *)(a1 + 312) = xmmword_1013415A0;
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = xmmword_1013415B0;
  *(_WORD *)(a1 + 344) = 0;
  *(_DWORD *)(a1 + 364) = 0;
  *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 34_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 353) = 0LL;
  *(_OWORD *)(a1 + 376) = xmmword_1013415F8;
  *(_OWORD *)(a1 + 392) = unk_101341608;
  *(_OWORD *)(a1 + 40_Block_object_dispose((const void *)(v1 - 224), 8) = xmmword_101341618;
  *(_DWORD *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0LL;
  *(void *)(a1 + 440) = 0LL;
  *(_DWORD *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = 1065353216;
  *(void *)(a1 + 456) = 0LL;
  *(_BYTE *)(a1 + 464) = 0;
  *(_BYTE *)(a1 + 46_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  *(_DWORD *)(a1 + 48_Block_object_dispose((const void *)(v1 - 224), 8) = 8;
  *(void *)(a1 + 480) = 1031798784LL;
  *(_OWORD *)&v3[8] = 0uLL;
  *(_OWORD *)(a1 + 52_Block_object_dispose((const void *)(v1 - 224), 8) = *(_OWORD *)v3;
  *(_DWORD *)&v3[24] = 0;
  *(_OWORD *)(a1 + 540) = *(_OWORD *)&v3[12];
  int v4 = 973279855;
  *(_OWORD *)__int128 v3 = xmmword_1013415D4;
  *(_OWORD *)&v3[16] = unk_1013415E4;
  sub_100957E9C(a1 + 32, (uint64_t)v3);
  *(int32x2_t *)(a1 + 56) = vdup_n_s32(0x3A03126Fu);
  *(_DWORD *)(a1 + 64) = 973279855;
  return a1;
}

uint64_t sub_100957938(uint64_t result)
{
  *(void *)(result + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(result + 16) = 0LL;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_100957948(uint64_t a1)
{
  uint64_t v2 = (_OWORD *)(a1 + 312);
  *(_WORD *)a1 = 0;
  *(_BYTE *)(a1 + 2) = 0;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 4) = 0LL;
  *(void *)(a1 + 20) = 0LL;
  *(void *)(a1 + 12) = 0LL;
  *(_DWORD *)(a1 + 2_Block_object_dispose((const void *)(v1 - 224), 8) = 1065353216;
  *(_OWORD *)int v4 = xmmword_1013415D4;
  *(_OWORD *)&v4[16] = unk_1013415E4;
  int v5 = 973279855;
  sub_100957E9C(a1 + 32, (uint64_t)v4);
  *(int32x2_t *)(a1 + 56) = vdup_n_s32(0x3A03126Fu);
  *(_DWORD *)(a1 + 64) = 973279855;
  *(_DWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  *(void *)(a1 + 456) = 0LL;
  *(_BYTE *)(a1 + 464) = 0;
  *(_DWORD *)(a1 + 484) = 0;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 80) = 0LL;
  *(_DWORD *)(a1 + 104) = 0;
  *(void *)(a1 + 432) = 0LL;
  *(void *)(a1 + 440) = 0LL;
  *(_DWORD *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = 1065353216;
  *(void *)&v4[7] = 0LL;
  *(void *)&v4[2] = 0LL;
  *uint64_t v2 = xmmword_1013415A0;
  v2[1] = xmmword_1013415B0;
  *(_WORD *)(a1 + 344) = 0;
  *(void *)(a1 + 346) = *(void *)v4;
  *(void *)(a1 + 353) = *(void *)&v4[7];
  *(_DWORD *)(a1 + 364) = 0;
  *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  v2[4] = xmmword_1013415F8;
  v2[5] = unk_101341608;
  v2[6] = xmmword_101341618;
  *(_DWORD *)(a1 + 424) = 0;
  *(_DWORD *)&v4[24] = 0;
  *(_DWORD *)&v4[12] = 0;
  *(void *)&v4[16] = 0LL;
  *(_OWORD *)(a1 + 52_Block_object_dispose((const void *)(v1 - 224), 8) = *(unint64_t *)v4;
  double result = *(double *)&v4[12];
  *(_OWORD *)(a1 + 540) = *(_OWORD *)&v4[12];
  return result;
}

BOOL sub_100957A90(float32x4_t *a1, float *a2, uint64_t a3, float a4)
{
  float v14 = sub_10040B3D0(&a1[6].u16[4], 0LL, a1[6].u16[5]);
  float v18 = v17;
  uint64_t v19 = 0LL;
  *(float *)__int128 v36 = v14;
  *(float *)&v36[1] = v17;
  *(float *)&v36[2] = v13;
  float v20 = 0.0;
  do
  {
    float v20 = v20 + (float)(*(float *)&v36[v19] * *(float *)&v36[v19]);
    ++v19;
  }

  while (v19 != 3);
  float v21 = sqrtf(v20);
  if (v21 <= 0.0) {
    return 0LL;
  }
  float v22 = fabsf(v21 + -1.0) / v21;
  if (v22 > 0.40825) {
    return 0LL;
  }
  v40[0] = 1.0 / a4;
  v40[1] = 1.0 / (float)((float)(0.001 / (float)(v21 * v21)) + (float)((float)(v22 * 6.0) * v22));
  v34.i64[0] = 0LL;
  v34.i64[1] = 0x3F80000000000000LL;
  LODWORD(v15) = *(_DWORD *)(a3 + 8);
  BOOL v23 = sub_100833764( v40,  &v34,  (uint64_t)v35,  *a2,  a2[1],  a2[2],  v14,  v18,  v13,  v15,  v16,  v8,  v9,  v10,  v11,  v12,  *(void *)a3,  *(float *)&v15);
  if (v23)
  {
    if (&a1[1] != &v34) {
      a1[1] = v34;
    }
    uint64_t v25 = (uint64_t)&a1[2];
    if (!sub_100957E9C(v25, (uint64_t)v35))
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      uint64_t v26 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "invalid initializeDown covariance !(P > 0), reseting",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101862110);
        }
        v33[0] = 0;
        LODWORD(v32) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "invalid initializeDown covariance !(P > 0), reseting",  v33,  v32);
        BOOL v31 = (uint8_t *)v30;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CMSensorFusionSwimMekf::initializeAttitude(const CMVector3d &, const CMVector3d &, float)",  "%s\n",  v30);
        if (v31 != buf) {
          free(v31);
        }
      }

      int v39 = 973279855;
      *(_OWORD *)uint64_t buf = xmmword_1013415D4;
      __int128 v38 = unk_1013415E4;
      sub_100957E9C(v25, (uint64_t)buf);
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    uint64_t v27 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "northAndGravity failed", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      v33[0] = 0;
      LODWORD(v32) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "northAndGravity failed",  v33,  v32);
      double v29 = (uint8_t *)v28;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CMSensorFusionSwimMekf::initializeAttitude(const CMVector3d &, const CMVector3d &, float)",  "%s\n",  v28);
      if (v29 != buf) {
        free(v29);
      }
    }
  }

  return v23;
}

BOOL sub_100957E9C(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100959650(a2);
  if (result)
  {
    unint64_t v5 = 3LL;
    unint64_t v6 = 2LL;
    while (1)
    {
      unint64_t v7 = v6;
      float v8 = sub_1002B9B68(a2, v6, v6);
      unint64_t v9 = v5;
      unint64_t v10 = v5 - 2;
      if (v5 <= 2)
      {
        do
        {
          float v11 = *(float *)sub_1009596F0(a1 + 12, v7, v9);
          float v12 = *(float *)sub_1009596F0(a1 + 12, v7, v9);
          float v8 = v8 + (float)((float)-(float)(v11 * v12) * *(float *)sub_100959A48(a1, v9++));
        }

        while (v9 != 3);
      }

      *(float *)sub_100959A48(a1, v7) = v8;
      if (v7)
      {
        do
        {
          unint64_t v13 = v10;
          float v14 = sub_1002B9B68(a2, v10, v7);
          unint64_t v15 = v5;
          if (v5 <= 2)
          {
            do
            {
              float v16 = *(float *)sub_1009596F0(a1 + 12, v13, v15);
              float v17 = *(float *)sub_1009596F0(a1 + 12, v7, v15);
              float v14 = v14 + (float)((float)-(float)(v16 * v17) * *(float *)sub_100959A48(a1, v15++));
            }

            while (v15 != 3);
          }

          float v18 = v14 / *(float *)sub_100959A48(a1, v7);
          *(float *)sub_1009596F0(a1 + 12, v13, v7) = v18;
          unint64_t v10 = v13 - 1;
        }

        while (v13);
      }

      unint64_t v6 = v7 - 1;
      unint64_t v5 = v7;
      if (!v7) {
        return 1LL;
      }
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    uint64_t v19 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 134217984;
      unint64_t v25 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "D(%zu) <= 0 non-positive definite matrix!",  buf,  0xCu);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      int v22 = 134217984;
      unint64_t v23 = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "D(%zu) <= 0 non-positive definite matrix!",  (size_t)&v22);
      float v21 = (uint8_t *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CMFactoredMatrix<float, 3>::factor(const CMMatrix<T, N, N> &) [T = float, N = 3]",  "%s\n",  v20);
      if (v21 != buf) {
        free(v21);
      }
      return 0LL;
    }
  }

  return result;
}

void sub_1009581CC(uint64_t a1)
{
  if (*(_WORD *)(a1 + 106))
  {
    sub_100958238((unsigned __int16 *)(a1 + 104));
    sub_100833470((float *)(a1 + 16));
  }

float sub_100958238(unsigned __int16 *a1)
{
  if (!a1[1])
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    __int128 v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_FAULT,  "Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMVectorBuffer.h, line 145,back() on empty buffer.",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      v6[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMVectorBuffer.h, line 145,back() on empty buffer.",  v6,  2);
      unint64_t v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "Element CMVectorBufferBase<float, 3>::back() const [T = float, N = 3]",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

  return *(float *)sub_10040B624(a1, a1[1] - 1LL);
}

float sub_1009583E8(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_BYTE *)a1 = 1;
  *(_DWORD *)(a1 + 4) = *a2;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = a2[1];
  *(_DWORD *)(a1 + 12) = a2[2];
  *(_DWORD *)(a1 + 56) = *(_DWORD *)a3;
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a3 + 4);
  float result = *(float *)(a3 + 8);
  *(float *)(a1 + 64) = result;
  return result;
}

float sub_100958424(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (*(_BYTE *)a1 && *(_BYTE *)(a1 + 1))
  {
    float v5 = *(float *)(a1 + 88) - *(float *)(a1 + 12);
    *(float32x2_t *)(a1 + 92) = vsub_f32(*(float32x2_t *)(a1 + 80), *(float32x2_t *)(a1 + 4));
    *(float *)(a1 + 100) = v5;
    sub_100958498(a1, a3);
  }

  *(_DWORD *)(a1 + 80) = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 4);
  float result = *(float *)(a2 + 8);
  *(float *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = result;
  return result;
}

void sub_100958498(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = *(void *)(a1 + 72);
  if (v3)
  {
    unint64_t v4 = a2 - v3;
    if (a2 > v3)
    {
      uint64_t v5 = 0LL;
      float v6 = (float)v4 * 0.000001;
      *(void *)(a1 + 72) = a2;
      float v7 = v6 * *(float *)(a1 + 100);
      float v13 = v6;
      float32x2_t v20 = vmul_n_f32(*(float32x2_t *)(a1 + 92), v6);
      float v21 = v7;
      uint64_t v18 = (uint64_t)v20;
      __int32 v19 = LODWORD(v7);
      do
      {
        *(float *)((char *)&v18 + v5) = -*(float *)((char *)&v18 + v5);
        v5 += 4LL;
      }

      while (v5 != 12);
      v15.i64[0] = v18;
      v15.i32[2] = v19;
      sub_1008095A8(v15.f32, (uint64_t)&v18);
      float v8 = v13 * *(float *)(a1 + 64);
      *(float *)v9.i32 = v13 * 0.00032;
      float32x2_t v16 = vadd_f32((float32x2_t)vdup_lane_s32(v9, 0), vmul_n_f32(*(float32x2_t *)(a1 + 56), v13));
      float v17 = (float)(v13 * 0.00032) + v8;
      sub_1009585F4(a1 + 32, (uint64_t)&v18, (uint64_t)&v16);
      *(float *)v10.i32 = v13 * 0.00000005;
      *(float32x2_t *)(a1 + 56) = vadd_f32((float32x2_t)vdup_lane_s32(v10, 0), *(float32x2_t *)(a1 + 56));
      *(float *)(a1 + 64) = (float)(v13 * 0.00000005) + *(float *)(a1 + 64);
      *(double *)v11.i64 = sub_10083365C(&v15, (float *)&v20);
      float v12 = (float32x4_t *)(a1 + 16);
      sub_1008333F0((uint64_t)&v15, v12->f32, &v14, v11);
      if (v12 != &v14) {
        float32x4_t *v12 = v14;
      }
    }
  }

  else
  {
    *(void *)(a1 + 72) = a2;
  }

void sub_1009585F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = 0LL;
  uint64_t v7 = a1 + 12;
  do
  {
    uint64_t v8 = 2LL;
    while (1)
    {
      unint64_t v9 = v8;
      if (!v8) {
        break;
      }
      unint64_t v10 = 0LL;
      do
      {
        float v11 = *(float *)sub_1002B9EC4(a2, v6, v10);
        float v12 = *(float *)sub_1009596F0(v7, v10, v9);
        float v13 = (float *)sub_1002B9EC4(a2, v6, v9);
        *float v13 = *v13 + (float)(v11 * v12);
        ++v10;
      }

      while (v9 != v10);
      *(_DWORD *)sub_1002B9EC4((uint64_t)v43, v6, v9) = 0;
      uint64_t v8 = v9 - 1;
      if (!v9) {
        goto LABEL_9;
      }
    }

    *(_DWORD *)sub_1002B9EC4((uint64_t)v43, v6, sub_100950D84(v1, 0LL) = 0;
LABEL_9:
    *(_DWORD *)sub_1002B9EC4((uint64_t)v43, v6, v6) = 1065353216;
    ++v6;
  }

  while (v6 != 3);
  for (uint64_t i = 2LL; ; uint64_t i = v16 - 1)
  {
    unint64_t v15 = 0LL;
    unint64_t v16 = i;
    v48[i] = 0.0;
    float v17 = 0.0;
    do
    {
      float v18 = *(float *)sub_1002B9EC4(a2, v16, v15);
      float v19 = v18 * *(float *)sub_1002B9EC4(a2, v16, v15);
      float v20 = v17 + (float)(v19 * *(float *)sub_100959A48(a1, v15));
      float v21 = *(float *)sub_1002B9EC4((uint64_t)v43, v16, v15);
      float v22 = v21 * *(float *)sub_1002B9EC4((uint64_t)v43, v16, v15);
      float v17 = v20 + (float)(v22 * sub_1002B8AF0(a3, v15));
      v48[v16] = v17;
      ++v15;
    }

    while (v15 != 3);
    if (v17 <= 0.0) {
      break;
    }
    if (!v16)
    {
      for (unint64_t j = 0LL; j != 3; ++j)
      {
        float v39 = v48[j];
        *(float *)sub_100959A48(a1, j) = v39;
      }

      return;
    }

    for (unint64_t k = 0LL; k != v16; ++k)
    {
      unint64_t v24 = 0LL;
      float v25 = 0.0;
      do
      {
        float v26 = *(float *)sub_1002B9EC4(a2, k, v24);
        float v27 = v26 * *(float *)sub_100959A48(a1, v24);
        float v28 = v25 + (float)(v27 * *(float *)sub_1002B9EC4(a2, v16, v24));
        float v29 = *(float *)sub_1002B9EC4((uint64_t)v43, k, v24);
        float v30 = v29 * sub_1002B8AF0(a3, v24);
        float v25 = v28 + (float)(v30 * *(float *)sub_1002B9EC4((uint64_t)v43, v16, v24++));
      }

      while (v24 != 3);
      unint64_t v31 = 0LL;
      *(float *)sub_1009596F0(v7, k, v16) = v25 / v17;
      do
      {
        float v32 = *(float *)sub_1009596F0(v7, k, v16);
        float v33 = *(float *)sub_1002B9EC4(a2, v16, v31);
        float32x4_t v34 = (float *)sub_1002B9EC4(a2, k, v31);
        *float32x4_t v34 = *v34 - (float)(v32 * v33);
        float v35 = *(float *)sub_1009596F0(v7, k, v16);
        float v36 = *(float *)sub_1002B9EC4((uint64_t)v43, v16, v31);
        __int128 v37 = (float *)sub_1002B9EC4((uint64_t)v43, k, v31);
        *__int128 v37 = *v37 - (float)(v35 * v36);
        ++v31;
      }

      while (v31 != 3);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101862110);
  }
  double v40 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 134217984;
    unint64_t v47 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "D[%zu] <= 0, matrix ! positive definite",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    int v44 = 134217984;
    unint64_t v45 = v16;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "D[%zu] <= 0, matrix ! positive definite",  (size_t)&v44);
    int v42 = (uint8_t *)v41;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CMFactoredMatrix<float, 3>::thorntonTemporalUpdate(CMMatrix<T, N, N> &, const CMVector<T, N> &) [T = float, N = 3]",  "%s\n",  v41);
    if (v42 != buf) {
      free(v42);
    }
  }

void sub_100958AB8(float32x4_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &a1[6].u16[4];
  sub_10040B364(&a1[6].u16[4], a2);
  float v6 = sub_10040B3D0(v5, 0LL, a1[6].u16[5]);
  uint64_t v9 = 0LL;
  float v23 = v6;
  float v24 = v7;
  float v25 = v8;
  float v10 = 0.0;
  do
  {
    float v10 = v10 + (float)(*(float *)((char *)&v23 + v9) * *(float *)((char *)&v23 + v9));
    v9 += 4LL;
  }

  while (v9 != 12);
  float v11 = sqrtf(v10);
  float v12 = 1.0;
  if (v11 > 0.0) {
    float v12 = fabsf(v11 + -1.0) / v11;
  }
  float v13 = v6 / v11;
  float v14 = v7 / v11;
  float v23 = v13;
  float v24 = v7 / v11;
  float v25 = v8 / v11;
  if (a1->i8[1] || a1[6].i32[3] != a1[6].u16[5])
  {
    if (v12 <= 0.40825)
    {
      float v15 = 1.0;
      float v16 = fabsf(v11 + -1.0) / v11;
      if (v11 > 0.0) {
        float v15 = v16;
      }
      sub_100958CBC(a1, &v23, (float)(0.001 / (float)(v11 * v11)) + (float)((float)(v15 * 6.0) * v15));
      if (v11 > 0.9 && v11 < 1.1)
      {
        unint64_t v17 = a1[33].u64[1];
        if (v17)
        {
          uint64_t v18 = v17 + 1;
          unint64_t v19 = a1[34].i64[0] + a3 - a1[33].i64[0];
          a1[34].i64[0] = v19;
          a1[34].f32[2] = (float)((float)v19 / (float)v17) / 1000.0;
        }

        else
        {
          uint64_t v18 = 1LL;
        }

        a1[33].i64[0] = a3;
        a1[33].i64[1] = v18;
      }
    }
  }

  else
  {
    *(void *)float v22 = 0x3F80000000000000LL;
    *(_DWORD *)&_WORD v22[8] = 0;
    uint64_t v20 = 1065353216LL;
    int v21 = 0;
    a1->i8[1] = sub_100957A90(a1, (float *)v22, (uint64_t)&v20, 1.0);
  }

void sub_100958CBC(float32x4_t *a1, float *a2, float a3)
{
  float v6 = a1 + 1;
  float v7 = sub_100833470(a1[1].f32);
  float v9 = v8;
  float v11 = v10;
  float v12 = *a2 - v7;
  float v13 = a2[1] - v8;
  float v14 = a2[2] - v10;
  *(float *)&uint64_t v37 = v12;
  *((float *)&v37 + 1) = v13;
  float v38 = v14;
  LODWORD(v34) = 0;
  *((float *)&v34 + 1) = v10;
  *((float *)&v34 + 2) = -v8;
  *((float *)&v34 + 3) = -v10;
  LODWORD(v35) = 0;
  *(void *)((char *)&v35 + 4) = __PAIR64__(LODWORD(v8), LODWORD(v7));
  *((float *)&v35 + 3) = -v7;
  int v36 = 0;
  *(float *)float v33 = a3;
  *(float *)&v33[1] = a3;
  *(float *)&v33[2] = a3;
  uint64_t v16 = a1[2].i64[0];
  float v15 = a1 + 2;
  int v28 = 0;
  v27[0] = v34;
  v27[1] = v35;
  uint64_t v29 = v16;
  __int32 v30 = v15->i32[2];
  uint64_t v31 = *(uint64_t *)((char *)&v15->i64[1] + 4);
  __int32 v32 = v15[1].i32[1];
  sub_1009585F4((uint64_t)&v29, (uint64_t)v27, (uint64_t)v33);
  uint64_t v25 = v37;
  float v26 = v38;
  if (sub_100958E6C((uint64_t)&v29, (uint64_t)&v25)
    && (float)((float)((float)(v14 * v26) + (float)(v13 * *((float *)&v25 + 1))) + (float)(v12 * *(float *)&v25)) <= 6.75)
  {
    sub_100959178(v15->f32, (uint64_t)&v34, (uint64_t)v33, (uint64_t)&v37);
    float v20 = (float)((float)(v11 * v17) + (float)(v18 * v9)) + (float)(v19 * v7);
    v24[0] = v19 - (float)(v7 * v20);
    v24[1] = v18 - (float)(v9 * v20);
    _OWORD v24[2] = v17 - (float)(v11 * v20);
    *(double *)v21.i64 = sub_10083365C(&v23, v24);
    sub_1008333F0((uint64_t)&v23, v6->f32, &v22, v21);
    if (v6 != &v22) {
      *float v6 = v22;
    }
  }

uint64_t sub_100958E6C(uint64_t a1, uint64_t a2)
{
  if (sub_100959F78(a1, 0LL) == 0.0)
  {
    BOOL v4 = 0LL;
    uint64_t v5 = 0LL;
LABEL_7:
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    float v6 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 134217984;
      uint64_t v28 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "D[%zu] == 0, semidefinite matrix!", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      int v25 = 134217984;
      uint64_t v26 = v5;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "D[%zu] == 0, semidefinite matrix!",  (size_t)&v25);
      float v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CMFactoredMatrix<float, 3>::solve(CMVector<T, N> &) const [T = float, N = 3]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
    }
  }

  else
  {
    uint64_t v5 = 0LL;
    while (v5 != 2)
    {
      if (sub_100959F78(a1, ++v5) == 0.0)
      {
        BOOL v4 = (unint64_t)(v5 - 1) > 1;
        goto LABEL_7;
      }
    }

    uint64_t v8 = a1 + 12;
    unint64_t v9 = 2LL;
    uint64_t v10 = 1LL;
    do
    {
      unint64_t v11 = v9;
      unint64_t v9 = v10;
      do
      {
        float v12 = *(float *)sub_1002BA24C(a2, v11);
        float v13 = sub_100959C20(a1 + 12, v9, v11);
        float v14 = (float *)sub_1002BA24C(a2, v9);
        *float v14 = *v14 - (float)(v12 * v13);
        ++v11;
      }

      while (v11 != 3);
      uint64_t v10 = v9 - 1;
    }

    while (v9);
    do
    {
      float v15 = sub_100959F78(a1, v9);
      uint64_t v16 = (float *)sub_1002BA24C(a2, v9);
      *uint64_t v16 = *v16 / v15;
      ++v9;
    }

    while (v9 != 3);
    unint64_t v17 = 0LL;
    do
    {
      unint64_t v18 = v17++;
      if (v18 <= 1)
      {
        unint64_t v19 = v17;
        do
        {
          float v20 = *(float *)sub_1002BA24C(a2, v18);
          float v21 = sub_100959C20(v8, v18, v19);
          float32x4_t v22 = (float *)sub_1002BA24C(a2, v19);
          float *v22 = *v22 - (float)(v20 * v21);
          ++v19;
        }

        while (v19 != 3);
      }
    }

    while (v17 != 3);
    return 1LL;
  }

  return v4;
}

void sub_100959178(float *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = 0LL;
  uint64_t v36 = 0LL;
  int v37 = 0;
  uint64_t v8 = (uint64_t)(a1 + 3);
LABEL_2:
  unint64_t v9 = 0LL;
  uint64_t v10 = -1LL;
  do
  {
    float v11 = sub_1002B9B68(a2, v7, v9);
    unint64_t v12 = v10;
    if (v9)
    {
      do
      {
        float v13 = sub_1002B9B68(a2, v7, v12);
        float v11 = v11 + (float)(v13 * *(float *)sub_1009596F0(v8, v12--, v9));
      }

      while (v12 != -1LL);
    }

    v43[v9] = v11;
    v42[v9] = v11 * *(float *)sub_100959A48((uint64_t)a1, v9);
    ++v9;
    ++v10;
  }

  while (v9 != 3);
  float v14 = sub_1002B8AF0(a3, v7);
  float v15 = v14 + (float)(v43[0] * v42[0]);
  if (v15 > 0.0)
  {
    float v16 = 1.0 / v15;
    *a1 = *a1 * (float)((float)(1.0 / v15) * sub_1002B8AF0(a3, v7));
    unint64_t v17 = 1LL;
    while (1)
    {
      float v18 = v43[v17];
      float v19 = v15 + (float)(v18 * v42[v17]);
      if (v19 <= 0.0) {
        break;
      }
      float v20 = -(float)(v18 * v16);
      float v16 = 1.0 / v19;
      float v21 = (float *)sub_100959A48((uint64_t)a1, v17);
      unint64_t v22 = 0LL;
      *float v21 = (float)(v15 * (float)(1.0 / v19)) * *v21;
      do
      {
        float v23 = *(float *)sub_1009596F0(v8, v22, v17);
        float v24 = v42[v22];
        int v25 = (float *)sub_1009596F0(v8, v22, v17);
        float v26 = v42[v17];
        *int v25 = v23 + (float)(v24 * v20);
        v42[v22++] = v24 + (float)(v26 * v23);
      }

      while (v17 != v22);
      ++v17;
      float v15 = v19;
      if (v17 == 3)
      {
        unint64_t v27 = 0LL;
        float v28 = v16 * sub_1002B8AF0(a4, v7);
        do
        {
          float v29 = v42[v27];
          __int32 v30 = (float *)sub_1002BA24C((uint64_t)&v36, v27);
          *__int32 v30 = *v30 + (float)(v28 * v29);
          ++v27;
        }

        while (v27 != 3);
        if (++v7 != 3) {
          goto LABEL_2;
        }
        return;
      }
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    uint64_t v31 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 134217984;
      unint64_t v41 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEBUG,  "%zu: alpha <= 0, matrix ! positive definite",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      goto LABEL_32;
    }
    goto LABEL_30;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101862110);
  }
  __int32 v32 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 134217984;
    unint64_t v41 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "%zu: alpha <= 0, matrix ! positive definite",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
LABEL_32:
    }
      dispatch_once(&qword_101934A70, &stru_101862110);
LABEL_30:
    int v38 = 134217984;
    unint64_t v39 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "%zu: alpha <= 0, matrix ! positive definite",  &v38);
    __int128 v34 = (uint8_t *)v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMVector<T, N> CMFactoredMatrix<float, 3>::biermanObservationalUpdate(const CMMatrix<T, P, N> &, const CMVector<T, P> &, const CMVector<T, P> &) [T = float, N = 3, P = 3UL]",  "%s\n",  v33);
    if (v34 != buf) {
      free(v34);
    }
  }

void sub_100959624(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

BOOL sub_100959650(uint64_t a1)
{
  unint64_t v2 = 0LL;
  char v3 = 1;
LABEL_2:
  char v4 = v3;
  unint64_t v5 = v2 + 1;
  while (1)
  {
    float v6 = sub_1002B9B68(a1, v2, v5);
    float v7 = v6 - sub_1002B9B68(a1, v5, v2);
    if (v7 <= 0.0) {
      float v7 = -v7;
    }
    if (v7 > 1.0e-16) {
      return v7 <= 1.0e-16;
    }
    if (++v5 == 3)
    {
      char v3 = 0;
      unint64_t v2 = 1LL;
      if ((v4 & 1) != 0) {
        goto LABEL_2;
      }
      return v7 <= 1.0e-16;
    }
  }

uint64_t sub_1009596F0(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a3 >= 3)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    float v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v19 = a3;
      __int16 v20 = 2048;
      uint64_t v21 = 3LL;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 237,invalid col %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      int v14 = 134218240;
      unint64_t v15 = a3;
      __int16 v16 = 2048;
      uint64_t v17 = 3LL;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 237,invalid col %zu > %zu.",  (size_t)&v14,  22);
      unint64_t v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T &CMFactoredMatrix<float, 3>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) [T = float, N = 3]",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  if (a3 <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    uint64_t v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v19 = a3;
      __int16 v20 = 2048;
      uint64_t v21 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix .h, line 238,invalid element %zu <= %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      int v14 = 134218240;
      unint64_t v15 = a3;
      __int16 v16 = 2048;
      uint64_t v17 = a2;
      LODWORD(v13) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix .h, line 238,invalid element %zu <= %zu.",  (size_t)&v14,  v13);
      unint64_t v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T &CMFactoredMatrix<float, 3>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) [T = float, N = 3]",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }
  }

  return a1 + 4 * (a2 + (((a3 - 1) * a3) >> 1));
}

uint64_t sub_100959A48(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    unint64_t v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 2048;
      uint64_t v15 = 3LL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Assertion failed: row < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 191,invalid row %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      int v8 = 134218240;
      unint64_t v9 = a2;
      __int16 v10 = 2048;
      uint64_t v11 = 3LL;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: row < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 191,invalid row %zu > %zu.",  (size_t)&v8,  22);
      float v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T &CMFactoredMatrix<float, 3>::DiagonalMatrix::operator()(size_t) [T = float, N = 3]",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  return a1 + 4 * a2;
}

float sub_100959C20(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a3 >= 3)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    float v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v19 = a3;
      __int16 v20 = 2048;
      uint64_t v21 = 3LL;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 231,invalid col %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      int v14 = 134218240;
      unint64_t v15 = a3;
      __int16 v16 = 2048;
      uint64_t v17 = 3LL;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 231,invalid col %zu > %zu.",  (size_t)&v14,  22);
      unint64_t v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMFactoredMatrix<float, 3>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) const [T = float, N = 3]",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  if (a3 <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    __int16 v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v19 = a3;
      __int16 v20 = 2048;
      uint64_t v21 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix .h, line 232,invalid element %zu <= %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      int v14 = 134218240;
      unint64_t v15 = a3;
      __int16 v16 = 2048;
      uint64_t v17 = a2;
      LODWORD(v13) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix .h, line 232,invalid element %zu <= %zu.",  (size_t)&v14,  v13);
      unint64_t v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMFactoredMatrix<float, 3>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) const [T = float, N = 3]",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }
  }

  return *(float *)(a1 + 4 * (a2 + (((a3 - 1) * a3) >> 1)));
}

float sub_100959F78(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862110);
    }
    unint64_t v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 2048;
      uint64_t v15 = 3LL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Assertion failed: row < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 186,invalid row %zu > %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862110);
      }
      int v8 = 134218240;
      unint64_t v9 = a2;
      __int16 v10 = 2048;
      uint64_t v11 = 3LL;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: row < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h , line 186,invalid row %zu > %zu.",  (size_t)&v8,  22);
      float v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T CMFactoredMatrix<float, 3>::DiagonalMatrix::operator()(size_t) const [T = float, N = 3]",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  return *(float *)(a1 + 4 * a2);
}

BOOL sub_10095A150(float a1, float a2)
{
  return a2 < a1;
}

void sub_10095A204(id a1)
{
  qword_101999858 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLApplicationLifecycleManagerSilo");
}

void sub_10095A27C(id a1)
{
  if (!v1)
  {
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101862238);
    }
    unint64_t v5 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "ALM: not supported on this platform because FrontBoardServices.framework is not present",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_16;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101862238);
    }
    LOWORD(v7[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  0LL,  "ALM: not supported on this platform because FrontBoardServices.framework is not present",  v7,  2,  v7[0]);
    goto LABEL_21;
  }

  objc_opt_class(&OBJC_CLASS___RBSAssertion);
  if (v2) {
    return;
  }
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101862238);
  }
  char v3 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "ALM: not supported on this platform because AssertionServices.framework is not present",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101862238);
    }
    LOWORD(v7[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  0LL,  "ALM: not supported on this platform because AssertionServices.framework is not present",  v7,  2,  v7[0]);
LABEL_21:
    float v6 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "+[CLApplicationLifecycleManagerAdapter isSupported]_block_invoke",  "%s\n",  v4);
    if (v6 != buf) {
      free(v6);
    }
  }

void sub_10095A58C(_Unwind_Exception *a1)
{
}

void sub_10095A640( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10095A65C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  id v6 = objc_msgSend(objc_msgSend(*(id *)a1, "vendor"), "proxyForService:", @"CLClientAuthorizationCache");
  if ((a2[23] & 0x80u) == 0) {
    float v7 = (uint64_t *)a2;
  }
  else {
    float v7 = *(uint64_t **)a2;
  }
  id v8 = objc_msgSend( v6,  "syncgetAuthorizationContextIfClientIsNonZonal:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v7));
  if (!a3
    || (id v9 = v8, ([v8 isNonProvisionallyAuthorizedForServiceTypeMask:a3] & 1) != 0))
  {
    memset(&v60, 0, sizeof(v60));
    __int16 v10 = sub_10023BD04(&xmmword_101999818, a2);
    if (!v10) {
      sub_10000C918("unordered_map::at: key not found");
    }
    std::string::operator=(&v60, (const std::string *)(v10 + 40));
    sub_100FE3188(&v60, (uint64_t)v46);
    unint64_t v11 = v51;
    if ((v51 & 0x80u) != 0) {
      unint64_t v11 = (unint64_t)v50[1];
    }
    if (v11)
    {
      id v12 = objc_msgSend(objc_msgSend(*(id *)a1, "vendor"), "proxyForService:", @"CLClientManager");
      if ((v51 & 0x80u) == 0) {
        unint64_t v13 = v50;
      }
      else {
        unint64_t v13 = (void **)v50[0];
      }
      objc_msgSend( v12,  "wakeUpLaunchdManagedClient:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v13));
    }

    unint64_t v14 = v49;
    if ((v49 & 0x80u) != 0) {
      unint64_t v14 = (unint64_t)v48[1];
    }
    if (v14)
    {
      id v15 = objc_msgSend(objc_msgSend(*(id *)a1, "vendor"), "proxyForService:", @"CLClientManager");
      if ((v49 & 0x80u) == 0) {
        __int16 v16 = v48;
      }
      else {
        __int16 v16 = (void **)v48[0];
      }
      objc_msgSend( v15,  "wakeUpLaunchdManagedClient:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v16));
    }

    sub_100920610((uint64_t)v46, (uint64_t)__p);
    if ((v71[3] & 0x80000000) != 0)
    {
      uint64_t v31 = *(void *)&__p[8];
      operator delete(*(void **)__p);
      if (v31) {
        goto LABEL_23;
      }
    }

    else if (v71[3])
    {
LABEL_23:
      sub_100920610((uint64_t)v46, (uint64_t)__p);
      id v17 = objc_msgSend(objc_msgSend(*(id *)a1, "vendor"), "proxyForService:", @"CLClientManager");
      if (v71[3] >= 0) {
        float v18 = __p;
      }
      else {
        float v18 = *(_BYTE **)__p;
      }
      objc_msgSend( v17,  "wakeUpLaunchdManagedClient:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v18));
      if ((v71[3] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      if (*(_BYTE *)(a1 + 48))
      {
        sub_100920610((uint64_t)v46, (uint64_t)v67);
        unint64_t v19 = objc_alloc(&OBJC_CLASS___NSString);
        if (v68 >= 0) {
          __int16 v20 = v67;
        }
        else {
          __int16 v20 = (void **)v67[0];
        }
        uint64_t v21 = -[NSString initWithUTF8String:](v19, "initWithUTF8String:", v20);
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_101862238);
        }
        unint64_t v22 = (os_log_s *)qword_101934978;
        if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEBUG))
        {
          float v23 = v67;
          if (v68 < 0) {
            float v23 = (void **)v67[0];
          }
          *(_DWORD *)std::stringbuf::string_type __p = 136380675;
          *(void *)&__p[4] = v23;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "ALM: %{private}s launching...", __p, 0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(__p, 0x65CuLL);
          if (qword_101934970 != -1) {
            dispatch_once(&qword_101934970, &stru_101862238);
          }
          unint64_t v39 = v67;
          if (v68 < 0) {
            unint64_t v39 = (void **)v67[0];
          }
          int v65 = 136380675;
          uint64_t v66 = v39;
          _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934978,  2LL,  "ALM: %{private}s launching...",  &v65,  12);
          unint64_t v41 = (char *)v40;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLApplicationLifecycleManager::launchApplication(const std::string &, CLClientServiceTypeMask)",  "%s\n",  v40);
          if (v41 != __p) {
            free(v41);
          }
        }

        float v24 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "CLLaunchOptionsLocation");
        v63[0] = FBSOpenApplicationOptionKeyPayloadOptions;
        uint64_t v61 = v24;
        uint64_t v62 = &__kCFBooleanTrue;
        int v25 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v62,  &v61,  1LL);
        v63[1] = FBSOpenApplicationOptionKeyActivateSuspended;
        v64[0] = v25;
        v64[1] = &__kCFBooleanTrue;
        float v26 = +[FBSOpenApplicationOptions optionsWithDictionary:]( &OBJC_CLASS___FBSOpenApplicationOptions,  "optionsWithDictionary:",  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v64,  v63,  2LL));
        sub_1002B68E8(a1 + 56, __p);
        unint64_t v27 = *(void **)(a1 + 80);
        v42[0] = _NSConcreteStackBlock;
        v42[1] = 3321888768LL;
        v42[2] = sub_10095BC30;
        float v42[3] = &unk_101862208;
        v42[4] = a1;
        v42[5] = *(void *)__p;
        double v43 = *(std::__shared_weak_count **)&__p[8];
        if (*(void *)&__p[8])
        {
          float v28 = (unint64_t *)(*(void *)&__p[8] + 16LL);
          do
            unint64_t v29 = __ldxr(v28);
          while (__stxr(v29 + 1, v28));
        }

        if (SHIBYTE(v68) < 0)
        {
          sub_1010DD48C(&v44, v67[0], (unint64_t)v67[1]);
        }

        else
        {
          __int128 v44 = *(_OWORD *)v67;
          uint64_t v45 = v68;
        }

        [v27 openApplication:v21 withOptions:v26 completion:v42];

        if (SHIBYTE(v45) < 0) {
          operator delete((void *)v44);
        }
        if (v43) {
          std::__shared_weak_count::__release_weak(v43);
        }
        if (*(void *)&__p[8]) {
          std::__shared_weak_count::__release_weak(*(std::__shared_weak_count **)&__p[8]);
        }
        if (SHIBYTE(v68) < 0) {
          operator delete(v67[0]);
        }
      }

      else
      {
        if (qword_101934970 != -1) {
          dispatch_once(&qword_101934970, &stru_101862238);
        }
        int v37 = (os_log_s *)qword_101934978;
        if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
        {
          if ((a2[23] & 0x80u) == 0) {
            int v38 = (uint64_t *)a2;
          }
          else {
            int v38 = *(uint64_t **)a2;
          }
          *(void *)std::stringbuf::string_type __p = 68289283LL;
          *(_WORD *)&__p[8] = 2082;
          *(void *)&__p[10] = "";
          __int16 v70 = 2081;
          *(void *)uint64_t v71 = v38;
          _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:ALM: failed attempt to launch before device unlocked since boot, clientKey:%{pr ivate, location:escape_only}s}",  __p,  0x1Cu);
        }
      }

void sub_10095AEE4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17, void *a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, void *__p, uint64_t a45, int a46, __int16 a47, char a48, char a49)
{
  if (a49 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10095B07C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10095B0B8(uint64_t a1, void *a2)
{
  *(void *)a1 = a2;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  uint64_t v4 = a1 + 8;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = a1 + 24;
  *(void *)(a1 + 32) = a1 + 24;
  *(void *)(a1 + 40) = 0LL;
  *(_BYTE *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  *(void *)(a1 + 56) = off_10182F180;
  unint64_t v5 = operator new(0x20uLL);
  int v5[2] = 0LL;
  void *v5 = off_10182F1B8;
  v5[1] = 0LL;
  *((_DWORD *)v5 + 6) = 31337;
  *(void *)(a1 + 64) = v5 + 3;
  *(void *)(a1 + 72) = v5;
  [a2 silo];
  sub_100D96A2C((uint64_t)sub_10095B2F8, a1, *(void **)a1, &v13);
  uint64_t v6 = v13;
  uint64_t v13 = 0LL;
  uint64_t v7 = *(void *)v4;
  *(void *)uint64_t v4 = v6;
  if (v7)
  {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    uint64_t v8 = v13;
    uint64_t v13 = 0LL;
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
  }

  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:3 registrationInfo:0];
  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:4 registrationInfo:0];
  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:6 registrationInfo:0];
  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:5 registrationInfo:0];
  [*(id *)(*(void *)v4 + 16) register:*(void *)(*(void *)v4 + 8) forNotification:2 registrationInfo:0];
  sub_100ACD980((uint64_t)sub_10095B4D0, a1, *(void **)a1, &v13);
  uint64_t v9 = v13;
  uint64_t v13 = 0LL;
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v9;
  if (v10)
  {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    uint64_t v11 = v13;
    uint64_t v13 = 0LL;
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    }
  }

  [*(id *)(*(void *)(a1 + 16) + 16) register:*(void *)(*(void *)(a1 + 16) + 8) forNotification:1 registrationInfo:0];
  *(void *)(a1 + 80) = objc_alloc_init(&OBJC_CLASS___FBSOpenApplicationService);
  return a1;
}

void sub_10095B280(_Unwind_Exception *a1)
{
  uint64_t v6 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = *v4;
  *uint64_t v4 = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  _Unwind_Resume(a1);
}

void sub_10095B2F0()
{
}

void sub_10095B2F8(uint64_t a1, int *a2, unsigned int *a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101862258);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLApplicationLifecycleManager::onAppMonitorNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101862258);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      id v15 = "";
      __int16 v16 = 2082;
      id v17 = "activity";
      __int16 v18 = 2050;
      unint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLApplicationLifecycleManager::onAppMonitorNotification, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10095C2A8((uint64_t)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10095B4B0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10095B4D0(uint64_t a1, _DWORD *a2, uint64_t a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101862258);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLApplicationLifecycleManager::onDataProtectionManagerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101862258);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      id v15 = "";
      __int16 v16 = 2082;
      id v17 = "activity";
      __int16 v18 = 2050;
      unint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLApplicationLifecycleManager::onDataProtectionManagerNotification, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10095C90C((uint64_t)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10095B688( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10095B6A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }

  sub_1002B729C((void *)(a1 + 56));
  sub_10095CBBC((void *)(a1 + 24));
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return a1;
}

void sub_10095B744(id *a1, unsigned int *a2, const void **a3, int a4)
{
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101862238);
  }
  uint64_t v8 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v9 = *a2;
    else {
      uint64_t v10 = (void *)*a3;
    }
    *(_DWORD *)uint64_t buf = 68289795;
    int v32 = 0;
    __int16 v33 = 2082;
    __int128 v34 = "";
    __int16 v35 = 1026;
    unsigned int v36 = v9;
    __int16 v37 = 1026;
    *(_DWORD *)int v38 = a4;
    *(_WORD *)&v38[4] = 2081;
    *(void *)&v38[6] = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:@ALM: Taking process assertion for process, processId:%{public}u, justLaunched:%{ public}hhd, clientKey:%{private, location:escape_only}s}",  buf,  0x28u);
  }

  uint64_t v11 = *((unsigned __int8 *)a3 + 23);
  if ((v11 & 0x80u) == 0LL) {
    id v12 = (const void *)*((unsigned __int8 *)a3 + 23);
  }
  else {
    id v12 = a3[1];
  }
  uint64_t v13 = qword_101999848;
  if (byte_101999857 >= 0) {
    uint64_t v13 = byte_101999857;
  }
  if (byte_101999857 >= 0) {
    __int16 v14 = &qword_101999840;
  }
  else {
    __int16 v14 = (uint64_t *)qword_101999840;
  }
  if ((v11 & 0x80) != 0)
  {
    if (!memcmp(*a3, v14, (size_t)a3[1])) {
      goto LABEL_25;
    }
LABEL_24:
    unint64_t v39 = +[RBSDomainAttribute attributeWithDomain:name:]( &OBJC_CLASS___RBSDomainAttribute,  "attributeWithDomain:name:",  @"com.apple.locationd",  @"FenceEvent");
    __int16 v16 = @"locationd.fence";
    id v17 = &v39;
    goto LABEL_26;
  }

  if (*((_BYTE *)a3 + 23))
  {
    id v15 = a3;
    while (*(unsigned __int8 *)v15 == *(unsigned __int8 *)v14)
    {
      id v15 = (const void **)((char *)v15 + 1);
      __int16 v14 = (uint64_t *)((char *)v14 + 1);
      if (!--v11) {
        goto LABEL_25;
      }
    }

    goto LABEL_24;
  }

void sub_10095BB28(uint64_t a1)
{
  if (qword_101934970 != -1) {
    dispatch_once(&qword_101934970, &stru_101862238);
  }
  uint64_t v2 = (os_log_s *)qword_101934978;
  if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 32);
    v5[0] = 68289538;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1026;
    int v9 = v3;
    __int16 v10 = 2114;
    uint64_t v11 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:@ALM: Releasing process assertion for process, processId:%{public}u, client:%{pub lic, location:escape_only}@}",  (uint8_t *)v5,  0x22u);
  }

  [*(id *)(a1 + 40) invalidate];
}

void sub_10095BC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v6 = *(id **)(a1 + 32);
  id v7 = [*v6 silo];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3321888768LL;
  _OWORD v12[2] = sub_10095BD5C;
  v12[3] = &unk_1018621D8;
  uint64_t v9 = *(void *)(a1 + 40);
  __int16 v8 = *(std::__shared_weak_count **)(a1 + 48);
  void v12[6] = v6;
  v12[7] = v9;
  uint64_t v13 = v8;
  if (v8)
  {
    p_shared_weak_owners = (unint64_t *)&v8->__shared_weak_owners_;
    do
      unint64_t v11 = __ldxr(p_shared_weak_owners);
    while (__stxr(v11 + 1, p_shared_weak_owners));
  }

  _DWORD v12[4] = a2;
  if (*(char *)(a1 + 79) < 0)
  {
    sub_1010DD48C(&__p, *(void **)(a1 + 56), *(void *)(a1 + 64));
  }

  else
  {
    __int128 __p = *(_OWORD *)(a1 + 56);
    uint64_t v15 = *(void *)(a1 + 72);
  }

  v12[5] = a3;
  [v7 async:v12];
  if (SHIBYTE(v15) < 0) {
    operator delete((void *)__p);
  }
  if (v13) {
    std::__shared_weak_count::__release_weak(v13);
  }
}

void sub_10095BD2C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (a17) {
    std::__shared_weak_count::__release_weak(a17);
  }
  _Unwind_Resume(exception_object);
}

void sub_10095BD5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3321888768LL;
  __int16 v6 = sub_10095BE40;
  id v7 = &unk_1018621A0;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v10 = v2;
  uint64_t v8 = v3;
  if (*(char *)(a1 + 95) < 0)
  {
    sub_1010DD48C(&__p, *(void **)(a1 + 72), *(void *)(a1 + 80));
  }

  else
  {
    __int128 __p = *(_OWORD *)(a1 + 72);
    uint64_t v12 = *(void *)(a1 + 88);
  }

  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 64);
  if (v4 && *(void *)(v4 + 8) != -1LL) {
    v6((uint64_t)v5);
  }
  if (SHIBYTE(v12) < 0) {
    operator delete((void *)__p);
  }
}

void sub_10095BE24( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10095BE40(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = *(void *)(a1 + 48);
    memset(&v17, 0, sizeof(v17));
    std::string::operator=(&v17, (const std::string *)(a1 + 56));
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    uint64_t v3 = sub_10095CC78(v2 + 24, 0LL, 0LL, (uint64_t)&v17);
    v3[1] = v2 + 24;
    uint64_t v4 = *(void *)(v2 + 24);
    *uint64_t v3 = v4;
    *(void *)(v4 + _Block_object_dispose((const void *)(v1 - 224), 8) = v3;
    *(void *)(v2 + 24) = v3;
    ++*(void *)(v2 + 40);
  }

  else if (*(void *)(a1 + 40))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862278);
    }
    uint64_t v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v6 = (void *)(a1 + 56);
      id v7 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "localizedDescription"), "UTF8String");
      LODWORD(v17.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)v17.__r_.__value_.__r.__words + 4) = (std::string::size_type)v6;
      WORD2(v17.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&v17.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning Couldn't launch application %s (%s)",  (uint8_t *)&v17,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&v17, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862278);
      }
      uint64_t v8 = (void *)(a1 + 56);
      uint64_t v9 = qword_101934A78;
      id v10 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "localizedDescription"), "UTF8String");
      int v13 = 136315394;
      __int16 v14 = v8;
      __int16 v15 = 2080;
      id v16 = v10;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &v17,  1628LL,  &_mh_execute_header,  v9,  0LL,  "#Warning Couldn't launch application %s (%s)",  (const char *)&v13,  22);
      uint64_t v12 = (std::string *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLApplicationLifecycleManager::launchApplication(const std::string &, CLClientServiceTypeMask)_block_invoke",  "%s\n",  v11);
      if (v12 != &v17) {
        free(v12);
      }
    }
  }

void sub_10095C0B8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

void *sub_10095C0DC(uint64_t a1, uint64_t a2)
{
  float result = (void *)(a1 + 56);
  __int128 v3 = *(_OWORD *)(a2 + 56);
  result[2] = *(void *)(a2 + 72);
  *(_OWORD *)float result = v3;
  return result;
}

void sub_10095C10C(uint64_t a1)
{
}

_BYTE *sub_10095C120(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 64);
  a1[7] = *(void *)(a2 + 56);
  a1[8] = v3;
  if (v3)
  {
    uint64_t v4 = (unint64_t *)(v3 + 16);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

  float result = a1 + 9;
  __int128 v7 = *(_OWORD *)(a2 + 72);
  a1[11] = *(void *)(a2 + 88);
  *(_OWORD *)float result = v7;
  return result;
}

void sub_10095C18C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 64);
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10095C1A4(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
}

_BYTE *sub_10095C1E4(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  a1[5] = *(void *)(a2 + 40);
  a1[6] = v3;
  if (v3)
  {
    uint64_t v4 = (unint64_t *)(v3 + 16);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

  float result = a1 + 7;
  __int128 v7 = *(_OWORD *)(a2 + 56);
  a1[9] = *(void *)(a2 + 72);
  *(_OWORD *)float result = v7;
  return result;
}

void sub_10095C250(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 48);
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10095C268(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
}

void sub_10095C2A8(uint64_t a1, uint64_t a2, int *a3, unsigned int *a4)
{
  if ((*a3 - 2) > 4)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862278);
    }
    float v28 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      int v29 = *a3;
      LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
      HIDWORD(buf.__r_.__value_.__r.__words[0]) = v29;
      LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)sub_100D943B0(a3);
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "#Warning unhandled app monitor notification, %d, %s",  (uint8_t *)&buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862278);
      }
      uint64_t v32 = qword_101934A78;
      int v33 = *a3;
      LODWORD(v46.__r_.__value_.__l.__data_) = 67109378;
      HIDWORD(v46.__r_.__value_.__r.__words[0]) = v33;
      LOWORD(v46.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&v46.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)sub_100D943B0(a3);
      LODWORD(v43) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v32,  0LL,  "#Warning unhandled app monitor notification, %d, %s",  &v46,  v43);
      __int16 v35 = (std::string *)v34;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLApplicationLifecycleManager::onAppMonitorNotification(int, const CLAppMonitor_Type::Notification &, const CLAppMonitor_Type::NotificationData &)",  "%s\n",  v34);
      if (v35 != &buf) {
        free(v35);
      }
    }
  }

  else if (*(void *)(a1 + 40))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101862278);
    }
    __int128 v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *a3;
      uint64_t v9 = sub_100D943B0(a3);
      unsigned int v10 = *a4;
      else {
        unint64_t v11 = (unsigned int *)*((void *)a4 + 1);
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 67109890;
      HIDWORD(buf.__r_.__value_.__r.__words[0]) = v8;
      LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v9;
      WORD1(buf.__r_.__value_.__r.__words[2]) = 1024;
      HIDWORD(buf.__r_.__value_.__r.__words[2]) = v10;
      __int16 v50 = 2080;
      unsigned __int8 v51 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "notification, %d, %s, pid, %d, bundleId, %s",  (uint8_t *)&buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101862278);
      }
      uint64_t v36 = qword_101934A78;
      int v37 = *a3;
      int v38 = sub_100D943B0(a3);
      unsigned int v39 = *a4;
      else {
        double v40 = (unsigned int *)*((void *)a4 + 1);
      }
      LODWORD(v46.__r_.__value_.__l.__data_) = 67109890;
      HIDWORD(v46.__r_.__value_.__r.__words[0]) = v37;
      LOWORD(v46.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&v46.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v38;
      WORD1(v46.__r_.__value_.__r.__words[2]) = 1024;
      HIDWORD(v46.__r_.__value_.__r.__words[2]) = v39;
      __int16 v47 = 2080;
      uint64_t v48 = v40;
      LODWORD(v43) = 34;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v36,  2LL,  "notification, %d, %s, pid, %d, bundleId, %s",  &v46,  v43,  v44,  v45);
      int v42 = (std::string *)v41;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLApplicationLifecycleManager::onAppMonitorNotification(int, const CLAppMonitor_Type::Notification &, const CLAppMonitor_Type::NotificationData &)",  "%s\n",  v41);
      if (v42 != &buf) {
        free(v42);
      }
    }

    uint64_t v45 = 0LL;
    uint64_t v12 = +[RBSProcessIdentifier identifierWithPid:](&OBJC_CLASS___RBSProcessIdentifier, "identifierWithPid:", *a4);
    id v13 = +[RBSProcessHandle handleForIdentifier:error:]( &OBJC_CLASS___RBSProcessHandle,  "handleForIdentifier:error:",  v12,  &v45);
    if (v12 && v13)
    {
      __int16 v14 = (const __CFString *)objc_msgSend(objc_msgSend(v13, "bundle"), "identifier");
      memset(&buf, 0, sizeof(buf));
      if (v14)
      {
        sub_1002A6C50(v14, &v46);
        std::string buf = v46;
        std::string::size_type size = v46.__r_.__value_.__s.__size_;
        if ((v46.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          std::string::size_type size = v46.__r_.__value_.__l.__size_;
        }
        if (size)
        {
          uint64_t v16 = *(void *)(a1 + 32);
          if (v16 != a1 + 24)
          {
            char v17 = 0;
            do
            {
              double v18 = *(double *)(v16 + 40);
              if (v18 + 5.0 >= CFAbsoluteTimeGetCurrent())
              {
                uint64_t v21 = buf.__r_.__value_.__s.__size_;
                if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                  std::string::size_type v22 = buf.__r_.__value_.__s.__size_;
                }
                else {
                  std::string::size_type v22 = buf.__r_.__value_.__l.__size_;
                }
                uint64_t v23 = *(unsigned __int8 *)(v16 + 39);
                int v24 = (char)v23;
                if ((v23 & 0x80u) != 0LL) {
                  uint64_t v23 = *(void *)(v16 + 24);
                }
                if (v22 != v23) {
                  goto LABEL_37;
                }
                if (v24 >= 0) {
                  int v25 = (unsigned __int8 *)(v16 + 16);
                }
                else {
                  int v25 = *(unsigned __int8 **)(v16 + 16);
                }
                if ((buf.__r_.__value_.__s.__size_ & 0x80) != 0)
                {
                  BOOL v27 = memcmp(buf.__r_.__value_.__l.__data_, v25, buf.__r_.__value_.__l.__size_) == 0;
                }

                else
                {
                  if (buf.__r_.__value_.__s.__size_)
                  {
                    p_std::string buf = &buf;
                    while (p_buf->__r_.__value_.__s.__data_[0] == *v25)
                    {
                      p_std::string buf = (std::string *)((char *)p_buf + 1);
                      ++v25;
                      if (!--v21) {
                        goto LABEL_36;
                      }
                    }

void sub_10095C8E0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10095C90C(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 1)
  {
    int v7 = *(unsigned __int8 *)(a4 + 4);
    *(_BYTE *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v7;
    if (v7) {
      [*(id *)(*(void *)(a1 + 16) + 16) unregister:*(void *)(*(void *)(a1 + 16) + 8) forNotification:1];
    }
    if (qword_101934970 != -1) {
      dispatch_once(&qword_101934970, &stru_101862238);
    }
    int v8 = (os_log_s *)qword_101934978;
    if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_INFO))
    {
      if (*(_BYTE *)(a1 + 48)) {
        uint64_t v9 = "YES";
      }
      else {
        uint64_t v9 = "NO";
      }
      unsigned int v10 = "en";
      if (!*(_BYTE *)(a1 + 48)) {
        unsigned int v10 = "dis";
      }
      *(_DWORD *)std::string buf = 136380931;
      __int16 v20 = v9;
      __int16 v21 = 2081;
      std::string::size_type v22 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "ALM: device unlocked since boot, %{private}s, application launch capability, %{private}sabled",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934970 != -1) {
        dispatch_once(&qword_101934970, &stru_101862238);
      }
      if (*(_BYTE *)(a1 + 48)) {
        unint64_t v11 = "YES";
      }
      else {
        unint64_t v11 = "NO";
      }
      uint64_t v12 = "en";
      if (!*(_BYTE *)(a1 + 48)) {
        uint64_t v12 = "dis";
      }
      int v15 = 136380931;
      uint64_t v16 = v11;
      __int16 v17 = 2081;
      double v18 = v12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934978,  1LL,  "ALM: device unlocked since boot, %{private}s, application launch capability, %{private}sabled",  &v15,  22);
      __int16 v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLApplicationLifecycleManager::onDataProtectionManagerNotification(int, const CLDataProtectionManager_Type: :Notification &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

void sub_10095CB64(id a1)
{
  qword_101934978 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

void sub_10095CB90(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_10095CBBC(void *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = a1[1];
    uint64_t v4 = *(void **)v2;
    v4[1] = *(void *)(*a1 + 8LL);
    **(void **)(v3 + _Block_object_dispose((const void *)(v1 - 224), 8) = v4;
    a1[2] = 0LL;
    while ((void *)v2 != a1)
    {
      uint64_t v5 = *(void *)(v2 + 8);
      sub_10095CC1C((int)a1, (void **)v2);
      uint64_t v2 = v5;
    }
  }

void sub_10095CC1C(int a1, void **__p)
{
}

void sub_10095CC4C(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void *sub_10095CC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = operator new(0x30uLL);
  *int v7 = a2;
  v7[1] = a3;
  int v8 = v7 + 2;
  if (*(char *)(a4 + 23) < 0)
  {
    sub_1010DD48C(v8, *(void **)a4, *(void *)(a4 + 8));
  }

  else
  {
    *(_OWORD *)int v8 = *(_OWORD *)a4;
    v7[4] = *(void *)(a4 + 16);
  }

  v7[5] = *(void *)(a4 + 24);
  return v7;
}

void sub_10095CCE4(_Unwind_Exception *a1)
{
}

uint64_t sub_10095CCF8()
{
  xmmword_101999818 = 0u;
  unk_101999828 = 0u;
  dword_101999838 = 1065353216;
  __cxa_atexit((void (*)(void *))sub_10095A15C, &xmmword_101999818, (void *)&_mh_execute_header);
  sub_1010DDBC0(&qword_101999840, "com.apple.NanoCompass.watchkitapp");
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999840, (void *)&_mh_execute_header);
}

uint64_t sub_10095CDEC()
{
  return sub_100E31D84((uint64_t)&unk_101999890, 1, 2, 2, 1, -1.0, 43200.0, 43200.0);
}

uint64_t sub_10095CE60()
{
  unsigned __int8 v0 = operator new(0x48uLL);
  uint64_t result = sub_10095CEE8((uint64_t)v0);
  qword_1019A1888 = (uint64_t)v0;
  return result;
}

void sub_10095CE90(_Unwind_Exception *a1)
{
}

uint64_t sub_10095CEA4()
{
  if (qword_1019998C0 != -1) {
    dispatch_once(&qword_1019998C0, &stru_101862298);
  }
  return qword_1019A1888;
}

uint64_t sub_10095CEE8(uint64_t a1)
{
  uint64_t v2 = sub_1006DC9EC(a1, (uint64_t)"CLGestureNotifier", 1);
  *(void *)(v2 + 32) = 0LL;
  *(void *)(v2 + 40) = 0xBFF0000000000000LL;
  uint64_t v3 = (void *)(v2 + 40);
  *(void *)uint64_t v2 = off_1018622C8;
  *(_BYTE *)(v2 + 64) = 0;
  uint64_t v4 = (BOOL *)(v2 + 64);
  *(void *)(v2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(v2 + 56) = 0LL;
  uint64_t v5 = sub_1006E27E8();
  sub_100413284(v5, buf);
  char v6 = sub_1002A82BC(*(uint64_t *)buf, "GestureRecognitionAccelerometerInterval", v3);
  char v7 = v6;
  int v8 = v25;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      if ((v7 & 1) != 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }

  if ((v6 & 1) == 0) {
LABEL_6:
  }
    *uint64_t v3 = 0x3F947AE147AE147BLL;
LABEL_7:
  uint64_t v11 = sub_1006E27E8();
  sub_100413284(v11, buf);
  char v12 = sub_1002A6F64(*(uint64_t *)buf, "GestureRecognitionEnableDynamicAccelerometerRate", v4);
  char v13 = v12;
  __int16 v14 = v25;
  if (!v25) {
    goto LABEL_11;
  }
  int v15 = (unint64_t *)&v25->__shared_owners_;
  do
    unint64_t v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (v16)
  {
LABEL_11:
    if ((v12 & 1) != 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if ((v13 & 1) == 0) {
LABEL_12:
  }
    *uint64_t v4 = 1;
LABEL_13:
  if (qword_101934530 != -1) {
    dispatch_once(&qword_101934530, &stru_101862310);
  }
  __int16 v17 = (os_log_s *)qword_101934538;
  if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEBUG))
  {
    BOOL v18 = *v4;
    *(_DWORD *)std::string buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v18;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "Enable dynamic accelerometer rate = %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862310);
    }
    BOOL v20 = *v4;
    v23[0] = 67240192;
    v23[1] = v20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  2LL,  "Enable dynamic accelerometer rate = %{public}d",  v23,  8);
    std::string::size_type v22 = (uint8_t *)v21;
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLGestureNotifier::CLGestureNotifier()", "%s\n", v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  return a1;
}

void sub_10095D1D8(_Unwind_Exception *a1)
{
}

void *sub_10095D218(void *a1)
{
  *a1 = off_1018622C8;
  sub_10095D258((uint64_t)a1);
  sub_10095D844(a1 + 4, 0LL);
  return sub_1006DCAA8(a1);
}

void sub_10095D258(uint64_t a1)
{
  if (sub_1006E5C40())
  {
    if (*(_BYTE *)(a1 + 64))
    {
      if (!*(void *)(a1 + 56)) {
        return;
      }
      uint64_t v2 = (uint64_t *)(a1 + 48);
      if (!*(void *)(a1 + 48)) {
        return;
      }
      uint64_t v3 = sub_100A27B1C();
      sub_1006DD2A0(v3, 0, *(void *)(a1 + 56));
      uint64_t v4 = *(void *)(a1 + 56);
      if (v4) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
      }
      *(void *)(a1 + 56) = 0LL;
    }

    else
    {
      uint64_t v9 = *(void *)(a1 + 48);
      int v8 = (uint64_t *)(a1 + 48);
      if (!v9) {
        return;
      }
      uint64_t v2 = v8;
    }

    uint64_t v10 = sub_1006E5C40();
    sub_1006DD2A0(v10, 0, *v2);
    if (*v2) {
      (*(void (**)(uint64_t))(*(void *)*v2 + 8LL))(*v2);
    }
    *uint64_t v2 = 0LL;
  }

  else
  {
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862310);
    }
    uint64_t v5 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "No accelerometer; not detecting gestures",
        buf,
        2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862310);
      }
      v11[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  17LL,  "No accelerometer; not detecting gestures",
        v11,
        2);
      char v7 = (uint8_t *)v6;
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLGestureNotifier::stopDetectingGestures()", "%s\n", v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

void sub_10095D468(void *a1)
{
  uint64_t v1 = sub_10095D218(a1);
  operator delete(v1);
}

void sub_10095D47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1006E27E8();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_10095D4E0;
  v5[3] = &unk_101830538;
  v5[4] = a1;
  v5[5] = a2;
  sub_1006E28B8(v4, (uint64_t)v5);
}

void sub_10095D4E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = operator new(0x68uLL);
  sub_1010DDBC0(&v20, off_101939D58);
  uint64_t v4 = std::string::append(&v20, "/");
  __int128 v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__l.__cap_ = v4->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0LL;
  v4->__r_.__value_.__l.__cap_ = 0LL;
  v4->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v6 = *(void *)(a1 + 40);
  int v7 = *(char *)(v6 + 23);
  if (v7 >= 0) {
    int v8 = *(const std::string::value_type **)(a1 + 40);
  }
  else {
    int v8 = *(const std::string::value_type **)v6;
  }
  if (v7 >= 0) {
    std::string::size_type v9 = *(unsigned __int8 *)(v6 + 23);
  }
  else {
    std::string::size_type v9 = *(void *)(v6 + 8);
  }
  uint64_t v10 = std::string::append(&v21, v8, v9);
  __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__l.__cap_ = v10->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0LL;
  v10->__r_.__value_.__l.__cap_ = 0LL;
  v10->__r_.__value_.__r.__words[0] = 0LL;
  char v12 = std::string::append(&v24, ".dat");
  __int128 v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  int64_t cap = v12->__r_.__value_.__l.__cap_;
  *(_OWORD *)__int128 __p = v13;
  v12->__r_.__value_.__l.__size_ = 0LL;
  v12->__r_.__value_.__l.__cap_ = 0LL;
  v12->__r_.__value_.__r.__words[0] = 0LL;
  if (cap >= 0) {
    __int16 v14 = __p;
  }
  else {
    __int16 v14 = (void **)__p[0];
  }
  sub_100972CAC(v3, v14, 1LL);
  sub_10095D844((uint64_t *)(v2 + 32), (uint64_t)v3);
  if (SHIBYTE(cap) < 0) {
    operator delete(__p[0]);
  }
  if (qword_101934530 != -1) {
    dispatch_once(&qword_101934530, &stru_101862310);
  }
  int v15 = (os_log_s *)qword_101934538;
  if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEBUG))
  {
    unint64_t v16 = *(void ***)(a1 + 40);
    LODWORD(__p[0]) = 136380675;
    *(void **)((char *)__p + 4) = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "Using prototype: %{private}s",  (uint8_t *)__p,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862310);
    }
    std::string::size_type v17 = *(void *)(a1 + 40);
    LODWORD(v24.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)v24.__r_.__value_.__r.__words + 4) = v17;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934538,  2LL,  "Using prototype: %{private}s",  &v24,  12);
    uint64_t v19 = (void **)v18;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLGestureNotifier::setGestureClassifier(const std::string &)_block_invoke",  "%s\n",  v18);
    if (v19 != __p) {
      free(v19);
    }
  }

void sub_10095D7C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, void *__p, uint64_t a26, int a27, __int16 a28, char a29, char a30)
{
}

void sub_10095D844(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_100972D8C();
    operator delete(v4);
  }

void sub_10095D870(uint64_t a1)
{
  if (*(double *)(a1 + 40) >= 0.0)
  {
    if (sub_1006E5C40())
    {
      if (!*(void *)(a1 + 32))
      {
        sub_1010DDBC0(__p, "EarGesture_Prototypes_Siri_1");
        uint64_t v5 = sub_1006E27E8();
        *(void *)std::string buf = _NSConcreteStackBlock;
        uint64_t v17 = 3221225472LL;
        BOOL v18 = sub_10095D4E0;
        uint64_t v19 = &unk_101830538;
        uint64_t v20 = a1;
        std::string v21 = __p;
        sub_1006E28B8(v5, (uint64_t)buf);
        if (v15 < 0) {
          operator delete(__p[0]);
        }
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862310);
        }
        uint64_t v6 = (os_log_s *)qword_101934538;
        if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Gesture prototype was not setup. Using default prototype",  buf,  2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934530 != -1) {
            dispatch_once(&qword_101934530, &stru_101862310);
          }
          LOWORD(__p[0]) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  17LL,  "Gesture prototype was not setup. Using default prototype",  __p,  2);
          __int128 v13 = (uint8_t *)v12;
          sub_10029211C("Generic", 1LL, 0, 0LL, "void CLGestureNotifier::startDetectingGestures()", "%s\n", v12);
          if (v13 != buf) {
            free(v13);
          }
        }
      }

      if ((!*(_BYTE *)(a1 + 64) || !*(void *)(a1 + 56)) && !*(void *)(a1 + 48))
      {
        sub_100971A90(*(void *)(a1 + 32));
        int v7 = operator new(0xA8uLL);
        sub_10095E0E8(v7, (uint64_t)sub_10095DDCC, a1, &dbl_101341638, &dbl_101341640, &dbl_101341648);
        *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v7;
        if (*(_BYTE *)(a1 + 64))
        {
          int v8 = operator new(0x20uLL);
          *int v8 = off_1018A2210;
          *int v8 = &off_101862390;
          v8[1] = 0LL;
          v8[2] = sub_10095DE8C;
          v8[3] = a1;
          *(void *)(a1 + 56) = v8;
          uint64_t v9 = sub_100A27B1C();
          sub_1006DCB40(v9, 0, *(void *)(a1 + 56), -1.0);
        }

        else
        {
          buf[0] = 0;
          sub_10095DE8C(buf, a1);
        }
      }
    }

    else
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862310);
      }
      uint64_t v10 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "No accelerometer; not detecting gestures",
          buf,
          2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862310);
        }
        LOWORD(__p[0]) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  17LL,  "No accelerometer; not detecting gestures",
          __p,
          2);
        uint64_t v3 = (uint8_t *)v11;
        sub_10029211C("Generic", 1LL, 0, 0LL, "void CLGestureNotifier::startDetectingGestures()", "%s\n", v11);
        goto LABEL_34;
      }
    }
  }

  else
  {
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862310);
    }
    uint64_t v1 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEBUG,  "Not starting gesture detection since requested accelerometer interval < 0",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862310);
      }
      LOWORD(__p[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  2LL,  "Not starting gesture detection since requested accelerometer interval < 0",  __p,  2);
      uint64_t v3 = (uint8_t *)v2;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLGestureNotifier::startDetectingGestures()", "%s\n", v2);
LABEL_34:
      if (v3 != buf) {
        free(v3);
      }
    }
  }

void sub_10095DD98( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

const char *sub_10095DDCC(uint64_t a1, uint64_t a2, __n128 a3, int8x16_t a4)
{
  v8.n128_u64[0] = *(void *)(a1 + 8);
  v8.n128_u32[2] = *(_DWORD *)(a1 + 16);
  unint64_t v9 = *(void *)a1;
  a3.n128_u64[0] = v9;
  uint64_t result = (const char *)sub_100972D90(*(unsigned int **)(a2 + 32), &v8, &v12, &v11, &v10, a3, a4);
  if (result)
  {
    strncpy(__dst, result, 0x10uLL);
    int v14 = v11;
    int v15 = v12;
    unint64_t v7 = *(void *)a1;
    uint64_t v16 = v10;
    unint64_t v17 = v7;
    return (const char *)sub_1006DD65C(a2, 0LL, (uint64_t)__dst, 40LL);
  }

  return result;
}

void sub_10095DE8C(unsigned __int8 *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t v4 = sub_1006E5C40();
  uint64_t v5 = *(void *)(a2 + 48);
  if (v3)
  {
    sub_1006DD2A0(v4, 0, v5);
    sub_100971A90(*(void *)(a2 + 32));
  }

  else
  {
    sub_1006DCB40(v4, 0, v5, *(double *)(a2 + 40));
  }

void sub_10095DED8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2)
  {
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862310);
    }
    int v3 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "Unrecognized notification", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862310);
      }
      v6[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  17LL,  "Unrecognized notification",  v6,  2);
      uint64_t v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLGestureNotifier::numberOfSpectatorsChanged(int, size_t)",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

  else if (a3)
  {
    sub_10095D870(a1);
  }

  else
  {
    sub_10095D258(a1);
  }

void sub_10095E0BC(id a1)
{
  qword_101934538 = (uint64_t)os_log_create("com.apple.locationd.Motion", "EarGesture");
}

void *sub_10095E0E8(void *a1, uint64_t a2, uint64_t a3, double *a4, double *a5, double *a6)
{
  *a1 = off_1018A2210;
  *a1 = off_101862340;
  a1[1] = 0LL;
  a1[2] = a2;
  a1[3] = a3;
  sub_1009638C8(a1 + 4, *a4, *a5, *a6, 0.04);
  return a1;
}

void sub_10095E170(_Unwind_Exception *a1)
{
}

uint64_t sub_10095E184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1009638CC(a1 + 32, (float *)(a3 + 8), (double *)a3, v7);
  if ((_DWORD)result)
  {
    double v6 = *(double *)a3;
    return (*(uint64_t (**)(double *, void))(a1 + 16))(&v6, *(void *)(a1 + 24));
  }

  return result;
}

uint64_t sub_10095E1D8(uint64_t a1, char a2, int a3, char a4)
{
  uint64_t v7 = sub_1003070C0(a1, a3);
  *(void *)uint64_t v7 = off_1018623E0;
  *(void *)(v7 + 200) = off_101862450;
  sub_100A3ECDC(v7 + 200, *(unsigned __int8 *)(v7 + 8), 0);
  *(void *)a1 = off_1018623E0;
  *(void *)(a1 + 200) = off_101862450;
  *(_DWORD *)(a1 + 276) = 0;
  *(void *)(a1 + 280) = 0LL;
  *(_DWORD *)(a1 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = -1;
  *(_BYTE *)(a1 + 292) = a4;
  *(_DWORD *)(a1 + 296) = 1127481344;
  uint64_t v8 = sub_1006FE6A0();
  *(void *)std::string buf = sub_1006FE6E4(v8, a1 + 24);
  sub_1008F4D20(a1 + 304, (double *)buf, (double *)(a1 + 16), (double *)(a1 + 32), a2);
  if (!sub_1007492FC())
  {
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_1018624B8);
    }
    unint64_t v9 = (os_log_s *)qword_101934568;
    if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "9-axis sensor fusion is not supported on this platform.  Returning.",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934560 != -1) {
        dispatch_once(&qword_101934560, &stru_1018624B8);
      }
      v13[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  17LL,  "9-axis sensor fusion is not supported on this platform.  Returning.",  v13,  2);
      int v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLSensorFusionService9Axis::CLSensorFusionService9Axis(BOOL, int, BOOL)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }
  }

  return a1;
}

void sub_10095E404(_Unwind_Exception *a1)
{
}

uint64_t sub_10095E440(void *a1)
{
  *a1 = off_1018623E0;
  a1[25] = off_101862450;
  uint64_t v2 = a1 + 25;
  sub_10095E550((uint64_t)a1);
  sub_1008F4D94(a1 + 38);
  sub_100A3ED0C(v2);
  return sub_100307A9C((uint64_t)a1);
}

uint64_t sub_10095E494(uint64_t a1)
{
  return sub_10095E440((void *)(a1 - 200));
}

void sub_10095E49C(void *a1)
{
  uint64_t v1 = (void *)sub_10095E440(a1);
  operator delete(v1);
}

void sub_10095E4B0(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10095E440((void *)(a1 - 200));
  operator delete(v1);
}

uint64_t sub_10095E4C8(uint64_t a1)
{
  *(_DWORD *)(a1 + 276) = 0;
  *(void *)(a1 + 280) = 0LL;
  *(_DWORD *)(a1 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = -1;
  *(_DWORD *)(a1 + 296) = 1127481344;
  sub_100A3F004(a1 + 200, *(double *)(a1 + 16));
  sub_100A3EE64(a1 + 200, *(double *)(a1 + 24));
  sub_100A3EF20(a1 + 200);
  sub_100A3F0C0(a1 + 200, *(double *)(a1 + 32));
  uint64_t v3 = 2LL;
  return sub_10030867C(a1, &v3);
}

void *sub_10095E550(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 200);
  sub_100A3EDE8((void *)(a1 + 200));
  sub_100A3EFD4((uint64_t)v1);
  sub_100A3ED50(v1);
  return sub_100A3ED9C(v1);
}

void sub_10095E588(uint64_t a1, int a2)
{
  if (*(void *)(a1 + 56))
  {
    if (*(unsigned __int8 *)(a1 + 292) != a2)
    {
      if (qword_101934560 != -1) {
        dispatch_once(&qword_101934560, &stru_1018624B8);
      }
      uint64_t v3 = (os_log_s *)qword_101934568;
      if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_DEFAULT))
      {
        int v4 = *(unsigned __int8 *)(a1 + 292);
        *(_DWORD *)std::string buf = 67240192;
        int v10 = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "North reference overridden as %{public}d by first client",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934560 != -1) {
          dispatch_once(&qword_101934560, &stru_1018624B8);
        }
        int v5 = *(unsigned __int8 *)(a1 + 292);
        v8[0] = 67240192;
        v8[1] = v5;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  0LL,  "North reference overridden as %{public}d by first client",  v8,  8);
        uint64_t v7 = (uint8_t *)v6;
        sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLSensorFusionService9Axis::useNorthRef(BOOL)", "%s\n", v6);
        if (v7 != buf) {
          free(v7);
        }
      }
    }
  }

  else
  {
    *(_BYTE *)(a1 + 292) = a2;
  }

void sub_10095E750(uint64_t a1, uint64_t a2)
{
  int v4 = (double *)(a1 + 304);
  float v5 = *(float *)(a2 + 12);
  *(double *)uint64_t v19 = *(float *)(a2 + 8);
  *(double *)v17.i64 = v5;
  v18[0] = *(float *)(a2 + 16);
  sub_1008F50D0(a1 + 304, (float64x2_t *)v19, (uint64_t)&v17, v18, (void *)a2);
  if (*(double *)(a1 + 480) <= 0.0)
  {
    float32x2_t v6 = 0LL;
    float v7 = 0.0;
  }

  else
  {
    sub_1007C0D6C((double *)v19, (double *)(a1 + 320));
    float32x2_t v6 = vcvt_f32_f64(vsubq_f64(vcvtq_f64_f32(*(float32x2_t *)(a1 + 656)), *(float64x2_t *)v19));
    float v7 = *(float *)(a1 + 664) - *(double *)&v19[16];
  }

  unsigned int v8 = *(_DWORD *)(a1 + 460);
  uint64_t v16 = *(void *)(a1 + 464);
  sub_1008F5098((uint64_t)v4, (uint64_t)v18);
  *(void *)&v19[16] = 0LL;
  *(_OWORD *)uint64_t v19 = 0xBFF0000000000000LL;
  float32x4_t v14 = *(float32x4_t *)(a1 + 320);
  float64x2_t v15 = *(float64x2_t *)(a1 + 336);
  sub_100833700((float32x4_t *)&v19[8], v14);
  int v22 = 0;
  __int128 v21 = 0u;
  __int128 v20 = 0u;
  __int128 v23 = xmmword_1012E2F40;
  uint64_t v24 = 0x1FF00000000LL;
  int v25 = 0;
  char v26 = 0;
  uint64_t v27 = 0LL;
  *(void *)uint64_t v19 = *(void *)a2;
  float32x4_t v17 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64((float64x2_t)v14), v15);
  sub_100833700(&v17, v17);
  *(void *)&__int128 v9 = v16;
  *(float32x4_t *)&v19[8] = v17;
  *(float32x2_t *)&__int128 v20 = v6;
  *((void *)&v20 + 1) = __PAIR64__(v8, LODWORD(v7));
  int v10 = *(_DWORD *)(a1 + 284);
  *((void *)&v9 + 1) = *(void *)(a1 + 276);
  __int128 v21 = v9;
  int v22 = v10;
  BYTE4(v24) = *(_DWORD *)(a1 + 288);
  *(float *)&unsigned int v11 = sub_1008F5CD4(v4);
  *(void *)&__int128 v23 = __PAIR64__(*(_DWORD *)(a1 + 296), v11);
  BYTE5(v24) = 1;
  HIWORD(v24) = HIWORD(v24) & 0xFFE7 | (8 * *(unsigned __int8 *)(a1 + 313)) | (16 * *(unsigned __int8 *)(a1 + 252));
  else {
    __int16 v12 = 0;
  }
  HIWORD(v24) = HIWORD(v24) & 0xDEFF | v12 | (*(unsigned __int8 *)(a1 + 315) << 13);
  if (*(_BYTE *)(a1 + 292)) {
    int v13 = 15;
  }
  else {
    int v13 = 7;
  }
  int v25 = v13;
  uint64_t v27 = 0LL;
  char v26 = *(_BYTE *)(a2 + 22);
  sub_100307D50(a1, (uint64_t)v19);
}

void sub_10095E9A0(uint64_t a1, uint64_t a2)
{
}

double sub_10095E9A8(uint64_t a1, float32x2_t *a2, float *a3)
{
  return sub_1008F58CC(a1 + 304, a2, a3);
}

double sub_10095E9B0(uint64_t a1, float32x2_t *a2, float *a3)
{
  return sub_1008F58CC(a1 + 104, a2, a3);
}

void sub_10095E9B8(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a2 + 12);
  double v5 = *(float *)(a2 + 8);
  double v3 = *(float *)(a2 + 16);
  double v4 = v2;
  sub_1008F5E80(a1 + 304, &v5, &v4, &v3, (void *)a2);
}

void sub_10095EA04(uint64_t a1, uint64_t a2)
{
}

void sub_10095EA0C(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 56);
  __int128 v20 = *(_OWORD *)(a2 + 40);
  __int128 v21 = v4;
  __int128 v22 = *(_OWORD *)(a2 + 72);
  uint64_t v23 = *(void *)(a2 + 88);
  __int128 v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)&v19[16] = v5;
  buf[0] = *(_BYTE *)(a1 + 272);
  BOOL v6 = sub_1008F7F6C(a1 + 304, (uint64_t *)v19, buf, (_BYTE *)(a1 + 292), (double *)a2);
  sub_1008F5098(a1 + 304, (uint64_t)&v16 + 4);
  if (*(_BYTE *)(a1 + 8))
  {
    if (qword_101934560 != -1) {
      dispatch_once(&qword_101934560, &stru_1018624B8);
    }
    float v7 = (os_log_s *)qword_101934568;
    if (os_log_type_enabled((os_log_t)qword_101934568, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *(unsigned __int8 *)(a1 + 272);
      *(_DWORD *)std::string buf = 134219008;
      double v35 = *((float *)&v16 + 1);
      __int16 v36 = 2048;
      double v37 = v17;
      __int16 v38 = 2048;
      double v39 = v18;
      __int16 v40 = 1024;
      int v41 = v8;
      __int16 v42 = 1024;
      BOOL v43 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "correctedCompassExt, %.3f, %.3f, %.3f, %u, %u",  buf,  0x2Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934560 != -1) {
        dispatch_once(&qword_101934560, &stru_1018624B8);
      }
      int v12 = *(unsigned __int8 *)(a1 + 272);
      int v24 = 134219008;
      double v25 = *((float *)&v16 + 1);
      __int16 v26 = 2048;
      double v27 = v17;
      __int16 v28 = 2048;
      double v29 = v18;
      __int16 v30 = 1024;
      int v31 = v12;
      __int16 v32 = 1024;
      BOOL v33 = v6;
      LODWORD(v15) = 44;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934568,  2LL,  "correctedCompassExt, %.3f, %.3f, %.3f, %u, %u",  COERCE_DOUBLE(&v24),  v15,  v16,  LODWORD(v17),  *(_DWORD *)v19);
      float32x4_t v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLSensorFusionService9Axis::feedCompassData(const CLCompass_Type::Sample *)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

  if (v6)
  {
    uint64_t v9 = sub_1007492FC();
    sub_10074AE20(1LL, (uint64_t)&v16 + 4, v9);
  }

  int v10 = DWORD1(v20);
  *(_DWORD *)(a1 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = DWORD1(v20);
  *(_DWORD *)(a1 + 296) = v20;
  if (v10 <= 0)
  {
    *(_DWORD *)(a1 + 276) = 0;
    *(void *)(a1 + 280) = 0LL;
  }

  else
  {
    if ((sub_1004F97F4() & 0x10) != 0)
    {
      *(_DWORD *)(a1 + 284) = *(_DWORD *)&v19[20];
      uint64_t v11 = *(void *)&v19[12];
    }

    else
    {
      *(_DWORD *)(a1 + 284) = *(_DWORD *)&v19[8];
      uint64_t v11 = *(void *)v19;
    }

    *(void *)(a1 + 276) = v11;
  }

void sub_10095ED38(uint64_t a1, uint64_t a2)
{
}

void sub_10095ED40(id a1)
{
  qword_101934568 = (uint64_t)os_log_create("com.apple.locationd.Motion", "DeviceMotion");
}

void sub_10095ED6C(uint64_t a1, double a2)
{
  double v3 = *(double *)(a1 + 24);
  if (v3 == -1.0) {
    return;
  }
  uint64_t v11 = 0LL;
  int v12 = 0LL;
  uint64_t v13 = 0LL;
  sub_10001B72C(&v11, (const void *)qword_1019998E0, qword_1019998E8, (qword_1019998E8 - qword_1019998E0) >> 2);
  uint64_t v5 = (char *)v12 - (char *)v11;
  if (v12 != v11)
  {
    uint64_t v6 = 0LL;
    uint64_t v8 = v5 >> 2;
    while (1)
    {
      float v7 = (a2 - v3) / 60.0;
      if (v11[v6] >= v7) {
        goto LABEL_9;
      }
      if (v8 == ++v6)
      {
        LODWORD(v6) = v8;
        goto LABEL_9;
      }
    }
  }

  LODWORD(v6) = 0;
  if (v12)
  {
LABEL_9:
    int v12 = v11;
    operator delete(v11);
    LODWORD(v5) = v6;
  }

  unint64_t v9 = (unint64_t)(qword_1019998D0 - qword_1019998C8) >> 2;
  int v10 = v5 & ~((int)v5 >> 31);
  ++*(_DWORD *)(*(void *)a1 + 4LL * (int)v9);
  *(void *)(a1 + 24) = 0xBFF0000000000000LL;
}

double sub_10095EE6C(uint64_t a1)
{
  int v4 = 0;
  sub_100963694(&v5, ((qword_1019998E8 - qword_1019998E0) >> 2) + 1, &v4);
  float v2 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v2;
    operator delete(v2);
  }

  double result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(void *)(a1 + 16) = v6;
  return result;
}

uint64_t sub_10095EED8(uint64_t a1)
{
  *(void *)a1 = off_1018624E8;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  int v8 = 0;
  sub_100963694((void *)(a1 + 48), ((qword_1019998D0 - qword_1019998C8) >> 2) + 1, &v8);
  int v8 = 0;
  sub_100963694((void *)(a1 + 72), ((qword_1019998D0 - qword_1019998C8) >> 2) + 1, &v8);
  int v8 = 0;
  sub_100963694((void *)(a1 + 96), ((qword_1019998D0 - qword_1019998C8) >> 2) + 1, &v8);
  int v8 = 0;
  sub_100963694((void *)(a1 + 120), ((qword_1019998D0 - qword_1019998C8) >> 2) + 1, &v8);
  int v8 = 0;
  sub_100963694((void *)(a1 + 144), ((qword_1019998E8 - qword_1019998E0) >> 2) + 1, &v8);
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 176) = 1153138688;
  int v8 = 0;
  sub_100963694((void *)(a1 + 184), ((qword_1019998E8 - qword_1019998E0) >> 2) + 1, &v8);
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_DWORD *)(a1 + 38_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 216) = 1112014848;
  *(_WORD *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0LL;
  *(_BYTE *)(a1 + 240) = 0;
  *(_DWORD *)(a1 + 392) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 369) = 0u;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 400) = _Q1;
  *(_BYTE *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 432) = 6;
  *(void *)(a1 + 544) = 0LL;
  *(_BYTE *)(a1 + 552) = 0;
  *(_BYTE *)(a1 + 456) = 0;
  *(_OWORD *)(a1 + 440) = 0u;
  *(void *)(a1 + 464) = 0LL;
  *(_DWORD *)(a1 + 471) = 0;
  *(void *)(a1 + 496) = 0LL;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_WORD *)(a1 + 504) = 0;
  *(void *)(a1 + 52_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_DWORD *)(a1 + 535) = 0;
  *(_OWORD *)(a1 + 512) = 0u;
  sub_100963714(a1 + 560, 1, -90, 60);
  sub_100963714(a1 + 608, 1, -90, 60);
  sub_1010DDBC0((void *)(a1 + 656), "Null");
  int v8 = 12;
  sub_101206440((unsigned __int8 *)(a1 + 680), "FitnessOutdoorAnalyticsSegmentsPerDay", &v8, 0);
  *(void *)(a1 + 696) = 0x4000000000000000LL;
  LOBYTE(v_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  sub_1012049AC((unsigned __int8 *)(a1 + 704), "FitnessOutdoorAnalyticsEnableSubsampling", (unsigned __int8 *)&v8, 0);
  LOBYTE(v_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  sub_1012049AC( (unsigned __int8 *)(a1 + 707),  "FitnessOutdoorAnalyticsEnableWeatherRequirement",  (unsigned __int8 *)&v8,  0);
  LOBYTE(v_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  sub_1012049AC( (unsigned __int8 *)(a1 + 710),  "FitnessOutdoorAnalyticsSeedLatLongAtCupertino",  (unsigned __int8 *)&v8,  0);
  sub_10095F2C8(a1);
  sub_10095F490(a1);
  if (*(_BYTE *)(a1 + 711))
  {
    *(_BYTE *)(a1 + 384) = 1;
    *(void *)(a1 + 38_Block_object_dispose((const void *)(v1 - 224), 8) = 0xFFFFFF8600000025LL;
  }

  return a1;
}

void sub_10095F1BC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9)
{
  float v18 = *(void **)(v10 + 632);
  if (v18)
  {
    *(void *)(v10 + 640) = v18;
    operator delete(v18);
  }

  uint64_t v19 = *(void **)(v10 + 584);
  if (v19)
  {
    *(void *)(v10 + 592) = v19;
    operator delete(v19);
  }

  __int128 v20 = *v15;
  if (*v15)
  {
    *(void *)(v10 + 192) = v20;
    operator delete(v20);
  }

  __int128 v21 = *v14;
  if (*v14)
  {
    *(void *)(v10 + 152) = v21;
    operator delete(v21);
  }

  __int128 v22 = *v13;
  if (*v13)
  {
    *(void *)(v10 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v22;
    operator delete(v22);
  }

  uint64_t v23 = *v12;
  if (*v12)
  {
    *(void *)(v10 + 104) = v23;
    operator delete(v23);
  }

  int v24 = *v11;
  if (*v11)
  {
    *(void *)(v10 + 80) = v24;
    operator delete(v24);
  }

  double v25 = *a9;
  if (*a9)
  {
    *(void *)(v10 + 56) = v25;
    operator delete(v25);
  }

  __int16 v26 = *v9;
  os_log_s *v9 = 0LL;
  if (v26) {
    sub_100223734((int)v9, v26);
  }
  _Unwind_Resume(exception_object);
}

void sub_10095F2C8(uint64_t a1)
{
  double v3 = (void ***)(a1 + 16);
  float v2 = *(void ***)(a1 + 16);
  *(void *)(a1 + 16) = 0LL;
  if (v2) {
    sub_100223734(a1 + 16, v2);
  }
  unsigned int v4 = *(_DWORD *)(a1 + 684);
  double v5 = 2.0;
  if (v4 - 1 <= 0x59F) {
    double v5 = 24.0 / (double)v4;
  }
  uint64_t v6 = 0LL;
  *(double *)(a1 + 696) = v5;
  __int128 __p = 0LL;
  __int128 v20 = 0LL;
  __int128 v21 = 0LL;
  double v7 = 0.0;
  do
  {
    if (v6 >= v21)
    {
      unint64_t v9 = (double *)__p;
      uint64_t v10 = ((char *)v6 - (_BYTE *)__p) >> 3;
      unint64_t v11 = v10 + 1;
      uint64_t v12 = (char *)v21 - (_BYTE *)__p;
      else {
        unint64_t v13 = v11;
      }
      if (v13)
      {
        float32x4_t v14 = (char *)sub_1000071BC((uint64_t)&v21, v13);
        unint64_t v9 = (double *)__p;
        uint64_t v6 = v20;
      }

      else
      {
        float32x4_t v14 = 0LL;
      }

      double v15 = (double *)&v14[8 * v10];
      *double v15 = v7;
      int v8 = v15 + 1;
      while (v6 != v9)
      {
        uint64_t v16 = *((void *)v6-- - 1);
        *((void *)v15-- - 1) = v16;
      }

      __int128 __p = v15;
      __int128 v20 = v8;
      __int128 v21 = (double *)&v14[8 * v13];
      if (v9) {
        operator delete(v9);
      }
    }

    else
    {
      *uint64_t v6 = v7;
      int v8 = v6 + 1;
    }

    __int128 v20 = v8;
    double v7 = v7 + *(double *)(a1 + 696);
    uint64_t v6 = v8;
  }

  while (v7 < 24.0);
  float v17 = (void **)operator new(0x38uLL);
  sub_100912174((uint64_t)v17, (uint64_t)&__p, 0.0);
  float v18 = *v3;
  *double v3 = v17;
  if (v18) {
    sub_100223734((int)v3, v18);
  }
  if (__p)
  {
    __int128 v20 = (double *)__p;
    operator delete(__p);
  }

void sub_10095F45C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

std::string *sub_10095F490(uint64_t a1)
{
  if (qword_101934720 != -1) {
    dispatch_once(&qword_101934720, &stru_101862528);
  }
  float v2 = (os_log_s *)qword_101934728;
  if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "FitnessOutdoorAnalyticsAggregator, reset",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    LOWORD(v12[0]) = 0;
    unint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  0LL,  "FitnessOutdoorAnalyticsAggregator, reset",  v12,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFitnessOutdoorAnalyticsAggregator::reset()", "%s\n", v11);
  }

  *(double *)(a1 + 24) = sub_100912178(*(void *)(a1 + 16));
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = 0LL;
  v12[0] = 0;
  sub_100963694(buf, ((qword_1019998D0 - qword_1019998C8) >> 2) + 1, v12);
  unsigned int v4 = *(void **)(a1 + 48);
  if (v4)
  {
    *(void *)(a1 + 56) = v4;
    operator delete(v4);
  }

  *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = *(_OWORD *)buf;
  *(void *)(a1 + 64) = v14;
  v12[0] = 0;
  sub_100963694(buf, ((qword_1019998D0 - qword_1019998C8) >> 2) + 1, v12);
  double v5 = *(void **)(a1 + 72);
  if (v5)
  {
    *(void *)(a1 + 80) = v5;
    operator delete(v5);
  }

  *(_OWORD *)(a1 + 72) = *(_OWORD *)buf;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = v14;
  v12[0] = 0;
  sub_100963694(buf, ((qword_1019998D0 - qword_1019998C8) >> 2) + 1, v12);
  uint64_t v6 = *(void **)(a1 + 96);
  if (v6)
  {
    *(void *)(a1 + 104) = v6;
    operator delete(v6);
  }

  *(_OWORD *)(a1 + 96) = *(_OWORD *)buf;
  *(void *)(a1 + 112) = v14;
  v12[0] = 0;
  sub_100963694(buf, ((qword_1019998D0 - qword_1019998C8) >> 2) + 1, v12);
  double v7 = *(void **)(a1 + 120);
  if (v7)
  {
    *(void *)(a1 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v7;
    operator delete(v7);
  }

  *(_OWORD *)(a1 + 120) = *(_OWORD *)buf;
  *(void *)(a1 + 136) = v14;
  sub_10095EE6C(a1 + 144);
  sub_10095EE6C(a1 + 184);
  *(void *)(a1 + 232) = 0LL;
  *(void *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 464) = 0LL;
  *(_BYTE *)(a1 + 552) = 0;
  unint64_t v8 = *(void *)(a1 + 576);
  *(_DWORD *)std::string buf = 0;
  sub_10023D8E0((char **)(a1 + 584), v8, buf);
  unint64_t v9 = *(void *)(a1 + 624);
  *(_DWORD *)std::string buf = 0;
  sub_10023D8E0((char **)(a1 + 632), v9, buf);
  double result = std::string::assign((std::string *)(a1 + 656), "Null");
  *(_WORD *)(a1 + 473) = 0;
  *(_WORD *)(a1 + 537) = 0;
  *(void *)(a1 + 544) = 0LL;
  *(void *)(a1 + 48_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 496) = 0LL;
  *(void *)(a1 + 480) = 0LL;
  *(_WORD *)(a1 + 504) = 0;
  *(void *)(a1 + 512) = 0LL;
  *(void *)(a1 + 52_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 520) = 0LL;
  return result;
}

uint64_t sub_10095F7C4(uint64_t result, uint64_t a2)
{
  *(_BYTE *)(result + 224) = *(_BYTE *)(a2 + 9);
  return result;
}

void sub_10095F7D0(uint64_t a1, double a2)
{
  double v3 = *(double *)(a1 + 8);
  if (v3 != 0.0 && v3 >= a2)
  {
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    double v5 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(void *)(a1 + 8);
      *(_DWORD *)std::string buf = 134218240;
      double v15 = a2;
      __int16 v16 = 2048;
      uint64_t v17 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "FitnessOutdoorAnalyticsAggregator, updates not strictly increasing, time, %f, prevTime, %f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      uint64_t v7 = *(void *)(a1 + 8);
      int v10 = 134218240;
      double v11 = a2;
      __int16 v12 = 2048;
      uint64_t v13 = v7;
      LODWORD(v9) = 22;
      unint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  2LL,  "FitnessOutdoorAnalyticsAggregator, updates not strictly increasing, time, %f, prevTime, %f",  COERCE_DOUBLE(&v10),  v9);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval CLFitnessOutdoorAnalyticsAggregator::estimateDurationBetweenUpdates(CFAbsoluteTime) const",  "%s\n",  v8);
    }
  }

std::string *sub_10095F9E0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 225) = CLMotionActivity::isTypeStatic(*(unsigned int *)(a2 + 144));
  *(_BYTE *)(a1 + 536) = CLMotionActivity::isTypeInVehicle(*(unsigned int *)(a2 + 144), v4);
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = *(_OWORD *)(a2 + 8);
  __int128 v5 = *(_OWORD *)(a2 + 40);
  __int128 v6 = *(_OWORD *)(a2 + 72);
  __int128 v7 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 312) = v6;
  *(_OWORD *)(a1 + 264) = v7;
  *(_OWORD *)(a1 + 280) = v5;
  __int128 v8 = *(_OWORD *)(a2 + 104);
  __int128 v9 = *(_OWORD *)(a2 + 120);
  __int128 v10 = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 376) = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 344) = v8;
  *(_OWORD *)(a1 + 360) = v9;
  *(_OWORD *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = v10;
  return sub_10095FA60(a1, *(double *)a2);
}

std::string *sub_10095FA60(uint64_t a1, double a2)
{
  double v5 = v4;
  *(double *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = a2;
  double v6 = 0.0;
  if (!*(_BYTE *)(a1 + 224) && !*(_BYTE *)(a1 + 225)) {
    double v6 = v5;
  }
  *(double *)(a1 + 232) = v6 + *(double *)(a1 + 232);
  sub_10095FC34(a1);
  int v7 = *(unsigned __int8 *)(a1 + 456);
  if (*(_BYTE *)(a1 + 456)) {
    double v8 = v5;
  }
  else {
    double v8 = 0.0;
  }
  *(double *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = *(double *)(a1 + 448) + v8;
  if (v7)
  {
    double v9 = 0.0;
    if (*(_BYTE *)(a1 + 473)) {
      double v10 = v5;
    }
    else {
      double v10 = 0.0;
    }
    *(double *)(a1 + 480) = *(double *)(a1 + 480) + v10;
    if (*(_BYTE *)(a1 + 504)) {
      double v9 = v5;
    }
  }

  else
  {
    double v9 = 0.0;
    *(double *)(a1 + 480) = *(double *)(a1 + 480) + 0.0;
  }

  *(double *)(a1 + 512) = v9 + *(double *)(a1 + 512);
  int v11 = *(unsigned __int8 *)(a1 + 472);
  double v12 = 0.0;
  if (*(_BYTE *)(a1 + 472)) {
    double v13 = v5;
  }
  else {
    double v13 = 0.0;
  }
  *(double *)(a1 + 464) = *(double *)(a1 + 464) + v13;
  if (v11)
  {
    int v14 = *(unsigned __int8 *)(a1 + 473);
    if (*(_BYTE *)(a1 + 473)) {
      double v15 = v5;
    }
    else {
      double v15 = 0.0;
    }
    *(double *)(a1 + 48_Block_object_dispose((const void *)(v1 - 224), 8) = *(double *)(a1 + 488) + v15;
    int v16 = *(unsigned __int8 *)(a1 + 504);
    if (*(_BYTE *)(a1 + 504)) {
      double v12 = v5;
    }
  }

  else
  {
    *(double *)(a1 + 48_Block_object_dispose((const void *)(v1 - 224), 8) = *(double *)(a1 + 488) + 0.0;
    int v14 = *(unsigned __int8 *)(a1 + 473);
    int v16 = *(unsigned __int8 *)(a1 + 504);
  }

  *(double *)(a1 + 520) = v12 + *(double *)(a1 + 520);
  *(double *)(a1 + 40) = v5 + *(double *)(a1 + 40);
  double v17 = 0.0;
  if (v14) {
    double v18 = v5;
  }
  else {
    double v18 = 0.0;
  }
  *(double *)(a1 + 496) = *(double *)(a1 + 496) + v18;
  if (v16) {
    double v19 = v5;
  }
  else {
    double v19 = 0.0;
  }
  *(double *)(a1 + 52_Block_object_dispose((const void *)(v1 - 224), 8) = *(double *)(a1 + 528) + v19;
  if (*(_BYTE *)(a1 + 537)) {
    double v17 = v5;
  }
  *(double *)(a1 + 544) = *(double *)(a1 + 544) + v17;
  double result = (std::string *)sub_1009125CC(*(void *)(a1 + 16), a2);
  if ((_DWORD)result)
  {
    sub_10095ED6C(a1 + 144, a2);
    sub_10095ED6C(a1 + 184, a2);
    sub_100960158(a1, a2);
    return sub_10095F490(a1);
  }

  return result;
}

void sub_10095FC34(uint64_t a1)
{
  double v2 = *(double *)(a1 + 8);
  if (v2 == -1.0)
  {
    BOOL v30 = 0;
LABEL_14:
    BOOL v7 = 0;
    goto LABEL_15;
  }

  double v3 = *(double *)(a1 + 408);
  BOOL v30 = v3 != -1.0 && v2 >= v3 + 30.0 && *(_BYTE *)(a1 + 416) != 0;
  double v5 = *(double *)(a1 + 400);
  if (v5 == -1.0) {
    goto LABEL_14;
  }
  if (v2 < v5 + 30.0 || v3 != -1.0) {
    goto LABEL_14;
  }
  BOOL v7 = v2 < v5 + 3600.0;
LABEL_15:
  double v8 = *(double *)(a1 + 424);
  BOOL v9 = v8 == -1.0 || v2 > v8 + 180.0;
  if (v9)
  {
    int v10 = 0;
LABEL_21:
    int v11 = 0;
    goto LABEL_32;
  }

  unsigned int v12 = *(_DWORD *)(a1 + 432);
  if (v12) {
    BOOL v13 = v12 == 3;
  }
  else {
    BOOL v13 = 1;
  }
  int v10 = v13;
  int v11 = 1;
  BOOL v9 = v12 > 5;
  int v14 = (1 << v12) & 0x36;
  if (v9 || v14 == 0) {
    goto LABEL_21;
  }
LABEL_32:
  unint64_t v16 = *(void *)(a1 + 440);
  unsigned int v17 = (v16 < 0x1D) & (0x10050A20u >> v16);
  unsigned int v18 = (v16 < 0x1C) & (0x9B28010u >> v16);
  if (*(_BYTE *)(a1 + 536)) {
    char v19 = 1;
  }
  else {
    char v19 = v11;
  }
  *(_BYTE *)(a1 + 537) = v19;
  if ((v19 & 1) != 0 || *(_BYTE *)(a1 + 224))
  {
    char v20 = 0;
    *(_BYTE *)(a1 + 473) = 0;
    int v21 = 1;
  }

  else
  {
    int v21 = 0;
    *(_BYTE *)(a1 + 473) = v30 | v17;
    if (v7) {
      char v20 = 1;
    }
    else {
      char v20 = v10 | v18;
    }
  }

  *(_BYTE *)(a1 + 504) = v20;
  if (qword_101934720 != -1) {
    dispatch_once(&qword_101934720, &stru_101862528);
  }
  __int128 v22 = (os_log_s *)qword_101934728;
  if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_DEBUG))
  {
    int v23 = *(unsigned __int8 *)(a1 + 537);
    int v24 = *(unsigned __int8 *)(a1 + 224);
    unsigned int v25 = *(unsigned __int8 *)(a1 + 344);
    *(_DWORD *)std::string buf = 67112448;
    BOOL v41 = v30;
    __int16 v42 = 1024;
    BOOL v43 = v7;
    __int16 v44 = 1024;
    int v45 = v10;
    __int16 v46 = 1024;
    int v47 = v11;
    __int16 v48 = 1024;
    unsigned int v49 = v17;
    __int16 v50 = 1024;
    unsigned int v51 = v18;
    __int16 v52 = 1024;
    int v53 = v21;
    __int16 v54 = 1024;
    int v55 = v23;
    __int16 v56 = 1024;
    int v57 = v24;
    __int16 v58 = 1024;
    int v59 = v25 & 1;
    __int16 v60 = 1024;
    int v61 = (v25 >> 1) & 1;
    __int16 v62 = 1024;
    int v63 = (v25 >> 2) & 1;
    __int16 v64 = 1024;
    int v65 = (v25 >> 3) & 1;
    __int16 v66 = 1024;
    int v67 = (v25 >> 4) & 1;
    _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "FitnessOutdoorAnalyticsAggregator, update priors, loiIndoor, %d, loiOutdoor, %d, mapsRouteOutdoor, %d, mapsRouteVe hicle, %d workoutIndoor, %d, workoutOutdoor, %d, suppressPriors, %d, inVehicle, %d, onCharger, %d, vehicularMotion Hint, %d, vehicularGpsHint, %d, vehicularBasebandHint, %d, vehicularWifiHint, %d, vehicularBtHint, %d",  buf,  0x56u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    int v27 = *(unsigned __int8 *)(a1 + 537);
    unsigned int v28 = *(unsigned __int8 *)(a1 + 344);
    LOWORD(v32) = 1024;
    HIWORD(v32) = v7;
    LOWORD(v33) = HIWORD(v11);
    HIWORD(v33) = 1024;
    LOWORD(v34) = 1024;
    HIWORD(v34) = v18;
    LOWORD(v35) = HIWORD(v27);
    HIWORD(v35) = 1024;
    LOWORD(v36) = 1024;
    HIWORD(v36) = v28 & 1;
    *(_DWORD *)double v37 = (v28 >> 2) & 1;
    *(_WORD *)&v37[4] = 1024;
    *(_WORD *)__int16 v38 = 1024;
    *(_DWORD *)&v38[2] = (v28 >> 4) & 1;
    double v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  2LL,  "FitnessOutdoorAnalyticsAggregator, update priors, loiIndoor, %d, loiOutdoor, %d, mapsRouteOutdoor, % d, mapsRouteVehicle, %d workoutIndoor, %d, workoutOutdoor, %d, suppressPriors, %d, inVehicle, %d, on Charger, %d, vehicularMotionHint, %d, vehicularGpsHint, %d, vehicularBasebandHint, %d, vehicularWifi Hint, %d, vehicularBtHint, %d",  &v31,  86,  67112448,  v32,  v10,  v33,  v34,  v21,  v35,  v36,  (v28 >> 1) & 1,  *(_DWORD *)&v37[2],  *(_DWORD *)v38,  v39);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFitnessOutdoorAnalyticsAggregator::updatePriors()", "%s\n", v29);
  }

  if (v11) {
    *(_BYTE *)(a1 + 538) |= 0x20u;
  }
  char v26 = *(_BYTE *)(a1 + 344);
  if ((v26 & 1) != 0)
  {
    *(_BYTE *)(a1 + 538) |= 1u;
    if ((v26 & 2) == 0)
    {
LABEL_47:
      if ((v26 & 4) == 0) {
        goto LABEL_48;
      }
      goto LABEL_54;
    }
  }

  else if ((*(_BYTE *)(a1 + 344) & 2) == 0)
  {
    goto LABEL_47;
  }

  *(_BYTE *)(a1 + 538) |= 2u;
  if ((v26 & 4) == 0)
  {
LABEL_48:
    if ((v26 & 8) == 0) {
      goto LABEL_49;
    }
    goto LABEL_55;
  }

void sub_100960158(uint64_t a1, double a2)
{
  double v4 = *(double *)(a1 + 696);
  double v5 = *(double *)(a1 + 40);
  BOOL v6 = v5 >= (double)(int)(v4 * 0.95 * 3600.0) && v5 <= (double)(int)(v4 * 1.05 * 3600.0);
  double v7 = *(double *)(a1 + 32);
  BOOL v8 = sub_1009634C0(a1);
  BOOL v9 = v8;
  if (v6
    && vabdd_f64(a2, v7) <= 10.0
    && (*(_BYTE *)(a1 + 552) || !*(_BYTE *)(a1 + 708))
    && (*(_BYTE *)(a1 + 384) ? (BOOL v10 = v8) : (BOOL v10 = 0), v10))
  {
    int v11 = sub_100961114(a1, 1);
    if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 40LL))(a1))
    {
      id v12 = sub_100962B70(a1, 0, v11);
      (*(void (**)(uint64_t, id))(*(void *)a1 + 16LL))(a1, v12);
    }

    else
    {
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      int v21 = (os_log_s *)qword_101934728;
      if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "FitnessOutdoorAnalyticsAggregator, not sending some analytics, no IHA permission",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934720 != -1) {
          dispatch_once(&qword_101934720, &stru_101862528);
        }
        LOWORD(v34) = 0;
        int v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  0LL,  "FitnessOutdoorAnalyticsAggregator, not sending some analytics, no IHA permission",  &v34,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFitnessOutdoorAnalyticsAggregator::attemptSendAnalytics(CFAbsoluteTime) const",  "%s\n",  v33);
      }
    }

    id v22 = sub_100962C70(a1, 0, v11);
    (*(void (**)(uint64_t, id))(*(void *)a1 + 24LL))(a1, v22);
    id v23 = sub_100962CE4(a1, 0, v11);
    (*(void (**)(uint64_t, id))(*(void *)a1 + 32LL))(a1, v23);
  }

  else
  {
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    BOOL v13 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_DEFAULT))
    {
      double v14 = *(double *)(a1 + 24);
      double v15 = sub_100912280(v14);
      double v16 = *(double *)(a1 + 32);
      double v17 = sub_100912280(v16);
      uint64_t v18 = *(void *)(a1 + 40);
      int v19 = *(unsigned __int8 *)(a1 + 552);
      int v20 = *(unsigned __int8 *)(a1 + 384);
      *(_DWORD *)std::string buf = 134351104;
      double v53 = a2;
      __int16 v54 = 2050;
      double v55 = v14;
      __int16 v56 = 2050;
      double v57 = v15;
      __int16 v58 = 2050;
      double v59 = v16;
      __int16 v60 = 2050;
      double v61 = v17;
      __int16 v62 = 2050;
      uint64_t v63 = v18;
      __int16 v64 = 1026;
      int v65 = v19;
      __int16 v66 = 1026;
      int v67 = v20;
      __int16 v68 = 1024;
      BOOL v69 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "FitnessOutdoorAnalyticsAggregator, not sending analytics due to insufficient data, currentTime, %{public}.2f, bi nStartTime, %{public}.2f, binStartWallHour, %{public}.2f, binEndTime, %{public}.2f, binEndWallHour, %{public}.2f , accumulatedDurationInSeconds, %{public}.2f, hasRecentWeatherUpdate, %{public}d, hasLatLong, %{public}d, isCurr entBinEligibleSubsample, %d",  buf,  0x50u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      uint64_t v24 = qword_101934728;
      double v25 = *(double *)(a1 + 24);
      double v26 = sub_100912280(v25);
      double v27 = *(double *)(a1 + 32);
      double v28 = sub_100912280(v27);
      uint64_t v29 = *(void *)(a1 + 40);
      int v30 = *(unsigned __int8 *)(a1 + 552);
      int v31 = *(unsigned __int8 *)(a1 + 384);
      int v34 = 134351104;
      double v35 = a2;
      __int16 v36 = 2050;
      double v37 = v25;
      __int16 v38 = 2050;
      double v39 = v26;
      __int16 v40 = 2050;
      double v41 = v27;
      __int16 v42 = 2050;
      double v43 = v28;
      __int16 v44 = 2050;
      uint64_t v45 = v29;
      __int16 v46 = 1026;
      int v47 = v30;
      __int16 v48 = 1026;
      int v49 = v31;
      __int16 v50 = 1024;
      BOOL v51 = v9;
      int v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v24,  0LL,  "FitnessOutdoorAnalyticsAggregator, not sending analytics due to insufficient data, currentTime, %{ public}.2f, binStartTime, %{public}.2f, binStartWallHour, %{public}.2f, binEndTime, %{public}.2f, binEndWallHour, %{public}.2f, accumulatedDurationInSeconds, %{public}.2f, hasRecentWeatherUpdate, %{public}d, hasLatLong, %{public}d, isCurrentBinEligibleSubsample, %d",  &v34,  80);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFitnessOutdoorAnalyticsAggregator::attemptSendAnalytics(CFAbsoluteTime) const",  "%s\n",  v32);
    }
  }

uint64_t sub_100960678(uint64_t result, double a2, double a3)
{
  *(_BYTE *)(result + 384) = 1;
  *(_DWORD *)(result + 38_Block_object_dispose((const void *)(v1 - 224), 8) = llround(a2);
  *(_DWORD *)(result + 392) = llround(a3);
  return result;
}

std::string *sub_100960694(std::string *result, void *a2)
{
  if (a2)
  {
    double v3 = result;
    result[23].__r_.__value_.__s.__data_[0] = 1;
    [a2 temperature];
    int v5 = (int)v4;
    int v6 = HIDWORD(v3[23].__r_.__value_.__r.__words[1]);
    if (v5 >= SLODWORD(v3[23].__r_.__value_.__r.__words[2])) {
      int v5 = v3[23].__r_.__value_.__r.__words[2];
    }
    ++*(_DWORD *)(v3[24].__r_.__value_.__l.__size_ + 4LL * ((v5 - v6) / SLODWORD(v3[23].__r_.__value_.__r.__words[1])));
    [a2 feelsLikeTemperature];
    int v8 = (int)v7;
    int v9 = HIDWORD(v3[25].__r_.__value_.__r.__words[1]);
    if (v8 >= SLODWORD(v3[25].__r_.__value_.__r.__words[2])) {
      int v8 = v3[25].__r_.__value_.__r.__words[2];
    }
    ++*(_DWORD *)(v3[26].__r_.__value_.__l.__size_ + 4LL * ((v8 - v9) / SLODWORD(v3[25].__r_.__value_.__r.__words[1])));
    double result = (std::string *)objc_msgSend(objc_msgSend(a2, "precipitationType"), "isEqualToString:", @"Null");
    if ((result & 1) == 0) {
      return std::string::assign( (std::string *)((char *)v3 + 656),  (const std::string::value_type *)objc_msgSend(objc_msgSend(a2, "precipitationType"), "UTF8String"));
    }
  }

  return result;
}

BOOL sub_100960778(uint64_t a1, char *a2)
{
  uint64_t v24 = 0LL;
  double v25 = 0LL;
  v26[0] = 0LL;
  v26[1] = &v24;
  char v27 = 0;
  uint64_t v24 = (char *)operator new(0xF0uLL);
  double v25 = v24;
  v26[0] = v24 + 240;
  uint64_t v3 = 0LL;
  double v25 = sub_100036E0C((uint64_t)v26, &__dst, &v39, v24);
  do
  {
    if (SHIBYTE(v38[v3 + 2]) < 0) {
      operator delete((void *)v38[v3]);
    }
    v3 -= 3LL;
  }

  while (v3 != -30);
  int v5 = v24;
  float v4 = v25;
  if (v24 == v25)
  {
    BOOL v21 = 0LL;
  }

  else
  {
    id v23 = a2;
    do
    {
      if (v5[23] < 0)
      {
        sub_1010DD48C(&__dst, *(void **)v5, *((void *)v5 + 1));
      }

      else
      {
        __int128 v6 = *(_OWORD *)v5;
        uint64_t v29 = *((void *)v5 + 2);
        __int128 __dst = v6;
      }

      if (a2[23] < 0)
      {
        int v8 = *(char **)a2;
        uint64_t v7 = *((void *)a2 + 1);
      }

      else
      {
        uint64_t v7 = a2[23];
        int v8 = a2;
      }

      int v9 = SHIBYTE(v29);
      BOOL v10 = (void *)__dst;
      if (v29 >= 0) {
        p_dst = &__dst;
      }
      else {
        p_dst = (__int128 *)__dst;
      }
      if (v29 >= 0) {
        int64_t v12 = HIBYTE(v29);
      }
      else {
        int64_t v12 = *((void *)&__dst + 1);
      }
      if (v12)
      {
        BOOL v13 = &v8[v7];
        if (v7 >= v12)
        {
          double v16 = v4;
          int v17 = *(char *)p_dst;
          uint64_t v18 = v8;
          do
          {
            uint64_t v19 = v7 - v12;
            if (v19 == -1) {
              break;
            }
            int v20 = (char *)memchr(v18, v17, v19 + 1);
            if (!v20) {
              break;
            }
            double v14 = v20;
            if (!memcmp(v20, p_dst, v12)) {
              goto LABEL_29;
            }
            uint64_t v18 = v14 + 1;
            uint64_t v7 = v13 - (v14 + 1);
          }

          while (v7 >= v12);
          double v14 = v13;
LABEL_29:
          float v4 = v16;
          a2 = v23;
        }

        else
        {
          double v14 = &v8[v7];
        }

        if (v14 == v13) {
          uint64_t v15 = -1LL;
        }
        else {
          uint64_t v15 = v14 - v8;
        }
      }

      else
      {
        uint64_t v15 = 0LL;
      }

      BOOL v21 = v15 != -1;
      if (v9 < 0) {
        operator delete(v10);
      }
      if (v15 != -1) {
        break;
      }
      v5 += 24;
    }

    while (v5 != v4);
  }

  *(void *)&__int128 __dst = &v24;
  sub_1000129D4((void ***)&__dst);
  return v21;
}

void sub_100960A58( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16 = 0LL;
  while (1)
  {
    v16 -= 24LL;
    if (v16 == -240) {
      _Unwind_Resume(a1);
    }
  }

void sub_100960AE8(uint64_t a1, void *a2)
{
  if (a2)
  {
    if ([a2 hasDepartureDate])
    {
      objc_msgSend(objc_msgSend(a2, "departureDate"), "timeIntervalSinceReferenceDate");
      *(void *)(a1 + 400) = v4;
      *(void *)(a1 + 40_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
    }

    else
    {
      objc_msgSend(objc_msgSend(a2, "arrivalDate"), "timeIntervalSinceReferenceDate");
      *(void *)(a1 + 40_Block_object_dispose((const void *)(v1 - 224), 8) = v7;
      if ([a2 _placeInference])
      {
        id v8 = objc_msgSend(objc_msgSend(a2, "_placeInference"), "userType");
        if (objc_msgSend(objc_msgSend(a2, "_placeInference"), "userType")
          || !objc_msgSend(objc_msgSend(a2, "_placeInference"), "preferredName"))
        {
          LOBYTE(v9) = 0;
        }

        else
        {
          double v14 = sub_1010DDBC0( __p,  (char *)objc_msgSend(objc_msgSend(objc_msgSend(a2, "_placeInference"), "preferredName"), "UTF8String"));
          BOOL v9 = !sub_100960778((uint64_t)v14, (char *)__p);
          if (v18 < 0) {
            operator delete(__p[0]);
          }
        }

        if (v8) {
          char v10 = 1;
        }
        else {
          char v10 = v9;
        }
        *(_BYTE *)(a1 + 416) = v10;
        goto LABEL_21;
      }
    }

    *(_BYTE *)(a1 + 416) = 0;
LABEL_21:
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    int v11 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = *(void *)(a1 + 400);
      uint64_t v13 = *(void *)(a1 + 408);
      *(_DWORD *)std::string buf = 134218498;
      uint64_t v26 = v12;
      __int16 v27 = 2048;
      uint64_t v28 = v13;
      __int16 v29 = 2112;
      int v30 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "FitnessOutdoorAnalyticsAggregator, received leeched visit notification, fPrevLoiVisitEnd, %.2f, fCurrentLoiVisit Start, .%2f, visit, %@",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    uint64_t v15 = *(void *)(a1 + 400);
    uint64_t v16 = *(void *)(a1 + 408);
    int v19 = 134218498;
    uint64_t v20 = v15;
    __int16 v21 = 2048;
    uint64_t v22 = v16;
    __int16 v23 = 2112;
    uint64_t v24 = a2;
    __int128 v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  1LL,  "FitnessOutdoorAnalyticsAggregator, received leeched visit notification, fPrevLoiVisitEnd, %.2f, fCurr entLoiVisitStart, .%2f, visit, %@",  &v19,  32);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFitnessOutdoorAnalyticsAggregator::feedLocationOfInterest(CLVisit * _Nullable)",  "%s\n",  v6);
LABEL_33:
    return;
  }

  if (qword_101934720 != -1) {
    dispatch_once(&qword_101934720, &stru_101862528);
  }
  int v5 = (os_log_s *)qword_101934728;
  if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "FitnessOutdoorAnalyticsAggregator, #warning, Received null visit",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    LOWORD(v19) = 0;
    __int128 v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  1LL,  "FitnessOutdoorAnalyticsAggregator, #warning, Received null visit",  &v19,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFitnessOutdoorAnalyticsAggregator::feedLocationOfInterest(CLVisit * _Nullable)",  "%s\n",  v6);
    goto LABEL_33;
  }

void sub_100960EC0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100960EE4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 424) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 432) = *(_DWORD *)a2;
  if (qword_101934720 != -1) {
    dispatch_once(&qword_101934720, &stru_101862528);
  }
  uint64_t v3 = (os_log_s *)qword_101934728;
  if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = *(void *)(a1 + 424);
    int v5 = *(_DWORD *)(a1 + 432);
    *(_DWORD *)std::string buf = 134218240;
    uint64_t v14 = v4;
    __int16 v15 = 1024;
    int v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "FitnessOutdoorAnalyticsAggregator, received maps route hint, iosTime, %f, routingType, %d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    uint64_t v6 = *(void *)(a1 + 424);
    int v7 = *(_DWORD *)(a1 + 432);
    int v9 = 134218240;
    uint64_t v10 = v6;
    __int16 v11 = 1024;
    int v12 = v7;
    id v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  2LL,  "FitnessOutdoorAnalyticsAggregator, received maps route hint, iosTime, %f, routingType, %d",  COERCE_DOUBLE(&v9),  18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFitnessOutdoorAnalyticsAggregator::feedMapsRouteHint(const CLMapsRouteHintData &)",  "%s\n",  v8);
  }

uint64_t sub_1009610C4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2 == 15)
  {
    uint64_t v3 = 0LL;
  }

  else
  {
    if (v2 != 13) {
      return result;
    }
    uint64_t v3 = *(void *)(a2 + 112);
  }

  *(void *)(result + 440) = v3;
  return result;
}

uint64_t sub_1009610EC(uint64_t result, uint64_t a2)
{
  *(_BYTE *)(result + 456) = *(void *)(a2 + 16) == 2LL;
  *(_BYTE *)(result + 472) = (*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL) == 2;
  return result;
}

NSDictionary *sub_100961114(uint64_t a1, int a2)
{
  uint64_t v4 = (int)sub_100912280(*(double *)(a1 + 24));
  unsigned int v5 = (int)sub_100912280(*(double *)(a1 + 32));
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 24LL;
  }
  v63[0] = @"startTime";
  v64[0] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v4);
  v63[1] = @"endTime";
  v64[1] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v6);
  void v63[2] = @"wearTime";
  void v64[2] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 232) / 60.0));
  v63[3] = @"latitude";
  v64[3] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 388));
  v63[4] = @"longitude";
  v64[4] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 392));
  v63[5] = @"sunElevationAngleStart";
  float v7 = sub_1007B92AC(*(double *)(a1 + 24), (float)*(int *)(a1 + 388), (float)*(int *)(a1 + 392));
  v64[5] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", sub_100DEA6C4(5u, v7));
  v63[6] = @"sunElevationAngleEnd";
  float v8 = sub_1007B92AC(*(double *)(a1 + 32), (float)*(int *)(a1 + 388), (float)*(int *)(a1 + 392));
  v64[6] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", sub_100DEA6C4(5u, v8));
  v63[7] = @"precipitationType";
  int v9 = (void *)(a1 + 656);
  v64[7] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v9);
  v63[8] = @"enabledAlwaysOnDisplay";
  v64[8] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 240));
  uint64_t v10 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v64,  v63,  9LL);
  v61[0] = @"currentTemp";
  int v11 = sub_100962AB8(a1 + 560);
  v62[0] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", sub_100DEA6B0((double)v11));
  v61[1] = @"feelsLikeTemp";
  int v12 = sub_100962AB8(a1 + 608);
  v62[1] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", sub_100DEA6B0((double)v12));
  uint64_t v13 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v62,  v61,  2LL);
  v59[0] = @"outdoorTime";
  v60[0] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 448) / 60.0));
  v59[1] = @"daylightTime";
  v60[1] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 464) / 60.0));
  v59[2] = @"outdoorTimeWithIndoorPrior";
  v60[2] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 480) / 60.0));
  v59[3] = @"daylightTimeWithIndoorPrior";
  v60[3] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 488) / 60.0));
  v59[4] = @"outdoorTimeWithOutdoorPrior";
  v60[4] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 512) / 60.0));
  v59[5] = @"daylightTimeWithOutdoorPrior";
  v60[5] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 520) / 60.0));
  uint64_t v14 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v60,  v59,  6LL);
  v57[0] = @"timeLuxBin01";
  v58[0] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  (*(_DWORD *)(*(void *)(a1 + 48) + 4LL) + **(_DWORD **)(a1 + 48)));
  v57[1] = @"timeLuxBin02";
  v58[1] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 8LL));
  v57[2] = @"timeLuxBin03";
  v58[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 12LL));
  v57[3] = @"timeLuxBin04";
  v58[3] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 16LL));
  v57[4] = @"timeLuxBin05";
  v58[4] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 20LL));
  v57[5] = @"timeLuxBin06";
  v58[5] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 24LL));
  v57[6] = @"timeLuxBin07";
  v58[6] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 28LL));
  v57[7] = @"timeLuxBin08";
  v58[7] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 32LL));
  v57[8] = @"timeLuxBin09";
  v58[8] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 36LL));
  v57[9] = @"timeLuxBin10";
  v58[9] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 40LL));
  v57[10] = @"timeLuxBin11";
  v58[10] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 44LL));
  v57[11] = @"timeLuxBin12";
  v58[11] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 48LL));
  v57[12] = @"timeLuxBin13";
  v58[12] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 52LL));
  v57[13] = @"timeLuxBin14";
  v58[13] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 56LL));
  v57[14] = @"timeLuxBin15";
  v58[14] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 60LL));
  v57[15] = @"timeLuxBin16";
  v58[15] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 48) + 64LL));
  __int16 v15 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v58,  v57,  16LL);
  v55[0] = @"intervalOccludedAlsBin01";
  v56[0] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 144) + 4LL));
  v55[1] = @"intervalOccludedAlsBin02";
  v56[1] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 144) + 8LL));
  _DWORD v55[2] = @"intervalOccludedAlsBin03";
  v56[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 144) + 12LL));
  v55[3] = @"intervalOccludedAlsBin04";
  v56[3] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 144) + 16LL));
  v55[4] = @"intervalOccludedAlsBin05";
  v56[4] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 144) + 20LL));
  v55[5] = @"intervalOccludedAlsBin06";
  v56[5] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 144) + 24LL));
  v55[6] = @"intervalOccludedAlsT2Bin01";
  v56[6] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 184) + 4LL));
  v55[7] = @"intervalOccludedAlsT2Bin02";
  v56[7] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 184) + 8LL));
  v55[8] = @"intervalOccludedAlsT2Bin03";
  v56[8] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 184) + 12LL));
  v55[9] = @"intervalOccludedAlsT2Bin04";
  v56[9] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 184) + 16LL));
  v55[10] = @"intervalOccludedAlsT2Bin05";
  v56[10] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 184) + 20LL));
  v55[11] = @"intervalOccludedAlsT2Bin06";
  v56[11] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 184) + 24LL));
  int v16 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v56,  v55,  12LL);
  v53[0] = @"totalTimeWithIndoorPrior";
  v54[0] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 496) / 60.0));
  v53[1] = @"indoorPriorType";
  v54[1] = +[NSNumber numberWithUnsignedChar:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedChar:",  *(unsigned __int8 *)(a1 + 474));
  v53[2] = @"luxWithIndoorPriorBin01";
  v54[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  (*(_DWORD *)(*(void *)(a1 + 72) + 4LL) + **(_DWORD **)(a1 + 72)));
  v53[3] = @"luxWithIndoorPriorBin02";
  v54[3] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 8LL));
  v53[4] = @"luxWithIndoorPriorBin03";
  v54[4] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 12LL));
  v53[5] = @"luxWithIndoorPriorBin04";
  v54[5] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 16LL));
  v53[6] = @"luxWithIndoorPriorBin05";
  v54[6] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 20LL));
  v53[7] = @"luxWithIndoorPriorBin06";
  v54[7] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 24LL));
  v53[8] = @"luxWithIndoorPriorBin07";
  v54[8] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 28LL));
  v53[9] = @"luxWithIndoorPriorBin08";
  v54[9] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 32LL));
  v53[10] = @"luxWithIndoorPriorBin09";
  v54[10] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 36LL));
  v53[11] = @"luxWithIndoorPriorBin10";
  v54[11] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 40LL));
  v53[12] = @"luxWithIndoorPriorBin11";
  v54[12] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 44LL));
  v53[13] = @"luxWithIndoorPriorBin12";
  v54[13] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 48LL));
  v53[14] = @"luxWithIndoorPriorBin13";
  v54[14] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 52LL));
  v53[15] = @"luxWithIndoorPriorBin14";
  v54[15] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 56LL));
  v53[16] = @"luxWithIndoorPriorBin15";
  v54[16] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 60LL));
  v53[17] = @"luxWithIndoorPriorBin16";
  v54[17] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 72) + 64LL));
  int v17 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v54,  v53,  18LL);
  v51[0] = @"totalTimeWithOutdoorPrior";
  v52[0] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 528) / 60.0));
  v51[1] = @"outdoorPriorType";
  v52[1] = +[NSNumber numberWithUnsignedChar:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedChar:",  *(unsigned __int8 *)(a1 + 505));
  v51[2] = @"luxWithOutdoorPriorBin01";
  v52[2] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  (*(_DWORD *)(*(void *)(a1 + 96) + 4LL) + **(_DWORD **)(a1 + 96)));
  v51[3] = @"luxWithOutdoorPriorBin02";
  v52[3] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 8LL));
  v51[4] = @"luxWithOutdoorPriorBin03";
  v52[4] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 12LL));
  v51[5] = @"luxWithOutdoorPriorBin04";
  v52[5] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 16LL));
  v51[6] = @"luxWithOutdoorPriorBin05";
  v52[6] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 20LL));
  v51[7] = @"luxWithOutdoorPriorBin06";
  v52[7] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 24LL));
  v51[8] = @"luxWithOutdoorPriorBin07";
  v52[8] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 28LL));
  v51[9] = @"luxWithOutdoorPriorBin08";
  v52[9] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 32LL));
  v51[10] = @"luxWithOutdoorPriorBin09";
  v52[10] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 36LL));
  v51[11] = @"luxWithOutdoorPriorBin10";
  v52[11] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 40LL));
  v51[12] = @"luxWithOutdoorPriorBin11";
  v52[12] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 44LL));
  v51[13] = @"luxWithOutdoorPriorBin12";
  v52[13] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 48LL));
  v51[14] = @"luxWithOutdoorPriorBin13";
  v52[14] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 52LL));
  v51[15] = @"luxWithOutdoorPriorBin14";
  v52[15] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 56LL));
  v51[16] = @"luxWithOutdoorPriorBin15";
  v52[16] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 60LL));
  v51[17] = @"luxWithOutdoorPriorBin16";
  v52[17] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 96) + 64LL));
  __int16 v42 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v52,  v51,  18LL);
  if ((*(_BYTE *)(a1 + 538) & 0x20) == 0
    || (double v18 = *(double *)(a1 + 424), v18 == -1.0)
    || *(double *)(a1 + 8) > v18 + 180.0
    || (unsigned int v19 = *(_DWORD *)(a1 + 432), v19 > 5))
  {
    unsigned int v20 = 0;
  }

  else
  {
    unsigned int v20 = (0x36u >> v19) & 1;
  }

  v49[0] = @"totalTimeWithVehiclePrior";
  v50[0] = +[NSNumber numberWithDouble:]( &OBJC_CLASS___NSNumber,  "numberWithDouble:",  round(*(double *)(a1 + 544) / 60.0));
  v49[1] = @"vehiclePriorType";
  v50[1] = +[NSNumber numberWithUnsignedChar:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedChar:",  *(unsigned __int8 *)(a1 + 538));
  v49[2] = @"mapsRouteType";
  if (v20) {
    uint64_t v21 = *(unsigned int *)(a1 + 432);
  }
  else {
    uint64_t v21 = 404LL;
  }
  v50[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v21);
  v49[3] = @"luxWithVehiclePriorBin01";
  v50[3] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  (*(_DWORD *)(*(void *)(a1 + 120) + 4LL) + **(_DWORD **)(a1 + 120)));
  v49[4] = @"luxWithVehiclePriorBin02";
  v50[4] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 8LL));
  v49[5] = @"luxWithVehiclePriorBin03";
  v50[5] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 12LL));
  v49[6] = @"luxWithVehiclePriorBin04";
  v50[6] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 16LL));
  v49[7] = @"luxWithVehiclePriorBin05";
  v50[7] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 20LL));
  v49[8] = @"luxWithVehiclePriorBin06";
  v50[8] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 24LL));
  v49[9] = @"luxWithVehiclePriorBin07";
  v50[9] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 28LL));
  v49[10] = @"luxWithVehiclePriorBin08";
  v50[10] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 32LL));
  v49[11] = @"luxWithVehiclePriorBin09";
  v50[11] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 36LL));
  v49[12] = @"luxWithVehiclePriorBin10";
  v50[12] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 40LL));
  v49[13] = @"luxWithVehiclePriorBin11";
  v50[13] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 44LL));
  v49[14] = @"luxWithVehiclePriorBin12";
  v50[14] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 48LL));
  v49[15] = @"luxWithVehiclePriorBin13";
  v50[15] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 52LL));
  v49[16] = @"luxWithVehiclePriorBin14";
  v50[16] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 56LL));
  v49[17] = @"luxWithVehiclePriorBin15";
  v50[17] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 60LL));
  v49[18] = @"luxWithVehiclePriorBin16";
  v50[18] = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  *(unsigned int *)(*(void *)(a1 + 120) + 64LL));
  uint64_t v22 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v50,  v49,  19LL);
  v47[0] = @"basic";
  v47[1] = @"weatherExtended";
  v48[0] = v10;
  v48[1] = v13;
  v47[2] = @"algoEstimates";
  v47[3] = @"overallLux";
  v48[2] = v14;
  float v48[3] = v15;
  v47[4] = @"alsOcclusion";
  v47[5] = @"indoorPrior";
  v48[4] = v16;
  v48[5] = v17;
  v47[6] = @"outdoorPrior";
  v47[7] = @"vehiclePrior";
  v48[6] = v42;
  v48[7] = v22;
  __int16 v23 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v48,  v47,  8LL);
  if (a2)
  {
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    uint64_t v24 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 138477827;
      __int16 v46 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "FitnessOutdoorAnalyticsAggregator, event basic info, %{private}@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      int v43 = 138477827;
      __int16 v44 = v10;
      int v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  0LL,  "FitnessOutdoorAnalyticsAggregator, event basic info, %{private}@",  &v43,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSDictionary *CLFitnessOutdoorAnalyticsAggregator::getCoreAnalyticsEventDictionaryNested(BOOL) const",  "%s\n",  v33);
    }

    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    double v25 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 138477827;
      __int16 v46 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_INFO,  "FitnessOutdoorAnalyticsAggregator, event weather extended info, %{private}@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      int v43 = 138477827;
      __int16 v44 = v13;
      LODWORD(v41) = 12;
      int v34 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  1LL,  "FitnessOutdoorAnalyticsAggregator, event weather extended info, %{private}@",  &v43,  v41);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSDictionary *CLFitnessOutdoorAnalyticsAggregator::getCoreAnalyticsEventDictionaryNested(BOOL) const",  "%s\n",  v34);
    }

    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    uint64_t v26 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 138477827;
      __int16 v46 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_INFO,  "FitnessOutdoorAnalyticsAggregator, event algorithm estimate info, %{private}@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      int v43 = 138477827;
      __int16 v44 = v14;
      LODWORD(v41) = 12;
      double v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  1LL,  "FitnessOutdoorAnalyticsAggregator, event algorithm estimate info, %{private}@",  &v43,  v41);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSDictionary *CLFitnessOutdoorAnalyticsAggregator::getCoreAnalyticsEventDictionaryNested(BOOL) const",  "%s\n",  v35);
    }

    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    __int16 v27 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 138477827;
      __int16 v46 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_INFO,  "FitnessOutdoorAnalyticsAggregator, event overall lux info, %{private}@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      int v43 = 138477827;
      __int16 v44 = v15;
      LODWORD(v41) = 12;
      __int16 v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  1LL,  "FitnessOutdoorAnalyticsAggregator, event overall lux info, %{private}@",  &v43,  v41);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSDictionary *CLFitnessOutdoorAnalyticsAggregator::getCoreAnalyticsEventDictionaryNested(BOOL) const",  "%s\n",  v36);
    }

    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    uint64_t v28 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 138477827;
      __int16 v46 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_INFO,  "FitnessOutdoorAnalyticsAggregator, event als occlusion info, %{private}@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      int v43 = 138477827;
      __int16 v44 = v16;
      LODWORD(v41) = 12;
      double v37 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  1LL,  "FitnessOutdoorAnalyticsAggregator, event als occlusion info, %{private}@",  &v43,  v41);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSDictionary *CLFitnessOutdoorAnalyticsAggregator::getCoreAnalyticsEventDictionaryNested(BOOL) const",  "%s\n",  v37);
    }

    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    __int16 v29 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 138477827;
      __int16 v46 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_INFO,  "FitnessOutdoorAnalyticsAggregator, event indoorPrior info, %{private}@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      int v43 = 138477827;
      __int16 v44 = v17;
      LODWORD(v41) = 12;
      __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  1LL,  "FitnessOutdoorAnalyticsAggregator, event indoorPrior info, %{private}@",  &v43,  v41);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSDictionary *CLFitnessOutdoorAnalyticsAggregator::getCoreAnalyticsEventDictionaryNested(BOOL) const",  "%s\n",  v38);
    }

    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    int v30 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 138477827;
      __int16 v46 = v42;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_INFO,  "FitnessOutdoorAnalyticsAggregator, event outdoorPrior info, %{private}@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      int v43 = 138477827;
      __int16 v44 = v42;
      LODWORD(v41) = 12;
      __int128 v39 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  1LL,  "FitnessOutdoorAnalyticsAggregator, event outdoorPrior info, %{private}@",  &v43,  v41);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSDictionary *CLFitnessOutdoorAnalyticsAggregator::getCoreAnalyticsEventDictionaryNested(BOOL) const",  "%s\n",  v39);
    }

    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    int v31 = (os_log_s *)qword_101934728;
    if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 138477827;
      __int16 v46 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_INFO,  "FitnessOutdoorAnalyticsAggregator, event vehiclePrior info, %{private}@",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934720 != -1) {
        dispatch_once(&qword_101934720, &stru_101862528);
      }
      int v43 = 138477827;
      __int16 v44 = v22;
      LODWORD(v41) = 12;
      __int16 v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934728,  1LL,  "FitnessOutdoorAnalyticsAggregator, event vehiclePrior info, %{private}@",  &v43,  v41);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "NSDictionary *CLFitnessOutdoorAnalyticsAggregator::getCoreAnalyticsEventDictionaryNested(BOOL) const",  "%s\n",  v40);
    }
  }

  return v23;
}

uint64_t sub_100962AB8(uint64_t a1)
{
  uint64_t v1 = *(int **)(a1 + 24);
  uint64_t v2 = *(int **)(a1 + 32);
  if (v1 == v2) {
    return 0x80000000LL;
  }
  int v3 = 0;
  uint64_t v4 = *(int **)(a1 + 24);
  do
  {
    int v5 = *v4++;
    v3 += v5;
  }

  while (v4 != v2);
  if (v3 < 1) {
    return 0x80000000LL;
  }
  int v6 = 0;
  float v7 = *(int **)(a1 + 24);
  do
  {
    int v8 = *v7++;
    v6 += v8;
  }

  while (v7 != v2);
  int v9 = v6 + 2;
  if (v6 >= -1) {
    int v9 = v6 + 1;
  }
  int v10 = v9 >> 1;
  int v11 = *v1;
  unint64_t v12 = *(void *)(a1 + 16);
  if (v12) {
    BOOL v13 = v11 < v10;
  }
  else {
    BOOL v13 = 0;
  }
  if (v13)
  {
    unint64_t v16 = 1LL;
    do
    {
      int v17 = v16 + 1;
      if (v12 <= v16) {
        break;
      }
      v11 += v1[v16++];
    }

    while (v11 < v10);
    int v14 = v17 - 1;
  }

  else
  {
    int v14 = 0;
  }

  int v18 = *(_DWORD *)(a1 + 4) + *(_DWORD *)a1 * v14;
  else {
    int v19 = *(_DWORD *)a1 + 1;
  }
  return (v18 + (v19 >> 1));
}

id sub_100962B70(uint64_t a1, int a2, NSDictionary *a3)
{
  int v3 = a3;
  if (!a3) {
    int v3 = sub_100961114(a1, a2);
  }
  id v4 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"basic"));
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"weatherExtended"));
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"algoEstimates"));
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"overallLux"));
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"alsOcclusion"));
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"indoorPrior"));
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"outdoorPrior"));
  return v4;
}

id sub_100962C70(uint64_t a1, int a2, NSDictionary *a3)
{
  int v3 = a3;
  if (!a3) {
    int v3 = sub_100961114(a1, a2);
  }
  id v4 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"basic"));
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"indoorPrior"));
  return v4;
}

id sub_100962CE4(uint64_t a1, int a2, NSDictionary *a3)
{
  int v3 = a3;
  if (!a3) {
    int v3 = sub_100961114(a1, a2);
  }
  id v4 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"basic"));
  objc_msgSend( v4,  "addEntriesFromDictionary:",  -[NSDictionary objectForKeyedSubscript:](v3, "objectForKeyedSubscript:", @"vehiclePrior"));
  return v4;
}

void sub_100962D58()
{
  *(void *)&double v0 = objc_opt_class(&OBJC_CLASS___MCProfileConnection).n128_u64[0];
  if (v1) {
    objc_msgSend( +[MCProfileConnection sharedConnection](MCProfileConnection, "sharedConnection", v0),  "isHealthDataSubmissionAllowed");
  }
}

uint64_t sub_100962D94(uint64_t a1, void *a2)
{
  if (qword_101934720 != -1) {
    dispatch_once(&qword_101934720, &stru_101862528);
  }
  int v3 = (os_log_s *)qword_101934728;
  if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67109376;
    unsigned int v13 = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"startTime"), "intValue");
    __int16 v14 = 1024;
    unsigned int v15 = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"endTime"), "intValue");
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "FitnessOutdoorAnalyticsAggregator, sending FitnessOutdoor2 analytics, startTime, %d, endTime, %d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    uint64_t v5 = qword_101934728;
    v9[0] = 67109376;
    v9[1] = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"startTime"), "intValue");
    __int16 v10 = 1024;
    unsigned int v11 = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"endTime"), "intValue");
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v5,  0LL,  "FitnessOutdoorAnalyticsAggregator, sending FitnessOutdoor2 analytics, startTime, %d, endTime, %d",  v9,  14);
    float v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFitnessOutdoorAnalyticsAggregator::sendAnalyticsFitnessOutdoor(NSDictionary * _Nonnull) const",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_100962FF0;
  v8[3] = &unk_101820740;
  _DWORD v8[4] = a2;
  return AnalyticsSendEventLazy(@"com.apple.CoreMotion.FitnessOutdoor2", v8);
}

uint64_t sub_100962FF0(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

uint64_t sub_100962FF8(uint64_t a1, void *a2)
{
  if (qword_101934720 != -1) {
    dispatch_once(&qword_101934720, &stru_101862528);
  }
  int v3 = (os_log_s *)qword_101934728;
  if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67109376;
    unsigned int v13 = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"startTime"), "intValue");
    __int16 v14 = 1024;
    unsigned int v15 = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"endTime"), "intValue");
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "FitnessOutdoorAnalyticsAggregator, sending AmbientLight.Indoor analytics, startTime, %d, endTime, %d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    uint64_t v5 = qword_101934728;
    v9[0] = 67109376;
    v9[1] = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"startTime"), "intValue");
    __int16 v10 = 1024;
    unsigned int v11 = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"endTime"), "intValue");
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v5,  0LL,  "FitnessOutdoorAnalyticsAggregator, sending AmbientLight.Indoor analytics, startTime, %d, endTime, %d",  v9,  14);
    float v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFitnessOutdoorAnalyticsAggregator::sendAnalyticsAmbientLightIndoor(NSDictionary * _Nonnull) const",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_100963254;
  v8[3] = &unk_101820740;
  _DWORD v8[4] = a2;
  return AnalyticsSendEventLazy(@"com.apple.CoreMotion.AmbientLight.Indoor", v8);
}

uint64_t sub_100963254(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

uint64_t sub_10096325C(uint64_t a1, void *a2)
{
  if (qword_101934720 != -1) {
    dispatch_once(&qword_101934720, &stru_101862528);
  }
  int v3 = (os_log_s *)qword_101934728;
  if (os_log_type_enabled((os_log_t)qword_101934728, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67109376;
    unsigned int v13 = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"startTime"), "intValue");
    __int16 v14 = 1024;
    unsigned int v15 = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"endTime"), "intValue");
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "FitnessOutdoorAnalyticsAggregator, sending AmbientLight.Vehicle analytics, startTime, %d, endTime, %d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934720 != -1) {
      dispatch_once(&qword_101934720, &stru_101862528);
    }
    uint64_t v5 = qword_101934728;
    v9[0] = 67109376;
    v9[1] = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"startTime"), "intValue");
    __int16 v10 = 1024;
    unsigned int v11 = objc_msgSend(objc_msgSend(a2, "objectForKey:", @"endTime"), "intValue");
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v5,  0LL,  "FitnessOutdoorAnalyticsAggregator, sending AmbientLight.Vehicle analytics, startTime, %d, endTime, %d",  v9,  14);
    float v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFitnessOutdoorAnalyticsAggregator::sendAnalyticsAmbientLightVehicle(NSDictionary * _Nonnull) const",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1009634B8;
  v8[3] = &unk_101820740;
  _DWORD v8[4] = a2;
  return AnalyticsSendEventLazy(@"com.apple.CoreMotion.AmbientLight.Vehicle", v8);
}

uint64_t sub_1009634B8(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

BOOL sub_1009634C0(uint64_t a1)
{
  double v2 = *(double *)(a1 + 24);
  double v3 = sub_100912280(v2);
  double v4 = sub_100912280(*(double *)(a1 + 32));
  if (v4 < v3) {
    double v4 = v3 + 24.0;
  }
  if (!*(_BYTE *)(a1 + 705)) {
    return 1LL;
  }
  int v5 = 2 * ((int)vcvtmd_s64_f64(v2 / 86400.0) % 6);
  double v7 = (double)(v5 + 12);
  return v4 > v7 && v3 <= v7;
}

void sub_100963584(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009635C4(a1);
  operator delete(v1);
}

void sub_100963598(id a1)
{
  qword_101934728 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Fitness");
}

uint64_t sub_1009635C4(uint64_t a1)
{
  *(void *)a1 = off_1018624E8;
  double v2 = *(void **)(a1 + 632);
  if (v2)
  {
    *(void *)(a1 + 640) = v2;
    operator delete(v2);
  }

  double v3 = *(void **)(a1 + 584);
  if (v3)
  {
    *(void *)(a1 + 592) = v3;
    operator delete(v3);
  }

  double v4 = *(void **)(a1 + 184);
  if (v4)
  {
    *(void *)(a1 + 192) = v4;
    operator delete(v4);
  }

  int v5 = *(void **)(a1 + 144);
  if (v5)
  {
    *(void *)(a1 + 152) = v5;
    operator delete(v5);
  }

  int v6 = *(void **)(a1 + 120);
  if (v6)
  {
    *(void *)(a1 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v6;
    operator delete(v6);
  }

  double v7 = *(void **)(a1 + 96);
  if (v7)
  {
    *(void *)(a1 + 104) = v7;
    operator delete(v7);
  }

  int v8 = *(void **)(a1 + 72);
  if (v8)
  {
    *(void *)(a1 + 80) = v8;
    operator delete(v8);
  }

  int v9 = *(void **)(a1 + 48);
  if (v9)
  {
    *(void *)(a1 + 56) = v9;
    operator delete(v9);
  }

  __int16 v10 = *(void ***)(a1 + 16);
  *(void *)(a1 + 16) = 0LL;
  if (v10) {
    sub_100223734(a1 + 16, v10);
  }
  return a1;
}

void *sub_100963694(void *a1, unint64_t a2, _DWORD *a3)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  if (a2)
  {
    sub_10001B7A4(a1, a2);
    int v6 = (_DWORD *)a1[1];
    double v7 = &v6[a2];
    uint64_t v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4LL;
    }

    while (v8);
    a1[1] = v7;
  }

  return a1;
}

void sub_1009636F8(_Unwind_Exception *exception_object)
{
  double v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100963714(uint64_t a1, int a2, int a3, int a4)
{
  *(_DWORD *)a1 = a2;
  *(_DWORD *)(a1 + 4) = a3;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = a4;
  unint64_t v5 = (a4 - a3) / a2 + 1LL;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  int v7 = 0;
  sub_10023D8E0((char **)(a1 + 24), v5, &v7);
  return a1;
}

void sub_10096377C(_Unwind_Exception *exception_object)
{
  double v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 32) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_100963798()
{
  qword_1019998C8 = 0LL;
  qword_1019998D0 = 0LL;
  qword_1019998D8 = 0LL;
  double v0 = operator new(0x44uLL);
  qword_1019998D0 = (uint64_t)(v0 + 17);
  qword_1019998D8 = (uint64_t)(v0 + 17);
  v0[16] = 1193033728;
  *(_OWORD *)double v0 = xmmword_101341728;
  *((_OWORD *)v0 + 1) = unk_101341738;
  *((_OWORD *)v0 + 2) = xmmword_101341748;
  *((_OWORD *)v0 + 3) = unk_101341758;
  qword_1019998C8 = (uint64_t)v0;
  __cxa_atexit((void (*)(void *))sub_1001B4198, &qword_1019998C8, (void *)&_mh_execute_header);
  qword_1019998E8 = 0LL;
  unk_1019998F0 = 0LL;
  qword_1019998E0 = 0LL;
  uint64_t v1 = operator new(0x18uLL);
  qword_1019998E8 = (uint64_t)(v1 + 3);
  unk_1019998F0 = v1 + 3;
  *(_OWORD *)uint64_t v1 = xmmword_10134176C;
  v1[2] = 0x4270000041F00000LL;
  qword_1019998E0 = (uint64_t)v1;
  return __cxa_atexit((void (*)(void *))sub_1001B4198, &qword_1019998E0, (void *)&_mh_execute_header);
}

uint64_t sub_100963868(uint64_t a1, double a2, double a3, double a4, double a5)
{
  *(double *)a1 = a2;
  *(double *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = a5;
  *(double *)(a1 + 16) = a3;
  *(double *)(a1 + 24) = 1.0 - a3;
  *(double *)(a1 + 32) = a4;
  *(_DWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  bzero((void *)(a1 + 40), 0x18uLL);
  bzero((void *)(a1 + 64), 0x18uLL);
  bzero((void *)(a1 + 104), 0x18uLL);
  return a1;
}

uint64_t sub_1009638CC(uint64_t a1, float *a2, double *a3, float32x2_t *a4)
{
  double v6 = *(double *)(a1 + 96);
  double v7 = *a2;
  if (v6 <= 0.0)
  {
    double v11 = a2[1];
    *(double *)(a1 + 40) = v7;
    *(double *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v11;
    double v13 = a2[2];
    *(double *)(a1 + 56) = v13;
    double v15 = 0.02;
    double v14 = v13;
    double v12 = v11;
    double v10 = v7;
  }

  else
  {
    double v9 = *(double *)(a1 + 16);
    double v8 = *(double *)(a1 + 24);
    double v10 = v9 * v7 + *(double *)(a1 + 40) * v8;
    double v11 = a2[1];
    double v12 = v9 * v11 + *(double *)(a1 + 48) * v8;
    *(double *)(a1 + 40) = v10;
    *(double *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v12;
    double v13 = a2[2];
    double v14 = v9 * v13 + *(double *)(a1 + 56) * v8;
    *(double *)(a1 + 56) = v14;
    double v15 = *a3 - v6;
  }

  double v16 = *(double *)(a1 + 120);
  double v17 = *(double *)(a1 + 112) + v11;
  *(double *)(a1 + 104) = *(double *)(a1 + 104) + v7;
  *(double *)(a1 + 112) = v17;
  *(double *)(a1 + 120) = v16 + v13;
  ++*(_DWORD *)(a1 + 128);
  int v18 = (void *)(a1 + 64);
  double v19 = *(double *)(a1 + 64) + (v7 - v10) * v15;
  *(double *)(a1 + 64) = v19;
  double v20 = *(double *)(a1 + 72) + (v11 - v12) * v15;
  double v21 = *(double *)(a1 + 80) + (v13 - v14) * v15;
  *(double *)(a1 + 72) = v20;
  *(double *)(a1 + 80) = v21;
  double v22 = *a3;
  *(double *)(a1 + 96) = *a3;
  double v23 = *a3 - *(double *)(a1 + 88);
  double v24 = *(double *)(a1 + 32);
  double v25 = fabs(v20);
  double v26 = fabs(v21);
  BOOL v27 = fabs(v19) <= v24 && v25 <= v24;
  BOOL v28 = v27 && v26 <= v24;
  *(double *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = *a3;
  bzero(v18, 0x18uLL);
  int v29 = *(_DWORD *)(a1 + 128);
  *a4 = vcvt_f32_f64(vdivq_f64(*(float64x2_t *)(a1 + 104), (float64x2_t)vdupq_lane_s64(COERCE__INT64((double)v29), 0)));
  float32_t v30 = *(double *)(a1 + 120) / (double)v29;
  a4[1].f32[0] = v30;
  bzero((void *)(a1 + 104), 0x18uLL);
  *(_DWORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  return 1LL;
}

id sub_100963A7C(uint64_t a1)
{
  id result = [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"StartDND"];
  if (!*(_BYTE *)(a1 + 32))
  {
    *(_BYTE *)(a1 + 32) = 1;
    return [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"DNDTriggered"];
  }

  return result;
}

id sub_100963AE0(uint64_t a1)
{
  id result = [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"StartDWR"];
  if (!*(_BYTE *)(a1 + 33))
  {
    *(_BYTE *)(a1 + 33) = 1;
    return [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"DWRTriggered"];
  }

  return result;
}

id sub_100963B44(uint64_t a1)
{
  id result = [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"TransitionDND"];
  if (!*(_BYTE *)(a1 + 32))
  {
    *(_BYTE *)(a1 + 32) = 1;
    return [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"DNDTriggered"];
  }

  return result;
}

id sub_100963BA8(uint64_t a1)
{
  id result = [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"TransitionDWR"];
  if (!*(_BYTE *)(a1 + 33))
  {
    *(_BYTE *)(a1 + 33) = 1;
    return [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"DWRTriggered"];
  }

  return result;
}

id sub_100963C14(uint64_t a1)
{
  return [*(id *)(a1 + 24) removeAllObjects];
}

id sub_100963C1C(uint64_t a1)
{
  return [*(id *)(a1 + 24) removeAllObjects];
}

id sub_100963C24(uint64_t a1)
{
  return [*(id *)(a1 + 24) removeAllObjects];
}

uint64_t sub_100963C2C(uint64_t a1)
{
  *(void *)a1 = &unk_101862548;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 9LL;
  *(_WORD *)(a1 + 16) = 512;
  *(_WORD *)(a1 + 32) = 0;
  *(void *)(a1 + 24) = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  return a1;
}

uint64_t sub_100963C78(uint64_t a1)
{
  return a1;
}

id sub_100963CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend( *(id *)(a1 + 24),  "setObject:forKeyedSubscript:",  +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a3 + 10 * a2),  @"StateSourcesCompounded");
}

id sub_100963D6C(uint64_t a1)
{
  id result = [*(id *)(a1 + 24) count];
  if (result) {
    return *(id *)(a1 + 24);
  }
  return result;
}

id sub_100963D98(uint64_t a1)
{
  id result = [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"EndDND"];
  if (*(_BYTE *)(a1 + 33) || *(_BYTE *)(a1 + 32))
  {
    *(_WORD *)(a1 + 32) = 0;
    return [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"DNDDWRCleared"];
  }

  return result;
}

id sub_100963E00(uint64_t a1)
{
  id result = [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"EndDWR"];
  if (*(_BYTE *)(a1 + 33) || *(_BYTE *)(a1 + 32))
  {
    *(_WORD *)(a1 + 32) = 0;
    return [*(id *)(a1 + 24) setObject:&off_1018D3CE0 forKeyedSubscript:@"DNDDWRCleared"];
  }

  return result;
}

uint64_t sub_100963E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != 2 || (a3 & 0xFFFFFFFFFFFFFFFDLL) != 0)
  {
    if (a2 == 2 && a3 == 1)
    {
      double v7 = &v12;
      uint64_t v8 = a1;
      int v9 = 2;
    }

    else
    {
      double v7 = &v11;
      uint64_t v8 = a1;
      int v9 = 3;
    }
  }

  else
  {
    double v7 = &v13;
    uint64_t v8 = a1;
    int v9 = 1;
  }

  return sub_100CCCC8C(v8, v9, (uint64_t)v7);
}

void sub_100963F94(id a1)
{
  qword_101999910 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLCoarseCellTilesManagerSilo");
}

uint64_t sub_100964048(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100966220;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101999920 != -1) {
    dispatch_once(&qword_101999920, block);
  }
  return qword_1019A1890;
}

BOOL sub_1009643C0(uint64_t a1, unsigned int a2, uint64_t a3, double a4, double a5, double a6)
{
  unsigned int v42 = a2;
  sub_1008ACE9C((uint64_t)&v39, &v42);
  std::string::assign(&v41, "");
  uint64_t v11 = sub_100DD9288(v39, (void *)(a1 + 216));
  sub_100C11F48((uint64_t)&v39, a3, a4, a5, *(double *)(v11 + 152), *(double *)(v11 + 160));
  BOOL v12 = sub_1008AD1E0((unsigned int *)&v39);
  if (v12)
  {
    uint64_t v13 = *(void *)(a1 + 176);
    __int128 v36 = v39;
    uint64_t v37 = v40;
    else {
      std::string __p = v41;
    }
    int v17 = sub_100CEEA48(v13, (uint64_t)&v36, a6);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v18 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v19 = v42;
      double v20 = sub_100DD8CC8(v42);
      sub_1008AD840((unsigned int *)&v39, (std::stringbuf::string_type *)v43);
      double v21 = v43[23] >= 0 ? v43 : *(_BYTE **)v43;
      int v22 = *(_DWORD *)(a1 + 148);
      *(_DWORD *)std::string buf = 67241731;
      *(_DWORD *)__int16 v52 = v19;
      *(_WORD *)&v52[4] = 2082;
      *(void *)&v52[6] = v20;
      *(_WORD *)&v52[14] = 2049;
      *(double *)&v52[16] = a4;
      __int16 v53 = 2049;
      *(double *)__int16 v54 = a5;
      *(_WORD *)&v54[8] = 2081;
      double v55 = v21;
      __int16 v56 = 1026;
      int v57 = v17;
      __int16 v58 = 1026;
      int v59 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "TileDl, requestDownload, type, %{public}d, %{public}s, location, %{private}14.8lf, %{private}14.8lf, id, %{priva te}s, updated, %{public}d, reachbility, %{public}d",  buf,  0x3Cu);
      if ((v43[23] & 0x80000000) != 0) {
        operator delete(*(void **)v43);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      uint64_t v26 = qword_101934858;
      unsigned int v27 = v42;
      BOOL v28 = sub_100DD8CC8(v42);
      sub_1008AD840((unsigned int *)&v39, &v35);
      if ((v35.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v29 = &v35;
      }
      else {
        int v29 = (std::stringbuf::string_type *)v35.__r_.__value_.__r.__words[0];
      }
      int v30 = *(_DWORD *)(a1 + 148);
      *(_DWORD *)int v43 = 67241731;
      *(_DWORD *)&v43[4] = v27;
      *(_WORD *)&v43[8] = 2082;
      *(void *)&v43[10] = v28;
      *(_WORD *)&v43[18] = 2049;
      *(double *)&v43[20] = a4;
      __int16 v44 = 2049;
      *(double *)uint64_t v45 = a5;
      *(_WORD *)&v45[8] = 2081;
      __int16 v46 = v29;
      __int16 v47 = 1026;
      int v48 = v17;
      __int16 v49 = 1026;
      int v50 = v30;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v26,  2LL,  "TileDl, requestDownload, type, %{public}d, %{public}s, location, %{private}14.8lf, %{private}14.8lf, id, %{priva te}s, updated, %{public}d, reachbility, %{public}d",  v43,  60);
      int v32 = v31;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, sec_key_t, CFAbsoluteTime)",  "%s\n",  v32);
    }

    if (!v17) {
      goto LABEL_30;
    }
    int v23 = (*(uint64_t (**)(void))(**(void **)(a1 + 168) + 40LL))(*(void *)(a1 + 168));
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    double v24 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 67240192;
      *(_DWORD *)__int16 v52 = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "@TileSched, coarsecell, set, %{public}d",  buf,  8u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_30;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    *(_DWORD *)int v43 = 67240192;
    *(_DWORD *)&v43[4] = v23;
    LODWORD(v34) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileSched, coarsecell, set, %{public}d",  v43,  v34);
    double v16 = (uint8_t *)v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, sec_key_t, CFAbsoluteTime)",  "%s\n",  v33);
LABEL_45:
    if (v16 != buf) {
      free(v16);
    }
    goto LABEL_30;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  double v14 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 134284545;
    *(double *)__int16 v52 = a4;
    *(_WORD *)&v52[8] = 2049;
    *(double *)&v52[10] = a5;
    *(_WORD *)&void v52[18] = 1024;
    *(_DWORD *)&v52[20] = v39;
    __int16 v53 = 1024;
    *(_DWORD *)__int16 v54 = DWORD1(v39);
    *(_WORD *)&v54[4] = 1024;
    *(_DWORD *)&v54[6] = DWORD2(v39);
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "@TileError, RequestID, ll, %{private}.3lf, %{private}.3lf, tid, %d, %d, %d",  buf,  0x28u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    *(_DWORD *)int v43 = 134284545;
    *(double *)&v43[4] = a4;
    *(_WORD *)&_BYTE v43[12] = 2049;
    *(double *)&v43[14] = a5;
    *(_WORD *)&v43[22] = 1024;
    *(_DWORD *)&v43[24] = v39;
    __int16 v44 = 1024;
    *(_DWORD *)uint64_t v45 = DWORD1(v39);
    *(_WORD *)&v45[4] = 1024;
    *(_DWORD *)&v45[6] = DWORD2(v39);
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileError, RequestID, ll, %{private}.3lf, %{private}.3lf, tid, %d, %d, %d",  v43,  40);
    double v16 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::requestDownload(CLTilesManager_Type::TileType, double, double, sec_key_t, CFAbsoluteTime)",  "%s\n",  v15);
    goto LABEL_45;
  }

void sub_100964A6C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *__p, uint64_t a29, int a30, __int16 a31, char a32, char a33)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100964AD0(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = sub_10096530C(a1, "CLCoarseCellTilesManager", a2);
  *(void *)uint64_t v7 = off_101862650;
  *(void *)(v7 + 112) = off_101862738;
  *(void *)(v7 + 120) = 0LL;
  *(void *)(v7 + 136) = 0x415EA6E000000000LL;
  uint64_t v8 = (uint64_t *)(v7 + 136);
  *(_WORD *)(v7 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  *(_DWORD *)(v7 + 14_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  *(_WORD *)(v7 + 152) = 0;
  *(_DWORD *)(v7 + 160) = 2;
  uint64_t v9 = *a3;
  *a3 = 0LL;
  *(void *)(v7 + 16_Block_object_dispose((const void *)(v1 - 224), 8) = v9;
  *(void *)(v7 + 176) = 0LL;
  double v10 = (uint64_t *)(v7 + 176);
  uint64_t v11 = v7 + 184;
  sub_100CFCAE4((void *)(v7 + 184));
  sub_100BD82E0((void *)(a1 + 192), *(void *)(a1 + 40));
  sub_100E79F28(a1 + 216);
  *(_BYTE *)(a1 + 240) = 0;
  sub_1002F0B04(&buf);
  sub_1002A82BC(buf, "AncientTilesThreshold", v8);
  BOOL v12 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (*((void *)&buf + 1))
  {
    uint64_t v13 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018628C8);
  }
  double v15 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v16 = *v8;
    LODWORD(buf) = 134217984;
    *(void *)((char *)&buf + 4) = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "TILE: fMaxTileDataAge, %.1lf",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    uint64_t v32 = *v8;
    *(_DWORD *)uint64_t v40 = 134217984;
    *(void *)&v40[4] = v32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: fMaxTileDataAge, %.1lf",  COERCE_DOUBLE(v40));
    uint64_t v34 = (__int128 *)v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLCoarseCellTilesManager::CLCoarseCellTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLICoarseCellTilesMana gerExternal>, std::optional<CLTilesSetCollection>)",  "%s\n",  v33);
    if (v34 != &buf) {
      free(v34);
    }
  }

  *(_BYTE *)(a1 + 144) = (*(uint64_t (**)(void))(**(void **)(a1 + 168) + 32LL))(*(void *)(a1 + 168));
  int v17 = (unsigned __int8 *)(a1 + 144);
  sub_1002F0B04(&buf);
  sub_1002A6F64(buf, "CellTilesActive", (BOOL *)(a1 + 144));
  int v18 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (*((void *)&buf + 1))
  {
    unsigned int v19 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
    do
      unint64_t v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  double v21 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v22 = *v17;
    LODWORD(buf) = 67240192;
    DWORD1(buf) = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "TileCoarse, isActive, %{public}d",  (uint8_t *)&buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v35 = *v17;
    *(_DWORD *)uint64_t v40 = 67240192;
    *(_DWORD *)&v40[4] = v35;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCoarse, isActive, %{public}d",  v40,  8);
    uint64_t v37 = (__int128 *)v36;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLCoarseCellTilesManager::CLCoarseCellTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLICoarseCellTilesMana gerExternal>, std::optional<CLTilesSetCollection>)",  "%s\n",  v36);
    if (v37 != &buf) {
      free(v37);
    }
  }

  if (*(_BYTE *)(a4 + 24))
  {
    sub_100E79F2C((__int128 *)(a1 + 216), (__int128 *)a4);
  }

  else
  {
    sub_1009653A8(&buf);
    sub_100E79F2C((__int128 *)(a1 + 216), &buf);
    *(void *)uint64_t v40 = &buf;
    sub_1009708B4((void ***)v40);
  }

  sub_1002F0B04(&buf);
  sub_1002A82BC(buf, "MTimeModificationPeriod", &qword_101991110);
  int v23 = (std::__shared_weak_count *)*((void *)&buf + 1);
  if (*((void *)&buf + 1))
  {
    double v24 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
    do
      unint64_t v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018628C8);
  }
  uint64_t v26 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf) = 134217984;
    *(void *)((char *)&buf + 4) = qword_101991110;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "TILE: MTimeModificationPeriod, %.1lf",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    *(_DWORD *)uint64_t v40 = 134217984;
    *(void *)&v40[4] = qword_101991110;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: MTimeModificationPeriod, %.1lf",  COERCE_DOUBLE(v40));
    __int128 v39 = (__int128 *)v38;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLCoarseCellTilesManager::CLCoarseCellTilesManager(id<CLIntersiloUniverse>, std::unique_ptr<CLICoarseCellTilesMana gerExternal>, std::optional<CLTilesSetCollection>)",  "%s\n",  v38);
    if (v39 != &buf) {
      free(v39);
    }
  }

  if (_os_feature_enabled_impl("CoreLocation", "TilesService"))
  {
    unsigned int v27 = operator new(0x78uLL);
    sub_100E74504(v27, *(void *)(a1 + 40), sub_100965FBC, a1);
  }

  else
  {
    unsigned int v27 = operator new(0x70uLL);
    sub_1002B5C60((uint64_t)v27, *(void *)(a1 + 40), (uint64_t)sub_100965FBC, a1);
  }

  uint64_t v28 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = v27;
  if (v28) {
    (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
  }
  uint64_t v29 = (uint64_t)operator new(0x88uLL);
  *(void *)&__int128 buf = 0x100000001LL;
  DWORD2(buf) = 1;
  WORD6(buf) = 256;
  uint64_t v42 = 0x6400000000LL;
  __int128 v43 = xmmword_1013417C0;
  int v44 = 1056964608;
  char v45 = 1;
  sub_100CEEA44(v29, &buf, v11, a1 + 216, a1 + 192);
  uint64_t v30 = *v10;
  uint64_t *v10 = v29;
  if (v30)
  {
    sub_100970954((uint64_t)v10, v30);
    uint64_t v29 = *v10;
  }

  sub_100CF41FC(v29, *(_BYTE *)(a1 + 128));
  return a1;
}

void sub_100965234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v7 = *v4;
  *double v4 = 0LL;
  if (v7) {
    sub_100970954((uint64_t)v4, v7);
  }
  uint64_t v8 = *(void *)(v3 + 168);
  *(void *)(v3 + 16_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  uint64_t v9 = *(void *)(v3 + 120);
  *(void *)(v3 + 120) = 0LL;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  sub_10096601C(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_10096530C(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101862918;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  return a1;
}

void sub_10096538C(_Unwind_Exception *exception_object)
{
}

void sub_1009653A8(void *a1@<X8>)
{
  if (byte_101999950[23] < 0) {
    sub_1010DD48C(&__dst, *(void **)byte_101999950, *(unint64_t *)&byte_101999950[8]);
  }
  else {
    std::string __dst = *(std::string *)byte_101999950;
  }
  sub_1002F0B04(buf);
  BOOL v2 = sub_1002A8560(*(uint64_t *)buf, "CellTilesServerUrl", &__dst);
  uint64_t v3 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    double v4 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v5 = __ldaxr(v4);
    while (__stlxr(v5 - 1, v4));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  double v6 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    p_dst = &__dst;
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 buf = 136380931;
    *(void *)&uint8_t buf[4] = p_dst;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "TILE: fDefaultCellTilesServerUrl, %{private}s, overridden, %{public}d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v48 = &__dst;
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      int v48 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int16 v70 = 136380931;
    *(void *)&v70[4] = v48;
    __int16 v71 = 1026;
    BOOL v72 = v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TILE: fDefaultCellTilesServerUrl, %{private}s, overridden, %{public}d",  v70,  18);
    int v50 = (char *)v49;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLTilesSetCollection CLCoarseCellTilesManager::initializeProductionTilesSetCollection()",  "%s\n",  v49);
    if (v50 != buf) {
      free(v50);
    }
  }

  if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    size_t size = __dst.__r_.__value_.__s.__size_;
  }
  else {
    size_t size = __dst.__r_.__value_.__l.__size_;
  }
  uint64_t v9 = v70;
  sub_1000392EC((uint64_t)v70, size + 5);
  if (v73 < 0) {
    uint64_t v9 = *(_BYTE **)v70;
  }
  if (size)
  {
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      double v10 = &__dst;
    }
    else {
      double v10 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    memmove(v9, v10, size);
  }

  strcpy(&v9[size], "/6/v1");
  if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    size_t v11 = __dst.__r_.__value_.__s.__size_;
  }
  else {
    size_t v11 = __dst.__r_.__value_.__l.__size_;
  }
  BOOL v12 = v63;
  sub_1000392EC((uint64_t)v63, v11 + 5);
  if (v64 < 0) {
    BOOL v12 = (void **)v63[0];
  }
  if (v11)
  {
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v13 = &__dst;
    }
    else {
      uint64_t v13 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    memmove(v12, v13, v11);
  }

  strcpy((char *)v12 + v11, "/7/v1");
  if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    size_t v14 = __dst.__r_.__value_.__s.__size_;
  }
  else {
    size_t v14 = __dst.__r_.__value_.__l.__size_;
  }
  double v15 = v61;
  sub_1000392EC((uint64_t)v61, v14 + 5);
  if (v62 < 0) {
    double v15 = (void **)v61[0];
  }
  if (v14)
  {
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v16 = &__dst;
    }
    else {
      uint64_t v16 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    memmove(v15, v16, v14);
  }

  strcpy((char *)v15 + v14, "/8/v1");
  if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    size_t v17 = __dst.__r_.__value_.__s.__size_;
  }
  else {
    size_t v17 = __dst.__r_.__value_.__l.__size_;
  }
  int v18 = v59;
  sub_1000392EC((uint64_t)v59, v17 + 6);
  if (v60 < 0) {
    int v18 = (void **)v59[0];
  }
  if (v17)
  {
    if ((__dst.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unsigned int v19 = &__dst;
    }
    else {
      unsigned int v19 = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    memmove(v18, v19, v17);
  }

  strcpy((char *)v18 + v17, "/11/v1");
  sub_100E79F28(a1);
  sub_100966300();
  if (byte_10199993F >= 0) {
    unint64_t v20 = (const char *)&qword_101999928;
  }
  else {
    unint64_t v20 = (const char *)qword_101999928;
  }
  int v21 = mkdir(v20, 0x1C0u);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018628C8);
  }
  int v22 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_100966300();
    if (byte_10199993F >= 0) {
      int v23 = &qword_101999928;
    }
    else {
      int v23 = (uint64_t *)qword_101999928;
    }
    *(_DWORD *)__int128 buf = 136315394;
    *(void *)&uint8_t buf[4] = v23;
    *(_WORD *)&_BYTE buf[12] = 1024;
    *(_DWORD *)&buf[14] = v21;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "TILE: mkdir, %s, ret, %d", buf, 0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    uint64_t v51 = qword_101934A78;
    sub_100966300();
    if (byte_10199993F >= 0) {
      __int16 v52 = &qword_101999928;
    }
    else {
      __int16 v52 = (uint64_t *)qword_101999928;
    }
    *(_DWORD *)std::string __p = 136315394;
    *(void *)&__p[4] = v52;
    __int16 v67 = 1024;
    int v68 = v21;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v51,  2LL,  "TILE: mkdir, %s, ret, %d",  __p,  18);
    __int16 v54 = (char *)v53;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLTilesSetCollection CLCoarseCellTilesManager::initializeProductionTilesSetCollection()",  "%s\n",  v53);
    if (v54 != buf) {
      free(v54);
    }
  }

  double v24 = (char *)operator new(0x138uLL);
  sub_100966300();
  if (byte_10199993F >= 0) {
    size_t v25 = byte_10199993F;
  }
  else {
    size_t v25 = qword_101999930;
  }
  uint64_t v26 = buf;
  sub_1000392EC((uint64_t)buf, v25 + 11);
  if (v75 < 0) {
    uint64_t v26 = *(_BYTE **)buf;
  }
  if (v25)
  {
    if (byte_10199993F >= 0) {
      unsigned int v27 = &qword_101999928;
    }
    else {
      unsigned int v27 = (uint64_t *)qword_101999928;
    }
    memmove(v26, v27, v25);
  }

  strcpy(&v26[v25], "/coarse-gsm");
  sub_1010DDBC0(__p, "CLCoarseGsmTileServer");
  sub_100E79D6C(v24, 6LL, buf, v70, __p);
  if (v69 < 0) {
    operator delete(*(void **)__p);
  }
  if (v75 < 0) {
    operator delete(*(void **)buf);
  }
  *(_OWORD *)(v24 + 152) = xmmword_1013417D0;
  *((void *)v24 + 21) = 0x1000000010000LL;
  uint64_t v58 = (uint64_t)v24;
  sub_100E7A284(a1, 6u, &v58);
  uint64_t v28 = v58;
  uint64_t v58 = 0LL;
  if (v28)
  {
    uint64_t v29 = (void *)sub_100970994(v28);
    operator delete(v29);
  }

  uint64_t v30 = (char *)operator new(0x138uLL);
  sub_100966300();
  if (byte_10199993F >= 0) {
    size_t v31 = byte_10199993F;
  }
  else {
    size_t v31 = qword_101999930;
  }
  uint64_t v32 = buf;
  sub_1000392EC((uint64_t)buf, v31 + 12);
  if (v75 < 0) {
    uint64_t v32 = *(_BYTE **)buf;
  }
  if (v31)
  {
    if (byte_10199993F >= 0) {
      int v33 = &qword_101999928;
    }
    else {
      int v33 = (uint64_t *)qword_101999928;
    }
    memmove(v32, v33, v31);
  }

  strcpy(&v32[v31], "/coarse-cdma");
  sub_1010DDBC0(__p, "CLCoarseCdmaTileServer");
  sub_100E79D6C(v30, 7LL, buf, v61, __p);
  if (v69 < 0) {
    operator delete(*(void **)__p);
  }
  if (v75 < 0) {
    operator delete(*(void **)buf);
  }
  *(_OWORD *)(v30 + 152) = xmmword_1013417D0;
  *((void *)v30 + 21) = 0x1000000010000LL;
  uint64_t v57 = (uint64_t)v30;
  sub_100E7A284(a1, 7u, &v57);
  uint64_t v34 = v57;
  uint64_t v57 = 0LL;
  if (v34)
  {
    int v35 = (void *)sub_100970994(v34);
    operator delete(v35);
  }

  __int128 v36 = (char *)operator new(0x138uLL);
  sub_100966300();
  if (byte_10199993F >= 0) {
    size_t v37 = byte_10199993F;
  }
  else {
    size_t v37 = qword_101999930;
  }
  __int16 v38 = buf;
  sub_1000392EC((uint64_t)buf, v37 + 11);
  if (v75 < 0) {
    __int16 v38 = *(_BYTE **)buf;
  }
  if (v37)
  {
    if (byte_10199993F >= 0) {
      __int128 v39 = &qword_101999928;
    }
    else {
      __int128 v39 = (uint64_t *)qword_101999928;
    }
    memmove(v38, v39, v37);
  }

  strcpy(&v38[v37], "/coarse-lte");
  sub_1010DDBC0(__p, "CLCoarseLteTileServer");
  sub_100E79D6C(v36, 8LL, buf, v63, __p);
  if (v69 < 0) {
    operator delete(*(void **)__p);
  }
  if (v75 < 0) {
    operator delete(*(void **)buf);
  }
  *(_OWORD *)(v36 + 152) = xmmword_1013417D0;
  *((void *)v36 + 21) = 0x1000000010000LL;
  uint64_t v56 = (uint64_t)v36;
  sub_100E7A284(a1, 8u, &v56);
  uint64_t v40 = v56;
  uint64_t v56 = 0LL;
  if (v40)
  {
    std::string v41 = (void *)sub_100970994(v40);
    operator delete(v41);
  }

  uint64_t v42 = (char *)operator new(0x138uLL);
  sub_100966300();
  if (byte_10199993F >= 0) {
    size_t v43 = byte_10199993F;
  }
  else {
    size_t v43 = qword_101999930;
  }
  int v44 = buf;
  sub_1000392EC((uint64_t)buf, v43 + 10);
  if (v75 < 0) {
    int v44 = *(_BYTE **)buf;
  }
  if (v43)
  {
    if (byte_10199993F >= 0) {
      char v45 = &qword_101999928;
    }
    else {
      char v45 = (uint64_t *)qword_101999928;
    }
    memmove(v44, v45, v43);
  }

  strcpy(&v44[v43], "/coarse-nr");
  sub_1010DDBC0(__p, "CLCoarseNrTileServer");
  sub_100E79D6C(v42, 12LL, buf, v59, __p);
  if (v69 < 0) {
    operator delete(*(void **)__p);
  }
  if (v75 < 0) {
    operator delete(*(void **)buf);
  }
  *(_OWORD *)(v42 + 152) = xmmword_1013417D0;
  *((void *)v42 + 21) = 0x1000000010000LL;
  uint64_t v55 = (uint64_t)v42;
  sub_100E7A284(a1, 0xCu, &v55);
  uint64_t v46 = v55;
  uint64_t v55 = 0LL;
  if (v46)
  {
    __int16 v47 = (void *)sub_100970994(v46);
    operator delete(v47);
  }

  if (v60 < 0) {
    operator delete(v59[0]);
  }
  if (v62 < 0) {
    operator delete(v61[0]);
  }
  if (v64 < 0) {
    operator delete(v63[0]);
  }
  if (v73 < 0) {
    operator delete(*(void **)v70);
  }
}

void sub_100965E4C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, void *a30, uint64_t a31, int a32, __int16 a33, char a34, char a35, void *a36, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, void *a43, uint64_t a44, int a45, __int16 a46, char a47, char a48, uint64_t a49, void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a55 < 0) {
    operator delete(a50);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  _Unwind_Resume(a1);
}

id sub_100965FBC(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(a3 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_10096A28C;
  v5[3] = &unk_101861AD0;
  char v6 = a2;
  v5[4] = a3;
  v5[5] = a1;
  void v5[6] = a3;
  return [v3 async:v5];
}

uint64_t sub_10096601C(uint64_t a1)
{
  *(void *)a1 = off_101862918;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100966090(uint64_t a1, void *a2)
{
  v6[0] = 0;
  char v7 = 0;
  sub_100964AD0(a1, a2, &v8, (uint64_t)v6);
  if (v7)
  {
    uint64_t v9 = (void **)v6;
    sub_1009708B4(&v9);
  }

  uint64_t v4 = v8;
  uint64_t v8 = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return a1;
}

void sub_100966118( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
  if (a12)
  {
    *(void *)(v13 - 24) = &a9;
    sub_1009708B4((void ***)(v13 - 24));
  }

  sub_1012549C0(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_100966144(uint64_t a1)
{
  *(void *)a1 = off_101862650;
  *(void *)(a1 + 112) = off_101862738;
  sub_1009663C0(a1);
  char v6 = (void **)(a1 + 216);
  sub_1009708B4(&v6);
  nullsub_1111(a1 + 184);
  uint64_t v2 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0LL;
  if (v2) {
    sub_100970954(a1 + 176, v2);
  }
  uint64_t v3 = *(void *)(a1 + 168);
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return sub_10096601C(a1);
}

uint64_t sub_1009661EC(uint64_t a1)
{
  return sub_100966144(a1 - 112);
}

void sub_1009661F4(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100966144(a1);
  operator delete(v1);
}

void sub_100966208(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100966144(a1 - 112);
  operator delete(v1);
}

uint64_t sub_100966220(uint64_t a1)
{
  uint64_t v2 = operator new(0x100uLL);
  uint64_t result = sub_100966090((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A1890 = (uint64_t)v2;
  return result;
}

void sub_100966258(_Unwind_Exception *a1)
{
}

__int128 *sub_10096626C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101999968);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_101999968))
  {
    xmmword_101999950 = 0uLL;
    unk_101999960 = 0LL;
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_101999950, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101999968);
  }

  if (qword_101999970 != -1) {
    dispatch_once(&qword_101999970, &stru_1018627B0);
  }
  return &xmmword_101999950;
}

uint64_t *sub_100966300()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101999940);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_101999940))
  {
    qword_101999928 = 0LL;
    qword_101999930 = 0LL;
    unk_101999938 = 0LL;
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999928, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101999940);
  }

  if (qword_101999948 != -1) {
    dispatch_once(&qword_101999948, &stru_101862790);
  }
  return &qword_101999928;
}

void sub_100966394(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_100970994(v3);
    operator delete(v4);
  }

uint64_t sub_1009663C0(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018628C8);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "TILE: CLCoarseCellTilesManager::shutdown",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: CLCoarseCellTilesManager::shutdown",  v6,  2);
    unint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLCoarseCellTilesManager::shutdown()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  sub_100CF3320(*(void *)(a1 + 176));
  uint64_t result = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

void sub_100966570(uint64_t a1, uint64_t a2, int *a3, _DWORD *a4)
{
  if (*a3)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    unint64_t v5 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = *a3;
      *(_DWORD *)__int128 buf = 67240192;
      int v20 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "TileCoarse, unexpected, dataprotection, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      int v7 = *a3;
      LODWORD(v18[0]) = 67240192;
      HIDWORD(v18[0]) = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCoarse, unexpected, dataprotection, %{public}d",  v18,  8,  v18[0],  v18[1]);
LABEL_22:
      size_t v17 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notificatio n &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v8);
      if (v17 != buf) {
        free(v17);
      }
    }
  }

  else
  {
    double v11 = (*(double (**)(void))(**(void **)(a1 + 168) + 16LL))(*(void *)(a1 + 168));
    int v12 = *(unsigned __int8 *)(a1 + 128);
    char v13 = *a4 != 1;
    *(_BYTE *)(a1 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v13;
    sub_100CF41FC(*(void *)(a1 + 176), v13);
    if (*(_BYTE *)(a1 + 128))
    {
      int v14 = 1;
    }

    else
    {
      sub_1009668C4(a1, v11);
      int v14 = *(unsigned __int8 *)(a1 + 128);
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    double v15 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      int v16 = *(unsigned __int8 *)(a1 + 128);
      *(_DWORD *)__int128 buf = 67109376;
      int v20 = v16;
      __int16 v21 = 1024;
      BOOL v22 = v12 != v14;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "TileCoarse, kNotificationEncryptedDataAvailability, %d, changed, %d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCoarse, kNotificationEncryptedDataAvailability, %d, changed, %d",  v18);
      goto LABEL_22;
    }
  }

void sub_1009668C4(uint64_t a1, double a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(unsigned __int8 *)(a1 + 129);
    *(_DWORD *)__int128 buf = 67240192;
    int v19 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "TileCoarse, listAvailableFilesAllTypes, indexed, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v8 = *(unsigned __int8 *)(a1 + 129);
    v17[0] = 67240192;
    v17[1] = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCoarse, listAvailableFilesAllTypes, indexed, %{public}d",  v17,  8);
    double v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::listAvailableFilesAllTypes(CFAbsoluteTime)",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  if (!*(_BYTE *)(a1 + 129))
  {
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    _DWORD v16[2] = sub_1009685B0;
    float v16[3] = &unk_101840280;
    v16[4] = a1;
    *(double *)&v16[5] = a2;
    sub_100968338(a1, (uint64_t)"indexTiles", (uint64_t)v16);
    *(_BYTE *)(a1 + 129) = 1;
    if (*(_BYTE *)(a1 + 240))
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      int v6 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "TileCoarse, clear on index", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        LOWORD(v17[0]) = 0;
        LODWORD(v15) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCoarse, clear on index",  v17,  v15);
        int v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::listAvailableFilesAllTypes(CFAbsoluteTime)",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }

      sub_1009676A4(a1);
      *(_BYTE *)(a1 + 240) = 0;
    }

    else
    {
      sub_1009682B8(a1, a2);
    }

    sub_1009678F4(a1, a2);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v7 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "TileCoarse, listAvailableFilesAllTypes, done",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      LOWORD(v17[0]) = 0;
      LODWORD(v15) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCoarse, listAvailableFilesAllTypes, done",  v17,  v15);
      int v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::listAvailableFilesAllTypes(CFAbsoluteTime)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }
  }

void sub_100966D58(uint64_t a1, uint64_t a2, int *a3, int *a4)
{
  if (*a3 == 6)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v6 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      int v8 = *a4;
      int v7 = a4[1];
      *(_DWORD *)__int128 buf = 67240448;
      int v25 = v7;
      __int16 v26 = 1026;
      int v27 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "TileCoarse, kNotificationReachability, %{public}d, was, %{public}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      int v14 = *a4;
      int v13 = a4[1];
      int v20 = 67240448;
      int v21 = v13;
      __int16 v22 = 1026;
      int v23 = v14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCoarse, kNotificationReachability, %{public}d, was, %{public}d",  &v20,  14);
      int v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaem onStatus_Type::NotificationData &)",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }

    int v9 = a4[1];
    *(_DWORD *)(a1 + 14_Block_object_dispose((const void *)(v1 - 224), 8) = v9;
    sub_100CF4014(*(void *)(a1 + 176), v9);
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    double v11 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = *a3;
      *(_DWORD *)__int128 buf = 67240192;
      int v25 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "TileCoarse, unexpected, status, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      int v17 = *a3;
      int v20 = 67240192;
      int v21 = v17;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCoarse, unexpected, status, %{public}d",  &v20,  8);
      int v19 = (uint8_t *)v18;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaem onStatus_Type::NotificationData &)",  "%s\n",  v18);
      if (v19 != buf) {
        free(v19);
      }
    }
  }

void sub_100967090(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  int v8 = *a3;
  if (*a3 == 6)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    double v11 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "TileCoarse, #CacheDelete kNotificationSoftwareUpdateStorageRecovery",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      LOWORD(v26) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCoarse, #CacheDelete kNotificationSoftwareUpdateStorageRecovery",  &v26,  2);
      int v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLCli entManager_Type::NotificationData &)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }
  }

  else
  {
    double v9 = v7;
    if (v8 != 4)
    {
      if (v8)
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        int v16 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          int v17 = *a3;
          *(_DWORD *)__int128 buf = 67240192;
          int v29 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "TileCoarse, unexpected, status, %{public}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_1018628A8);
          }
          int v23 = *a3;
          int v26 = 67240192;
          int v27 = v23;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCoarse, unexpected, status, %{public}d",  &v26,  8);
          int v25 = (uint8_t *)v24;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::onClientNotification(int, const CLClientManager_Type::Notification &, const C LClientManager_Type::NotificationData &)",  "%s\n",  v24);
          if (v25 != buf) {
            free(v25);
          }
        }
      }

      else
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        double v10 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "TileCoarse, kNotificationReset", buf, 2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_1018628A8);
          }
          LOWORD(v26) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCoarse, kNotificationReset",  &v26,  2);
          int v19 = (uint8_t *)v18;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::onClientNotification(int, const CLClientManager_Type::Notification &, const C LClientManager_Type::NotificationData &)",  "%s\n",  v18);
          if (v19 != buf) {
            free(v19);
          }
        }

        sub_1009676A4(a1);
        sub_1009678F4(a1, v9);
        if (!*(_BYTE *)(a1 + 129)) {
          *(_BYTE *)(a1 + 240) = 1;
        }
        (*(void (**)(void))(**(void **)(a1 + 168) + 48LL))(*(void *)(a1 + 168));
      }

      return;
    }

    *(_BYTE *)(a1 + 152) = *(_DWORD *)(a4 + 188) == 1;
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v14 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      int v15 = *(unsigned __int8 *)(a1 + 152);
      *(_DWORD *)__int128 buf = 67240192;
      int v29 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "TileCoarse, kNotificationLocationServicesStatus, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      int v20 = *(unsigned __int8 *)(a1 + 152);
      int v26 = 67240192;
      int v27 = v20;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCoarse, kNotificationLocationServicesStatus, %{public}d",  &v26,  8);
      __int16 v22 = (uint8_t *)v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLCli entManager_Type::NotificationData &)",  "%s\n",  v21);
      if (v22 != buf) {
        free(v22);
      }
    }

    if (*(_BYTE *)(a1 + 152))
    {
      sub_1009678F4(a1, v9);
      return;
    }
  }

  sub_1009676A4(a1);
  if (!*(_BYTE *)(a1 + 129)) {
    *(_BYTE *)(a1 + 240) = 1;
  }
}

id *sub_1009676A4(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)__int128 buf = 136446210;
    int v12 = "clearLocationInformationCoarseCell";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "TileCoarse, %{public}s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v9 = 136446210;
    double v10 = "clearLocationInformationCoarseCell";
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileCoarse, %{public}s",  &v9,  12);
    int v6 = (uint8_t *)v5;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLCoarseCellTilesManager::clearLocationInformation()", "%s\n", v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  uint64_t v3 = *(void *)(a1 + 120);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 24LL))(v3);
  }
  sub_100CF3320(*(void *)(a1 + 176));
  sub_100BD8374(a1 + 192);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  float32x2_t v7[2] = sub_10096D00C;
  v7[3] = &unk_101838B18;
  v7[4] = a1;
  sub_100968338(a1, (uint64_t)"clearLocationInformationCoarseCell", (uint64_t)v7);
  return sub_1001BA1BC(v8);
}

void sub_1009678D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1009678F4(uint64_t a1, double a2)
{
  if (*(_BYTE *)(a1 + 129) && *(_BYTE *)(a1 + 144))
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    _DWORD v10[2] = sub_10096A26C;
    v10[3] = &unk_101840280;
    v10[4] = a1;
    *(double *)&v10[5] = a2;
    sub_100968338(a1, (uint64_t)"predownloadTiles (Coarse)", (uint64_t)v10);
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    uint64_t v3 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      int v4 = *(unsigned __int8 *)(a1 + 129);
      int v5 = *(unsigned __int8 *)(a1 + 144);
      *(_DWORD *)__int128 buf = 67240448;
      int v15 = v4;
      __int16 v16 = 1026;
      int v17 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "TileCoarse, skip predownload, fIndexedAvailableFiles, %{public}d, fIsActive, %{public}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      int v6 = *(unsigned __int8 *)(a1 + 129);
      int v7 = *(unsigned __int8 *)(a1 + 144);
      v11[0] = 67240448;
      v11[1] = v6;
      __int16 v12 = 1026;
      int v13 = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCoarse, skip predownload, fIndexedAvailableFiles, %{public}d, fIsActive, %{public}d",  v11,  14);
      int v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::predownloadTiles(CFAbsoluteTime)",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

void sub_100967B20(uint64_t a1, uint64_t a2, int *a3, char *a4)
{
  if (*a3 == 5)
  {
    if ((*(unsigned int (**)(void))(**(void **)(a1 + 168) + 24LL))(*(void *)(a1 + 168)))
    {
      double v6 = (*(double (**)(void))(**(void **)(a1 + 168) + 16LL))(*(void *)(a1 + 168));
      *(_BYTE *)(a1 + 153) = *a4;
      sub_100CF41C4(*(void *)(a1 + 176), *a4);
      if (*(_BYTE *)(a1 + 153)) {
        sub_100967D6C(a1, v6);
      }
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v8 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = *a3;
      *(_DWORD *)__int128 buf = 67240192;
      int v15 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "TileCoarse, unexpected, companion, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      int v10 = *a3;
      v13[0] = 67240192;
      v13[1] = v10;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "TileCoarse, unexpected, companion, %{public}d",  v13,  8);
      __int16 v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, cons t CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }
  }

BOOL sub_100967D6C(uint64_t a1, double a2)
{
  if (*(_BYTE *)(a1 + 152) && sub_100CF0BCC(*(void *)(a1 + 176)))
  {
    LODWORD(v34) = 13;
    sub_1008ACE9C((uint64_t)&buf, &v34);
    uint64_t v4 = *(void *)(a1 + 176);
    uint64_t v5 = *(void *)(a1 + 120);
    int v16 = 0xFFFF;
    uint64_t v17 = 0LL;
    uint64_t v18 = 0LL;
    __int128 v19 = xmmword_1012E0070;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v20 = _Q0;
    __int128 v21 = _Q0;
    __int128 v22 = _Q0;
    int v23 = 0;
    uint64_t v26 = 0LL;
    unint64_t v24 = 0xBFF0000000000000LL;
    uint64_t v25 = 0LL;
    int v27 = 0;
    unint64_t v28 = 0xBFF0000000000000LL;
    int v29 = 0x7FFFFFFF;
    uint64_t v31 = 0LL;
    uint64_t v30 = 0LL;
    char v33 = 0;
    uint64_t v32 = 0LL;
    sub_100CF0F28(v4, v5, (uint64_t)&v16, (uint64_t)&v34, a2);
    __int128 buf = v34;
    uint64_t v39 = v35;
    if (SHIBYTE(v41) < 0) {
      operator delete((void *)v40);
    }
    __int128 v40 = v36;
    uint64_t v41 = v37;
    BOOL v11 = sub_1008AD1E0((unsigned int *)&buf);
    if (SHIBYTE(v41) < 0) {
      operator delete((void *)v40);
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    __int16 v12 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "@TileDl, coarse, failed criteria",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      LOWORD(v34) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "@TileDl, coarse, failed criteria",  &v34,  2);
      int v15 = (char *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::checkDownloadSchedule(CFAbsoluteTime)",  "%s\n",  v14);
    }

    return 0LL;
  }

  return v11;
}

void sub_100968000( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, int a42, __int16 a43, char a44, char a45)
{
  if (a45 < 0) {
    operator delete(*(void **)(v45 + 72));
  }
  _Unwind_Resume(exception_object);
}

id sub_100968028(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "TileCoarse, Cleanup", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    v9[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCoarse, Cleanup",  v9,  2);
    int v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLCoarseCellTilesManager::onCleanupAgedTiles()", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  double v3 = (*(double (**)(void))(**(void **)(a1 + 168) + 16LL))(*(void *)(a1 + 168));
  uint64_t v4 = *(void **)(a1 + 40);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  id v8[2] = sub_100968208;
  v8[3] = &unk_101830538;
  _DWORD v8[4] = a1;
  *(double *)&void v8[5] = v3;
  return [v4 async:v8];
}

void sub_100968208(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_1009682B8(v1, *(double *)(a1 + 40));
  uint64_t v2 = _NSConcreteStackBlock;
  uint64_t v3 = 3221225472LL;
  uint64_t v4 = sub_10096E2F8;
  uint64_t v5 = &unk_101838B18;
  uint64_t v6 = v1;
  sub_100968338(v1, (uint64_t)"updateTileRelevancy", (uint64_t)&v2);
  uint64_t v2 = _NSConcreteStackBlock;
  uint64_t v3 = 3221225472LL;
  uint64_t v4 = sub_10096BA00;
  uint64_t v5 = &unk_101838B18;
  uint64_t v6 = v1;
  sub_100968338(v1, (uint64_t)"refreshTilesDataIfNeeded", (uint64_t)&v2);
}

uint64_t *sub_1009682B8(uint64_t a1, double a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_10096D154;
  v5[3] = &unk_101840280;
  v5[4] = a1;
  *(double *)&v5[5] = a2;
  sub_100968338(a1, (uint64_t)"deleteAgedTiles", (uint64_t)v5);
  return sub_100CF2788(*(void *)(a1 + 176), a2);
}

void sub_100968338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v16 = -[CLOSTransaction initWithDescription:]( objc_alloc(&OBJC_CLASS___CLOSTransaction),  "initWithDescription:",  "CLCoarseCellTilesManager::traverseAllTilesSets");
  unsigned int v6 = 0;
  int v7 = (void *)(a1 + 216);
  while (v6 - 6 < 3 || v6 == 12)
  {
    uint64_t v9 = sub_100DD9288(v6, v7);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    int v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = v9 + 8;
      *(_DWORD *)__int128 buf = 136315394;
      uint64_t v22 = a2;
      __int16 v23 = 2080;
      uint64_t v24 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "TILE: performing, sAction, %s, tilesSet, %s",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018628C8);
      }
      uint64_t v12 = v9 + 8;
      int v17 = 136315394;
      uint64_t v18 = a2;
      __int16 v19 = 2080;
      uint64_t v20 = v12;
      LODWORD(v15) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: performing, sAction, %s, tilesSet, %s",  (const char *)&v17,  v15);
      int v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::traverseAllTilesSets(const char *, CLTileManagerTraverseTilesSetBlock)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, v9);
LABEL_16:
    ++v6;
  }

  if (v6 != 13) {
    goto LABEL_16;
  }
}

BOOL sub_1009685B0(uint64_t a1, uint64_t a2)
{
  return sub_1009685C0(*(void *)(a1 + 32), a2, *(double *)(a1 + 40));
}

BOOL sub_1009685C0(uint64_t a1, uint64_t a2, double a3)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  uint64_t v5 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    std::string::size_type v6 = *(void *)(a2 + 32);
    std::string::size_type v7 = a2 + 8;
    LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v6;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "TileCoarse, indexTiles, rootDirectory, %{public}s, name, %{public}s",  (uint8_t *)&buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    uint64_t v74 = *(void *)(a2 + 32);
    __darwin_ino64_t v75 = a2 + 8;
    v97.st_dev = 136446466;
    *(void *)&v97.st_mode = v74;
    WORD2(v97.st_ino) = 2082;
    *(__darwin_ino64_t *)((char *)&v97.st_ino + 6) = v75;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCoarse, indexTiles, rootDirectory, %{public}s, name, %{public}s",  &v97,  22);
    __int128 v77 = (std::string *)v76;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v76);
    if (v77 != &buf) {
      free(v77);
    }
  }

  else {
    int v8 = *(const char **)(a2 + 32);
  }
  uint64_t v9 = opendir(v8);
  sub_1009695A8(a1, 0, *(_DWORD *)(a2 + 4));
  if (!v9)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    BOOL v72 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v8;
      _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_ERROR,  "TileCoarse, indexTiles, can't open dir, %{public}s, #CloneMe",  (uint8_t *)&buf,  0xCu);
    }

    if (!sub_1002921D0(115, 0)) {
      return v9 != 0LL;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    v97.st_dev = 136446210;
    *(void *)&v97.st_mode = v8;
    LODWORD(v79) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "TileCoarse, indexTiles, can't open dir, %{public}s, #CloneMe",  &v97,  v79);
    __int16 v71 = (std::string *)v78;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCoarseCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v78);
    if (v71 == &buf) {
      return v9 != 0LL;
    }
LABEL_149:
    free(v71);
    return v9 != 0LL;
  }

  int v10 = readdir(v9);
  if (v10)
  {
    int v11 = 0;
    uint64_t v80 = a2 + 184;
    while (1)
    {
      sub_100104050(__dst, v10->d_name, v10->d_namlen);
      else {
        size_t v12 = *(void *)(a2 + 40);
      }
      sub_1000392EC((uint64_t)&buf, v12 + 1);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::string buf = &buf;
      }
      else {
        p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
      }
      if (v12)
      {
        else {
          int v14 = *(const void **)(a2 + 32);
        }
        memmove(p_buf, v14, v12);
      }

      *(_WORD *)((char *)&p_buf->__r_.__value_.__l.__data_ + v12) = 47;
      if ((v85 & 0x80u) == 0) {
        int v15 = __dst;
      }
      else {
        int v15 = (void **)__dst[0];
      }
      if ((v85 & 0x80u) == 0) {
        std::string::size_type v16 = v85;
      }
      else {
        std::string::size_type v16 = (std::string::size_type)__dst[1];
      }
      int v17 = std::string::append(&buf, (const std::string::value_type *)v15, v16);
      __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
      int64_t cap = v17->__r_.__value_.__l.__cap_;
      *(_OWORD *)std::string __p = v18;
      v17->__r_.__value_.__l.__size_ = 0LL;
      v17->__r_.__value_.__l.__cap_ = 0LL;
      v17->__r_.__value_.__r.__words[0] = 0LL;
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      __int16 v19 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        uint64_t v20 = __p;
        if (cap < 0) {
          uint64_t v20 = (void **)__p[0];
        }
        int d_type = v10->d_type;
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v20;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
        *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = d_type;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "TileCoarse, indexTiles, absoluteFilename, '%{public}s', d_type, %{public}d",  (uint8_t *)&buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        uint64_t v42 = __p;
        if (cap < 0) {
          uint64_t v42 = (void **)__p[0];
        }
        int v43 = v10->d_type;
        v97.st_dev = 136446466;
        *(void *)&v97.st_mode = v42;
        WORD2(v97.st_ino) = 1026;
        *(_DWORD *)((char *)&v97.st_ino + 6) = v43;
        LODWORD(v79) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCoarse, indexTiles, absoluteFilename, '%{public}s', d_type, %{public}d",  &v97,  v79);
        uint64_t v45 = (std::string *)v44;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v44);
        if (v45 != &buf) {
          free(v45);
        }
      }

      if (v10->d_type != 8) {
        goto LABEL_77;
      }
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      ++v11;
      uint64_t v22 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        __int16 v23 = __p;
        if (cap < 0) {
          __int16 v23 = (void **)__p[0];
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v23;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
        *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "TileCoarse, convert to class C, first unlock, %{public}s, files, %{public}d",  (uint8_t *)&buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        uint64_t v46 = __p;
        if (cap < 0) {
          uint64_t v46 = (void **)__p[0];
        }
        v97.st_dev = 136446466;
        *(void *)&v97.st_mode = v46;
        WORD2(v97.st_ino) = 1026;
        *(_DWORD *)((char *)&v97.st_ino + 6) = v11;
        LODWORD(v79) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCoarse, convert to class C, first unlock, %{public}s, files, %{public}d",  &v97,  v79);
        int v48 = (std::string *)v47;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v47);
        if (v48 != &buf) {
          free(v48);
        }
      }

      if (cap >= 0) {
        uint64_t v24 = __p;
      }
      else {
        uint64_t v24 = (void **)__p[0];
      }
      sub_100C148A8((const char *)v24);
      if (cap >= 0) {
        uint64_t v25 = __p;
      }
      else {
        uint64_t v25 = (void **)__p[0];
      }
      int v26 = stat((const char *)v25, &v97);
      if (!v26)
      {
        if (sub_100969C90( a1,  *(_DWORD *)(a2 + 4),  (char *)(a2 + 32),  (std::string::value_type *)__dst,  a3))
        {
          uint64_t v35 = v34;
          *(_OWORD *)uint64_t v94 = *(_OWORD *)(v34 + 48);
          *(void *)&v94[16] = *(void *)(v34 + 64);
          if (*(char *)(v34 + 95) < 0)
          {
            sub_1010DD48C(&v95, *(void **)(v34 + 72), *(void *)(v34 + 80));
          }

          else
          {
            __int128 v95 = *(_OWORD *)(v34 + 72);
            uint64_t v96 = *(void *)(v34 + 88);
          }

          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_1018628A8);
          }
          __int128 v36 = (unsigned int *)(v35 + 48);
          uint64_t v37 = (os_log_s *)qword_101934858;
          if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v38 = sub_100DD8CC8(*v36);
            double v39 = sub_1008ADB4C((uint64_t)v94);
            double v40 = sub_1008ADB70((uint64_t)v94);
            uint64_t v41 = sub_100019240(v80);
            LODWORD(buf.__r_.__value_.__l.__data_) = 136446979;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v38;
            WORD2(buf.__r_.__value_.__r.__words[1]) = 2049;
            *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v39;
            HIWORD(buf.__r_.__value_.__r.__words[2]) = 2049;
            double v99 = v40;
            __int16 v100 = 2050;
            uint64_t v101 = v41;
            _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, add, llsw, %{private}.2lf, %{private}.2lf, index, size, %{public}lu",  (uint8_t *)&buf,  0x2Au);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(&buf, 0x65CuLL);
            if (qword_101934850 != -1) {
              dispatch_once(&qword_101934850, &stru_1018628A8);
            }
            uint64_t v51 = qword_101934858;
            __int16 v52 = sub_100DD8CC8(*v36);
            double v53 = sub_1008ADB4C((uint64_t)v94);
            double v54 = sub_1008ADB70((uint64_t)v94);
            uint64_t v55 = sub_100019240(v80);
            int v86 = 136446979;
            uint64_t v87 = v52;
            __int16 v88 = 2049;
            double v89 = v53;
            __int16 v90 = 2049;
            double v91 = v54;
            __int16 v92 = 2050;
            uint64_t v93 = v55;
            LODWORD(v79) = 42;
            _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v51,  0LL,  "@TileList, %{public}s, add, llsw, %{private}.2lf, %{private}.2lf, index, size, %{public}lu",  &v86,  v79);
            uint64_t v57 = (std::string *)v56;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v56);
            if (v57 != &buf) {
              free(v57);
            }
          }

          if (SHIBYTE(v96) < 0) {
            operator delete((void *)v95);
          }
        }

        goto LABEL_77;
      }

      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      int v27 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        unint64_t v28 = __dst;
        if ((v85 & 0x80u) != 0) {
          unint64_t v28 = (void **)__dst[0];
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446466;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v28;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
        *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v26;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "TileCoarse, indexTiles, failed to stat file, %{public}s, ret, %{public}d, #CloneMe",  (uint8_t *)&buf,  0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        int v29 = __dst;
        if ((v85 & 0x80u) != 0) {
          int v29 = (void **)__dst[0];
        }
        *(_DWORD *)uint64_t v94 = 136446466;
        *(void *)&v94[4] = v29;
        *(_WORD *)&v94[12] = 1026;
        *(_DWORD *)&v94[14] = v26;
        LODWORD(v79) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "TileCoarse, indexTiles, failed to stat file, %{public}s, ret, %{public}d, #CloneMe",  v94,  v79);
        uint64_t v31 = (std::string *)v30;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCoarseCellTilesManager::indexTiles(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v30);
LABEL_111:
        if (v31 != &buf) {
          free(v31);
        }
      }

void sub_100969518( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *a21, uint64_t a22, int a23, __int16 a24, char a25, char a26, void *a27, uint64_t a28, int a29, __int16 a30, char a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, void *__p, uint64_t a43, int a44, __int16 a45, char a46, char a47)
{
  if (a47 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_1009695A8(uint64_t a1, int a2, unsigned int a3)
{
  BOOL v3 = a3 - 6 < 3 || a3 == 12;
  if (v3)
  {
    v51[0] = _NSConcreteStackBlock;
    v51[1] = 3221225472LL;
    v51[2] = sub_10096D01C;
    v51[3] = &unk_101862750;
    unsigned int v52 = a3;
    v53[0] = mach_absolute_time();
    v53[1] = (uint64_t)v51;
    uint64_t v50 = sub_100DD9288(a3, (void *)(a1 + 216));
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    std::string::size_type v7 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(v50 + 8);
      int v9 = *(char *)(v50 + 31);
      uint64_t v10 = sub_100019240(v50 + 184);
      if (v9 >= 0) {
        uint64_t v11 = v50 + 8;
      }
      else {
        uint64_t v11 = v8;
      }
      *(_DWORD *)std::string buf = 136446466;
      uint64_t v63 = (const char *)v11;
      __int16 v64 = 2050;
      double v65 = *(double *)&v10;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "TileCoarse, %{public}s, removeAllTiles, size, %{public}lu",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      uint64_t v35 = qword_101934858;
      uint64_t v36 = *(void *)(v50 + 8);
      int v37 = *(char *)(v50 + 31);
      uint64_t v38 = sub_100019240(v50 + 184);
      if (v37 >= 0) {
        uint64_t v39 = v50 + 8;
      }
      else {
        uint64_t v39 = v36;
      }
      int v54 = 136446466;
      uint64_t v55 = (const char *)v39;
      __int16 v56 = 2050;
      double v57 = *(double *)&v38;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v35,  1LL,  "TileCoarse, %{public}s, removeAllTiles, size, %{public}lu",  &v54,  22);
      uint64_t v41 = (uint8_t *)v40;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::removeAllTiles(BOOL, CLTilesManager_Type::TileType)",  "%s\n",  v40);
      if (v41 != buf) {
        free(v41);
      }
    }

    uint64_t v12 = v50 + 184;
    int v13 = (void *)sub_1005B46E8(v50 + 184);
    if (v13 != (void *)sub_100056FA8(v50 + 184))
    {
      do
      {
        if (a2)
        {
          uint64_t v14 = v13[10];
          sub_100C0FD9C(v14);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_1018628A8);
          }
          int v15 = (os_log_s *)qword_101934858;
          if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
          {
            std::string::size_type v16 = sub_100DD8CC8(*(_DWORD *)(v14 + 48));
            double v17 = sub_1008ADB4C(v14 + 48);
            double v18 = sub_1008ADB70(v14 + 48);
            uint64_t v19 = sub_100019240(v12);
            *(_DWORD *)std::string buf = 136446979;
            uint64_t v63 = v16;
            __int16 v64 = 2049;
            double v65 = v17;
            __int16 v66 = 2049;
            double v67 = v18;
            __int16 v68 = 2050;
            uint64_t v69 = v19;
            _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, all, size, %{public}lu",  buf,  0x2Au);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934850 != -1) {
              dispatch_once(&qword_101934850, &stru_1018628A8);
            }
            uint64_t v22 = qword_101934858;
            unsigned int v24 = *(_DWORD *)(v14 + 48);
            uint64_t v23 = v14 + 48;
            uint64_t v25 = sub_100DD8CC8(v24);
            double v26 = sub_1008ADB4C(v23);
            double v27 = sub_1008ADB70(v23);
            uint64_t v28 = sub_100019240(v12);
            int v54 = 136446979;
            uint64_t v55 = v25;
            __int16 v56 = 2049;
            double v57 = v26;
            __int16 v58 = 2049;
            double v59 = v27;
            __int16 v60 = 2050;
            uint64_t v61 = v28;
            LODWORD(v49) = 42;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  0LL,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, all, size, %{public}lu",  &v54,  v49);
            uint64_t v30 = (uint8_t *)v29;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::removeAllTiles(BOOL, CLTilesManager_Type::TileType)",  "%s\n",  v29);
            if (v30 != buf) {
              free(v30);
            }
          }
        }

        uint64_t v20 = (void *)v13[1];
        if (v20)
        {
          do
          {
            __int128 v21 = v20;
            uint64_t v20 = (void *)*v20;
          }

          while (v20);
        }

        else
        {
          do
          {
            __int128 v21 = (void *)v13[2];
            BOOL v3 = *v21 == (void)v13;
            int v13 = v21;
          }

          while (!v3);
        }

        int v13 = v21;
      }

      while (v21 != (void *)sub_100056FA8(v12));
    }

    sub_100603210(v12);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    uint64_t v31 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
    {
      else {
        uint64_t v32 = *(void *)(v50 + 8);
      }
      uint64_t v33 = sub_100019240(v12);
      uint64_t v34 = sub_100603208(v12);
      *(_DWORD *)std::string buf = 136446722;
      uint64_t v63 = (const char *)v32;
      __int16 v64 = 2050;
      double v65 = *(double *)&v33;
      __int16 v66 = 2050;
      double v67 = *(double *)&v34;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_INFO,  "TileCoarse, removeAllTiles, end, name, %{public}s, size, %{public}lu, unprot size, %{public}lu",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      uint64_t v42 = qword_101934858;
      else {
        uint64_t v43 = *(void *)(v50 + 8);
      }
      uint64_t v44 = sub_100019240(v12);
      uint64_t v45 = sub_100603208(v12);
      int v54 = 136446722;
      uint64_t v55 = (const char *)v43;
      __int16 v56 = 2050;
      double v57 = *(double *)&v44;
      __int16 v58 = 2050;
      double v59 = *(double *)&v45;
      LODWORD(v49) = 32;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v42,  1LL,  "TileCoarse, removeAllTiles, end, name, %{public}s, size, %{public}lu, unprot size, %{public}lu",  &v54,  v49);
      __int16 v47 = (uint8_t *)v46;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::removeAllTiles(BOOL, CLTilesManager_Type::TileType)",  "%s\n",  v46);
      if (v47 != buf) {
        free(v47);
      }
    }

    return sub_1011F6BE4(v53);
  }

  else
  {
    uint64_t result = (uint64_t *)sub_1012549E4();
    __break(1u);
  }

  return result;
}

void sub_100969C4C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_100969C90(uint64_t a1, unsigned int a2, char *a3, std::string::value_type *a4, double a5)
{
  if (a2 - 6 >= 3 && a2 != 12)
  {
    sub_101254B4C();
    __break(1u);
    goto LABEL_54;
  }

  std::string::size_type v6 = a4;
  std::string::size_type v7 = a3;
  unsigned int v5 = a2;
  uint64_t v12 = sub_100DD9288(a2, (void *)(a1 + 216));
  sub_100DD9668(v5, a1 + 192, &v45);
  if (v7[23] >= 0) {
    int v13 = v7;
  }
  else {
    int v13 = *(char **)v7;
  }
  if (v6[23] >= 0) {
    uint64_t v14 = v6;
  }
  else {
    uint64_t v14 = *(std::string::value_type **)v6;
  }
  if ((sub_100C124C8(v45, v13, v14, v5, 1, a5) & 1) == 0)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    std::string::size_type v16 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      double v17 = sub_100DD8CC8(v5);
      if (v7[23] >= 0) {
        double v18 = v7;
      }
      else {
        double v18 = *(char **)v7;
      }
      if (v6[23] >= 0) {
        uint64_t v19 = v6;
      }
      else {
        uint64_t v19 = *(std::string::value_type **)v6;
      }
      *(_DWORD *)std::string buf = 136446722;
      __int16 v58 = v17;
      __int16 v59 = 2082;
      double v60 = *(double *)&v18;
      __int16 v61 = 2082;
      double v62 = *(double *)&v19;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, readerror, dir, %{public}s, file, %{public}s, #CloneMe",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_26;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 == -1)
    {
LABEL_42:
      uint64_t v32 = p_vtable[267];
      uint64_t v33 = sub_100DD8CC8(v5);
      if (v7[23] >= 0) {
        uint64_t v34 = v7;
      }
      else {
        uint64_t v34 = *(char **)v7;
      }
      if (v6[23] >= 0) {
        uint64_t v35 = v6;
      }
      else {
        uint64_t v35 = *(std::string::value_type **)v6;
      }
      *(_DWORD *)int v54 = 136446722;
      *(void *)&v54[4] = v33;
      *(_WORD *)&v54[12] = 2082;
      *(void *)&v54[14] = v34;
      *(_WORD *)&v54[22] = 2082;
      *(void *)&__int128 __p = v35;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v32,  0LL,  "@TileList, %{public}s, readerror, dir, %{public}s, file, %{public}s, #CloneMe",  v54,  32);
      int v37 = (uint8_t *)v36;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::tuple<BOOL, CLTileFile *> CLCoarseCellTilesManager::createTileFileObject(CLTilesManager_Type::TileType, con st std::string &, const std::string &, CFAbsoluteTime)",  "%s\n",  v36);
      if (v37 != buf) {
        free(v37);
      }
LABEL_26:
      uint64_t v20 = 0LL;
      goto LABEL_38;
    }

void sub_10096A208( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *__p, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_10096A26C(uint64_t a1, uint64_t a2)
{
  return sub_1009643C0(*(void *)(a1 + 32), *(_DWORD *)(a2 + 4), -1LL, 0.0, 0.0, *(double *)(a1 + 40));
}

id *sub_10096A28C(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *(unsigned __int8 *)(a1 + 56);
    *(_DWORD *)std::string buf = 67240192;
    int v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "TileDl, tileDownloadedCallback, success, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v5 = *(unsigned __int8 *)(a1 + 56);
    v8[0] = 67240192;
    v8[1] = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "TileDl, tileDownloadedCallback, success, %{public}d",  v8,  8);
    std::string::size_type v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLCoarseCellTilesManager::tileDownloadCallback(CLFileDownload *, BOOL, void *)_block_invoke",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  return sub_10096A448(*(void *)(a1 + 32), *(void *)(a1 + 40), *(_BYTE *)(a1 + 56));
}

id *sub_10096A448(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  unsigned __int8 v111 = a3;
  sub_100222B94(v110, (uint64_t)"coarseCellTileDownloaded", 0);
  double v5 = (*(double (**)(void))(**(void **)(a1 + 168) + 16LL))(*(void *)(a1 + 168));
  uint64_t v6 = sub_100CF1D84(*(void **)(a1 + 176), a2);
  std::string::size_type v7 = (_DWORD *)v6;
  int v109 = 0;
  if (v6)
  {
    __int128 v105 = *(_OWORD *)(v6 + 48);
    uint64_t v106 = *(void *)(v6 + 64);
    if (*(char *)(v6 + 95) < 0)
    {
      sub_1010DD48C(&v107, *(void **)(v6 + 72), *(void *)(v6 + 80));
    }

    else
    {
      __int128 v107 = *(_OWORD *)(v6 + 72);
      uint64_t v108 = *(void *)(v6 + 88);
    }

    unsigned int v11 = v7[12];
    uint64_t v12 = *(void *)(sub_10096B584((uint64_t)v7) + 96);
    uint64_t v13 = a1 + 192;
    if (v111 || v12 == -1100) {
      sub_100BD8374(v13);
    }
    else {
      sub_100BD83A0(v13, v5);
    }
    uint64_t v14 = sub_100DD9288(v11, (void *)(a1 + 216));
    if (v111 && (_os_feature_enabled_impl("CoreLocation", "TilesService") & 1) == 0) {
      unsigned __int8 v111 = (*(uint64_t (**)(_DWORD *, int *))(*(void *)v7 + 40LL))(v7, &v109);
    }
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v15 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v16 = v11;
      double v17 = sub_100DD8CC8(v11);
      double v18 = sub_1008ADB4C((uint64_t)&v105);
      double v19 = sub_1008ADB70((uint64_t)&v105);
      int v20 = v111;
      uint64_t v21 = *(void *)(sub_10096B584((uint64_t)v7) + 96);
      *(_DWORD *)std::string buf = 136447235;
      *(void *)&uint8_t buf[4] = v17;
      __int16 v121 = 2049;
      *(double *)uint64_t v122 = v18;
      *(_WORD *)&v122[8] = 2049;
      double v123 = v19;
      *(_WORD *)uint64_t v124 = 1026;
      *(_DWORD *)&v124[2] = v20;
      *(_WORD *)&v124[6] = 1026;
      *(_DWORD *)&v124[8] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "@TileReq, %{public}s, downloaded, llsw, %{private}.2lf, %{private}.2lf, success, %{public}d, NSURLErrorCode, %{public}d",  buf,  0x2Cu);
      unsigned int v11 = v16;
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      uint64_t v55 = qword_101934858;
      unsigned int v56 = v11;
      double v57 = sub_100DD8CC8(v11);
      double v58 = sub_1008ADB4C((uint64_t)&v105);
      double v59 = sub_1008ADB70((uint64_t)&v105);
      int v60 = v111;
      uint64_t v61 = *(void *)(sub_10096B584((uint64_t)v7) + 96);
      *(_DWORD *)__int128 __p = 136447235;
      *(void *)&__p[4] = v57;
      __int16 v113 = 2049;
      *(double *)uint64_t v114 = v58;
      *(_WORD *)&v114[8] = 2049;
      double v115 = v59;
      *(_WORD *)BOOL v116 = 1026;
      *(_DWORD *)&v116[2] = v60;
      *(_WORD *)&v116[6] = 1026;
      *(_DWORD *)&v116[8] = v61;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v55,  0LL,  "@TileReq, %{public}s, downloaded, llsw, %{private}.2lf, %{private}.2lf, success, %{public}d, NSURLErrorCode, %{public}d",  __p,  44);
      __int16 v63 = (char *)v62;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v62);
      unsigned int v11 = v56;
      if (v63 != buf) {
        free(v63);
      }
    }

    if (v111)
    {
      int v22 = v109;
      (*(void (**)(uint64_t))(*(void *)(v14 + 232) + 16LL))(v14 + 232);
      *(_DWORD *)(v14 + 276) += v22;
      (*(void (**)(uint64_t))(*(void *)(v14 + 232) + 24LL))(v14 + 232);
      (*(void (**)(uint64_t))(*(void *)(v14 + 232) + 16LL))(v14 + 232);
      ++*(_DWORD *)(v14 + 284);
      (*(void (**)(uint64_t))(*(void *)(v14 + 232) + 24LL))(v14 + 232);
      sub_1010DDBC0(buf, "tileDownloadCompleted");
      sub_100987188(v14 + 232, (uint64_t *)buf, *(_DWORD *)(a1 + 148));
      if ((v122[9] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    uint64_t v23 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v90 = a2;
      uint64_t v92 = v14;
      uint64_t v24 = v12;
      unsigned int v25 = v11;
      double v26 = __p;
      (*(void (**)(_BYTE *__return_ptr, _DWORD *))(*(void *)v7 + 16LL))(__p, v7);
      if (v114[9] < 0) {
        double v26 = *(_BYTE **)__p;
      }
      int v27 = v111;
      uint64_t v28 = *(void *)(sub_10096B584((uint64_t)v7) + 96);
      int v29 = *(_DWORD *)(a1 + 148);
      BOOL v30 = sub_1008AD1E0((unsigned int *)&v105);
      int v31 = *(unsigned __int8 *)(a1 + 128);
      *(_DWORD *)std::string buf = 136382467;
      *(void *)&uint8_t buf[4] = v26;
      __int16 v121 = 1026;
      *(_DWORD *)uint64_t v122 = v27;
      *(_WORD *)&v122[4] = 1026;
      *(_DWORD *)&v122[6] = v28;
      LOWORD(v123) = 1026;
      *(_DWORD *)((char *)&v123 + 2) = v24 == -1100;
      HIWORD(v123) = 1026;
      *(_DWORD *)uint64_t v124 = v29;
      *(_WORD *)&v124[4] = 1026;
      *(_DWORD *)&v124[6] = v30;
      *(_WORD *)&v124[10] = 1026;
      int v125 = v31;
      __int16 v126 = 1026;
      int v127 = v109;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "@TileDl, tileDecompressionCompleted, tile, %{private}s, decompress done, success, %{public}d, NSURLErrorCode, %{ public}d, tileDoesNotExist, %{public}d, reachability, %{public}d, validId, %{public}d, locked, %{public}d, fileSize, %{public}d",  buf,  0x36u);
      if ((v114[9] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      unsigned int v11 = v25;
      uint64_t v12 = v24;
      a2 = v90;
      uint64_t v14 = v92;
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      uint64_t v93 = v12;
      uint64_t v64 = qword_101934858;
      double v65 = v103;
      (*(void (**)(void **__return_ptr, _DWORD *))(*(void *)v7 + 16LL))(v103, v7);
      unsigned int v91 = v11;
      if (v104 < 0) {
        double v65 = (void **)v103[0];
      }
      int v66 = v111;
      uint64_t v67 = *(void *)(sub_10096B584((uint64_t)v7) + 96);
      int v68 = *(_DWORD *)(a1 + 148);
      BOOL v69 = sub_1008AD1E0((unsigned int *)&v105);
      int v70 = *(unsigned __int8 *)(a1 + 128);
      *(_DWORD *)__int128 __p = 136382467;
      *(void *)&__p[4] = v65;
      __int16 v113 = 1026;
      *(_DWORD *)uint64_t v114 = v66;
      *(_WORD *)&v114[4] = 1026;
      *(_DWORD *)&v114[6] = v67;
      LOWORD(v115) = 1026;
      *(_DWORD *)((char *)&v115 + 2) = v93 == -1100;
      HIWORD(v115) = 1026;
      *(_DWORD *)BOOL v116 = v68;
      *(_WORD *)&v116[4] = 1026;
      *(_DWORD *)&v116[6] = v69;
      *(_WORD *)&v116[10] = 1026;
      int v117 = v70;
      __int16 v118 = 1026;
      int v119 = v109;
      LODWORD(v89) = 54;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v64,  2LL,  "@TileDl, tileDecompressionCompleted, tile, %{private}s, decompress done, success, %{public}d, NSURLErrorCode, %{ public}d, tileDoesNotExist, %{public}d, reachability, %{public}d, validId, %{public}d, locked, %{public}d, fileSize, %{public}d",  __p,  v89);
      BOOL v72 = v71;
      if (v104 < 0) {
        operator delete(v103[0]);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v72);
      unsigned int v11 = v91;
      uint64_t v12 = v93;
      if (v72 != buf) {
        free(v72);
      }
    }

    if (!sub_1008AD1E0((unsigned int *)&v105))
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      uint64_t v32 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "@TileError, DecompressionID", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        *(_WORD *)__int128 __p = 0;
        LODWORD(v89) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileError, DecompressionID",  __p,  v89);
        __int16 v88 = (char *)v87;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v87);
        if (v88 != buf) {
          free(v88);
        }
      }
    }

    unsigned __int8 v111 = sub_100C102DC((uint64_t)v7, v111, v12 == -1100, v5);
    (*(void (**)(uint64_t))(*(void *)a2 + 24LL))(a2);
    sub_10096B5D0(a1, v111, v7, v14, v109);
    if (sub_100E575B0())
    {
      sub_1002A5370(buf);
      uint64_t v33 = (char *)(v7 + 2);
      sub_1002ACA84((uint64_t)buf, "gotTile", v33);
      sub_1002AB3FC((uint64_t)buf, "success", &v111);
      sub_1002AB3FC((uint64_t)buf, "protection", (_BYTE *)(a1 + 128));
      sub_100E57614((uint64_t)buf, (uint64_t)"locationd");
      sub_1002A5590(buf);
    }

    if (v111)
    {
      sub_100DD9DDC((uint64_t)v7, v14, (uint64_t)"download");
      uint64_t v34 = *(void *)(a1 + 176);
      __int128 v99 = v105;
      uint64_t v100 = v106;
      if (SHIBYTE(v108) < 0)
      {
        sub_1010DD48C(&v101, (void *)v107, *((unint64_t *)&v107 + 1));
      }

      else
      {
        __int128 v101 = v107;
        uint64_t v102 = v108;
      }

      sub_100CF1E0C(v34, (uint64_t)&v99, v111, v12 == -1100, (uint64_t *)v103, v5);
      if (SHIBYTE(v102) < 0) {
        operator delete((void *)v101);
      }
      if (v103[0])
      {
        int v37 = sub_100603294((uint64_t **)(v14 + 184), (unsigned int *)&v105);
        uint64_t v38 = v103[0];
        v103[0] = 0LL;
        uint64_t v39 = *v37;
        *int v37 = (uint64_t)v38;
        if (v39) {
          (*(void (**)(uint64_t))(*(void *)v39 + 8LL))(v39);
        }
      }

      uint64_t v40 = sub_1006025CC(v14 + 184, (unsigned int *)&v105);
      sub_100DD963C(v40, v5);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      double v41 = v7 + 12;
      uint64_t v42 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v43 = sub_100DD8CC8(*v41);
        double v44 = sub_1008ADB4C((uint64_t)&v105);
        double v45 = sub_1008ADB70((uint64_t)&v105);
        uint64_t v46 = sub_100019240(v14 + 184);
        *(_DWORD *)std::string buf = 136446979;
        *(void *)&uint8_t buf[4] = v43;
        __int16 v121 = 2049;
        *(double *)uint64_t v122 = v44;
        *(_WORD *)&v122[8] = 2049;
        double v123 = v45;
        *(_WORD *)uint64_t v124 = 2050;
        *(void *)&v124[2] = v46;
        _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, add, llsw, %{private}.2lf, %{private}.2lf, download, size, %{public}lu",  buf,  0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        uint64_t v73 = qword_101934858;
        uint64_t v74 = sub_100DD8CC8(*v41);
        double v75 = sub_1008ADB4C((uint64_t)&v105);
        double v76 = sub_1008ADB70((uint64_t)&v105);
        uint64_t v77 = sub_100019240(v14 + 184);
        *(_DWORD *)__int128 __p = 136446979;
        *(void *)&__p[4] = v74;
        __int16 v113 = 2049;
        *(double *)uint64_t v114 = v75;
        *(_WORD *)&v114[8] = 2049;
        double v115 = v76;
        *(_WORD *)BOOL v116 = 2050;
        *(void *)&v116[2] = v77;
        LODWORD(v89) = 42;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v73,  0LL,  "@TileList, %{public}s, add, llsw, %{private}.2lf, %{private}.2lf, download, size, %{public}lu",  __p,  v89);
        uint64_t v79 = (char *)v78;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v78);
        if (v79 != buf) {
          free(v79);
        }
      }

      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      __int16 v47 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
      {
        __int16 v48 = sub_100DD8CC8(v11);
        double v49 = sub_1008ADB4C((uint64_t)&v105);
        double v50 = sub_1008ADB70((uint64_t)&v105);
        uint64_t v51 = sub_100019240(v14 + 184);
        *(_DWORD *)std::string buf = 136446979;
        *(void *)&uint8_t buf[4] = v48;
        __int16 v121 = 2049;
        *(double *)uint64_t v122 = v49;
        *(_WORD *)&v122[8] = 2049;
        double v123 = v50;
        *(_WORD *)uint64_t v124 = 2050;
        *(void *)&v124[2] = v51;
        _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_INFO,  "@TileReq, %{public}s, add, llsw, %{private}.2lf, %{private}.2lf, download, size, %{public}lu",  buf,  0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        uint64_t v80 = qword_101934858;
        __int128 v81 = sub_100DD8CC8(v11);
        double v82 = sub_1008ADB4C((uint64_t)&v105);
        double v83 = sub_1008ADB70((uint64_t)&v105);
        uint64_t v84 = sub_100019240(v14 + 184);
        *(_DWORD *)__int128 __p = 136446979;
        *(void *)&__p[4] = v81;
        __int16 v113 = 2049;
        *(double *)uint64_t v114 = v82;
        *(_WORD *)&v114[8] = 2049;
        double v115 = v83;
        *(_WORD *)BOOL v116 = 2050;
        *(void *)&v116[2] = v84;
        LODWORD(v89) = 42;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v80,  1LL,  "@TileReq, %{public}s, add, llsw, %{private}.2lf, %{private}.2lf, download, size, %{public}lu",  __p,  v89);
        int v86 = (char *)v85;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v85);
        if (v86 != buf) {
          free(v86);
        }
      }

      ++*(_DWORD *)(v14 + 288);
      sub_1009682B8(a1, v5);
      __int16 v52 = v103[0];
      v103[0] = 0LL;
      if (v52) {
        (*(void (**)(void *))(*(void *)v52 + 8LL))(v52);
      }
    }

    else
    {
      uint64_t v35 = *(void *)(a1 + 176);
      __int128 v94 = v105;
      uint64_t v95 = v106;
      if (SHIBYTE(v108) < 0)
      {
        sub_1010DD48C(&v96, (void *)v107, *((unint64_t *)&v107 + 1));
        BOOL v36 = v111 != 0;
      }

      else
      {
        BOOL v36 = 0;
        __int128 v96 = v107;
        uint64_t v97 = v108;
      }

      sub_100CF1E0C(v35, (uint64_t)&v94, v36, v12 == -1100, &v98, v5);
      uint64_t v53 = v98;
      uint64_t v98 = 0LL;
      if (v53) {
        (*(void (**)(uint64_t))(*(void *)v53 + 8LL))(v53);
      }
      if (SHIBYTE(v97) < 0) {
        operator delete((void *)v96);
      }
    }

    if (SHIBYTE(v108) < 0) {
      operator delete((void *)v107);
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    uint64_t v8 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "@TileError, tile not on download list, #CloneMe",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      *(_WORD *)__int128 __p = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "@TileError, tile not on download list, #CloneMe",  __p,  2);
      int v10 = (char *)v9;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLCoarseCellTilesManager::tileDownloadCompleted(CLFileDownload *, BOOL, void *)",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }
  }

  sub_100967D6C(a1, v5);
  return sub_1001BA1BC(v110);
}

void sub_10096B450( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, void *a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, void *__p, uint64_t a37, int a38, __int16 a39, char a40, char a41, uint64_t a42, id a43)
{
  if (a41 < 0) {
    operator delete(__p);
  }
  sub_1001BA1BC(&a43);
  _Unwind_Resume(a1);
}

uint64_t sub_10096B584(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  (*(void (**)(uint64_t))(*(void *)v2 + 16LL))(v2);
  uint64_t v3 = *(void *)(a1 + 104);
  (*(void (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
  return v3;
}

void sub_10096B5D0(uint64_t a1, char a2, _DWORD *a3, uint64_t a4, int a5)
{
  uint64_t v9 = (uint64_t)(a3 + 12);
  int v8 = a3[12];
  memset(&v28, 0, sizeof(v28));
  *(_OWORD *)double v26 = 0u;
  memset(__p, 0, sizeof(__p));
  v24[0] = a2;
  int v25 = v8;
  std::string::operator=((std::string *)v26, (const std::string *)(a4 + 56));
  sub_1008AE164(v9, &buf);
  if (SHIBYTE(__p[3]) < 0) {
    operator delete(__p[1]);
  }
  *(std::string *)&__p[1] = buf;
  sub_100C0FCEC((uint64_t)a3, &buf);
  std::string v28 = buf;
  char v30 = 0;
  int v29 = a5;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  int v10 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(_BYTE *__return_ptr, _DWORD *))(*(void *)a3 + 16LL))(v31, a3);
    unsigned int v11 = v35 >= 0 ? v31 : *(_BYTE **)v31;
    uint64_t v12 = SHIBYTE(__p[0]) >= 0 ? v26 : (void **)v26[0];
    uint64_t v13 = SHIBYTE(__p[3]) >= 0 ? &__p[1] : (void **)__p[1];
    uint64_t v14 = (v28.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &v28 : (std::string *)v28.__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136381955;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v11;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v24[0];
    WORD1(buf.__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(buf.__r_.__value_.__r.__words[2]) = v25;
    __int16 v43 = 2081;
    double v44 = v12;
    __int16 v45 = 2081;
    uint64_t v46 = v13;
    __int16 v47 = 2081;
    __int16 v48 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "@TileDl, kNotificationTileWasDownloaded, tileid, %{private}s, tileHeaderParsed, %{public}d, tileType, %{public}d, serverUrl, %{private}s, serverFilename, %{private}s, absoluteLocalFilename, %{private}s",  (uint8_t *)&buf,  0x36u);
    if (SHIBYTE(v35) < 0) {
      operator delete(*(void **)v31);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    uint64_t v15 = qword_101934858;
    (*(void (**)(void **__return_ptr, _DWORD *))(*(void *)a3 + 16LL))(v22, a3);
    if (v23 >= 0) {
      unsigned int v16 = v22;
    }
    else {
      unsigned int v16 = (void **)v22[0];
    }
    if (SHIBYTE(__p[0]) >= 0) {
      double v17 = v26;
    }
    else {
      double v17 = (void **)v26[0];
    }
    if (SHIBYTE(__p[3]) >= 0) {
      double v18 = &__p[1];
    }
    else {
      double v18 = (void **)__p[1];
    }
    if ((v28.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      double v19 = &v28;
    }
    else {
      double v19 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)int v31 = 136381955;
    *(void *)&v31[4] = v16;
    __int16 v32 = 1026;
    int v33 = v24[0];
    __int16 v34 = 1026;
    int v35 = v25;
    __int16 v36 = 2081;
    int v37 = v17;
    __int16 v38 = 2081;
    uint64_t v39 = v18;
    __int16 v40 = 2081;
    double v41 = v19;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v15,  2LL,  "@TileDl, kNotificationTileWasDownloaded, tileid, %{private}s, tileHeaderParsed, %{public}d, tileType, %{public}d, serverUrl, %{private}s, serverFilename, %{private}s, absoluteLocalFilename, %{private}s",  v31,  54);
    uint64_t v21 = v20;
    if (v23 < 0) {
      operator delete(v22[0]);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::sendNotificationTileWasDownloaded(BOOL, const CLTileFile &, const CLTilesSet &, unsigned int)",  "%s\n",  (const char *)v21);
    if (v21 != &buf) {
      free(v21);
    }
  }

  LODWORD(buf.__r_.__value_.__l.__data_) = 0;
  (*(void (**)(uint64_t, std::string *, _BYTE *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &buf,  v24,  0LL,  0xFFFFFFFFLL,  0LL);
  if (SHIBYTE(__p[3]) < 0) {
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0) {
    operator delete(v26[0]);
  }
}

void sub_10096B9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

id sub_10096BA00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_10096BA58;
  v5[3] = &unk_101830538;
  v5[4] = v2;
  v5[5] = a2;
  return [v3 async:v5];
}

void sub_10096BA58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = (*(double (**)(void))(**(void **)(v2 + 168) + 16LL))(*(void *)(v2 + 168));
  uint64_t v4 = *(void *)(a1 + 40) + 184LL;
  double v5 = (void *)sub_1005B46E8(v4);
  uint64_t v6 = sub_100056FA8(v4);
  if (v5 != (void *)v6)
  {
    std::string::size_type v7 = (void *)v6;
    char v8 = 0;
    do
    {
      char v9 = sub_100CF21F8(*(void *)(v2 + 176), v5[10], v3);
      int v10 = (void *)v5[1];
      if (v10)
      {
        do
        {
          unsigned int v11 = v10;
          int v10 = (void *)*v10;
        }

        while (v10);
      }

      else
      {
        do
        {
          unsigned int v11 = (void *)v5[2];
          BOOL v12 = *v11 == (void)v5;
          double v5 = v11;
        }

        while (!v12);
      }

      v8 |= v9;
      double v5 = v11;
    }

    while (v11 != v7);
    if ((v8 & 1) != 0)
    {
      int v13 = (*(uint64_t (**)(void))(**(void **)(v2 + 168) + 40LL))(*(void *)(v2 + 168));
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      uint64_t v14 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 67240192;
        int v19 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "@TileSched, coarsecell, set, %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        v17[0] = 67240192;
        v17[1] = v13;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileSched, coarsecell, set, %{public}d",  v17,  8);
        unsigned int v16 = (uint8_t *)v15;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::refreshTilesDataIfNeeded()_block_invoke",  "%s\n",  v15);
        if (v16 != buf) {
          free(v16);
        }
      }
    }
  }

uint64_t sub_10096BCB0(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100F59508((uint64_t)a3);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018628C8);
  }
  int v10 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_100F57510(a3, __p);
    unsigned int v11 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
        ? __p
        : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 134218242;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v9;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCellFromTile, searching, sec_key, %016llX, %s",  (uint8_t *)&buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    uint64_t v32 = qword_101934A78;
    sub_100F57510(a3, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v50 = 134218242;
    *(void *)uint64_t v51 = v9;
    *(_WORD *)&v51[8] = 2080;
    *(void *)&v51[10] = p_buf;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v32,  2LL,  "TILE: getLocationByCellFromTile, searching, sec_key, %016llX, %s",  &v50,  22);
    int v35 = v34;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::getLocationByCellFromTile(CLTileFile *, const CLCell &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v35);
    if (v35 != __p) {
      free(v35);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018628C8);
  }
  BOOL v12 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    int v13 = sub_100C14E3C(a2, *(_BYTE *)(a1 + 128));
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(__p, a2);
    uint64_t v14 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
        ? __p
        : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v13;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v14;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCellFromTile, in tile, accessible, %d, %s",  (uint8_t *)&buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    uint64_t v36 = qword_101934A78;
    int v37 = sub_100C14E3C(a2, *(_BYTE *)(a1 + 128));
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a2 + 16LL))(&buf, a2);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v38 = &buf;
    }
    else {
      __int16 v38 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v50 = 67109378;
    *(_DWORD *)uint64_t v51 = v37;
    *(_WORD *)&void v51[4] = 2080;
    *(void *)&v51[6] = v38;
    LODWORD(v45) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v36,  2LL,  "TILE: getLocationByCellFromTile, in tile, accessible, %d, %s",  &v50,  v45);
    __int16 v40 = v39;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::getLocationByCellFromTile(CLTileFile *, const CLCell &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v40);
    if (v40 != __p) {
      free(v40);
    }
  }

  uint64_t v46 = 0LL;
  uint64_t v47 = 0LL;
  __int128 v48 = (unsigned __int16)sub_100F59490((uint64_t)a3);
  unsigned int v15 = a3[2];
  if (v15 <= 7 && ((1 << v15) & 0x87) != 0)
  {
    WORD1(v4_Block_object_dispose((const void *)(v1 - 224), 8) = *(_DWORD *)(sub_1004A932C((uint64_t)a3) + 4);
    uint64_t v16 = sub_1004A932C((uint64_t)a3);
LABEL_23:
    double v17 = (_DWORD *)(v16 + 8);
    goto LABEL_24;
  }

  if (v15 - 3 > 2)
  {
    if (v15 == 10)
    {
      WORD1(v4_Block_object_dispose((const void *)(v1 - 224), 8) = *(_DWORD *)(sub_1004ABD0C((uint64_t)a3) + 4);
      uint64_t v16 = sub_1004ABD0C((uint64_t)a3);
      goto LABEL_23;
    }

    if (v15 == 6)
    {
      WORD1(v4_Block_object_dispose((const void *)(v1 - 224), 8) = *(_DWORD *)(sub_100450CD0((uint64_t)a3) + 4);
      uint64_t v16 = sub_100450CD0((uint64_t)a3);
      goto LABEL_23;
    }

    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    int v29 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sub_100F57510(a3, __p);
      char v30 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
          ? __p
          : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v30;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "TILE: no lac tile for, %s",  (uint8_t *)&buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018628C8);
      }
      uint64_t v41 = qword_101934A78;
      sub_100F57510(a3, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v42 = &buf;
      }
      else {
        uint64_t v42 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v50 = 136315138;
      *(void *)uint64_t v51 = v42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v41,  2LL,  "TILE: no lac tile for, %s",  (const char *)&v50);
      double v44 = v43;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::getLocationByCellFromTile(CLTileFile *, const CLCell &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v44);
      if (v44 != __p) {
        free(v44);
      }
    }

    return 0LL;
  }

  WORD1(v4_Block_object_dispose((const void *)(v1 - 224), 8) = *(_DWORD *)(sub_1004A8578((uint64_t)a3) + 32);
  double v17 = (_DWORD *)(sub_1004A8578((uint64_t)a3) + 36);
LABEL_24:
  DWORD1(v4_Block_object_dispose((const void *)(v1 - 224), 8) = *v17;
  uint64_t v18 = (*(uint64_t (**)(uint64_t, __int128 *, uint64_t *))(*(void *)a2 + 176LL))(a2, &v48, &v46);
  if ((_DWORD)v18)
  {
    unsigned int v20 = (unsigned __int16)v47;
    unsigned int v21 = WORD1(v47);
    LOBYTE(v19) = BYTE4(v47);
    *(double *)(a5 + 2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = (double)v19 * 1000.0;
    sub_100C13C70(a2, v20, v21, (double *)(a5 + 4), (double *)(a5 + 12));
    *(_OWORD *)(a5 + 2_Block_object_dispose((const void *)(v1 - 224), 8) = xmmword_1012EA5D0;
    *(double *)(a5 + 76) = (*(double (**)(void))(**(void **)(a1 + 168) + 16LL))(*(void *)(a1 + 168));
    *(void *)(a5 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
    *(_DWORD *)(a5 + 96) = 7;
    *(void *)(a5 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 0x100000032LL;
    *(_DWORD *)(a5 + 84) = 70;
    if (sub_100C14E3C(a2, *(_BYTE *)(a1 + 128)))
    {
      double v22 = (*(double (**)(void))(**(void **)(a1 + 168) + 16LL))(*(void *)(a1 + 168));
      sub_100DD963C(a2, v22);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018628C8);
  }
  char v23 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    sub_100832C64(a5, __p);
    uint64_t v24 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
        ? __p
        : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v18;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v24;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCellFromTile, isFound, %d, locationd, %s",  (uint8_t *)&buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    uint64_t v25 = qword_101934A78;
    sub_100832C64(a5, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      double v26 = &buf;
    }
    else {
      double v26 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v50 = 67109378;
    *(_DWORD *)uint64_t v51 = v18;
    *(_WORD *)&void v51[4] = 2080;
    *(void *)&v51[6] = v26;
    LODWORD(v45) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v25,  2LL,  "TILE: getLocationByCellFromTile, isFound, %d, locationd, %s",  &v50,  v45);
    std::string v28 = v27;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::getLocationByCellFromTile(CLTileFile *, const CLCell &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v28);
    if (v28 != __p) {
      free(v28);
    }
  }

  return v18;
}

uint64_t sub_10096C5F0(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 96) = 0LL;
  *(void *)(a5 + 104) = 0LL;
  *(_DWORD *)(a5 + 112) = 0;
  *(void *)(a5 + 136) = 0LL;
  *(void *)(a5 + 144) = 0LL;
  *(void *)(a5 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_BYTE *)(a5 + 152) = 0;
  *(_DWORD *)a5 = 0xFFFF;
  *(void *)(a5 + 12) = 0LL;
  *(void *)(a5 + 4) = 0LL;
  *(_OWORD *)(a5 + 2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a5 + 36) = _Q0;
  *(_OWORD *)(a5 + 52) = _Q0;
  *(_OWORD *)(a5 + 6_Block_object_dispose((const void *)(v1 - 224), 8) = _Q0;
  *(_DWORD *)(a5 + 84) = 0;
  *(void *)(a5 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
  *(void *)(a5 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a5 + 124) = 0x7FFFFFFF;
  if (!*(_BYTE *)(a1 + 129))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    unsigned int v21 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      int v22 = *(unsigned __int8 *)(a1 + 128);
      LODWORD(__p[0].__r_.__value_.__l.__data_) = 67109120;
      HIDWORD(__p[0].__r_.__value_.__r.__words[0]) = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, index is not available, can't search tiles (locationd launched when device was locked?) , fDataProtectionEnabled, %d",  (uint8_t *)__p,  8u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    int v23 = *(unsigned __int8 *)(a1 + 128);
    LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v23;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getLocationByCell, index is not available, can't search tiles (locationd launched when device was locked?), fDataProtectionEnabled, %d",  &buf);
    unsigned int v20 = (std::stringbuf::string_type *)v24;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  v24);
    goto LABEL_93;
  }

  unsigned int v13 = a2[2];
  unsigned int v14 = 6;
  if (v13 >= 3 && v13 != 7)
  {
    if (v13 == 9)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018628C8);
      }
      unsigned int v15 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        sub_100F57510(a2, __p);
        uint64_t v16 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
            ? __p
            : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v16;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "TILE: no tiles for, %s",  (uint8_t *)&buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018628C8);
      }
      uint64_t v17 = qword_101934A78;
      sub_100F57510(a2, &buf);
      if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_std::stringbuf::string_type buf = &buf;
      }
      else {
        p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      }
      int v49 = 136315138;
      int v50 = p_buf;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v17,  2LL,  "TILE: no tiles for, %s",  (const char *)&v49);
      unsigned int v20 = v19;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v20);
LABEL_22:
      if (v20 == __p) {
        return 0LL;
      }
      goto LABEL_94;
    }

    if (v13 - 3 > 2)
    {
      if (v13 == 6)
      {
        unsigned int v14 = 8;
      }

      else
      {
        if (v13 != 10)
        {
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_1018628A8);
          }
          int v37 = (os_log_s *)qword_101934858;
          if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
          {
            sub_100F57510(a2, __p);
            __int16 v38 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
                ? __p
                : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
            LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v38;
            _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_ERROR,  "CoarseTile, getLocationByCell, un-supported cell type, %{private}s, #CloneMe",  (uint8_t *)&buf,  0xCu);
          }

          if (!sub_1002921D0(115, 0)) {
            return 0LL;
          }
          bzero(__p, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_1018628A8);
          }
          uint64_t v39 = qword_101934858;
          sub_100F57510(a2, &buf);
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
            __int16 v40 = &buf;
          }
          else {
            __int16 v40 = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
          }
          int v49 = 136380675;
          int v50 = v40;
          _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v39,  16LL,  "CoarseTile, getLocationByCell, un-supported cell type, %{private}s, #CloneMe",  &v49,  12);
          unsigned int v20 = v41;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCoarseCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  (const char *)v20);
          goto LABEL_22;
        }

        unsigned int v14 = 12;
      }
    }

    else
    {
      if (v13 != 3) {
        return 0LL;
      }
      unsigned int v14 = 7;
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018628C8);
  }
  uint64_t v25 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, search for LAC",  (uint8_t *)__p,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getLocationByCell, search for LAC",  &buf,  2);
    __int16 v43 = (std::stringbuf::string_type *)v42;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  v42);
    if (v43 != __p) {
      free(v43);
    }
  }

  uint64_t v26 = sub_100DD9288(v14, (void *)(a1 + 216));
  if (!*(_BYTE *)(a1 + 144))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    __int16 v34 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      std::string::size_type v35 = v26 + 8;
      LODWORD(__p[0].__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 4) = v35;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, LAC tiles for, %s, are not active",  (uint8_t *)__p,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    std::string::size_type v46 = *(void *)(v26 + 8);
    std::string::size_type v45 = v26 + 8;
    std::string::size_type v44 = v46;
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v44;
    _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getLocationByCell, LAC tiles for, %s, are not active",  (const char *)&buf);
    unsigned int v20 = (std::stringbuf::string_type *)v47;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  v47);
LABEL_93:
    if (v20 != __p) {
LABEL_94:
    }
      free(v20);
    return 0LL;
  }

  sub_100F591F4(a2, &buf);
  uint64_t v27 = v26 + 184;
  if (sub_100019240(v27))
  {
    uint64_t v28 = sub_1005B46E8(v27);
    uint64_t v30 = sub_10096BCB0(a1, *(void *)(v28 + 80), a2, v29, a5);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    int v31 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(__p[0].__r_.__value_.__l.__data_) = 67109120;
      HIDWORD(__p[0].__r_.__value_.__r.__words[0]) = v30;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEBUG,  "TILE: getLocationByCell, search for LAC, isFound, %d",  (uint8_t *)__p,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018628C8);
      }
      int v49 = 67109120;
      LODWORD(v5sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v30;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: getLocationByCell, search for LAC, isFound, %d",  &v49);
      int v33 = (std::stringbuf::string_type *)v32;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCoarseCellTilesManager::getLocationByCell(const CLCell &, const CLDaemonLocation &, SearchContext &, CLDaemonLocation &)",  "%s\n",  v32);
      if (v33 != __p) {
        free(v33);
      }
    }
  }

  else
  {
    uint64_t v30 = 0LL;
  }

  return v30;
}

void sub_10096CFE0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_10096D00C(uint64_t a1, uint64_t a2)
{
  return sub_1009695A8(*(void *)(a1 + 32), 1, *(_DWORD *)(a2 + 4));
}

void sub_10096D01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = sub_101171C7C(a3 - a2);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_1018628E8);
  }
  std::string::size_type v7 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    int v8 = *(_DWORD *)(a1 + 32);
    v9[0] = 68290307;
    v9[1] = 0;
    __int16 v10 = 2082;
    unsigned int v11 = "";
    __int16 v12 = 2082;
    unsigned int v13 = "elapsed";
    __int16 v14 = 2050;
    uint64_t v15 = a2;
    __int16 v16 = 2050;
    uint64_t v17 = a3;
    __int16 v18 = 2050;
    double v19 = v6;
    __int16 v20 = 1025;
    int v21 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:CLCoarseCellTilesManager::removeAllTiles, event:%{public, location:escape_only}s, b egin_mach:%{public}llu, end_mach:%{public}llu, elapsed_s:%{public}.09f, type:%{private}d}",  (uint8_t *)v9,  0x40u);
  }

id sub_10096D154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  double v5 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_INFO))
  {
    uint64_t v6 = a2 + 8;
    *(_DWORD *)std::stringbuf::string_type buf = 136446210;
    uint64_t v16 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "TileCoarse, deleteAgedTiles, dispatch, %{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    uint64_t v9 = a2 + 8;
    int v13 = 136446210;
    uint64_t v14 = v9;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  1LL,  "TileCoarse, deleteAgedTiles, dispatch, %{public}s",  &v13,  12);
    unsigned int v11 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::deleteAgedTiles(CFAbsoluteTime)_block_invoke",  "%s\n",  v10);
    if (v11 != buf) {
      free(v11);
    }
  }

  std::string::size_type v7 = *(void **)(v4 + 40);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  _OWORD v12[2] = sub_10096D378;
  v12[3] = &unk_101830558;
  _DWORD v12[4] = v4;
  v12[5] = a2;
  void v12[6] = *(void *)(a1 + 40);
  return [v7 async:v12];
}

unint64_t sub_10096D378(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  double v3 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 40);
    double v5 = (void *)(v4 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    __int16 v18 = v5;
    __int16 v19 = 2050;
    uint64_t v20 = sub_100019240(v4 + 184);
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "TileCoarse, deleteAgedTiles, start, name, %{public}s, size, %{public}lu",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    uint64_t v8 = qword_101934858;
    uint64_t v9 = *(void *)(a1 + 40);
    __int16 v10 = (void *)(v9 + 8);
    int v13 = 136446466;
    uint64_t v14 = v10;
    __int16 v15 = 2050;
    uint64_t v16 = sub_100019240(v9 + 184);
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  0LL,  "TileCoarse, deleteAgedTiles, start, name, %{public}s, size, %{public}lu",  &v13,  22);
    __int16 v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::deleteAgedTiles(CFAbsoluteTime)_block_invoke",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  uint64_t v6 = *(void *)(a1 + 40) + 184LL;
  do
  {
    sub_10096D5A8(v2, *(void *)(a1 + 40), *(double *)(a1 + 48));
    unint64_t result = sub_100019240(v6);
  }

  while (result > 1);
  return result;
}

uint64_t *sub_10096D5A8(uint64_t a1, uint64_t a2, double a3)
{
  v79[0] = _NSConcreteStackBlock;
  v79[1] = 3221225472LL;
  v79[2] = sub_10096E114;
  v79[3] = &unk_101862770;
  *(double *)&v79[4] = a3;
  v80[0] = mach_absolute_time();
  v80[1] = (uint64_t)v79;
  uint64_t v72 = a2;
  double v5 = (uint64_t **)(a2 + 184);
  uint64_t v6 = (void *)sub_1005B46E8(a2 + 184);
  uint64_t v7 = sub_100056FA8(a2 + 184);
  if (v6 == (void *)sub_100056FA8(a2 + 184))
  {
    int v8 = 0;
  }

  else
  {
    int v8 = 0;
    uint64_t v73 = 136447235LL;
    uint64_t v74 = (uint64_t **)(a2 + 184);
    do
    {
      uint64_t v9 = v6;
      __int16 v10 = (void *)v6[1];
      unsigned int v11 = v6;
      if (v10)
      {
        do
        {
          uint64_t v6 = v10;
          __int16 v10 = (void *)*v10;
        }

        while (v10);
      }

      else
      {
        do
        {
          uint64_t v6 = (void *)v11[2];
          BOOL v12 = *v6 == (void)v11;
          unsigned int v11 = v6;
        }

        while (!v12);
      }

      uint64_t v76 = (uint64_t)v9;
      int v13 = (unsigned int *)v9[10];
      double v14 = sub_100C0CC30((uint64_t)v13, a3);
      double v15 = sub_100C0CC24((uint64_t)v13, a3);
      BOOL v16 = v15 >= *(double *)(a1 + 136) || sub_100C15770((uint64_t)v13);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018628C8);
      }
      uint64_t v17 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v18 = *(void *)(a1 + 136);
        BOOL v19 = sub_100C15770((uint64_t)v13);
        (*(void (**)(_BYTE *__return_ptr, unsigned int *))(*(void *)v13 + 16LL))(__p, v13);
        uint64_t v20 = __p;
        if (__p[23] < 0) {
          uint64_t v20 = *(_BYTE **)__p;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 134219010;
        *(double *)unsigned __int8 v85 = v15;
        *(_WORD *)&v85[8] = 2048;
        *(void *)&v85[10] = v18;
        *(_WORD *)&v85[18] = 1024;
        *(_DWORD *)&v85[20] = v19;
        *(_WORD *)&v85[24] = 1024;
        *(_DWORD *)&v85[26] = v16;
        *(_WORD *)int v86 = 2080;
        *(void *)&v86[2] = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "TILE: deleteAgedTiles, tileDataAge, %.1lf, %.1lf, corrupt, %d, isDelete, %d, tile, %s",  buf,  0x2Cu);
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
        double v5 = v74;
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        HIDWORD(v69) = v8;
        int v70 = v7;
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_1018628C8);
        }
        uint64_t v28 = qword_101934A78;
        uint64_t v29 = *(void *)(a1 + 136);
        BOOL v30 = sub_100C15770((uint64_t)v13);
        (*(void (**)(void **__return_ptr, unsigned int *))(*(void *)v13 + 16LL))(v77, v13);
        int v31 = v77;
        if (v78 < 0) {
          int v31 = (void **)v77[0];
        }
        *(_DWORD *)__int128 __p = 134219010;
        *(double *)&__p[4] = v15;
        *(_WORD *)&_BYTE __p[12] = 2048;
        *(void *)&_BYTE __p[14] = v29;
        *(_WORD *)&__p[22] = 1024;
        *(_DWORD *)&_BYTE __p[24] = v30;
        *(_WORD *)&__p[28] = 1024;
        *(_DWORD *)&__p[30] = v16;
        *(_WORD *)double v82 = 2080;
        *(void *)&v82[2] = v31;
        LODWORD(v69) = 44;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v28,  2LL,  "TILE: deleteAgedTiles, tileDataAge, %.1lf, %.1lf, corrupt, %d, isDelete, %d, tile, %s",  COERCE_DOUBLE(__p),  v69,  v70,  v72,  (const char *)v73);
        int v33 = v32;
        if (v78 < 0) {
          operator delete(v77[0]);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::agedTileDeleter(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v33);
        int v8 = HIDWORD(v68);
        uint64_t v7 = v71;
      }

      if (v16)
      {
        sub_100C0FD9C((uint64_t)v13);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_1018628A8);
        }
        int v21 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          int v22 = sub_100DD8CC8(v13[12]);
          double v23 = sub_1008ADB4C((uint64_t)(v13 + 12));
          double v24 = sub_1008ADB70((uint64_t)(v13 + 12));
          BOOL v25 = sub_100C15770((uint64_t)v13);
          uint64_t v26 = sub_100019240((uint64_t)v5);
          *(_DWORD *)std::stringbuf::string_type buf = v73;
          uint64_t v27 = "age";
          if (v25) {
            uint64_t v27 = "corrupt";
          }
          *(void *)unsigned __int8 v85 = v22;
          *(_WORD *)&v85[8] = 2049;
          *(double *)&v85[10] = v23;
          *(_WORD *)&v85[18] = 2049;
          *(double *)&v85[20] = v24;
          *(_WORD *)&v85[28] = 2082;
          *(void *)int v86 = v27;
          *(_WORD *)&v86[8] = 2050;
          uint64_t v87 = v26 - 1;
          _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, %{public}s, size, %{public}lu",  buf,  0x34u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_1018628A8);
          }
          uint64_t v34 = qword_101934858;
          std::string::size_type v35 = sub_100DD8CC8(v13[12]);
          double v36 = sub_1008ADB4C((uint64_t)(v13 + 12));
          double v37 = sub_1008ADB70((uint64_t)(v13 + 12));
          BOOL v38 = sub_100C15770((uint64_t)v13);
          uint64_t v39 = sub_100019240((uint64_t)v5);
          *(_DWORD *)__int128 __p = v73;
          __int16 v40 = "age";
          if (v38) {
            __int16 v40 = "corrupt";
          }
          *(void *)&__p[4] = v35;
          *(_WORD *)&_BYTE __p[12] = 2049;
          *(double *)&_BYTE __p[14] = v36;
          *(_WORD *)&__p[22] = 2049;
          *(double *)&_BYTE __p[24] = v37;
          *(_WORD *)&__p[32] = 2082;
          *(void *)double v82 = v40;
          *(_WORD *)&v82[8] = 2050;
          uint64_t v83 = v39 - 1;
          LODWORD(v6_Block_object_dispose((const void *)(v1 - 224), 8) = 52;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v34,  0LL,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, %{public}s, size, %{public}lu",  __p,  v68);
          uint64_t v42 = (uint8_t *)v41;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::agedTileDeleter(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v41);
          if (v42 != buf) {
            free(v42);
          }
        }

        sub_100602810(v5, v76);
        ++v8;
      }

      else if (v7 == sub_100056FA8((uint64_t)v5))
      {
        uint64_t v7 = v76;
      }

      else if (v7 != sub_100056FA8((uint64_t)v5) && fabs(v14) >= fabs(sub_100C0CC30(*(void *)(v7 + 80), a3)))
      {
        uint64_t v7 = v76;
      }
    }

    while (v6 != (void *)sub_100056FA8((uint64_t)v5));
  }

  if (v7 != sub_100056FA8((uint64_t)v5) && (unint64_t)sub_100019240((uint64_t)v5) >= 2)
  {
    uint64_t v43 = *(void *)(v7 + 80);
    if (sub_100C0CCC8(v43))
    {
      sub_100C0FD9C(v43);
      ++v8;
    }

    int v44 = v8;
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    std::string::size_type v45 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      std::string::size_type v46 = sub_100DD8CC8(*(_DWORD *)(v43 + 48));
      double v47 = sub_1008ADB4C(v43 + 48);
      double v48 = sub_1008ADB70(v43 + 48);
      uint64_t v49 = sub_100019240((uint64_t)v5);
      *(_DWORD *)std::stringbuf::string_type buf = 136446979;
      *(void *)unsigned __int8 v85 = v46;
      *(_WORD *)&v85[8] = 2049;
      *(double *)&v85[10] = v47;
      *(_WORD *)&v85[18] = 2049;
      *(double *)&v85[20] = v48;
      *(_WORD *)&v85[28] = 2050;
      *(void *)int v86 = v49 - 1;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, limits, size, %{public}lu",  buf,  0x2Au);
    }

    int v8 = v44;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      uint64_t v59 = qword_101934858;
      unsigned int v61 = *(_DWORD *)(v43 + 48);
      uint64_t v60 = v43 + 48;
      double v62 = sub_100DD8CC8(v61);
      double v63 = sub_1008ADB4C(v60);
      double v64 = sub_1008ADB70(v60);
      uint64_t v65 = sub_100019240((uint64_t)v5);
      *(_DWORD *)__int128 __p = 136446979;
      *(void *)&__p[4] = v62;
      *(_WORD *)&_BYTE __p[12] = 2049;
      *(double *)&_BYTE __p[14] = v63;
      *(_WORD *)&__p[22] = 2049;
      *(double *)&_BYTE __p[24] = v64;
      *(_WORD *)&__p[32] = 2050;
      *(void *)double v82 = v65 - 1;
      LODWORD(v6_Block_object_dispose((const void *)(v1 - 224), 8) = 42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v59,  0LL,  "@TileList, %{public}s, delete, llsw, %{private}.2lf, %{private}.2lf, limits, size, %{public}lu",  __p,  v68);
      uint64_t v67 = (uint8_t *)v66;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::agedTileDeleter(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v66);
      int v8 = v44;
      if (v67 != buf) {
        free(v67);
      }
    }

    sub_100602810(v5, v7);
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  int v50 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v51 = sub_100019240((uint64_t)v5);
    uint64_t v52 = v72 + 8;
    *(_DWORD *)std::stringbuf::string_type buf = 67240707;
    *(_DWORD *)unsigned __int8 v85 = v8;
    *(_WORD *)&v85[4] = 2050;
    *(void *)&v85[6] = v51;
    *(_WORD *)&v85[14] = 2081;
    *(void *)&v85[16] = v52;
    _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEFAULT,  "TileCoarse, deleteAgedTiles, end, numOfDeletedTiles, %{public}u, remain, %{public}lu, name, %{private}s",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    uint64_t v54 = qword_101934858;
    uint64_t v55 = sub_100019240((uint64_t)v5);
    uint64_t v56 = *(void *)(v72 + 8);
    *(_DWORD *)__int128 __p = 67240707;
    *(_DWORD *)&__p[4] = v8;
    *(_WORD *)&__p[8] = 2050;
    *(void *)&__p[10] = v55;
    *(_WORD *)&_BYTE __p[18] = 2081;
    *(void *)&__p[20] = v56;
    LODWORD(v6_Block_object_dispose((const void *)(v1 - 224), 8) = 28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v54,  0LL,  "TileCoarse, deleteAgedTiles, end, numOfDeletedTiles, %{public}u, remain, %{public}lu, name, %{private}s",  __p,  v68);
    double v58 = (uint8_t *)v57;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::agedTileDeleter(CLTilesSet &, CFAbsoluteTime)",  "%s\n",  v57);
    if (v58 != buf) {
      free(v58);
    }
  }

  return sub_1011F6BE4(v80);
}

void sub_10096E0B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29)
{
}

void sub_10096E114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = sub_101171C7C(a3 - a2);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_1018628E8);
  }
  uint64_t v7 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    v9[0] = 68290306;
    v9[1] = 0;
    __int16 v10 = 2082;
    unsigned int v11 = "";
    __int16 v12 = 2082;
    int v13 = "elapsed";
    __int16 v14 = 2050;
    uint64_t v15 = a2;
    __int16 v16 = 2050;
    uint64_t v17 = a3;
    __int16 v18 = 2050;
    double v19 = v6;
    __int16 v20 = 2050;
    uint64_t v21 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:CLCoarseCellTilesManager::agedTileDeleter, event:%{public, location:escape_only}s,  begin_mach:%{public}llu, end_mach:%{public}llu, elapsed_s:%{public}.09f, now_s:%{public}.09f}",  (uint8_t *)v9,  0x44u);
  }

void sub_10096E248(id a1)
{
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  std::string::assign( (std::string *)&qword_101999928,  -[NSString UTF8String]( -[NSString stringByAppendingPathComponent:]( +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", p_p),  "stringByAppendingPathComponent:",  @"tiles_cell"),  "UTF8String"));
}

void sub_10096E2C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10096E2E4(id a1)
{
}

void sub_10096E2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(_BYTE *)(v3 + 144))
  {
    uint64_t v4 = (int *)(a2 + 4);
    sub_1008ACE9C((uint64_t)&v29, (_DWORD *)(a2 + 4));
    sub_100C11F48((uint64_t)&v29, -1LL, 0.0, 0.0, *(double *)(a2 + 152), *(double *)(a2 + 160));
    if (sub_1008AD1E0(&v29))
    {
      uint64_t v5 = sub_1006025CC(a2 + 184, &v29);
      uint64_t v6 = v5;
      double v7 = (*(double (**)(void))(**(void **)(v3 + 168) + 16LL))(*(void *)(v3 + 168));
      int v8 = sub_100DD963C(v6, v7);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018628C8);
      }
      uint64_t v9 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        int v10 = *v4;
        sub_1008AD840(&v29, &__p);
        unsigned int v11 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &__p
            : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
        *(_DWORD *)std::stringbuf::string_type buf = 67109634;
        *(_DWORD *)uint64_t v34 = v8;
        *(_WORD *)&v34[4] = 1024;
        *(_DWORD *)&v34[6] = (__int16)v10;
        __int16 v35 = 2080;
        double v36 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "TILE: updating mtime, %d, type, %d, tileid, %s",  buf,  0x18u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_41;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_1018628C8);
      }
      uint64_t v12 = qword_101934A78;
      int v13 = *v4;
      sub_1008AD840(&v29, &v27);
      __int16 v14 = (v27.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &v27
          : (std::stringbuf::string_type *)v27.__r_.__value_.__r.__words[0];
      LODWORD(__p.__r_.__value_.__l.__data_) = 67109634;
      HIDWORD(__p.__r_.__value_.__r.__words[0]) = v8;
      LOWORD(__p.__r_.__value_.__r.__words[1]) = 1024;
      *(_DWORD *)((char *)&__p.__r_.__value_.__r.__words[1] + 2) = (__int16)v13;
      HIWORD(__p.__r_.__value_.__r.__words[1]) = 2080;
      __p.__r_.__value_.__l.__cap_ = (std::string::size_type)v14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v12,  2LL,  "TILE: updating mtime, %d, type, %d, tileid, %s",  &__p,  24,  v26);
      __int16 v16 = v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::updateTileRelevancy()_block_invoke",  "%s\n",  v16);
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      double v24 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "CoarseTile, Invalid tile id!, #CloneMe",  buf,  2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_41;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018628A8);
      }
      LOWORD(__p.__r_.__value_.__l.__data_) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "CoarseTile, Invalid tile id!, #CloneMe",  &__p,  2);
      __int16 v16 = (char *)v25;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLCoarseCellTilesManager::updateTileRelevancy()_block_invoke",  "%s\n",  v25);
    }

    free(v16);
LABEL_41:
    if (v32 < 0) {
      operator delete(v31);
    }
    return;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018628C8);
  }
  uint64_t v17 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v18 = a2 + 8;
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    *(void *)uint64_t v34 = v18;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "TILE: tiles, %s, not active", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018628C8);
    }
    uint64_t v21 = *(void *)(a2 + 8);
    uint64_t v20 = a2 + 8;
    uint64_t v19 = v21;
    unsigned int v29 = 136315138;
    uint64_t v30 = v19;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "TILE: tiles, %s, not active",  (const char *)&v29);
    double v23 = (uint8_t *)v22;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLCoarseCellTilesManager::updateTileRelevancy()_block_invoke",  "%s\n",  v22);
    if (v23 != buf) {
      free(v23);
    }
  }

void sub_10096E870( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *__p, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_10096E8B0(uint64_t a1, uint64_t a2)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018628A8);
  }
  uint64_t v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    uint64_t v12 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "@TileSched, coarsecell, called, %{public}ld",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018628A8);
    }
    int v9 = 134349056;
    uint64_t v10 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@TileSched, coarsecell, called, %{public}ld",  &v9,  12);
    int v8 = (uint8_t *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLCoarseCellTilesManager::onScheduledTileDownloadsCallback(CLTileDownloadReachabilityRequirement)",  "%s\n",  v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  double v5 = (*(double (**)(void))(**(void **)(a1 + 168) + 16LL))(*(void *)(a1 + 168));
  return sub_100967D6C(a1, v5);
}

BOOL sub_10096EA74(uint64_t a1, uint64_t a2)
{
  return sub_10096E8B0(a1 - 112, a2);
}

void sub_10096EA7C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  int v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLCoarseCellTilesManager");
  sub_10096EB44((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *int v8 = &off_1018627E0;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10096EB18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_10096EB44(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_101862A68;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    uint64_t v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

id sub_10096EC18(uint64_t a1)
{
  return objc_msgSend( -[CLServiceVendor proxyForService:]( +[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance"),  "proxyForService:",  @"CLCoarseCellTilesManager"),  "syncgetDoSync:",  a1);
}

void sub_10096EC50(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101862888);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        unsigned int v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        uint64_t v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101862888);
        }
        uint64_t v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        uint64_t v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLCoarseCellTilesManager_Type::Notification, CLCoarseCellTilesManager_Type::Notificati onData, char, char>::removeClient(int) [Notification_T = CLCoarseCellTilesManager_Type::Notification, Notifica tionData_T = CLCoarseCellTilesManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_10096EEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_10198E730);
}

BOOL sub_10096EED8(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v40 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }

      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          uint64_t v28 = (uint64_t *)v24;
        }
        else {
          uint64_t v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }

      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        *(void *)uint64_t v42 = v25;
        uint64_t v33 = *(void *)(v25 + 56);
        char v34 = *a4;
        *(void *)std::stringbuf::string_type buf = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v25 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v34;
        buf[0] = 0;
        memset(&buf[4], 0, 48);
        *(_OWORD *)std::stringbuf::string_type __p = 0u;
        __int128 v47 = 0u;
        char v48 = 0;
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          __int16 v35 = sub_100971690((uint64_t)buf);
          sub_100970EC8((_BYTE *)a1, (uint64_t)&v40, (uint64_t)v42, v35);
        }

        if (SBYTE11(v47) < 0) {
          operator delete(*(void **)((char *)__p + 4));
        }
        if (SBYTE3(__p[0]) < 0) {
          operator delete(*(void **)&buf[32]);
        }
        if ((buf[31] & 0x80000000) != 0) {
          operator delete(*(void **)&buf[8]);
        }
        if (v33) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        *(void *)uint64_t v42 = a1 + 64;
        char v29 = byte_10198E731;
        HIDWORD(v39) = v16;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v29;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        uint64_t v30 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v30 + 8);
        char v31 = *a4;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        char v32 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::stringbuf::string_type buf = &v41;
        *((_BYTE *)sub_1004EF3D4(v32 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v31;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v20 == v18)
      {
        *(_DWORD *)std::stringbuf::string_type buf = *a3;
        sub_10004A8FC((uint64_t **)(v40 + 40), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101862888);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&buf[14] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101862888);
    }
    double v36 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t v42 = 136446466;
    *(void *)&v42[4] = v36;
    __int16 v43 = 1026;
    int v44 = a2;
    LODWORD(v39) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v42,
      v39);
    BOOL v38 = (char *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLCoarseCellTilesManager_Type::Notification, CLCoarseCellTilesManager_Type::NotificationDa ta, char, char>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLCoarseCellTilesManager_Type::Notification, NotificationData_T = CLCoarseCellTilesManager_Type::NotificationDat a, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v37);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

void sub_10096F388( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

BOOL sub_10096F3A8(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101862888);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      uint64_t v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101862888);
      }
      BOOL v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      int v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLCoarseCellTilesManager_Type::Notification, CLCoarseCellTilesManager_Type::Notification Data, char, char>::clientRegistered(int, const Notification_T &) [Notification_T = CLCoarseCellTilesManager_Type ::Notification, NotificationData_T = CLCoarseCellTilesManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_10096F628(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101862888);
              }
              int v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                double v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101862888);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                uint64_t v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLCoarseCellTilesManager_Type::Notification, CLCoarseCellTilesManager_Type::No tificationData, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLCoarseCellTilesManager_Type::Notification, NotificationData_T = CLCoarseCellTilesManager_Type::Notif icationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_10096F9B0(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      int v11 = (uint64_t *)v4;
    }
    else {
      int v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }

  while (*v11);
  if (v8 == v3) {
    return 0LL;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0LL;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0LL;
  }
  *(void *)a3 = *(void *)v12;
  std::string::operator=((std::string *)(a3 + 8), (const std::string *)(v12 + 8));
  std::string::operator=((std::string *)(a3 + 32), (const std::string *)(v12 + 32));
  std::string::operator=((std::string *)(a3 + 56), (const std::string *)(v12 + 56));
  char v13 = *(_BYTE *)(v12 + 84);
  *(_DWORD *)(a3 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *(_DWORD *)(v12 + 80);
  *(_BYTE *)(a3 + 84) = v13;
  return 1LL;
}

uint64_t sub_10096FA5C(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = *a2;
  uint64_t v12 = &v10;
  uint64_t v5 = sub_10023347C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_1012CF090, &v12);
  sub_10005F550((uint64_t)(v5 + 8), &v11);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    int v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  return 1LL;
}

void sub_10096FB08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10096FB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[0] = 0;
  *(_OWORD *)uint64_t v5 = 0u;
  memset(v6, 0, sizeof(v6));
  *(_OWORD *)std::stringbuf::string_type __p = 0u;
  __int128 v8 = 0u;
  char v9 = 0;
  (*(void (**)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v4,  a3,  a4,  0LL);
  if (SBYTE11(v8) < 0) {
    operator delete(*(void **)((char *)__p + 4));
  }
  if (SBYTE3(__p[0]) < 0) {
    operator delete(*(void **)((char *)&v6[1] + 4));
  }
  if (SBYTE3(v6[1]) < 0) {
    operator delete(*(void **)((char *)v5 + 4));
  }
}

void sub_10096FBA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10096FBBC(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101862888);
    }
    __int128 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = (void *)(a1 + 8);
      char v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)int v66 = 0;
      *(_WORD *)&v66[4] = 2082;
      *(void *)&v66[6] = "";
      *(_WORD *)&_BYTE v66[14] = 2082;
      *(void *)&v66[16] = "activity";
      __int16 v67 = 2082;
      uint64_t v68 = v12;
      __int16 v69 = 2050;
      int v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)uint64_t v71 = &v71[8];
      memset(&v71[8], 0, 24);
      uint64_t v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&v66[4], *(void **)&v66[12]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      sub_100970FA4(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      __int16 v27 = *(std::__shared_weak_count **)&v66[4];
      if (*(void *)&v66[4])
      {
        int v28 = (unint64_t *)(*(void *)&v66[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    uint64_t v30 = sub_100970A5C(a3);
    if (a5 == -1)
    {
      sub_100970AF4((void *)a1, (int *)a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          __int16 v36 = (uint64_t *)v32;
        }
        else {
          __int16 v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v63 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      int v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          uint64_t v42 = (unint64_t *)v37;
        }
        else {
          uint64_t v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          int v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        double v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101862888);
        }
        __int16 v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          char v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            std::string::size_type v45 = v71;
          }
          else {
            std::string::size_type v45 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)int v66 = v44;
          *(_WORD *)&v66[8] = 1024;
          *(_DWORD *)&v66[10] = a5;
          *(_WORD *)&_BYTE v66[14] = 2080;
          *(void *)&v66[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101862888);
          }
          std::string::size_type v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            char v48 = __p;
          }
          else {
            char v48 = (void **)__p[0];
          }
          *(_DWORD *)uint64_t v71 = 136315650;
          *(void *)&v71[4] = v46;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&_BYTE v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v59);
          int v50 = v49;
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCoarseCellTilesManager_Type::Notification, CLCoarseCellTilesManager_Type::Notifica tionData, char, char>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLCoarseCellTilesManager_Type::Notification, NotificationData_T = CLCoarseCellTilesM anager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v50);
        }

        goto LABEL_83;
      }

      double v62 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v53 = v39[3].n128_i64[0];
      uint64_t v51 = v39 + 3;
      uint64_t v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v33 + 32);
      uint64_t v55 = v51;
      do
      {
        int v56 = v52[1].n128_i32[3];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          double v58 = v52;
        }
        else {
          double v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          uint64_t v55 = v52;
        }
        uint64_t v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_100970EC8((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v30);
    }

void sub_1009701D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100970224(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101862888);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      unint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101862888);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCoarseCellTilesManager_Type::Notification, CLCoarseCellTilesManager_Type::Notification Data, char, char>::listClients() [Notification_T = CLCoarseCellTilesManager_Type::Notification, NotificationData _T = CLCoarseCellTilesManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101862888);
    }
    int v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      unint64_t v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101862888);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      uint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCoarseCellTilesManager_Type::Notification, CLCoarseCellTilesManager_Type::Notification Data, char, char>::listClients() [Notification_T = CLCoarseCellTilesManager_Type::Notification, NotificationData _T = CLCoarseCellTilesManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    int v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      __int128 v11 = (void *)(a1 + 8);
      do
      {
        uint64_t v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101862888);
            }
            char v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              unint64_t v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101862888);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLCoarseCellTilesManager_Type::Notification, CLCoarseCellTilesManager_Type::Noti ficationData, char, char>::listClients() [Notification_T = CLCoarseCellTilesManager_Type::Notification, NotificationData_T = CLCoarseCellTilesManager_Type::NotificationData, NotificationInfo_T = char, Registr ationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                uint64_t v12 = v18;
              }

              while (!v19);
            }

            uint64_t v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            int v10 = v26;
          }

          while (!v19);
        }

        int v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_1009707D0(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100971630(a1);
  operator delete(v1);
}

id sub_1009707E4(uint64_t a1, int a2, void *a3)
{
  id result = sub_10097120C(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_100970830(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_10097085C(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100970888(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1009708B4(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t *)**a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
        sub_100966394(--v4, 0LL);
      while (v4 != v2);
      uint64_t v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

void sub_100970928(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_100970954(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100603B94(a2 + 24, *(char **)(a2 + 32));
    sub_100603BE4(a2, *(void **)(a2 + 8));
    operator delete((void *)a2);
  }

uint64_t sub_100970994(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 304);
  *(void *)(a1 + 304) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 296);
  *(void *)(a1 + 296) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_1002E4CB0(a1 + 232);
  sub_100603B94(a1 + 208, *(char **)(a1 + 216));
  sub_100603BE4(a1 + 184, *(void **)(a1 + 192));
  return a1;
}

CLCppContainer *sub_100970A5C(uint64_t a1)
{
  uint64_t v2 = operator new(0x58uLL);
  sub_1009710A8((uint64_t)v2, a1);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1009711AC;
  v4[3] = &unk_10181D3D0;
  _BYTE v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  88LL);
}

void sub_100970AE0(_Unwind_Exception *a1)
{
}

void sub_100970AF4(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        uint64_t v51 = v9;
        id v13 = sub_10097120C(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              int v50 = v19;
              sub_100970EC8(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              unint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  unint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              uint64_t v51 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                BOOL v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    BOOL v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      uint64_t v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      uint64_t v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int16 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      __int16 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      BOOL v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              int v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101862888);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                BOOL v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101862888);
                }
                std::string::size_type v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                char v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLCoarseCellTilesManager_Type::Notification, CLCoarseCellTilesManager_Type::Notificati onData, char, char>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLCoarseCellTilesManager_Type::Notification, NotificationData_T = CLCoarseCellTilesManager_Type::Noti ficationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100970EC8(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    int v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_10097120C(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    uint64_t v14 = (int *)(*(void *)a2 + 32LL);
    uint64_t v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void *sub_100970FA4@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x70uLL);
  id result = sub_100970FFC(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100970FE8(_Unwind_Exception *a1)
{
}

void *sub_100970FFC(void *a1, uint64_t a2)
{
  a1[2] = 0LL;
  *a1 = off_1018629F8;
  a1[1] = 0LL;
  sub_1009710A8((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_100971034(_Unwind_Exception *a1)
{
}

void sub_100971048(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1018629F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10097105C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1018629F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100971080(uint64_t a1)
{
}

uint64_t sub_1009710A8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    __int128 v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v4;
  }

  if (*(char *)(a2 + 55) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v5;
  }

  int v6 = (_BYTE *)(a1 + 56);
  if (*(char *)(a2 + 79) < 0)
  {
    sub_1010DD48C(v6, *(void **)(a2 + 56), *(void *)(a2 + 64));
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)int v6 = v7;
  }

  int v8 = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v8;
  return a1;
}

void sub_100971178(_Unwind_Exception *exception_object)
{
}

void sub_1009711AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    operator delete((void *)v1);
  }

id sub_10097120C(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100971258(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100971258(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101862A38);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013419C5LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101862A38);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101862A38);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013419C5LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101862A38);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  __int128 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLCoarseCellTilesManager_Type::NotificationData, Callbacunint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_100971604(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_100971630(uint64_t a1)
{
  *(void *)a1 = off_101862A68;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *id v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_100971690(uint64_t a1)
{
  id v2 = operator new(0x58uLL);
  sub_1009710A8((uint64_t)v2, a1);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100971728;
  v4[3] = &unk_10181D3D0;
  _BYTE v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  88LL);
}

void sub_100971714(_Unwind_Exception *a1)
{
}

void sub_100971728(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    operator delete((void *)v1);
  }

void sub_100971788()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_1009717EC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_100971860(_Unwind_Exception *a1)
{
}

void sub_100971878()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_101341800;
      v1[3] = unk_101341810;
      v1[4] = xmmword_101341820;
      v1[0] = xmmword_1013417E0;
      v1[1] = unk_1013417F0;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_10097194C(_Unwind_Exception *a1)
{
}

uint64_t sub_100971964()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_1019998F8, (void *)&_mh_execute_header);
}

uint64_t sub_1009719A8(uint64_t a1, const char *a2, int a3)
{
  *(_DWORD *)a1 = a3;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(_DWORD *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
  *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  if (a3 < 0) {
    size_t v6 = -1LL;
  }
  else {
    size_t v6 = 4LL * a3;
  }
  *(_OWORD *)(a1 + 64) = 0uLL;
  *(_OWORD *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0uLL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = operator new[](v6);
  *(void *)(a1 + 16) = operator new[](v6);
  if (a3 < 0) {
    size_t v7 = -1LL;
  }
  else {
    size_t v7 = 8LL * a3;
  }
  *(void *)(a1 + 24) = operator new[](v7);
  *(void *)(a1 + 32) = operator new[](v7);
  sub_100971A90(a1);
  sub_100971AD4(a1, a2);
  return a1;
}

void sub_100971A64(_Unwind_Exception *exception_object)
{
  __int128 v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 56) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

void sub_100971A90(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(a1 + 48);
  for (uint64_t i = *(uint64_t **)(a1 + 56); v2 != i; ++v2)
  {
    if (*v2)
    {
      sub_10097E768(*v2);
      uint64_t i = *(uint64_t **)(a1 + 56);
    }
  }

void sub_100971AD4(uint64_t a1, const char *a2)
{
  *(void *)&__nitems[3] = 0LL;
  *(_DWORD *)&__nitems[1] = 0;
  __int128 v4 = fopen(a2, "rb");
  if (!v4)
  {
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862AE0);
    }
    uint64_t v12 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "#Warning Could not open prototype file",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862AE0);
      }
      LOWORD(__ptr[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Could not open prototype file",  __ptr,  2);
      unint64_t v14 = (uint8_t *)v13;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    goto LABEL_56;
  }

  __int128 v5 = v4;
  size_t v6 = fread(&__nitems[5], 4uLL, 1uLL, v4);
  int v7 = *(_DWORD *)&__nitems[5];
  if (v6 != 1 || *(_DWORD *)&__nitems[5] != 1611526157)
  {
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862AE0);
    }
    id v9 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67240448;
      int v58 = v7;
      __int16 v59 = 1026;
      int v60 = 1611526157;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "#Warning Error reading magic number or number (%{public}x) does not match expected number (0x%{public}x)",  buf,  0xEu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_55;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862AE0);
    }
    __ptr[0] = 67240448;
    __ptr[1] = v7;
    __int16 v55 = 1026;
    int v56 = 1611526157;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Error reading magic number or number (%{public}x) does not match expected number (0x%{public}x)",  __ptr,  14);
    __int16 v11 = (uint8_t *)v10;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v10);
LABEL_121:
    if (v11 != buf) {
      free(v11);
    }
LABEL_55:
    fclose(v5);
LABEL_56:
    sub_100971A90(a1);
    goto LABEL_57;
  }

  if (fread(&__nitems[2], 2uLL, 1uLL, v5) != 1)
  {
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862AE0);
    }
    int v26 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "#Warning Error reading number of prototypes",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_55;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862AE0);
    }
    LOWORD(__ptr[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Error reading number of prototypes",  __ptr,  2);
    __int16 v11 = (uint8_t *)v43;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v43);
    goto LABEL_121;
  }

  if (__nitems[2] >= 0x3E8u) {
    unint64_t v15 = 1000LL;
  }
  else {
    unint64_t v15 = __nitems[2];
  }
  __nitems[2] = v15;
  int v16 = (void *)(a1 + 48);
  sub_100973354(a1 + 48, v15);
  if (!(_DWORD)v15) {
    goto LABEL_103;
  }
  uint64_t v17 = 0LL;
  while (1)
  {
    if (fread((char *)__nitems + 1, 1uLL, 1uLL, v5) != 1)
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862AE0);
      }
      uint64_t v27 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        int v58 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "#Warning Error reading name length of prototype %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862AE0);
        }
        int v49 = 67240192;
        int v50 = v17;
        LODWORD(v46) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Error reading name length of prototype %{public}d",  &v49,  v46);
        unint64_t v29 = (uint8_t *)v28;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v28);
        goto LABEL_126;
      }

      goto LABEL_103;
    }

    uint64_t v18 = HIBYTE(__nitems[0]);
    if (fread(__ptr, 1uLL, HIBYTE(__nitems[0]), v5) != v18)
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862AE0);
      }
      int v30 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        int v58 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "#Warning Error reading name of prototype %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862AE0);
        }
        int v49 = 67240192;
        int v50 = v17;
        LODWORD(v46) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Error reading name of prototype %{public}d",  &v49,  v46);
        unint64_t v29 = (uint8_t *)v31;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v31);
        goto LABEL_126;
      }

      goto LABEL_103;
    }

    if (fread(__nitems, 1uLL, 1uLL, v5) != 1)
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862AE0);
      }
      int v32 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        int v58 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "#Warning Error reading rawName length of prototype %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862AE0);
        }
        int v49 = 67240192;
        int v50 = v17;
        LODWORD(v46) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Error reading rawName length of prototype %{public}d",  &v49,  v46);
        unint64_t v29 = (uint8_t *)v33;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v33);
        goto LABEL_126;
      }

      goto LABEL_103;
    }

    uint64_t v19 = LOBYTE(__nitems[0]);
    if (fread(v53, 1uLL, LOBYTE(__nitems[0]), v5) != v19)
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862AE0);
      }
      uint64_t v34 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        int v58 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "#Warning Error reading rawName of prototype %{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862AE0);
        }
        int v49 = 67240192;
        int v50 = v17;
        LODWORD(v46) = 8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Error reading rawName of prototype %{public}d",  &v49,  v46);
        unint64_t v29 = (uint8_t *)v35;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v35);
        goto LABEL_126;
      }

      goto LABEL_103;
    }

    if (fread(&__nitems[3], 4uLL, 1uLL, v5) != 1) {
      break;
    }
    if (fread(&__nitems[1], 2uLL, 1uLL, v5) != 1)
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862AE0);
      }
      int v20 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "You are reading an older prototype file.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862AE0);
        }
        LOWORD(v49) = 0;
        LODWORD(v46) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  2LL,  "You are reading an older prototype file.",  &v49,  v46);
        int v25 = (uint8_t *)v24;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v24);
        if (v25 != buf) {
          free(v25);
        }
      }

      __nitems[1] = 0;
    }

    if (fread(&v47, 2uLL, 1uLL, v5) != 1)
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862AE0);
      }
      BOOL v38 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        int v58 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "#Warning Error reading number of accelerometer samples for prototype %{public}d",  buf,  8u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_103;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862AE0);
      }
      int v49 = 67240192;
      int v50 = v17;
      LODWORD(v46) = 8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Error reading number of accelerometer samples for prototype %{public}d",  &v49,  v46);
      unint64_t v29 = (uint8_t *)v44;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v44);
LABEL_126:
      if (v29 != buf) {
        free(v29);
      }
      goto LABEL_103;
    }

    size_t v21 = v47;
    int v22 = operator new[](12LL * v47);
    if (fread(v22, 0xCuLL, v21, v5) != v21)
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862AE0);
      }
      int v39 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67240448;
        int v58 = v21;
        __int16 v59 = 1026;
        int v60 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "#Warning Error reading %{public}d accelerometer samples for prototype %{public}d",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862AE0);
        }
        int v49 = 67240448;
        int v50 = v21;
        __int16 v51 = 1026;
        int v52 = v17;
        LODWORD(v46) = 14;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "#Warning Error reading %{public}d accelerometer samples for prototype %{public}d",  &v49,  v46);
        BOOL v41 = (uint8_t *)v40;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLPrototypeSet::readFromFile(const char *)", "%s\n", v40);
LABEL_131:
        if (v41 != buf) {
          free(v41);
        }
      }

void sub_100972C90(_Unwind_Exception *a1)
{
}

uint64_t sub_100972CB0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2) {
    operator delete[](v2);
  }
  uint64_t v3 = *(void **)(a1 + 16);
  if (v3) {
    operator delete[](v3);
  }
  __int128 v4 = *(void **)(a1 + 24);
  if (v4) {
    operator delete[](v4);
  }
  __int128 v5 = *(void **)(a1 + 32);
  if (v5) {
    operator delete[](v5);
  }
  sub_100972D2C(a1);
  size_t v6 = *(void **)(a1 + 48);
  if (v6)
  {
    *(void *)(a1 + 56) = v6;
    operator delete(v6);
  }

  return a1;
}

void sub_100972D2C(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 48);
  uint64_t v1 = *(void **)(a1 + 56);
  for (uint64_t i = a1 + 48; v3 != v1; ++v3)
  {
    if (*v3)
    {
      (*(void (**)(void))(*(void *)*v3 + 8LL))(*v3);
      uint64_t v1 = *(void **)(a1 + 56);
    }
  }

  sub_100973354(i, 0LL);
}

uint64_t sub_100972D90( unsigned int *a1, __n128 *a2, _DWORD *a3, _DWORD *a4, void *a5, __n128 a6, int8x16_t a7)
{
  uint64_t v12 = (void *)*((void *)a1 + 9);
  if (v12) {
    a6 = sub_1009733B0(v12, a2);
  }
  if (*a1 == 1)
  {
    sub_100972FCC( (uint64_t)a1,  a2,  0,  ((*((void *)a1 + 7) - *((void *)a1 + 6)) >> 3) - 1,  *((__int32 **)a1 + 1),  *((_DWORD **)a1 + 2),  *((uint64_t **)a1 + 4),  *((void **)a1 + 3),  (int8x16_t)a6,  a7);
    __int16 v13 = (_DWORD *)*((void *)a1 + 2);
    *a3 = **((_DWORD **)a1 + 1);
    *a4 = *v13;
    uint64_t v14 = *((void *)a1 + 4);
    *a5 = **((void **)a1 + 3);
    return *(void *)v14;
  }

  else
  {
    unsigned int v16 = a1[10];
    uint64_t v17 = dispatch_group_create();
    uint64_t v18 = "ionBase14messageHandlerI28CLPlaceInferenceSubscriptionEENS_8functionIFvRT_NS_10shared_ptrI19CLConnectionMessageEEEEEMS6_FvSA_EEUlRS4_SA_E_NS_9allocatorISG_EEFvSF_SA_EEE";
    if ((int)*a1 <= 1)
    {
      dispatch_queue_global_t global_queue = dispatch_get_global_queue(2LL, 0LL);
      unsigned int v22 = 0;
    }

    else
    {
      unsigned int v19 = v16 - 1;
      dispatch_queue_global_t global_queue = dispatch_get_global_queue(2LL, 0LL);
      int v21 = 0;
      unsigned int v22 = 0;
      do
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 0x40000000LL;
        block[2] = sub_1009732F8;
        block[3] = &unk_101862A80;
        block[4] = a1;
        void block[5] = a2;
        unsigned int v35 = v22;
        unsigned int v36 = v19;
        int v37 = v21;
        dispatch_group_async(v17, global_queue, block);
        unsigned int v22 = v19 + 1;
        v19 += a1[10];
        ++v21;
      }

      while (v21 < (int)(*a1 - 1));
      uint64_t v18 = "NSt3__110__function6__funcIZN27CLTransientSubscriptionBase14messageHandlerI28CLPlaceInferenceSubscriptionEEN"
            "S_8functionIFvRT_NS_10shared_ptrI19CLConnectionMessageEEEEEMS6_FvSA_EEUlRS4_SA_E_NS_9allocatorISG_EEFvSF_SA_EEE"
          + 51;
    }

    int v23 = ((*((void *)a1 + 7) - *((void *)a1 + 6)) >> 3) - 1;
    v31[0] = _NSConcreteStackBlock;
    v31[1] = *((void *)v18 + 320);
    v31[2] = sub_100973324;
    uint64_t v31[3] = &unk_101862AA0;
    v31[4] = a1;
    v31[5] = a2;
    unsigned int v32 = v22;
    int v33 = v23;
    dispatch_group_async(v17, global_queue, v31);
    dispatch_group_wait(v17, 0xFFFFFFFFFFFFFFFFLL);
    dispatch_release(v17);
    BOOL v24 = (uint64_t *)*((void *)a1 + 4);
    uint64_t result = *v24;
    uint64_t v25 = *a1;
    if ((int)v25 >= 2)
    {
      int v26 = (float *)*((void *)a1 + 1);
      float v27 = *v26;
      for (uint64_t i = 1LL; i != v25; ++i)
      {
        float v29 = v26[i];
        if (v29 < v27)
        {
          uint64_t v30 = *((void *)a1 + 3);
          *a4 = *(_DWORD *)(*((void *)a1 + 2) + 4 * i);
          uint64_t result = v24[i];
          *a5 = *(void *)(v30 + 8 * i);
          float v27 = v29;
        }
      }
    }
  }

  return result;
}

void sub_100972FCC( uint64_t a1, void *a2, int a3, int a4, __int32 *a5, _DWORD *a6, uint64_t *a7, void *a8, int8x16_t a9, int8x16_t a10)
{
  *a5 = 2139095039;
  *a7 = 0LL;
  if (a3 <= a4)
  {
    uint64_t v14 = 0LL;
    uint64_t v15 = 8LL * a3;
    int v16 = a4 - a3 + 1;
    a9.i64[0] = 134349570LL;
    do
    {
      sub_10097E778(*(void *)(*(void *)(a1 + 48) + v15 + 8 * v14), a2, a9, a10);
      float v18 = v17;
      uint64_t v20 = v19;
      float v21 = v17;
      if (sub_10097E7F8(*(void *)(*(void *)(a1 + 48) + v15 + 8 * v14)) < v17 && v21 != 3.4028e38)
      {
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862AE0);
        }
        int v23 = (os_log_s *)qword_101934538;
        if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
        {
          double v24 = sub_10097E7F8(*(void *)(*(void *)(a1 + 48) + v15 + 8 * v14));
          uint64_t v25 = sub_10097E7DC(*(void *)(*(void *)(a1 + 48) + v15 + 8 * v14));
          *(_DWORD *)std::stringbuf::string_type buf = 134349570;
          double v41 = v21;
          __int16 v42 = 2050;
          double v43 = v24;
          __int16 v44 = 2082;
          uint64_t v45 = v25;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "#Warning Cost of match %{public}f exceeds max of %{public}f allowed for prototype %{public}s",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934530 != -1) {
            dispatch_once(&qword_101934530, &stru_101862AE0);
          }
          uint64_t v26 = qword_101934538;
          double v27 = sub_10097E7F8(*(void *)(*(void *)(a1 + 48) + v15 + 8 * v14));
          uint64_t v28 = sub_10097E7DC(*(void *)(*(void *)(a1 + 48) + v15 + 8 * v14));
          int v34 = 134349570;
          double v35 = v21;
          __int16 v36 = 2050;
          double v37 = v27;
          __int16 v38 = 2082;
          uint64_t v39 = v28;
          LODWORD(v31) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v26,  0LL,  "#Warning Cost of match %{public}f exceeds max of %{public}f allowed for prototype %{public}s",  &v34,  v31);
          uint64_t v30 = (uint8_t *)v29;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPrototypeSet::addSampleToSubset(const CLDtwSample &, int, int, float &, float &, const char *&, double &)",  "%s\n",  v29);
          if (v30 != buf) {
            free(v30);
          }
        }
      }

      a9.i32[0] = *a5;
      if (*(float *)a5 > v21)
      {
        *(float *)a5 = v18;
        *a7 = sub_10097E7DC(*(void *)(*(void *)(a1 + 48) + v15 + 8 * v14));
        *(float *)a9.i32 = sub_10097E7F8(*(void *)(*(void *)(a1 + 48) + v15 + 8 * v14));
        *a6 = a9.i32[0];
        *a8 = v20;
      }

      ++v14;
    }

    while (v16 != (_DWORD)v14);
  }

void sub_1009732F8(uint64_t a1, int8x16_t a2, int8x16_t a3)
{
  uint64_t v3 = *(void **)(a1 + 32);
  sub_100972FCC( (uint64_t)v3,  *(void **)(a1 + 40),  *(_DWORD *)(a1 + 48),  *(_DWORD *)(a1 + 52),  (__int32 *)(v3[1] + 4LL * *(int *)(a1 + 56)),  (_DWORD *)(v3[2] + 4LL * *(int *)(a1 + 56)),  (uint64_t *)(v3[4] + 8LL * *(int *)(a1 + 56)),  (void *)(v3[3] + 8LL * *(int *)(a1 + 56)),  a2,  a3);
}

void sub_100973324(uint64_t a1, int8x16_t a2, int8x16_t a3)
{
  uint64_t v3 = *(void **)(a1 + 32);
  sub_100972FCC( (uint64_t)v3,  *(void **)(a1 + 40),  *(_DWORD *)(a1 + 48),  *(_DWORD *)(a1 + 52),  (__int32 *)(v3[1] + 4 * (*(int *)v3 - 1LL)),  (_DWORD *)(v3[2] + 4 * (*(int *)v3 - 1LL)),  (uint64_t *)(v3[4] + 8 * (*(int *)v3 - 1LL)),  (void *)(v3[3] + 8 * (*(int *)v3 - 1LL)),  a2,  a3);
}

void sub_100973354(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = *(void *)a1 + 8 * a2;
    }
  }

  else
  {
    sub_100973770((void **)a1, a2 - v2);
  }

void sub_100973384(id a1)
{
  qword_101934538 = (uint64_t)os_log_create("com.apple.locationd.Motion", "EarGesture");
}

__n128 sub_1009733B0(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 170 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_10097345C(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  uint64_t v8 = (__n128 *)(*(void *)(v5 + 8 * (v7 / 0xAA)) + 24 * (v7 % 0xAA));
  __n128 result = *a2;
  v8[1].n128_u64[0] = a2[1].n128_u64[0];
  *uint64_t v8 = result;
  ++a1[5];
  return result;
}

void sub_10097345C(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0xAA;
  unint64_t v4 = v2 - 170;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    id v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      int v34 = (char *)sub_1000071BC(v5, v33);
      double v35 = &v34[8 * (v33 >> 2)];
      double v37 = &v34[8 * v36];
      __int16 v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        double v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)double v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100973724( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100973770(void **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  unint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }

    a1[1] = v7;
  }

  else
  {
    uint64_t v8 = v7 - (_BYTE *)*a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      sub_100007008();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - (_BYTE *)*a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      uint64_t v13 = (char *)sub_1000071BC(v4, v12);
    }
    else {
      uint64_t v13 = 0LL;
    }
    BOOL v14 = &v13[8 * v10];
    uint64_t v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    uint64_t v16 = &v14[8 * a2];
    uint64_t v18 = (char *)*a1;
    uint64_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *((void *)v14 - 1) = v19;
        v14 -= 8;
      }

      while (v17 != v18);
      uint64_t v17 = (char *)*a1;
    }

    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17) {
      operator delete(v17);
    }
  }

uint64_t sub_100973B48(uint64_t a1, uint64_t a2)
{
  uint64_t result = objc_opt_respondsToSelector([*(id *)(a1 + 32) delegate], "fsm:didYieldTrack:");
  if ((result & 1) != 0) {
    return (uint64_t)_objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "delegate"),  "fsm:didYieldTrack:",  *(void *)(a1 + 32),  a2);
  }
  return result;
}

void sub_100973E14(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void *sub_100973E40(void *result, unsigned int a2)
{
  result[2] = 0LL;
  void *result = off_101862B58;
  result[1] = result + 2;
  result[3] = 0LL;
  result[4] = result + 4;
  result[5] = result + 4;
  result[6] = 0LL;
  result[7] = a2;
  return result;
}

void sub_100973E6C(uint64_t a1@<X0>, uint64_t **a2@<X1>, void *a3@<X8>)
{
  uint64_t v23 = 0LL;
  uint64_t v24 = 0LL;
  uint64_t v21 = 0LL;
  unint64_t v22 = (uint64_t *)&v23;
  uint64_t v19 = (uint64_t *)&v20;
  int64_t v20 = 0LL;
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t v16 = (uint64_t *)&v17;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    uint64_t v6 = a1 + 8;
    do
    {
      sub_1009740BC(v6, v4, (uint64_t)v25);
      if (v25[0])
      {
        if (v26[20]) {
          sub_1009746B8(&v16, v4, v4, (uint64_t)v26);
        }
        else {
          sub_100352AB8(&v19, v4, v4);
        }
      }

      else
      {
        sub_100352AB8(&v22, v4, v4);
      }

      ++v4;
    }

    while (v4 != v5);
  }

  a3[1] = 0LL;
  unint64_t v7 = a3 + 1;
  a3[2] = 0LL;
  a3[4] = 0LL;
  uint64_t v8 = a3 + 4;
  *a3 = a3 + 1;
  a3[3] = a3 + 4;
  a3[5] = 0LL;
  a3[7] = 0LL;
  unint64_t v9 = a3 + 7;
  a3[6] = a3 + 7;
  a3[8] = 0LL;
  sub_100008390((uint64_t)a3, 0LL);
  uint64_t v10 = v23;
  *a3 = v22;
  a3[1] = v10;
  uint64_t v11 = v24;
  a3[2] = v24;
  if (v11)
  {
    _DWORD v10[2] = v7;
    unint64_t v22 = (uint64_t *)&v23;
    uint64_t v23 = 0LL;
    uint64_t v24 = 0LL;
  }

  else
  {
    *a3 = v7;
  }

  sub_100008390((uint64_t)(a3 + 3), (void *)a3[4]);
  unint64_t v12 = v20;
  a3[3] = v19;
  a3[4] = v12;
  uint64_t v13 = v21;
  a3[5] = v21;
  if (v13)
  {
    _OWORD v12[2] = v8;
    uint64_t v19 = (uint64_t *)&v20;
    int64_t v20 = 0LL;
    uint64_t v21 = 0LL;
  }

  else
  {
    a3[3] = v8;
  }

  sub_100008390((uint64_t)(a3 + 6), (void *)a3[7]);
  BOOL v14 = v17;
  a3[6] = v16;
  a3[7] = v14;
  uint64_t v15 = v18;
  a3[8] = v18;
  if (v15)
  {
    _DWORD v14[2] = v9;
    uint64_t v16 = (uint64_t *)&v17;
    uint64_t v17 = 0LL;
    uint64_t v18 = 0LL;
    BOOL v14 = 0LL;
  }

  else
  {
    a3[6] = v9;
  }

  sub_100008390((uint64_t)&v16, v14);
  sub_100008390((uint64_t)&v19, v20);
  sub_100008390((uint64_t)&v22, v23);
}

void sub_100974084( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, char a12, void *a13, uint64_t a14, char a15, void *a16)
{
}

void *sub_1009740BC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1002FB09C(a1, a2);
  if ((void *)(a1 + 8) == result)
  {
    char v18 = 0;
  }

  else
  {
    unint64_t v7 = result;
    uint64_t result = (void *)result[8];
    if (*(void **)(a1 + 32) == result)
    {
      *(_OWORD *)(a3 + 4) = *(_OWORD *)(v7 + 5);
      uint64_t v19 = v7[7];
    }

    else
    {
      uint64_t v8 = *result;
      *(void *)(v8 + _Block_object_dispose((const void *)(v1 - 224), 8) = result[1];
      *(void *)result[1] = v8;
      --*(void *)(a1 + 40);
      operator delete(result);
      unint64_t v9 = operator new(0x18uLL);
      uint64_t v10 = *a2;
      uint64_t v11 = *(void **)(a1 + 32);
      void *v9 = a1 + 24;
      v9[1] = v11;
      _DWORD v9[2] = v10;
      *uint64_t v11 = v9;
      uint64_t v12 = *(void *)(a1 + 40) + 1LL;
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v12;
      uint64_t v14 = v7[5];
      uint64_t v13 = v7 + 5;
      int64_t v20 = a2;
      uint64_t v21 = v14;
      int v22 = *((_DWORD *)v13 + 2);
      uint64_t v15 = *(void *)((char *)v13 + 12);
      int v16 = *((unsigned __int8 *)v13 + 20);
      uint64_t result = sub_100974628((uint64_t **)a1, a2, (uint64_t)&unk_1012CF090, &v20);
      uint64_t v17 = result + 5;
      if (*((unsigned __int8 *)result + 60) == v16)
      {
        if (*((_BYTE *)result + 60))
        {
          *uint64_t v17 = v21;
          *((_WORD *)result + 24) = v22;
          *(void *)((char *)result + 52) = v15;
        }
      }

      else if (*((_BYTE *)result + 60))
      {
        *((_BYTE *)result + 6sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
      }

      else
      {
        *uint64_t v17 = v21;
        *((_DWORD *)result + 12) = v22;
        *(void *)((char *)result + 52) = v15;
        *((_BYTE *)result + 6sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 1;
      }

      result[8] = v9;
      *(_OWORD *)(a3 + 4) = *(_OWORD *)v13;
      uint64_t v19 = v13[2];
    }

    *(void *)(a3 + 2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v19;
    char v18 = 1;
  }

  *(_BYTE *)a3 = v18;
  return result;
}

void *sub_100974260(void *result, uint64_t a2)
{
  unint64_t v2 = *(void **)a2;
  BOOL v3 = *(void **)(a2 + 8);
  if (*(void **)a2 != v3)
  {
    uint64_t v4 = (uint64_t)(result + 1);
    do
    {
      LOBYTE(v5) = 0;
      char v6 = 0;
      uint64_t result = sub_1009742BC(v4, v2++, &v5);
    }

    while (v2 != v3);
  }

  return result;
}

void *sub_1009742BC(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t result = sub_1002FB09C(a1, a2);
  if ((void *)(a1 + 8) == result)
  {
    if (*(void *)(a1 + 16) >= *(void *)(a1 + 48)) {
      sub_100974754(a1);
    }
    unint64_t v7 = operator new(0x18uLL);
    uint64_t v8 = *a2;
    unint64_t v9 = *(void **)(a1 + 32);
    *unint64_t v7 = a1 + 24;
    v7[1] = v9;
    float32x2_t v7[2] = v8;
    void *v9 = v7;
    uint64_t v10 = *(void *)(a1 + 40) + 1LL;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v10;
    uint64_t v11 = *a3;
    uint64_t v15 = a2;
    uint64_t v16 = v11;
    int v17 = *((_DWORD *)a3 + 2);
    uint64_t v12 = *(uint64_t *)((char *)a3 + 12);
    int v13 = *((unsigned __int8 *)a3 + 20);
    uint64_t result = sub_100974628((uint64_t **)a1, a2, (uint64_t)&unk_1012CF090, &v15);
    uint64_t v14 = result + 5;
    if (*((unsigned __int8 *)result + 60) == v13)
    {
      if (*((_BYTE *)result + 60))
      {
        *uint64_t v14 = v16;
        *((_WORD *)result + 24) = v17;
        *(void *)((char *)result + 52) = v12;
      }
    }

    else if (*((_BYTE *)result + 60))
    {
      *((_BYTE *)result + 6sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    }

    else
    {
      *uint64_t v14 = v16;
      *((_DWORD *)result + 12) = v17;
      *(void *)((char *)result + 52) = v12;
      *((_BYTE *)result + 6sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 1;
    }

    result[8] = v7;
  }

  return result;
}

void *sub_10097440C(void *result, void *a2)
{
  unint64_t v2 = a2 + 1;
  BOOL v3 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    uint64_t v4 = (uint64_t)(result + 1);
    do
    {
      __int128 v8 = *(_OWORD *)(v3 + 5);
      int v9 = *((_DWORD *)v3 + 14);
      char v10 = 1;
      uint64_t result = sub_1009742BC(v4, v3 + 4, (uint64_t *)&v8);
      uint64_t v5 = (void *)v3[1];
      if (v5)
      {
        do
        {
          char v6 = v5;
          uint64_t v5 = (void *)*v5;
        }

        while (v5);
      }

      else
      {
        do
        {
          char v6 = (void *)v3[2];
          BOOL v7 = *v6 == (void)v3;
          BOOL v3 = v6;
        }

        while (!v7);
      }

      BOOL v3 = v6;
    }

    while (v6 != v2);
  }

  return result;
}

void *sub_1009744A8(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 16);
  sub_100008390(a1 + 8, *(void **)(a1 + 16));
  *(v1 - 1) = v1;
  *uint64_t v1 = 0LL;
  v1[1] = 0LL;
  return sub_1001B4C40(v1 + 2);
}

uint64_t sub_1009744DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1009744E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_1009744EC(uint64_t **a1@<X1>, void *a2@<X8>)
{
  a2[1] = 0LL;
  BOOL v3 = a2 + 1;
  *a2 = a2 + 1;
  a2[4] = 0LL;
  a2[2] = 0LL;
  a2[3] = a2 + 4;
  a2[8] = 0LL;
  a2[7] = 0LL;
  a2[5] = 0LL;
  a2[6] = a2 + 7;
  sub_100008390((uint64_t)a2, 0LL);
  uint64_t v4 = v7;
  *a2 = v6;
  a2[1] = v4;
  uint64_t v5 = v8;
  a2[2] = v8;
  if (v5)
  {
    v4[2] = v3;
    char v6 = &v7;
    BOOL v7 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v4 = 0LL;
  }

  else
  {
    *a2 = v3;
  }

  sub_100008390((uint64_t)&v6, v4);
}

uint64_t sub_1009745A0(uint64_t a1)
{
  *(void *)a1 = off_101862B58;
  uint64_t v2 = a1 + 8;
  sub_1001B4C40((void *)(a1 + 32));
  sub_100008390(v2, *(void **)(a1 + 16));
  return a1;
}

void sub_1009745E4(void *a1)
{
  *a1 = off_101862B58;
  uint64_t v2 = (uint64_t)(a1 + 1);
  sub_1001B4C40(a1 + 4);
  sub_100008390(v2, (void *)a1[2]);
  operator delete(a1);
}

void *sub_100974628(uint64_t **a1, void *a2, uint64_t a3, void **a4)
{
  char v6 = (void **)sub_1002FB00C((uint64_t)a1, &v10, a2);
  BOOL v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    BOOL v7 = operator new(0x48uLL);
    v7[4] = **a4;
    *((_BYTE *)v7 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    *((_BYTE *)v7 + 6sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    _WORD v7[8] = 0LL;
    sub_1000085FC(a1, v10, v8, v7);
  }

  return v7;
}

char *sub_1009746B8(uint64_t **a1, void *a2, void *a3, uint64_t a4)
{
  BOOL v7 = (void **)sub_1002FB00C((uint64_t)a1, &v11, a2);
  uint64_t v8 = (char *)*v7;
  if (!*v7)
  {
    int v9 = (uint64_t **)v7;
    uint64_t v8 = (char *)operator new(0x40uLL);
    *((void *)v8 + 4) = *a3;
    *(_OWORD *)(v8 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *(_OWORD *)a4;
    *((_DWORD *)v8 + 14) = *(_DWORD *)(a4 + 16);
    sub_1000085FC(a1, v11, v9, (uint64_t *)v8);
  }

  return v8;
}

void sub_100974754(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(a1 + 24);
  sub_1004C3264((uint64_t **)a1, v2 + 2);
  uint64_t v3 = *v2;
  *(void *)(v3 + _Block_object_dispose((const void *)(v1 - 224), 8) = v2[1];
  *(void *)v2[1] = v3;
  --*(void *)(a1 + 40);
  operator delete(v2);
}

uint64_t sub_10097479C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a1 + 8;
  if (a2 != a3)
  {
    char v6 = a2;
    do
    {
      sub_10097481C((uint64_t **)a1, v4, v6, v6);
      ++v6;
    }

    while (v6 != a3);
  }

  return a1;
}

void sub_100974804(_Unwind_Exception *a1)
{
}

uint64_t *sub_10097481C(uint64_t **a1, void *a2, void *a3, uint64_t *a4)
{
  char v6 = sub_1002FB288(a1, a2, &v11, &v10, a3);
  BOOL v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    BOOL v7 = (uint64_t *)operator new(0x28uLL);
    v7[4] = *a4;
    sub_1000085FC(a1, v11, v8, v7);
  }

  return v7;
}

uint64_t sub_1009748A0(uint64_t result)
{
  *(void *)(result + 56) = 0xBFF0000000000000LL;
  *(void *)(result + 64) = 0LL;
  *(void *)(result + 72) = 0LL;
  *(void *)(result + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0xBFF0000000000000LL;
  *(_BYTE *)(result + 224) = 0;
  *(void *)(result + 112) = 0LL;
  *(void *)(result + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  return result;
}

void sub_1009748B8(uint64_t a1, __int128 **a2, unsigned int a3, __int128 **a4)
{
  if (*(_BYTE *)(a1 + 168))
  {
    uint64_t v4 = *a2;
    if (v4)
    {
      BOOL v7 = sub_10097496C((uint64_t **)(a1 + 288), v4, 1);
      if (v7)
      {
        uint64_t v8 = v7;
        if (v7[a3]) {
          sub_100974AB0(v7, a3);
        }
        uint64_t v10 = *a4;
        for (uint64_t i = a4[1]; v10 != i; ++v10)
        {
          if (a3)
          {
            v8[1] = 1;
            uint64_t v11 = (char **)(v8 + 8);
          }

          else
          {
            *uint64_t v8 = 1;
            uint64_t v11 = (char **)(v8 + 32);
          }

          sub_1000E8F38(v11, v10);
        }
      }
    }
  }

_OWORD *sub_10097496C(uint64_t **a1, __int128 *a2, int a3)
{
  if (sub_10097C788((uint64_t)a1, (unint64_t *)a2))
  {
    v8[0] = a2;
    return sub_10097C7E8(a1, (unint64_t *)a2, (uint64_t)&unk_1012CF090, v8) + 3;
  }

  else if (a3)
  {
    __int16 v11 = 0;
    memset(v12, 0, sizeof(v12));
    unint64_t v13 = 0xBFF0000000000000LL;
    sub_10097C9FC((uint64_t)v8, a2, (uint64_t)&v11);
    sub_10097C8FC(a1, (unint64_t *)v8, (uint64_t)v8);
    uint64_t v14 = (void **)&v10;
    sub_10004CC28(&v14);
    uint64_t v14 = (void **)&v9;
    sub_10004CC28(&v14);
    v8[0] = a2;
    char v6 = sub_10097C7E8(a1, (unint64_t *)a2, (uint64_t)&unk_1012CF090, v8) + 3;
    v8[0] = (_OWORD *)((char *)&v12[1] + 8);
    sub_10004CC28((void ***)v8);
    v8[0] = v12;
    sub_10004CC28((void ***)v8);
  }

  else
  {
    return 0LL;
  }

  return v6;
}

void sub_100974A88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
}

void sub_100974AB0(_BYTE *a1, int a2)
{
  if (a2)
  {
    sub_10097CA9C((uint64_t)a1, (uint64_t)(a1 + 8));
    a1[1] = 0;
  }

  else
  {
    sub_10097CA9C((uint64_t)a1, (uint64_t)(a1 + 32));
    *a1 = 0;
  }

uint64_t sub_100974AF4(uint64_t a1, __int128 **a2, unsigned int a3, uint64_t *a4)
{
  if (!*(_BYTE *)(a1 + 168)) {
    return 0LL;
  }
  uint64_t v4 = *a2;
  if (!v4) {
    return 0LL;
  }
  uint64_t result = (uint64_t)sub_10097496C((uint64_t **)(a1 + 288), v4, 0);
  if (!result) {
    return result;
  }
  uint64_t v8 = result;
  if (!*(_BYTE *)(result + a3)) {
    return 0LL;
  }
  uint64_t v9 = result + 8;
  uint64_t v10 = 32LL;
  if (a3) {
    uint64_t v10 = 8LL;
  }
  else {
    uint64_t v9 = result + 32;
  }
  sub_10097D9B4( a4,  a4[1],  *(uint64_t **)(result + v10),  *(uint64_t **)(v9 + 8),  (uint64_t)(*(void *)(v9 + 8) - *(void *)(result + v10)) >> 4);
  *(CFAbsoluteTime *)(v8 + 56) = CFAbsoluteTimeGetCurrent();
  return 1LL;
}

void sub_100974B94(uint64_t a1, double a2, double a3)
{
  uint64_t v5 = a1 + 288;
  double Current = CFAbsoluteTimeGetCurrent();
  sub_100974BD0(v5, Current, a2, a3);
}

void sub_100974BD0(uint64_t a1, double a2, double a3, double a4)
{
  int v7 = *(_DWORD *)(a1 + 16);
  uint64_t v8 = (uint64_t *)v63;
  v63[0] = 0LL;
  v63[1] = 0LL;
  double v62 = (uint64_t *)v63;
  double v9 = *(double *)(a1 + 24);
  BOOL v10 = v9 < 0.0;
  double v11 = vabdd_f64(a2, v9);
  BOOL v12 = !v10 && v11 <= a3;
  if (!v12 || v7 >= 501)
  {
    uint64_t v14 = (uint64_t *)(a1 + 8);
    unint64_t v13 = *(uint64_t **)a1;
    if (*(void *)a1 != a1 + 8)
    {
      do
      {
        double v15 = *((double *)v13 + 13);
        double v16 = vabdd_f64(a2, v15);
        if (v15 >= 0.0 && v16 <= a4)
        {
          if (v7 < 501) {
            goto LABEL_46;
          }
          uint64_t v19 = v13 + 4;
          int v20 = (int)fabs((double)(int)(a2 - v15));
          HIDWORD(v61) = v20;
          for (uint64_t i = v63[0]; i; uint64_t i = (void *)*i)
          {
            int v22 = *((_DWORD *)i + 8);
            if (v22 <= v20)
            {
              if (v22 >= v20)
              {
                __p[0] = (char *)&v61 + 4;
                __int128 v30 = sub_1004C2E20(&v62, (int *)&v61 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)__p);
                __int128 v31 = v30;
                __int128 v32 = v30[6];
                double v35 = v30[7];
                uint64_t v33 = (uint64_t)(v30 + 7);
                int v34 = v35;
                if (v32 >= v35)
                {
                  double v37 = v31[5];
                  uint64_t v38 = ((char *)v32 - (char *)v37) >> 4;
                  unint64_t v39 = v38 + 1;
                  uint64_t v40 = (char *)v34 - (char *)v37;
                  if (v40 >> 3 > v39) {
                    unint64_t v39 = v40 >> 3;
                  }
                  else {
                    unint64_t v41 = v39;
                  }
                  if (v41) {
                    uint64_t v42 = (char *)sub_100037038(v33, v41);
                  }
                  else {
                    uint64_t v42 = 0LL;
                  }
                  double v43 = &v42[16 * v38];
                  *(_OWORD *)double v43 = *v19;
                  uint64_t v45 = v31[5];
                  __int16 v44 = v31[6];
                  unint64_t v46 = (uint64_t *)v43;
                  if (v44 != v45)
                  {
                    do
                    {
                      *((_OWORD *)v46 - 1) = *((_OWORD *)v44 - 1);
                      v46 -= 2;
                      v44 -= 2;
                    }

                    while (v44 != v45);
                    __int16 v44 = v31[5];
                  }

                  uint64_t v36 = (uint64_t *)(v43 + 16);
                  v31[5] = v46;
                  void v31[6] = (uint64_t *)(v43 + 16);
                  v31[7] = (uint64_t *)&v42[16 * v41];
                  if (v44) {
                    operator delete(v44);
                  }
                }

                else
                {
                  *(_OWORD *)__int128 v32 = *v19;
                  uint64_t v36 = v32 + 2;
                }

                void v31[6] = v36;
                goto LABEL_46;
              }

              ++i;
            }
          }

          memset(__p, 0, 24);
          uint64_t v23 = (char *)sub_100037038((uint64_t)&__p[2], 1uLL);
          *(_OWORD *)uint64_t v23 = *v19;
          uint64_t v26 = (char *)__p[0];
          unint64_t v25 = (char *)__p[1];
          double v27 = v23;
          if (__p[1] != __p[0])
          {
            do
            {
              *((_OWORD *)v27 - 1) = *((_OWORD *)v25 - 1);
              v27 -= 16;
              v25 -= 16;
            }

            while (v25 != v26);
            unint64_t v25 = (char *)__p[0];
          }

          uint64_t v28 = v23 + 16;
          __p[0] = v27;
          __p[1] = v23 + 16;
          __p[2] = &v23[16 * v24];
          if (v25) {
            operator delete(v25);
          }
          __p[1] = v28;
          *(void *)double v64 = (char *)&v61 + 4;
          float v29 = (char *)(sub_1004C2E20(&v62, (int *)&v61 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)v64) + 5);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }

void sub_1009751AC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
}

uint64_t sub_1009751F0( uint64_t a1, char a2, char a3, uint64_t a4, double a5, CLLocationDegrees a6, CLLocationDegrees a7, double a8)
{
  if ((a2 & 1) != 0
    || sub_100975710((double *)(a1 + 56), (double *)(a1 + 16), *(unsigned __int8 *)(a1 + 217), a6, a7, a8))
  {
    if ((a3 & 1) == 0)
    {
      *(double *)std::stringbuf::string_type buf = a8;
      double v16 = (double *)buf;
      int v17 = (double *)(a1 + 176);
      a8 = *v17;
    }

    if (sub_1009757C4(a5, a8, a6, a7))
    {
      if ((a3 & 1) == 0)
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101862CF0);
        }
        char v18 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
        {
          int v20 = *(_DWORD *)(a1 + 112);
          int v19 = *(_DWORD *)(a1 + 116);
          uint64_t v21 = *(void *)(a1 + 320);
          int v22 = *(unsigned __int8 *)(a1 + 224);
          int v23 = *(unsigned __int8 *)(a1 + 192);
          *(_DWORD *)std::stringbuf::string_type buf = 134351105;
          *(double *)&uint8_t buf[4] = a5;
          __int16 v55 = 2049;
          CLLocationDegrees v56 = a6;
          __int16 v57 = 2049;
          CLLocationDegrees v58 = a7;
          __int16 v59 = 2050;
          double v60 = a8;
          __int16 v61 = 1026;
          int v62 = v19;
          __int16 v63 = 1026;
          int v64 = v20;
          __int16 v65 = 2050;
          uint64_t v66 = v21;
          __int16 v67 = 1026;
          int v68 = v22;
          __int16 v69 = 1026;
          int v70 = v23;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "CLMM,CLTSP,Roads,%{public}.1lf,buffering map data,ll,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,maps APICalls,%{public}d,bufferCalls,%{public}d,connectionUsed,%{public}lu,queryInProgress,%{public}d,network,%{public}d",  buf,  0x4Cu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_101862CF0);
          }
          int v30 = *(_DWORD *)(a1 + 112);
          int v29 = *(_DWORD *)(a1 + 116);
          uint64_t v31 = *(void *)(a1 + 320);
          int v32 = *(unsigned __int8 *)(a1 + 224);
          int v33 = *(unsigned __int8 *)(a1 + 192);
          int v36 = 134351105;
          double v37 = a5;
          __int16 v38 = 2049;
          CLLocationDegrees v39 = a6;
          __int16 v40 = 2049;
          CLLocationDegrees v41 = a7;
          __int16 v42 = 2050;
          double v43 = a8;
          __int16 v44 = 1026;
          int v45 = v29;
          __int16 v46 = 1026;
          int v47 = v30;
          __int16 v48 = 2050;
          uint64_t v49 = v31;
          __int16 v50 = 1026;
          int v51 = v32;
          __int16 v52 = 1026;
          int v53 = v33;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,CLTSP,Roads,%{public}.1lf,buffering map data,ll,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,maps APICalls,%{public}d,bufferCalls,%{public}d,connectionUsed,%{public}lu,queryInProgress,%{public}d,network,%{public}d",  &v36,  76);
          double v35 = (char *)v34;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureRoadGeometryBuffer::bufferMapData(const CFAbsoluteTime, const double, const double, cons t double, const BOOL, const BOOL, const BOOL)",  "%s\n",  v34);
          if (v35 != buf) {
            free(v35);
          }
        }
      }
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      unint64_t v25 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134349825;
        *(double *)&uint8_t buf[4] = a5;
        __int16 v55 = 2049;
        CLLocationDegrees v56 = a6;
        __int16 v57 = 2049;
        CLLocationDegrees v58 = a7;
        __int16 v59 = 2050;
        double v60 = a8;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,Roads,%{public}.1lf,cacheRoadData,invalid input,ll,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf",  buf,  0x2Au);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101862CF0);
        }
        int v36 = 134349825;
        double v37 = a5;
        __int16 v38 = 2049;
        CLLocationDegrees v39 = a6;
        __int16 v40 = 2049;
        CLLocationDegrees v41 = a7;
        __int16 v42 = 2050;
        double v43 = a8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,CLTSP,Roads,%{public}.1lf,cacheRoadData,invalid input,ll,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf",  &v36,  42);
        uint64_t v28 = (char *)v27;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureRoadGeometryBuffer::bufferMapData(const CFAbsoluteTime, const double, const double, const double, const BOOL, const BOOL, const BOOL)",  "%s\n",  v27);
        if (v28 != buf) {
          free(v28);
        }
      }
    }

    uint64_t v24 = 0LL;
    goto LABEL_24;
  }

void sub_1009756E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

BOOL sub_100975710(double *a1, double *a2, int a3, double a4, double a5, double a6)
{
  if (!sub_1009757C4(*a1, a1[3], a1[1], a1[2])) {
    return 1LL;
  }
  double v12 = sub_100D2DBDC(a2, a4, a5, a1[1], a1[2], 0.0);
  double v13 = a1[3];
  if (a3) {
    return v12 >= v13 * 0.5;
  }
  double v15 = v13 * 0.9;
  return v12 > v15 && v12 + a6 >= v15;
}

BOOL sub_1009757C4(double a1, double a2, double a3, double a4)
{
  BOOL result = 0LL;
  if (a1 > 0.0 && a2 > 0.0)
  {
    if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
      || (*(void *)&a2 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
    {
      return 0LL;
    }

    else
    {
      return !sub_10029286C(a3, a4) && sub_1002954D0(a3, a4);
    }
  }

  return result;
}

uint64_t sub_100975850( uint64_t a1, uint64_t a2, double a3, CLLocationDegrees a4, CLLocationDegrees a5, double a6)
{
  if (*(_BYTE *)(a1 + 169))
  {
    uint64_t v12 = sub_1009786B0(a1, *(unsigned __int8 *)(a1 + 192), a2, a3, a4, a5, a6);
  }

  else
  {
    if (!*(void *)(a1 + 88))
    {
      uint64_t v13 = 0LL;
      goto LABEL_6;
    }

    uint64_t v12 = sub_100977318(a1, a2, a3, a4, a5, a6);
  }

  uint64_t v13 = v12;
LABEL_6:
  (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
  return v13;
}

void sub_100975920(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100975938(uint64_t a1, uint64_t a2, int a3, double a4, double a5, double a6)
{
  if (*(_BYTE *)(a1 + 216)
    && (double Current = CFAbsoluteTimeGetCurrent(), (sub_1009751F0(a1, 0, 0, 0LL, Current, a4, a5, a6) & 1) == 0))
  {
    uint64_t v13 = 0LL;
  }

  else
  {
    sub_100975A28((_BYTE *)a1, (void *)(a1 + 240), a2, a3, a4, a5, a6);
    uint64_t v13 = 1LL;
  }

  (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
  return v13;
}

void sub_100975A14(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100975A28(_BYTE *a1, void *a2, uint64_t a3, int a4, double a5, double a6, double a7)
{
  __int16 v48 = a1;
  (*(void (**)(_BYTE *))(*(void *)a1 + 16LL))(a1);
  __int16 v50 = 256;
  if (a1[224])
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    uint64_t v14 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "CLMM,CLTSP,map data requested while map data buffering was in progress",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      __int16 v47 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,CLTSP,map data requested while map data buffering was in progress",  &v47,  2);
      double v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureRoadGeometryBuffer::findRoadsNear(const double, const double, const double, const std::map<C LMapRoadKey, CLMapRoadPtr> &, std::vector<CLMapRoadPtr> &, const BOOL)",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }
  }

  else
  {
    sub_100976D40((uint64_t)a1);
  }

  if (!a4)
  {
    int v20 = *(char **)a3;
    *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 224), 8) = v20;
    int v23 = (__int128 *)*a2;
    uint64_t v21 = (__int128 *)(a2 + 1);
    int v22 = v23;
    if (v23 == v21) {
      goto LABEL_62;
    }
    while (1)
    {
      uint64_t v24 = *((void *)v22 + 6);
      if (v24)
      {
        unint64_t v25 = *(double **)(v24 + 136);
        if (*(void *)(v24 + 144) - (void)v25 < 0x11uLL)
        {
          if (GEOCalculateDistance(*v25, v25[1], a5, a6) <= a7) {
LABEL_27:
          }
            sub_1000E8F38((char **)a3, v22 + 3);
        }

        else
        {
          uint64_t v26 = 0LL;
          uint64_t v27 = -1LL;
          while (1)
          {
            uint64_t v28 = *(void *)(v24 + 136);
            GEOClosestCoordinateOnLineSegmentFromCoordinate( *(double *)(v28 + v26),  *(double *)(v28 + v26 + 8),  *(double *)(v28 + v26 + 16),  *(double *)(v28 + v26 + 24),  a5,  a6);
            v26 += 16LL;
            if (GEOCalculateDistance(v29, v30, a5, a6) <= a7) {
              goto LABEL_27;
            }
          }
        }
      }

      uint64_t v31 = (__int128 *)*((void *)v22 + 1);
      if (v31)
      {
        do
        {
          int v32 = v31;
          uint64_t v31 = *(__int128 **)v31;
        }

        while (v31);
      }

      else
      {
        do
        {
          int v32 = (__int128 *)*((void *)v22 + 2);
          BOOL v33 = *(void *)v32 == (void)v22;
          int v22 = v32;
        }

        while (!v33);
      }

      int v22 = v32;
      if (v32 == v21) {
        goto LABEL_62;
      }
    }
  }

  sub_101171D4C();
  sub_10097CC70((double *)buf, a5, a6, a7);
  char v18 = *(char **)a3;
  *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 224), 8) = v18;
  int v36 = (__int128 *)*a2;
  int v34 = (__int128 *)(a2 + 1);
  double v35 = v36;
  if (v36 == v34) {
    goto LABEL_62;
  }
  do
  {
    uint64_t v37 = *((void *)v35 + 6);
    if (!v37) {
      goto LABEL_56;
    }
    __int16 v38 = *(double **)(v37 + 136);
    CLLocationDegrees v39 = *(double **)(v37 + 144);
    if (v38 == v39) {
      goto LABEL_56;
    }
    while (1)
    {
      double v41 = v38[1];
      if (v54 <= v52) {
        break;
      }
      if (v54 >= v41 && v52 <= v41) {
        goto LABEL_55;
      }
LABEL_53:
      v38 += 2;
      if (v38 == v39) {
        goto LABEL_56;
      }
    }

    if (v54 >= v52) {
      goto LABEL_53;
    }
    if (v54 <= v41 && v52 >= v41) {
      goto LABEL_53;
    }
LABEL_55:
    sub_1000E8F38((char **)a3, v35 + 3);
LABEL_56:
    __int16 v44 = (__int128 *)*((void *)v35 + 1);
    if (v44)
    {
      do
      {
        int v45 = v44;
        __int16 v44 = *(__int128 **)v44;
      }

      while (v44);
    }

    else
    {
      do
      {
        int v45 = (__int128 *)*((void *)v35 + 2);
        BOOL v33 = *(void *)v45 == (void)v35;
        double v35 = v45;
      }

      while (!v33);
    }

    double v35 = v45;
  }

  while (v45 != v34);
LABEL_62:
  if (HIBYTE(v50))
  {
    if ((_BYTE)v50) {
      pthread_mutex_unlock(v49);
    }
    else {
      (*(void (**)(_BYTE *))(*(void *)v48 + 24LL))(v48);
    }
  }

  return 1LL;
}

void sub_100975E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_100975E78(uint64_t a1, uint64_t *a2, char **a3, int a4)
{
  uint64_t v7 = a1;
  uint64_t v82 = a1;
  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  __int16 v84 = 256;
  if (!*a2)
  {
    uint64_t v14 = 0LL;
    goto LABEL_116;
  }

  if (!sub_100974AF4(v7, (__int128 **)a2, 0, (uint64_t *)a3))
  {
    uint64_t v77 = 0LL;
    char v78 = 0LL;
    uint64_t v79 = 0LL;
    uint64_t v74 = 0LL;
    double v75 = 0LL;
    uint64_t v76 = 0LL;
    if (*(_BYTE *)(v7 + 216)
      && ((Current = CFAbsoluteTimeGetCurrent(), uint64_t v16 = *(void *)(*a2 + 144), v16 == *(void *)(*a2 + 136))
        ? (CLLocationDegrees v17 = 0.0, v18 = 0.0)
        : (CLLocationDegrees v17 = *(double *)(v16 - 16), v18 = *(double *)(v16 - 8)),
          (sub_1009751F0(v7, 0, 1, 0LL, Current, v17, v18, *(double *)(v7 + 160)) & 1) == 0))
    {
      uint64_t v14 = 0LL;
    }

    else
    {
      uint64_t v19 = *(void *)(*a2 + 144);
      if (v19 == *(void *)(*a2 + 136))
      {
        double v20 = 0.0;
        double v21 = 0.0;
      }

      else
      {
        double v20 = *(double *)(v19 - 16);
        double v21 = *(double *)(v19 - 8);
      }

      sub_100975A28((_BYTE *)v7, (void *)(v7 + 264), (uint64_t)&v77, 1, v20, v21, *(double *)(v7 + 160));
      uint64_t v22 = *(void *)(*a2 + 144);
      if (v22 == *(void *)(*a2 + 136))
      {
        double v23 = 0.0;
        double v24 = 0.0;
      }

      else
      {
        double v23 = *(double *)(v22 - 16);
        double v24 = *(double *)(v22 - 8);
      }

      sub_100975A28((_BYTE *)v7, (void *)(v7 + 240), (uint64_t)&v74, 1, v23, v24, *(double *)(v7 + 160));
      std::stringbuf::string_type __p = 0LL;
      uint64_t v72 = 0LL;
      uint64_t v73 = 0LL;
      int v25 = *(_DWORD *)(*a2 + 112);
      uint64_t v26 = (char *)sub_10000956C((uint64_t)&v73, 1uLL);
      *(_DWORD *)uint64_t v26 = v25;
      int v68 = a4;
      std::stringbuf::string_type __p = v26;
      uint64_t v73 = &v26[4 * v27];
      uint64_t v72 = v26 + 4;
      uint64_t v28 = v77;
      for (uint64_t i = v78; v28 != i; v28 += 2)
      {
        if (sub_1001AD06C(*a2, v28))
        {
          int v30 = *(_DWORD *)(*v28 + 112);
          uint64_t v31 = v72;
          if (v72 >= v73)
          {
            BOOL v33 = (char *)__p;
            uint64_t v34 = (v72 - (_BYTE *)__p) >> 2;
            unint64_t v35 = v34 + 1;
            uint64_t v36 = v73 - (_BYTE *)__p;
            if ((v73 - (_BYTE *)__p) >> 1 > v35) {
              unint64_t v35 = v36 >> 1;
            }
            else {
              unint64_t v37 = v35;
            }
            if (v37)
            {
              __int16 v38 = (char *)sub_10000956C((uint64_t)&v73, v37);
              BOOL v33 = (char *)__p;
              uint64_t v31 = v72;
            }

            else
            {
              __int16 v38 = 0LL;
            }

            CLLocationDegrees v39 = &v38[4 * v34];
            *(_DWORD *)CLLocationDegrees v39 = v30;
            int v32 = v39 + 4;
            while (v31 != v33)
            {
              int v40 = *((_DWORD *)v31 - 1);
              v31 -= 4;
              *((_DWORD *)v39 - 1) = v40;
              v39 -= 4;
            }

            std::stringbuf::string_type __p = v39;
            uint64_t v72 = v32;
            uint64_t v73 = &v38[4 * v37];
            if (v33) {
              operator delete(v33);
            }
          }

          else
          {
            *(_DWORD *)uint64_t v72 = v30;
            int v32 = v31 + 4;
          }

          uint64_t v72 = v32;
        }

        if ((*(_DWORD *)(v7 + 152) & 0xFFFFFFFE) == 2 && sub_1001AD104(*a2, v28))
        {
          int v41 = *(_DWORD *)(*v28 + 108);
          __int16 v42 = v72;
          if (v72 >= v73)
          {
            __int16 v44 = (char *)__p;
            uint64_t v45 = (v72 - (_BYTE *)__p) >> 2;
            unint64_t v46 = v45 + 1;
            uint64_t v47 = v73 - (_BYTE *)__p;
            if ((v73 - (_BYTE *)__p) >> 1 > v46) {
              unint64_t v46 = v47 >> 1;
            }
            else {
              unint64_t v48 = v46;
            }
            if (v48)
            {
              uint64_t v49 = (char *)sub_10000956C((uint64_t)&v73, v48);
              __int16 v44 = (char *)__p;
              __int16 v42 = v72;
            }

            else
            {
              uint64_t v49 = 0LL;
            }

            __int16 v50 = &v49[4 * v45];
            *(_DWORD *)__int16 v50 = v41;
            double v43 = v50 + 4;
            while (v42 != v44)
            {
              int v51 = *((_DWORD *)v42 - 1);
              v42 -= 4;
              *((_DWORD *)v50 - 1) = v51;
              v50 -= 4;
            }

            std::stringbuf::string_type __p = v50;
            uint64_t v72 = v43;
            uint64_t v73 = &v49[4 * v48];
            if (v44) {
              operator delete(v44);
            }
          }

          else
          {
            *(_DWORD *)uint64_t v72 = v41;
            double v43 = v42 + 4;
          }

          uint64_t v72 = v43;
        }
      }

      double v52 = (__int128 *)v74;
      double v53 = (__int128 *)v75;
      if (v74 != v75)
      {
        while (1)
        {
          uint64_t v54 = *(void *)v52;
          if (!*(void *)v52) {
            goto LABEL_91;
          }
          uint64_t v55 = *a2;
          if (*(void *)v54 == *(void *)*a2 && *(void *)(v54 + 8) == *(void *)(v55 + 8)) {
            goto LABEL_91;
          }
          int v56 = *(unsigned __int8 *)(v54 + 17);
          if (*(_BYTE *)(v55 + 17)) {
            break;
          }
          if (!v56) {
            goto LABEL_73;
          }
LABEL_91:
          if (++v52 == v53) {
            goto LABEL_99;
          }
        }

        if (!v56) {
          goto LABEL_91;
        }
LABEL_73:
        if (sub_1001AD06C(v55, (uint64_t *)v52)
          && sub_100292840(*(double *)(*a2 + 128), *(double *)(*(void *)v52 + 120LL), 1.0))
        {
          if (*(_BYTE *)(*a2 + 117)
            || (~*(_DWORD *)(*a2 + 112) & 0x7FFFFFFF) == 0
            || *(_BYTE *)(*(void *)v52 + 116LL)
            || (int v57 = *(_DWORD *)(*(void *)v52 + 108LL), (~v57 & 0x7FFFFFFF) == 0))
          {
LABEL_90:
            sub_1000E8F38(a3, v52);
            goto LABEL_91;
          }

          for (uint64_t j = (char *)__p; j != v72; j += 4)
          {
            if (*(_DWORD *)j == v57) {
              goto LABEL_90;
            }
          }
        }

        if ((*(_DWORD *)(v7 + 152) & 0xFFFFFFFE) != 2
          || !sub_1001AD104(*a2, (uint64_t *)v52)
          || !sub_100292840(*(double *)(*a2 + 128), *(double *)(*(void *)v52 + 128LL), 1.0))
        {
          goto LABEL_91;
        }

        if (!*(_BYTE *)(*a2 + 117)
          && (~*(_DWORD *)(*a2 + 112) & 0x7FFFFFFF) != 0
          && !*(_BYTE *)(*(void *)v52 + 117LL))
        {
          int v59 = *(_DWORD *)(*(void *)v52 + 112LL);
          if ((~v59 & 0x7FFFFFFF) != 0)
          {
            for (unint64_t k = (char *)__p; k != v72; k += 4)
            {
              if (*(_DWORD *)k == v59) {
                goto LABEL_90;
              }
            }

            goto LABEL_91;
          }
        }

        goto LABEL_90;
      }

void sub_1009764E4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char **__p, char **a14, uint64_t a15, char *a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20, uint64_t a21, char a22)
{
  if (__p)
  {
    a14 = __p;
    operator delete(__p);
  }

  std::stringbuf::string_type __p = &a16;
  sub_10004CC28((void ***)&__p);
  a16 = &a19;
  sub_10004CC28((void ***)&a16);
  sub_1011C52D0(v22 - 104);
  _Unwind_Resume(a1);
}

uint64_t sub_100976580(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(uint64_t **)a2;
  if (*(void *)a2 != *(void *)(a2 + 8))
  {
    uint64_t v4 = (uint64_t *)result;
    for (uint64_t i = -(uint64_t)v2; ; i -= 16LL)
    {
      BOOL result = sub_1001ACF04(*v2, v4);
      if ((_DWORD)result) {
        break;
      }
      v2 += 2;
    }

    uint64_t v6 = -i;
    BOOL result = 16 - i;
    uint64_t v7 = *(void *)(a2 + 8);
    if (result != v7)
    {
      do
      {
        uint64_t v8 = v6 + 16;
        sub_10005F550(v6, (__int128 *)(v6 + 16));
        uint64_t v9 = v6 + 32;
        v6 += 16LL;
      }

      while (v9 != v7);
      BOOL result = *(void *)(a2 + 8);
      uint64_t v6 = v8;
    }

    while (result != v6)
      BOOL result = sub_10000AE14(result - 16);
    *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = v6;
  }

  return result;
}

uint64_t sub_100976638(uint64_t a1, uint64_t *a2, char **a3, int a4)
{
  uint64_t v7 = a1;
  uint64_t v82 = a1;
  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  __int16 v84 = 256;
  if (!*a2)
  {
    uint64_t v14 = 0LL;
    goto LABEL_116;
  }

  if (!sub_100974AF4(v7, (__int128 **)a2, 1u, (uint64_t *)a3))
  {
    uint64_t v77 = 0LL;
    char v78 = 0LL;
    uint64_t v79 = 0LL;
    uint64_t v74 = 0LL;
    double v75 = 0LL;
    uint64_t v76 = 0LL;
    if (*(_BYTE *)(v7 + 216)
      && ((Current = CFAbsoluteTimeGetCurrent(), uint64_t v16 = *(double **)(*a2 + 136), *(double **)(*a2 + 144) == v16)
        ? (CLLocationDegrees v17 = 0.0, v18 = 0.0)
        : (CLLocationDegrees v17 = *v16, v18 = v16[1]),
          (sub_1009751F0(v7, 0, 1, 0LL, Current, v17, v18, *(double *)(v7 + 160)) & 1) == 0))
    {
      uint64_t v14 = 0LL;
    }

    else
    {
      uint64_t v19 = *(double **)(*a2 + 136);
      if (*(double **)(*a2 + 144) == v19)
      {
        double v20 = 0.0;
        double v21 = 0.0;
      }

      else
      {
        double v20 = *v19;
        double v21 = v19[1];
      }

      sub_100975A28((_BYTE *)v7, (void *)(v7 + 264), (uint64_t)&v77, 1, v20, v21, *(double *)(v7 + 160));
      uint64_t v22 = *(double **)(*a2 + 136);
      if (*(double **)(*a2 + 144) == v22)
      {
        double v23 = 0.0;
        double v24 = 0.0;
      }

      else
      {
        double v23 = *v22;
        double v24 = v22[1];
      }

      sub_100975A28((_BYTE *)v7, (void *)(v7 + 240), (uint64_t)&v74, 1, v23, v24, *(double *)(v7 + 160));
      std::stringbuf::string_type __p = 0LL;
      uint64_t v72 = 0LL;
      uint64_t v73 = 0LL;
      int v25 = *(_DWORD *)(*a2 + 108);
      uint64_t v26 = (char *)sub_10000956C((uint64_t)&v73, 1uLL);
      *(_DWORD *)uint64_t v26 = v25;
      int v68 = a4;
      std::stringbuf::string_type __p = v26;
      uint64_t v73 = &v26[4 * v27];
      uint64_t v72 = v26 + 4;
      uint64_t v28 = v77;
      for (uint64_t i = v78; v28 != i; v28 += 2)
      {
        if (sub_1001AD020(*a2, v28))
        {
          int v30 = *(_DWORD *)(*v28 + 108);
          uint64_t v31 = v72;
          if (v72 >= v73)
          {
            BOOL v33 = (char *)__p;
            uint64_t v34 = (v72 - (_BYTE *)__p) >> 2;
            unint64_t v35 = v34 + 1;
            uint64_t v36 = v73 - (_BYTE *)__p;
            if ((v73 - (_BYTE *)__p) >> 1 > v35) {
              unint64_t v35 = v36 >> 1;
            }
            else {
              unint64_t v37 = v35;
            }
            if (v37)
            {
              __int16 v38 = (char *)sub_10000956C((uint64_t)&v73, v37);
              BOOL v33 = (char *)__p;
              uint64_t v31 = v72;
            }

            else
            {
              __int16 v38 = 0LL;
            }

            CLLocationDegrees v39 = &v38[4 * v34];
            *(_DWORD *)CLLocationDegrees v39 = v30;
            int v32 = v39 + 4;
            while (v31 != v33)
            {
              int v40 = *((_DWORD *)v31 - 1);
              v31 -= 4;
              *((_DWORD *)v39 - 1) = v40;
              v39 -= 4;
            }

            std::stringbuf::string_type __p = v39;
            uint64_t v72 = v32;
            uint64_t v73 = &v38[4 * v37];
            if (v33) {
              operator delete(v33);
            }
          }

          else
          {
            *(_DWORD *)uint64_t v72 = v30;
            int v32 = v31 + 4;
          }

          uint64_t v72 = v32;
        }

        if ((*(_DWORD *)(v7 + 152) & 0xFFFFFFFE) == 2 && sub_1001AD0B8(*a2, v28))
        {
          int v41 = *(_DWORD *)(*v28 + 112);
          __int16 v42 = v72;
          if (v72 >= v73)
          {
            __int16 v44 = (char *)__p;
            uint64_t v45 = (v72 - (_BYTE *)__p) >> 2;
            unint64_t v46 = v45 + 1;
            uint64_t v47 = v73 - (_BYTE *)__p;
            if ((v73 - (_BYTE *)__p) >> 1 > v46) {
              unint64_t v46 = v47 >> 1;
            }
            else {
              unint64_t v48 = v46;
            }
            if (v48)
            {
              uint64_t v49 = (char *)sub_10000956C((uint64_t)&v73, v48);
              __int16 v44 = (char *)__p;
              __int16 v42 = v72;
            }

            else
            {
              uint64_t v49 = 0LL;
            }

            __int16 v50 = &v49[4 * v45];
            *(_DWORD *)__int16 v50 = v41;
            double v43 = v50 + 4;
            while (v42 != v44)
            {
              int v51 = *((_DWORD *)v42 - 1);
              v42 -= 4;
              *((_DWORD *)v50 - 1) = v51;
              v50 -= 4;
            }

            std::stringbuf::string_type __p = v50;
            uint64_t v72 = v43;
            uint64_t v73 = &v49[4 * v48];
            if (v44) {
              operator delete(v44);
            }
          }

          else
          {
            *(_DWORD *)uint64_t v72 = v41;
            double v43 = v42 + 4;
          }

          uint64_t v72 = v43;
        }
      }

      double v52 = (__int128 *)v74;
      double v53 = (__int128 *)v75;
      if (v74 != v75)
      {
        while (1)
        {
          uint64_t v54 = *(void *)v52;
          if (!*(void *)v52) {
            goto LABEL_91;
          }
          uint64_t v55 = *a2;
          if (*(void *)v54 == *(void *)*a2 && *(void *)(v54 + 8) == *(void *)(v55 + 8)) {
            goto LABEL_91;
          }
          int v56 = *(unsigned __int8 *)(v54 + 17);
          if (*(_BYTE *)(v55 + 17)) {
            break;
          }
          if (!v56) {
            goto LABEL_73;
          }
LABEL_91:
          if (++v52 == v53) {
            goto LABEL_99;
          }
        }

        if (!v56) {
          goto LABEL_91;
        }
LABEL_73:
        if (sub_1001AD020(v55, (uint64_t *)v52)
          && sub_100292840(*(double *)(*a2 + 120), *(double *)(*(void *)v52 + 128LL), 1.0))
        {
          if (*(_BYTE *)(*a2 + 116)
            || (~*(_DWORD *)(*a2 + 108) & 0x7FFFFFFF) == 0
            || *(_BYTE *)(*(void *)v52 + 117LL)
            || (int v57 = *(_DWORD *)(*(void *)v52 + 112LL), (~v57 & 0x7FFFFFFF) == 0))
          {
LABEL_90:
            sub_1000E8F38(a3, v52);
            goto LABEL_91;
          }

          for (uint64_t j = (char *)__p; j != v72; j += 4)
          {
            if (*(_DWORD *)j == v57) {
              goto LABEL_90;
            }
          }
        }

        if ((*(_DWORD *)(v7 + 152) & 0xFFFFFFFE) != 2
          || !sub_1001AD0B8(*a2, (uint64_t *)v52)
          || !sub_100292840(*(double *)(*a2 + 120), *(double *)(*(void *)v52 + 120LL), 1.0))
        {
          goto LABEL_91;
        }

        if (!*(_BYTE *)(*a2 + 116)
          && (~*(_DWORD *)(*a2 + 108) & 0x7FFFFFFF) != 0
          && !*(_BYTE *)(*(void *)v52 + 116LL))
        {
          int v59 = *(_DWORD *)(*(void *)v52 + 108LL);
          if ((~v59 & 0x7FFFFFFF) != 0)
          {
            for (unint64_t k = (char *)__p; k != v72; k += 4)
            {
              if (*(_DWORD *)k == v59) {
                goto LABEL_90;
              }
            }

            goto LABEL_91;
          }
        }

        goto LABEL_90;
      }

void sub_100976CA4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char **__p, char **a14, uint64_t a15, char *a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20, uint64_t a21, char a22)
{
  if (__p)
  {
    a14 = __p;
    operator delete(__p);
  }

  std::stringbuf::string_type __p = &a16;
  sub_10004CC28((void ***)&__p);
  a16 = &a19;
  sub_10004CC28((void ***)&a16);
  sub_1011C52D0(v22 - 104);
  _Unwind_Resume(a1);
}

void sub_100976D40(uint64_t a1)
{
  uint64_t v27 = a1;
  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  __int16 v29 = 256;
  uint64_t v2 = *(uint64_t **)(a1 + 328);
  uint64_t v3 = *(uint64_t **)(a1 + 336);
  if (v2 == v3) {
    goto LABEL_32;
  }
  int v25 = 0LL;
  uint64_t v26 = 0LL;
  double v24 = (uint64_t *)&v25;
  do
  {
    uint64_t v4 = (unint64_t *)*v2;
    *(_OWORD *)std::stringbuf::string_type buf = *(_OWORD *)*v2;
    uint8_t buf[16] = 1;
    sub_10097DE68(&v24, (unint64_t *)buf, (uint64_t)buf);
    if (sub_10097C788(a1 + 240, v4) || sub_10097C788(a1 + 264, v4)) {
      goto LABEL_5;
    }
    if (sub_1001AD150(*v2))
    {
      *(_OWORD *)std::stringbuf::string_type buf = *(_OWORD *)v4;
      *(void *)&uint8_t buf[16] = *v2;
      uint64_t v5 = v2[1];
      unint64_t v35 = (std::__shared_weak_count *)v5;
      if (v5)
      {
        uint64_t v6 = (unint64_t *)(v5 + 8);
        do
          unint64_t v7 = __ldxr(v6);
        while (__stxr(v7 + 1, v6));
      }

      sub_10097DEF0((uint64_t **)(a1 + 240), (unint64_t *)buf, (uint64_t)buf);
      uint64_t v8 = v35;
      if (v35)
      {
        p_shared_owners = (unint64_t *)&v35->__shared_owners_;
        do
          unint64_t v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        goto LABEL_21;
      }
    }

    else
    {
      *(_OWORD *)std::stringbuf::string_type buf = *(_OWORD *)v4;
      *(void *)&uint8_t buf[16] = *v2;
      uint64_t v11 = v2[1];
      unint64_t v35 = (std::__shared_weak_count *)v11;
      if (v11)
      {
        uint64_t v12 = (unint64_t *)(v11 + 8);
        do
          unint64_t v13 = __ldxr(v12);
        while (__stxr(v13 + 1, v12));
      }

      sub_10097DEF0((uint64_t **)(a1 + 264), (unint64_t *)buf, (uint64_t)buf);
      uint64_t v8 = v35;
      if (v35)
      {
        uint64_t v14 = (unint64_t *)&v35->__shared_owners_;
        do
          unint64_t v10 = __ldaxr(v14);
        while (__stlxr(v10 - 1, v14));
LABEL_21:
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
    }

void sub_100977114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void *);
  uint64_t v7 = va_arg(va1, void);
  sub_100008390((uint64_t)va, v6);
  sub_1011C52D0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_100977164(uint64_t a1, void *a2)
{
  int v4 = *(_DWORD *)(a1 + 152);
  if (v4 == 1)
  {
    int v4 = *(_DWORD *)(a1 + 152);
  }

  if (v4 == 2)
  {
    if (!a2) {
      return 0LL;
    }
    unsigned int v5 = [a2 isRoadPedestrianNavigable];
    unsigned int v6 = [a2 walkableSide];
    unsigned int v7 = [a2 isRail];
    if (((v6 - 1 > 2) & ~v5) == 0 && !v7) {
      return 1LL;
    }
    int v4 = *(_DWORD *)(a1 + 152);
  }

  uint64_t result = 0LL;
  if (a2 && v4 == 3)
  {
    unsigned int v9 = [a2 isRoadPedestrianNavigable];
    unsigned int v10 = [a2 walkableSide];
    unsigned int v11 = [a2 isRail];
    if (((v10 - 1 > 2) & ~v9) == 0 && !v11) {
      return 1LL;
    }
    unsigned int v12 = [a2 bikeableSide];
    unsigned int v13 = [a2 isRail] ^ 1;
    if (v12 - 1 < 3) {
      return v13;
    }
    else {
      return 0LL;
    }
  }

  return result;
}

void sub_10097726C(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a1 + 1);
  uint64_t v2 = *a1;
  if (*a1 != (uint64_t *)(a1 + 1))
  {
    do
    {
      if (sub_10097C788(a2, (unint64_t *)v2 + 4))
      {
        unsigned int v6 = (uint64_t *)v2[1];
        if (v6)
        {
          do
          {
            unsigned int v7 = v6;
            unsigned int v6 = (uint64_t *)*v6;
          }

          while (v6);
        }

        else
        {
          do
          {
            unsigned int v7 = (uint64_t *)v2[2];
            BOOL v8 = *v7 == (void)v2;
            uint64_t v2 = v7;
          }

          while (!v8);
        }
      }

      else
      {
        unsigned int v7 = sub_1000087E8(a1, v2);
        sub_10000AE14((uint64_t)(v2 + 6));
        operator delete(v2);
      }

      uint64_t v2 = v7;
    }

    while (v7 != v3);
  }

uint64_t sub_100977318(uint64_t a1, char a2, double a3, double a4, double a5, double a6)
{
  if (!*(void *)(a1 + 88)) {
    return 0LL;
  }
  if (*(_BYTE *)(a1 + 224))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    unsigned int v7 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "CLMM,CLTSP,road data query already in progress using maps API",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      LOWORD(v32[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  1LL,  "CLMM,CLTSP,road data query already in progress using maps API",  v32,  2);
      uint64_t v22 = (uint8_t *)v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureRoadGeometryBuffer::queryUsingLocalMapsAPIObject(const double, const double, const double, c onst double, const BOOL)",  "%s\n",  v21);
      if (v22 != buf) {
        free(v22);
      }
    }

    return 0LL;
  }

  uint64_t v39 = a1;
  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  __int16 v40 = 256;
  double v14 = sub_101171D4C();
  double v15 = objc_autoreleasePoolPush();
  uint64_t v34 = 0LL;
  unint64_t v35 = &v34;
  uint64_t v36 = 0x3052000000LL;
  unint64_t v37 = sub_100977870;
  __int16 v38 = sub_100977880;
  int v16 = *(unsigned __int8 *)(a1 + 216);
  if (*(_BYTE *)(a1 + 216)) {
    v35[5] = (uint64_t)dispatch_semaphore_create(0LL);
  }
  v32[0] = 0LL;
  v32[1] = v32;
  v32[2] = 0x4812000000LL;
  uint64_t v32[3] = sub_10097788C;
  v32[4] = sub_1009778B0;
  v32[5] = &unk_10175E27B;
  memset(v33, 0, sizeof(v33));
  v30[0] = 0LL;
  v30[1] = v30;
  v30[2] = 0x2020000000LL;
  int v31 = 0;
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472LL;
  v29[2] = sub_1009778D8;
  v29[3] = &unk_101862C30;
  v29[5] = v32;
  v29[6] = a1;
  v29[4] = v30;
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  void v26[2] = sub_1009780FC;
  v26[3] = &unk_101862C58;
  *(double *)&v26[8] = a3;
  *(double *)&v26[9] = a6;
  *(double *)&v26[10] = a4;
  *(double *)&v26[11] = a5;
  *(double *)&v26[12] = v14;
  char v27 = a2;
  v26[4] = v30;
  v26[5] = v32;
  char v28 = v16;
  v26[6] = &v34;
  v26[7] = a1;
  ++*(_DWORD *)(a1 + 116);
  *(_BYTE *)(a1 + 224) = 1;
  objc_msgSend(*(id *)(a1 + 88), "findRoadsNear:radius:handler:completionHandler:", v29, v26, a4, a5, a6);
  if (!v16) {
    goto LABEL_21;
  }
  uint64_t v17 = dispatch_semaphore_wait((dispatch_semaphore_t)v35[5], 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v18 = (dispatch_object_s *)v35[5];
  if (v18) {
    dispatch_release(v18);
  }
  if (v17)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    uint64_t v19 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,Roads,queryForRoadsWithinDistance,semaphore timed out",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      __int16 v25 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,CLTSP,Roads,queryForRoadsWithinDistance,semaphore timed out",  &v25,  2);
      double v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureRoadGeometryBuffer::queryUsingLocalMapsAPIObject(const double, const double, const double, c onst double, const BOOL)",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
    }

    uint64_t v8 = 0LL;
  }

  else
  {
LABEL_21:
    uint64_t v8 = 1LL;
  }

  _Block_object_dispose(v30, 8);
  _Block_object_dispose(v32, 8);
  *(void *)std::stringbuf::string_type buf = v33;
  sub_10004CC28((void ***)buf);
  _Block_object_dispose(&v34, 8);
  objc_autoreleasePoolPop(v15);
  (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
  return v8;
}

void sub_100977804( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, char a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,void **a55)
{
}

void sub_100977870(uint64_t a1, uint64_t a2)
{
}

void sub_100977880(uint64_t a1)
{
}

__n128 sub_10097788C(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0LL;
  a1[3].n128_u64[1] = 0LL;
  a1[4].n128_u64[0] = 0LL;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0LL;
  a2[3].n128_u64[1] = 0LL;
  a2[4].n128_u64[0] = 0LL;
  return result;
}

void sub_1009778B0(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 48);
  sub_10004CC28(&v1);
}

void sub_1009778D8(void *a1, void *a2)
{
  if (a2)
  {
    uint64_t v3 = a1[6];
    id v4 = a2;
    if (v4)
    {
      unsigned int v5 = v4;
      if (sub_100977164(v3, v4))
      {
        v6.n128_f64[0] = sub_1009779E8(v5, 0, (std::string **)&v11);
        *(_DWORD *)(*(void *)(a1[4] + 8LL) + 24LL) += 208;
        if ((void)v11)
        {
          if (*(_DWORD *)(v3 + 152) != 1)
          {
            int v7 = *(_DWORD *)(v11 + 104);
            if (v7 >= 1) {
              *(double *)(v11 + 96) = (double)v7 * 3.7;
            }
          }

          sub_1000E8F38((char **)(*(void *)(a1[5] + 8LL) + 48LL), &v11);
        }

        uint64_t v8 = (std::__shared_weak_count *)*((void *)&v11 + 1);
        if (*((void *)&v11 + 1))
        {
          unsigned int v9 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
          do
            unint64_t v10 = __ldaxr(v9);
          while (__stlxr(v10 - 1, v9));
          if (!v10)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v8->__on_zero_shared)(v8, v6);
            std::__shared_weak_count::__release_weak(v8);
          }
        }
      }
    }
  }

void sub_1009779D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_1009779E8@<D0>(void *a1@<X1>, int a2@<W2>, std::string **a3@<X8>)
{
  if (!a1)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    uint64_t v17 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "CLMM,GEOMapFeatureRoad is null",  (uint8_t *)buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_23;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    LOWORD(v5_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,GEOMapFeatureRoad is null",  &v58,  2);
    unint64_t v10 = (std::string *)v57;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLMapRoadPtr CLGeoMapFeatureAccessGeometryCommon::makeRoadFromGEOMapFeatureRoad(CLDistanceCalc &, GEOMapFeatureRoa d * _Nonnull, BOOL)",  "%s\n",  v57);
    if (v10 == buf) {
      goto LABEL_23;
    }
LABEL_52:
    free(v10);
LABEL_23:
    *a3 = 0LL;
    a3[1] = 0LL;
    return result;
  }

  char v4 = a2;
  if (a2 && (unint64_t)[a1 coordinateCount] <= 1)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    __n128 v6 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 134283777;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)[a1 roadID];
      WORD2(buf[0].__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)[a1 coordinateCount];
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "#Warning CLMM, GEOMapFeatureRoad id,%{private}lld,has less than two coordinate,%{public}ld",  (uint8_t *)buf,  0x16u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_23;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    uint64_t v8 = qword_1019348B8;
    int v58 = 134283777;
    id v59 = [a1 roadID];
    __int16 v60 = 2050;
    id v61 = [a1 coordinateCount];
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  2LL,  "#Warning CLMM, GEOMapFeatureRoad id,%{private}lld,has less than two coordinate,%{public}ld",  &v58,  22);
    unint64_t v10 = (std::string *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMapRoadPtr CLGeoMapFeatureAccessGeometryCommon::makeRoadFromGEOMapFeatureRoad(CLDistanceCalc &, GEOMapFeatureRoa d * _Nonnull, BOOL)",  "%s\n",  v9);
    if (v10 == buf) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }

  sub_1009792A0(a3);
  if ([a1 internalRoadName])
  {
    __int128 v11 = *a3;
    sub_1010DDBC0(buf, (char *)objc_msgSend(objc_msgSend(a1, "internalRoadName"), "UTF8String"));
    std::string::operator=(v11 + 2, buf);
  }

  unsigned int v12 = *a3;
  id v13 = [a1 roadID];
  unint64_t v14 = sub_10097CCC4(a1);
  v12->__r_.__value_.__r.__words[0] = (std::string::size_type)v13;
  v12->__r_.__value_.__l.__size_ = v14;
  double v15 = *a3;
  BOOL v16 = ([a1 isRail] & 1) != 0 || objc_msgSend(a1, "travelDirection") == 0;
  v15->__r_.__value_.__s.__data_[16] = !v16;
  uint64_t v18 = *a3;
  v18->__r_.__value_.__s.__data_[17] = [a1 isRail];
  uint64_t v19 = *a3;
  v19->__r_.__value_.__s.__data_[18] = [a1 isTunnel];
  uint64_t v20 = *a3;
  v20->__r_.__value_.__s.__data_[19] = [a1 isBridge];
  uint64_t v21 = *a3;
  HIDWORD(v21->__r_.__value_.__r.__words[2]) = [a1 roadClass];
  uint64_t v22 = *a3;
  LODWORD(v22[1].__r_.__value_.__l.__data_) = [a1 formOfWay];
  double v23 = *a3;
  LODWORD(v23[3].__r_.__value_.__l.__data_) = [a1 travelDirection];
  double v24 = *a3;
  HIDWORD(v24[3].__r_.__value_.__r.__words[0]) = [a1 rampType];
  __int16 v25 = *a3;
  unsigned __int8 v26 = [a1 isRoadPedestrianNavigable];
  unsigned int v27 = [a1 walkableSide];
  unsigned __int8 v28 = [a1 isRail];
  if (v27 - 1 < 3) {
    char v29 = 1;
  }
  else {
    char v29 = v26;
  }
  v25[3].__r_.__value_.__s.__data_[8] = v29 & (v28 ^ 1);
  int v30 = *a3;
  v30[3].__r_.__value_.__s.__data_[9] = [a1 isDrivable];
  int v31 = *a3;
  LODWORD(v3sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = [a1 isRoadPedestrianNavigable];
  unsigned int v32 = [a1 walkableSide];
  unsigned int v33 = [a1 isRail];
  if (((v32 - 1 > 2) & ~(_DWORD)v30) != 0 || ((v33 ^ 1) & 1) == 0)
  {
    unsigned int v35 = [a1 bikeableSide];
    unsigned int v34 = [a1 isRail] ^ 1;
    if (v35 - 1 >= 3) {
      LOBYTE(v34) = 0;
    }
  }

  else
  {
    LOBYTE(v34) = 1;
  }

  v31[3].__r_.__value_.__s.__data_[10] = v34;
  uint64_t v36 = *a3;
  HIDWORD(v36[3].__r_.__value_.__r.__words[1]) = [a1 walkableSide];
  unint64_t v37 = *a3;
  HIDWORD(v37[4].__r_.__value_.__r.__words[1]) = objc_msgSend( objc_msgSend(a1, "startJunction"),  "junctionIndex");
  __int16 v38 = *a3;
  LODWORD(v38[4].__r_.__value_.__r.__words[2]) = objc_msgSend( objc_msgSend(a1, "endJunction"),  "junctionIndex");
  uint64_t v39 = *a3;
  v39[4].__r_.__value_.__s.__data_[20] = objc_msgSend( objc_msgSend(a1, "startJunction"),  "isOnTileBorder");
  __int16 v40 = *a3;
  v40[4].__r_.__value_.__s.__data_[21] = objc_msgSend( objc_msgSend(a1, "endJunction"),  "isOnTileBorder");
  int v41 = *a3;
  unsigned int v42 = [a1 roadClass];
  unsigned int v43 = [a1 travelDirection];
  if (v42 > 7)
  {
    double v45 = dbl_1012E00F0[v43 == 0];
  }

  else
  {
    __int16 v44 = (double *)&unk_101341AC8;
    if (!v43) {
      __int16 v44 = (double *)&unk_101341B08;
    }
    double v45 = v44[v42];
  }

  *(double *)&v41[4].__r_.__value_.__l.__data_ = v45;
  unsigned int v46 = [a1 speedLimitIsMPH];
  uint64_t v47 = *a3;
  id v48 = [a1 speedLimit];
  double v49 = 0.277778;
  if (v46) {
    double v49 = 0.44704;
  }
  *(double *)&v47[1].__r_.__value_.__l.__size_ = v49 * (double)(unint64_t)v48;
  __int16 v50 = *a3;
  LODWORD(v50[4].__r_.__value_.__r.__words[1]) = [a1 laneCount];
  int v51 = *a3;
  uint64_t v52 = 0LL;
  unint64_t v53 = 0LL;
  LODWORD(v51[3].__r_.__value_.__r.__words[2]) = [a1 bikeableSide];
  while ((unint64_t)[a1 coordinateCount] > v53)
  {
    sub_1001ABF24(*a3, (double *)((char *)[a1 coordinates] + v52), 1);
    ++v53;
    v52 += 16LL;
  }

  if ((v4 & 1) == 0 && [a1 coordinateCount] == (id)1) {
    sub_1001ABF24(*a3, (double *)[a1 coordinates], 0);
  }
  if ([a1 coordinateCount])
  {
    uint64_t v54 = *a3;
    v54[5].__r_.__value_.__r.__words[0] = *((void *)[a1 coordinates3d] + 2);
    uint64_t v55 = *a3;
    int v56 = (double *)[a1 coordinates3d];
    double result = v56[3 * (void)[a1 coordinateCount] - 1];
    *(double *)&v55[5].__r_.__value_.__l.__size_ = result;
  }

  return result;
}

void sub_1009780BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  sub_10000AE14(v20);
  _Unwind_Resume(a1);
}

uint64_t sub_1009780FC(uint64_t a1, void *a2)
{
  char v4 = *(int32x2_t **)(a1 + 56);
  if (a2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    unsigned int v5 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349571;
      *(void *)unint64_t v63 = [a2 code];
      *(_WORD *)&v63[8] = 2114;
      *(void *)int v64 = [a2 domain];
      *(_WORD *)&v64[8] = 2113;
      *(void *)__int16 v65 = [a2 localizedDescription];
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "CLMM,CLTSP,Roads,Warning,GEOMapFeatureAccessRequest reported errorcode,%{public}lld,domain,%{public}@,descriptio n,%{private}@",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      uint64_t v24 = qword_1019348B8;
      int v42 = 134349571;
      *(void *)unsigned int v43 = [a2 code];
      *(_WORD *)&v43[8] = 2114;
      *(void *)__int16 v44 = [a2 domain];
      *(_WORD *)&v44[8] = 2113;
      *(void *)double v45 = [a2 localizedDescription];
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v24,  0LL,  "CLMM,CLTSP,Roads,Warning,GEOMapFeatureAccessRequest reported errorcode,%{public}lld,domain,%{public}@,descriptio n,%{private}@",  &v42,  32);
      unsigned __int8 v26 = (uint8_t *)v25;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureRoadGeometryBuffer::queryUsingLocalMapsAPIObject(const double, const double, const double, c onst double, const BOOL)_block_invoke",  "%s\n",  v25);
      if (v26 != buf) {
        free(v26);
      }
    }

    v4[15] = vadd_s32(v4[15], (int32x2_t)0x100000001LL);
  }

  else
  {
    double v7 = *(double *)(a1 + 64);
    double v6 = *(double *)(a1 + 72);
    double v8 = *(double *)(a1 + 80);
    double v9 = *(double *)(a1 + 88);
    if (sub_1009757C4(v7, v6, v8, v9))
    {
      *(double *)&v4[7] = v7;
      *(double *)&v4[8] = v8;
      *(double *)&v4[9] = v9;
      *(double *)&v4[10] = v6;
    }

    v4[15].i32[1] = 0;
  }

  if (*(double *)(a1 + 72) > 0.5)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    unint64_t v10 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
    {
      int v11 = v4[35].i32[0] + v4[32].i32[0];
      int v12 = *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
      double v13 = 0.0;
      uint64_t v15 = *(void *)(a1 + 80);
      uint64_t v14 = *(void *)(a1 + 88);
      uint64_t v16 = *(void *)(a1 + 72);
      int32x2_t v17 = v4[40];
      __int32 v19 = v4[14].i32[0];
      __int32 v18 = v4[14].i32[1];
      __int32 v20 = v4[15].i32[0];
      __int32 v21 = v4[15].i32[1];
      *(_DWORD *)std::stringbuf::string_type buf = 67243009;
      *(_DWORD *)unint64_t v63 = v11;
      *(_WORD *)&v63[4] = 1026;
      *(_DWORD *)&v63[6] = v12;
      *(_WORD *)int v64 = 2050;
      *(double *)&void v64[2] = v13;
      *(_WORD *)__int16 v65 = 2049;
      *(void *)&v65[2] = v15;
      __int16 v66 = 2049;
      uint64_t v67 = v14;
      __int16 v68 = 2050;
      uint64_t v69 = v16;
      __int16 v70 = 1026;
      BOOL v71 = a2 != 0LL;
      __int16 v72 = 1026;
      __int32 v73 = v18;
      __int16 v74 = 2050;
      int32x2_t v75 = v17;
      __int16 v76 = 1026;
      __int32 v77 = v19;
      __int16 v78 = 1026;
      __int32 v79 = v20;
      __int16 v80 = 1026;
      __int32 v81 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CLMM,CLTSP,Roads,bufferDataUsingMapsAPI,roadCount,%{public}d,sizeOfRoad,%{public}d,responseTime,%{public}.1lf,LL ,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,error,%{public}d,apiCalls,%{public}d,connectionBufferUsedCou nt,%{public}lu,bufferDataCalls,%{public}d,bufferingFailedCount,%{public}d,consecutiveBufferingFailed,%{public}d",  buf,  0x5Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      uint64_t v27 = qword_1019348B8;
      int v28 = v4[35].i32[0] + v4[32].i32[0];
      int v29 = *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
      double v30 = 0.0;
      uint64_t v32 = *(void *)(a1 + 80);
      uint64_t v31 = *(void *)(a1 + 88);
      uint64_t v33 = *(void *)(a1 + 72);
      int32x2_t v34 = v4[40];
      __int32 v36 = v4[14].i32[0];
      __int32 v35 = v4[14].i32[1];
      __int32 v37 = v4[15].i32[0];
      __int32 v38 = v4[15].i32[1];
      int v42 = 67243009;
      *(_DWORD *)unsigned int v43 = v28;
      *(_WORD *)&v43[4] = 1026;
      *(_DWORD *)&v43[6] = v29;
      *(_WORD *)__int16 v44 = 2050;
      *(double *)&v44[2] = v30;
      *(_WORD *)double v45 = 2049;
      *(void *)&v45[2] = v32;
      __int16 v46 = 2049;
      uint64_t v47 = v31;
      __int16 v48 = 2050;
      uint64_t v49 = v33;
      __int16 v50 = 1026;
      BOOL v51 = a2 != 0LL;
      __int16 v52 = 1026;
      __int32 v53 = v35;
      __int16 v54 = 2050;
      int32x2_t v55 = v34;
      __int16 v56 = 1026;
      __int32 v57 = v36;
      __int16 v58 = 1026;
      __int32 v59 = v37;
      __int16 v60 = 1026;
      __int32 v61 = v38;
      LODWORD(v41) = 94;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v27,  2LL,  "CLMM,CLTSP,Roads,bufferDataUsingMapsAPI,roadCount,%{public}d,sizeOfRoad,%{public}d,responseTime,%{public}.1lf,LL ,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,error,%{public}d,apiCalls,%{public}d,connectionBufferUsedCou nt,%{public}lu,bufferDataCalls,%{public}d,bufferingFailedCount,%{public}d,consecutiveBufferingFailed,%{public}d",  &v42,  v41);
      __int16 v40 = (uint8_t *)v39;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureRoadGeometryBuffer::queryUsingLocalMapsAPIObject(const double, const double, const double, c onst double, const BOOL)_block_invoke",  "%s\n",  v39);
      if (v40 != buf) {
        free(v40);
      }
    }
  }

  if (*(_BYTE *)(a1 + 104)) {
    [*(id *)&v4[11] clearRoadTiles];
  }
  uint64_t v22 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t result = (uint64_t)&v4[41];
  if (&v4[41] != (int32x2_t *)(v22 + 48)) {
    uint64_t result = sub_10097DCB8( result,  *(uint64_t **)(v22 + 48),  *(uint64_t **)(v22 + 56),  (uint64_t)(*(void *)(v22 + 56) - *(void *)(v22 + 48)) >> 4);
  }
  v4[28].i8[0] = 0;
  if (*(_BYTE *)(a1 + 105)) {
    return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL));
  }
  return result;
}

BOOL sub_1009786B0( uint64_t a1, uint64_t a2, uint64_t a3, double a4, CLLocationDegrees a5, CLLocationDegrees a6, double a7)
{
  if (!*(_BYTE *)(a1 + 169)) {
    return 0LL;
  }
  if (*(_BYTE *)(a1 + 224))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    double v8 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "CLMM,CLTSP,road data query already in progress using XPC",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      LOWORD(v26) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  1LL,  "CLMM,CLTSP,road data query already in progress using XPC",  &v26,  2);
      int v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureRoadGeometryBuffer::queryUsingXPCService(const double, const double, const double, const dou ble, const BOOL, const BOOL)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
      return 0LL;
    }
  }

  else
  {
    uint64_t v26 = a1;
    (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
    __int16 v27 = 256;
    double v18 = sub_101171D4C();
    __int32 v19 = objc_autoreleasePoolPush();
    *(void *)std::stringbuf::string_type buf = 0LL;
    int v29 = buf;
    uint64_t v30 = 0x2020000000LL;
    char v31 = 0;
    CLLocationCoordinate2D v20 = CLLocationCoordinate2DMake(a5, a6);
    *(_BYTE *)(a1 + 224) = 1;
    __int32 v21 = +[CLMapsXPCServiceManager sharedInstance](&OBJC_CLASS___CLMapsXPCServiceManager, "sharedInstance");
    BOOL v22 = (*(_DWORD *)(a1 + 152) & 0xFFFFFFFE) == 2;
    uint64_t v23 = *(unsigned __int8 *)(a1 + 216);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472LL;
    _OWORD v24[2] = sub_1009789D8;
    float v24[3] = &unk_101862C80;
    *(double *)&v24[6] = a4;
    *(double *)&v24[7] = a7;
    *(CLLocationDegrees *)&v24[8] = a5;
    *(CLLocationDegrees *)&v24[9] = a6;
    _BYTE v24[4] = buf;
    v24[5] = a1;
    char v25 = a2;
    *(double *)&v24[10] = v18;
    -[CLMapsXPCServiceManager collectMapDataOfType:aroundCoordinate:inRadius:allowNetwork:isPedestrianOrCycling:clearTiles:callSynchronously:WithReply:]( v21,  "collectMapDataOfType:aroundCoordinate:inRadius:allowNetwork:isPedestrianOrCycling:clearTiles:callSynchronously:WithReply:",  0LL,  a2,  v22,  a3,  v23,  v24,  v20.latitude,  v20.longitude,  a7);
    _Block_object_dispose(buf, 8);
    objc_autoreleasePoolPop(v19);
    (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
    return 1LL;
  }

  return result;
}

void sub_100978998( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009789D8(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)(a1 + 40);
  ++*(_DWORD *)(v4 + 116);
  v81[0] = 0LL;
  v81[1] = 0LL;
  uint64_t v79 = 0LL;
  __int16 v80 = v81;
  __int32 v77 = 0LL;
  __int16 v78 = 0LL;
  if (a2)
  {
    double v6 = *(double *)(a1 + 48);
    double v5 = *(double *)(a1 + 56);
    double v7 = *(double *)(a1 + 64);
    double v8 = *(double *)(a1 + 72);
    if (sub_1009757C4(v6, v5, v7, v8))
    {
      *(double *)(v4 + 56) = v6;
      *(double *)(v4 + 64) = v7;
      *(double *)(v4 + 72) = v8;
      *(double *)(v4 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v5;
    }

    *(_DWORD *)(v4 + 124) = 0;
    __int128 v73 = 0u;
    __int128 v74 = 0u;
    __int128 v75 = 0u;
    __int128 v76 = 0u;
    id v9 = [v2 countByEnumeratingWithState:&v73 objects:v118 count:16];
    unint64_t v10 = v2;
    if (!v9)
    {
      int v72 = 0;
      goto LABEL_37;
    }

    int v72 = 0;
    uint64_t v11 = *(void *)v74;
    while (1)
    {
      for (uint64_t i = 0LL; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v74 != v11) {
          objc_enumerationMutation(v10);
        }
        double v13 = *(void **)(*((void *)&v73 + 1) + 8LL * (void)i);
        objc_opt_class(&OBJC_CLASS___NSDictionary);
        if ((objc_opt_isKindOfClass(v13, v14) & 1) != 0)
        {
          uint64_t v15 = (char *)operator new(0xE8uLL);
          *((void *)v15 + 1) = 0LL;
          *((void *)v15 + 2) = 0LL;
          *(void *)uint64_t v15 = off_101862D20;
          *(_OWORD *)(v15 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
          *(_OWORD *)(v15 + 56) = 0u;
          *(_OWORD *)(v15 + 72) = 0u;
          *(_OWORD *)(v15 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
          *(_OWORD *)(v15 + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
          *((void *)v15 + 17) = 0LL;
          *(_OWORD *)(v15 + 104) = 0u;
          *(_OWORD *)(v15 + 24) = 0u;
          *(void *)(v15 + 44) = -1LL;
          *((void *)v15 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
          *((void *)v15 + 9) = 0LL;
          *((void *)v15 + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
          *((void *)v15 + 11) = 0LL;
          *((void *)v15 + 12) = -1LL;
          *((void *)v15 + 16) = -1LL;
          *((_DWORD *)v15 + 34) = -1;
          *((void *)v15 + 2_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
          *((_OWORD *)v15 + 12) = 0u;
          *((_OWORD *)v15 + 13) = 0u;
          *((_OWORD *)v15 + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
          *((_OWORD *)v15 + 11) = 0u;
          *((_OWORD *)v15 + 9) = 0u;
          *(void *)std::stringbuf::string_type buf = v15 + 24;
          *(void *)&uint8_t buf[8] = v15;
          uint64_t v16 = *(void **)buf;
          uint64_t v17 = **(void **)buf;
          unint64_t v18 = sub_100979338((uint64_t *)buf);
          *uint64_t v16 = v17;
          v16[1] = v18;
          int v19 = *(_DWORD *)(v4 + 152);
          if (v19 == 3)
          {
            uint64_t v20 = *(void *)buf;
            if (!*(_BYTE *)(*(void *)buf + 82LL)) {
              goto LABEL_22;
            }
          }

          else
          {
            if (v19 != 2)
            {
              if (v19 != 1 || !*(_BYTE *)(*(void *)buf + 81LL))
              {
LABEL_22:
                BOOL v22 = *(std::__shared_weak_count **)&buf[8];
                if (*(void *)&buf[8])
                {
                  uint64_t v23 = (unint64_t *)(*(void *)&buf[8] + 8LL);
                  do
                    unint64_t v24 = __ldaxr(v23);
                  while (__stlxr(v24 - 1, v23));
                  if (!v24)
                  {
                    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
                    std::__shared_weak_count::__release_weak(v22);
                  }
                }

                continue;
              }

void sub_100979248( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, char a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, void **a43)
{
  a43 = (void **)&a23;
  sub_10004CC28(&a43);
  sub_100008390((uint64_t)&a26, a27);
  _Unwind_Resume(a1);
}

char *sub_1009792A0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (char *)operator new(0xE8uLL);
  *((void *)v2 + 2) = 0LL;
  *(void *)uint64_t v2 = off_101862D20;
  *((void *)v2 + 1) = 0LL;
  *(_OWORD *)(v2 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(v2 + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *((void *)v2 + 17) = 0LL;
  *(_OWORD *)(v2 + 104) = 0u;
  *(void *)(v2 + 44) = -1LL;
  *((void *)v2 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
  *((void *)v2 + 9) = 0LL;
  *((void *)v2 + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *((void *)v2 + 11) = 0LL;
  *((void *)v2 + 12) = -1LL;
  *((void *)v2 + 16) = -1LL;
  *((_DWORD *)v2 + 34) = -1;
  *((void *)v2 + 2_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  a1[1] = v2;
  *(_OWORD *)(v2 + 24) = 0u;
  BOOL result = v2 + 24;
  *a1 = result;
  return result;
}

unint64_t sub_100979338(uint64_t *a1)
{
  uint64_t v2 = (unint64_t *)*a1;
  if (v2)
  {
    unint64_t v3 = *v2;
    unint64_t v17 = *v2;
    if ((int)((v2[18] - v2[17]) >> 4) > 1)
    {
      unint64_t v10 = (double *)sub_1001AC040((uint64_t)v2, 0);
      uint64_t v11 = (double *)sub_1001AC040(*a1, 1);
      if (sub_10097D204( v10,  v11,  *(unsigned __int8 *)(*a1 + 17),  *(unsigned __int8 *)(*a1 + 19),  *(unsigned __int8 *)(*a1 + 18),  &v17))
      {
        return v17;
      }

      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      int v12 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134283521;
        unint64_t v21 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "CLMM,GeoMapDataID,unable to make CLRoadID from CLMapRoadPtr,%{private}lld",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 0)) {
        return v17;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      int v18 = 134283521;
      unint64_t v19 = v17;
      double v15 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,GeoMapDataID,unable to make CLRoadID from CLMapRoadPtr,%{private}lld",  &v18,  12);
      double v7 = v16;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static uint64_t CLGeoMapFeatureAccessGeometryCommon::CLGeoMapDataID::getRoadID(const CLMapRoadPtr &)",  "%s\n",  v15);
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      uint64_t v4 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134283521;
        unint64_t v21 = v3;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "CLMM,GeoMapDataID,less than two coordinates,roadID,%{private}lld",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        return v17;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      int v18 = 134283521;
      unint64_t v19 = v3;
      double v5 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,GeoMapDataID,less than two coordinates,roadID,%{private}lld",  &v18,  12);
      double v7 = v6;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static uint64_t CLGeoMapFeatureAccessGeometryCommon::CLGeoMapDataID::getRoadID(const CLMapRoadPtr &)",  "%s\n",  v5);
    }

    if (v7 != buf) {
      free(v7);
    }
    return v17;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101862CF0);
  }
  double v8 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "CLMM,GeoMapDataID,null road", buf, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    LOWORD(v1_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,GeoMapDataID,null road",  &v18,  2);
    uint64_t v14 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static uint64_t CLGeoMapFeatureAccessGeometryCommon::CLGeoMapDataID::getRoadID(const CLMapRoadPtr &)",  "%s\n",  v13);
    if (v14 != buf) {
      free(v14);
    }
  }

  return 0LL;
}

uint64_t sub_1009797B8(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  if (!*(_BYTE *)(a1 + 216)
    || (Current = CFAbsoluteTimeGetCurrent(), int v11 = sub_100979974(a1, 0, 0LL, Current, a3, a4, a5), result = 0LL, v11))
  {
    uint64_t v14 = *(char **)a2;
    *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = v14;
    double v15 = *(__int128 **)(a1 + 232);
    for (uint64_t j = *(__int128 **)(a1 + 240); v15 != j; ++v15)
    {
      uint64_t v17 = *(void *)v15;
      if (*(void *)v15)
      {
        uint64_t v19 = v17 + 16;
        uint64_t v18 = *(void *)(v17 + 16);
        unint64_t v20 = 0x8E38E38E38E38E39LL * ((*(void *)(v19 + 8) - v18) >> 3);
        if ((int)v20 >= 1)
        {
          unint64_t v21 = 0LL;
          do
          {
            if (v20 > v21)
            {
              if (v18)
              {
                BOOL v22 = *(double **)(v18 + 72 * v21 + 48);
                uint64_t v23 = *(void *)(v18 + 72 * v21 + 56) - (void)v22;
                if ((int)((unint64_t)v23 >> 4) >= 1)
                {
                  unint64_t v24 = 0LL;
                  unint64_t v25 = v23 >> 4;
                  uint64_t v26 = ((unint64_t)v23 >> 4);
                  do
                  {
                    if (v25 <= v24) {
                      uint64_t v27 = 0LL;
                    }
                    else {
                      uint64_t v27 = v22;
                    }
                    if (v32 <= *v27 && v34 >= *v27)
                    {
                      double v29 = v27[1];
                      if (v35 <= v33)
                      {
                        if (v35 < v33 && (v35 > v29 || v33 < v29))
                        {
LABEL_35:
                          sub_1000E8F38((char **)a2, v15);
                          goto LABEL_36;
                        }
                      }

                      else if (v35 >= v29 && v33 <= v29)
                      {
                        goto LABEL_35;
                      }
                    }

                    ++v24;
                    v22 += 2;
                  }

                  while (v26 != v24);
                }
              }
            }

            ++v21;
          }

          while (v21 != v20);
        }
      }

uint64_t sub_100979974( uint64_t a1, char a2, uint64_t a3, double a4, CLLocationDegrees a5, CLLocationDegrees a6, double a7)
{
  if ((a2 & 1) != 0
    || sub_100975710((double *)(a1 + 56), (double *)(a1 + 16), *(unsigned __int8 *)(a1 + 217), a5, a6, a7))
  {
    *(double *)std::stringbuf::string_type buf = a7;
    uint64_t v14 = (double *)buf;
    double v15 = (double *)(a1 + 176);
    double v16 = *v15;
    if (sub_1009757C4(a4, *v15, a5, a6))
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      uint64_t v17 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        int v19 = *(_DWORD *)(a1 + 112);
        int v18 = *(_DWORD *)(a1 + 116);
        int v20 = *(unsigned __int8 *)(a1 + 224);
        *(_DWORD *)std::stringbuf::string_type buf = 134350593;
        *(double *)&uint8_t buf[4] = a4;
        __int16 v46 = 2049;
        CLLocationDegrees v47 = a5;
        __int16 v48 = 2049;
        CLLocationDegrees v49 = a6;
        __int16 v50 = 2050;
        double v51 = v16;
        __int16 v52 = 1026;
        int v53 = v18;
        __int16 v54 = 1026;
        int v55 = v19;
        __int16 v56 = 1026;
        int v57 = v20;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "CLMM,CLTSP,Buildings,%{public}.1lf,buffering map data,ll,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,ma psAPICalls,%{public}d,bufferCalls,%{public}d,queryInProgress,%{public}d",  buf,  0x3Cu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101862CF0);
        }
        int v25 = *(_DWORD *)(a1 + 112);
        int v24 = *(_DWORD *)(a1 + 116);
        int v26 = *(unsigned __int8 *)(a1 + 224);
        int v31 = 134350593;
        double v32 = a4;
        __int16 v33 = 2049;
        CLLocationDegrees v34 = a5;
        __int16 v35 = 2049;
        CLLocationDegrees v36 = a6;
        __int16 v37 = 2050;
        double v38 = v16;
        __int16 v39 = 1026;
        int v40 = v24;
        __int16 v41 = 1026;
        int v42 = v25;
        __int16 v43 = 1026;
        int v44 = v26;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  2LL,  "CLMM,CLTSP,Buildings,%{public}.1lf,buffering map data,ll,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,ma psAPICalls,%{public}d,bufferCalls,%{public}d,queryInProgress,%{public}d",  &v31,  60);
        uint64_t v28 = (char *)v27;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureBuildingGeometryBuffer::bufferMapData(const CFAbsoluteTime, const double, const double, co nst double, const BOOL, const BOOL)",  "%s\n",  v27);
        if (v28 != buf) {
          free(v28);
        }
      }
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      BOOL v22 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134349825;
        *(double *)&uint8_t buf[4] = a4;
        __int16 v46 = 2049;
        CLLocationDegrees v47 = a5;
        __int16 v48 = 2049;
        CLLocationDegrees v49 = a6;
        __int16 v50 = 2050;
        double v51 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,Buildings,%{public}.1lf,cacheRoadData,invalid input,ll,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf",  buf,  0x2Au);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101862CF0);
        }
        int v31 = 134349825;
        double v32 = a4;
        __int16 v33 = 2049;
        CLLocationDegrees v34 = a5;
        __int16 v35 = 2049;
        CLLocationDegrees v36 = a6;
        __int16 v37 = 2050;
        double v38 = v16;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,CLTSP,Buildings,%{public}.1lf,cacheRoadData,invalid input,ll,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf",  &v31,  42);
        int v30 = (char *)v29;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureBuildingGeometryBuffer::bufferMapData(const CFAbsoluteTime, const double, const double, co nst double, const BOOL, const BOOL)",  "%s\n",  v29);
        if (v30 != buf) {
          free(v30);
        }
      }
    }

    uint64_t v21 = 0LL;
    goto LABEL_21;
  }

void sub_100979E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_100979E40(double *a1, uint64_t *a2, double a3, double a4, double a5)
{
  __int16 v52 = a1;
  (*(void (**)(double *))(*(void *)a1 + 16LL))(a1);
  __int16 v53 = 256;
  CLLocationDegrees v49 = 0LL;
  __int16 v50 = 0LL;
  uint64_t v51 = 0LL;
  unsigned int v40 = sub_1009797B8((uint64_t)a1, (uint64_t)&v49, a3, a4, a5);
  if ((v40 & 1) != 0)
  {
    unint64_t v10 = v49;
    for (uint64_t i = v50; v10 != i; v10 += 2)
    {
      uint64_t v11 = *v10;
      uint64_t v12 = *(void *)(*v10 + 16);
      unint64_t v13 = 0x8E38E38E38E38E39LL * ((*(void *)(*v10 + 24) - v12) >> 3);
      if ((int)v13 >= 1)
      {
        unint64_t v14 = 0LL;
        do
        {
          if (v12 && v13 > v14)
          {
            __int128 v47 = 0u;
            __int128 v48 = 0u;
            *(_OWORD *)std::stringbuf::string_type __p = 0u;
            __int128 v46 = 0u;
            uint64_t v15 = v12 + 72 * v14;
            int v18 = *(double **)(v15 + 48);
            uint64_t v17 = (void **)(v15 + 48);
            double v16 = v18;
            __p[0] = *(v17 - 2);
            int v19 = v17[1];
            uint64_t v20 = v19 - (_BYTE *)v18;
            if ((int)((unint64_t)(v19 - (_BYTE *)v18) >> 4) >= 1)
            {
              unint64_t v21 = 0LL;
              do
              {
                if (v16 && v20 >> 4 > v21)
                {
                  *(void *)&v42[0] = 0LL;
                  uint64_t v43 = 0LL;
                  uint64_t v44 = 0LL;
                  sub_100D2DA44( a1 + 2,  (double *)&v44,  (double *)&v43,  (double *)v42,  a3,  a4,  0.0,  v16[2 * v21],  v16[2 * v21 + 1],  0.0);
                  uint64_t v23 = v43;
                  uint64_t v22 = v44;
                  uint64_t v24 = v46;
                  if ((unint64_t)v46 >= *((void *)&v46 + 1))
                  {
                    uint64_t v26 = (uint64_t)(v46 - (unint64_t)__p[1]) >> 4;
                    unint64_t v27 = v26 + 1;
                    int64_t v28 = *((void *)&v46 + 1) - (unint64_t)__p[1];
                    else {
                      unint64_t v29 = v27;
                    }
                    int v31 = (char *)sub_100037038((uint64_t)&v46 + 8, v29);
                    double v32 = &v31[16 * v26];
                    *(void *)double v32 = v23;
                    *((void *)v32 + 1) = v22;
                    __int16 v33 = __p[1];
                    CLLocationDegrees v34 = (void *)v46;
                    __int16 v35 = v32;
                    while (v34 != v33)
                    {
                      uint64_t v36 = *(v34 - 2);
                      v34 -= 2;
                      *((void *)v35 - 2) = v36;
                      v35 -= 16;
                      *((void *)v35 + 1) = v34[1];
                    }

                    int v25 = v32 + 16;
                    __p[1] = v35;
                    *(void *)&__int128 v46 = v32 + 16;
                    *((void *)&v46 + 1) = &v31[16 * v30];
                    if (v33) {
                      operator delete(v33);
                    }
                  }

                  else
                  {
                    *(void *)__int128 v46 = v43;
                    *(void *)(v24 + _Block_object_dispose((const void *)(v1 - 224), 8) = v22;
                    int v25 = (void *)(v24 + 16);
                  }

                  *(void *)&__int128 v46 = v25;
                  int v19 = v17[1];
                  double v16 = (double *)*v17;
                }

                ++v21;
                uint64_t v20 = v19 - (_BYTE *)v16;
              }

              while ((uint64_t)v21 < (int)((unint64_t)(v19 - (_BYTE *)v16) >> 4));
            }

            sub_100A3F7E8((double **)&__p[1], (uint64_t)v42);
            __int128 v47 = v42[0];
            __int128 v48 = v42[1];
            unint64_t v37 = a2[1];
            if (v37 >= a2[2])
            {
              uint64_t v38 = sub_10097DFE0(a2, (uint64_t)__p);
            }

            else
            {
              *(void **)unint64_t v37 = __p[0];
              *(void *)(v37 + 16) = 0LL;
              *(void *)(v37 + 24) = 0LL;
              *(void *)(v37 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
              sub_10097E130( (char *)(v37 + 8),  (void *)__p[1],  (void *)v46,  (uint64_t)(v46 - (unint64_t)__p[1]) >> 4);
              *(_OWORD *)(v37 + 32) = v47;
              *(_OWORD *)(v37 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v48;
              uint64_t v38 = v37 + 64;
              a2[1] = v37 + 64;
            }

            a2[1] = v38;
            if (__p[1])
            {
              *(void **)&__int128 v46 = __p[1];
              operator delete(__p[1]);
            }

            uint64_t v11 = *v10;
          }

          ++v14;
          uint64_t v12 = *(void *)(v11 + 16);
          unint64_t v13 = 0x8E38E38E38E38E39LL * ((*(void *)(v11 + 24) - v12) >> 3);
        }

        while ((uint64_t)v14 < (int)v13);
      }
    }
  }

  __p[0] = &v49;
  sub_10004CC28((void ***)__p);
  (*(void (**)(double *))(*(void *)a1 + 24LL))(a1);
  return v40;
}

void sub_10097A194( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char *a19, void *__p, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28)
{
  a19 = &a28;
  sub_10004CC28((void ***)&a19);
  sub_1011C52D0(v28 - 144);
  _Unwind_Resume(a1);
}

uint64_t sub_10097A1EC( uint64_t a1, uint64_t a2, double a3, CLLocationDegrees a4, CLLocationDegrees a5, double a6)
{
  if (*(_BYTE *)(a1 + 169))
  {
    uint64_t v12 = sub_10097A2D4(a1, *(unsigned __int8 *)(a1 + 192), a2, a3, a4, a5, a6);
  }

  else
  {
    if (!*(void *)(a1 + 88))
    {
      uint64_t v13 = 0LL;
      goto LABEL_6;
    }

    uint64_t v12 = sub_10097A610(a1, a2, a3, a4, a5, a6);
  }

  uint64_t v13 = v12;
LABEL_6:
  (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
  return v13;
}

void sub_10097A2BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

BOOL sub_10097A2D4( uint64_t a1, uint64_t a2, uint64_t a3, double a4, CLLocationDegrees a5, CLLocationDegrees a6, double a7)
{
  if (!*(_BYTE *)(a1 + 169)) {
    return 0LL;
  }
  if (*(_BYTE *)(a1 + 224))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    double v8 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "CLMM,CLTSP,building data query already in progress using XPC",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      LOWORD(v26) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  1LL,  "CLMM,CLTSP,building data query already in progress using XPC",  &v26,  2);
      uint64_t v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureBuildingGeometryBuffer::queryUsingXPCService(const double, const double, const double, const double, const BOOL, const BOOL)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
      return 0LL;
    }
  }

  else
  {
    uint64_t v26 = a1;
    (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
    __int16 v27 = 256;
    double v18 = sub_101171D4C();
    int v19 = objc_autoreleasePoolPush();
    ++*(_DWORD *)(a1 + 116);
    *(void *)std::stringbuf::string_type buf = 0LL;
    unint64_t v29 = buf;
    uint64_t v30 = 0x2020000000LL;
    char v31 = 0;
    CLLocationCoordinate2D v20 = CLLocationCoordinate2DMake(a5, a6);
    *(_BYTE *)(a1 + 224) = 1;
    unint64_t v21 = +[CLMapsXPCServiceManager sharedInstance](&OBJC_CLASS___CLMapsXPCServiceManager, "sharedInstance");
    if (*(_DWORD *)(a1 + 220) == 1) {
      uint64_t v22 = 2LL;
    }
    else {
      uint64_t v22 = 1LL;
    }
    uint64_t v23 = *(unsigned __int8 *)(a1 + 216);
    BOOL v24 = (*(_DWORD *)(a1 + 152) & 0xFFFFFFFE) == 2;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472LL;
    v25[2] = sub_10097B490;
    void v25[3] = &unk_101862CD0;
    *(double *)&v25[6] = a4;
    *(double *)&v25[7] = a7;
    *(CLLocationDegrees *)&_OWORD v25[8] = a5;
    *(CLLocationDegrees *)&v25[9] = a6;
    char v25[4] = buf;
    v25[5] = a1;
    *(double *)&v25[10] = v18;
    -[CLMapsXPCServiceManager collectMapDataOfType:aroundCoordinate:inRadius:allowNetwork:isPedestrianOrCycling:clearTiles:callSynchronously:WithReply:]( v21,  "collectMapDataOfType:aroundCoordinate:inRadius:allowNetwork:isPedestrianOrCycling:clearTiles:callSynchronously:WithReply:",  v22,  a2,  v24,  a3,  v23,  v25,  v20.latitude,  v20.longitude,  a7);
    _Block_object_dispose(buf, 8);
    objc_autoreleasePoolPop(v19);
    (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
    return 1LL;
  }

  return result;
}

void sub_10097A5D0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
  if (a2) {
    sub_100006BB8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10097A610(uint64_t a1, char a2, double a3, double a4, double a5, double a6)
{
  uint64_t v39 = a1;
  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  __int16 v40 = 256;
  if (!*(void *)(a1 + 88))
  {
LABEL_8:
    uint64_t v13 = 0LL;
    goto LABEL_23;
  }

  if (*(_BYTE *)(a1 + 224))
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    uint64_t v12 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "CLMM,CLTSP,building data query already in progress using maps API",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      LOWORD(v32[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  1LL,  "CLMM,CLTSP,building data query already in progress using maps API",  v32,  2);
      uint64_t v22 = (uint8_t *)v21;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureBuildingGeometryBuffer::queryUsingLocalMapsAPIObject(const double, const double, const doubl e, const double, const BOOL)",  "%s\n",  v21);
      if (v22 != buf) {
        free(v22);
      }
    }

    goto LABEL_8;
  }

  double v14 = sub_101171D4C();
  uint64_t v15 = objc_autoreleasePoolPush();
  uint64_t v34 = 0LL;
  __int16 v35 = &v34;
  uint64_t v36 = 0x3052000000LL;
  unint64_t v37 = sub_100977870;
  uint64_t v38 = sub_100977880;
  int v16 = *(unsigned __int8 *)(a1 + 216);
  if (*(_BYTE *)(a1 + 216)) {
    v35[5] = (uint64_t)dispatch_semaphore_create(0LL);
  }
  v32[0] = 0LL;
  v32[1] = v32;
  v32[2] = 0x4812000000LL;
  uint64_t v32[3] = sub_10097AB70;
  v32[4] = sub_10097AB94;
  v32[5] = &unk_10175E27B;
  memset(v33, 0, sizeof(v33));
  v30[0] = 0LL;
  v30[1] = v30;
  v30[2] = 0x2020000000LL;
  int v31 = 0;
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472LL;
  v29[2] = sub_10097ABBC;
  v29[3] = &unk_101862CA8;
  v29[4] = v32;
  v29[5] = v30;
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  void v26[2] = sub_10097AEF4;
  v26[3] = &unk_101862C58;
  *(double *)&v26[8] = a3;
  *(double *)&v26[9] = a6;
  *(double *)&v26[10] = a4;
  *(double *)&v26[11] = a5;
  v26[4] = v32;
  v26[5] = v30;
  *(double *)&v26[12] = v14;
  char v27 = v16;
  char v28 = a2;
  v26[6] = &v34;
  v26[7] = a1;
  ++*(_DWORD *)(a1 + 116);
  *(_BYTE *)(a1 + 224) = 1;
  objc_msgSend( *(id *)(a1 + 88),  "findBuildingsNear:radius:tileSetStyle:handler:completionHandler:",  *(_DWORD *)(a1 + 220) == 1,  v29,  v26,  a4,  a5,  a6);
  if (!v16) {
    goto LABEL_21;
  }
  uint64_t v17 = dispatch_semaphore_wait((dispatch_semaphore_t)v35[5], 0xFFFFFFFFFFFFFFFFLL);
  double v18 = (dispatch_object_s *)v35[5];
  if (v18) {
    dispatch_release(v18);
  }
  if (v17)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    int v19 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,Buildings,queryForBuildingsWithinDistance,semaphore timed out",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      v25[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,CLTSP,Buildings,queryForBuildingsWithinDistance,semaphore timed out",  v25,  2);
      BOOL v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureBuildingGeometryBuffer::queryUsingLocalMapsAPIObject(const double, const double, const doubl e, const double, const BOOL)",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
    }

    uint64_t v13 = 0LL;
  }

  else
  {
LABEL_21:
    uint64_t v13 = 1LL;
  }

  _Block_object_dispose(v30, 8);
  _Block_object_dispose(v32, 8);
  *(void *)std::stringbuf::string_type buf = v33;
  sub_10004CC28((void ***)buf);
  _Block_object_dispose(&v34, 8);
  objc_autoreleasePoolPop(v15);
LABEL_23:
  (*(void (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
  return v13;
}

void sub_10097AB00( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, char a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,void **a55)
{
}

__n128 sub_10097AB70(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0LL;
  a1[3].n128_u64[1] = 0LL;
  a1[4].n128_u64[0] = 0LL;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0LL;
  a2[3].n128_u64[1] = 0LL;
  a2[4].n128_u64[0] = 0LL;
  return result;
}

void sub_10097AB94(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 48);
  sub_10004CC28(&v1);
}

void sub_10097ABBC(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v3 = a2;
    if (v3)
    {
      uint64_t v4 = v3;
      double v5 = operator new(0x40uLL);
      void v5[2] = 0LL;
      void *v5 = off_101862D70;
      v5[1] = 0LL;
      v5[4] = 0LL;
      v5[5] = 0LL;
      *((_DWORD *)v5 + _Block_object_dispose((const void *)(v1 - 224), 8) = -1;
      void v5[6] = 0LL;
      void v5[7] = 0LL;
      *((void *)&v9 + 1) = v5;
      v5[3] = 0LL;
      *(void *)&__int128 v9 = v5 + 3;
      sub_10097ACA8((uint64_t)(v5 + 3), v4);
      sub_1000E8F38((char **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 48LL), &v9);
      *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) += 40;

      double v6 = (std::__shared_weak_count *)*((void *)&v9 + 1);
      if (*((void *)&v9 + 1))
      {
        double v7 = (unint64_t *)(*((void *)&v9 + 1) + 8LL);
        do
          unint64_t v8 = __ldaxr(v7);
        while (__stlxr(v8 - 1, v7));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
    }
  }

void sub_10097AC94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_10097ACA8(uint64_t a1, void *a2)
{
  *(void *)a1 = [a2 buildingID];
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = [a2 tileSetStyle];
  *(_BYTE *)(a1 + 12) = 0;
  *(_BYTE *)(a1 + 12) = [a2 hasTerrainElevation];
  sub_10097D320((uint64_t *)(a1 + 16), (unint64_t)objc_msgSend(objc_msgSend(a2, "sections"), "count"));
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  id v4 = [a2 sections];
  id v5 = [v4 countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v26;
    do
    {
      for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v26 != v6) {
          objc_enumerationMutation(v4);
        }
        unint64_t v8 = *(void **)(*((void *)&v25 + 1) + 8LL * (void)i);
        uint64_t v24 = 0LL;
        *(_OWORD *)std::stringbuf::string_type __p = 0u;
        objc_msgSend(v8, "maxBaseHeight", 0, 0, 0, 0, 0, 0);
        objc_msgSend(v8, "minBaseHeight", v9);
        *((void *)&v18 + 1) = v10;
        [v8 terrainElevation];
        uint64_t v20 = v11;
        [v8 topHeight];
        uint64_t v19 = v12;
        [v8 height];
        uint64_t v21 = v13;
        [v8 baseHeight];
        uint64_t v14 = 0LL;
        unint64_t v15 = 0LL;
        uint64_t v22 = v16;
        while ((unint64_t)[v8 coordinateCount] > v15)
        {
          sub_10097D3DC( &v18,  *(double *)((char *)[v8 coordinates] + v14),  *(double *)((char *)objc_msgSend(v8, "coordinates") + v14 + 8));
          ++v15;
          v14 += 16LL;
        }

        sub_10097D4DC((uint64_t *)a1, &v18);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
      }

      id v5 = [v4 countByEnumeratingWithState:&v25 objects:v29 count:16];
    }

    while (v5);
  }

  return (int)(954437177 * ((*(void *)(a1 + 24) - *(void *)(a1 + 16)) >> 3)) > 0;
}

void sub_10097AECC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
}

uint64_t sub_10097AEF4(uint64_t a1, void *a2)
{
  id v4 = *(int32x2_t **)(a1 + 56);
  v4[28].i8[0] = 0;
  if (a2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    id v5 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349571;
      id v59 = [a2 code];
      __int16 v60 = 2114;
      *(void *)uint64_t v61 = [a2 domain];
      *(_WORD *)&v61[8] = 2113;
      *(void *)&_BYTE v61[10] = [a2 localizedDescription];
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "CLMM,CLTSP,Buildings,Warning,GEOMapFeatureAccessRequest reported errorcode,%{public}lld,domain,%{public}@,descri ption,%{private}@",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      uint64_t v36 = qword_1019348B8;
      int v40 = 134349571;
      id v41 = [a2 code];
      __int16 v42 = 2114;
      *(void *)uint64_t v43 = [a2 domain];
      *(_WORD *)&v43[8] = 2113;
      *(void *)&_BYTE v43[10] = [a2 localizedDescription];
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v36,  0LL,  "CLMM,CLTSP,Buildings,Warning,GEOMapFeatureAccessRequest reported errorcode,%{public}lld,domain,%{public}@,descri ption,%{private}@",  &v40,  32);
      uint64_t v38 = (uint8_t *)v37;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureBuildingGeometryBuffer::queryUsingLocalMapsAPIObject(const double, const double, const doubl e, const double, const BOOL)_block_invoke",  "%s\n",  v37);
      if (v38 != buf) {
        free(v38);
      }
    }

    v4[15] = vadd_s32(v4[15], (int32x2_t)0x100000001LL);
  }

  else
  {
    double v7 = *(double *)(a1 + 64);
    double v6 = *(double *)(a1 + 72);
    double v8 = *(double *)(a1 + 80);
    double v9 = *(double *)(a1 + 88);
    if (sub_1009757C4(v7, v6, v8, v9))
    {
      *(double *)&v4[7] = v7;
      *(double *)&v4[8] = v8;
      *(double *)&v4[9] = v9;
      *(double *)&v4[10] = v6;
    }

    v4[15].i32[1] = 0;
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101862CF0);
  }
  uint64_t v10 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    int v12 = *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
    double v13 = 0.0;
    uint64_t v15 = *(void *)(a1 + 80);
    uint64_t v14 = *(void *)(a1 + 88);
    uint64_t v16 = *(void *)(a1 + 72);
    int v17 = *(unsigned __int8 *)(a1 + 104);
    __int32 v18 = v4[14].i32[1];
    __int32 v19 = v4[15].i32[0];
    __int32 v20 = v4[15].i32[1];
    *(_DWORD *)std::stringbuf::string_type buf = 134351617;
    id v59 = (id)v11;
    __int16 v60 = 1026;
    *(_DWORD *)uint64_t v61 = v12;
    *(_WORD *)&v61[4] = 2050;
    *(double *)&v61[6] = v13;
    *(_WORD *)&v61[14] = 2049;
    *(void *)&v61[16] = v15;
    __int16 v62 = 2049;
    uint64_t v63 = v14;
    __int16 v64 = 2050;
    uint64_t v65 = v16;
    __int16 v66 = 1026;
    BOOL v67 = a2 != 0LL;
    __int16 v68 = 1026;
    __int32 v69 = v18;
    __int16 v70 = 1026;
    int v71 = v17;
    __int16 v72 = 1026;
    __int32 v73 = v19;
    __int16 v74 = 1026;
    __int32 v75 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CLMM,CLTSP,Buildings,bufferDataUsingMapsAPI,bldgCount,%{public}lu,sizeOfBuildings,%{public}d,responseTime,%{public }.1lf,LL,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,error,%{public}d,apiCalls,%{public}d,bufferSynchronous ly,%{public}d,bufferingFailedCount,%{public}d,consecutiveBufferingFailed,%{public}d",  buf,  0x58u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    uint64_t v23 = qword_1019348B8;
    int v25 = *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
    double v26 = 0.0;
    uint64_t v28 = *(void *)(a1 + 80);
    uint64_t v27 = *(void *)(a1 + 88);
    uint64_t v29 = *(void *)(a1 + 72);
    int v30 = *(unsigned __int8 *)(a1 + 104);
    __int32 v31 = v4[14].i32[1];
    __int32 v32 = v4[15].i32[0];
    __int32 v33 = v4[15].i32[1];
    int v40 = 134351617;
    id v41 = (id)v24;
    __int16 v42 = 1026;
    *(_DWORD *)uint64_t v43 = v25;
    *(_WORD *)&v43[4] = 2050;
    *(double *)&v43[6] = v26;
    *(_WORD *)&v43[14] = 2049;
    *(void *)&v43[16] = v28;
    __int16 v44 = 2049;
    uint64_t v45 = v27;
    __int16 v46 = 2050;
    uint64_t v47 = v29;
    __int16 v48 = 1026;
    BOOL v49 = a2 != 0LL;
    __int16 v50 = 1026;
    __int32 v51 = v31;
    __int16 v52 = 1026;
    int v53 = v30;
    __int16 v54 = 1026;
    __int32 v55 = v32;
    __int16 v56 = 1026;
    __int32 v57 = v33;
    LODWORD(v39) = 88;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v23,  2LL,  "CLMM,CLTSP,Buildings,bufferDataUsingMapsAPI,bldgCount,%{public}lu,sizeOfBuildings,%{public}d,responseTime,%{public }.1lf,LL,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,error,%{public}d,apiCalls,%{public}d,bufferSynchronous ly,%{public}d,bufferingFailedCount,%{public}d,consecutiveBufferingFailed,%{public}d",  &v40,  v39);
    __int16 v35 = (uint8_t *)v34;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureBuildingGeometryBuffer::queryUsingLocalMapsAPIObject(const double, const double, const double, const double, const BOOL)_block_invoke",  "%s\n",  v34);
    if (v35 != buf) {
      free(v35);
    }
  }

  if (*(_BYTE *)(a1 + 105)) {
    [*(id *)&v4[11] clearBuildingTiles];
  }
  uint64_t v21 = *(void *)(*(void *)(a1 + 32) + 8LL);
  uint64_t result = (uint64_t)&v4[29];
  if (&v4[29] != (int32x2_t *)(v21 + 48)) {
    uint64_t result = sub_10097DCB8( result,  *(uint64_t **)(v21 + 48),  *(uint64_t **)(v21 + 56),  (uint64_t)(*(void *)(v21 + 56) - *(void *)(v21 + 48)) >> 4);
  }
  if (*(_BYTE *)(a1 + 104)) {
    return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL));
  }
  return result;
}

void sub_10097B490(uint64_t a1, void *a2)
{
  id v3 = *(int32x2_t **)(a1 + 40);
  v3[28].i8[0] = 0;
  uint64_t v63 = 0LL;
  __int16 v64 = 0LL;
  uint64_t v65 = 0LL;
  __int16 v58 = v3;
  if (!a2)
  {
    v3[15] = vadd_s32(v3[15], (int32x2_t)0x100000001LL);
    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    int v25 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "CLTSP,Buildings,xpcQueryForBuildingData returned error",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      LOWORD(v66) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLTSP,Buildings,xpcQueryForBuildingData returned error",  &v66,  2);
      __int16 v42 = (__int128 *)v41;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureBuildingGeometryBuffer::queryUsingXPCService(const double, const double, const double, const double, const BOOL, const BOOL)_block_invoke",  "%s\n",  v41);
      if (v42 != &buf) {
        free(v42);
      }
    }

    goto LABEL_34;
  }

  double v5 = *(double *)(a1 + 48);
  double v4 = *(double *)(a1 + 56);
  double v6 = *(double *)(a1 + 64);
  double v7 = *(double *)(a1 + 72);
  if (sub_1009757C4(v5, v4, v6, v7))
  {
    *(double *)&v3[7] = v5;
    *(double *)&v3[8] = v6;
    *(double *)&v3[9] = v7;
    *(double *)&v3[10] = v4;
  }

  v3[15].i32[1] = 0;
  __int128 v59 = 0u;
  __int128 v60 = 0u;
  __int128 v61 = 0u;
  __int128 v62 = 0u;
  id v8 = [a2 countByEnumeratingWithState:&v59 objects:v114 count:16];
  if (!v8)
  {
LABEL_34:
    int v9 = 0;
    goto LABEL_35;
  }

  int v9 = 0;
  uint64_t v10 = *(void *)v60;
  do
  {
    uint64_t v11 = 0LL;
    do
    {
      if (*(void *)v60 != v10) {
        objc_enumerationMutation(a2);
      }
      int v12 = *(void **)(*((void *)&v59 + 1) + 8LL * (void)v11);
      objc_opt_class(&OBJC_CLASS___NSDictionary);
      if ((objc_opt_isKindOfClass(v12, v13) & 1) != 0)
      {
        uint64_t v14 = operator new(0x40uLL);
        v14[1] = 0LL;
        _DWORD v14[2] = 0LL;
        *uint64_t v14 = off_101862D70;
        v14[3] = 0LL;
        v14[4] = 0LL;
        v14[5] = 0LL;
        *((_DWORD *)v14 + _Block_object_dispose((const void *)(v1 - 224), 8) = -1;
        v14[6] = 0LL;
        v14[7] = 0LL;
        *(void *)&__int128 buf = v14 + 3;
        *((void *)&buf + 1) = v14;
        sub_10097BCD0((uint64_t)(v14 + 3), v12);
        sub_1000E8F38(&v63, &buf);
        uint64_t v15 = (std::__shared_weak_count *)*((void *)&buf + 1);
        if (*((void *)&buf + 1))
        {
          uint64_t v16 = (unint64_t *)(*((void *)&buf + 1) + 8LL);
          do
            unint64_t v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }

        v9 += 40;
      }

      else
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101862CF0);
        }
        __int32 v18 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
        {
          unsigned int v19 = [a2 count];
          LODWORD(buf) = 67240192;
          DWORD1(buf) = v19;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,Buildings,conversion to building failed,%{public}d",  (uint8_t *)&buf,  8u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_101862CF0);
          }
          uint64_t v20 = qword_1019348B8;
          unsigned int v21 = [a2 count];
          int v66 = 67240192;
          unsigned int v67 = v21;
          LODWORD(v56) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v20,  16LL,  "CLMM,CLTSP,Buildings,conversion to building failed,%{public}d",  &v66,  v56);
          uint64_t v23 = (__int128 *)v22;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLGeoMapFeatureBuildingGeometryBuffer::queryUsingXPCService(const double, const double, const double, c onst double, const BOOL, const BOOL)_block_invoke",  "%s\n",  v22);
          if (v23 != &buf) {
            free(v23);
          }
        }
      }

      uint64_t v11 = (char *)v11 + 1;
    }

    while (v11 != v8);
    id v24 = [a2 countByEnumeratingWithState:&v59 objects:v114 count:16];
    id v8 = v24;
  }

  while (v24);
LABEL_35:
  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101862CF0);
  }
  double v26 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
  {
    if (a2) {
      unsigned int v27 = [a2 count];
    }
    else {
      unsigned int v27 = 0;
    }
    uint64_t v29 = v63;
    uint64_t v28 = v64;
    double v30 = 0.0;
    uint64_t v32 = *(void *)(a1 + 64);
    uint64_t v31 = *(void *)(a1 + 72);
    uint64_t v33 = *(void *)(a1 + 56);
    int v34 = v58[27].u8[0];
    __int32 v35 = v58[14].i32[1];
    __int32 v36 = v58[15].i32[0];
    __int32 v37 = v58[15].i32[1];
    int v38 = v58[24].u8[0];
    LODWORD(buf) = 67243265;
    DWORD1(buf) = v27;
    WORD4(buf) = 1026;
    *(_DWORD *)((char *)&buf + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v9;
    HIWORD(buf) = 1026;
    int v93 = (unint64_t)((char *)v28 - v29) >> 4;
    __int16 v94 = 2050;
    double v95 = v30;
    __int16 v96 = 2049;
    uint64_t v97 = v32;
    __int16 v98 = 2049;
    uint64_t v99 = v31;
    __int16 v100 = 2050;
    uint64_t v101 = v33;
    __int16 v102 = 1026;
    BOOL v103 = a2 == 0LL;
    __int16 v104 = 1026;
    __int32 v105 = v35;
    __int16 v106 = 1026;
    int v107 = v34;
    __int16 v108 = 1026;
    __int32 v109 = v36;
    __int16 v110 = 1026;
    __int32 v111 = v37;
    __int16 v112 = 1026;
    int v113 = v38;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "CLMM,CLTSP,Buildings,MapHelperService,bldgCount,%{public}d,sizeOfBuildings,%{public}d,convertedBuildings,%{public} d,responseTime,%{public}.1lf,LL,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,error,%{public}d,apiCalls,%{pub lic}d,bufferSynchronously,%{public}d,bufferingFailedCount,%{public}d,consecutiveBufferingFailed,%{public}d,network,%{public}d",  (uint8_t *)&buf,  0x60u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    uint64_t v39 = qword_1019348B8;
    if (a2) {
      unsigned int v40 = [a2 count];
    }
    else {
      unsigned int v40 = 0;
    }
    __int16 v44 = v63;
    uint64_t v43 = v64;
    double v45 = 0.0;
    uint64_t v47 = *(void *)(a1 + 64);
    uint64_t v46 = *(void *)(a1 + 72);
    uint64_t v48 = *(void *)(a1 + 56);
    int v49 = v58[27].u8[0];
    __int32 v50 = v58[14].i32[1];
    __int32 v51 = v58[15].i32[0];
    __int32 v52 = v58[15].i32[1];
    int v53 = v58[24].u8[0];
    int v66 = 67243265;
    unsigned int v67 = v40;
    __int16 v68 = 1026;
    int v69 = v9;
    __int16 v70 = 1026;
    int v71 = (unint64_t)((char *)v43 - v44) >> 4;
    __int16 v72 = 2050;
    double v73 = v45;
    __int16 v74 = 2049;
    uint64_t v75 = v47;
    __int16 v76 = 2049;
    uint64_t v77 = v46;
    __int16 v78 = 2050;
    uint64_t v79 = v48;
    __int16 v80 = 1026;
    BOOL v81 = a2 == 0LL;
    __int16 v82 = 1026;
    __int32 v83 = v50;
    __int16 v84 = 1026;
    int v85 = v49;
    __int16 v86 = 1026;
    __int32 v87 = v51;
    __int16 v88 = 1026;
    __int32 v89 = v52;
    __int16 v90 = 1026;
    int v91 = v53;
    LODWORD(v56) = 96;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v39,  2LL,  "CLMM,CLTSP,Buildings,MapHelperService,bldgCount,%{public}d,sizeOfBuildings,%{public}d,convertedBuildings,%{public} d,responseTime,%{public}.1lf,LL,%{private}.7lf,%{private}.7lf,radius,%{public}.2lf,error,%{public}d,apiCalls,%{pub lic}d,bufferSynchronously,%{public}d,bufferingFailedCount,%{public}d,consecutiveBufferingFailed,%{public}d,network,%{public}d",  &v66,  v56);
    __int32 v55 = (__int128 *)v54;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLGeoMapFeatureBuildingGeometryBuffer::queryUsingXPCService(const double, const double, const double, const d ouble, const BOOL, const BOOL)_block_invoke",  "%s\n",  v54);
    if (v55 != &buf) {
      free(v55);
    }
  }

  *(void *)&__int128 buf = &v63;
  sub_10004CC28((void ***)&buf);
}

void sub_10097BC78( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, void **a39)
{
  a39 = (void **)&a24;
  sub_10004CC28(&a39);
  _Unwind_Resume(a1);
}

BOOL sub_10097BCD0(uint64_t a1, void *a2)
{
  if (!a2)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    uint64_t v31 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,makeBuildingFromMapHelperNSDictionary,dictionary is null",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    LOWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,CLTSP,makeBuildingFromMapHelperNSDictionary,dictionary is null",  &v40,  2);
    double v30 = (uint8_t *)v32;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLMapBuilding::fillFromMapHelperNSDictionary(NSDictionary * _Nonnull)",  "%s\n",  v32);
    goto LABEL_74;
  }

  if ([a2 valueForKey:@"buildingID"]) {
    *(void *)a1 = objc_msgSend(objc_msgSend(a2, "valueForKey:", @"buildingID"), "longLongValue");
  }
  if ([a2 valueForKey:@"tileSetStyle"]) {
    *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = objc_msgSend( objc_msgSend(a2, "valueForKey:", @"tileSetStyle"),  "intValue");
  }
  if ([a2 valueForKey:@"hasTerrainElevation"]) {
    *(_BYTE *)(a1 + 12) = objc_msgSend( objc_msgSend(a2, "valueForKey:", @"hasTerrainElevation"),  "BOOLValue");
  }
  if (![a2 valueForKey:@"sections"]
    || (id v4 = [a2 valueForKey:@"sections"]) == 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    unsigned int v27 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,fillFromMapHelperNSDictionary,sections is nil",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    LOWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,CLTSP,fillFromMapHelperNSDictionary,sections is nil",  &v40,  2);
    double v30 = (uint8_t *)v29;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLMapBuilding::fillFromMapHelperNSDictionary(NSDictionary * _Nonnull)",  "%s\n",  v29);
    goto LABEL_74;
  }

  double v5 = v4;
  objc_opt_class(&OBJC_CLASS___NSMutableArray);
  if ((objc_opt_isKindOfClass(v5, v6) & 1) == 0)
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    uint64_t v33 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,fillFromMapHelperNSDictionary,sections is not an array",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 0);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    LOWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,CLTSP,fillFromMapHelperNSDictionary,sections is not an array",  &v40,  2);
    double v30 = (uint8_t *)v34;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLMapBuilding::fillFromMapHelperNSDictionary(NSDictionary * _Nonnull)",  "%s\n",  v34);
    goto LABEL_74;
  }

  int v38 = (uint64_t *)a1;
  sub_10097D320((uint64_t *)(a1 + 16), (unint64_t)[v5 count]);
  if (![v5 count]) {
    return (int)(954437177 * ((unint64_t)(v38[3] - v38[2]) >> 3)) > 0;
  }
  uint64_t v7 = 0LL;
  while (1)
  {
    id v8 = [v5 objectAtIndexedSubscript:v7];
    int v9 = v8;
    if (!v8) {
      break;
    }
    uint64_t v44 = 0LL;
    __int128 v42 = 0u;
    *(_OWORD *)std::stringbuf::string_type __p = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    if ([v8 valueForKey:@"maxBaseHeight"])
    {
      objc_msgSend(objc_msgSend(v9, "valueForKey:", @"maxBaseHeight"), "doubleValue");
      *(void *)&__int128 v40 = v10;
    }

    if ([v9 valueForKey:@"minBaseHeight"])
    {
      objc_msgSend(objc_msgSend(v9, "valueForKey:", @"minBaseHeight"), "doubleValue");
      *((void *)&v40 + 1) = v11;
    }

    if ([v9 valueForKey:@"topHeight"])
    {
      objc_msgSend(objc_msgSend(v9, "valueForKey:", @"topHeight"), "doubleValue");
      *(void *)&__int128 v41 = v12;
    }

    if ([v9 valueForKey:@"terrainElevation"])
    {
      objc_msgSend(objc_msgSend(v9, "valueForKey:", @"terrainElevation"), "doubleValue");
      *((void *)&v41 + 1) = v13;
    }

    if ([v9 valueForKey:@"height"])
    {
      objc_msgSend(objc_msgSend(v9, "valueForKey:", @"height"), "doubleValue");
      *(void *)&__int128 v42 = v14;
    }

    if ([v9 valueForKey:@"baseHeight"])
    {
      objc_msgSend(objc_msgSend(v9, "valueForKey:", @"baseHeight"), "doubleValue");
      *((void *)&v42 + 1) = v15;
    }

    if ([v9 valueForKey:@"coordinateCount"])
    {
      int v16 = objc_msgSend(objc_msgSend(v9, "valueForKey:", @"coordinateCount"), "intValue");
      if (v16 >= 1)
      {
        uint64_t v17 = 0LL;
        BOOL v18 = 1;
        while (1)
        {
          unsigned int v19 = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@%i",  @"coord",  v17);
          if ([v9 valueForKey:v19])
          {
            id v20 = objc_msgSend(objc_msgSend(v9, "valueForKey:", v19), "componentsSeparatedByString:", @",");
            if ([v20 count] != (id)2)
            {
              if (qword_1019348B0 != -1) {
                dispatch_once(&qword_1019348B0, &stru_101862CF0);
              }
              id v24 = (os_log_s *)qword_1019348B8;
              if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
              {
                *(_WORD *)__int128 buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,fillFromMapHelperNSDictionary,coordinate column counts is not 2",  buf,  2u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019348B0 != -1) {
                  dispatch_once(&qword_1019348B0, &stru_101862CF0);
                }
                v39[0] = 0;
                LODWORD(v37) = 2;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,CLTSP,fillFromMapHelperNSDictionary,coordinate column counts is not 2",  v39,  v37);
                double v26 = (uint8_t *)v25;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLMapBuilding::fillFromMapHelperNSDictionary(NSDictionary * _Nonnull)",  "%s\n",  v25);
                if (v26 != buf) {
                  free(v26);
                }
              }

              goto LABEL_36;
            }

            objc_msgSend(objc_msgSend(v20, "objectAtIndexedSubscript:", 0), "doubleValue");
            double v22 = v21;
            objc_msgSend(objc_msgSend(v20, "objectAtIndexedSubscript:", 1), "doubleValue");
            sub_10097D3DC(&v40, v22, v23);
          }

          uint64_t v17 = (v17 + 1);
          BOOL v18 = (int)v17 < v16;
          if (v16 == (_DWORD)v17) {
            goto LABEL_35;
          }
        }
      }
    }

    BOOL v18 = 0;
LABEL_35:
    sub_10097D4DC(v38, &v40);
LABEL_36:
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }

    if (v18) {
      return 0LL;
    }
  }

  if (qword_1019348B0 != -1) {
    dispatch_once(&qword_1019348B0, &stru_101862CF0);
  }
  __int32 v35 = (os_log_s *)qword_1019348B8;
  if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_ERROR,  "CLMM,CLTSP,fillFromMapHelperNSDictionary,sectionDict is nil",  buf,  2u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    LOWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    LODWORD(v37) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,CLTSP,fillFromMapHelperNSDictionary,sectionDict is nil",  &v40,  v37);
    double v30 = (uint8_t *)v36;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLMapBuilding::fillFromMapHelperNSDictionary(NSDictionary * _Nonnull)",  "%s\n",  v36);
LABEL_74:
    if (v30 != buf) {
      free(v30);
    }
    return 0LL;
  }

  return result;
}

void sub_10097C694( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10097C6CC(id a1)
{
  qword_1019348B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

uint64_t sub_10097C6F8(uint64_t a1)
{
  id v3 = (void **)(a1 + 48);
  sub_10004CC28(&v3);
  id v3 = (void **)(a1 + 24);
  sub_10004CC28(&v3);
  return a1;
}

uint64_t sub_10097C740(uint64_t a1)
{
  id v3 = (void **)(a1 + 32);
  sub_10004CC28(&v3);
  id v3 = (void **)(a1 + 8);
  sub_10004CC28(&v3);
  return a1;
}

uint64_t sub_10097C788(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    unint64_t v3 = *a2;
    unint64_t v4 = a2[1];
    uint64_t result = 1LL;
    do
    {
      unint64_t v6 = v2[4];
      unint64_t v7 = v2[5];
      BOOL v8 = v4 < v7;
      if (v3 != v6) {
        BOOL v8 = v3 < v6;
      }
      if (!v8)
      {
        BOOL v9 = v7 < v4;
        if (v3 == v6) {
          BOOL v10 = v9;
        }
        else {
          BOOL v10 = v6 < v3;
        }
        if (!v10) {
          return result;
        }
        ++v2;
      }

      uint64_t v2 = (void *)*v2;
    }

    while (v2);
  }

  return 0LL;
}

_OWORD *sub_10097C7E8(uint64_t **a1, unint64_t *a2, uint64_t a3, __int128 **a4)
{
  unint64_t v6 = (void **)sub_10097C87C((uint64_t)a1, &v11, a2);
  unint64_t v7 = *v6;
  if (!*v6)
  {
    BOOL v8 = (uint64_t **)v6;
    unint64_t v7 = operator new(0x70uLL);
    __int128 v9 = **a4;
    v7[4] = 0u;
    void v7[5] = 0u;
    float32x2_t v7[2] = v9;
    v7[3] = 0u;
    *((void *)v7 + 12) = 0LL;
    *((void *)v7 + 13) = 0xBFF0000000000000LL;
    sub_1000085FC(a1, v11, v8, (uint64_t *)v7);
  }

  return v7;
}

void *sub_10097C87C(uint64_t a1, void *a2, unint64_t *a3)
{
  double v5 = *(void **)(a1 + 8);
  uint64_t result = (void *)(a1 + 8);
  unint64_t v4 = v5;
  if (v5)
  {
    unint64_t v6 = *a3;
    unint64_t v7 = a3[1];
    do
    {
      while (1)
      {
        BOOL v8 = v4;
        unint64_t v9 = v4[4];
        unint64_t v10 = v8[5];
        BOOL v11 = v7 < v10;
        if (v6 != v9) {
          BOOL v11 = v6 < v9;
        }
        if (!v11) {
          break;
        }
        unint64_t v4 = (void *)*v8;
        uint64_t result = v8;
        if (!*v8) {
          goto LABEL_15;
        }
      }

      BOOL v12 = v10 < v7;
      if (v6 == v9) {
        BOOL v13 = v12;
      }
      else {
        BOOL v13 = v9 < v6;
      }
      if (!v13) {
        break;
      }
      uint64_t result = v8 + 1;
      unint64_t v4 = (void *)v8[1];
    }

    while (v4);
  }

  else
  {
    BOOL v8 = result;
  }

uint64_t *sub_10097C8FC(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  double v5 = (uint64_t **)sub_10097C87C((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    sub_10097C978((uint64_t)a1, a3, (uint64_t)&v7);
    sub_1000085FC(a1, v8, v5, v7);
    return v7;
  }

  return result;
}

double sub_10097C978@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  unint64_t v6 = operator new(0x70uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 224), 8) = v5;
  v6[2] = *(_OWORD *)a2;
  *((_WORD *)v6 + 24) = *(_WORD *)(a2 + 16);
  *(_OWORD *)((char *)v6 + 56) = *(_OWORD *)(a2 + 24);
  *((void *)v6 + 9) = *(void *)(a2 + 40);
  *(void *)(a2 + 24) = 0LL;
  *(void *)(a2 + 32) = 0LL;
  void v6[5] = *(_OWORD *)(a2 + 48);
  *((void *)v6 + 12) = *(void *)(a2 + 64);
  *(void *)(a2 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(void *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a2 + 56) = 0LL;
  *(void *)(a2 + 64) = 0LL;
  double result = *(double *)(a2 + 72);
  *((double *)v6 + 13) = result;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_10097C9FC(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(_OWORD *)a1 = *a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)a3;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  sub_10027C094( (char *)(a1 + 24),  *(void **)(a3 + 8),  *(void **)(a3 + 16),  (uint64_t)(*(void *)(a3 + 16) - *(void *)(a3 + 8)) >> 4);
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  sub_10027C094( (char *)(a1 + 48),  *(void **)(a3 + 32),  *(void **)(a3 + 40),  (uint64_t)(*(void *)(a3 + 40) - *(void *)(a3 + 32)) >> 4);
  *(void *)(a1 + 72) = *(void *)(a3 + 56);
  return a1;
}

void sub_10097CA84(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10097CA9C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = v4;
  sub_10097CB04((void **)a2);
  *(void *)a2 = 0LL;
  *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a2 + 16) = 0LL;
  memset(v5, 0, sizeof(v5));
  unint64_t v6 = (void **)v5;
  sub_10004CC28(&v6);
}

void sub_10097CB04(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    unint64_t v4 = v1;
    if ((void *)v3 != v1)
    {
      do
        uint64_t v3 = sub_10000AE14(v3 - 16);
      while ((void *)v3 != v1);
      unint64_t v4 = *a1;
    }

    a1[1] = v1;
    operator delete(v4);
    *a1 = 0LL;
    a1[1] = 0LL;
    a1[2] = 0LL;
  }

uint64_t *sub_10097CB60(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = sub_1000087E8(a1, (uint64_t *)a2);
  uint64_t v5 = (void **)(a2 + 80);
  sub_10004CC28(&v5);
  uint64_t v5 = (void **)(a2 + 56);
  sub_10004CC28(&v5);
  operator delete((void *)a2);
  return v3;
}

uint64_t sub_10097CBB8(uint64_t **a1, unint64_t *a2)
{
  uint64_t v3 = (uint64_t **)sub_10097CBFC((uint64_t)a1, a2);
  if (a1 + 1 == v3) {
    return 0LL;
  }
  sub_10097CB60(a1, (uint64_t)v3);
  return 1LL;
}

void *sub_10097CBFC(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *(void **)(a1 + 8);
  uint64_t v2 = (void *)(a1 + 8);
  uint64_t v3 = v4;
  if (!v4) {
    return v2;
  }
  unint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  unint64_t v7 = v2;
  do
  {
    unint64_t v8 = v3[4];
    BOOL v10 = v8 == v5;
    BOOL v9 = v8 < v5;
    if (v10) {
      BOOL v9 = v3[5] < v6;
    }
    BOOL v10 = !v9;
    if (v9) {
      BOOL v11 = v3 + 1;
    }
    else {
      BOOL v11 = v3;
    }
    if (v10) {
      unint64_t v7 = v3;
    }
    uint64_t v3 = (void *)*v11;
  }

  while (*v11);
  if (v7 == v2) {
    return v2;
  }
  unint64_t v12 = v7[4];
  BOOL v13 = v6 < v7[5];
  BOOL v10 = v5 == v12;
  BOOL v14 = v5 < v12;
  if (v10) {
    BOOL v14 = v13;
  }
  if (v14) {
    return v2;
  }
  return v7;
}

double *sub_10097CC70(double *a1, double a2, double a3, double a4)
{
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  sub_100295604(a1, a1 + 1, a1 + 2, a1 + 3, a2, a3, a4);
  sub_100292950(a1[1]);
  *((void *)a1 + 1) = v5;
  sub_100292950(a1[3]);
  *((void *)a1 + 3) = v6;
  return a1;
}

unint64_t sub_10097CCC4(void *a1)
{
  if (a1)
  {
    id v2 = [a1 roadID];
    id v17 = v2;
    if ((unint64_t)[a1 coordinateCount] > 1)
    {
      __int128 v20 = *(_OWORD *)[a1 coordinates];
      *(_OWORD *)int v16 = *((_OWORD *)[a1 coordinates] + 1);
      if ((unint64_t)[a1 coordinateCount] >= 2)
      {
        unint64_t v8 = 1LL;
        uint64_t v9 = 16LL;
        do
        {
          *(_OWORD *)int v16 = *(_OWORD *)((char *)[a1 coordinates] + v9);
          ++v8;
          v9 += 16LL;
        }

        while ((unint64_t)[a1 coordinateCount] > v8);
      }

      if (!sub_10097D204( (double *)&v20,  v16,  (int)[a1 isRail],  (int)objc_msgSend(a1, "isBridge"),  (int)objc_msgSend(a1, "isTunnel"),  (unint64_t *)&v17))
      {
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101862CF0);
        }
        BOOL v10 = (os_log_s *)qword_1019348B8;
        if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)__int128 buf = 134283521;
          id v22 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "CLMM,GeoMapDataID,unable to make CLRoadID from GeoMapFeatureAccess,%{private}lld",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019348B0 != -1) {
            dispatch_once(&qword_1019348B0, &stru_101862CF0);
          }
          int v18 = 134283521;
          unint64_t v19 = (unint64_t)v17;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,GeoMapDataID,unable to make CLRoadID from GeoMapFeatureAccess,%{private}lld",  &v18,  12);
          uint64_t v15 = (uint8_t *)v14;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "static uint64_t CLGeoMapFeatureAccessGeometryCommon::CLGeoMapDataID::getRoadID(const GEOMapFeatureRoad * _Nonnull)",  "%s\n",  v14);
          if (v15 != buf) {
            free(v15);
          }
        }
      }

      return (unint64_t)v17;
    }

    else
    {
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      uint64_t v3 = (os_log_s *)qword_1019348B8;
      if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)__int128 buf = 134283521;
        id v22 = [a1 roadID];
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "CLMM,GeoMapDataID,less than two coordinates,roadID,%{private}lld",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019348B0 != -1) {
          dispatch_once(&qword_1019348B0, &stru_101862CF0);
        }
        uint64_t v4 = qword_1019348B8;
        LODWORD(v2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 134283521;
        *(void *)((char *)&v20 + 4) = [a1 roadID];
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v4,  2LL,  "CLMM,GeoMapDataID,less than two coordinates,roadID,%{private}lld",  &v20,  12);
        uint64_t v6 = (uint8_t *)v5;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static uint64_t CLGeoMapFeatureAccessGeometryCommon::CLGeoMapDataID::getRoadID(const GEOMapFeatureRoad * _Nonnull)",  "%s\n",  v5);
        if (v6 != buf) {
          free(v6);
        }
      }
    }
  }

  else
  {
    if (qword_1019348B0 != -1) {
      dispatch_once(&qword_1019348B0, &stru_101862CF0);
    }
    unint64_t v7 = (os_log_s *)qword_1019348B8;
    if (os_log_type_enabled((os_log_t)qword_1019348B8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "CLMM,GeoMapDataID,null feature", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019348B0 != -1) {
        dispatch_once(&qword_1019348B0, &stru_101862CF0);
      }
      LOWORD(v2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019348B8,  16LL,  "CLMM,GeoMapDataID,null feature",  &v20,  2);
      BOOL v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static uint64_t CLGeoMapFeatureAccessGeometryCommon::CLGeoMapDataID::getRoadID(const GEOMapFeatureRoad * _Nonnull)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    return 0LL;
  }

  return (unint64_t)v2;
}

BOOL sub_10097D204(double *a1, double *a2, int a3, int a4, int a5, unint64_t *a6)
{
  uint64_t v6 = 0LL;
  if (a1 && a2)
  {
    double v8 = 0.2;
    if (a5) {
      double v8 = 0.35;
    }
    if (a4) {
      double v8 = 0.3;
    }
    if (a3) {
      double v9 = 0.25;
    }
    else {
      double v9 = v8;
    }
    double v10 = a1[1];
    double v11 = a2[1];
    v15[0] = *a1 + (*a2 - *a1) * v9;
    double v12 = sub_100D2D3E0(v10, v11);
    sub_100292950(v10 + v12 * v9);
    v15[1] = v13;
    sub_10097D2B4(v15, a6);
    return *a6 != 0;
  }

  return v6;
}

BOOL sub_10097D2B4(double *a1, unint64_t *a2)
{
  BOOL v4 = sub_10029286C(*a1, a1[1]);
  if (!v4) {
    *a2 = (unint64_t)((a1[1] + 180.0) * 10000000.0) | ((unint64_t)((*a1 + 90.0) * 10000000.0) << 32);
  }
  return !v4;
}

uint64_t sub_10097D320(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (0x8E38E38E38E38E39LL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0x38E38E38E38E38FLL) {
      sub_100007008();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_100046304(result, a2);
    v7[1] = v7[0] + v5;
    float32x2_t v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 72 * v6;
    sub_10097D51C(a1, v7);
    return sub_10097D6C8((uint64_t)v7);
  }

  return result;
}

void sub_10097D3C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10097D3DC(void *a1, double a2, double a3)
{
  uint64_t v6 = (uint64_t)(a1 + 8);
  unint64_t v7 = a1[8];
  double v8 = (double *)a1[7];
  if ((unint64_t)v8 >= v7)
  {
    double v10 = (void **)(a1 + 6);
    double v11 = (double *)a1[6];
    uint64_t v12 = ((char *)v8 - (char *)v11) >> 4;
    unint64_t v13 = v12 + 1;
    uint64_t v14 = v7 - (void)v11;
    if (v14 >> 3 > v13) {
      unint64_t v13 = v14 >> 3;
    }
    else {
      unint64_t v15 = v13;
    }
    if (v15)
    {
      int v16 = (char *)sub_100037038(v6, v15);
      double v11 = (double *)a1[6];
      double v8 = (double *)a1[7];
    }

    else
    {
      int v16 = 0LL;
    }

    id v17 = (double *)&v16[16 * v12];
    int v18 = &v16[16 * v15];
    *id v17 = a2;
    v17[1] = a3;
    double v9 = v17 + 2;
    if (v8 != v11)
    {
      do
      {
        *((_OWORD *)v17 - 1) = *((_OWORD *)v8 - 1);
        v17 -= 2;
        v8 -= 2;
      }

      while (v8 != v11);
      double v11 = (double *)*v10;
    }

    a1[6] = v17;
    a1[7] = v9;
    a1[8] = v18;
    if (v11) {
      operator delete(v11);
    }
  }

  else
  {
    *double v8 = a2;
    v8[1] = a3;
    double v9 = v8 + 2;
  }

  a1[7] = v9;
}

uint64_t sub_10097D4DC(uint64_t *a1, __int128 *a2)
{
  uint64_t v3 = a1 + 2;
  unint64_t v4 = a1[3];
  if (v4 >= a1[4])
  {
    uint64_t result = sub_10097D7B4(v3, a2);
  }

  else
  {
    sub_10097D754((uint64_t)v3, a2);
    uint64_t result = v4 + 72;
  }

  a1[3] = result;
  return result;
}

uint64_t sub_10097D51C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10097D590((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10097D590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v15 = a6;
  *((void *)&v15 + 1) = a7;
  __int128 v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  _OWORD v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }

  else
  {
    do
    {
      __int128 v8 = *(_OWORD *)(a3 - 72);
      __int128 v9 = *(_OWORD *)(a3 - 56);
      *(_OWORD *)(v7 - 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *(_OWORD *)(a3 - 40);
      *(_OWORD *)(v7 - 56) = v9;
      *(_OWORD *)(v7 - 72) = v8;
      *(void *)(v7 - 16) = 0LL;
      *(void *)(v7 - _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
      *(void *)(v7 - 24) = 0LL;
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(a3 - 24);
      *(void *)(v7 - _Block_object_dispose((const void *)(v1 - 224), 8) = *(void *)(a3 - 8);
      *(void *)(a3 - 24) = 0LL;
      *(void *)(a3 - 16) = 0LL;
      *(void *)(a3 - _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
      uint64_t v7 = *((void *)&v15 + 1) - 72LL;
      *((void *)&v15 + 1) -= 72LL;
      a3 -= 72LL;
    }

    while (a3 != a5);
    uint64_t v10 = v15;
  }

  char v13 = 1;
  sub_10097D650((uint64_t)v12);
  return v10;
}

uint64_t sub_10097D650(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_10097D684(a1);
  }
  return a1;
}

void sub_10097D684(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8LL);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8LL);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)(v1 + 48);
    if (v3)
    {
      *(void *)(v1 + 56) = v3;
      operator delete(v3);
    }

    v1 += 72LL;
  }

uint64_t sub_10097D6C8(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10097D6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    *(void *)(a1 + 16) = v2 - 72;
    uint64_t v5 = *(void **)(v2 - 24);
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }

    else
    {
      v2 -= 72LL;
    }
  }

void *sub_10097D754(uint64_t a1, __int128 *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  __int128 v4 = *a2;
  __int128 v5 = a2[2];
  *(_OWORD *)(v3 + 16) = a2[1];
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)uint64_t v3 = v4;
  *(void *)(v3 + 56) = 0LL;
  *(void *)(v3 + 64) = 0LL;
  *(void *)(v3 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  uint64_t result = sub_1000577B4( (void *)(v3 + 48),  *((const void **)a2 + 6),  *((void *)a2 + 7),  (uint64_t)(*((void *)a2 + 7) - *((void *)a2 + 6)) >> 4);
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v3 + 72;
  return result;
}

void sub_10097D7AC(_Unwind_Exception *a1)
{
  *(void *)(v1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_10097D7B4(uint64_t *a1, __int128 *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0x8E38E38E38E38E39LL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x38E38E38E38E38ELL) {
    sub_100007008();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x8E38E38E38E38E39LL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x1C71C71C71C71C7LL) {
    unint64_t v9 = 0x38E38E38E38E38ELL;
  }
  else {
    unint64_t v9 = v5;
  }
  unint64_t v19 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_100046304(v7, v9);
  }
  else {
    uint64_t v10 = 0LL;
  }
  double v11 = &v10[72 * v4];
  v16[0] = v10;
  v16[1] = v11;
  id v17 = v11;
  int v18 = &v10[72 * v9];
  __int128 v12 = *a2;
  __int128 v13 = a2[2];
  *((_OWORD *)v11 + 1) = a2[1];
  *((_OWORD *)v11 + 2) = v13;
  *(_OWORD *)double v11 = v12;
  *((void *)v11 + 7) = 0LL;
  *((void *)v11 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *((void *)v11 + 6) = 0LL;
  sub_1000577B4( (void *)v11 + 6,  *((const void **)a2 + 6),  *((void *)a2 + 7),  (uint64_t)(*((void *)a2 + 7) - *((void *)a2 + 6)) >> 4);
  v17 += 72;
  sub_10097D51C(a1, v16);
  uint64_t v14 = a1[1];
  sub_10097D6C8((uint64_t)v16);
  return v14;
}

void sub_10097D8DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10097D8F0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101862D20;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10097D904(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101862D20;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_10097D928(uint64_t a1)
{
}

void sub_10097D950(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 184);
  if (v3)
  {
    *(void *)(a2 + 192) = v3;
    operator delete(v3);
  }

  unint64_t v4 = *(void **)(a2 + 160);
  if (v4)
  {
    *(void *)(a2 + 16_Block_object_dispose((const void *)(v1 - 224), 8) = v4;
    operator delete(v4);
  }

  unint64_t v5 = *(void **)(a2 + 136);
  if (v5)
  {
    *(void *)(a2 + 144) = v5;
    operator delete(v5);
  }

void *sub_10097D9B4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  unint64_t v5 = (void *)a2;
  if (a5 < 1) {
    return v5;
  }
  uint64_t v11 = a1[2];
  uint64_t v9 = (uint64_t)(a1 + 2);
  uint64_t v10 = v11;
  unint64_t v12 = *(void *)(v9 - 8);
  if (a5 > (uint64_t)(v11 - v12) >> 4)
  {
    uint64_t v13 = *a1;
    unint64_t v14 = a5 + ((uint64_t)(v12 - *a1) >> 4);
    if (v14 >> 60) {
      sub_100007008();
    }
    uint64_t v15 = (a2 - v13) >> 4;
    uint64_t v16 = v10 - v13;
    if (v16 >> 3 > v14) {
      unint64_t v14 = v16 >> 3;
    }
    else {
      unint64_t v17 = v14;
    }
    v33[4] = v9;
    if (v17) {
      int v18 = (char *)sub_100037038(v9, v17);
    }
    else {
      int v18 = 0LL;
    }
    double v26 = (uint64_t *)&v18[16 * v15];
    v33[0] = v18;
    v33[1] = v26;
    void v33[3] = &v18[16 * v17];
    unsigned int v27 = &v26[2 * a5];
    do
    {
      *double v26 = *a3;
      uint64_t v28 = a3[1];
      v26[1] = v28;
      if (v28)
      {
        uint64_t v29 = (unint64_t *)(v28 + 8);
        do
          unint64_t v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
      }

      v26 += 2;
      a3 += 2;
    }

    while (v26 != v27);
    v33[2] = v27;
    unint64_t v5 = (void *)sub_10097DC1C(a1, v33, v5);
    sub_1000EC3DC((uint64_t)v33);
    return v5;
  }

  uint64_t v19 = (uint64_t)(v12 - a2) >> 4;
  if (v19 >= a5)
  {
    __int128 v20 = &a3[2 * a5];
LABEL_29:
    sub_10097DBA0((uint64_t)a1, a2, v12, (char *)(a2 + 16 * a5));
    if (v20 != a3)
    {
      uint64_t v31 = v5;
      do
      {
        sub_1000F2F30(v31, a3);
        a3 += 2;
        v31 += 2;
      }

      while (a3 != v20);
    }

    return v5;
  }

  __int128 v20 = &a3[2 * v19];
  if (v20 == a4)
  {
    id v22 = *(uint64_t **)(v9 - 8);
  }

  else
  {
    double v21 = &a3[2 * v19];
    id v22 = *(uint64_t **)(v9 - 8);
    do
    {
      uint64_t *v22 = *v21;
      uint64_t v23 = v21[1];
      v22[1] = v23;
      if (v23)
      {
        id v24 = (unint64_t *)(v23 + 8);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
      }

      v21 += 2;
      v22 += 2;
    }

    while (v21 != a4);
  }

  a1[1] = (uint64_t)v22;
  return v5;
}

void sub_10097DB8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10097DBA0(uint64_t result, uint64_t a2, unint64_t a3, char *a4)
{
  unint64_t v4 = *(char **)(result + 8);
  unint64_t v5 = (char *)(a2 + v4 - a4);
  uint64_t v6 = v4;
  while ((unint64_t)v5 < a3)
  {
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v5;
    v6 += 16;
    *(void *)unint64_t v5 = 0LL;
    *((void *)v5 + 1) = 0LL;
    v5 += 16;
  }

  *(void *)(result + _Block_object_dispose((const void *)(v1 - 224), 8) = v6;
  if (v4 != a4)
  {
    uint64_t v7 = (uint64_t)(v4 - 16);
    uint64_t v8 = 16 * ((v4 - a4) >> 4);
    uint64_t v9 = a2 - 16;
    do
    {
      uint64_t result = sub_10005F550(v7, (__int128 *)(v9 + v8));
      v7 -= 16LL;
      v8 -= 16LL;
    }

    while (v8);
  }

  return result;
}

uint64_t sub_10097DC1C(void *a1, void *a2, void *a3)
{
  uint64_t result = a2[1];
  unint64_t v5 = (void *)*a1;
  uint64_t v6 = result;
  if ((void *)*a1 != a3)
  {
    uint64_t v7 = a3;
    uint64_t v6 = a2[1];
    do
    {
      __int128 v8 = *((_OWORD *)v7 - 1);
      v7 -= 2;
      *(_OWORD *)(v6 - 16) = v8;
      v6 -= 16LL;
      *uint64_t v7 = 0LL;
      v7[1] = 0LL;
    }

    while (v7 != v5);
  }

  a2[1] = v6;
  uint64_t v9 = (void *)a1[1];
  uint64_t v10 = (_OWORD *)a2[2];
  if (v9 != a3)
  {
    do
    {
      *v10++ = *(_OWORD *)a3;
      *a3 = 0LL;
      a3[1] = 0LL;
      a3 += 2;
    }

    while (a3 != v9);
    uint64_t v6 = a2[1];
  }

  a2[2] = v10;
  uint64_t v11 = (void *)*a1;
  *a1 = v6;
  a2[1] = v11;
  uint64_t v12 = a1[1];
  a1[1] = a2[2];
  a2[2] = v12;
  uint64_t v13 = a1[2];
  a1[2] = a2[3];
  a2[3] = v13;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10097DCB8(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v6 = a2;
  __int128 v8 = *(uint64_t **)a1;
  if (a4 > (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 4)
  {
    sub_10097CB04((void **)a1);
    if (a4 >> 60) {
      sub_100007008();
    }
    uint64_t v9 = *(void *)(a1 + 16) - *(void *)a1;
    uint64_t v10 = v9 >> 3;
    if (v9 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = (uint64_t)sub_10005782C((void *)a1, v11);
    uint64_t v13 = *(uint64_t **)(a1 + 8);
    while (v6 != a3)
    {
      uint64_t v14 = v6[1];
      *uint64_t v13 = *v6;
      v13[1] = v14;
      if (v14)
      {
        uint64_t v15 = (unint64_t *)(v14 + 8);
        do
          unint64_t v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }

      v6 += 2;
      v13 += 2;
    }

_OWORD *sub_10097DE68(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v5 = (void **)sub_10097C87C((uint64_t)a1, &v9, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = operator new(0x38uLL);
    v6[2] = *(_OWORD *)a3;
    *((_BYTE *)v6 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = *(_BYTE *)(a3 + 16);
    sub_1000085FC(a1, v9, v7, (uint64_t *)v6);
  }

  return v6;
}

uint64_t *sub_10097DEF0(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v5 = (void **)sub_10097C87C((uint64_t)a1, &v12, a2);
  uint64_t v6 = (uint64_t *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = (uint64_t *)operator new(0x40uLL);
    v10[1] = a1 + 1;
    __int128 v8 = *(_OWORD *)(a3 + 16);
    *((_OWORD *)v6 + 2) = *(_OWORD *)a3;
    *((_OWORD *)v6 + 3) = v8;
    *(void *)(a3 + 16) = 0LL;
    *(void *)(a3 + 24) = 0LL;
    char v11 = 1;
    sub_1000085FC(a1, v12, v7, v6);
    v10[0] = 0LL;
    sub_10097DF9C((uint64_t)v10, 0LL);
  }

  return v6;
}

void sub_10097DF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_10000AE14((uint64_t)v2 + 48);
    }
    operator delete(v2);
  }

uint64_t sub_10097DFE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = (a1[1] - *a1) >> 6;
  unint64_t v4 = v3 + 1;
  uint64_t v6 = a1[2] - *a1;
  if (v6 >> 5 > v4) {
    unint64_t v4 = v6 >> 5;
  }
  else {
    unint64_t v7 = v4;
  }
  uint64_t v15 = a1 + 2;
  if (v7) {
    __int128 v8 = (char *)sub_10001275C((uint64_t)(a1 + 2), v7);
  }
  else {
    __int128 v8 = 0LL;
  }
  char v11 = v8;
  uint64_t v12 = &v8[64 * v3];
  uint64_t v14 = &v8[64 * v7];
  sub_10097E0CC((uint64_t)(a1 + 2), (uint64_t)v12, a2);
  uint64_t v13 = v12 + 64;
  sub_10097E1B0(a1, &v11);
  uint64_t v9 = a1[1];
  sub_10097E364((uint64_t)&v11);
  return v9;
}

void sub_10097E0B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

double sub_10097E0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = *(void *)a3;
  *(void *)(a2 + 16) = 0LL;
  *(void *)(a2 + 24) = 0LL;
  *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  sub_10097E130( (char *)(a2 + 8),  *(void **)(a3 + 8),  *(void **)(a3 + 16),  (uint64_t)(*(void *)(a3 + 16) - *(void *)(a3 + 8)) >> 4);
  *(void *)(a2 + 32) = *(void *)(a3 + 32);
  *(void *)(a2 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *(void *)(a3 + 40);
  *(void *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = *(void *)(a3 + 48);
  double result = *(double *)(a3 + 56);
  *(double *)(a2 + 56) = result;
  return result;
}

char *sub_10097E130(char *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    double result = sub_10005782C(result, a4);
    unint64_t v7 = (void *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      *unint64_t v7 = *a2;
      v7[1] = a2[1];
      v7 += 2;
      a2 += 2;
    }

    *((void *)v6 + 1) = v7;
  }

  return result;
}

void sub_10097E194(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_10097E1B0(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10097E224((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10097E224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v16 = a6;
  *((void *)&v16 + 1) = a7;
  __int128 v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }

  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 64LL;
      sub_10097E0CC(a1, v7 - 64, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 64LL;
      *((void *)&v16 + 1) -= 64LL;
    }

    while (v9 != a5);
    uint64_t v11 = v16;
  }

  char v14 = 1;
  sub_10097E2EC((uint64_t)v13);
  return v11;
}

void sub_10097E2D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10097E2EC(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_10097E320(a1);
  }
  return a1;
}

void sub_10097E320(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8LL);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8LL);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)(v1 + 8);
    if (v3)
    {
      *(void *)(v1 + 16) = v3;
      operator delete(v3);
    }

    v1 += 64LL;
  }

uint64_t sub_10097E364(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10097E398(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    *(void *)(a1 + 16) = v2 - 64;
    uint64_t v5 = *(void **)(v2 - 56);
    if (v5)
    {
      *(void *)(v2 - 4_Block_object_dispose((const void *)(v1 - 224), 8) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }

    else
    {
      v2 -= 64LL;
    }
  }

void sub_10097E3F0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101862D70;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10097E404(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101862D70;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_10097E428(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 40);
  sub_10097E454(&v1);
}

void sub_10097E454(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_10097E494((uint64_t *)v2);
    operator delete(**a1);
  }

void sub_10097E494(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 72LL)
  {
    unint64_t v4 = *(void **)(i - 24);
    if (v4)
    {
      *(void *)(i - 16) = v4;
      operator delete(v4);
    }
  }

  a1[1] = v2;
}

uint64_t sub_10097E4E0(uint64_t a1)
{
  *(void *)a1 = off_101862DC0;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(_OWORD *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_DWORD *)(a1 + 32) = -1;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_DWORD *)(a1 + 72) = 0;
  *(void *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 3212836864LL;
  sub_10097E574(a1);
  return a1;
}

void sub_10097E548(_Unwind_Exception *exception_object)
{
}

void sub_10097E574(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  if (v2)
  {
    operator delete[](v2);
    *(void *)(a1 + 64) = 0LL;
  }

  *(_DWORD *)(a1 + 72) = 0;
  uint64_t v3 = *(void *)(a1 + 80);
  if (v3)
  {
    sub_100A11D98(v3);
    unint64_t v4 = *(void **)(a1 + 80);
    if (v4) {
      operator delete(v4);
    }
    *(void *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  }

uint64_t sub_10097E5C4( uint64_t a1, char *a2, int a3, char *a4, uint64_t a5, int a6, unsigned __int16 a7, int a8, float a9)
{
  int v18 = operator new(0x60uLL);
  *(void *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v18;
  bzero(v18, 0x60uLL);
  sub_1010DDBC0(&v23, a2);
  uint64_t v19 = (void **)(a1 + 8);
  *(_OWORD *)uint64_t v19 = v23;
  *(void *)(a1 + 24) = v24;
  *(_DWORD *)(a1 + 32) = a3;
  sub_1010DDBC0(&v23, a4);
  uint64_t v20 = (void **)(a1 + 40);
  *(_OWORD *)uint64_t v20 = v23;
  *(void *)(a1 + 56) = v24;
  *(void *)(a1 + 64) = a5;
  *(_DWORD *)(a1 + 72) = a6;
  *(float *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = a9;
  *(_DWORD *)(a1 + 92) = a8;
  uint64_t v21 = *(void *)(a1 + 80);
  *(void *)(v21 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = v19;
  return sub_100A11C34(v21, a5, (unsigned __int16)a6, a7, (float)((float)a6 * 1.4142) * a9);
}

uint64_t sub_10097E6EC(uint64_t a1)
{
  *(void *)a1 = off_101862DC0;
  uint64_t v2 = *(void *)(a1 + 80);
  if (v2) {
    sub_100A11D98(v2);
  }
  sub_10097E574(a1);
  return a1;
}

void sub_10097E754(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10097E6EC(a1);
  operator delete(v1);
}

void sub_10097E768(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 80);
  if (v1) {
    sub_100A11D54(v1);
  }
}

float sub_10097E778(uint64_t a1, void *a2, int8x16_t a3, int8x16_t a4)
{
  uint64_t v6 = 0LL;
  float result = sub_1006AD500(*(void *)(a1 + 80), a2, (double *)&v6, a3, a4);
  if (result != 3.4028e38) {
    return result / (float)((float)*(int *)(a1 + 72) * 1.4142);
  }
  return result;
}

uint64_t sub_10097E7DC(uint64_t a1)
{
  uint64_t result = a1 + 8;
  return result;
}

float sub_10097E7F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 80);
  float result = -1.0;
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 72);
    if (v3 >= 1) {
      return *(float *)(v1 + 32) / (float)((float)v3 * 1.4142);
    }
  }

  return result;
}

BOOL *sub_10097E82C()
{
  unsigned __int8 v0 = (BOOL *)operator new(0x1A8uLL);
  float result = sub_10097E8B4(v0);
  qword_1019A1898 = (uint64_t)v0;
  return result;
}

void sub_10097E85C(_Unwind_Exception *a1)
{
}

uint64_t sub_10097E870()
{
  if (qword_101999978 != -1) {
    dispatch_once(&qword_101999978, &stru_101862DE0);
  }
  return qword_1019A1898;
}

BOOL *sub_10097E8B4(BOOL *a1)
{
  uint64_t v2 = sub_1006DC9EC((uint64_t)a1, (uint64_t)"CLEarGestureNotifier", 1);
  *(void *)uint64_t v2 = off_101862E10;
  *(void *)(v2 + 32) = 0LL;
  *(_DWORD *)(v2 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
  *(_OWORD *)(v2 + 44) = xmmword_101341B60;
  *(void *)(v2 + 64) = 0xBFF0000000000000LL;
  *(void *)(v2 + 72) = off_10184DB68;
  *(void *)(v2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 50LL;
  *(void *)(v2 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = off_10184DB98;
  *(void *)(v2 + 96) = 50LL;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(void *)(v2 + 152) = 0LL;
  *(void *)(v2 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = off_10184DB98;
  *(void *)(v2 + 16_Block_object_dispose((const void *)(v1 - 224), 8) = 50LL;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(void *)(v2 + 224) = 0LL;
  *(void *)(v2 + 232) = off_10184DB98;
  *(void *)(v2 + 24sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 50LL;
  *(_OWORD *)(v2 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(v2 + 264) = 0u;
  *(_OWORD *)(v2 + 28sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(void *)(v2 + 296) = 0LL;
  *(void *)(v2 + 304) = 0xBFF0000000000000LL;
  *(_WORD *)(v2 + 312) = 256;
  *(_BYTE *)(v2 + 314) = 0;
  uint64_t v3 = v2 + 320;
  *(void *)(v2 + 32sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(void *)(v2 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(v2 + 336) = 0LL;
  *(void *)(v2 + 344) = 0xBFF0000000000000LL;
  *(void *)(v2 + 352) = 0xBFF0000000000000LL;
  *(_DWORD *)(v2 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
  *(void *)(v2 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  unint64_t v4 = (uint64_t *)(v2 + 376);
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(v2 + 376) = _Q0;
  *(void *)(v2 + 392) = 0LL;
  *(void *)(v2 + 40sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(_DWORD *)(v2 + 40_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  *(void *)(v2 + 416) = 0xBFF0000000000000LL;
  uint64_t v10 = sub_1006E27E8();
  sub_100413284(v10, buf);
  uint64_t v11 = a1 + 312;
  char v12 = sub_1002A6F64(*(uint64_t *)&buf[0], "EnableEarGesture", a1 + 312);
  char v13 = v12;
  char v14 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
  if (!*((void *)&buf[0] + 1)) {
    goto LABEL_5;
  }
  __int128 v15 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
  do
    unint64_t v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (v16)
  {
LABEL_5:
    if ((v12 & 1) != 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if ((v13 & 1) == 0) {
LABEL_6:
  }
    *uint64_t v11 = (sub_1004FAB40() & 8) != 0;
LABEL_7:
  if (!&_BKSHIDServicesRequestProximityDetectionMode)
  {
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862E58);
    }
    unint64_t v17 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Ear gesture disabled on this platform because BKSHIDServicesRequestProximityDetectionMode is not present",  (uint8_t *)buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      LOWORD(v74) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Ear gesture disabled on this platform because BKSHIDServicesRequestProximityDetectionMode is not present",  &v74,  2);
      __int16 v72 = (char *)v71;
      sub_10029211C("Generic", 1LL, 0, 2LL, "CLEarGestureNotifier::CLEarGestureNotifier()", "%s\n", v71);
    }

    *uint64_t v11 = 0;
  }

  if (qword_101934530 != -1) {
    dispatch_once(&qword_101934530, &stru_101862E58);
  }
  int v18 = (os_log_s *)qword_101934538;
  if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v19 = *v11;
    LODWORD(buf[0]) = 67240192;
    DWORD1(buf[0]) = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Ear gesture enabled: %{public}d",  (uint8_t *)buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862E58);
    }
    BOOL v59 = *v11;
    int v74 = 67240192;
    LODWORD(v75) = v59;
    LODWORD(v73) = 8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Ear gesture enabled: %{public}d",  &v74,  v73);
    __int128 v61 = (char *)v60;
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLEarGestureNotifier::CLEarGestureNotifier()", "%s\n", v60);
  }

  if (*v11)
  {
    uint64_t v20 = sub_1006E27E8();
    sub_100413284(v20, buf);
    uint64_t v21 = a1 + 314;
    char v22 = sub_1002A6F64(*(uint64_t *)&buf[0], "EarGestureIgnoreProx", a1 + 314);
    char v23 = v22;
    uint64_t v24 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
    if (!*((void *)&buf[0] + 1)) {
      goto LABEL_24;
    }
    unint64_t v25 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
    do
      unint64_t v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
      if ((v23 & 1) != 0)
      {
LABEL_26:
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        unsigned int v27 = (os_log_s *)qword_101934538;
        if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
        {
          int v28 = *v21;
          LODWORD(buf[0]) = 67240192;
          DWORD1(buf[0]) = v28;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Ignoring prox: %{public}d",  (uint8_t *)buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934530 != -1) {
            dispatch_once(&qword_101934530, &stru_101862E58);
          }
          int v62 = *v21;
          int v74 = 67240192;
          LODWORD(v75) = v62;
          LODWORD(v73) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Ignoring prox: %{public}d",  &v74,  v73);
          __int16 v64 = (char *)v63;
          sub_10029211C("Generic", 1LL, 0, 2LL, "CLEarGestureNotifier::CLEarGestureNotifier()", "%s\n", v63);
        }

        uint64_t v29 = sub_1006E27E8();
        sub_100413284(v29, buf);
        if ((sub_1002A6F64(*(uint64_t *)&buf[0], "LogProx", a1 + 411) & 1) != 0)
        {
          unint64_t v30 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
          if (*((void *)&buf[0] + 1))
          {
            uint64_t v31 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
            do
              unint64_t v32 = __ldaxr(v31);
            while (__stlxr(v32 - 1, v31));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
              std::__shared_weak_count::__release_weak(v30);
            }
          }
        }

        else
        {
          int v33 = *v21;
          int v34 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
          if (!*((void *)&buf[0] + 1)) {
            goto LABEL_41;
          }
          __int32 v35 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
          do
            unint64_t v36 = __ldaxr(v35);
          while (__stlxr(v36 - 1, v35));
          if (!v36)
          {
            ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
            std::__shared_weak_count::__release_weak(v34);
            if (v33) {
              goto LABEL_43;
            }
          }

          else
          {
LABEL_41:
            if (v33)
            {
LABEL_43:
              uint64_t v37 = (void *)sub_1006E2838();
              sub_1003CC884((uint64_t)sub_10097F41C, (uint64_t)a1, v37, buf);
              uint64_t v38 = *(void *)&buf[0];
              *(void *)&buf[0] = 0LL;
              uint64_t v39 = *(void *)v3;
              *(void *)uint64_t v3 = v38;
              if (v39)
              {
                (*(void (**)(uint64_t))(*(void *)v39 + 8LL))(v39);
                uint64_t v40 = *(void *)&buf[0];
                *(void *)&buf[0] = 0LL;
                if (v40) {
                  (*(void (**)(uint64_t))(*(void *)v40 + 8LL))(v40);
                }
              }

              [*(id *)(*(void *)v3 + 16) register:*(void *)(*(void *)v3 + 8) forNotification:10 registrationInfo:0];
              [*(id *)(*(void *)v3 + 16) register:*(void *)(*(void *)v3 + 8) forNotification:11 registrationInfo:0];
              uint64_t v41 = sub_1006E27E8();
              sub_100413284(v41, buf);
              char v42 = sub_1002A82BC(*(uint64_t *)&buf[0], "EarGestureMaxProxBeforeMotionInterval", v4);
              char v43 = v42;
              uint64_t v44 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
              if (!*((void *)&buf[0] + 1)) {
                goto LABEL_50;
              }
              double v45 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
              do
                unint64_t v46 = __ldaxr(v45);
              while (__stlxr(v46 - 1, v45));
              if (!v46)
              {
                ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
                std::__shared_weak_count::__release_weak(v44);
                if ((v43 & 1) != 0)
                {
LABEL_52:
                  if (qword_101934530 != -1) {
                    dispatch_once(&qword_101934530, &stru_101862E58);
                  }
                  uint64_t v47 = (os_log_s *)qword_101934538;
                  if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
                  {
                    uint64_t v48 = *v4;
                    LODWORD(buf[0]) = 134283521;
                    *(void *)((char *)buf + 4) = v48;
                    _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "Max prox before motion interval = %{private}f",  (uint8_t *)buf,  0xCu);
                  }

                  if (sub_1002921D0(115, 2))
                  {
                    bzero(buf, 0x65CuLL);
                    if (qword_101934530 != -1) {
                      dispatch_once(&qword_101934530, &stru_101862E58);
                    }
                    uint64_t v65 = *v4;
                    int v74 = 134283521;
                    uint64_t v75 = v65;
                    LODWORD(v73) = 12;
                    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Max prox before motion interval = %{private}f",  &v74,  v73);
                    unsigned int v67 = (char *)v66;
                    sub_10029211C("Generic", 1LL, 0, 2LL, "CLEarGestureNotifier::CLEarGestureNotifier()", "%s\n", v66);
                  }

                  uint64_t v49 = sub_1006E27E8();
                  sub_100413284(v49, buf);
                  __int32 v50 = (uint64_t *)(a1 + 384);
                  char v51 = sub_1002A82BC(*(uint64_t *)&buf[0], "EarGestureMaxMotionBeforeProxInterval", a1 + 384);
                  char v52 = v51;
                  int v53 = (std::__shared_weak_count *)*((void *)&buf[0] + 1);
                  if (!*((void *)&buf[0] + 1)) {
                    goto LABEL_61;
                  }
                  __int16 v54 = (unint64_t *)(*((void *)&buf[0] + 1) + 8LL);
                  do
                    unint64_t v55 = __ldaxr(v54);
                  while (__stlxr(v55 - 1, v54));
                  if (!v55)
                  {
                    ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
                    std::__shared_weak_count::__release_weak(v53);
                    if ((v52 & 1) != 0) {
                      goto LABEL_63;
                    }
                  }

                  else
                  {
LABEL_61:
                    if ((v51 & 1) != 0)
                    {
LABEL_63:
                      if (qword_101934530 != -1) {
                        dispatch_once(&qword_101934530, &stru_101862E58);
                      }
                      uint64_t v56 = (os_log_s *)qword_101934538;
                      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
                      {
                        uint64_t v57 = *v50;
                        LODWORD(buf[0]) = 134283521;
                        *(void *)((char *)buf + 4) = v57;
                        _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "Max motion before prox interval = %{private}f",  (uint8_t *)buf,  0xCu);
                      }

                      if (sub_1002921D0(115, 2))
                      {
                        bzero(buf, 0x65CuLL);
                        if (qword_101934530 != -1) {
                          dispatch_once(&qword_101934530, &stru_101862E58);
                        }
                        uint64_t v68 = *v50;
                        int v74 = 134283521;
                        uint64_t v75 = v68;
                        LODWORD(v73) = 12;
                        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Max motion before prox interval = %{private}f",  &v74,  v73);
                        __int16 v70 = (char *)v69;
                        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLEarGestureNotifier::CLEarGestureNotifier()",  "%s\n",  v69);
                      }

                      return a1;
                    }
                  }

                  uint64_t *v50 = 0x3FCB851EB851EB85LL;
                  goto LABEL_63;
                }
              }

              else
              {
LABEL_50:
                if ((v42 & 1) != 0) {
                  goto LABEL_52;
                }
              }

              *unint64_t v4 = 0x3FDCCCCCCCCCCCCDLL;
              goto LABEL_52;
            }
          }
        }

        a1[411] = 1;
        goto LABEL_43;
      }
    }

    else
    {
LABEL_24:
      if ((v22 & 1) != 0) {
        goto LABEL_26;
      }
    }

    *uint64_t v21 = 0;
    goto LABEL_26;
  }

  return a1;
}

void sub_10097F38C(_Unwind_Exception *a1)
{
  uint64_t v5 = *v3;
  *uint64_t v3 = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  sub_10074DF98(v2);
  sub_1006DCAA8(v1);
  _Unwind_Resume(a1);
}

void sub_10097F41C(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, uint64_t a4)
{
  if (*a2 == 11)
  {
    int v8 = *a3;
    *(_BYTE *)(a4 + 41sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v8;
    uint64_t v6 = sub_1006E27E8();
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    _DWORD v9[2] = sub_10098286C;
    void v9[3] = &unk_10181D3D0;
    v9[4] = a4;
    uint64_t v7 = v9;
    goto LABEL_7;
  }

  if (*a2 == 10)
  {
    int v5 = *(unsigned __int8 *)(a4 + 409);
    if (v5 == *a3)
    {
      *(_BYTE *)(a4 + 409) = v5 ^ 1;
      uint64_t v6 = sub_1006E27E8();
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472LL;
      void v10[2] = sub_100982864;
      v10[3] = &unk_10181D3D0;
      v10[4] = a4;
      uint64_t v7 = v10;
LABEL_7:
      sub_1006E28B8(v6, (uint64_t)v7);
    }
  }

void *sub_10097F4F8(void *a1)
{
  *a1 = off_101862E10;
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(DarwinNotifyCenter, a1);
  sub_10097F55C((uint64_t)a1);
  uint64_t v3 = a1[40];
  a1[40] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10074DF98(a1 + 9);
  return sub_1006DCAA8(a1);
}

void sub_10097F55C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 312))
  {
    if (*(void *)(a1 + 328))
    {
      uint64_t v2 = *(__CFRunLoopTimer **)(a1 + 368);
      if (v2)
      {
        CFRunLoopTimerInvalidate(v2);
        CFRelease(*(CFTypeRef *)(a1 + 368));
        *(void *)(a1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
      }

      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      uint64_t v3 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting prox mode to none. Stopping ear gesture detection.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        v12[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Setting prox mode to none. Stopping ear gesture detection.",  v12,  2);
        uint64_t v11 = (uint8_t *)v10;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLEarGestureNotifier::stopDetectingGestures()", "%s\n", v10);
        if (v11 != buf) {
          free(v11);
        }
      }

      BKSHIDServicesRequestProximityDetectionMode(0LL);
      if (sub_1007FA4C8())
      {
        uint64_t v4 = sub_1007FA4C8();
        sub_1006DD2A0(v4, 0, *(void *)(a1 + 336));
        uint64_t v5 = *(void *)(a1 + 336);
        if (v5) {
          (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
        }
        *(void *)(a1 + 336) = 0LL;
      }

      uint64_t v6 = sub_10095CEA4();
      sub_1006DD2A0(v6, 0, *(void *)(a1 + 328));
      uint64_t v7 = *(void *)(a1 + 328);
      if (v7) {
        (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
      }
      *(void *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
      *(_DWORD *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
      *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
      *(_DWORD *)(a1 + 56) = 0;
      sub_10074DFF8((void *)(a1 + 88));
      sub_10074DFF8((void *)(a1 + 160));
      sub_10074DFF8((void *)(a1 + 232));
    }

    if (*(void *)(a1 + 32))
    {
      uint64_t v8 = sub_1006E5C40();
      sub_1006DD2A0(v8, 0, *(void *)(a1 + 32));
      uint64_t v9 = *(void *)(a1 + 32);
      if (v9) {
        (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
      }
      *(void *)(a1 + 32) = 0LL;
    }
  }

void sub_10097F7CC(void *a1)
{
  uint64_t v1 = sub_10097F4F8(a1);
  operator delete(v1);
}

void sub_10097F7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10095CEA4();
  sub_10095D47C(v3, a2);
}

uint64_t sub_10097F804(uint64_t result)
{
  if (*(_BYTE *)(result + 312))
  {
    uint64_t v1 = result;
    if (!*(void *)(result + 328))
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      uint64_t v2 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Starting ear gesture detection", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        LOWORD(context.version) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Starting ear gesture detection",  &context,  2);
        char v14 = (uint8_t *)v13;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLEarGestureNotifier::startDetectingGestures()", "%s\n", v13);
        if (v14 != buf) {
          free(v14);
        }
      }

      uint64_t v3 = operator new(0x20uLL);
      *uint64_t v3 = off_1018A2210;
      *uint64_t v3 = &off_101862EA8;
      v3[1] = 0LL;
      _DWORD v3[2] = sub_10097FDAC;
      _OWORD v3[3] = v1;
      *(void *)(v1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = v3;
      uint64_t v4 = sub_10095CEA4();
      sub_1006DCB40(v4, 0, *(void *)(v1 + 328), -1.0);
      *(void *)(v1 + 344) = 0xBFF0000000000000LL;
      *(void *)(v1 + 352) = 0xBFF0000000000000LL;
      *(_DWORD *)(v1 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
      *(void *)(v1 + 304) = 0xBFF0000000000000LL;
      context.version = 0LL;
      context.info = (void *)v1;
      memset(&context.retain, 0, 24);
      CFRunLoopTimerRef v5 = CFRunLoopTimerCreate( kCFAllocatorDefault,  1.79769313e308,  1.79769313e308,  0LL,  0LL,  (CFRunLoopTimerCallBack)sub_10098055C,  &context);
      *(void *)(v1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = v5;
      if (v5)
      {
        double Current = CFRunLoopGetCurrent();
        CFRunLoopAddTimer(Current, *(CFRunLoopTimerRef *)(v1 + 368), kCFRunLoopCommonModes);
      }

      else
      {
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        uint64_t v7 = (os_log_s *)qword_101934538;
        if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Could not create timer", buf, 2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934530 != -1) {
            dispatch_once(&qword_101934530, &stru_101862E58);
          }
          v20[0] = 0;
          LODWORD(v19) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  17LL,  "Could not create timer",  v20,  v19);
          int v18 = (uint8_t *)v17;
          sub_10029211C("Generic", 1LL, 0, 0LL, "void CLEarGestureNotifier::startDetectingGestures()", "%s\n", v17);
          if (v18 != buf) {
            free(v18);
          }
        }
      }

      if (!*(void *)(v1 + 336))
      {
        uint64_t v8 = operator new(0x20uLL);
        *uint64_t v8 = off_1018A2210;
        *uint64_t v8 = &off_1018A42A8;
        v8[1] = 0LL;
        id v8[2] = sub_100980A88;
        v8[3] = v1;
        *(void *)(v1 + 336) = v8;
      }

      if (sub_1007FA4C8())
      {
        uint64_t v9 = sub_1007FA4C8();
        sub_1006DCB40(v9, 0, *(void *)(v1 + 336), -1.0);
      }

      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      uint64_t v10 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Setting prox mode to PassiveMonitoring. Starting detection.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        v20[0] = 0;
        LODWORD(v19) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Setting prox mode to PassiveMonitoring. Starting detection.",  v20,  v19);
        unint64_t v16 = (uint8_t *)v15;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLEarGestureNotifier::startDetectingGestures()", "%s\n", v15);
        if (v16 != buf) {
          free(v16);
        }
      }

      float result = BKSHIDServicesRequestProximityDetectionMode(12LL);
    }

    if (!*(void *)(v1 + 32))
    {
      uint64_t v11 = operator new(0x20uLL);
      *uint64_t v11 = off_1018A2210;
      *uint64_t v11 = &off_10185EB50;
      v11[1] = 0LL;
      _DWORD v11[2] = sub_100980A98;
      void v11[3] = v1;
      *(void *)(v1 + 32) = v11;
      uint64_t v12 = sub_1006E5C40();
      return sub_1006DCB40(v12, 0, *(void *)(v1 + 32), 0.02);
    }
  }

  return result;
}

void sub_10097FD88(_Unwind_Exception *a1)
{
}

void sub_10097FDAC(uint64_t a1, uint64_t a2)
{
  if (!strncmp((const char *)a1, "Ear", 3uLL))
  {
    strncpy((char *)(a2 + 393), (const char *)a1, 0x10uLL);
    double v4 = *(double *)(a1 + 32);
    *(double *)(a2 + 352) = v4;
    if (*(_BYTE *)(a2 + 314))
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      CFRunLoopTimerRef v5 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Readying gesture notification. Ignoring prox",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        LOWORD(v2_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Readying gesture notification. Ignoring prox",  &v28,  2);
        uint64_t v19 = (uint8_t *)v18;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLEarGestureNotifier::onGestureNotification(const CLGestureNotifier::NotificationData *, void *)",  "%s\n",  v18);
        if (v19 != buf) {
          free(v19);
        }
      }

      *(_DWORD *)(a2 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 2;
      uint64_t v6 = 731054220LL;
LABEL_9:
      kdebug_trace(v6, 0LL, 0LL, 0LL, 0LL);
      return;
    }

    if (!*(_DWORD *)(a2 + 360))
    {
      if (vabdd_f64(v4, *(double *)(a2 + 344)) >= *(double *)(a2 + 376))
      {
        if (*(_BYTE *)(a2 + 392)) {
          return;
        }
      }

      else if (*(_BYTE *)(a2 + 392))
      {
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        uint64_t v7 = (os_log_s *)qword_101934538;
        if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Setting prox mode to PassiveEngaged. Ready to send notification.",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934530 != -1) {
            dispatch_once(&qword_101934530, &stru_101862E58);
          }
          LOWORD(v2_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Setting prox mode to PassiveEngaged. Ready to send notification.",  &v28,  2);
          char v23 = (uint8_t *)v22;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLEarGestureNotifier::onGestureNotification(const CLGestureNotifier::NotificationData *, void *)",  "%s\n",  v22);
          if (v23 != buf) {
            free(v23);
          }
        }

        BKSHIDServicesRequestProximityDetectionMode(2LL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        uint64_t v8 = (os_log_s *)qword_101934538;
        if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
        {
          double v9 = *(double *)(a1 + 32) - *(double *)(a2 + 344);
          *(_DWORD *)__int128 buf = 134349056;
          double v31 = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "Readying gesture notification. Prox triggered before motion. dt = %{public}.3f",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934530 != -1) {
            dispatch_once(&qword_101934530, &stru_101862E58);
          }
          double v24 = *(double *)(a1 + 32) - *(double *)(a2 + 344);
          int v28 = 134349056;
          double v29 = v24;
          LODWORD(v27) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Readying gesture notification. Prox triggered before motion. dt = %{public}.3f",  &v28,  v27);
          unint64_t v26 = (uint8_t *)v25;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLEarGestureNotifier::onGestureNotification(const CLGestureNotifier::NotificationData *, void *)",  "%s\n",  v25);
          if (v26 != buf) {
            free(v26);
          }
        }

        ADClientPushValueForDistributionKey( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@",  @"com.apple.CoreMotion",  @"ProxToEarGestureDelta"),  (*(double *)(a1 + 32) - *(double *)(a2 + 344)) * 1000.0);
        *(_DWORD *)(a2 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 2;
        uint64_t v6 = 731054224LL;
        goto LABEL_9;
      }

      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      uint64_t v10 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Setting prox mode to PassiveEngaged. Motion waiting for prox.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        LOWORD(v2_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Setting prox mode to PassiveEngaged. Motion waiting for prox.",  &v28,  2);
        uint64_t v21 = (uint8_t *)v20;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLEarGestureNotifier::onGestureNotification(const CLGestureNotifier::NotificationData *, void *)",  "%s\n",  v20);
        if (v21 != buf) {
          free(v21);
        }
      }

      BKSHIDServicesRequestProximityDetectionMode(2LL);
      *(_DWORD *)(a2 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 1;
      uint64_t v11 = *(__CFRunLoopTimer **)(a2 + 368);
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      CFRunLoopTimerSetNextFireDate(v11, Current + *(double *)(a2 + 384));
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      char v13 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
      {
        double v14 = *(double *)(a2 + 384);
        *(_DWORD *)__int128 buf = 134283521;
        double v31 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "Set timer for %{private}f seconds.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        double v15 = *(double *)(a2 + 384);
        int v28 = 134283521;
        double v29 = v15;
        LODWORD(v27) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Set timer for %{private}f seconds.",  &v28,  v27);
        unint64_t v17 = (uint8_t *)v16;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLEarGestureNotifier::onGestureNotification(const CLGestureNotifier::NotificationData *, void *)",  "%s\n",  v16);
        if (v17 != buf) {
          free(v17);
        }
      }
    }
  }

void sub_10098055C(uint64_t a1, uint64_t a2)
{
  if (qword_101934530 != -1) {
    dispatch_once(&qword_101934530, &stru_101862E58);
  }
  uint64_t v3 = (os_log_s *)qword_101934538;
  if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = *(int *)(a2 + 360);
    else {
      CFRunLoopTimerRef v5 = off_101862F00[v4];
    }
    *(_DWORD *)__int128 buf = 136446210;
    unint64_t v25 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Gesture timer expired. State = %{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862E58);
    }
    uint64_t v11 = *(int *)(a2 + 360);
    else {
      uint64_t v12 = off_101862F00[v11];
    }
    int v22 = 136446210;
    char v23 = v12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Gesture timer expired. State = %{public}s",  &v22,  12);
    unint64_t v16 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLEarGestureNotifier::onTimer(CFRunLoopTimerRef, void *)",  "%s\n",  v15);
    if (v16 != buf) {
      free(v16);
    }
  }

  int v6 = *(_DWORD *)(a2 + 360);
  if ((v6 - 2) >= 2)
  {
    if (v6 == 1)
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      uint64_t v10 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Setting prox mode to PassiveMonitoring. Prox timer expired.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        LOWORD(v22) = 0;
        LODWORD(v21) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Setting prox mode to PassiveMonitoring. Prox timer expired.",  &v22,  v21);
        int v18 = (uint8_t *)v17;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLEarGestureNotifier::onTimer(CFRunLoopTimerRef, void *)",  "%s\n",  v17);
        if (v18 != buf) {
          free(v18);
        }
      }

      kdebug_trace(731054232LL, 0LL, 0LL, 0LL, 0LL);
      BKSHIDServicesRequestProximityDetectionMode(12LL);
      *(_DWORD *)(a2 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
      if (&_ADClientAddValueForScalarKey) {
        ADClientAddValueForScalarKey( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@.%@",  @"com.apple.CoreMotion",  @"EarGesture",  @"ProxTimerExpired"),  1LL);
      }
    }
  }

  else
  {
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862E58);
    }
    uint64_t v7 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(int *)(a2 + 360);
      else {
        double v9 = off_101862F00[v8];
      }
      *(_DWORD *)__int128 buf = 136446210;
      unint64_t v25 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Timer fired while in state %{public}s.",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      uint64_t v13 = *(int *)(a2 + 360);
      else {
        double v14 = off_101862F00[v13];
      }
      int v22 = 136446210;
      char v23 = v14;
      LODWORD(v21) = 12;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Timer fired while in state %{public}s.",  &v22,  v21);
      uint64_t v20 = (uint8_t *)v19;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLEarGestureNotifier::onTimer(CFRunLoopTimerRef, void *)",  "%s\n",  v19);
      if (v20 != buf) {
        free(v20);
      }
    }
  }

  CFRunLoopTimerSetNextFireDate(*(CFRunLoopTimerRef *)(a2 + 368), 1.79769313e308);
}

void sub_100980A88(uint64_t *a1, uint64_t a2)
{
}

void sub_100980A98(uint64_t a1, float32x2_t *a2)
{
}

void sub_100980AA8(_BYTE *a1)
{
  if (a1[313])
  {
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862E58);
    }
    uint64_t v2 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
    {
      int v3 = a1[409];
      int v4 = a1[410];
      *(_DWORD *)__int128 buf = 67240448;
      int v20 = v3;
      __int16 v21 = 1026;
      int v22 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "Has blanked screen = %{public}d, Is locked = %{public}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      int v7 = a1[409];
      int v8 = a1[410];
      v16[0] = 67240448;
      v16[1] = v7;
      __int16 v17 = 1026;
      int v18 = v8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Has blanked screen = %{public}d, Is locked = %{public}d",  v16,  14);
      uint64_t v10 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::hasBlankedScreenOrIsLockedUpdated()",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }

    if (a1[409] && a1[410])
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      CFRunLoopTimerRef v5 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "Screen is blanked and device is locked. Stopping gesture detection.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        LOWORD(v16[0]) = 0;
        LODWORD(v15) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Screen is blanked and device is locked. Stopping gesture detection.",  v16,  v15);
        double v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::hasBlankedScreenOrIsLockedUpdated()",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }

      sub_10097F55C((uint64_t)a1);
    }

    else
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      int v6 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Screen is unblanked or device is not locked. Starting gesture detection if necessary.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        LOWORD(v16[0]) = 0;
        LODWORD(v15) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Screen is unblanked or device is not locked. Starting gesture detection if necessary.",  v16,  v15);
        uint64_t v12 = (uint8_t *)v11;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::hasBlankedScreenOrIsLockedUpdated()",  "%s\n",  v11);
        if (v12 != buf) {
          free(v12);
        }
      }

      sub_10097F804((uint64_t)a1);
    }
  }

void sub_100980EF4(_BYTE *a1, int a2, uint64_t a3)
{
  if (a2)
  {
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862E58);
    }
    int v3 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "Unrecognized notification", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      v6[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  17LL,  "Unrecognized notification",  v6,  2);
      CFRunLoopTimerRef v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLEarGestureNotifier::numberOfSpectatorsChanged(int, size_t)",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

  else if (a3 == 1)
  {
    a1[313] = 1;
    if (!a1[410] || !a1[409]) {
      sub_10097F804((uint64_t)a1);
    }
  }

  else if (!a3)
  {
    a1[313] = 0;
    sub_10097F55C((uint64_t)a1);
  }

uint64_t sub_1009810FC(uint64_t result, uint64_t a2)
{
  if (&_ADClientAddValueForScalarKey) {
    return ADClientAddValueForScalarKey( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@.%@",  @"com.apple.CoreMotion",  @"EarGesture",  result),  a2);
  }
  return result;
}

void sub_100981164(uint64_t a1, double *a2)
{
  if (*(_DWORD *)(a1 + 360) == 2)
  {
    float v4 = *(float *)(a1 + 48);
    float v5 = *(float *)(a1 + 52);
    float v6 = *(float *)(a1 + 56);
    float v7 = atan2f(sqrtf((float)(v5 * v5) + (float)(v4 * v4)), -v6);
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862E58);
    }
    int v8 = (os_log_s *)qword_101934538;
    if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
    {
      double v9 = *a2;
      *(_DWORD *)__int128 buf = 134350080;
      double v40 = v4;
      __int16 v41 = 2050;
      double v42 = v5;
      __int16 v43 = 2050;
      double v44 = v6;
      __int16 v45 = 2050;
      double v46 = v7;
      __int16 v47 = 2050;
      double v48 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "endPose,%{public}.2f,%{public}.2f,%{public}.2f,tilt,%{public}.2f,timestamp,%{public}.3f",  buf,  0x34u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      double v19 = *a2;
      int v29 = 134350080;
      double v30 = v4;
      __int16 v31 = 2050;
      double v32 = v5;
      __int16 v33 = 2050;
      double v34 = v6;
      __int16 v35 = 2050;
      double v36 = v7;
      __int16 v37 = 2050;
      double v38 = v19;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "endPose,%{public}.2f,%{public}.2f,%{public}.2f,tilt,%{public}.2f,timestamp,%{public}.3f",  &v29,  52);
      __int16 v21 = (uint8_t *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::checkEndPoseInReadyState(const CLAccelerometer::Sample *)",  "%s\n",  v20);
      if (v21 != buf) {
        free(v21);
      }
    }

    float v10 = 0.0;
    if (v5 <= 0.15
      && v7 <= 2.5133
      && ((float v11 = fabsf(v5), v7 <= 1.885) || v11 >= 0.15)
      && (fabsf(v4 / v5) <= 1.5 || (float v10 = 1.0, v7 <= 1.885) && (v7 >= 1.0367 || v11 >= 0.2)))
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      __int16 v17 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)__int128 buf = 136380675;
        *(void *)&double v40 = a1 + 393;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "Sending gesture notification. Matched prototype name, %{private}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        int v29 = 136380675;
        *(void *)&double v30 = a1 + 393;
        LODWORD(v2_Block_object_dispose((const void *)(v1 - 224), 8) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Sending gesture notification. Matched prototype name, %{private}s",  &v29,  v28);
        unint64_t v25 = (uint8_t *)v24;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::checkEndPoseInReadyState(const CLAccelerometer::Sample *)",  "%s\n",  v24);
        if (v25 != buf) {
          free(v25);
        }
      }

      kdebug_trace(731054200LL, 0LL, 0LL, 0LL, 0LL);
      strncpy((char *)buf, (const char *)(a1 + 393), 0x10uLL);
      int v18 = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@",  @"MatchFound",  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", buf));
      if (&_ADClientAddValueForScalarKey) {
        ADClientAddValueForScalarKey( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@.%@",  @"com.apple.CoreMotion",  @"EarGesture",  v18),  1LL);
      }
      *(_DWORD *)((char *)&v42 + 2) = 0;
      sub_1006DD65C(a1, 0LL, (uint64_t)buf, 20LL);
      *(_DWORD *)(a1 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 3;
      *(double *)(a1 + 304) = *a2;
      *(void *)(a1 + 64) = 0xBFF0000000000000LL;
      sub_10074DFF8((void *)(a1 + 88));
      sub_10074DFF8((void *)(a1 + 160));
      sub_10074DFF8((void *)(a1 + 232));
    }

    else
    {
      double v12 = *(double *)(a1 + 64);
      double v13 = *a2;
      if (v12 <= 0.0)
      {
        *(double *)(a1 + 64) = v13;
      }

      else if (v13 - v12 > (float)((float)(v10 * 0.06) + 0.06))
      {
        *(_DWORD *)(a1 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
        *(void *)(a1 + 64) = 0xBFF0000000000000LL;
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        double v14 = (os_log_s *)qword_101934538;
        if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
        {
          uint64_t v15 = *(int *)(a1 + 360);
          else {
            unint64_t v16 = off_101862F00[v15];
          }
          *(_DWORD *)__int128 buf = 136446210;
          double v40 = *(double *)&v16;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "Failed end pose sanity check. Set state to %{public}s",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934530 != -1) {
            dispatch_once(&qword_101934530, &stru_101862E58);
          }
          uint64_t v22 = *(int *)(a1 + 360);
          else {
            char v23 = off_101862F00[v22];
          }
          int v29 = 136446210;
          double v30 = *(double *)&v23;
          LODWORD(v2_Block_object_dispose((const void *)(v1 - 224), 8) = 12;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Failed end pose sanity check. Set state to %{public}s",  &v29,  v28);
          uint64_t v27 = (uint8_t *)v26;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::checkEndPoseInReadyState(const CLAccelerometer::Sample *)",  "%s\n",  v26);
          if (v27 != buf) {
            free(v27);
          }
        }

        kdebug_trace(731054216LL, 0LL, 0LL, 0LL, 0LL);
        if (&_ADClientAddValueForScalarKey) {
          ADClientAddValueForScalarKey( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@.%@",  @"com.apple.CoreMotion",  @"EarGesture",  @"FailedEndPoseCheck"),  1LL);
        }
      }
    }
  }

void sub_10098189C(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 360) == 3 && *(double *)a2 - *(double *)(a1 + 304) < 3.0)
  {
    int v3 = (float *)(a2 + 12);
    float v4 = (float *)(a2 + 16);
    sub_10074DC40(a1 + 88, (float *)(a2 + 8));
    sub_10074DC40(a1 + 160, v3);
    sub_10074DC40(a1 + 232, v4);
    float v5 = *(float *)(a1 + 48);
    float v6 = *(float *)(a1 + 52);
    float v7 = *(float *)(a1 + 56);
    float v8 = atan2f(sqrtf((float)(v6 * v6) + (float)(v5 * v5)), -v7);
    if (v8 > 2.5133 || v8 < 0.50265 || v6 > 0.3)
    {
      int v52 = 1;
      sub_1006DD65C(a1, 0LL, (uint64_t)v51, 20LL);
      *(_DWORD *)(a1 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      double v34 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)__int128 buf = 134349568;
        double v46 = v5;
        __int16 v47 = 2050;
        double v48 = v6;
        __int16 v49 = 2050;
        double v50 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_INFO,  "Sending gesture notification. Gesture cancelled due to unlikely end pose, %{public}.2f, %{public}.2f, %{public}.2f",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        int v39 = 134349568;
        double v40 = v5;
        __int16 v41 = 2050;
        double v42 = v6;
        __int16 v43 = 2050;
        double v44 = v7;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Sending gesture notification. Gesture cancelled due to unlikely end pose, %{public}.2f, %{public}.2f, %{public}.2f",  &v39,  32);
        double v36 = (uint8_t *)v35;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::detectCancelAfterSend(const CLAccelerometer::Sample *)",  "%s\n",  v35);
        if (v36 != buf) {
          free(v36);
        }
      }

      if (&_ADClientAddValueForScalarKey) {
        ADClientAddValueForScalarKey( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@.%@",  @"com.apple.CoreMotion",  @"EarGesture",  @"CancelledPose"),  1LL);
      }
      kdebug_trace(731054208LL, 0LL, 0LL, 0LL, 0LL);
    }

    else
    {
      unint64_t v9 = *(void *)(a1 + 152);
      if (v9 >= *(void *)(a1 + 96))
      {
        float v10 = 0.0;
        float v11 = 0.0;
        float v12 = 0.0;
        if ((int)v9 >= 2)
        {
          unint64_t v13 = *(void *)(a1 + 224);
          float v14 = 0.0;
          float v15 = 0.0;
          if (v13) {
            float v15 = *(float *)(a1 + 176) / (float)v13;
          }
          unint64_t v16 = *(void *)(a1 + 296);
          if (v16) {
            float v14 = *(float *)(a1 + 248) / (float)v16;
          }
          unint64_t v17 = *(void *)(a1 + 144);
          uint64_t v18 = *(void *)(a1 + 152);
          float v19 = 0.0;
          float v20 = 0.0;
          float v21 = 0.0;
          float v22 = 0.0;
          unint64_t v23 = *(void *)(a1 + 216);
          float v24 = 0.0;
          float v25 = 0.0;
          unint64_t v26 = *(void *)(a1 + 288);
          do
          {
            float v21 = v21 + (float)(v27 * v27);
            float v20 = v20 + (float)(v28 * v28);
            float v19 = v19 + (float)(v29 * v29);
            float v25 = v25 + v27;
            float v24 = v24 + v28;
            float v22 = v22 + v29;
            ++v26;
            ++v23;
            ++v17;
            --v18;
          }

          while (v18);
          float v30 = v21 - (float)((float)(v25 * v25) / (float)(int)v9);
          float v31 = (float)((int)v9 - 1);
          float v10 = v30 / v31;
          float v11 = (float)(v20 - (float)((float)(v24 * v24) / (float)(int)v9)) / v31;
          float v12 = (float)(v19 - (float)((float)(v22 * v22) / (float)(int)v9)) / v31;
        }

        if (v10 >= v11) {
          float v32 = v10;
        }
        else {
          float v32 = v11;
        }
        if (v32 < v12) {
          float v32 = v12;
        }
        if (v32 > 0.3025)
        {
          int v52 = 1;
          sub_1006DD65C(a1, 0LL, (uint64_t)v51, 20LL);
          *(_DWORD *)(a1 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
          if (qword_101934530 != -1) {
            dispatch_once(&qword_101934530, &stru_101862E58);
          }
          __int16 v33 = (os_log_s *)qword_101934538;
          if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)__int128 buf = 134349568;
            double v46 = v10;
            __int16 v47 = 2050;
            double v48 = v11;
            __int16 v49 = 2050;
            double v50 = v12;
            _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_INFO,  "Sending gesture notification. Gesture cancelled due to high dynamics, %{public}.3f, %{public}.3f, %{public}.3f",  buf,  0x20u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934530 != -1) {
              dispatch_once(&qword_101934530, &stru_101862E58);
            }
            int v39 = 134349568;
            double v40 = v10;
            __int16 v41 = 2050;
            double v42 = v11;
            __int16 v43 = 2050;
            double v44 = v12;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Sending gesture notification. Gesture cancelled due to high dynamics, %{public}.3f, %{public}.3f, %{public}.3f",  &v39,  32);
            double v38 = (uint8_t *)v37;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::detectCancelAfterSend(const CLAccelerometer::Sample *)",  "%s\n",  v37);
            if (v38 != buf) {
              free(v38);
            }
          }

          if (&_ADClientAddValueForScalarKey) {
            ADClientAddValueForScalarKey( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@.%@",  @"com.apple.CoreMotion",  @"EarGesture",  @"CancelledDynamics"),  1LL);
          }
          kdebug_trace(731054212LL, 0LL, 0LL, 0LL, 0LL);
        }
      }
    }
  }

void sub_100981F2C(float32x2_t *a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  float32x2_t v5 = *(float32x2_t *)(a2 + 8);
  int v6 = v4;
  sub_100808DFC(a1 + 5, &v5);
  a1[52] = *(float32x2_t *)a2;
  sub_100981164((uint64_t)a1, (double *)a2);
  sub_10098189C((uint64_t)a1, a2);
}

void sub_100981F90(uint64_t a1, uint64_t *a2)
{
  *(_BYTE *)(a1 + 392) = (a2[1] & 0x240) != 0;
  float v4 = *(float *)(a1 + 48);
  float v5 = *(float *)(a1 + 52);
  float v6 = *(float *)(a1 + 56);
  if (qword_101934530 != -1) {
    dispatch_once(&qword_101934530, &stru_101862E58);
  }
  float v7 = (os_log_s *)qword_101934538;
  if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
  {
    int v8 = *((_DWORD *)a2 + 2);
    int v9 = *(unsigned __int8 *)(a1 + 392);
    uint64_t v10 = *a2;
    double v11 = sub_101171D38();
    uint64_t v12 = *(int *)(a1 + 360);
    else {
      unint64_t v13 = off_101862F00[v12];
    }
    uint64_t v14 = *(void *)(a1 + 344);
    uint64_t v15 = *(void *)(a1 + 352);
    uint64_t v16 = *(void *)(a1 + 416);
    *(_DWORD *)__int128 buf = 67177219;
    *(_DWORD *)double v50 = v8;
    *(_WORD *)&v50[4] = 1026;
    *(_DWORD *)&v50[6] = v9;
    __int16 v51 = 2050;
    uint64_t v52 = v10;
    __int16 v53 = 2050;
    double v54 = v11;
    __int16 v55 = 2082;
    uint64_t v56 = v13;
    __int16 v57 = 2050;
    uint64_t v58 = v14;
    __int16 v59 = 2050;
    uint64_t v60 = v15;
    __int16 v61 = 2050;
    double v62 = v4;
    __int16 v63 = 2050;
    double v64 = v5;
    __int16 v65 = 2050;
    double v66 = v6;
    __int16 v67 = 2050;
    uint64_t v68 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Prox,detectionMask,0x%{private}x,objectWithinProximity,%{public}d,timestamp,%{public}.3f,now,%{public}.3f,state,%{ public}s,lastProxTrigger,%{public}.3f,lastMotionTrigger,%{public}.3f,acc,%{public}.8f,%{public}.8f,%{public}.8f,ac cTime,%{public}.3f",  buf,  0x68u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934530 != -1) {
      dispatch_once(&qword_101934530, &stru_101862E58);
    }
    uint64_t v29 = qword_101934538;
    int v30 = *((_DWORD *)a2 + 2);
    int v31 = *(unsigned __int8 *)(a1 + 392);
    uint64_t v32 = *a2;
    double v33 = sub_101171D38();
    uint64_t v34 = *(int *)(a1 + 360);
    else {
      __int16 v35 = off_101862F00[v34];
    }
    uint64_t v36 = *(void *)(a1 + 344);
    uint64_t v37 = *(void *)(a1 + 352);
    uint64_t v38 = *(void *)(a1 + 416);
    LODWORD(v72) = 67177219;
    DWORD1(v72) = v30;
    WORD4(v72) = 1026;
    *(_DWORD *)((char *)&v72 + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v31;
    HIWORD(v72) = 2050;
    uint64_t v73 = v32;
    *(_WORD *)int v74 = 2050;
    *(double *)&v74[2] = v33;
    *(_WORD *)&v74[10] = 2082;
    uint64_t v75 = v35;
    __int16 v76 = 2050;
    uint64_t v77 = v36;
    __int16 v78 = 2050;
    uint64_t v79 = v37;
    __int16 v80 = 2050;
    double v81 = v4;
    __int16 v82 = 2050;
    double v83 = v5;
    __int16 v84 = 2050;
    double v85 = v6;
    __int16 v86 = 2050;
    uint64_t v87 = v38;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v29,  1LL,  "Prox,detectionMask,0x%{private}x,objectWithinProximity,%{public}d,timestamp,%{public}.3f,now,%{public}.3f,state,%{ public}s,lastProxTrigger,%{public}.3f,lastMotionTrigger,%{public}.3f,acc,%{public}.8f,%{public}.8f,%{public}.8f,ac cTime,%{public}.3f",  &v72,  104);
    double v40 = (uint8_t *)v39;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::onProx(const CLProximityNotifier::Sample *)",  "%s\n",  v39);
    if (v40 != buf) {
      free(v40);
    }
  }

  if (*(_BYTE *)(a1 + 392))
  {
    *(void *)(a1 + 344) = *a2;
    kdebug_trace(731054204LL, 0LL, 0LL, 0LL, 0LL);
    if (*(_DWORD *)(a1 + 360) == 1)
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      unint64_t v17 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
      {
        double v18 = *(double *)(a1 + 344) - *(double *)(a1 + 352);
        *(_DWORD *)__int128 buf = 134349056;
        *(double *)double v50 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "Readying gesture notification. Motion triggered before prox. dt = %{public}.3f",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        double v41 = *(double *)(a1 + 344) - *(double *)(a1 + 352);
        LODWORD(v72) = 134349056;
        *(double *)((char *)&v72 + 4) = v41;
        LODWORD(v4_Block_object_dispose((const void *)(v1 - 224), 8) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Readying gesture notification. Motion triggered before prox. dt = %{public}.3f",  &v72,  v48);
        __int16 v43 = (uint8_t *)v42;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::onProx(const CLProximityNotifier::Sample *)",  "%s\n",  v42);
        if (v43 != buf) {
          free(v43);
        }
      }

      ADClientPushValueForDistributionKey( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@",  @"com.apple.CoreMotion",  @"ProxToEarGestureDelta"),  (*(double *)(a1 + 352) - *(double *)(a1 + 344)) * 1000.0);
      CFRunLoopTimerSetNextFireDate(*(CFRunLoopTimerRef *)(a1 + 368), 1.79769313e308);
      *(_DWORD *)(a1 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 2;
    }
  }

  else
  {
    int v19 = *(_DWORD *)(a1 + 360);
    if ((v19 - 2) >= 2 && v19)
    {
      if (v19 == 1)
      {
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        float v20 = (os_log_s *)qword_101934538;
        if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Prox untriggered while waiting for prox",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934530 != -1) {
            dispatch_once(&qword_101934530, &stru_101862E58);
          }
          LOWORD(v72) = 0;
          LODWORD(v4_Block_object_dispose((const void *)(v1 - 224), 8) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  1LL,  "Prox untriggered while waiting for prox",  &v72,  v48);
          __int16 v47 = (uint8_t *)v46;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::onProx(const CLProximityNotifier::Sample *)",  "%s\n",  v46);
          if (v47 != buf) {
            free(v47);
          }
        }

        if (&_ADClientAddValueForScalarKey) {
          ADClientAddValueForScalarKey( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@.%@",  @"com.apple.CoreMotion",  @"EarGesture",  0x1018BF000LL),  1LL);
        }
      }
    }

    else
    {
      if (qword_101934530 != -1) {
        dispatch_once(&qword_101934530, &stru_101862E58);
      }
      float v21 = (os_log_s *)qword_101934538;
      if (os_log_type_enabled((os_log_t)qword_101934538, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Setting prox mode to PassiveMonitoring. Waiting for motion.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934530 != -1) {
          dispatch_once(&qword_101934530, &stru_101862E58);
        }
        LOWORD(v72) = 0;
        LODWORD(v4_Block_object_dispose((const void *)(v1 - 224), 8) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934538,  0LL,  "Setting prox mode to PassiveMonitoring. Waiting for motion.",  &v72,  v48);
        __int16 v45 = (uint8_t *)v44;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLEarGestureNotifier::onProx(const CLProximityNotifier::Sample *)",  "%s\n",  v44);
        if (v45 != buf) {
          free(v45);
        }
      }

      BKSHIDServicesRequestProximityDetectionMode(12LL);
      *(_DWORD *)(a1 + 36sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    }
  }

  if (*(_BYTE *)(a1 + 411))
  {
    *(void *)&__int128 v72 = &off_101857BC0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(_DWORD *)&v74[8] = *((_DWORD *)a2 + 2);
    uint64_t v23 = *a2;
    *((CFAbsoluteTime *)&v72 + 1) = Current;
    *(void *)int v74 = v23;
    uint64_t v24 = sub_100E00E14();
    sub_100E022E0(v24, (uint64_t)&v72);
    sub_101125260(buf);
    sub_10113A8D8(buf);
    v71 |= 1u;
    uint64_t v69 = *((void *)&v72 + 1);
    uint64_t v25 = v70;
    uint64_t v26 = *a2;
    *(_BYTE *)(v70 + 20) |= 1u;
    *(void *)(v25 + _Block_object_dispose((const void *)(v1 - 224), 8) = v26;
    uint64_t v27 = v70;
    int v28 = *((_DWORD *)a2 + 2);
    *(_BYTE *)(v70 + 20) |= 2u;
    *(_DWORD *)(v27 + 16) = v28;
    if (qword_1019A1D00 != -1) {
      dispatch_once(&qword_1019A1D00, &stru_101862E78);
    }
    if (qword_1019A1D08) {
      sub_1011CF3D0(qword_1019A1D08, (uint64_t)buf);
    }
    sub_101127D00((PB::Base *)buf);
  }

void sub_100982844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

void sub_100982864(uint64_t a1)
{
}

void sub_10098286C(uint64_t a1)
{
}

void sub_100982874(id a1)
{
  qword_101934538 = (uint64_t)os_log_create("com.apple.locationd.Motion", "EarGesture");
}

uint64_t sub_1009828A4(int a1, uint32_t __upper_bound)
{
  return arc4random_uniform(__upper_bound);
}

uint64_t sub_1009828B0(uint64_t a1, unsigned __int8 *a2, int a3)
{
  *(void *)(a1 + 12) = 0LL;
  *(void *)(a1 + 4) = 0LL;
  int v4 = *a2;
  int v5 = a2[12];
  unsigned int v7 = *((_DWORD *)a2 + 1);
  int v6 = *((_DWORD *)a2 + 2);
  int v8 = *((_DWORD *)a2 + 4);
  *(_DWORD *)a1 = v8;
  if (a2[13]) {
    int v9 = 1;
  }
  else {
    int v9 = 2;
  }
  *(_DWORD *)(a1 + 16) = v9;
  if (v4)
  {
    if (v7 <= 5)
    {
      int v10 = 1 << v7;
      if ((v10 & 0x1A) != 0)
      {
        if (v6 == 1) {
          int v11 = 3;
        }
        else {
          int v11 = 2;
        }
        if (v5) {
          int v12 = 2;
        }
        else {
          int v12 = 1;
        }
        *(_DWORD *)(a1 + 4) = v11;
        *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v12;
        *(_DWORD *)(a1 + 12) = 1;
        if (v8 == 255)
        {
          if (qword_101934890 != -1) {
            dispatch_once(&qword_101934890, &stru_101862F78);
          }
          unint64_t v13 = (os_log_s *)qword_101934898;
          if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_FAULT))
          {
            *(_WORD *)__int128 buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_FAULT,  "#EmergCon,CLEmergencyState,SimInstance is KSimNone",  buf,  2u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934890 != -1) {
              dispatch_once(&qword_101934890, &stru_101862F78);
            }
            LOWORD(__p.__r_.__value_.__l.__data_) = 0;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934898,  17LL,  "#EmergCon,CLEmergencyState,SimInstance is KSimNone",  &__p,  2);
            uint64_t v15 = (uint8_t *)v14;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLEmergencyState::CLEmergencyState(CLCTEmergencyMode, BOOL)",  "%s\n",  v14);
            if (v15 != buf) {
              free(v15);
            }
          }
        }
      }

      else if ((v10 & 0x24) != 0)
      {
        *(_DWORD *)(a1 + 12) = 2;
        if (v6 == 1) {
          int v16 = 3;
        }
        else {
          int v16 = 2;
        }
        *(_DWORD *)(a1 + 4) = v16;
        if (v5) {
          *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 2;
        }
        else {
          *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 1;
        }
      }

      else
      {
        *(_OWORD *)a1 = xmmword_101341C70;
      }
    }
  }

  else
  {
    *(_DWORD *)a1 = 255;
    if (a3)
    {
      *(_DWORD *)(a1 + 4) = 4;
      *(_DWORD *)(a1 + 12) = 0;
    }

    else
    {
      *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0;
    }
  }

  if (qword_101934890 != -1) {
    dispatch_once(&qword_101934890, &stru_101862F78);
  }
  unint64_t v17 = (os_log_s *)qword_101934898;
  if (os_log_type_enabled((os_log_t)qword_101934898, OS_LOG_TYPE_DEFAULT))
  {
    sub_100982BDC((_DWORD *)a1, &__p);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__int128 buf = 68289282;
    int v22 = 0;
    __int16 v23 = 2082;
    uint64_t v24 = "";
    __int16 v25 = 2082;
    uint64_t v26 = p_p;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#EmergCon CLEmergencyState Creation , state:%{public, location:escape_only}s}",  buf,  0x1Cu);
  }

  return a1;
}

void sub_100982BDC(_DWORD *a1@<X0>, std::string *a2@<X8>)
{
  if (*a1)
  {
    if (*a1 == 255) {
      int v4 = "kSimNone";
    }
    else {
      int v4 = "kSim2";
    }
  }

  else
  {
    int v4 = "kSim1";
  }

  sub_1010DDBC0(&v38, v4);
  int v5 = std::string::insert(&v38, 0LL, "Sim_#");
  __int128 v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__l.__cap_ = v5->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0LL;
  v5->__r_.__value_.__l.__cap_ = 0LL;
  v5->__r_.__value_.__r.__words[0] = 0LL;
  unsigned int v7 = std::string::append(&v39, "_Status_#");
  __int128 v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__l.__cap_ = v7->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  sub_10098310C((uint64_t)a1, v36);
  if ((v37 & 0x80u) == 0) {
    int v9 = v36;
  }
  else {
    int v9 = (void **)v36[0];
  }
  if ((v37 & 0x80u) == 0) {
    std::string::size_type v10 = v37;
  }
  else {
    std::string::size_type v10 = (std::string::size_type)v36[1];
  }
  int v11 = std::string::append(&v40, (const std::string::value_type *)v9, v10);
  __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  v41.__r_.__value_.__l.__cap_ = v11->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v12;
  v11->__r_.__value_.__l.__size_ = 0LL;
  v11->__r_.__value_.__l.__cap_ = 0LL;
  v11->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v13 = std::string::append(&v41, "_Medium_#");
  __int128 v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__l.__cap_ = v13->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0LL;
  v13->__r_.__value_.__l.__cap_ = 0LL;
  v13->__r_.__value_.__r.__words[0] = 0LL;
  sub_1010DDBC0(v34, off_101862FC0[a1[2]]);
  if ((v35 & 0x80u) == 0) {
    uint64_t v15 = v34;
  }
  else {
    uint64_t v15 = (void **)v34[0];
  }
  if ((v35 & 0x80u) == 0) {
    std::string::size_type v16 = v35;
  }
  else {
    std::string::size_type v16 = (std::string::size_type)v34[1];
  }
  unint64_t v17 = std::string::append(&v42, (const std::string::value_type *)v15, v16);
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v43.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  int v19 = std::string::append(&v43, "_Transport_#");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v44.__r_.__value_.__l.__cap_ = v19->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  sub_100983124((uint64_t)a1, v32);
  if ((v33 & 0x80u) == 0) {
    float v21 = v32;
  }
  else {
    float v21 = (void **)v32[0];
  }
  if ((v33 & 0x80u) == 0) {
    std::string::size_type v22 = v33;
  }
  else {
    std::string::size_type v22 = (std::string::size_type)v32[1];
  }
  __int16 v23 = std::string::append(&v44, (const std::string::value_type *)v21, v22);
  __int128 v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v45.__r_.__value_.__l.__cap_ = v23->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0LL;
  v23->__r_.__value_.__l.__cap_ = 0LL;
  v23->__r_.__value_.__r.__words[0] = 0LL;
  __int16 v25 = std::string::append(&v45, "_CallType_#");
  __int128 v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__l.__cap_ = v25->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0LL;
  v25->__r_.__value_.__l.__cap_ = 0LL;
  v25->__r_.__value_.__r.__words[0] = 0LL;
  sub_1010DDBC0(__p, off_101862FF8[a1[4]]);
  if ((v31 & 0x80u) == 0) {
    uint64_t v27 = __p;
  }
  else {
    uint64_t v27 = (void **)__p[0];
  }
  if ((v31 & 0x80u) == 0) {
    std::string::size_type v28 = v31;
  }
  else {
    std::string::size_type v28 = (std::string::size_type)__p[1];
  }
  uint64_t v29 = std::string::append(&v46, (const std::string::value_type *)v27, v28);
  *a2 = *v29;
  v29->__r_.__value_.__l.__size_ = 0LL;
  v29->__r_.__value_.__l.__cap_ = 0LL;
  v29->__r_.__value_.__r.__words[0] = 0LL;
}

void sub_100982F24( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27, void *a28, uint64_t a29, int a30, __int16 a31, char a32, char a33, void *a34, uint64_t a35, int a36, __int16 a37, char a38, char a39, void *a40, uint64_t a41, int a42, __int16 a43, char a44, char a45, uint64_t a46, void *a47, uint64_t a48, int a49, __int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a59 < 0) {
    operator delete(a54);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a52 < 0) {
    operator delete(a47);
  }
  if (a45 < 0) {
    operator delete(a40);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  _Unwind_Resume(exception_object);
}

void sub_100983040()
{
}

void sub_100983048()
{
}

void sub_100983050()
{
}

void sub_100983058()
{
}

BOOL sub_100983064(uint64_t a1)
{
  return *(_DWORD *)(a1 + 12) == 1 && *(_DWORD *)(a1 + 8) == 1;
}

BOOL sub_100983088(uint64_t a1)
{
  return *(_DWORD *)(a1 + 12) == 2;
}

BOOL sub_100983098(uint64_t a1)
{
  return *(_DWORD *)(a1 + 12) == 3;
}

BOOL sub_1009830A8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 8) == 1;
}

BOOL sub_1009830B8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 8) == 2;
}

BOOL sub_1009830C8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 4) != 0;
}

BOOL sub_1009830D8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 4) == 2;
}

BOOL sub_1009830E8(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 4) & 0xFFFFFFFE) == 2;
}

BOOL sub_1009830FC(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 4) & 0xFFFFFFFB) == 0;
}

void *sub_10098310C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, off_101862F98[*(int *)(a1 + 4)]);
}

void *sub_100983124@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, off_101862FD8[*(int *)(a1 + 12)]);
}

void sub_10098313C(id a1)
{
  qword_101934898 = (uint64_t)os_log_create("com.apple.locationd.Position", "Emergency");
}

int *sub_100983168(int *result, uint64_t a2)
{
  int v2 = *result;
  *(_WORD *)(a2 + 4) = *((_WORD *)result + 2);
  *(_DWORD *)a2 = v2;
  unsigned int v3 = *(_DWORD *)(a2 + 6) & 0xFFFFFF00 | *((unsigned __int8 *)result + 6);
  *(_DWORD *)(a2 + 6) = v3;
  unsigned int v4 = v3 & 0xFFFFF0FF | (((*(unsigned int *)((char *)result + 6) >> 8) & 0xF) << 8);
  *(_DWORD *)(a2 + 6) = v4;
  unsigned int v5 = v4 & 0xFFF00FFF | ((*(unsigned int *)((char *)result + 6) >> 12) << 12);
  *(_DWORD *)(a2 + 6) = v5;
  unsigned int v6 = v5 & 0xFF0FFFFF | (((*(unsigned int *)((char *)result + 6) >> 20) & 0xF) << 20);
  *(_DWORD *)(a2 + 6) = v6;
  unsigned int v7 = v6 & 0xF0FFFFFF | ((HIBYTE(*(unsigned int *)((char *)result + 6)) & 0xF) << 24);
  *(_DWORD *)(a2 + 6) = v7;
  *(_DWORD *)(a2 + 6) = *(int *)((char *)result + 6) & 0xF0000000 | v7 & 0xFFFFFFF;
  return result;
}

uint64_t sub_1009831DC(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 10) >> 5) & 1;
}

int8x8_t sub_1009831EC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  __int128 v4 = *(_OWORD *)(a1 + 16);
  __int128 v5 = *(_OWORD *)(a1 + 32);
  __int128 v6 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 32) = v5;
  __int128 v7 = *(_OWORD *)(a1 + 80);
  __int128 v8 = *(_OWORD *)(a1 + 96);
  __int128 v9 = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 112) = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v9;
  *(_OWORD *)(a2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v7;
  *(_OWORD *)(a2 + 96) = v8;
  __int128 v10 = *(_OWORD *)(a1 + 144);
  __int128 v11 = *(_OWORD *)(a1 + 160);
  __int128 v12 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(a2 + 18_Block_object_dispose((const void *)(v1 - 224), 8) = *(_OWORD *)(a1 + 188);
  *(_OWORD *)(a2 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v11;
  *(_OWORD *)(a2 + 176) = v12;
  *(_OWORD *)(a2 + 144) = v10;
  sub_100DD8CEC((unsigned __int16 *)a1, a2);
  *(int8x16_t *)(a2 + 12) = vrev32q_s8(*(int8x16_t *)(a1 + 12));
  *(int8x16_t *)(a2 + 2_Block_object_dispose((const void *)(v1 - 224), 8) = vrev32q_s8(*(int8x16_t *)(a1 + 28));
  int8x8_t result = vrev32_s8(*(int8x8_t *)(a1 + 44));
  *(int8x8_t *)(a2 + 44) = result;
  *(_DWORD *)(a2 + 52) = bswap32(*(_DWORD *)(a1 + 52));
  unint64_t v14 = bswap64(*(void *)(a1 + 56));
  *(_DWORD *)(a2 + 192) = bswap32(*(_DWORD *)(a1 + 192));
  *(void *)(a2 + 56) = v14;
  return result;
}

int8x8_t sub_10098329C(uint64_t a1, uint64_t a2)
{
  int8x8_t result = vrev32_s8(*(int8x8_t *)(a1 + 12));
  *(int8x8_t *)(a2 + 12) = result;
  return result;
}

int *sub_1009832D0(int *result, uint64_t a2)
{
  int v2 = *result;
  *(_WORD *)(a2 + 4) = *((_WORD *)result + 2);
  *(_DWORD *)a2 = v2;
  *(_DWORD *)(a2 + 6) = bswap32(*(int *)((char *)result + 6));
  return result;
}

int *sub_1009832F0(int *result, uint64_t a2)
{
  return sub_100983168(result, a2);
}

_BYTE *sub_1009832F8(_BYTE *__dst, unsigned __int8 *a2, size_t a3)
{
  if (!a3) {
    goto LABEL_8;
  }
  int v4 = *a2;
  uint64_t v5 = 102LL;
  if (v4 != 2) {
    uint64_t v5 = 0LL;
  }
  BOOL v6 = v4 == 1;
  uint64_t v7 = 8LL;
  if (!v6) {
    uint64_t v7 = v5;
  }
  if (v7 == a3) {
    memcpy(__dst, a2, a3);
  }
  else {
LABEL_8:
  }
    *std::string __dst = -1;
  return __dst;
}

void *sub_100983354(void *a1, int a2)
{
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  *a1 = off_101863020;
  a1[9] = off_1018630D0;
  sub_100983B2C((uint64_t)a1);
  return a1;
}

void sub_1009833DC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_100983408(uint64_t a1, char *a2, int a3, uint64_t a4, int a5, float a6)
{
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  __int128 v12 = (void *)(a1 + 8);
  *(void *)a1 = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 8));
  void *v12 = &off_101826EF8;
  *(void *)a1 = off_101863260;
  *(void *)(a1 + 72) = off_101863308;
  sub_100D8A584(a1 + 72, a2, a3, a1, a6, a4, a5, 0LL);
  *(void *)a1 = off_101863260;
  *(void *)(a1 + 72) = off_101863308;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_DWORD *)(a1 + 24sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = -1;
  *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_DWORD *)(a1 + 256) = 12000;
  *(void *)(a1 + 264) = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 272));
  *(void *)(a1 + 272) = &off_101826EF8;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v29 = a1 + 112;
  (*(void (**)(void))(v13 + 16))();
  __int16 v31 = 256;
  if (a3)
  {
    *(void *)(a1 + 232) = 0xBFF0000000000000LL;
LABEL_3:
    (*(void (**)(uint64_t))(*(void *)v29 + 24LL))(v29);
    return a1;
  }

  if (*(char *)(a4 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a4, *(void *)(a4 + 8));
  }

  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a4;
    uint64_t v28 = *(void *)(a4 + 16);
  }

  sub_100D8AF38(a1 + 72, (uint64_t)__p);
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v14 = sub_1006E27E8();
  sub_100413284(v14, buf);
  uint64_t v15 = (int *)(a1 + 256);
  char v16 = sub_1002A7CB0(*(uint64_t *)buf, "ActivityInMemoryBufferSize", (_DWORD *)(a1 + 256));
  unint64_t v17 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }

  if ((v16 & 1) == 0) {
    *uint64_t v15 = 12000;
  }
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101863348);
  }
  __int128 v20 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    int v21 = *v15;
    *(_DWORD *)__int128 buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v21;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Buffer size: %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101863348);
    }
    int v24 = *v15;
    v32[0] = 67109120;
    v32[1] = v24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Buffer size: %d",  v32);
    __int128 v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLActivityRecorderDb<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::CLActivityRecorder Db(const char *, BOOL, float, const std::string &, const CLSqliteDatabase::SqlitePropertyPersistence) [T = CLCardi oChange::EstimateResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  int v22 = HIBYTE(v31);
  *(void *)(a1 + 232) = 0xBFF0000000000000LL;
  if (v22)
  {
    if ((_BYTE)v31)
    {
      pthread_mutex_unlock(v30);
      return a1;
    }

    goto LABEL_3;
  }

  return a1;
}

void sub_1009837C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  v24[33] = off_101826EC8;
  sub_1001B9C98(v27);
  sub_1000EAA04(v26);
  sub_100D8A88C(a12);
  *int v24 = off_101826EC8;
  sub_1001B9C98(v25);
  _Unwind_Resume(a1);
}

void sub_100983864()
{
}

void *sub_10098386C(void *a1)
{
  a1[9] = off_101863308;
  uint64_t v2 = (uint64_t)(a1 + 9);
  *a1 = off_101863260;
  a1[33] = off_101826EC8;
  sub_1001B9C98(a1 + 34);
  sub_1000EAA04(a1 + 22);
  sub_100D8A88C(v2);
  *a1 = off_101826EC8;
  sub_1001B9C98(a1 + 1);
  return a1;
}

void *sub_1009838EC(uint64_t a1)
{
  return sub_10098386C((void *)(a1 - 72));
}

void sub_1009838F4(void *a1)
{
  uint64_t v1 = sub_10098386C(a1);
  operator delete(v1);
}

void sub_100983908(uint64_t a1)
{
  uint64_t v1 = sub_10098386C((void *)(a1 - 72));
  operator delete(v1);
}

uint64_t sub_100983920(uint64_t *a1, uint64_t a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1003C0D54(a1[10], "DELETE FROM CardioChangeHistory WHERE startTime < ?", &v13);
  uint64_t v5 = v13;
  char v6 = (sqlite3_stmt *)sub_100019240(v13);
  if (sub_1003B7480(v6, 1, Current - *(double *)(*(void *)(a2 + 8) - 24LL)))
  {
    uint64_t v7 = a1[10];
    __int128 v8 = (sqlite3_stmt *)sub_100019240(v5);
    sub_1003BB2BC(v7, v8);
    uint64_t v9 = (*(int (**)(uint64_t *))(*a1 + 152))(a1);
  }

  else
  {
    uint64_t v9 = -1LL;
  }

  sub_1003C05BC(a1[10]);
  uint64_t v10 = a1[10];
  else {
    uint64_t v11 = *(void *)(v10 + 88);
  }
  sub_1003C1EC0(v10, v11);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return v9;
}

void sub_100983A38(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100983A58(uint64_t a1, uint64_t a2)
{
  return sub_100983920((uint64_t *)(a1 - 72), a2);
}

uint64_t sub_100983A60(uint64_t a1)
{
  uint64_t v3 = v8;
  int v4 = (sqlite3_stmt *)sub_100019240(v8);
  int v5 = sqlite3_step(v4);
  if (v5 == 100)
  {
    char v6 = (sqlite3_stmt *)sub_100019240(v3);
    uint64_t v1 = sqlite3_column_int(v6, 0);
  }

  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  if (v5 != 100) {
    return 0xFFFFFFFFLL;
  }
  return v1;
}

void sub_100983B00(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100983B24(uint64_t a1)
{
  return sub_100983A60(a1 - 72);
}

uint64_t sub_100983B2C(uint64_t a1)
{
  uint64_t result = sub_1003C1048(*(void *)(a1 + 80));
  if ((_DWORD)result) {
    return sub_1003B59A0( *(void *)(a1 + 80),  "CardioChangeHistory",  (const char **)&off_101863160,  (const std::string::value_type **)&off_10198E738,  0);
  }
  return result;
}

uint64_t sub_100983B80(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_1003C0D54( *(void *)(a1 + 80),  "INSERT INTO CardioChangeHistory (startTime, status, riskScore) VALUES (?, ?, ?)",  &v11);
    uint64_t v5 = v11;
    char v6 = (sqlite3_stmt *)sub_100019240(v11);
    uint64_t result = sub_1003B7480(v6, 1, *(double *)(a2 + 8));
    if ((_DWORD)result)
    {
      uint64_t v7 = (sqlite3_stmt *)sub_100019240(v5);
      uint64_t result = sub_1003C28BC(v7, 2, *(_DWORD *)(a2 + 16));
      if ((_DWORD)result)
      {
        uint64_t v8 = (sqlite3_stmt *)sub_100019240(v5);
        uint64_t result = sub_1003B7480(v8, 3, *(double *)(a2 + 24));
        if ((_DWORD)result)
        {
          uint64_t v9 = *(void *)(a1 + 80);
          uint64_t v10 = (sqlite3_stmt *)sub_100019240(v5);
          uint64_t result = sub_1003BB2BC(v9, v10);
        }
      }
    }

    if (v5) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return result;
}

void sub_100983C48(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100983C68(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = (sqlite3_stmt *)sub_100019240(*a2);
  *(void *)a3 = sqlite3_column_int(v5, 0);
  char v6 = (sqlite3_stmt *)sub_100019240(*a2);
  *(double *)(a3 + _Block_object_dispose((const void *)(v1 - 224), 8) = sqlite3_column_double(v6, 1);
  uint64_t v7 = (sqlite3_stmt *)sub_100019240(*a2);
  *(_DWORD *)(a3 + 16) = sqlite3_column_int(v7, 2);
  uint64_t v8 = (sqlite3_stmt *)sub_100019240(*a2);
  *(double *)(a3 + 24) = sqlite3_column_double(v8, 3);
}

uint64_t sub_100983CDC(uint64_t *a1, char **a2)
{
  int v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v35);
  if ((SHIBYTE(v36) & 0x80000000) == 0)
  {
    if (HIBYTE(v36)) {
      goto LABEL_3;
    }
LABEL_43:
    sub_101254CB4(v4);
LABEL_44:
    sub_100007008();
  }

  int v30 = v35[1];
  operator delete(v35[0]);
  if (!v30) {
    goto LABEL_43;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    a2[1] = *a2;
    sub_10000CE18((uint64_t)v35);
    char v6 = sub_10000CF44(&v36, (uint64_t)"SELECT * from ", 14LL);
    (*(void (**)(void **__return_ptr, uint64_t *))(*a1 + 64))(__p, a1);
    if ((SBYTE7(v32) & 0x80u) == 0) {
      uint64_t v7 = __p;
    }
    else {
      uint64_t v7 = (void **)__p[0];
    }
    if ((SBYTE7(v32) & 0x80u) == 0) {
      uint64_t v8 = BYTE7(v32);
    }
    else {
      uint64_t v8 = (uint64_t)__p[1];
    }
    uint64_t v9 = sub_10000CF44(v6, (uint64_t)v7, v8);
    sub_10000CF44(v9, (uint64_t)" ORDER BY id ASC", 16LL);
    if (SBYTE7(v32) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str((std::stringbuf::string_type *)__p, &v37);
    if ((SBYTE7(v32) & 0x80u) == 0) {
      uint64_t v11 = (char *)__p;
    }
    else {
      uint64_t v11 = (char *)__p[0];
    }
    sub_1003C0D54(v10, v11, &v33);
    uint64_t v12 = v33;
    uint64_t v33 = 0LL;
    uint64_t v34 = v12;
    if (SBYTE7(v32) < 0) {
      operator delete(__p[0]);
    }
    sub_1003C0454(a1[10]);
    __p[0] = 0LL;
    __p[1] = 0LL;
    LODWORD(v32) = -1;
    *((void *)&v32 + 1) = 0LL;
    while (!sub_1001BA11C((uint64_t)a1, &v34, (uint64_t)__p))
    {
      uint64_t v13 = a2[1];
      unint64_t v14 = (unint64_t)a2[2];
      if ((unint64_t)v13 >= v14)
      {
        uint64_t v17 = (v13 - *a2) >> 5;
        unint64_t v18 = v17 + 1;
        uint64_t v19 = v14 - (void)*a2;
        if (v19 >> 4 > v18) {
          unint64_t v18 = v19 >> 4;
        }
        else {
          unint64_t v20 = v18;
        }
        if (v20) {
          int v21 = (char *)sub_10000835C((uint64_t)(a2 + 2), v20);
        }
        else {
          int v21 = 0LL;
        }
        int v22 = &v21[32 * v17];
        __int128 v23 = v32;
        *(_OWORD *)int v22 = *(_OWORD *)__p;
        *((_OWORD *)v22 + 1) = v23;
        __int16 v25 = *a2;
        int v24 = a2[1];
        __int128 v26 = v22;
        if (v24 != *a2)
        {
          do
          {
            __int128 v27 = *((_OWORD *)v24 - 1);
            *((_OWORD *)v26 - 2) = *((_OWORD *)v24 - 2);
            *((_OWORD *)v26 - 1) = v27;
            v26 -= 32;
            v24 -= 32;
          }

          while (v24 != v25);
          int v24 = *a2;
        }

        char v16 = v22 + 32;
        *a2 = v26;
        a2[1] = v22 + 32;
        a2[2] = &v21[32 * v20];
        if (v24) {
          operator delete(v24);
        }
      }

      else
      {
        __int128 v15 = v32;
        *(_OWORD *)uint64_t v13 = *(_OWORD *)__p;
        *((_OWORD *)v13 + 1) = v15;
        char v16 = v13 + 32;
      }

      a2[1] = v16;
    }

    sub_1003C05BC(a1[10]);
    uint64_t v28 = v34;
    uint64_t v34 = 0LL;
    if (v28) {
      (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
    }
    *(void **)((char *)v35
    uint64_t v36 = v29;
    std::streambuf::~streambuf(&v37);
    return std::ios::~ios(&v38);
  }

  return result;
}

void sub_100983FAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  sub_1011F8850((uint64_t)&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_100984014(void *a1, void **a2, double a3, double a4)
{
  uint64_t v10 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v41);
  if ((SHIBYTE(v42) & 0x80000000) == 0)
  {
    if (HIBYTE(v42)) {
      goto LABEL_3;
    }
LABEL_40:
    sub_101254E20(v10);
    goto LABEL_41;
  }

  int v4 = (std::stringbuf *)v41[1];
  operator delete(v41[0]);
  if (!v4) {
    goto LABEL_40;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v41);
  uint64_t v11 = sub_10000CF44(&v42, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(void **__return_ptr, void *))(*a1 + 64LL))(__p, a1);
  if ((SBYTE7(v38) & 0x80u) == 0) {
    uint64_t v12 = __p;
  }
  else {
    uint64_t v12 = (void **)__p[0];
  }
  if ((SBYTE7(v38) & 0x80u) == 0) {
    uint64_t v13 = BYTE7(v38);
  }
  else {
    uint64_t v13 = (uint64_t)__p[1];
  }
  unint64_t v14 = sub_10000CF44(v11, (uint64_t)v12, v13);
  sub_10000CF44(v14, (uint64_t)" WHERE startTime > ? and startTime <= ? ORDER BY rowid ASC", 58LL);
  if (SBYTE7(v38) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v15 = a1[10];
  int v4 = &v43;
  std::stringbuf::str((std::stringbuf::string_type *)__p, &v43);
  if ((SBYTE7(v38) & 0x80u) == 0) {
    char v16 = (char *)__p;
  }
  else {
    char v16 = (char *)__p[0];
  }
  sub_1003C0D54(v15, v16, &v39);
  uint64_t v5 = v39;
  uint64_t v39 = 0LL;
  uint64_t v40 = v5;
  if (SBYTE7(v38) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v17 = (sqlite3_stmt *)sub_100019240(v5);
  if (sub_1003B7480(v17, 1, a3))
  {
    unint64_t v18 = (sqlite3_stmt *)sub_100019240(v5);
    if (sub_1003B7480(v18, 2, a4))
    {
      __p[0] = 0LL;
      __p[1] = 0LL;
      LODWORD(v3_Block_object_dispose((const void *)(v1 - 224), 8) = -1;
      *((void *)&v38 + 1) = 0LL;
      while (1)
      {
        uint64_t v19 = sub_1001BA11C((uint64_t)a1, &v40, (uint64_t)__p);
        if ((_DWORD)v19) {
          break;
        }
        unint64_t v20 = a2[1];
        unint64_t v21 = (unint64_t)a2[2];
        if ((unint64_t)v20 >= v21)
        {
          uint64_t v24 = ((char *)v20 - (_BYTE *)*a2) >> 5;
          unint64_t v25 = v24 + 1;
          uint64_t v26 = v21 - (void)*a2;
          if (v26 >> 4 > v25) {
            unint64_t v25 = v26 >> 4;
          }
          else {
            unint64_t v27 = v25;
          }
          if (v27) {
            uint64_t v28 = (char *)sub_10000835C((uint64_t)(a2 + 2), v27);
          }
          else {
            uint64_t v28 = 0LL;
          }
          uint64_t v29 = &v28[32 * v24];
          __int128 v30 = v38;
          *(_OWORD *)uint64_t v29 = *(_OWORD *)__p;
          *((_OWORD *)v29 + 1) = v30;
          __int128 v32 = (char *)*a2;
          __int16 v31 = (char *)a2[1];
          uint64_t v33 = v29;
          if (v31 != *a2)
          {
            do
            {
              __int128 v34 = *((_OWORD *)v31 - 1);
              *((_OWORD *)v33 - 2) = *((_OWORD *)v31 - 2);
              *((_OWORD *)v33 - 1) = v34;
              v33 -= 32;
              v31 -= 32;
            }

            while (v31 != v32);
            __int16 v31 = (char *)*a2;
          }

          __int128 v23 = v29 + 32;
          *a2 = v33;
          a2[1] = v29 + 32;
          a2[2] = &v28[32 * v27];
          if (v31) {
            operator delete(v31);
          }
        }

        else
        {
          __int128 v22 = v38;
          _OWORD *v20 = *(_OWORD *)__p;
          v20[1] = v22;
          __int128 v23 = v20 + 2;
        }

        a2[1] = v23;
      }

      uint64_t v5 = v40;
      goto LABEL_43;
    }
  }

void sub_100984328( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_100984390(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v2 = a1 + 112;
  uint64_t v4 = v2 - 40;
  uint64_t v38 = v2;
  (*(void (**)(void))(v3 + 16))();
  if (sub_100D8A92C(v4))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101863348);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      char v6 = (void *)(a1 + 88);
      *(_DWORD *)__int128 buf = 68289282;
      *(_DWORD *)uint64_t v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&void v42[6] = "";
      __int16 v43 = 2082;
      uint64_t v44 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Database is already opened., name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    if (*(void *)(a1 + 216))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101863348);
      }
      uint64_t v7 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v8 = *(void *)(a1 + 216);
        *(_DWORD *)__int128 buf = 134349056;
        *(void *)uint64_t v42 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101863348);
        }
        uint64_t v34 = *(void *)(a1 + 216);
        int v39 = 134349056;
        uint64_t v40 = v34;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  &v39,  12);
        uint64_t v36 = (uint8_t *)v35;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLActivityRecorderDb<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::s etDatabaseAccessible() [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v35);
        if (v36 != buf) {
          free(v36);
        }
      }
    }

    uint64_t v9 = 1LL;
    goto LABEL_63;
  }

  sub_1001BA070(a1);
  uint64_t v9 = sub_100D8A92C(v4);
  if ((_DWORD)v9)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101863348);
    }
    uint64_t v10 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = (void *)(a1 + 88);
      uint64_t v12 = *(void *)(a1 + 216);
      *(_DWORD *)__int128 buf = 68289539;
      *(_DWORD *)uint64_t v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&void v42[6] = "";
      __int16 v43 = 2082;
      uint64_t v44 = v11;
      __int16 v45 = 2049;
      uint64_t v46 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Inserting entries into database, name:%{public, location:escape_only}s, size:%{private}llu}",  buf,  0x26u);
    }

    sub_1003C0454(*(void *)(a1 + 80));
    uint64_t v13 = *(void *)(a1 + 184);
    uint64_t v14 = *(void *)(a1 + 192);
    uint64_t v15 = (void *)(v13 + 8LL * (*(void *)(a1 + 208) >> 7));
    if (v14 == v13) {
      uint64_t v16 = 0LL;
    }
    else {
      uint64_t v16 = *v15 + 32 * (*(void *)(a1 + 208) & 0x7FLL);
    }
    while (1)
    {
      if (v14 == v13)
      {
        uint64_t v22 = 0LL;
      }

      else
      {
        unint64_t v21 = *(void *)(a1 + 216) + *(void *)(a1 + 208);
        uint64_t v22 = *(void *)(v13 + ((v21 >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * (v21 & 0x7F);
      }

      if (v16 == v22) {
        break;
      }
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101863368);
      }
      __int128 v23 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "Adding from buffer to db.", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101863368);
        }
        LOWORD(v39) = 0;
        LODWORD(v37) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Adding from buffer to db.",  &v39,  v37);
        uint64_t v26 = (uint8_t *)v25;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLActivityRecorderDb<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::s etDatabaseAccessible() [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v25);
        if (v26 != buf) {
          free(v26);
        }
      }

      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 80LL))(a1, v16, 1LL);
      v16 += 32LL;
      if (v16 - *v15 == 4096)
      {
        uint64_t v24 = v15[1];
        ++v15;
        uint64_t v16 = v24;
      }

      uint64_t v13 = *(void *)(a1 + 184);
      uint64_t v14 = *(void *)(a1 + 192);
    }

    sub_1003C05BC(*(void *)(a1 + 80));
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101863348);
    }
    uint64_t v17 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
    {
      unint64_t v18 = (void *)(a1 + 88);
      *(_DWORD *)__int128 buf = 68289282;
      *(_DWORD *)uint64_t v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&void v42[6] = "";
      __int16 v43 = 2082;
      uint64_t v44 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101863348);
      }
    }

    uint64_t v19 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      unint64_t v20 = (void *)(a1 + 88);
      *(_DWORD *)__int128 buf = 68289282;
      *(_DWORD *)uint64_t v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&void v42[6] = "";
      __int16 v43 = 2082;
      uint64_t v44 = v20;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v19,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Unexpected error condition! Device has been unlocked but database remains unreadable!",  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    *(_BYTE *)(a1 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  }

  unint64_t v27 = *(void ***)(a1 + 184);
  uint64_t v28 = *(void *)(a1 + 192);
  *(void *)(a1 + 216) = 0LL;
  unint64_t v29 = v28 - (void)v27;
  if (v29 >= 0x11)
  {
    do
    {
      operator delete(*v27);
      uint64_t v30 = *(void *)(a1 + 192);
      unint64_t v27 = (void **)(*(void *)(a1 + 184) + 8LL);
      *(void *)(a1 + 184) = v27;
      unint64_t v29 = v30 - (void)v27;
    }

    while (v29 > 0x10);
  }

  if (v29 >> 3 == 1)
  {
    uint64_t v31 = 64LL;
  }

  else
  {
    if (v29 >> 3 != 2) {
      goto LABEL_61;
    }
    uint64_t v31 = 128LL;
  }

  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = v31;
LABEL_61:
  __int128 v32 = *(void **)(a1 + 144);
  if (v32)
  {

    *(void *)(a1 + 144) = 0LL;
  }

void sub_100984A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

id *sub_100984ACC(uint64_t a1, uint64_t a2, char a3)
{
  v36[0] = (id)os_transaction_create("CLActivityRecorderDb::sanitizeAndStoreRecordUL");
  v36[1] = 0LL;
  if (*(double *)(a1 + 232) > 0.0
    && (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136LL))(a1, a1 + 224, a2))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 72LL))(a1, a1 + 224, a2);
    return sub_1001BA1BC(v36);
  }

  if ((a3 & 1) == 0) {
    sub_1003C0454(*(void *)(a1 + 80));
  }
  uint64_t v32 = 0LL;
  double v33 = 0.0;
  int v34 = -1;
  uint64_t v35 = 0LL;
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 104LL))(a1, &v32);
  if (v6 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

  else
  {
    if (v6)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101863348);
      }
      uint64_t v14 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Failed to insert record due to failure from reading the most recent entry.",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101863348);
        }
        LOWORD(v37) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "Failed to insert record due to failure from reading the most recent entry.",  &v37,  2);
        uint64_t v16 = (uint8_t *)v15;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLActivityRecorderDb<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::s anitizeAndStoreRecordUL(const T &, BOOL) [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLActivit yDB::ClassBDataProtectionPolicy]",  "%s\n",  v15);
        if (v16 != buf) {
          free(v16);
        }
      }

      goto LABEL_43;
    }

    double v7 = *(double *)(a2 + 8);
    double v8 = v33;
    double v9 = v7 - v33;
    if (v7 - v33 < 0.0) {
      double v9 = -(v7 - v33);
    }
    if (v9 > 604800.0)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101863348);
      }
      uint64_t v10 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a2 + 8);
        *(_DWORD *)__int128 buf = 134349312;
        double v42 = v33;
        __int16 v43 = 2050;
        uint64_t v44 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101863348);
        }
        uint64_t v23 = *(void *)(a2 + 8);
        int v37 = 134349312;
        double v38 = v33;
        __int16 v39 = 2050;
        uint64_t v40 = v23;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  &v37,  22);
        unint64_t v25 = (uint8_t *)v24;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::s anitizeAndStoreRecordUL(const T &, BOOL) [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLActivit yDB::ClassBDataProtectionPolicy]",  "%s\n",  v24);
        if (v25 != buf) {
          free(v25);
        }
      }

      CLWriteStackshot("Potential CM database inconsistency, time jump", 0LL);
      double v7 = *(double *)(a2 + 8);
      double v8 = v33;
    }

    if (v7 < v8)
    {
      if (v8 - v7 < 10.0)
      {
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101863348);
        }
        uint64_t v12 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
        {
          double v13 = *(double *)(a2 + 8);
          *(_DWORD *)__int128 buf = 134217984;
          double v42 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_101863348);
          }
          double v26 = *(double *)(a2 + 8);
          int v37 = 134217984;
          double v38 = v26;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  COERCE_DOUBLE(&v37));
          uint64_t v28 = (uint8_t *)v27;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>: :sanitizeAndStoreRecordUL(const T &, BOOL) [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLAct ivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v27);
          if (v28 != buf) {
            free(v28);
          }
        }

        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 88LL))(a1, a2);
        goto LABEL_42;
      }

      double v17 = v7 - v8;
      double v18 = *(float *)(a1 + 136);
      if (qword_1019344B0 != -1)
      {
        double v31 = *(float *)(a1 + 136);
        dispatch_once(&qword_1019344B0, &stru_101863348);
        double v18 = v31;
      }

      double v19 = v17 - v18;
      unint64_t v20 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)__int128 buf = 134217984;
        double v42 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101863348);
        }
        int v37 = 134217984;
        double v38 = v19;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  COERCE_DOUBLE(&v37));
        uint64_t v30 = (uint8_t *)v29;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<CLCardioChange::EstimateResult, CLActivityDB::ClassBDataProtectionPolicy>::s anitizeAndStoreRecordUL(const T &, BOOL) [T = CLCardioChange::EstimateResult, DataProtectionPolicy = CLActivit yDB::ClassBDataProtectionPolicy]",  "%s\n",  v29);
        if (v30 != buf) {
          free(v30);
        }
      }

      (*(void (**)(uint64_t, double))(*(void *)a1 + 96LL))(a1, v19);
    }

    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(*(void *)a1 + 144LL))(a1, &v32, a1 + 224, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

void sub_100985218( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_100985244(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v23);
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    if (HIBYTE(v24)) {
      goto LABEL_3;
    }
LABEL_29:
    unint64_t v20 = (_Unwind_Exception *)sub_101254F8C(v4);
    sub_1011F8850((uint64_t)v23);
    _Unwind_Resume(v20);
  }

  double v19 = v23[1];
  operator delete(v23[0]);
  if (!v19) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120LL))(a1, a2, 1LL);
    sub_10000CE18((uint64_t)v23);
    int v6 = sub_10000CF44(&v24, (uint64_t)"DELETE FROM ", 12LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" WHERE startTime > ?", 20LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v25);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v21);
    uint64_t v12 = v21;
    uint64_t v21 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, *(double *)(a2 + 8)))
    {
      uint64_t v14 = a1[10];
      uint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    uint64_t v16 = a1[10];
    else {
      uint64_t v17 = *(void *)(v16 + 88);
    }
    sub_1003C1EC0(v16, v17);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v23
    uint64_t v24 = v18;
    std::streambuf::~streambuf(&v25);
    return std::ios::~ios(&v26);
  }

  return result;
}

uint64_t sub_1009854A4(void *a1, double a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v21);
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22)) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v18 = (_Unwind_Exception *)sub_1012550F8(v4);
    sub_1011F8850((uint64_t)v21);
    _Unwind_Resume(v18);
  }

  uint64_t v17 = v21[1];
  operator delete(v21[0]);
  if (!v17) {
    goto LABEL_26;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v21);
    int v6 = sub_10000CF44(&v22, (uint64_t)"UPDATE ", 7LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" SET startTime = startTime + ?", 30LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v23);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v19);
    uint64_t v12 = v19;
    uint64_t v19 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, a2))
    {
      uint64_t v14 = a1[10];
      uint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v21
    uint64_t v22 = v16;
    std::streambuf::~streambuf(&v23);
    return std::ios::~ios(&v24);
  }

  return result;
}

uint64_t sub_1009856DC(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v22);
  if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    if (HIBYTE(v23)) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t v17 = (_Unwind_Exception *)sub_101255264(v4);
    uint64_t v18 = v20;
    uint64_t v20 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
    sub_1011F8850((uint64_t)v22);
    _Unwind_Resume(v17);
  }

  uint64_t v16 = v22[1];
  operator delete(v22[0]);
  if (!v16) {
    goto LABEL_25;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v22);
  uint64_t v5 = sub_10000CF44(&v23, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  double v8 = sub_10000CF44(v5, (uint64_t)p_p, size);
  sub_10000CF44(v8, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28LL);
  uint64_t v9 = a1[10];
  std::stringbuf::str(&__p, &v24);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = &__p;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v9, (char *)v10, &v19);
  uint64_t v11 = v19;
  uint64_t v19 = 0LL;
  uint64_t v20 = v11;
  uint64_t v12 = sub_1001BA11C((uint64_t)a1, &v20, a2);
  uint64_t v13 = v20;
  uint64_t v20 = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  *(void **)((char *)v22
  uint64_t v23 = v14;
  std::streambuf::~streambuf(&v24);
  std::ios::~ios(&v25);
  return v12;
}

uint64_t sub_100985904(uint64_t a1)
{
  return sub_100984390(a1 - 72);
}

void sub_10098590C(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_100985938(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void *sub_100985964(void *a1, uint64_t a2, uint64_t a3)
{
  a1[1] = 0LL;
  *a1 = off_101863398;
  a1[2] = 0LL;
  a1[3] = a2;
  sub_100985F44(a1 + 4, a3);
  return a1;
}

void sub_1009859B0(_Unwind_Exception *a1)
{
  *uint64_t v1 = &off_1018633E8;
  sub_10000AE14(v2);
  _Unwind_Resume(a1);
}

BOOL sub_1009859D8(uint64_t a1, void *a2)
{
  id v4 = [a2 length];
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101863400);
  }
  uint64_t v5 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    id v6 = sub_100265490(*(void *)(a1 + 32));
    *(_DWORD *)__int128 buf = 134218240;
    *(void *)uint64_t v26 = v6;
    *(_WORD *)&v26[8] = 2048;
    *(void *)&v26[10] = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "currentSize is %llu, log msg size is %lu",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101863400);
    }
    uint64_t v16 = qword_101934A78;
    id v17 = sub_100265490(*(void *)(a1 + 32));
    int v21 = 134218240;
    id v22 = v17;
    __int16 v23 = 2048;
    id v24 = v4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v16,  2LL,  "currentSize is %llu, log msg size is %lu",  &v21,  22);
    uint64_t v19 = (uint8_t *)v18;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLActivityLoggerSizePolicy::shouldILog(NSData *)", "%s\n", v18);
    if (v19 != buf) {
      free(v19);
    }
  }

  if ((unint64_t)v4 < 0x10000)
  {
    id v10 = sub_100265490(*(void *)(a1 + 32));
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101863400);
    }
    uint64_t v11 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = *(void *)(a1 + 24);
      id v13 = [a2 length];
      *(_DWORD *)__int128 buf = 134218240;
      *(void *)uint64_t v26 = v12;
      *(_WORD *)&v26[8] = 2048;
      *(void *)&v26[10] = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Log size exceeded %llu, skip log of %lu bytes",  buf,  0x16u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101863400);
      }
      uint64_t v14 = qword_101934A78;
      [a2 length];
      LODWORD(v2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v14,  2LL,  "Log size exceeded %llu, skip log of %lu bytes",  &v21,  v20);
      goto LABEL_24;
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101863400);
    }
    double v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 67109376;
      *(_DWORD *)uint64_t v26 = 0xFFFF;
      *(_WORD *)&v26[4] = 2048;
      *(void *)&v26[6] = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Log msg size exceeds limit %d, skip loging %lu bytes",  buf,  0x12u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101863400);
      }
      LODWORD(v2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Log msg size exceeds limit %d, skip loging %lu bytes",  &v21,  v20);
LABEL_24:
      uint64_t v15 = (uint8_t *)v9;
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual BOOL CLActivityLoggerSizePolicy::shouldILog(NSData *)", "%s\n", v9);
      if (v15 != buf) {
        free(v15);
      }
      return 0LL;
    }
  }

  return result;
}

void *sub_100985E88(void *a1)
{
  *a1 = off_101863398;
  sub_10000AE14((uint64_t)(a1 + 4));
  *a1 = &off_1018633E8;
  sub_10000AE14((uint64_t)(a1 + 1));
  return a1;
}

void sub_100985ED0(void *a1)
{
  *a1 = off_101863398;
  sub_10000AE14((uint64_t)(a1 + 4));
  *a1 = &off_1018633E8;
  sub_10000AE14((uint64_t)(a1 + 1));
  operator delete(a1);
}

void sub_100985F18(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void *sub_100985F44(void *a1, uint64_t a2)
{
  *a1 = a2;
  id v4 = operator new(0x20uLL);
  *id v4 = &off_101863430;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100985F8C(_Unwind_Exception *exception_object)
{
  if (v1)
  {
    uint64_t v3 = (void *)sub_1002659C8(v1);
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void sub_100985FA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = (void *)sub_1002659C8(v1);
    operator delete(v2);
  }

uint64_t sub_100985FCC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

uint64_t sub_100986154(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 136);
  if (v2)
  {
    *(void *)(a1 + 144) = v2;
    operator delete(v2);
  }

  return a1;
}

id sub_100986194()
{
  if ((sub_1007EC584() & 1) != 0)
  {
    sub_100F76854(&__p);
    uint64_t v0 = sub_100F7F1D4((uint64_t)__p);
    uint64_t v1 = (void *)v0;
    uint64_t v2 = v33;
    if (!v33) {
      goto LABEL_6;
    }
    p_shared_owners = (unint64_t *)&v33->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      if (v1)
      {
LABEL_7:
        if ([v1 isValid])
        {
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101863498);
          }
          uint64_t v5 = (os_log_s *)qword_101934858;
          if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
          {
            [v1 getBasicInfo];
            id v6 = v34 >= 0 ? &__p : (void **)__p;
            *(_DWORD *)__int128 buf = 136380675;
            *(void *)&uint8_t buf[4] = v6;
            _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "WifiAssociatedApCentroidStore, deleting all records from local store, %{private}s",  buf,  0xCu);
            if (v34 < 0) {
              operator delete(__p);
            }
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(&__p, 0x65CuLL);
            if (qword_101934850 != -1) {
              dispatch_once(&qword_101934850, &stru_101863498);
            }
            uint64_t v21 = qword_101934858;
            [v1 getBasicInfo];
            if (v29 >= 0) {
              id v22 = buf;
            }
            else {
              id v22 = *(_BYTE **)buf;
            }
            int v30 = 136380675;
            double v31 = v22;
            __int16 v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v21,  0LL,  "WifiAssociatedApCentroidStore, deleting all records from local store, %{private}s",  &v30,  12);
            if (v29 < 0) {
              operator delete(*(void **)buf);
            }
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiAssociatedApCentroidStoreUpdateManager::deleteAllRecords()",  "%s\n",  v23);
          }

          return [v1 deleteAllRecords];
        }
      }
    }

    else
    {
LABEL_6:
      if (v0) {
        goto LABEL_7;
      }
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863498);
    }
    id v17 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(__p) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "WifiAssociatedApCentroidStore, skip deleting all records from local store as the store is invalid",  (uint8_t *)&__p,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(&__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863498);
    }
    *(_WORD *)__int128 buf = 0;
    uint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WifiAssociatedApCentroidStore, skip deleting all records from local store as the store is invalid",  buf,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiAssociatedApCentroidStoreUpdateManager::deleteAllRecords()",  "%s\n",  v15);
LABEL_68:
    return 0LL;
  }

  if (!*((_BYTE *)sub_100F4BF44() + 103))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863498);
    }
    uint64_t v16 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(__p) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "WifiAssociatedApCentroidStore, skip deleting all records as it is not allowed when iCloud sharing is disabled",  (uint8_t *)&__p,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(&__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863498);
    }
    *(_WORD *)__int128 buf = 0;
    uint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WifiAssociatedApCentroidStore, skip deleting all records as it is not allowed when iCloud sharing is disabled",  buf,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL deleteAllRecordsWheniCloudSharingIsDisabled()", "%s\n", v15);
    goto LABEL_68;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101863498);
  }
  double v8 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "WifiAssociatedApCentroidStore, deleting all records from local store even if iCloud sharing is disabled",  (uint8_t *)&__p,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863498);
    }
    *(_WORD *)__int128 buf = 0;
    uint64_t v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WifiAssociatedApCentroidStore, deleting all records from local store even if iCloud sharing is disabled",  buf,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL deleteAllRecordsWheniCloudSharingIsDisabled()", "%s\n", v19);
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101863498);
  }
  uint64_t v9 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Re-initializing WifiAssociatedApCentroidStore for deleting all records",  (uint8_t *)&__p,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863498);
    }
    *(_WORD *)__int128 buf = 0;
    LODWORD(v27) = 2;
    uint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "Re-initializing WifiAssociatedApCentroidStore for deleting all records",  buf,  v27);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL deleteAllRecordsWheniCloudSharingIsDisabled()", "%s\n", v20);
  }

  id v10 = objc_alloc_init(&OBJC_CLASS___CLWifiAssociatedApCentroidSyncedDataStore);
  uint64_t v11 = v10;
  if (!v10 || !-[CLWifiAssociatedApCentroidSyncedDataStore isValid](v10, "isValid"))
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863498);
    }
    uint64_t v14 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(__p) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "WifiAssociatedApCentroidStore, skip deleting all records from local store as the store is invalid",  (uint8_t *)&__p,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(&__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863498);
    }
    *(_WORD *)__int128 buf = 0;
    LODWORD(v27) = 2;
    uint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WifiAssociatedApCentroidStore, skip deleting all records from local store as the store is invalid",  buf,  v27);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL deleteAllRecordsWheniCloudSharingIsDisabled()", "%s\n", v15);
    goto LABEL_68;
  }

  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101863498);
  }
  uint64_t v12 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    -[CLWifiAssociatedApCentroidSyncedDataStore getBasicInfo](v11, "getBasicInfo");
    id v13 = v34 >= 0 ? &__p : (void **)__p;
    *(_DWORD *)__int128 buf = 136380675;
    *(void *)&uint8_t buf[4] = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "WifiAssociatedApCentroidStore, deleting all records from local store, %{private}s",  buf,  0xCu);
    if (v34 < 0) {
      operator delete(__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863498);
    }
    uint64_t v24 = qword_101934858;
    -[CLWifiAssociatedApCentroidSyncedDataStore getBasicInfo](v11, "getBasicInfo");
    if (v29 >= 0) {
      uint64_t v25 = buf;
    }
    else {
      uint64_t v25 = *(_BYTE **)buf;
    }
    int v30 = 136380675;
    double v31 = v25;
    LODWORD(v27) = 12;
    uint64_t v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v24,  0LL,  "WifiAssociatedApCentroidStore, deleting all records from local store, %{private}s",  &v30,  v27);
    if (v29 < 0) {
      operator delete(*(void **)buf);
    }
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL deleteAllRecordsWheniCloudSharingIsDisabled()", "%s\n", v26);
  }

  BOOL v7 = -[CLWifiAssociatedApCentroidSyncedDataStore deleteAllRecords](v11, "deleteAllRecords");

  return (id)v7;
}

void sub_100986BB4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100986BD0(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100986BFC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_100986C98(_Unwind_Exception *a1)
{
}

void sub_100986CB0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      *uint64_t v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_100986D3C(_Unwind_Exception *a1)
{
}

uint64_t sub_100986D54(uint64_t a1, const std::string::value_type *a2)
{
  uint64_t v4 = sub_1002E4C3C(a1, "name", 1LL, 1LL);
  *(void *)(v4 + 16) = 0LL;
  *(void *)(v4 + 24) = 0LL;
  *(void *)(v4 + 32) = 0LL;
  std::string::assign((std::string *)(v4 + 16), a2);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018634B8);
  }
  uint64_t v5 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)__int128 buf = 136315138;
    uint64_t v12 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Bytes: construct, name, %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018634B8);
    }
    int v9 = 136315138;
    id v10 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Bytes: construct, name, %s",  (const char *)&v9);
    double v8 = (uint8_t *)v7;
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLDebugBytes::CLDebugBytes(const char *)", "%s\n", v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  sub_100986F68(a1);
  return a1;
}

void sub_100986F40(_Unwind_Exception *a1)
{
}

uint64_t sub_100986F68(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018634B8);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = (void *)(a1 + 16);
    *(_DWORD *)__int128 buf = 136315138;
    uint64_t v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Bytes: clear, name, %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018634B8);
    }
    uint64_t v5 = (void *)(a1 + 16);
    int v8 = 136315138;
    int v9 = v5;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Bytes: clear, name, %s",  (const char *)&v8);
    BOOL v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLDebugBytes::clear()", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  *(void *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
}

void sub_10098715C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_100987188(uint64_t a1, uint64_t *a2, int a3)
{
  int v23 = a1;
  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  LOWORD(v25) = 256;
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_1018634B8);
  }
  id v6 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    BOOL v7 = (void *)(a1 + 16);
    else {
      int v8 = (uint64_t *)*a2;
    }
    int v9 = *(_DWORD *)(a1 + 40);
    int v10 = *(_DWORD *)(a1 + 44);
    int v11 = *(_DWORD *)(a1 + 48);
    int v12 = *(_DWORD *)(a1 + 52);
    *(_DWORD *)__int128 buf = 136316674;
    std::string v41 = v7;
    __int16 v42 = 2080;
    __int16 v43 = v8;
    __int16 v44 = 1024;
    int v45 = v9;
    __int16 v46 = 1024;
    int v47 = v10;
    __int16 v48 = 1024;
    int v49 = v11;
    __int16 v50 = 1024;
    int v51 = v12;
    __int16 v52 = 1024;
    int v53 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Bytes: log, name, %s, m, %s, s, %d, r, %d, t, %d, ts, %d, reachability, %d",  buf,  0x34u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_1018634B8);
    }
    uint64_t v14 = (void *)(a1 + 16);
    else {
      uint64_t v15 = (uint64_t *)*a2;
    }
    int v16 = *(_DWORD *)(a1 + 40);
    int v17 = *(_DWORD *)(a1 + 44);
    int v18 = *(_DWORD *)(a1 + 48);
    int v19 = *(_DWORD *)(a1 + 52);
    int v26 = 136316674;
    uint64_t v27 = v14;
    __int16 v28 = 2080;
    char v29 = v15;
    __int16 v30 = 1024;
    int v31 = v16;
    __int16 v32 = 1024;
    int v33 = v17;
    __int16 v34 = 1024;
    int v35 = v18;
    __int16 v36 = 1024;
    int v37 = v19;
    __int16 v38 = 1024;
    int v39 = a3;
    LODWORD(v21) = 52;
    uint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Bytes: log, name, %s, m, %s, s, %d, r, %d, t, %d, ts, %d, reachability, %d",  (const char *)&v26,  v21,  v22,  v23,  v24,  v25);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLDebugBytes::log(const std::string &, CLDaemonStatus_Type::Reachability)",  "%s\n",  v20);
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
}

void sub_100987428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_100987450(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1009889C4(id a1)
{
  qword_1019349A8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Routine");
}

uint64_t sub_1009889F0(unsigned int a1)
{
  if (a1 <= 0x40) {
    int v1 = 0;
  }
  else {
    int v1 = 25;
  }
  if (a1 <= 0x44) {
    unsigned int v2 = v1;
  }
  else {
    unsigned int v2 = 50;
  }
  if (a1 <= 0x4E) {
    return v2;
  }
  else {
    return 75LL;
  }
}

BOOL sub_100988A18(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if ((sub_100869780(a1) & 1) == 0)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    int v16 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_1008698F8(a1, &buf);
      int v17 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &buf
          : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      LODWORD(v36.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, invalid location %{private}s, fail",  (uint8_t *)&v36,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    uint64_t v18 = qword_101934858;
    sub_1008698F8(a1, &v36);
    if ((v36.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v19 = &v36;
    }
    else {
      int v19 = (std::stringbuf::string_type *)v36.__r_.__value_.__r.__words[0];
    }
    int v40 = 136380675;
    std::string v41 = v19;
    uint64_t v20 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v18,  2LL,  "WifiCalc, integrity, invalid location %{private}s, fail",  &v40,  12);
    goto LABEL_46;
  }

  if ((sub_100869780(a2) & 1) == 0)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    uint64_t v21 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_1008698F8(a2, &buf);
      int v22 = (buf.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &buf
          : (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
      LODWORD(v36.__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 4) = (std::string::size_type)v22;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, invalid reference location %{private}s, fail",  (uint8_t *)&v36,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    uint64_t v23 = qword_101934858;
    sub_1008698F8(a2, &v36);
    if ((v36.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v24 = &v36;
    }
    else {
      int v24 = (std::stringbuf::string_type *)v36.__r_.__value_.__r.__words[0];
    }
    int v40 = 136380675;
    std::string v41 = v24;
    uint64_t v20 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  v23,  2LL,  "WifiCalc, integrity, invalid reference location %{private}s, fail",  &v40,  12);
LABEL_46:
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiLocationIntegrityCalculator::shouldBumpLocationIntegrity(const CLDaemonLocation &, const CLDaemo nLocation &, const CLDaemonLocationPrivate &, const double)",  "%s\n",  (const char *)v20);
    if (v20 == &buf) {
      return 0LL;
    }
LABEL_47:
    free(v20);
    return 0LL;
  }

  std::string::size_type v8 = *((std::string::size_type *)sub_100F4CD5C() + 3);
  if (*(double *)(a3 + 344) <= 0.0)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    int v25 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, warning, machContinuousTime not available in location private",  (uint8_t *)&buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018634F8);
      }
      LOWORD(v36.__r_.__value_.__l.__data_) = 0;
      __int16 v34 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, integrity, warning, machContinuousTime not available in location private",  &v36,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval getAge(const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  (const char *)v34);
      if (v34 != &buf) {
        free(v34);
      }
    }

    *(double *)&std::string::size_type v11 = vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(a2 + 76));
  }

  else
  {
    double v9 = sub_101171D4C();
    double v10 = *(double *)(a3 + 344);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    *(double *)&std::string::size_type v11 = vabdd_f64(v9, v10);
    int v12 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      std::string::size_type v13 = *(void *)(a3 + 344);
      LODWORD(buf.__r_.__value_.__l.__data_) = 134349312;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v13;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, machContinuousTime %{public}.1f, age %{public}.1f",  (uint8_t *)&buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_1018634F8);
      }
      std::string::size_type v14 = *(void *)(a3 + 344);
      LODWORD(v36.__r_.__value_.__l.__data_) = 134349312;
      *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 4) = v14;
      WORD2(v36.__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&v36.__r_.__value_.__r.__words[1] + 6) = v11;
      uint64_t v15 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, integrity, machContinuousTime %{public}.1f, age %{public}.1f",  &v36,  22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CFTimeInterval getAge(const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  (const char *)v15);
      if (v15 != &buf) {
        free(v15);
      }
    }
  }

  if (*(double *)&v11 > *(double *)&v8)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    int v26 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 134349312;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v11;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, age, %{public}.1f, threshold, %{public}.1f, fail",  (uint8_t *)&buf,  0x16u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    LODWORD(v36.__r_.__value_.__l.__data_) = 134349312;
    *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 4) = v11;
    WORD2(v36.__r_.__value_.__r.__words[1]) = 2050;
    *(std::string::size_type *)((char *)&v36.__r_.__value_.__r.__words[1] + 6) = v8;
    LODWORD(v35) = 22;
    uint64_t v20 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, integrity, age, %{public}.1f, threshold, %{public}.1f, fail",  &v36,  v35);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiLocationIntegrityCalculator::shouldBumpLocationIntegrity(const CLDaemonLocation &, const CLDaemo nLocation &, const CLDaemonLocationPrivate &, const double)",  "%s\n",  (const char *)v20);
    if (v20 == &buf) {
      return 0LL;
    }
    goto LABEL_47;
  }

  double v29 = sub_100D2EC74(*(double *)(a1 + 4), *(double *)(a1 + 12), *(double *)(a2 + 4), *(double *)(a2 + 12));
  BOOL v27 = v29 <= a4;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018634F8);
  }
  __int16 v30 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    int v31 = "fail";
    LODWORD(buf.__r_.__value_.__l.__data_) = 134349826;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v11;
    if (v29 <= a4) {
      int v31 = "pass";
    }
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
    *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v29;
    HIWORD(buf.__r_.__value_.__r.__words[2]) = 2050;
    double v43 = a4;
    __int16 v44 = 2082;
    int v45 = v31;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, age, %{public}.1f, distance, %{public}.1f, threshold, %{public}.1f, %{public}s",  (uint8_t *)&buf,  0x2Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    __int16 v32 = "fail";
    LODWORD(v36.__r_.__value_.__l.__data_) = 134349826;
    if (v29 <= a4) {
      __int16 v32 = "pass";
    }
    *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 4) = v11;
    WORD2(v36.__r_.__value_.__r.__words[1]) = 2050;
    *(double *)((char *)&v36.__r_.__value_.__r.__words[1] + 6) = v29;
    HIWORD(v36.__r_.__value_.__r.__words[2]) = 2050;
    double v37 = a4;
    __int16 v38 = 2082;
    int v39 = v32;
    LODWORD(v35) = 42;
    int v33 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, integrity, age, %{public}.1f, distance, %{public}.1f, threshold, %{ public}.1f, %{public}s",  &v36,  v35);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiLocationIntegrityCalculator::shouldBumpLocationIntegrity(const CLDaemonLocation &, const CLDaemo nLocation &, const CLDaemonLocationPrivate &, const double)",  "%s\n",  (const char *)v33);
    if (v33 != &buf) {
      free(v33);
    }
  }

  return v27;
}

BOOL sub_100989400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v5 = *(_DWORD *)(a1 + 84);
  if (v5 > 0x4E)
  {
    int v6 = 75;
    goto LABEL_20;
  }

  if (v5 <= 0x44)
  {
    if (v5 <= 0x40) {
      int v6 = 0;
    }
    else {
      int v6 = 25;
    }
LABEL_20:
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    uint64_t v18 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_100989D1C(v6, buf);
      int v19 = v40 >= 0 ? buf : *(uint8_t **)buf;
      *(_DWORD *)int v33 = 136446210;
      *(void *)&v33[4] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, not bumping integrity %{public}s as it is not Medium",  v33,  0xCu);
      if (v40 < 0) {
        operator delete(*(void **)buf);
      }
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    uint64_t v31 = qword_101934858;
    sub_100989D1C(v6, v33);
    __int16 v32 = v34 >= 0 ? v33 : *(_BYTE **)v33;
    int v35 = 136446210;
    std::stringbuf::string_type v36 = v32;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v31,  2LL,  "WifiCalc, integrity, not bumping integrity %{public}s as it is not Medium",  &v35,  12);
    if (v34 < 0) {
      operator delete(*(void **)v33);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiLocationIntegrityCalculator::shouldBumpLocationIntegrity(const CLDaemonLocation &, const CL::Wif i1::Types::ComputedLocation &, const CLDaemonLocationPrivate &, const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v17);
LABEL_74:
    free(v17);
    return 0LL;
  }

  if ((sub_100869780(a2) & 1) == 0)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    uint64_t v21 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "WifiCalc, integrity, multi-AP wifi reference location unavailable",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    *(_WORD *)int v33 = 0;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "WifiCalc, integrity, multi-AP wifi reference location unavailable",  v33,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLWifiLocationIntegrityCalculator::shouldBumpLocationIntegrity(const CLDaemonLocation &, const CL::Wif i1::Types::ComputedLocation &, const CLDaemonLocationPrivate &, const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v17);
    goto LABEL_62;
  }

  if (*(_DWORD *)(a2 + 96) != 4)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    int v22 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      int v23 = *(_DWORD *)(a2 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "WifiCalc, integrity, incorrect wifi location type, %{public}d",  buf,  8u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    int v24 = *(_DWORD *)(a2 + 96);
    *(_DWORD *)int v33 = 67240192;
    *(_DWORD *)&v33[4] = v24;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "WifiCalc, integrity, incorrect wifi location type, %{public}d",  v33,  8);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLWifiLocationIntegrityCalculator::shouldBumpLocationIntegrity(const CLDaemonLocation &, const CL::Wif i1::Types::ComputedLocation &, const CLDaemonLocationPrivate &, const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v17);
    goto LABEL_62;
  }

  if ((sub_100869780(a4) & 1) == 0)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    int v25 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "WifiCalc, integrity, cell reference location unavailable",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    *(_WORD *)int v33 = 0;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "WifiCalc, integrity, cell reference location unavailable",  v33,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLWifiLocationIntegrityCalculator::shouldBumpLocationIntegrity(const CLDaemonLocation &, const CL::Wif i1::Types::ComputedLocation &, const CLDaemonLocationPrivate &, const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v17);
    goto LABEL_62;
  }

  if (*(_DWORD *)(a4 + 96) != 6)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    int v26 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
    {
      int v27 = *(_DWORD *)(a4 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_ERROR,  "WifiCalc, integrity, incorrect cell location type, %{public}d",  buf,  8u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    int v28 = *(_DWORD *)(a4 + 96);
    *(_DWORD *)int v33 = 67240192;
    *(_DWORD *)&v33[4] = v28;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "WifiCalc, integrity, incorrect cell location type, %{public}d",  v33,  8);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLWifiLocationIntegrityCalculator::shouldBumpLocationIntegrity(const CLDaemonLocation &, const CL::Wif i1::Types::ComputedLocation &, const CLDaemonLocationPrivate &, const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v17);
    goto LABEL_62;
  }

  int v12 = (int *)sub_100F4CD5C();
  int v13 = *v12;
  if (*(_DWORD *)(a2 + 156) < *v12)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    std::string::size_type v14 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      int v15 = *(_DWORD *)(a2 + 156);
      *(_DWORD *)std::stringbuf::string_type buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v15;
      __int16 v38 = 1026;
      int v39 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, multi-AP wifi fix unavailable, %{public}d APs, threshold, %{public}d, fail",  buf,  0xEu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    int v16 = *(_DWORD *)(a2 + 156);
    *(_DWORD *)int v33 = 67240448;
    *(_DWORD *)&v33[4] = v16;
    *(_WORD *)&_WORD v33[8] = 1026;
    *(_DWORD *)&v33[10] = v13;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiCalc, integrity, multi-AP wifi fix unavailable, %{public}d APs, threshold, %{public}d, fail",  v33,  14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLWifiLocationIntegrityCalculator::shouldBumpLocationIntegrity(const CLDaemonLocation &, const CL::Wif i1::Types::ComputedLocation &, const CLDaemonLocationPrivate &, const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v17);
LABEL_62:
    goto LABEL_74;
  }

  double v29 = (double *)sub_100F4CD5C();
  if (!sub_100988A18(a1, a2, a3, v29[2])) {
    return 0LL;
  }
  double v30 = *((double *)sub_100F4CD5C() + 1);
  return sub_100988A18(a1, a4, a5, v30);
}

void *sub_100989D1C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  uint64_t v4 = "None";
  unsigned int v5 = "Medium";
  if (a1 != 50) {
    unsigned int v5 = "High";
  }
  if (a1) {
    uint64_t v4 = "Low";
  }
  if (a1 <= 49) {
    int v6 = (char *)v4;
  }
  else {
    int v6 = (char *)v5;
  }
  return sub_1010DDBC0(a2, v6);
}

uint64_t sub_100989D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a1;
  unsigned int v10 = *(_DWORD *)(a1 + 84);
  if (v10 <= 0x40) {
    int v11 = 0;
  }
  else {
    int v11 = 25;
  }
  if (v10 <= 0x44) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = 50;
  }
  if (v10 <= 0x4E) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 75LL;
  }
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_1018634F8);
  }
  int v15 = &OBJC_METACLASS___CLPrivacyManager.vtable;
  int v16 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    sub_100989D1C(v13, v53);
    uint64_t v17 = a2;
    uint64_t v47 = a3;
    unsigned int v45 = v13;
    if (SBYTE3(v57) >= 0) {
      uint64_t v18 = v53;
    }
    else {
      uint64_t v18 = *(_BYTE **)v53;
    }
    uint64_t v19 = v9;
    int v20 = *(_DWORD *)(v9 + 84);
    uint64_t v43 = v19;
    sub_1008698F8(v19, &v52);
    uint64_t v21 = a5;
    if ((v52.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v22 = &v52;
    }
    else {
      int v22 = (std::stringbuf::string_type *)v52.__r_.__value_.__r.__words[0];
    }
    sub_1008698F8(v17, &v51);
    int size = (char)v51.__r_.__value_.__s.__size_;
    std::string::size_type v24 = v51.__r_.__value_.__r.__words[0];
    sub_1008698F8(a4, &__p);
    int v25 = &v51;
    if (size < 0) {
      int v25 = (std::stringbuf::string_type *)v24;
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136447235;
    __int16 v63 = v18;
    __int16 v64 = 1026;
    int v65 = v20;
    __int16 v66 = 2081;
    __int16 v67 = v22;
    __int16 v68 = 2081;
    uint64_t v69 = v25;
    __int16 v70 = 2081;
    char v71 = p_p;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, %{public}s, confidence, %{public}d, location, %{private}s, reference multi-AP wifi, %{private }s, reference cell, %{private}s",  buf,  0x30u);
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    int v15 = &OBJC_METACLASS___CLPrivacyManager.vtable;
    a5 = v21;
    a3 = v47;
    a2 = v17;
    uint64_t v9 = v43;
    uint64_t v13 = v45;
    if (SBYTE3(v57) < 0) {
      operator delete(*(void **)v53);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_1018634F8);
    }
    uint64_t v29 = qword_101934858;
    sub_100989D1C(v13, &v52);
    uint64_t v46 = a2;
    uint64_t v48 = a3;
    if ((v52.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      double v30 = &v52;
    }
    else {
      double v30 = (std::stringbuf::string_type *)v52.__r_.__value_.__r.__words[0];
    }
    uint64_t v31 = v9;
    int v32 = *(_DWORD *)(v9 + 84);
    uint64_t v33 = v31;
    sub_1008698F8(v31, &v51);
    uint64_t v44 = a5;
    if ((v51.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      char v34 = &v51;
    }
    else {
      char v34 = (std::stringbuf::string_type *)v51.__r_.__value_.__r.__words[0];
    }
    sub_1008698F8(v46, &__p);
    int v35 = (char)__p.__r_.__value_.__s.__size_;
    std::string::size_type v36 = __p.__r_.__value_.__r.__words[0];
    sub_1008698F8(a4, &v49);
    double v37 = &__p;
    if (v35 < 0) {
      double v37 = (std::stringbuf::string_type *)v36;
    }
    if ((v49.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v38 = &v49;
    }
    else {
      __int16 v38 = (std::stringbuf::string_type *)v49.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)int v53 = 136447235;
    *(void *)&v53[4] = v30;
    __int16 v54 = 1026;
    int v55 = v32;
    __int16 v56 = 2081;
    __int16 v57 = v34;
    __int16 v58 = 2081;
    uint64_t v59 = v37;
    __int16 v60 = 2081;
    __int16 v61 = v38;
    int v39 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v29,  2LL,  "WifiCalc, integrity, %{public}s, confidence, %{public}d, location, %{private}s, reference multi-AP w ifi, %{private}s, reference cell, %{private}s",  v53,  48);
    p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    int v15 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    a5 = v44;
    a2 = v46;
    a3 = v48;
    uint64_t v9 = v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLLocationIntegrity CLWifiLocationIntegrityCalculator::calculateLocationIntegrity(const CLDaemonLocation &, const CL::Wifi1::Types::ComputedLocation &, const CLDaemonLocationPrivate &, const CLDaemonLocation &, const CLDa emonLocationPrivate &)",  "%s\n",  v39);
  }

  if (sub_100989400(v9, a2, a3, a4, a5))
  {
    int v27 = (os_log_s *)v15[267];
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "WifiCalc, integrity, bumping wifi location integrity from Medium to High",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      char v40 = v15[267];
      *(_WORD *)int v53 = 0;
      LODWORD(v42) = 2;
      std::string v41 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v40,  2LL,  "WifiCalc, integrity, bumping wifi location integrity from Medium to High",  v53,  v42);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static CLLocationIntegrity CLWifiLocationIntegrityCalculator::calculateLocationIntegrity(const CLDaemonLocation &, const CL::Wifi1::Types::ComputedLocation &, const CLDaemonLocationPrivate &, const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v41);
    }

    return 75LL;
  }

  return v13;
}

void sub_10098A2CC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, void *a30, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, uint64_t a37, int a38, __int16 a39, char a40, char a41)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void sub_10098A364(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_10098A390()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      int v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)int v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_10098A42C(_Unwind_Exception *a1)
{
}

void sub_10098A444()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      int v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      *int v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_10098A4D0(_Unwind_Exception *a1)
{
}

uint64_t sub_10098A4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a1 + 44) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 25) = 0u;
  int v6 = (CLMotionActivity *)sub_100CD6458(a1 + 48);
  *(_DWORD *)(a1 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
  CLMotionActivity::getInit(v6);
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 48sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 44_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 40sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 32sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(void *)(a1 + 52_Block_object_dispose((const void *)(v1 - 224), 8) = off_101863590;
  *(void *)(a1 + 536) = strdup("PedestrianStepCountBuffer");
  *(void *)(a1 + 544) = 0x7FEFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 56_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(void *)(a1 + 52_Block_object_dispose((const void *)(v1 - 224), 8) = off_1018635F8;
  *(_OWORD *)(a1 + 624) = xmmword_101341E50;
  *(void *)(a1 + 64sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0x403E000000000000LL;
  *(_WORD *)(a1 + 64_Block_object_dispose((const void *)(v1 - 224), 8) = 256;
  *(void *)(a1 + 60sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(_BYTE *)(a1 + 60_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  *(void *)(a1 + 616) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)(a1 + 656) = a2;
  *(void *)(a1 + 664) = off_101863548;
  *(void *)(a1 + 672) = strdup("PedestrianActivityBuffer");
  *(void *)(a1 + 68sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0x7FEFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 68_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 704) = 0u;
  *(_OWORD *)(a1 + 72sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(void *)(a1 + 664) = off_101863680;
  *(_WORD *)(a1 + 784) = 256;
  *(void *)(a1 + 736) = 0LL;
  *(_BYTE *)(a1 + 744) = 1;
  *(_OWORD *)(a1 + 752) = xmmword_101341E60;
  *(_OWORD *)(a1 + 76_Block_object_dispose((const void *)(v1 - 224), 8) = xmmword_101338ED0;
  *(_DWORD *)(a1 + 792) = 0;
  sub_100C6F344(a1 + 800, a2, a3);
  *(void *)(a1 + 1992) = 0xFFEFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 200sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = xmmword_101341E70;
  *(void *)(a1 + 2016) = 0x300000000LL;
  *(_OWORD *)(a1 + 2024) = xmmword_101341EC0;
  *(_OWORD *)(a1 + 204sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = unk_101341ED0;
  *(_OWORD *)(a1 + 2056) = xmmword_101341EE0;
  *(_OWORD *)(a1 + 206_Block_object_dispose((const void *)(v1 - 224), 8) = *(__int128 *)((char *)&xmmword_101341EE0 + 12);
  *(_OWORD *)(a1 + 208_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(void *)(a1 + 2112) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 2136) = 0u;
  *(void *)(a1 + 212sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(_DWORD *)(a1 + 2127) = 0;
  uint64_t v7 = sub_1006E27E8();
  sub_100413284(v7, &v18);
  std::string::size_type v8 = (unsigned __int8 *)(a1 + 2129);
  if (sub_1002A6F64(v18, "MotionLoggerLogPedometer", (BOOL *)(a1 + 2129)))
  {
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863518);
    }
    uint64_t v9 = (os_log_s *)qword_101934518;
    if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_INFO))
    {
      int v10 = *v8;
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      int v25 = "MotionLoggerLogPedometer";
      __int16 v26 = 1024;
      int v27 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "MSL Logging: %s: %d", buf, 0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101863518);
      }
      int v15 = *v8;
      int v20 = 136315394;
      uint64_t v21 = "MotionLoggerLogPedometer";
      __int16 v22 = 1024;
      int v23 = v15;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  1LL,  "MSL Logging: %s: %d",  (const char *)&v20,  18);
      uint64_t v17 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLStepDistanceFusion::CLStepDistanceFusion(CLNatalieInput<CLOdometerEntry> *, CLRunningFormHealthKitWriter *)",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }
  }

  int v11 = v19;
  if (v19)
  {
    p_shared_owners = (unint64_t *)&v19->__shared_owners_;
    do
      unint64_t v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }

  return a1;
}

void sub_10098A8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10098A93C(uint64_t a1)
{
  *(void *)a1 = off_101863548;
  free(*(void **)(a1 + 8));
  sub_10041385C((void *)(a1 + 24));
  return a1;
}

uint64_t sub_10098A97C(uint64_t a1)
{
  *(void *)a1 = off_101863590;
  free(*(void **)(a1 + 8));
  sub_10046C4E8((void *)(a1 + 24));
  return a1;
}

uint64_t sub_10098A9C0(uint64_t a1)
{
  *(void *)(a1 + sub_10098A93C(v3 + 664) = off_101863548;
  free(*(void **)(a1 + 672));
  sub_10041385C((void *)(a1 + 688));
  *(void *)(a1 + 52_Block_object_dispose((const void *)(v1 - 224), 8) = off_101863590;
  free(*(void **)(a1 + 536));
  sub_10046C4E8((void *)(a1 + 552));
  sub_100210578((void *)(a1 + 480));
  sub_100CD6500(a1 + 48);
  return a1;
}

uint64_t sub_10098AA44@<X0>(int64x2_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_101863518);
  }
  uint64_t v6 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    int v9 = *(_DWORD *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 184);
    uint64_t v14 = *(void *)(a2 + 192);
    int v15 = *(_DWORD *)(a2 + 216);
    uint64_t v16 = *(void *)(a2 + 200);
    uint64_t v17 = *(void *)(a2 + 208);
    uint64_t v18 = *(void *)(a2 + 80);
    uint64_t v19 = *(void *)(a2 + 96);
    uint64_t v20 = *(void *)(a2 + 24);
    int v21 = *(unsigned __int8 *)(a2 + 160);
    *(_DWORD *)std::stringbuf::string_type buf = 134221568;
    uint64_t v75 = v7;
    __int16 v76 = 2048;
    uint64_t v77 = v8;
    __int16 v78 = 1024;
    int v79 = v9;
    __int16 v80 = 2048;
    uint64_t v81 = v10;
    __int16 v82 = 2048;
    uint64_t v83 = v11;
    __int16 v84 = 2048;
    uint64_t v85 = v12;
    __int16 v86 = 2048;
    uint64_t v87 = v13;
    __int16 v88 = 2048;
    uint64_t v89 = v14;
    __int16 v90 = 2048;
    uint64_t v91 = v16;
    __int16 v92 = 1024;
    int v93 = v15;
    __int16 v94 = 2048;
    uint64_t v95 = v17;
    __int16 v96 = 2048;
    uint64_t v97 = v18;
    __int16 v98 = 2048;
    uint64_t v99 = v19;
    __int16 v100 = 2048;
    uint64_t v101 = v20;
    __int16 v102 = 1024;
    int v103 = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "StepCount, %f, %f, %d, %f, %f, %f, %f, %f, %f, %u, %f, %f, %f, %f, %d",  buf,  0x8Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863518);
    }
    uint64_t v25 = *(void *)(a2 + 8);
    uint64_t v24 = *(void *)(a2 + 16);
    int v26 = *(_DWORD *)(a2 + 32);
    uint64_t v27 = *(void *)(a2 + 40);
    uint64_t v28 = *(void *)(a2 + 56);
    uint64_t v29 = *(void *)(a2 + 64);
    uint64_t v30 = *(void *)(a2 + 184);
    uint64_t v31 = *(void *)(a2 + 192);
    int v32 = *(_DWORD *)(a2 + 216);
    uint64_t v34 = *(void *)(a2 + 200);
    uint64_t v33 = *(void *)(a2 + 208);
    uint64_t v35 = *(void *)(a2 + 80);
    uint64_t v36 = *(void *)(a2 + 96);
    uint64_t v37 = *(void *)(a2 + 24);
    int v38 = *(unsigned __int8 *)(a2 + 160);
    int v44 = 134221568;
    uint64_t v45 = v24;
    __int16 v46 = 2048;
    uint64_t v47 = v25;
    __int16 v48 = 1024;
    int v49 = v26;
    __int16 v50 = 2048;
    uint64_t v51 = v27;
    __int16 v52 = 2048;
    uint64_t v53 = v28;
    __int16 v54 = 2048;
    uint64_t v55 = v29;
    __int16 v56 = 2048;
    uint64_t v57 = v30;
    __int16 v58 = 2048;
    uint64_t v59 = v31;
    __int16 v60 = 2048;
    uint64_t v61 = v34;
    __int16 v62 = 1024;
    int v63 = v32;
    __int16 v64 = 2048;
    uint64_t v65 = v33;
    __int16 v66 = 2048;
    uint64_t v67 = v35;
    __int16 v68 = 2048;
    uint64_t v69 = v36;
    __int16 v70 = 2048;
    uint64_t v71 = v37;
    __int16 v72 = 1024;
    int v73 = v38;
    LODWORD(v41) = 140;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "StepCount, %f, %f, %d, %f, %f, %f, %f, %f, %f, %u, %f, %f, %f, %f, %d",  COERCE_DOUBLE(&v44),  v41,  v42,  v43);
    char v40 = (uint8_t *)v39;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::vector<CLStepDistanceFusionResult> CLStepDistanceFusion::feedStepCountEntry(const CLExtendedStepCountEntry &)",  "%s\n",  v39);
    if (v40 != buf) {
      free(v40);
    }
  }

  uint64_t result = sub_10098AE00(a1, (double *)a2);
  *(void *)a3 = 0LL;
  *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a3 + 16) = 0LL;
  while (a1[32].i64[1])
  {
    uint64_t result = a1[29].i64[1] == 1
    if (!(_DWORD)result) {
      break;
    }
    a1[32] = vaddq_s64(a1[32], (int64x2_t)xmmword_1012CE4D0);
    uint64_t result = sub_1002109A4((uint64_t)a1[30].i64, 1);
  }

  return result;
}

void sub_10098ADDC(_Unwind_Exception *exception_object)
{
}

BOOL sub_10098AE00(void *a1, double *a2)
{
  uint64_t v4 = (uint64_t)(a1 + 66);
  sub_1004781EC(a1 + 69, a2);
  double v6 = a2[2];
  sub_100355FA8(a1 + 60, &v6);
  (*(void (**)(void, double))(*(void *)a1[82] + 40LL))(a1[82], v6);
  sub_1009918B8(v4, v6);
  sub_100991C04((uint64_t)(a1 + 83), v6);
  BOOL result = sub_10098E808((uint64_t)a1);
  if (result) {
    return sub_100253308(a1[82]);
  }
  return result;
}

uint64_t sub_10098AE90(uint64_t a1, void **a2, double a3)
{
  __int128 v77 = 0u;
  __int128 v78 = 0u;
  __int128 v75 = 0u;
  __int128 v76 = 0u;
  double v6 = (void *)(a1 + 528);
  if (!sub_10098E6D0(a1 + 528, (uint64_t)&v77, &v75, a3))
  {
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863518);
    }
    uint64_t v29 = (os_log_s *)qword_101934518;
    if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "#Warning Inconsistency found between steps and clock. Ignoring.",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101863518);
      }
      LOWORD(v82) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  0LL,  "#Warning Inconsistency found between steps and clock. Ignoring.",  &v82,  2);
      uint64_t v31 = (uint8_t *)v30;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLStepDistanceFusion::extendedMode(const double, std::vector<CLStepDistanceFusionResult> &)",  "%s\n",  v30);
      if (v31 != buf) {
        free(v31);
      }
    }

    return 1LL;
  }

  __int128 v73 = v77;
  __int128 v74 = v78;
  uint64_t v8 = (double *)*((void *)&v78 + 1);
  uint64_t v7 = v78;
  int v9 = *(double **)v78;
  if (*((void *)&v78 + 1) == *(void *)v78)
  {
    uint64_t v7 = v74 - 8;
    int v9 = *(double **)(v74 - 8);
    uint64_t v8 = v9 + 640;
  }

  uint64_t v10 = v8 - 40;
  double v11 = *v10;
  if (v10 == *((double **)&v76 + 1))
  {
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863518);
    }
    int v32 = (os_log_s *)qword_101934518;
    if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134283521;
      *(double *)uint64_t v85 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_INFO,  "ExtendedMode, pushing Pedometer, %{private}.3f, unable to find Pedometer before current Pedometer",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101863518);
      }
      int v82 = 134283521;
      double v83 = v11;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  1LL,  "ExtendedMode, pushing Pedometer, %{private}.3f, unable to find Pedometer before current Pedometer",  &v82,  12);
      uint64_t v51 = (uint8_t *)v50;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLStepDistanceFusion::extendedMode(const double, std::vector<CLStepDistanceFusionResult> &)",  "%s\n",  v50);
      if (v51 != buf) {
        free(v51);
      }
    }

    sub_1009905C0(a1, a2, (uint64_t)&v73, 0, 1.0, 0.0);
    return 1LL;
  }

  if (v10 == v9) {
    uint64_t v10 = (double *)(*(void *)(v7 - 8) + 5120LL);
  }
  double v12 = *(v10 - 40);
  if (sub_100990C8C(*(void **)(a1 + 656), v71, v11))
  {
    double v13 = *(double *)v71;
    if (sub_100990E20(*(void **)(a1 + 656), &v67, *(double *)v71))
    {
      double v14 = *(double *)&v67;
      if (sub_100990F84(v6, &v82, v13))
      {
        if (sub_1009910B0(v6, &v80, v14))
        {
          double v66 = 0.0;
          if (!sub_1009911AC(a1, &v66, v13, v14))
          {
            if (qword_101934510 != -1) {
              dispatch_once(&qword_101934510, &stru_101863518);
            }
            uint64_t v47 = (os_log_s *)qword_101934518;
            if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 134283521;
              *(double *)uint64_t v85 = v11;
              _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_INFO,  "ExtendedMode, pushing Pedometer, %{private}.3f, Pedometer distance failure",  buf,  0xCu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934510 != -1) {
                dispatch_once(&qword_101934510, &stru_101863518);
              }
              *(_DWORD *)int v79 = 134283521;
              *(double *)&v79[4] = v11;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  1LL,  "ExtendedMode, pushing Pedometer, %{private}.3f, Pedometer distance failure",  v79,  12);
              uint64_t v59 = (uint8_t *)v58;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLStepDistanceFusion::extendedMode(const double, std::vector<CLStepDistanceFusionResult> &)",  "%s\n",  v58);
              if (v59 != buf) {
                free(v59);
              }
            }

            sub_1009905C0(a1, a2, (uint64_t)&v73, 0, 1.0, 0.0);
            return 1LL;
          }

          double v65 = 0.0;
          if (v13 > v12 && !sub_1009911AC(a1, &v65, v12, v13))
          {
            if (qword_101934510 != -1) {
              dispatch_once(&qword_101934510, &stru_101863518);
            }
            __int16 v48 = (os_log_s *)qword_101934518;
            if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 134283521;
              *(double *)uint64_t v85 = v11;
              _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_INFO,  "ExtendedMode, pushing Pedometer, %{private}.3f, Pedometer distance before Odometer failure",  buf,  0xCu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934510 != -1) {
                dispatch_once(&qword_101934510, &stru_101863518);
              }
              *(_DWORD *)int v79 = 134283521;
              *(double *)&v79[4] = v11;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  1LL,  "ExtendedMode, pushing Pedometer, %{private}.3f, Pedometer distance before Odometer failure",  v79,  12);
              uint64_t v61 = (uint8_t *)v60;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLStepDistanceFusion::extendedMode(const double, std::vector<CLStepDistanceFusionResult> &)",  "%s\n",  v60);
              if (v61 != buf) {
                free(v61);
              }
            }

            sub_1009905C0(a1, a2, (uint64_t)&v73, 0, 1.0, 0.0);
            return 1LL;
          }

          double v64 = 0.0;
          if (v14 >= a3 || sub_1009911AC(a1, &v64, v14, a3))
          {
            if (v11 >= *(double *)a1 && v11 <= *(double *)(a1 + 8))
            {
              int v23 = *(unsigned __int8 *)(a1 + 40);
            }

            else
            {
              double v15 = v66;
              BOOL v16 = v14 - v13 > 0.5;
              double v17 = v68;
              double v18 = v69 - v72;
              if (v69 - v72 <= 0.0) {
                BOOL v16 = 0;
              }
              if (v68 / v18 >= 0.25) {
                BOOL v16 = 0;
              }
              double v19 = v18 / v66;
              if (v66 <= 0.0) {
                double v19 = -1.0;
              }
              BOOL v20 = v19 < 2.0;
              if (v19 <= 0.5) {
                BOOL v20 = 0;
              }
              int v21 = v70;
              int v22 = v16 && v20;
              if (v66 > 0.0) {
                int v23 = v22;
              }
              else {
                int v23 = 0;
              }
              if (qword_101934510 != -1) {
                dispatch_once(&qword_101934510, &stru_101863518);
              }
              uint64_t v24 = (os_log_s *)qword_101934518;
              if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)std::stringbuf::string_type buf = 68290819;
                *(_WORD *)&v85[4] = 2082;
                *(_DWORD *)uint64_t v85 = 0;
                *(void *)&v85[6] = "";
                *(_WORD *)&v85[14] = 2049;
                *(double *)&v85[16] = v13;
                *(_WORD *)&v85[24] = 2049;
                *(double *)&v85[26] = v14;
                *(_WORD *)&v85[34] = 2049;
                double v86 = v15;
                *(_WORD *)uint64_t v87 = 2049;
                *(double *)&v87[2] = v18;
                __int16 v88 = 2049;
                double v89 = v17;
                __int16 v90 = 1025;
                int v91 = v23;
                __int16 v92 = 1025;
                int v93 = v21;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:ExtendedMode, Segment, timeStart:%{private}.3f, timeStop:%{priv ate}.3f, distPed:%{private}.3f, distOdom:%{private}.3f, uncOdom:%{private}.3f , isValid:%{private}hhd, batchedLocationFixType:%{private}d}",  buf,  0x50u);
              }

              if (*(_BYTE *)(a1 + 2129))
              {
                sub_10119383C((uint64_t)buf);
                *(double *)&v85[20] = v13;
                *(double *)&v85[28] = v14;
                *(double *)&v85[12] = v15;
                *(double *)&v85[4] = v18;
                double v86 = v17;
                v87[4] = v23;
                v87[8] |= 0x7Fu;
                *(_DWORD *)uint64_t v87 = v21;
                if (qword_1019A1D00 != -1) {
                  dispatch_once(&qword_1019A1D00, &stru_1018635C8);
                }
                uint64_t v25 = qword_1019A1D08;
                if (qword_1019A1D08)
                {
                  int v26 = operator new(0x40uLL);
                  *(void *)int v79 = sub_101193944((uint64_t)v26, (uint64_t)buf);
                  double Current = CFAbsoluteTimeGetCurrent();
                  sub_100B50C78(v25, (uint64_t *)v79, Current);
                  uint64_t v28 = *(void *)v79;
                  *(void *)int v79 = 0LL;
                  if (v28) {
                    (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
                  }
                }

                PB::Base::~Base((PB::Base *)buf);
              }

              *(double *)a1 = v13;
              *(double *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v14;
              *(double *)(a1 + 16) = v15;
              *(double *)(a1 + 24) = v18;
              *(double *)(a1 + 32) = v17;
              *(_BYTE *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v23;
              *(_DWORD *)(a1 + 44) = v21;
            }

            if (v23)
            {
              sub_1009905C0(a1, a2, (uint64_t)&v73, 1, *(double *)(a1 + 24) / *(double *)(a1 + 16), v65 + v64);
              return 1LL;
            }
          }

          else
          {
            if (qword_101934510 != -1) {
              dispatch_once(&qword_101934510, &stru_101863518);
            }
            int v49 = (os_log_s *)qword_101934518;
            if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 134283521;
              *(double *)uint64_t v85 = v11;
              _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_INFO,  "ExtendedMode, pushing Pedometer, %{private}.3f, Pedometer distance after Odometer failure",  buf,  0xCu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934510 != -1) {
                dispatch_once(&qword_101934510, &stru_101863518);
              }
              *(_DWORD *)int v79 = 134283521;
              *(double *)&v79[4] = v11;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  1LL,  "ExtendedMode, pushing Pedometer, %{private}.3f, Pedometer distance after Odometer failure",  v79,  12);
              int v63 = (uint8_t *)v62;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLStepDistanceFusion::extendedMode(const double, std::vector<CLStepDistanceFusionResult> &)",  "%s\n",  v62);
              if (v63 != buf) {
                free(v63);
              }
            }
          }

          sub_1009905C0(a1, a2, (uint64_t)&v73, 0, 1.0, 0.0);
          return 1LL;
        }

        unint64_t v44 = *(void *)(a1 + 520) + *(void *)(a1 + 512) - 1LL;
        BOOL v33 = v45 > 150.0;
        if (v45 <= 150.0) {
          return v33;
        }
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101863518);
        }
        __int16 v46 = (os_log_s *)qword_101934518;
        if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 134283521;
          *(double *)uint64_t v85 = v11;
          _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_INFO,  "ExtendedMode, pushing Pedometer, %{private}.3f, unable to find first Pedometer after first Odometer after pr evious Pedometer",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934510 != -1) {
            dispatch_once(&qword_101934510, &stru_101863518);
          }
          *(_DWORD *)int v79 = 134283521;
          *(double *)&v79[4] = v11;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  1LL,  "ExtendedMode, pushing Pedometer, %{private}.3f, unable to find first Pedometer after first Odometer after pr evious Pedometer",  v79,  12);
          uint64_t v55 = (uint8_t *)v57;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLStepDistanceFusion::extendedMode(const double, std::vector<CLStepDistanceFusionResult> &)",  "%s\n",  v57);
          if (v55 != buf) {
            goto LABEL_127;
          }
        }

void sub_10098C048(_Unwind_Exception *a1)
{
}

uint64_t sub_10098C084(uint64_t a1, const char *a2, double a3)
{
  float v258 = a2;
  __int128 v297 = 0u;
  __int128 v298 = 0u;
  __int128 v295 = 0u;
  __int128 v296 = 0u;
  uint64_t v5 = a1 + 528;
  if (!sub_10098E6D0(a1 + 528, (uint64_t)&v297, &v295, a3))
  {
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863518);
    }
    double v14 = (os_log_s *)qword_101934518;
    if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "#Warning Inconsistency found between steps and clock. Ignoring.",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101863518);
      }
      *(_WORD *)__int128 v313 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  0LL,  "#Warning Inconsistency found between steps and clock. Ignoring.",  v313,  2);
      BOOL v16 = (char *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLStepDistanceFusion::normalMode(const double, std::vector<CLStepDistanceFusionResult> &)",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }

    return 1LL;
  }

  uint64_t v6 = *((void *)&v298 + 1);
  uint64_t v7 = v298;
  uint64_t v8 = *(void *)v298;
  uint64_t v9 = *((void *)&v298 + 1);
  if (*((void *)&v298 + 1) == *(void *)v298) {
    uint64_t v9 = *(void *)(v298 - 8) + 5120LL;
  }
  if (*(_BYTE *)(v9 - 72))
  {
    sub_100C6F334(a1 + 800);
    uint64_t v6 = *((void *)&v298 + 1);
    uint64_t v7 = v298;
    uint64_t v8 = *(void *)v298;
  }

  if (v6 == v8)
  {
    uint64_t v17 = *(void *)(v7 - 8);
    uint64_t v10 = (double *)(v17 + 4840);
    double v11 = (double *)(v17 + 4856);
    double v12 = (double *)(v17 + 4880);
    double v13 = (unsigned __int8 *)(v17 + 4974);
    uint64_t v6 = v17 + 5120;
  }

  else
  {
    uint64_t v10 = (double *)(v6 - 280);
    double v11 = (double *)(v6 - 264);
    double v12 = (double *)(v6 - 240);
    double v13 = (unsigned __int8 *)(v6 - 146);
  }

  double v18 = *v12;
  double v19 = *v10;
  double v20 = *v11;
  HIDWORD(v257) = *v13;
  if (sub_100940348(v6 - 312)) {
    int v21 = 1;
  }
  else {
    int v21 = sub_100940388(a1 + 160);
  }
  double v294 = 0.0;
  double v293 = 0.0;
  double v292 = 0.0;
  __int16 v291 = 0;
  int v290 = 0;
  if (!sub_10098E808(a1))
  {
    sub_1004F2598();
    uint64_t v28 = sub_1001B9A1C();
    double v255 = 0.0;
    if ((v28 & 1) != 0
      || (v289[0] = v297,
          v289[1] = v298,
          v288[0] = v295,
          v288[1] = v296,
          !sub_10098E850(v28, (uint64_t)v289, (uint64_t)v288)))
    {
      int v29 = 0;
      float v256 = 0LL;
      uint64_t v30 = 0LL;
      int v24 = 0;
      goto LABEL_57;
    }
  }

  uint64_t result = (*(uint64_t (**)(void, double))(**(void **)(a1 + 656) + 48LL))(*(void *)(a1 + 656), a3);
  if (!(_DWORD)result) {
    return result;
  }
  BOOL v23 = v18 < 0.447387993 && v18 > 0.0;
  HIDWORD(v256) = sub_10098E954(a1, 1);
  LODWORD(v256) = sub_10098E954(a1, 0);
  if (v23) {
    int v24 = HIDWORD(v256);
  }
  else {
    int v24 = (int)v256;
  }
  uint64_t v25 = *((void *)&v298 + 1);
  if (*((void *)&v298 + 1) == *(void *)v298)
  {
    uint64_t v31 = *(double **)(v298 - 8);
    double v26 = v31[639];
    if ((v21 & 1) != 0)
    {
      double v27 = v31[602] + -10.24;
      if (v26 > v27) {
        double v27 = v26;
      }
      uint64_t v25 = *(void *)(v298 - 8) + 5120LL;
      goto LABEL_44;
    }

    int v32 = v31 + 629;
  }

  else
  {
    double v26 = *(double *)(*((void *)&v298 + 1) - 8LL);
    if ((v21 & 1) != 0)
    {
      double v27 = *(double *)(*((void *)&v298 + 1) - 304LL) + -10.24;
      if (v26 > v27) {
        double v27 = v26;
      }
LABEL_44:
      int v32 = (double *)(v25 - 304);
      double v26 = v27;
      goto LABEL_47;
    }

    int v32 = (double *)(*((void *)&v298 + 1) - 88LL);
  }

void sub_10098E630(_Unwind_Exception *a1)
{
  if (SLOBYTE(STACK[0x657]) < 0) {
    operator delete((void *)STACK[0x640]);
  }
  (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  sub_10114E32C((PB::Base *)&STACK[0x3C0]);
  _Unwind_Resume(a1);
}

BOOL sub_10098E6D0(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (void *)(v4 + 8LL * (*(void *)(a1 + 56) >> 4));
  if (*(void *)(a1 + 40) == v4) {
    uint64_t v6 = 0LL;
  }
  else {
    uint64_t v6 = *v5 + 320 * (*(void *)(a1 + 56) & 0xFLL);
  }
  *a3 = v5;
  a3[1] = v6;
  a3[2] = v5;
  a3[3] = v6;
  __int128 v7 = *((_OWORD *)a3 + 1);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_OWORD *)(a2 + 16) = v7;
  unint64_t v8 = *(void *)(a1 + 56) + *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = (uint64_t *)(v9 + 8 * (v8 >> 4));
  if (*(void *)(a1 + 40) == v9) {
    uint64_t v11 = 0LL;
  }
  else {
    uint64_t v11 = *v10 + 320 * (v8 & 0xF);
  }
  uint64_t v12 = a3[3];
  if (v11 != v12)
  {
    uint64_t v13 = *v10;
    double v14 = 1.79769313e308;
    uint64_t v15 = v11;
    BOOL v16 = v10;
    while (1)
    {
      uint64_t v17 = v15;
      if (v15 == v13) {
        uint64_t v17 = *(v16 - 1) + 5120;
      }
      double v18 = vabdd_f64(*(double *)(v17 - 320), a4);
      if (v18 < v14 && v18 < *(double *)(a1 + 16))
      {
        *(void *)a2 = v10;
        *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = v11;
        *(void *)(a2 + 16) = v16;
        *(void *)(a2 + 24) = v15;
        uint64_t v13 = *v16;
        uint64_t v19 = v15;
        if (v15 == *v16) {
          uint64_t v19 = *(v16 - 1) + 5120;
        }
        double v14 = v18;
      }

      if (v15 == v13)
      {
        uint64_t v20 = *--v16;
        uint64_t v13 = v20;
        uint64_t v15 = v20 + 5120;
      }

      v15 -= 320LL;
      uint64_t v12 = a3[3];
      if (v15 == v12) {
        return v12 != *(void *)(a2 + 24);
      }
    }

    uint64_t v12 = a3[3];
  }

  return v12 != *(void *)(a2 + 24);
}

BOOL sub_10098E808(uint64_t a1)
{
  uint64_t v1 = a1 + 160;
  return (sub_10094036C((_DWORD *)(a1 + 160)) & 1) != 0 || (sub_100940388(v1) & 1) != 0 || sub_1009403E0(v1);
}

BOOL sub_10098E850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v3 = (__int128 *)(a2 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  if (v5 == v6) {
    int v7 = 0;
  }
  else {
    int v7 = -858993459 * ((unint64_t)(v5 - *v4) >> 6)
  }
       + 2 * ((_DWORD)v4 - *(void *)(a3 + 16))
       + 858993459 * ((unint64_t)(v6 - **(void **)(a3 + 16)) >> 6);
  if (v7 >= 5) {
    int v7 = 5;
  }
  __int128 v16 = *v3;
  sub_10079B620((uint64_t **)&v16, -(uint64_t)v7);
  if (v5 == *((void *)&v16 + 1)) {
    return 0LL;
  }
  int v8 = 0;
  uint64_t v9 = *v4;
  do
  {
    uint64_t v10 = v5;
    if (v5 == v9) {
      uint64_t v10 = *(v4 - 1) + 5120;
    }
    int v11 = *(_DWORD *)(v10 - 104);
    int v12 = *(_BYTE *)(v10 - 160) & 0xFD;
    if (v11) {
      BOOL v13 = 1;
    }
    else {
      BOOL v13 = v12 == 1;
    }
    if (v13) {
      ++v8;
    }
    if (v5 == v9)
    {
      uint64_t v14 = *--v4;
      uint64_t v9 = v14;
      uint64_t v5 = v14 + 5120;
    }

    v5 -= 320LL;
  }

  while (v5 != *((void *)&v16 + 1));
  return v8 > 2;
}

BOOL sub_10098E954(uint64_t a1, int a2)
{
  __int128 v132 = 0u;
  __int128 v133 = 0u;
  __int128 v130 = 0u;
  __int128 v131 = 0u;
  if (!(*(unsigned int (**)(void, __int128 *, __int128 *))(**(void **)(a1 + 656) + 16LL))( *(void *)(a1 + 656),  &v132,  &v130)) {
    return 0LL;
  }
  std::stringbuf::string_type __p = 0LL;
  uint64_t v128 = 0LL;
  uint64_t v129 = 0LL;
  uint64_t v124 = 0LL;
  int v125 = 0LL;
  __int16 v126 = 0LL;
  uint64_t v4 = *((void *)&v133 + 1);
  if (*((void *)&v133 + 1) == *((void *)&v131 + 1)) {
    goto LABEL_78;
  }
  HIDWORD(v119) = a2;
  uint64_t v5 = 0LL;
  uint64_t v6 = (uint64_t *)v133;
  uint64_t v7 = *(void *)v133;
  double v8 = 0.0;
  while (v4 != v7)
  {
    double v9 = *(double *)(v4 - 192);
    if (v8 - v9 >= 5.0 || (uint64_t v10 = v4, v9 <= *(double *)(a1 + 1992)))
    {
      uint64_t v13 = v4;
      goto LABEL_54;
    }

void sub_10098F2E8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  if (a18) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_10098F32C(uint64_t a1, double *a2, double a3, double a4)
{
  double v12 = 0.0;
  double v13 = 0.0;
  *a2 = 0.0;
  if (a3 <= a4)
  {
    if (a3 != a4)
    {
      BOOL result = sub_1009923EC(a1, &v13, a3);
      if (!result) {
        return result;
      }
      BOOL result = sub_1009923EC(a1, &v12, a4);
      if (!result) {
        return result;
      }
      *a2 = v12 - v13;
    }

    return 1LL;
  }

  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_101863518);
  }
  uint64_t v6 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134349312;
    double v19 = a3;
    __int16 v20 = 2050;
    double v21 = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning Time rolled back! t1,%{public}f,t2,%{public}f",  buf,  0x16u);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863518);
    }
    int v14 = 134349312;
    double v15 = a3;
    __int16 v16 = 2050;
    double v17 = a4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  0LL,  "#Warning Time rolled back! t1,%{public}f,t2,%{public}f",  &v14,  22);
    double v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLStepDistanceFusion::getOdometerDistance(CFAbsoluteTime, CFAbsoluteTime, double &) const",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
    return 0LL;
  }

  return result;
}

uint64_t sub_10098F54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v3 = (__int128 *)(a2 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  if (v5 == v6)
  {
    int64_t v7 = 0LL;
  }

  else
  {
    int64_t v7 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - *v4) >> 6)
       + 2LL * ((void)v4 - *(void *)(a3 + 16))
       + 0x3333333333333333LL * ((v6 - **(void **)(a3 + 16)) >> 6);
    if (v7 > 3) {
      int64_t v7 = 4LL;
    }
  }

  __int128 v14 = *v3;
  sub_10079B620((uint64_t **)&v14, -v7);
  if (v5 == *((void *)&v14 + 1)) {
    return 1LL;
  }
  uint64_t v8 = *v4;
  while (v5 != v8)
  {
    if (*(_DWORD *)(v5 - 104)) {
      BOOL v9 = 1;
    }
    else {
      BOOL v9 = (*(_BYTE *)(v5 - 160) & 0xFD) == 1;
    }
    if (v9) {
      return 0LL;
    }
LABEL_19:
    v5 -= 320LL;
    if (v5 == *((void *)&v14 + 1)) {
      return 1LL;
    }
  }

  uint64_t v10 = *--v4;
  uint64_t v8 = v10;
  int v11 = *(_BYTE *)(v10 + 4960) & 0xFD;
  if (*(_DWORD *)(v10 + 5016)) {
    BOOL v12 = 1;
  }
  else {
    BOOL v12 = v11 == 1;
  }
  if (!v12)
  {
    uint64_t v5 = v8 + 5120;
    goto LABEL_19;
  }

  return 0LL;
}

uint64_t sub_10098F650(uint64_t a1, char a2, char a3, double *a4, double *a5, double a6)
{
  __int128 v90 = 0u;
  __int128 v91 = 0u;
  __int128 v88 = 0u;
  __int128 v89 = 0u;
  BOOL v12 = (void *)(a1 + 528);
  if (sub_10098E6D0(a1 + 528, (uint64_t)&v90, &v88, a6))
  {
    *(_OWORD *)std::stringbuf::string_type buf = 0u;
    __int128 v95 = 0u;
    __int128 v92 = 0u;
    __int128 v93 = 0u;
    uint64_t result = (*(uint64_t (**)(void, uint8_t *, __int128 *, double))(**(void **)(a1 + 656) + 16LL))( *(void *)(a1 + 656),  buf,  &v92,  a6);
    if (!(_DWORD)result) {
      return result;
    }
    uint64_t v14 = *((void *)&v95 + 1);
    double v15 = (void *)v95;
    uint64_t v16 = *((void *)&v93 + 1);
    if (*((void *)&v95 + 1) != *((void *)&v93 + 1))
    {
      char v82 = a3;
      __int128 v81 = a4;
      __int128 v83 = a5;
      uint64_t v17 = *(void *)v95;
      uint64_t v18 = *((void *)&v95 + 1);
      double v19 = (void *)v95;
      while (1)
      {
        uint64_t v20 = v18;
        if (v18 == v17) {
          uint64_t v20 = *(v19 - 1) + 4032LL;
        }
        int v21 = *(_DWORD *)(v20 - 112);
        if ((a2 & 1) != 0 || sub_100940388(a1 + 160))
        {
        }

        else if (v21 != 1)
        {
          break;
        }

        uint64_t v22 = v14;
        if (v14 == *v15) {
          uint64_t v22 = *(v15 - 1) + 4032LL;
        }
        double v23 = *(double *)(v20 - 128);
        else {
          double v25 = v24 - v23;
        }
        uint64_t v17 = *v19;
        if (v18 == *v19)
        {
          uint64_t v26 = *--v19;
          uint64_t v17 = v26;
          uint64_t v18 = v26 + 4032;
        }

        v18 -= 192LL;
        if (v18 == v16)
        {
          uint64_t v18 = v16;
          break;
        }
      }

      a4 = v81;
      uint64_t v16 = *((void *)&v93 + 1);
      double v15 = v19;
      uint64_t v14 = v18;
      a5 = v83;
      a3 = v82;
    }

    if (v14 != v16)
    {
      uint64_t v28 = *((void *)&v95 + 1);
      uint64_t v27 = v95;
      uint64_t v29 = *(void *)v95;
      uint64_t v30 = *((void *)&v95 + 1);
      if (*((void *)&v95 + 1) == *(void *)v95) {
        uint64_t v30 = *(void *)(v95 - 8) + 4032LL;
      }
      uint64_t v31 = v14;
      if (v14 == *v15) {
        uint64_t v31 = *(v15 - 1) + 4032LL;
      }
      double v32 = *(double *)(v30 - 128);
      else {
        double v34 = v33 - v32;
      }
      if (fabs(v34) > 15.0)
      {
        if (v14 == *((void *)&v95 + 1))
        {
          double v42 = NAN;
        }

        else
        {
          double v39 = 0.0;
          do
          {
            if (v28 == v29)
            {
              uint64_t v41 = *(void *)(v27 - 8);
              v27 -= 8LL;
              uint64_t v29 = v41;
              uint64_t v40 = (double *)(v41 + 3880);
              uint64_t v28 = v41 + 4032;
            }

            else
            {
              uint64_t v40 = (double *)(v28 - 152);
            }

            double v39 = v39 + *v40;
            v28 -= 192LL;
          }

          while (v28 != v14);
          double v42 = v39
              / (double)(21 * ((uint64_t)(v95 - (void)v15) >> 3)
        }

        v84[0] = v90;
        v84[1] = v91;
        sub_1009926B0(v12, (uint64_t)v84, &v85);
        uint64_t v43 = v87;
        if (v87 == *v86) {
          uint64_t v43 = *(v86 - 1) + 5120LL;
        }
        *(double *)(v43 - 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v42;
        if ((a3 & 1) != 0) {
          return 1LL;
        }
        uint64_t v44 = *((void *)&v91 + 1);
        if (*((void *)&v91 + 1) != *((void *)&v89 + 1))
        {
          int v45 = 0;
          uint64_t v46 = v91;
          uint64_t v47 = *(void *)v91;
          uint64_t v48 = *((void *)&v91 + 1);
          __int128 v49 = (void *)v91;
          while (1)
          {
            uint64_t v50 = v48;
            if (v48 == v47) {
              uint64_t v50 = *(v49 - 1) + 5120LL;
            }
            BOOL v51 = vabdd_f64(*(double *)(v50 - 320), a6) > 120.0 || *(double *)(v50 - 80) == -1.0;
            if (v51 || v45) {
              break;
            }
            if (v48 == v47)
            {
              uint64_t v52 = *--v49;
              uint64_t v47 = v52;
              uint64_t v48 = v52 + 5120;
            }

            int v45 = *(unsigned __int8 *)(v50 - 72);
            v48 -= 320LL;
            if (v48 == *((void *)&v89 + 1))
            {
              uint64_t v48 = *((void *)&v89 + 1);
              break;
            }
          }

          if (v48 != *((void *)&v91 + 1))
          {
            uint64_t v53 = *(void *)v91;
            int64_t v54 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)&v91 + 1) - *(void *)v91) >> 6)
                + 2 * (v91 - (void)v49)
                + 0x3333333333333333LL * ((v48 - *v49) >> 6);
            if (v54 >= 6)
            {
              double v55 = (double)v54;
              double v56 = 0.0;
              uint64_t v57 = *(void *)v91;
              uint64_t v58 = *((void *)&v91 + 1);
              uint64_t v59 = v91;
              do
              {
                if (v58 == v57)
                {
                  uint64_t v61 = *(void *)(v59 - 8);
                  v59 -= 8LL;
                  uint64_t v57 = v61;
                  __int128 v60 = (double *)(v61 + 4880);
                  uint64_t v58 = v61 + 5120;
                }

                else
                {
                  __int128 v60 = (double *)(v58 - 240);
                }

                double v56 = v56 + 1.0 / *v60;
                v58 -= 320LL;
              }

              while (v58 != v48);
              double v62 = 0.0;
              uint64_t v63 = *(void *)v91;
              uint64_t v64 = *((void *)&v91 + 1);
              uint64_t v65 = v91;
              double v66 = v56 / v55;
              do
              {
                if (v64 == v63)
                {
                  uint64_t v67 = *(void *)(v65 - 8);
                  v65 -= 8LL;
                  uint64_t v63 = v67;
                  double v62 = v62 + (1.0 / *(double *)(v67 + 4880) - v66) * (1.0 / *(double *)(v67 + 4880) - v66);
                  uint64_t v64 = v67 + 5120;
                }

                else
                {
                  double v62 = v62 + (1.0 / *(double *)(v64 - 240) - v66) * (1.0 / *(double *)(v64 - 240) - v66);
                }

                v64 -= 320LL;
              }

              while (v64 != v48);
              *a5 = sqrt(v62 / v55);
              double v68 = 0.0;
              uint64_t v69 = v53;
              uint64_t v70 = v44;
              uint64_t v71 = v46;
              do
              {
                if (v70 == v69)
                {
                  uint64_t v73 = *(void *)(v71 - 8);
                  v71 -= 8LL;
                  uint64_t v69 = v73;
                  uint64_t v72 = (double *)(v73 + 5040);
                  uint64_t v70 = v73 + 5120;
                }

                else
                {
                  uint64_t v72 = (double *)(v70 - 80);
                }

                double v68 = v68 + *v72;
                v70 -= 320LL;
              }

              while (v70 != v48);
              double v74 = 0.0;
              uint64_t v75 = v53;
              uint64_t v76 = v44;
              uint64_t v77 = v46;
              double v78 = v68 / v55;
              do
              {
                if (v76 == v75)
                {
                  uint64_t v79 = *(void *)(v77 - 8);
                  v77 -= 8LL;
                  uint64_t v75 = v79;
                  double v74 = v74 + (*(double *)(v79 + 5040) - v78) * (*(double *)(v79 + 5040) - v78);
                  uint64_t v76 = v79 + 5120;
                }

                else
                {
                  double v74 = v74 + (*(double *)(v76 - 80) - v78) * (*(double *)(v76 - 80) - v78);
                }

                v76 -= 320LL;
              }

              while (v76 != v48);
              *a4 = sqrt(v74 / v55);
              if (v44 == v53) {
                uint64_t v44 = *(void *)(v46 - 8) + 5120LL;
              }
              double v80 = fmax(sub_100940328(1.5, 0.15, 3.5, 0.35, *(double *)(v44 - 80)), 0.15);
              if (v80 > 0.35) {
                double v80 = 0.35;
              }
              return *a4 < *a5 + v80;
            }
          }
        }
      }
    }

    return 0LL;
  }

  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_101863518);
  }
  __int128 v35 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    *(double *)&uint8_t buf[4] = a6;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_FAULT,  "StepCountBuffer lookup time not successful,%0.3f",  buf,  0xCu);
  }

  BOOL v36 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v36)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863518);
    }
    LODWORD(v92) = 134217984;
    *(double *)((char *)&v92 + 4) = a6;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  17LL,  "StepCountBuffer lookup time not successful,%0.3f",  COERCE_DOUBLE(&v92));
    unint64_t v38 = (uint8_t *)v37;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLStepDistanceFusion::shouldUseOdometerPace(CFAbsoluteTime, BOOL, BOOL, double &, double &)",  "%s\n",  v37);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_10098FD90(uint64_t a1, double a2, double a3, double a4)
{
  double v4 = a3 / a2;
  BOOL v11 = a2 == 0.0;
  double v5 = 0.0;
  if (!v11) {
    double v5 = v4;
  }
  int v6 = *(_DWORD *)(a1 + 2016);
  switch(v6)
  {
    case 2:
      if (v5 < 2.5)
      {
        *(_DWORD *)(a1 + 202sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 3;
        goto LABEL_25;
      }

      if (a4 == 0.0)
      {
        if (qword_101934510 != -1) {
          goto LABEL_43;
        }
        while (1)
        {
          uint64_t v14 = (os_log_s *)qword_101934518;
          if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_FAULT))
          {
            *(_WORD *)std::stringbuf::string_type buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "How can we generate pedometer distance with no time at all?",  buf,  2u);
          }

          if (sub_1002921D0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934510 != -1) {
              dispatch_once(&qword_101934510, &stru_101863518);
            }
            v21[0] = 0;
            LODWORD(v2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 2;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  17LL,  "How can we generate pedometer distance with no time at all?",  v21,  v20);
            double v19 = (uint8_t *)v18;
            sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLStepDistanceFusion::updateVehicularStateMachine(double, double, double)",  "%s\n",  v18);
            if (v19 != buf) {
              free(v19);
            }
          }

          if (qword_101934510 != -1) {
            dispatch_once(&qword_101934510, &stru_101863518);
          }
          double v15 = (os_log_s *)qword_101934518;
          if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 68289539;
            int v23 = 0;
            __int16 v24 = 2082;
            double v25 = "";
            __int16 v26 = 2082;
            uint64_t v27 = "assert";
            __int16 v28 = 2081;
            uint64_t v29 = "false";
            _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Assertion failed, event:%{public, location:escape_only}s, condition:%{pri vate, location:escape_only}s}",  buf,  0x26u);
            if (qword_101934510 != -1) {
              dispatch_once(&qword_101934510, &stru_101863518);
            }
          }

          uint64_t v16 = (os_log_s *)qword_101934518;
          if (os_signpost_enabled((os_log_t)qword_101934518))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 68289539;
            int v23 = 0;
            __int16 v24 = 2082;
            double v25 = "";
            __int16 v26 = 2082;
            uint64_t v27 = "assert";
            __int16 v28 = 2081;
            uint64_t v29 = "false";
            _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v16,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Assertion failed",  "{msg%{public}.0s:Assertion failed, event:%{public, location:escape_only}s, condition:%{pri vate, location:escape_only}s}",  buf,  0x26u);
            if (qword_101934510 != -1) {
              dispatch_once(&qword_101934510, &stru_101863518);
            }
          }

          uint64_t v17 = (os_log_s *)qword_101934518;
          if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)std::stringbuf::string_type buf = 68289539;
            int v23 = 0;
            __int16 v24 = 2082;
            double v25 = "";
            __int16 v26 = 2082;
            uint64_t v27 = "assert";
            __int16 v28 = 2081;
            uint64_t v29 = "false";
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Assertion failed, event:%{public, location:escape_only}s, condition:%{pri vate, location:escape_only}s}",  buf,  0x26u);
          }

          abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Shared/StepCount/CLStepDistanceFusion.mm",  1174,  "updateVehicularStateMachine");
LABEL_43:
          dispatch_once(&qword_101934510, &stru_101863518);
        }
      }

      int v9 = *(_DWORD *)(a1 + 2020) - 1;
      *(_DWORD *)(a1 + 202sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v9;
      BOOL v11 = a3 / a4 > 13.0 || v5 > 6.0 || v9 == 0;
      if (!v11) {
        goto LABEL_25;
      }
      *(void *)(a1 + 2016) = 0x800000001LL;
LABEL_24:
      int v6 = 1;
      return v6 == 1;
    case 1:
      if (v5 >= 2.5)
      {
        *(_DWORD *)(a1 + 202sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 8;
      }

      else
      {
        int v8 = *(_DWORD *)(a1 + 2020) - 1;
        *(_DWORD *)(a1 + 202sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v8;
        if (!v8)
        {
          *(void *)(a1 + 2016) = 0x300000002LL;
LABEL_25:
          int v6 = 2;
          return v6 == 1;
        }
      }

      goto LABEL_24;
    case 0:
      int v7 = *(_DWORD *)(a1 + 2020) - 1;
      *(_DWORD *)(a1 + 202sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v7;
      if (v7)
      {
        int v6 = 0;
      }

      else
      {
        int8x8_t v12 = vbsl_s8( (int8x8_t)vcltz_s32(vshl_n_s32(vdup_n_s32(v5 < 2.5), 0x1FuLL)),  (int8x8_t)0x300000002LL,  (int8x8_t)0x800000001LL);
        *(int8x8_t *)(a1 + 2016) = v12;
        int v6 = v12.i32[0];
      }

      break;
  }

  return v6 == 1;
}

BOOL sub_100990258(uint64_t a1, uint64_t a2)
{
  if (!(*(unsigned int (**)(void, uint64_t *, double))(**(void **)(a1 + 656) + 24LL))( *(void *)(a1 + 656),  &v5,  *(double *)a2)) {
    return 0LL;
  }
  return v6 > 6.7056 && *(_BYTE *)(a2 + 160) != 0 || v6 > 13.4112;
}

uint64_t sub_1009902D4(uint64_t a1)
{
  if (sub_10098E808(a1)) {
    return 1LL;
  }
  if (*(_DWORD *)(a1 + 160) == 1) {
    return CLMotionActivity::isTypeIndoorPedestrian(*(unsigned int *)(a1 + 168));
  }
  return 0LL;
}

uint64_t sub_100990320(uint64_t a1, int a2)
{
  if (a2) {
    return 0LL;
  }
  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_101863518);
  }
  uint64_t v3 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "[PaceController] isUsingOdometer - Requested while uninitialized",  buf,  2u);
  }

  BOOL v4 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v4)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863518);
    }
    v7[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  16LL,  "[PaceController] isUsingOdometer - Requested while uninitialized",  v7,  2);
    double v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLStepDistanceFusion::isUsingOdometer(CLPedometer::PaceOutputType) const",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
    return 0LL;
  }

  return result;
}

uint64_t sub_1009904C4(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 224) = 0LL;
  *(_OWORD *)(a2 + 192) = 0u;
  *(_OWORD *)(a2 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a2 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a2 + 176) = 0u;
  *(_OWORD *)(a2 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  uint64_t result = (*(uint64_t (**)(uint64_t, __int128 *, __int128 *))(*(void *)a1 + 16LL))(a1, &v18, &v16);
  if ((_DWORD)result)
  {
    uint64_t v4 = *((void *)&v19 + 1);
    if (*((void *)&v19 + 1) == *((void *)&v17 + 1))
    {
      return 0LL;
    }

    else
    {
      if (*(void *)v19 == *((void *)&v19 + 1)) {
        uint64_t v4 = *(void *)(v19 - 8) + 3944LL;
      }
      __int128 v5 = *(_OWORD *)(v4 - 232);
      __int128 v6 = *(_OWORD *)(v4 - 200);
      *(_OWORD *)(a2 + 16) = *(_OWORD *)(v4 - 216);
      *(_OWORD *)(a2 + 32) = v6;
      *(_OWORD *)a2 = v5;
      __int128 v7 = *(_OWORD *)(v4 - 184);
      __int128 v8 = *(_OWORD *)(v4 - 168);
      __int128 v9 = *(_OWORD *)(v4 - 136);
      *(_OWORD *)(a2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *(_OWORD *)(v4 - 152);
      *(_OWORD *)(a2 + 96) = v9;
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v7;
      *(_OWORD *)(a2 + 64) = v8;
      __int128 v10 = *(_OWORD *)(v4 - 120);
      __int128 v11 = *(_OWORD *)(v4 - 104);
      __int128 v12 = *(_OWORD *)(v4 - 72);
      *(_OWORD *)(a2 + 144) = *(_OWORD *)(v4 - 88);
      *(_OWORD *)(a2 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v12;
      *(_OWORD *)(a2 + 112) = v10;
      *(_OWORD *)(a2 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v11;
      __int128 v13 = *(_OWORD *)(v4 - 56);
      __int128 v14 = *(_OWORD *)(v4 - 40);
      __int128 v15 = *(_OWORD *)(v4 - 24);
      *(void *)(a2 + 224) = *(void *)(v4 - 8);
      *(_OWORD *)(a2 + 192) = v14;
      *(_OWORD *)(a2 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = v15;
      *(_OWORD *)(a2 + 176) = v13;
      return 1LL;
    }
  }

  return result;
}

void sub_1009905C0(uint64_t a1, void **a2, uint64_t a3, char a4, double a5, double a6)
{
  __int128 v12 = *(void **)(a3 + 16);
  uint64_t v13 = *(void *)(a3 + 24);
  if (v13 != *v12)
  {
    uint64_t v14 = v13 - 320;
    double v15 = *(double *)(v13 - 280);
    double v16 = *(double *)(v13 - 240);
    double v17 = a6 + (v15 - a6) * a5;
    double v18 = v16 / a5;
    if ((a4 & 1) == 0) {
      goto LABEL_7;
    }
LABEL_5:
    char v20 = 1;
    int v21 = 4;
    goto LABEL_8;
  }

  uint64_t v19 = *(v12 - 1);
  double v15 = *(double *)(v19 + 4840);
  double v16 = *(double *)(v19 + 4880);
  uint64_t v14 = v19 + 4800;
  double v17 = a6 + (v15 - a6) * a5;
  double v18 = v16 / a5;
  if ((a4 & 1) != 0) {
    goto LABEL_5;
  }
  uint64_t v13 = v19 + 5120;
LABEL_7:
  char v20 = *(_BYTE *)(v13 - 146);
  int v21 = 1;
LABEL_8:
  __int128 v22 = *(_OWORD *)(v14 + 8);
  __int128 v23 = *(_OWORD *)(v14 + 24);
  *(_OWORD *)uint64_t v100 = *(_OWORD *)(v14 + 40);
  __int128 v24 = *(_OWORD *)(v14 + 56);
  __int128 v25 = *(_OWORD *)(v14 + 88);
  __int128 v26 = *(_OWORD *)(v14 + 104);
  *(_OWORD *)&v100[32] = *(_OWORD *)(v14 + 72);
  __int128 v27 = *(_OWORD *)(v14 + 136);
  __int128 v28 = *(_OWORD *)(v14 + 152);
  __int128 v29 = *(_OWORD *)(v14 + 168);
  __int128 v30 = *(_OWORD *)(v14 + 120);
  __int128 v98 = v22;
  __int128 v99 = v23;
  __int128 v101 = v25;
  __int128 v102 = v26;
  *(_OWORD *)&v100[16] = v24;
  *(_OWORD *)&v103[32] = v28;
  *(_OWORD *)&v103[48] = v29;
  *(_OWORD *)int v103 = v30;
  *(_OWORD *)&v103[16] = v27;
  *(double *)uint64_t v100 = v17;
  *(double *)&v100[40] = v18;
  v103[0] = a4;
  v103[1] = sub_100990320(a1, v21);
  v103[54] = v20;
  *(_DWORD *)&v103[56] = v21;
  if (*(_BYTE *)(a1 + 2129))
  {
    sub_10114E2B8((uint64_t)&v130);
    double v32 = *(void **)(a3 + 16);
    uint64_t v31 = *(void *)(a3 + 24);
    if (v31 == *v32) {
      uint64_t v31 = *(v32 - 1) + 5120LL;
    }
    int v33 = *(unsigned __int8 *)(v31 - 146);
    v135 |= 0x200u;
    int v134 = v33;
    sub_1004495A0((uint64_t)&v98, (int8x16_t *)buf);
    __int128 v35 = *(void **)(a3 + 16);
    uint64_t v34 = *(void *)(a3 + 24);
    if (v34 == *v35) {
      uint64_t v34 = *(v35 - 1) + 5120LL;
    }
    sub_1004497AC(v34 - 136, (uint64_t)&v96);
    BOOL v36 = operator new(0xA0uLL);
    uint64_t v37 = sub_10114C270(v36, buf);
    uint64_t v38 = v131;
    *(void *)&__int128 v131 = v37;
    if (v38) {
      (*(void (**)(uint64_t))(*(void *)v38 + 8LL))(v38);
    }
    double v39 = operator new(0x50uLL);
    uint64_t v40 = sub_10114DB10((uint64_t)v39, (uint64_t)&v96);
    uint64_t v41 = *((void *)&v130 + 1);
    *((void *)&v130 + 1) = v40;
    if (v41) {
      (*(void (**)(uint64_t))(*(void *)v41 + 8LL))(v41);
    }
    if (qword_1019A1D00 != -1) {
      dispatch_once(&qword_1019A1D00, &stru_1018635C8);
    }
    uint64_t v42 = qword_1019A1D08;
    if (qword_1019A1D08)
    {
      uint64_t v43 = operator new(0x68uLL);
      *(void *)&__int128 v93 = sub_10114E558(v43, &v130);
      double Current = CFAbsoluteTimeGetCurrent();
      sub_100B50EE8(v42, (uint64_t *)&v93, Current);
      uint64_t v45 = v93;
      *(void *)&__int128 v93 = 0LL;
      if (v45) {
        (*(void (**)(uint64_t))(*(void *)v45 + 8LL))(v45);
      }
    }

    PB::Base::~Base((PB::Base *)&v96);
    sub_10114BEA0((PB::Base *)buf);
    sub_10114E32C((PB::Base *)&v130);
  }

  double v89 = v16;
  uint64_t v47 = *(void **)(a3 + 16);
  uint64_t v46 = *(void *)(a3 + 24);
  if (v46 == *v47) {
    uint64_t v46 = *(v47 - 1) + 5120LL;
  }
  uint64_t v48 = *(void *)(v46 - 320);
  uint64_t v49 = v98;
  __int128 v95 = v99;
  __int128 v96 = *(_OWORD *)&v100[8];
  __int128 v97 = *(_OWORD *)&v100[24];
  uint64_t v50 = *(void *)v100;
  uint64_t v51 = *(void *)&v100[40];
  __int128 v93 = v101;
  __int128 v94 = v102;
  int v52 = v103[0];
  int v53 = v103[1];
  int v133 = *(_DWORD *)&v103[50];
  __int128 v131 = *(_OWORD *)&v103[18];
  __int128 v132 = *(_OWORD *)&v103[34];
  __int128 v130 = *(_OWORD *)&v103[2];
  int v54 = v103[54];
  char v55 = v103[55];
  int v56 = *(_DWORD *)&v103[56];
  int v57 = *(_DWORD *)&v103[60];
  uint64_t v58 = (char *)a2[2];
  uint64_t v59 = (char *)a2[1];
  uint64_t v90 = *(void *)v100;
  uint64_t v91 = *(void *)&v100[40];
  uint64_t v92 = *((void *)&v98 + 1);
  if (v59 >= v58)
  {
    double v88 = v15;
    unint64_t v66 = 0xAAAAAAAAAAAAAAABLL * ((v59 - (_BYTE *)*a2) >> 6);
    unint64_t v67 = v66 + 1;
    if (v66 + 1 > 0x155555555555555LL) {
      sub_100007008();
    }
    unint64_t v68 = 0xAAAAAAAAAAAAAAABLL * ((v58 - (_BYTE *)*a2) >> 6);
    if (2 * v68 > v67) {
      unint64_t v67 = 2 * v68;
    }
    if (v68 >= 0xAAAAAAAAAAAAAALL) {
      unint64_t v69 = 0x155555555555555LL;
    }
    else {
      unint64_t v69 = v67;
    }
    if (v69) {
      uint64_t v70 = (char *)sub_10001DF10((uint64_t)(a2 + 2), v69);
    }
    else {
      uint64_t v70 = 0LL;
    }
    uint64_t v71 = &v70[192 * v66];
    uint64_t v72 = &v70[192 * v69];
    *(void *)uint64_t v71 = v49;
    *((void *)v71 + 1) = v92;
    *((_OWORD *)v71 + 1) = v95;
    *((void *)v71 + 4) = v90;
    *(_OWORD *)(v71 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v96;
    *(_OWORD *)(v71 + 56) = v97;
    *((void *)v71 + 9) = v91;
    *((_OWORD *)v71 + 5) = v93;
    *((_OWORD *)v71 + 6) = v94;
    v71[112] = v52;
    v71[113] = v53;
    __int128 v73 = v130;
    __int128 v74 = v131;
    __int128 v75 = v132;
    *(_DWORD *)(v71 + 162) = v133;
    *(_OWORD *)(v71 + 146) = v75;
    *(_OWORD *)(v71 + 13sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v74;
    *(_OWORD *)(v71 + 114) = v73;
    v71[166] = v54;
    v71[167] = v55;
    *((_DWORD *)v71 + 42) = v56;
    *((_DWORD *)v71 + 43) = v57;
    *((void *)v71 + 22) = v48;
    v71[184] = a4;
    v71[185] = a4;
    uint64_t v65 = v71 + 192;
    uint64_t v77 = (char *)*a2;
    uint64_t v76 = (char *)a2[1];
    if (v76 == *a2)
    {
      double v15 = v88;
    }

    else
    {
      double v15 = v88;
      do
      {
        __int128 v78 = *((_OWORD *)v76 - 12);
        __int128 v79 = *((_OWORD *)v76 - 11);
        __int128 v80 = *((_OWORD *)v76 - 9);
        *((_OWORD *)v71 - 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *((_OWORD *)v76 - 10);
        *((_OWORD *)v71 - 9) = v80;
        *((_OWORD *)v71 - 12) = v78;
        *((_OWORD *)v71 - 11) = v79;
        __int128 v81 = *((_OWORD *)v76 - 8);
        __int128 v82 = *((_OWORD *)v76 - 7);
        __int128 v83 = *((_OWORD *)v76 - 5);
        *((_OWORD *)v71 - 6) = *((_OWORD *)v76 - 6);
        *((_OWORD *)v71 - 5) = v83;
        *((_OWORD *)v71 - _Block_object_dispose((const void *)(v1 - 224), 8) = v81;
        *((_OWORD *)v71 - 7) = v82;
        __int128 v84 = *((_OWORD *)v76 - 4);
        __int128 v85 = *((_OWORD *)v76 - 3);
        __int128 v86 = *((_OWORD *)v76 - 1);
        *((_OWORD *)v71 - 2) = *((_OWORD *)v76 - 2);
        *((_OWORD *)v71 - 1) = v86;
        *((_OWORD *)v71 - 4) = v84;
        *((_OWORD *)v71 - 3) = v85;
        v71 -= 192;
        v76 -= 192;
      }

      while (v76 != v77);
      uint64_t v76 = (char *)*a2;
    }

    *a2 = v71;
    a2[1] = v65;
    a2[2] = v72;
    if (v76) {
      operator delete(v76);
    }
  }

  else
  {
    *(_OWORD *)uint64_t v59 = v98;
    *((_OWORD *)v59 + 1) = v95;
    *((void *)v59 + 4) = v50;
    __int128 v60 = v97;
    *(_OWORD *)(v59 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v96;
    *(_OWORD *)(v59 + 56) = v60;
    *((void *)v59 + 9) = v51;
    __int128 v61 = v94;
    *((_OWORD *)v59 + 5) = v93;
    *((_OWORD *)v59 + 6) = v61;
    v59[112] = v52;
    v59[113] = v53;
    __int128 v62 = v130;
    __int128 v63 = v131;
    __int128 v64 = v132;
    *(_DWORD *)(v59 + 162) = v133;
    *(_OWORD *)(v59 + 146) = v64;
    *(_OWORD *)(v59 + 13sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v63;
    *(_OWORD *)(v59 + 114) = v62;
    v59[166] = v54;
    v59[167] = v55;
    *((_DWORD *)v59 + 42) = v56;
    *((_DWORD *)v59 + 43) = v57;
    *((void *)v59 + 22) = v48;
    v59[184] = a4;
    uint64_t v65 = v59 + 192;
    v59[185] = a4;
  }

  a2[1] = v65;
  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_101863518);
  }
  uint64_t v87 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 68291843;
    int v105 = 0;
    __int16 v106 = 2082;
    int v107 = "";
    __int16 v108 = 2049;
    uint64_t v109 = v92;
    __int16 v110 = 2049;
    uint64_t v111 = v90;
    __int16 v112 = 2049;
    uint64_t v113 = v91;
    __int16 v114 = 1025;
    int v115 = v52;
    __int16 v116 = 1025;
    int v117 = v53;
    __int16 v118 = 1025;
    int v119 = v54;
    __int16 v120 = 1025;
    int v121 = v56;
    __int16 v122 = 2049;
    double v123 = v15;
    __int16 v124 = 2049;
    double v125 = v89;
    __int16 v126 = 2049;
    double v127 = a5;
    __int16 v128 = 2049;
    double v129 = a6;
    _os_log_impl( (void *)&_mh_execute_header,  v87,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:ExtendedMode, startTime:%{private}f, distDeltaFused:%{private}.3f, pace Fused:%{private}.3f, isOdometerDistance:%{private}hhd, isOdometerPace:%{private}hhd, distanceSourc e:%{private}d, paceSource:%{private}d, distDeltaCalPed:%{private}.3f, paceCalPed:%{private}.3f , gain:%{private}.3f, nonGainDist:%{private}.3f}",  buf,  0x70u);
  }

void sub_100990C28( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

void sub_100990C5C()
{
}

void sub_100990C64( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a15) {
    (*(void (**)(uint64_t))(*(void *)a15 + 8LL))(a15);
  }
  JUMPOUT(0x100990C34LL);
}

void sub_100990C84()
{
}

BOOL sub_100990C8C(void *a1, _OWORD *a2, double a3)
{
  double v29 = a3;
  unint64_t v5 = a1[7];
  unint64_t v6 = v5 + a1[8];
  uint64_t v7 = a1[4];
  unint64_t v8 = v7 + 8 * (v6 / 0x15);
  if (a1[5] == v7)
  {
    unint64_t v9 = 0LL;
    unint64_t v11 = 0LL;
    __int128 v10 = (void *)(v7 + 8 * (v5 / 0x15));
  }

  else
  {
    unint64_t v9 = *(void *)(v7 + 8 * (v6 / 0x15)) + 192 * (v6 % 0x15);
    __int128 v10 = (void *)(v7 + 8 * (v5 / 0x15));
    unint64_t v11 = *v10 + 192 * (v5 % 0x15);
  }

  v31.n128_u64[0] = v8;
  v31.n128_u64[1] = v9;
  unint64_t v32 = v8;
  unint64_t v33 = v9;
  v30[0] = v10;
  v30[1] = v11;
  v30[2] = v10;
  void v30[3] = v11;
  sub_1009930C0(&v31, (uint64_t)v30, &v29, &v26);
  uint64_t v12 = a1[4];
  if (a1[5] == v12) {
    unint64_t v13 = 0LL;
  }
  else {
    unint64_t v13 = *(void *)(v12 + 8 * (a1[7] / 0x15uLL)) + 192 * (a1[7] % 0x15uLL);
  }
  uint64_t v14 = v28;
  if (v13 != v28)
  {
    if (*v27 == v28) {
      uint64_t v15 = *(v27 - 1) + 4032LL;
    }
    else {
      uint64_t v15 = v28;
    }
    __int128 v16 = *(_OWORD *)(v15 - 192);
    __int128 v17 = *(_OWORD *)(v15 - 176);
    __int128 v18 = *(_OWORD *)(v15 - 144);
    a2[2] = *(_OWORD *)(v15 - 160);
    a2[3] = v18;
    *a2 = v16;
    a2[1] = v17;
    __int128 v19 = *(_OWORD *)(v15 - 128);
    __int128 v20 = *(_OWORD *)(v15 - 112);
    __int128 v21 = *(_OWORD *)(v15 - 80);
    a2[6] = *(_OWORD *)(v15 - 96);
    a2[7] = v21;
    a2[4] = v19;
    a2[5] = v20;
    __int128 v22 = *(_OWORD *)(v15 - 64);
    __int128 v23 = *(_OWORD *)(v15 - 48);
    __int128 v24 = *(_OWORD *)(v15 - 16);
    a2[10] = *(_OWORD *)(v15 - 32);
    a2[11] = v24;
    a2[8] = v22;
    a2[9] = v23;
  }

  return v13 != v14;
}

BOOL sub_100990E20(void *a1, _OWORD *a2, double a3)
{
  double v27 = a3;
  unint64_t v5 = a1[7];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  unint64_t v8 = (void *)(v6 + 8 * (v5 / 0x15));
  if (v7 == v6)
  {
    unint64_t v9 = 0LL;
    uint64_t v12 = 0LL;
    unint64_t v11 = (void *)(v6 + 8 * ((a1[8] + v5) / 0x15));
  }

  else
  {
    unint64_t v9 = (double *)(*(void *)(v6 + 8 * (v5 / 0x15)) + 192 * (v5 % 0x15));
    unint64_t v10 = a1[8] + v5;
    unint64_t v11 = (void *)(v6 + 8 * (v10 / 0x15));
    uint64_t v12 = (double *)(*v11 + 192 * (v10 % 0x15));
  }

  sub_1009931E0(v8, v9, v11, v12, &v27);
  uint64_t v14 = a1[4];
  if (a1[5] == v14)
  {
    unint64_t v16 = 0LL;
  }

  else
  {
    unint64_t v15 = a1[8] + a1[7];
    unint64_t v16 = *(void *)(v14 + 8 * (v15 / 0x15)) + 192 * (v15 % 0x15);
  }

  if ((__int128 *)v16 != v13)
  {
    __int128 v17 = *v13;
    __int128 v18 = v13[1];
    __int128 v19 = v13[3];
    a2[2] = v13[2];
    a2[3] = v19;
    *a2 = v17;
    a2[1] = v18;
    __int128 v20 = v13[4];
    __int128 v21 = v13[5];
    __int128 v22 = v13[7];
    a2[6] = v13[6];
    a2[7] = v22;
    a2[4] = v20;
    a2[5] = v21;
    __int128 v23 = v13[8];
    __int128 v24 = v13[9];
    __int128 v25 = v13[11];
    a2[10] = v13[10];
    a2[11] = v25;
    a2[8] = v23;
    a2[9] = v24;
  }

  return v16 != (void)v13;
}

BOOL sub_100990F84(void *a1, void *a2, double a3)
{
  double v20 = a3;
  unint64_t v5 = a1[7];
  unint64_t v6 = v5 + a1[8];
  uint64_t v7 = a1[4];
  unint64_t v8 = (void *)(v7 + 8 * (v6 >> 4));
  if (a1[5] == v7)
  {
    uint64_t v9 = 0LL;
    uint64_t v11 = 0LL;
    unint64_t v10 = (void *)(v7 + 8 * (v5 >> 4));
  }

  else
  {
    uint64_t v9 = *v8 + 320 * (v6 & 0xF);
    unint64_t v10 = (void *)(v7 + 8 * (v5 >> 4));
    uint64_t v11 = *v10 + 320 * (a1[7] & 0xFLL);
  }

  v22[0] = v8;
  v22[1] = v9;
  v22[2] = v8;
  v22[3] = v9;
  v21[0] = v10;
  v21[1] = v11;
  v21[2] = v10;
  v21[3] = v11;
  sub_1009932C0((uint64_t)v22, (uint64_t)v21, &v20, &v17);
  uint64_t v12 = a1[4];
  if (a1[5] == v12) {
    uint64_t v13 = 0LL;
  }
  else {
    uint64_t v13 = *(void *)(v12 + ((a1[7] >> 1) & 0x7FFFFFFFFFFFFFF8LL)) + 320 * (a1[7] & 0xFLL);
  }
  uint64_t v14 = v19;
  if (v13 != v19)
  {
    if (*v18 == v19) {
      uint64_t v15 = *(v18 - 1) + 5120LL;
    }
    else {
      uint64_t v15 = v19;
    }
    memcpy(a2, (const void *)(v15 - 320), 0x140uLL);
  }

  return v13 != v14;
}

BOOL sub_1009910B0(void *a1, void *a2, double a3)
{
  double v19 = a3;
  unint64_t v5 = a1[7];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  unint64_t v8 = (uint64_t *)(v6 + 8 * (v5 >> 4));
  if (v7 == v6)
  {
    uint64_t v9 = 0LL;
    uint64_t v12 = 0LL;
    uint64_t v11 = (char *)(v6 + 8 * ((a1[8] + v5) >> 4));
  }

  else
  {
    uint64_t v9 = *v8 + 320 * (v5 & 0xF);
    unint64_t v10 = a1[8] + v5;
    uint64_t v11 = (char *)(v6 + 8 * (v10 >> 4));
    uint64_t v12 = *(void *)v11 + 320 * (v10 & 0xF);
  }

  sub_1009933E8(v8, v9, v11, v12, &v19);
  uint64_t v14 = (uint64_t)v13;
  uint64_t v15 = a1[4];
  if (a1[5] == v15)
  {
    uint64_t v17 = 0LL;
  }

  else
  {
    unint64_t v16 = a1[8] + a1[7];
    uint64_t v17 = *(void *)(v15 + ((v16 >> 1) & 0x7FFFFFFFFFFFFFF8LL)) + 320 * (v16 & 0xF);
  }

  return v17 != v14;
}

BOOL sub_1009911AC(uint64_t a1, double *a2, double a3, double a4)
{
  double v12 = 0.0;
  double v13 = 0.0;
  *a2 = 0.0;
  if (a3 <= a4)
  {
    if (a3 != a4)
    {
      BOOL result = sub_10099202C(a1, &v13, a3);
      if (!result) {
        return result;
      }
      BOOL result = sub_10099202C(a1, &v12, a4);
      if (!result) {
        return result;
      }
      *a2 = v12 - v13;
    }

    return 1LL;
  }

  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_101863518);
  }
  uint64_t v6 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134349312;
    double v19 = a3;
    __int16 v20 = 2050;
    double v21 = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning Time rolled back! t1,%{public}f,t2,%{public}f",  buf,  0x16u);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863518);
    }
    int v14 = 134349312;
    double v15 = a3;
    __int16 v16 = 2050;
    double v17 = a4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  0LL,  "#Warning Time rolled back! t1,%{public}f,t2,%{public}f",  &v14,  22);
    uint64_t v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLStepDistanceFusion::getPedometerDistance(CFAbsoluteTime, CFAbsoluteTime, double &) const",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
    return 0LL;
  }

  return result;
}

uint64_t sub_1009913CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0LL;
  *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a2 + 16) = 0LL;
  if (*(void *)(result + 520))
  {
    uint64_t v3 = (int64x2_t *)result;
    uint64_t v4 = result + 480;
    uint64_t v5 = result + 528;
    do
    {
      __int128 v9 = 0u;
      __int128 v10 = 0u;
      memset(v8, 0, sizeof(v8));
      if (sub_10098E6D0(v5, (uint64_t)&v9, v8, v6))
      {
        v7[0] = v9;
        v7[1] = v10;
        sub_1009905C0((uint64_t)v3, (void **)a2, (uint64_t)v7, 0, 1.0, 0.0);
      }

      _BYTE v3[32] = vaddq_s64(v3[32], (int64x2_t)xmmword_1012CE4D0);
      BOOL result = sub_1002109A4(v4, 1);
    }

    while (v3[32].i64[1]);
  }

  return result;
}

void sub_1009914A4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_1009914C4(uint64_t a1, int *a2)
{
  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_101863518);
  }
  uint64_t v4 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a2;
    int v6 = a2[2];
    *(_DWORD *)std::stringbuf::string_type buf = 67109376;
    int v17 = v5;
    __int16 v18 = 1024;
    int v19 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "MotionOverride: action,%d,type,%d", buf, 0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863518);
    }
    int v9 = *a2;
    int v10 = a2[2];
    v13[0] = 67109376;
    v13[1] = v9;
    __int16 v14 = 1024;
    int v15 = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "MotionOverride: action,%d,type,%d",  v13,  14);
    double v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLStepDistanceFusion::feedSession(const CLMotionStateMediator_Type::MotionOverride &)",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  sub_1004F2598();
  char v7 = sub_1009902D4(a1);
  memcpy((void *)(a1 + 160), a2, 0x140uLL);
  uint64_t result = sub_1009902D4(a1);
  if ((v7 & 1) == 0)
  {
    if ((_DWORD)result)
    {
      *(void *)(a1 + 2104) = 0LL;
      *(_OWORD *)(a1 + 208_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
      *(void *)(a1 + 2112) = 0xBFF0000000000000LL;
      *(void *)(a1 + 2016) = 0x300000000LL;
      return sub_100C6F334(a1 + 800);
    }
  }

  return result;
}

void sub_100991708(uint64_t a1, uint64_t a2)
{
}

void sub_100991710(uint64_t a1, uint64_t *a2)
{
  if (*(_BYTE *)(a1 + 2129))
  {
    sub_101162BDC((uint64_t)v11);
    uint64_t v12 = *a2;
    uint64_t v13 = a2[1];
    int v4 = *((unsigned __int8 *)a2 + 16);
    int v14 = *((unsigned __int8 *)a2 + 17);
    int v15 = v4;
    LOBYTE(v4) = *((_BYTE *)a2 + 18);
    v17 |= 0x3Eu;
    char v16 = v4;
    if (qword_1019A1D00 != -1) {
      dispatch_once(&qword_1019A1D00, &stru_1018635C8);
    }
    uint64_t v5 = qword_1019A1D08;
    if (qword_1019A1D08)
    {
      int v6 = operator new(0x30uLL);
      sub_101162CC8((uint64_t)v6, (uint64_t)v11);
      uint64_t v10 = v7;
      double Current = CFAbsoluteTimeGetCurrent();
      sub_100B510BC(v5, &v10, Current);
      uint64_t v9 = v10;
      uint64_t v10 = 0LL;
      if (v9) {
        (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
      }
    }

    PB::Base::~Base((PB::Base *)v11);
  }

  sub_100C6FE14(a1 + 800, (__int128 *)a2);
}

void sub_10099180C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100991840(uint64_t a1, __int128 *a2)
{
  __int128 v4 = *a2;
  __int128 v5 = a2[1];
  __int128 v6 = a2[2];
  *(_OWORD *)(a1 + 206_Block_object_dispose((const void *)(v1 - 224), 8) = *(__int128 *)((char *)a2 + 44);
  *(_OWORD *)(a1 + 204sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v5;
  *(_OWORD *)(a1 + 2056) = v6;
  *(_OWORD *)(a1 + 2024) = v4;
  sub_100C6FE54(a1 + 800, (uint64_t)a2);
  sub_1004F2598();
  if ((sub_1001B9A1C() & 1) != 0 || (sub_1004F2598(), sub_1004F7500())) {
    sub_100A89724(*(void *)(a1 + 2136), a2);
  }
}

void *sub_1009918B0(uint64_t a1, void *a2)
{
  return sub_1004781EC((void *)(a1 + 24), a2);
}

unint64_t sub_1009918B8(uint64_t a1, double a2)
{
  double v4 = *(double *)(a1 + 104);
  *(double *)(a1 + 104) = a2;
  BOOL v5 = a2 > 0.0;
  if (v4 <= a2) {
    BOOL v5 = 0;
  }
  *(_BYTE *)(a1 + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v5;
  if (v5)
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018636F8);
    }
    __int128 v6 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
    {
      double v7 = *(double *)(a1 + 104);
      int v8 = *(unsigned __int8 *)(a1 + 121);
      *(_DWORD *)std::stringbuf::string_type buf = 134218752;
      double v34 = v7 - v4;
      __int16 v35 = 2048;
      double v36 = v4;
      __int16 v37 = 2048;
      double v38 = v7;
      __int16 v39 = 1024;
      int v40 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning Input, time rolled back. Delta %f, Previous Time %f, Current Time %f, Always Active %d.",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_1018636F8);
      }
      double v20 = *(double *)(a1 + 104);
      int v21 = *(unsigned __int8 *)(a1 + 121);
      int v25 = 134218752;
      double v26 = v20 - v4;
      __int16 v27 = 2048;
      double v28 = v4;
      __int16 v29 = 2048;
      double v30 = v20;
      __int16 v31 = 1024;
      int v32 = v21;
      LODWORD(v24) = 38;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "#Warning Input, time rolled back. Delta %f, Previous Time %f, Current Time %f, Always Active %d.",  COERCE_DOUBLE(&v25),  v24);
      __int128 v23 = (uint8_t *)v22;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNatalieInput<CLExtendedStepCountEntry>::update(CFAbsoluteTime) [T = CLExtendedStepCountEntry]",  "%s\n",  v22);
      if (v23 != buf) {
        free(v23);
      }
    }
  }

  if (*(_BYTE *)(a1 + 80)
    && !*(_BYTE *)(a1 + 121)
    && (*(double *)(a1 + 88) < a2 || *(_BYTE *)(a1 + 120))
    && (*(unsigned int (**)(uint64_t))(*(void *)a1 + 72LL))(a1))
  {
    *(_BYTE *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  }

  unint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = (char *)(v10 + 8 * (v9 >> 4));
  if (v11 == v10) {
    uint64_t v13 = 0LL;
  }
  else {
    uint64_t v13 = (char *)(*(void *)v12 + 320 * (*(void *)(a1 + 56) & 0xFLL));
  }
  int v14 = (char *)(v10 + 8 * (v9 >> 4));
LABEL_15:
  int v15 = (double *)v13;
  while (1)
  {
    uint64_t v16 = v11 == v10
        ? 0LL
        : *(void *)(v10 + (((*(void *)(a1 + 64) + v9) >> 1) & 0x7FFFFFFFFFFFFFF8LL))
        + 320LL * ((*(_DWORD *)(a1 + 64) + (_DWORD)v9) & 0xF);
    v15 += 40;
    v13 += 320;
    if ((char *)(*(void *)v14 + 5120LL) == v13)
    {
      char v17 = (char *)*((void *)v14 + 1);
      v14 += 8;
      uint64_t v13 = v17;
      goto LABEL_15;
    }
  }

  if (v11 == v10) {
    __int16 v18 = 0LL;
  }
  else {
    __int16 v18 = (char *)(*(void *)v12 + 320 * (*(void *)(a1 + 56) & 0xFLL));
  }
  return sub_10079B220((void *)(a1 + 24), v12, v18, v14, v13);
}

unint64_t sub_100991C04(uint64_t a1, double a2)
{
  double v4 = *(double *)(a1 + 104);
  *(double *)(a1 + 104) = a2;
  BOOL v5 = a2 > 0.0;
  if (v4 <= a2) {
    BOOL v5 = 0;
  }
  *(_BYTE *)(a1 + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v5;
  if (v5)
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_1018636F8);
    }
    __int128 v6 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
    {
      double v7 = *(double *)(a1 + 104);
      int v8 = *(unsigned __int8 *)(a1 + 121);
      *(_DWORD *)std::stringbuf::string_type buf = 134218752;
      double v34 = v7 - v4;
      __int16 v35 = 2048;
      double v36 = v4;
      __int16 v37 = 2048;
      double v38 = v7;
      __int16 v39 = 1024;
      int v40 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "#Warning Input, time rolled back. Delta %f, Previous Time %f, Current Time %f, Always Active %d.",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_1018636F8);
      }
      double v20 = *(double *)(a1 + 104);
      int v21 = *(unsigned __int8 *)(a1 + 121);
      int v25 = 134218752;
      double v26 = v20 - v4;
      __int16 v27 = 2048;
      double v28 = v4;
      __int16 v29 = 2048;
      double v30 = v20;
      __int16 v31 = 1024;
      int v32 = v21;
      LODWORD(v24) = 38;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "#Warning Input, time rolled back. Delta %f, Previous Time %f, Current Time %f, Always Active %d.",  COERCE_DOUBLE(&v25),  v24);
      __int128 v23 = (uint8_t *)v22;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNatalieInput<CLMotionStateMediator_Type::MediatedMotionActivity>::update(CFAbsoluteTime) [Data_T = CLMotionStateMediator_Type::MediatedMotionActivity]",  "%s\n",  v22);
      if (v23 != buf) {
        free(v23);
      }
    }
  }

  if (*(_BYTE *)(a1 + 80)
    && !*(_BYTE *)(a1 + 121)
    && (*(double *)(a1 + 88) < a2 || *(_BYTE *)(a1 + 120))
    && (*(unsigned int (**)(uint64_t))(*(void *)a1 + 72LL))(a1))
  {
    *(_BYTE *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  }

  unint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = (char *)(v10 + 8 * (v9 / 0x11));
  if (v11 == v10) {
    uint64_t v13 = 0LL;
  }
  else {
    uint64_t v13 = (char *)(*(void *)v12 + 232 * (v9 % 0x11));
  }
  int v14 = (char *)(v10 + 8 * (v9 / 0x11));
LABEL_15:
  int v15 = (double *)v13;
  while (1)
  {
    unint64_t v16 = v11 == v10
        ? 0LL
        : *(void *)(*(void *)(a1 + 32) + 8 * ((*(void *)(a1 + 64) + v9) / 0x11))
        + 232 * ((*(void *)(a1 + 64) + v9) % 0x11);
    v15 += 29;
    v13 += 232;
    if ((char *)(*(void *)v14 + 3944LL) == v13)
    {
      char v17 = (char *)*((void *)v14 + 1);
      v14 += 8;
      uint64_t v13 = v17;
      goto LABEL_15;
    }
  }

  if (v11 == v10) {
    __int16 v18 = 0LL;
  }
  else {
    __int16 v18 = (char *)(*(void *)v12 + 232 * (v9 % 0x11));
  }
  return sub_100412FFC((void *)(a1 + 24), v12, v18, v14, v13);
}

void *sub_100991F6C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v3 = a1[7] + a1[8];
  uint64_t v4 = a1[4];
  BOOL v5 = (void *)(v4 + 8 * (v3 / 0x15));
  if (a1[5] == v4)
  {
    unint64_t v6 = 0LL;
    *a3 = v5;
    a3[1] = 0LL;
  }

  else
  {
    unint64_t v6 = *v5 + 192 * (v3 % 0x15);
    *a3 = v5;
    a3[1] = v6;
  }

  a3[2] = v5;
  double v7 = a3 + 2;
  a3[3] = v6;
  uint64_t v8 = *(void *)(a2 + 24);
  if (v6 == v8) {
    uint64_t v9 = 0LL;
  }
  else {
    uint64_t v9 = -21 * (((uint64_t)v5 - *(void *)(a2 + 16)) >> 3)
  }
  return sub_10079BE58(v7, v9);
}

BOOL sub_10099202C(uint64_t a1, double *a2, double a3)
{
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  BOOL result = sub_100992244((void *)(a1 + 528), (uint64_t)&v28, &v26, a3);
  if (result)
  {
    uint64_t v6 = *((void *)&v29 + 1);
    uint64_t v7 = *(void *)v29;
    uint64_t v8 = *((void *)&v29 + 1) - *(void *)v29;
    unint64_t v9 = 0xCCCCCCCCCCCCCCCDLL * (v8 >> 6);
    unint64_t v10 = v9 - 1;
    if (v8 < 321)
    {
      uint64_t v12 = *(void *)(v29 - 8 * ((16 - v9) >> 4));
      uint64_t v13 = v12 + 320LL * (~(16 - (_BYTE)v9) & 0xF);
      if (v13 == *((void *)&v27 + 1)) {
        return 0LL;
      }
      uint64_t v11 = -(uint64_t)((16 - v9) >> 4);
    }

    else
    {
      uint64_t v11 = v10 >> 4;
      uint64_t v12 = *(void *)(v29 + 8 * (v10 >> 4));
      uint64_t v13 = v12 + 320 * (v10 & 0xF);
      if (v13 == *((void *)&v27 + 1)) {
        return 0LL;
      }
    }

    if (v13 == v12) {
      uint64_t v13 = *(void *)(v29 + 8 * v11 - 8) + 5120LL;
    }
    uint64_t v14 = *((void *)&v29 + 1);
    if (*((void *)&v29 + 1) == v7) {
      uint64_t v14 = *(void *)(v29 - 8) + 5120LL;
    }
    if (v8 < 321)
    {
      uint64_t v15 = -(uint64_t)((16 - v9) >> 4);
      uint64_t v16 = *(void *)(v29 - 8 * ((16 - v9) >> 4));
      unsigned int v17 = ~(16 - v9) & 0xF;
    }

    else
    {
      uint64_t v15 = v10 >> 4;
      uint64_t v16 = *(void *)(v29 + 8 * (v10 >> 4));
      unsigned int v17 = v10 & 0xF;
    }

    uint64_t v18 = v16 + 320LL * v17;
    if (v18 == v16) {
      uint64_t v18 = *(void *)(v29 + 8 * v15 - 8) + 5120LL;
    }
    if (v8 < 321)
    {
      char v22 = ~(16 - v9);
      unint64_t v23 = (16 - v9) >> 4;
      uint64_t v19 = -(uint64_t)v23;
      uint64_t v20 = *(void *)(v29 - 8 * v23);
      unsigned int v21 = v22 & 0xF;
    }

    else
    {
      uint64_t v19 = v10 >> 4;
      uint64_t v20 = *(void *)(v29 + 8 * (v10 >> 4));
      unsigned int v21 = v10 & 0xF;
    }

    uint64_t v24 = v20 + 320LL * v21;
    int v25 = (double *)(v18 - 320);
    if (v24 == v20) {
      uint64_t v24 = *(void *)(v29 + 8 * v19 - 8) + 5120LL;
    }
    if (*((void *)&v29 + 1) == v7) {
      uint64_t v6 = *(void *)(v29 - 8) + 5120LL;
    }
    *a2 = sub_100940328(*v25, *(double *)(v24 - 136), *(double *)(v6 - 320), *(double *)(v6 - 136), a3);
    return 1LL;
  }

  return result;
}

BOOL sub_100992244(void *a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v4 = a1[4];
  BOOL v5 = (void *)(v4 + 8LL * (a1[7] >> 4));
  if (a1[5] == v4) {
    uint64_t v6 = 0LL;
  }
  else {
    uint64_t v6 = *v5 + 320 * (a1[7] & 0xFLL);
  }
  *a3 = v5;
  a3[1] = v6;
  a3[2] = v5;
  a3[3] = v6;
  __int128 v7 = *((_OWORD *)a3 + 1);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_OWORD *)(a2 + 16) = v7;
  uint64_t v8 = a1[8];
  if (!v8) {
    return 0LL;
  }
  unint64_t v9 = a1[7] + v8;
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = (void *)(v10 + 8 * (v9 >> 4));
  if (*(double *)(*(void *)(v10 + (((v9 - 1) >> 1) & 0x7FFFFFFFFFFFFFF8LL)) + 320LL * (((_DWORD)v9 - 1) & 0xF)) < a4)
  {
    if (v11 == v10) {
      uint64_t v13 = 0LL;
    }
    else {
      uint64_t v13 = *v12 + 320 * (v9 & 0xF);
    }
    BOOL result = 0LL;
    *(void *)a2 = v12;
    *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = v13;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v13;
    return result;
  }

  if (v11 == v10) {
    uint64_t v15 = 0LL;
  }
  else {
    uint64_t v15 = *v12 + 320 * (v9 & 0xF);
  }
  uint64_t v16 = a3[3];
  if (v15 == v16)
  {
LABEL_22:
    uint64_t v21 = *(void *)(a2 + 24);
    return v21 != v16;
  }

  uint64_t v17 = *v12;
  uint64_t v18 = v15;
  uint64_t v19 = v12;
  while (1)
  {
    uint64_t v20 = v18 - v17;
    if (v18 == v17) {
      break;
    }
LABEL_21:
    v18 -= 320LL;
    if (v18 == v16) {
      goto LABEL_22;
    }
  }

  uint64_t v17 = *(v19 - 1);
  if (*(double *)(v17 + 4800) > a4)
  {
    uint64_t v18 = v17 + 5120;
    --v19;
    goto LABEL_21;
  }

BOOL sub_1009923EC(uint64_t a1, double *a2, double a3)
{
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  BOOL result = sub_1007B8264(*(void **)(a1 + 656), (uint64_t)&v30, &v28, a3);
  if (result)
  {
    uint64_t v6 = *((void *)&v31 + 1);
    uint64_t v7 = *(void *)v31;
    uint64_t v8 = *((void *)&v31 + 1) - *(void *)v31;
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 6);
    unint64_t v10 = v9 - 1;
    if (v8 < 193)
    {
      uint64_t v14 = ((21 - v9) * (unsigned __int128)0x8618618618618619LL) >> 64;
      unint64_t v15 = v14 + ((21 - v9 - v14) >> 1);
      uint64_t v12 = *(void *)(v31 - 8 * (v15 >> 4));
      uint64_t v13 = v12 + 192 * (v9 - 21 + 21 * (v15 >> 4)) + 3840;
      if (v13 == *((void *)&v29 + 1)) {
        return 0LL;
      }
      unint64_t v11 = -(uint64_t)(v15 >> 4);
    }

    else
    {
      unint64_t v11 = v10 / 0x15;
      uint64_t v12 = *(void *)(v31 + 8 * (v10 / 0x15));
      uint64_t v13 = v12 + 192 * (v10 % 0x15);
      if (v13 == *((void *)&v29 + 1)) {
        return 0LL;
      }
    }

    if (v13 == v12) {
      uint64_t v13 = *(void *)(v31 + 8 * v11 - 8) + 4032LL;
    }
    uint64_t v16 = *((void *)&v31 + 1);
    if (*((void *)&v31 + 1) == v7) {
      uint64_t v16 = *(void *)(v31 - 8) + 4032LL;
    }
    if (v8 < 193)
    {
      uint64_t v20 = ((21 - v9) * (unsigned __int128)0x8618618618618619LL) >> 64;
      unint64_t v21 = (v20 + ((21 - v9 - v20) >> 1)) >> 4;
      unint64_t v17 = -(uint64_t)v21;
      uint64_t v18 = *(void *)(v31 - 8 * v21);
      uint64_t v19 = v18 + 192 * (v9 - 21 + 21 * v21) + 3840;
    }

    else
    {
      unint64_t v17 = v10 / 0x15;
      uint64_t v18 = *(void *)(v31 + 8 * (v10 / 0x15));
      uint64_t v19 = v18 + 192 * (v10 % 0x15);
    }

    if (v19 == v18) {
      uint64_t v19 = *(void *)(v31 + 8 * v17 - 8) + 4032LL;
    }
    if (v8 < 193)
    {
      unint64_t v25 = 21 - v9;
      uint64_t v26 = ((21 - v9) * (unsigned __int128)0x8618618618618619LL) >> 64;
      unint64_t v27 = (v26 + ((v25 - v26) >> 1)) >> 4;
      unint64_t v22 = -(uint64_t)v27;
      uint64_t v23 = *(void *)(v31 - 8 * v27);
      uint64_t v24 = v23 + 192 * (21 * v27 - v25) + 3840;
    }

    else
    {
      unint64_t v22 = v10 / 0x15;
      uint64_t v23 = *(void *)(v31 + 8 * (v10 / 0x15));
      uint64_t v24 = v23 + 192 * (v10 % 0x15);
    }

    if (v24 == v23) {
      uint64_t v24 = *(void *)(v31 + 8 * v22 - 8) + 4032LL;
    }
    if (*((void *)&v31 + 1) == v7) {
      uint64_t v6 = *(void *)(v31 - 8) + 4032LL;
    }
    *a2 = sub_100940328( *(double *)(v19 - 192),  *(double *)(v24 - 144),  *(double *)(v6 - 192),  *(double *)(v6 - 144),  a3);
    return 1LL;
  }

  return result;
}

uint64_t **sub_1009926B0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v3 = a1[7] + a1[8];
  uint64_t v4 = a1[4];
  BOOL v5 = (void *)(v4 + 8 * (v3 >> 4));
  if (a1[5] == v4)
  {
    uint64_t v6 = 0LL;
    *a3 = v5;
    a3[1] = 0LL;
  }

  else
  {
    uint64_t v6 = *v5 + 320 * (v3 & 0xF);
    *a3 = v5;
    a3[1] = v6;
  }

  a3[2] = v5;
  uint64_t v7 = (uint64_t **)(a3 + 2);
  a3[3] = v6;
  uint64_t v8 = *(void *)(a2 + 24);
  if (v6 == v8) {
    uint64_t v9 = 0LL;
  }
  else {
    uint64_t v9 = 0x3333333333333333LL * ((v6 - *v5) >> 6)
  }
       + 2LL * (*(void *)(a2 + 16) - (void)v5)
       - 0x3333333333333333LL * ((v8 - **(void **)(a2 + 16)) >> 6);
  return sub_10079B620(v7, v9);
}

uint64_t sub_100992748(uint64_t a1)
{
  uint64_t result = sub_1009904C4(a1 + 664, (uint64_t)v2);
  if ((_DWORD)result) {
    return CLMotionActivity::isTypePedestrian(v2[36]);
  }
  return result;
}

void *sub_1009927AC(uint64_t a1, uint64_t *a2)
{
  return sub_1000F2F30((void *)(a1 + 2136), a2);
}

void sub_1009927B4(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void sub_1009927E0(void **a1)
{
  *a1 = off_101863548;
  free(a1[1]);
  sub_10041385C(a1 + 3);
  operator delete(a1);
}

BOOL sub_100992820(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  unint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = (void *)(v5 + 8 * (v4 / 0x11));
  if (*(void *)(a1 + 40) == v5) {
    unint64_t v7 = 0LL;
  }
  else {
    unint64_t v7 = *v6 + 232 * (v4 % 0x11);
  }
  *a3 = v6;
  a3[1] = v7;
  a3[2] = v6;
  a3[3] = v7;
  __int128 v8 = *((_OWORD *)a3 + 1);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_OWORD *)(a2 + 16) = v8;
  unint64_t v9 = *(void *)(a1 + 56) + *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 32);
  unint64_t v11 = (uint64_t *)(v10 + 8 * (v9 / 0x11));
  if (*(void *)(a1 + 40) == v10) {
    unint64_t v12 = 0LL;
  }
  else {
    unint64_t v12 = *v11 + 232 * (v9 % 0x11);
  }
  uint64_t v13 = a3[3];
  if (v12 != v13)
  {
    uint64_t v14 = *v11;
    double v15 = 1.79769313e308;
    unint64_t v16 = v12;
    unint64_t v17 = v11;
    while (1)
    {
      uint64_t v18 = v16;
      if (v16 == v14) {
        uint64_t v18 = *(v17 - 1) + 3944;
      }
      double v19 = vabdd_f64(*(double *)(v18 - 232), a4);
      if (v19 < v15 && v19 < *(double *)(a1 + 16))
      {
        *(void *)a2 = v11;
        *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = v12;
        *(void *)(a2 + 16) = v17;
        *(void *)(a2 + 24) = v16;
        uint64_t v14 = *v17;
        uint64_t v20 = v16;
        if (v16 == *v17) {
          uint64_t v20 = *(v17 - 1) + 3944;
        }
        double v15 = v19;
      }

      if (v16 == v14)
      {
        uint64_t v21 = *--v17;
        uint64_t v14 = v21;
        unint64_t v16 = v21 + 3944;
      }

      v16 -= 232LL;
      uint64_t v13 = a3[3];
      if (v16 == v13) {
        return v13 != *(void *)(a2 + 24);
      }
    }

    uint64_t v13 = a3[3];
  }

  return v13 != *(void *)(a2 + 24);
}

double sub_100992964(uint64_t a1, __int128 *a2)
{
  *(void *)&double result = sub_10099296C((void *)(a1 + 24), a2).n128_u64[0];
  return result;
}

__n128 sub_10099296C(void *a1, __int128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 2 * (v4 - v5) + ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100992A50(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x11)) + 232 * (v7 % 0x11);
  __int128 v9 = *a2;
  __int128 v10 = a2[2];
  *(_OWORD *)(v8 + 16) = a2[1];
  *(_OWORD *)(v8 + 32) = v10;
  *(_OWORD *)unint64_t v8 = v9;
  __int128 v11 = a2[3];
  __int128 v12 = a2[4];
  __int128 v13 = a2[6];
  *(_OWORD *)(v8 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = a2[5];
  *(_OWORD *)(v8 + 96) = v13;
  *(_OWORD *)(v8 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v11;
  *(_OWORD *)(v8 + 64) = v12;
  __int128 v14 = a2[7];
  __int128 v15 = a2[8];
  __int128 v16 = a2[10];
  *(_OWORD *)(v8 + 144) = a2[9];
  *(_OWORD *)(v8 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v16;
  *(_OWORD *)(v8 + 112) = v14;
  *(_OWORD *)(v8 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v15;
  __n128 result = (__n128)a2[11];
  __int128 v18 = a2[12];
  __int128 v19 = a2[13];
  *(void *)(v8 + 224) = *((void *)a2 + 28);
  *(_OWORD *)(v8 + 192) = v18;
  *(_OWORD *)(v8 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = v19;
  *(__n128 *)(v8 + 176) = result;
  ++a1[5];
  return result;
}

void sub_100992A50(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x11;
  unint64_t v4 = v2 - 17;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    __int128 v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      double v34 = (char *)sub_1000071BC(v5, v33);
      __int16 v35 = &v34[8 * (v33 >> 2)];
      __int16 v37 = &v34[8 * v36];
      double v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        uint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)uint64_t v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100992D18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100992D64(void **a1)
{
  *a1 = off_101863590;
  free(a1[1]);
  sub_10046C4E8(a1 + 3);
  operator delete(a1);
}

uint64_t sub_100992DA4(uint64_t a1, _OWORD *a2)
{
  a2[18] = 0u;
  a2[19] = 0u;
  a2[16] = 0u;
  a2[17] = 0u;
  a2[14] = 0u;
  a2[15] = 0u;
  a2[12] = 0u;
  a2[13] = 0u;
  a2[10] = 0u;
  a2[11] = 0u;
  a2[8] = 0u;
  a2[9] = 0u;
  a2[6] = 0u;
  a2[7] = 0u;
  a2[4] = 0u;
  a2[5] = 0u;
  a2[2] = 0u;
  a2[3] = 0u;
  *a2 = 0u;
  a2[1] = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v5 = 0u;
  __int128 v6 = 0u;
  uint64_t result = (*(uint64_t (**)(uint64_t, __int128 *, __int128 *))(*(void *)a1 + 16LL))(a1, &v7, &v5);
  if ((_DWORD)result)
  {
    uint64_t v4 = *((void *)&v8 + 1);
    if (*((void *)&v8 + 1) == *((void *)&v6 + 1))
    {
      return 0LL;
    }

    else
    {
      if (*(void *)v8 == *((void *)&v8 + 1)) {
        uint64_t v4 = *(void *)(v8 - 8) + 5120LL;
      }
      memcpy(a2, (const void *)(v4 - 320), 0x140uLL);
      return 1LL;
    }
  }

  return result;
}

BOOL sub_100992E60(uint64_t a1, double a2)
{
  uint64_t v4 = *(void *)(a1 + 64);
  if (v4) {
    double v5 = *(double *)(*(void *)(*(void *)(a1 + 32)
  }
  else {
    double v5 = -1.79769313e308;
  }
  if (v5 >= a2)
  {
    __int128 v6 = (_BYTE *)(a1 + 80);
    goto LABEL_11;
  }

  __int128 v6 = (_BYTE *)(a1 + 80);
  if (*(_BYTE *)(a1 + 80))
  {
    double v7 = *(double *)(a1 + 16);
    if (*(double *)(a1 + 72) - v7 < a2 && v7 + *(double *)(a1 + 88) > a2)
    {
      double v8 = *(double *)(a1 + 104);
    }

BOOL sub_100992F88(uint64_t a1, double a2)
{
  uint64_t v4 = *(void *)(a1 + 64);
  if (v4) {
  else
  }
    double v5 = -1.79769313e308;
  if (v5 >= a2)
  {
    __int128 v6 = (_BYTE *)(a1 + 80);
    goto LABEL_11;
  }

  __int128 v6 = (_BYTE *)(a1 + 80);
  if (*(_BYTE *)(a1 + 80))
  {
    double v7 = *(double *)(a1 + 16);
    if (*(double *)(a1 + 72) - v7 < a2 && v7 + *(double *)(a1 + 88) > a2)
    {
      double v8 = *(double *)(a1 + 104);
    }

__n128 sub_1009930C0@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, __n128 *a4@<X8>)
{
  unint64_t v6 = a1[1].n128_u64[1];
  uint64_t v7 = *(void *)(a2 + 24);
  if (v6 != v7)
  {
    unint64_t v8 = 21 * ((uint64_t)(a1[1].n128_u64[0] - *(void *)(a2 + 16)) >> 3)
    if (v8)
    {
      while (1)
      {
        unint64_t v10 = v8 >> 1;
        __n128 v16 = *a1;
        __n128 v17 = a1[1];
        sub_10079BE58(&v17, -(uint64_t)(v8 >> 1));
        uint64_t v12 = v17.n128_i64[1];
        unint64_t v11 = v17.n128_u64[0];
        if (v17.n128_u64[1] != *(void *)v17.n128_u64[0]) {
          break;
        }
        unint64_t v11 = v17.n128_u64[0] - 8;
        uint64_t v13 = *(void *)(v17.n128_u64[0] - 8);
        if (*(double *)(v13 + 3840) >= *a3)
        {
          uint64_t v12 = v13 + 4032;
LABEL_8:
          *a1 = v16;
          a1[1].n128_u64[0] = v11;
          a1[1].n128_u64[1] = v12 - 192;
          unint64_t v10 = v8 + ~v10;
        }

void *sub_1009931E0(void *a1, double *a2, void *a3, double *a4, double *a5)
{
  double v5 = a2;
  unint64_t v6 = a1;
  if (a4 != a2)
  {
    unint64_t v7 = 21 * (a3 - a1)
    if (v7)
    {
      do
      {
        unint64_t v9 = v7 >> 1;
        unint64_t v11 = v6;
        uint64_t v12 = v5;
        sub_10079BE58(&v11, v7 >> 1);
        if (*v12 <= *a5)
        {
          unint64_t v6 = v11;
          double v5 = v12 + 24;
          if ((double *)((char *)v12 - *v11 + 192) == (double *)4032)
          {
            unint64_t v6 = v11 + 1;
            double v5 = (double *)v11[1];
          }

          unint64_t v9 = v7 + ~v9;
        }

        unint64_t v7 = v9;
      }

      while (v9);
    }
  }

  return v6;
}

__n128 sub_1009932C0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a2 + 24);
  if (v6 != v7)
  {
    unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((v6 - **(void **)(a1 + 16)) >> 6)
       + 2LL * (*(void *)(a1 + 16) - *(void *)(a2 + 16))
       + 0x3333333333333333LL * ((v7 - **(void **)(a2 + 16)) >> 6);
    if (v8)
    {
      while (1)
      {
        unint64_t v10 = v8 >> 1;
        __n128 v16 = *(__n128 *)a1;
        __int128 v17 = *(_OWORD *)(a1 + 16);
        sub_10079B620((uint64_t **)&v17, -(uint64_t)(v8 >> 1));
        uint64_t v12 = *((void *)&v17 + 1);
        uint64_t v11 = v17;
        if (*((void *)&v17 + 1) != *(void *)v17) {
          break;
        }
        uint64_t v11 = v17 - 8;
        uint64_t v13 = *(void *)(v17 - 8);
        if (*(double *)(v13 + 4800) >= *a3)
        {
          uint64_t v12 = v13 + 5120;
LABEL_8:
          *(__n128 *)a1 = v16;
          *(void *)(a1 + 16) = v11;
          *(void *)(a1 + 24) = v12 - 320;
          unint64_t v10 = v8 + ~v10;
        }

uint64_t *sub_1009933E8(uint64_t *a1, uint64_t a2, char *a3, uint64_t a4, double *a5)
{
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  if (a4 != a2)
  {
    unint64_t v7 = 0xCCCCCCCCCCCCCCCDLL * ((a4 - *(void *)a3) >> 6)
    if (v7)
    {
      do
      {
        unint64_t v9 = v7 >> 1;
        uint64_t v11 = v6;
        uint64_t v12 = (double *)v5;
        sub_10079B620(&v11, v7 >> 1);
        if (*v12 <= *a5)
        {
          uint64_t v6 = v11;
          uint64_t v5 = (uint64_t)(v12 + 40);
          if ((double *)((char *)v12 - *v11 + 320) == (double *)5120)
          {
            uint64_t v6 = v11 + 1;
            uint64_t v5 = v11[1];
          }

          unint64_t v9 = v7 + ~v9;
        }

        unint64_t v7 = v9;
      }

      while (v9);
    }
  }

  return v6;
}

void sub_1009934C4(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

void sub_1009934F0(uint64_t a1, unsigned __int16 *a2, unint64_t a3)
{
  unint64_t v3 = a2[1];
  if (v3 >= a3)
  {
    int v5 = 0;
    uint64_t v6 = -(uint64_t)a3;
    float v7 = 0.0;
    do
    {
      int v8 = *(unsigned __int8 *)(sub_1009935E8(a2, v3 + v6) + 8);
      double v9 = 2.55999994;
      if (v3 + v6)
      {
        double v10 = *(double *)sub_1009935E8(a2, v3 + v6);
        double v9 = v10 - *(double *)sub_1009935E8(a2, v3 + v6 - 1);
      }

      float v7 = v9 + v7;
      v5 += v8;
    }

    while (!__CFADD__(v6++, 1LL));
  }

uint64_t sub_1009935E8(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101863840);
    }
    float v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      unint64_t v17 = a2;
      __int16 v18 = 1024;
      int v19 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101863840);
      }
      int v9 = *((_DWORD *)a1 + 1);
      int v12 = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 1024;
      int v15 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  (size_t)&v12,  18);
      uint64_t v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const T &CMQueue<CLPedestrianWorkoutStopDetectorFSM::LimitedStepCountEntry>::operator[](const size_t) const [T = CLPedestrianWorkoutStopDetectorFSM::LimitedStepCountEntry]",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0LL;
  }
  return (uint64_t)&a1[12 * (v4 - v5) + 4];
}

float sub_1009937E4(uint64_t a1, unsigned __int16 *a2, unint64_t a3)
{
  unint64_t v4 = a2[1];
  float v5 = 0.0;
  float v6 = 0.0;
  if (v4 >= a3)
  {
    unsigned int v8 = 0;
    uint64_t v9 = -(uint64_t)a3;
    do
      v8 += *(unsigned __int8 *)(sub_1009935E8(a2, v4 + v9) + 16);
    while (!__CFADD__(v9++, 1LL));
    float v6 = (float)v8;
  }

  if (a3) {
    return v6 / (float)v4;
  }
  return v5;
}

void sub_10099386C(uint64_t a1, unsigned int a2, int a3, double a4, float a5)
{
  if (a2 >= 0xFF) {
    int v8 = 255;
  }
  else {
    int v8 = a2;
  }
  *(double *)&__int128 v45 = a4;
  float v9 = fminf(a5, 12.8);
  BYTE8(v45) = v8;
  *((float *)&v45 + 3) = v9;
  LOBYTE(v46) = a3;
  BYTE1(v46) = 2;
  double v10 = (unsigned __int16 *)(a1 + 40);
  uint64_t v11 = sub_1002E5BC0((unsigned __int16 *)(a1 + 40), &v45);
  unsigned int v12 = *(unsigned __int16 *)(a1 + 42);
  float v13 = -1.0;
  if (v12 < 5)
  {
    float v16 = -1.0;
  }

  else
  {
    sub_1009934F0((uint64_t)v11, v10, 5uLL);
    float v16 = v15;
    unsigned int v12 = *(unsigned __int16 *)(a1 + 42);
    if (v12 >= 5)
    {
      float v13 = sub_1009937E4(v14, v10, 5uLL);
      unsigned int v12 = *(unsigned __int16 *)(a1 + 42);
    }
  }

  BOOL v17 = v16 > 0.75;
  if (v13 > 0.5) {
    BOOL v17 = 1;
  }
  if (v12 <= 4) {
    int v18 = 2;
  }
  else {
    int v18 = v17;
  }
  uint64_t v19 = sub_1009935E8(v10, v12 - 1LL);
  *(_BYTE *)(v19 + 17) = v18;
  unint64_t v20 = *(unsigned __int16 *)(a1 + 42);
  int v21 = v16 > 2.3333;
  if (v20 <= 4) {
    int v21 = 2;
  }
  int v42 = v8;
  int v43 = v21;
  BOOL v22 = v9 > 0.0 && (float)((float)v8 / v9) > 0.75;
  unint64_t v23 = *(void *)(a1 + 32);
  float v24 = -1.0;
  if (v23 <= v20)
  {
    sub_1009934F0(v19, v10, *(void *)(a1 + 32));
    float v26 = v27;
    unint64_t v25 = *(unsigned __int16 *)(a1 + 42);
    unint64_t v23 = *(void *)(a1 + 32);
  }

  else
  {
    unint64_t v25 = *(unsigned __int16 *)(a1 + 42);
    float v26 = -1.0;
  }

  if (v23 <= v25)
  {
    float v24 = sub_1009937E4(v19, v10, v23);
    unint64_t v25 = *(unsigned __int16 *)(a1 + 42);
    unint64_t v23 = *(void *)(a1 + 32);
  }

  int v28 = v22 | a3;
  BOOL v29 = v26 > 0.75;
  if (v24 > 0.5) {
    BOOL v29 = 1;
  }
  unint64_t v30 = v25 - v23;
  int v31 = 2;
  if (v25 >= v23) {
    int v32 = v29;
  }
  else {
    int v32 = 2;
  }
  if (v30 + 2 <= v25)
  {
    int v31 = *(unsigned __int8 *)(sub_1009935E8(v10, v30 + 2) + 17);
    unint64_t v23 = *(void *)(a1 + 32);
  }

  else {
    unint64_t v34 = *(void *)(a1 + 5664) + 1LL;
  }
  *(void *)(a1 + 5sub_10098A93C(v3 + 664) = v34;
  BYTE2(v44) = v28;
  BYTE3(v44) = v18;
  BYTE4(v44) = v43;
  BYTE5(v44) = v32;
  BYTE6(v44) = v34 >= v23;
  HIBYTE(v44) = v31;
  int v41 = *(unsigned __int8 *)(a1 + 24);
  sub_100CCCC8C(a1 + 8, 0, (uint64_t)&v44 + 2);
  int v40 = *(unsigned __int8 *)(a1 + 24);
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_101863820);
  }
  __int16 v35 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
  {
    uint64_t v36 = *(void *)(a1 + 5664);
    int buf = 134222080;
    double v82 = a4;
    __int16 v83 = 1024;
    int v84 = v41;
    __int16 v85 = 1024;
    int v86 = v40;
    __int16 v87 = 1024;
    int v88 = v42;
    __int16 v89 = 2048;
    double v90 = v9;
    __int16 v91 = 1024;
    int v92 = a3;
    __int16 v93 = 2048;
    double v94 = v16;
    __int16 v95 = 2048;
    double v96 = v13;
    __int16 v97 = 2048;
    double v98 = v26;
    __int16 v99 = 2048;
    double v100 = v24;
    __int16 v101 = 2048;
    uint64_t v102 = v36;
    __int16 v103 = 1024;
    int v104 = v31;
    __int16 v105 = 1024;
    BOOL v106 = v34 >= v23;
    __int16 v107 = 1024;
    int v108 = v32;
    __int16 v109 = 1024;
    int v110 = v43;
    __int16 v111 = 1024;
    int v112 = v18;
    __int16 v113 = 1024;
    int v114 = v28;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_INFO,  "PedestrianStop,timestamp,%0.3f,statePrev,%d,state,%d,stepCountDiff,%d,activeTimeDiff,%0.3f,isStroller,%d,stepCaden ceSmallWindow,%0.3f,strollerFractionSmallWindow,%0.3f,stepCadenceLargeWindow,%0.3f,strollerFractionLargeWindow,%0. 3f,fTimeSinceRunTimer,%zd,isFrontSmallWindowActiveInLargeWindow,%d,isTimeSinceRunComplete,%d,isLargeWindowActive,% d,isSmallWindowActiveRun,%d,isSmallWindowActive,%d,isCurrentEpochActive,%d",  (uint8_t *)&buf,  0x84u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101863820);
    }
    uint64_t v37 = *(void *)(a1 + 5664);
    int v47 = 134222080;
    double v48 = a4;
    __int16 v49 = 1024;
    int v50 = v41;
    __int16 v51 = 1024;
    int v52 = v40;
    __int16 v53 = 1024;
    int v54 = v42;
    __int16 v55 = 2048;
    double v56 = v9;
    __int16 v57 = 1024;
    int v58 = a3;
    __int16 v59 = 2048;
    double v60 = v16;
    __int16 v61 = 2048;
    double v62 = v13;
    __int16 v63 = 2048;
    double v64 = v26;
    __int16 v65 = 2048;
    double v66 = v24;
    __int16 v67 = 2048;
    uint64_t v68 = v37;
    __int16 v69 = 1024;
    int v70 = v31;
    __int16 v71 = 1024;
    BOOL v72 = v34 >= v23;
    __int16 v73 = 1024;
    int v74 = v32;
    __int16 v75 = 1024;
    int v76 = v43;
    __int16 v77 = 1024;
    int v78 = v18;
    __int16 v79 = 1024;
    int v80 = v28;
    _os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "PedestrianStop,timestamp,%0.3f,statePrev,%d,state,%d,stepCountDiff,%d,activeTimeDiff,%0.3f,isStroller,%d,stepCaden ceSmallWindow,%0.3f,strollerFractionSmallWindow,%0.3f,stepCadenceLargeWindow,%0.3f,strollerFractionLargeWindow,%0. 3f,fTimeSinceRunTimer,%zd,isFrontSmallWindowActiveInLargeWindow,%d,isTimeSinceRunComplete,%d,isLargeWindowActive,% d,isSmallWindowActiveRun,%d,isSmallWindowActive,%d,isCurrentEpochActive,%d",  COERCE_DOUBLE(&v47),  132,  v40,  v42,  v44,  (_DWORD)v45,  *((double *)&v45 + 1),  v46);
    uint64_t v39 = (int *)v38;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLPedestrianWorkoutStopDetectorFSM::feedStepCountEntry(const CFAbsoluteTime, const uint32_t, const float, const BOOL)",  "%s\n",  v38);
    if (v39 != &buf) {
      free(v39);
    }
  }

BOOL sub_100993DB8(uint64_t a1, uint64_t a2)
{
  return *(_BYTE *)(a2 + 3) == 1 || *(_BYTE *)(a2 + 2) == 1;
}

BOOL sub_100993DDC(uint64_t a1, uint64_t a2)
{
  return !*(_BYTE *)(a2 + 3) || *(_BYTE *)(a2 + 1) == 0;
}

BOOL sub_100993DFC(uint64_t a1, _BYTE *a2)
{
  return !*a2 && !a2[1] && !a2[3] && a2[4] && a2[5] == 0;
}

double sub_100993E34(uint64_t a1)
{
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = &unk_101863718;
  *(void *)(a1 + 16) = 6LL;
  *(_WORD *)(a1 + 24) = 512;
  *(void *)a1 = off_1018637B8;
  *(void *)(a1 + 32) = 117LL;
  *(void *)&double result = 0xEA00000000LL;
  *(void *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0xEA00000000LL;
  *(void *)(a1 + 5sub_10098A93C(v3 + 664) = 0LL;
  return result;
}

BOOL sub_100993E74(uint64_t a1, double *a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)&qword_101999998);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_101999998))
  {
    LODWORD(v7[0]) = 8;
    sub_1002C72A8(qword_101999980, v7, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101999980, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101999998);
  }

  __int16 v8 = 0;
  *(_OWORD *)float v7 = xmmword_1012E1E90;
  memset(&v7[2], 0, 135);
  __int128 v9 = xmmword_1012E1E90;
  uint64_t v10 = 0LL;
  int v11 = 0;
  uint64_t v12 = 0LL;
  v13[0] = 0LL;
  *(void *)((char *)v13 + 5) = 0LL;
  *(void *)((char *)&v13[1] + 6) = 0LL;
  char v14 = 0;
  memset(&v13[3], 0, 24);
  __int128 v15 = xmmword_1012E1E90;
  uint64_t v16 = 0LL;
  int v17 = 0;
  unint64_t v18 = 0xFFEFFFFFFFFFFFFFLL;
  int v29 = 0;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  int v24 = 0;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  memset(v28, 0, sizeof(v28));
  uint64_t v30 = 0LL;
  uint64_t v31 = 0LL;
  unint64_t v32 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v33 = 0LL;
  int v34 = 0;
  uint64_t v40 = 0LL;
  __int16 v41 = 0;
  int v46 = 0;
  int v39 = 0;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v43 = 0u;
  __int128 v42 = 0u;
  char v44 = 0;
  memset(v45, 0, sizeof(v45));
  double v47 = -1.79769313e308;
  __int128 v66 = 0u;
  __int128 v65 = 0u;
  __int128 v64 = 0u;
  __int128 v63 = 0u;
  __int128 v62 = 0u;
  __int128 v61 = 0u;
  __int128 v60 = 0u;
  __int128 v59 = 0u;
  __int128 v58 = 0u;
  __int128 v57 = 0u;
  __int128 v56 = 0u;
  __int128 v55 = 0u;
  __int128 v54 = 0u;
  __int128 v53 = 0u;
  __int128 v52 = 0u;
  __int128 v51 = 0u;
  __int128 v50 = 0u;
  __int128 v49 = 0u;
  __int128 v48 = 0u;
  uint64_t v67 = 0LL;
  unint64_t v68 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v69 = 0u;
  __int128 v70 = 0u;
  __int128 v71 = 0u;
  __int128 v72 = 0u;
  unint64_t v73 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v74 = 0LL;
  int v75 = 0;
  uint64_t v76 = 0LL;
  char v77 = 0;
  unint64_t v78 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v80 = 0LL;
  uint64_t v79 = 0LL;
  uint64_t v81 = 0x80000000800000LL;
  uint64_t v83 = 0LL;
  uint64_t v82 = 0LL;
  __int128 v84 = xmmword_1012E1EA0;
  uint64_t v85 = 0x80000000800000LL;
  __int128 v86 = 0u;
  __int128 v87 = 0u;
  uint64_t v88 = 0LL;
  unint64_t v89 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v90 = 0u;
  __int128 v91 = 0u;
  __int128 v92 = 0u;
  __int128 v93 = 0u;
  __int128 v94 = 0u;
  __int128 v95 = 0u;
  int v96 = 0;
  unint64_t v97 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v98 = 0;
  int v99 = 0;
  unint64_t v100 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v101 = 7LL;
  unint64_t v102 = 0xFFEFFFFFFFFFFFFFLL;
  char v103 = 0;
  uint64_t v105 = 0LL;
  uint64_t v104 = 0LL;
  uint64_t v106 = 0LL;
  if (sub_100CDB578(a2, qword_101999980, (uint64_t)v7))
  {
    float v5 = *((double *)&v61 + 1);
    sub_10099386C(a1, v61, BYTE8(v57) == 1, v47, v5);
  }

  return *(_BYTE *)(a1 + 24) == 3;
}

void sub_100994190(_Unwind_Exception *a1)
{
}

uint64_t sub_1009941B0(uint64_t result, unsigned int a2)
{
  if (a2 <= 3) {
    *(void *)(result + 32) = *(void *)&aU_1[8 * a2];
  }
  *(_DWORD *)(result + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
  *(void *)(result + 5sub_10098A93C(v3 + 664) = 0LL;
  return result;
}

void *sub_1009941D4(void *result)
{
  BOOL *result = off_1018637B8;
  return result;
}

void sub_1009941E4(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

void sub_100994210(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1009942E0(id a1)
{
  qword_1019999A0 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLMagneticAccessorySilo");
}

uint64_t sub_100994394(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100994B90;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_1019999C0 != -1) {
    dispatch_once(&qword_1019999C0, block);
  }
  return qword_1019A18A0;
}

void sub_100994534(id a1)
{
  if ((sub_1004F97F4() & 0x10000000000000LL) != 0)
  {
    unsigned __int8 v2 = 0;
    sub_1012049AC(v3, "EnableMagneticAccessoryService", &v2, 0);
    BOOL v1 = v3[1] != 0;
  }

  else
  {
    BOOL v1 = 0;
  }

  byte_1019999B0 = v1;
}

void sub_1009945FC(uint64_t **a1, int a2, void *a3, void *a4)
{
  if (a4 && ![a4 objectForKeyedSubscript:off_10198E8D8[0]()])
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863A48);
    }
    char v14 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Missing accessory type", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863A48);
    }
    *(_WORD *)std::string __dst = 0;
    LODWORD(v1_Block_object_dispose((const void *)(v1 - 224), 8) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  16LL,  "Missing accessory type",  __dst,  v18);
    float v13 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMagneticAccessory::onNfcEvent(BOOL, NSString *, NSDictionary *)",  "%s\n",  v15);
LABEL_38:
    if (v13 != buf) {
      free(v13);
    }
    return;
  }

  unsigned __int8 v8 = objc_msgSend( objc_msgSend(a4, "objectForKeyedSubscript:", off_10198E8D8[0]()),  "unsignedIntValue");
  if (![a3 UTF8String])
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863A48);
    }
    int v11 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Invalid UUID", buf, 2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863A48);
    }
    *(_WORD *)std::string __dst = 0;
    LODWORD(v1_Block_object_dispose((const void *)(v1 - 224), 8) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  16LL,  "Invalid UUID",  __dst,  v18);
    float v13 = (uint8_t *)v12;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMagneticAccessory::onNfcEvent(BOOL, NSString *, NSDictionary *)",  "%s\n",  v12);
    goto LABEL_38;
  }

  sub_1010DDBC0(buf, (char *)[a3 UTF8String]);
  uint64_t v9 = sub_10008E8D0((uint64_t)(a1 + 16), (const void **)buf);
  uint64_t v10 = a1 + 17;
  if (a2)
  {
    if (v10 == (uint64_t **)v9)
    {
      sub_1010DDBC0(buf, (char *)[a3 UTF8String]);
      *(void *)std::string __dst = buf;
      *((_BYTE *)sub_100997730(a1 + 16, (const void **)buf, (uint64_t)&unk_1012CF090, (_OWORD **)__dst) + 56) = v8;
      goto LABEL_20;
    }

    return;
  }

  if (v10 != (uint64_t **)v9)
  {
    unsigned __int8 v8 = *(_BYTE *)(v9 + 56);
    sub_1003F9708(a1 + 16, v9);
LABEL_20:
    __dst[256] = v8;
    __dst[257] = a2;
    strncpy(__dst, (const char *)[a3 UTF8String], 0x100uLL);
    *(_DWORD *)int buf = 1;
    memcpy(&buf[4], __dst, 0x102uLL);
    sub_1009954D8((uint64_t)a1);
    HIDWORD(v1_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
    ((void (*)(uint64_t **, char *, uint8_t *, uint64_t, uint64_t, void))(*a1)[19])( a1,  (char *)&v18 + 4,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
    return;
  }

  if (qword_1019345C0 != -1) {
    dispatch_once(&qword_1019345C0, &stru_101863A48);
  }
  uint64_t v16 = (os_log_s *)qword_1019345C8;
  if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "Received detachment event without prior attachment event.",  buf,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863A48);
    }
    *(_WORD *)std::string __dst = 0;
    LODWORD(v1_Block_object_dispose((const void *)(v1 - 224), 8) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  16LL,  "Received detachment event without prior attachment event.",  __dst,  v18);
    float v13 = (uint8_t *)v17;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMagneticAccessory::onNfcEvent(BOOL, NSString *, NSDictionary *)",  "%s\n",  v17);
    goto LABEL_38;
  }

void sub_100994B4C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, int a47, __int16 a48, char a49, char a50)
{
  if (a50 < 0) {
    operator delete(*v50);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100994B90(uint64_t a1)
{
  unsigned __int8 v2 = operator new(0xA0uLL);
  uint64_t result = sub_100994BDC((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A18A0 = (uint64_t)v2;
  return result;
}

void sub_100994BC8(_Unwind_Exception *a1)
{
}

uint64_t sub_100994BDC(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100994EA4(a1, "CLMagneticAccessory", a2);
  *(void *)uint64_t v3 = off_1018638B0;
  *(void *)(v3 + 136) = 0LL;
  *(void *)(v3 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v3 + 136;
  *(void *)(v3 + 144) = 0LL;
  *(void *)(v3 + 112) = 0LL;
  *(void *)(v3 + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(_DWORD *)(v3 + 152) = -1;
  unsigned __int8 v4 = (int *)(v3 + 152);
  *(_BYTE *)(v3 + 156) = 0;
  Class v5 = (Class)off_10198E8C8[0]();
  if (v5)
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863A48);
    }
    float v6 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "ACCConnectionInfo is available.", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101863A48);
      }
      v14[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  0LL,  "ACCConnectionInfo is available.",  v14,  2);
      int v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMagneticAccessory::CLMagneticAccessory(id<CLIntersiloUniverse>)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }

    *(void *)(a1 + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = -[CLMagneticAccessoryAdapter initWithMagneticAccessory:]( objc_alloc(&OBJC_CLASS___CLMagneticAccessoryAdapter),  "initWithMagneticAccessory:",  a1);
    *(void *)(a1 + 112) = -[objc_class sharedInstance](v5, "sharedInstance");
    float v7 = *(void **)(a1 + 40);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    _DWORD v13[2] = sub_100994F40;
    void v13[3] = &unk_10181D3D0;
    _DWORD v13[4] = a1;
    [v7 async:v13];
  }

  unsigned __int8 v8 = (dispatch_queue_s *)[*(id *)(a1 + 40) queue];
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_1009952A8;
  handler[3] = &unk_101832780;
  handler[4] = a1;
  notify_register_dispatch("com.apple.system.powersources.source", v4, v8, handler);
  return a1;
}

void sub_100994E80(_Unwind_Exception *a1)
{
}

uint64_t sub_100994EA4(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101863A98;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  return a1;
}

void sub_100994F24(_Unwind_Exception *exception_object)
{
}

id sub_100994F40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100994FE4(v1);
  sub_1009951C4(v1);
  uint64_t v3 = *(void **)(v1 + 112);
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v5 = off_10198E8D0[0]();
  float v6 = &off_1018D3D40;
  return objc_msgSend( v3,  "registerDelegate:withFilter:",  v2,  +[NSDictionary dictionaryWithObjects:forKeys:count:]( NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v6,  &v5,  1));
}

void sub_100994FE4(uint64_t a1)
{
  uint64_t v13 = a1;
  uint64_t v1 = objc_autoreleasePoolPush();
  uint64_t v2 = sub_1002F8DDC();
  if (sub_1002A6F20(v2, (uint64_t)@"ConnectedMagneticAccessoryNfc", (CFTypeRef *)&v20))
  {
    uint64_t v3 = v20;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id v4 = [v20 countByEnumeratingWithState:&v16 objects:v22 count:16];
    if (v4)
    {
      uint64_t v5 = *(void *)v17;
      float v6 = (uint64_t **)(v13 + 128);
      do
      {
        for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v17 != v5) {
            objc_enumerationMutation(v3);
          }
          unsigned __int8 v8 = *(void **)(*((void *)&v16 + 1) + 8LL * (void)i);
          unsigned __int8 v9 = objc_msgSend(objc_msgSend(v3, "objectForKeyedSubscript:", v8, v13), "unsignedIntValue");
          sub_1010DDBC0(__p, (char *)[v8 UTF8String]);
          __int128 v21 = __p;
          *((_BYTE *)sub_100997730(v6, (const void **)__p, (uint64_t)&unk_1012CF090, (_OWORD **)&v21) + 56) = v9;
          if (v15 < 0) {
            operator delete(__p[0]);
          }
        }

        id v4 = [v3 countByEnumeratingWithState:&v16 objects:v22 count:16];
      }

      while (v4);
    }
  }

  uint64_t v10 = sub_1002F8DDC();
  int v11 = sub_1002A6FD4(v10, (uint64_t)@"ConnectedMagneticAccessoryPowerInduction", (BOOL *)__p);
  if (LOBYTE(__p[0])) {
    int v12 = v11;
  }
  else {
    int v12 = 0;
  }
  if (v12 == 1) {
    *(_BYTE *)(v13 + 156) = 1;
  }
  objc_autoreleasePoolPop(v1);
}

void sub_1009951A0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009951C4(uint64_t a1)
{
  uint64_t v2 = v7;
  if (v7 != v8)
  {
    do
    {
      uint64_t v3 = v2 + 4;
      sub_1009945FC( (uint64_t **)a1,  0,  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3),  0LL);
      id v4 = v2[1];
      if (v4)
      {
        do
        {
          uint64_t v5 = (char **)v4;
          id v4 = *(char **)v4;
        }

        while (v4);
      }

      else
      {
        do
        {
          uint64_t v5 = (char **)v2[2];
          BOOL v6 = *v5 == (char *)v2;
          uint64_t v2 = v5;
        }

        while (!v6);
      }

      uint64_t v2 = v5;
    }

    while (v5 != v8);
  }

  sub_1009952B0((_BYTE *)a1);
  sub_1000229D4((uint64_t)&v7, v8[0]);
}

void sub_10099528C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
}

_BYTE *sub_1009952A8(uint64_t a1)
{
  return sub_1009952B0(*(_BYTE **)(a1 + 32));
}

_BYTE *sub_1009952B0(_BYTE *a1)
{
  uint64_t v2 = (const __CFDictionary *)off_10198E8E0();
  if (!v2) {
    return sub_10099562C(a1, 0);
  }
  uint64_t v3 = v2;
  if (!CFDictionaryContainsKey(v2, @"FamilyCode"))
  {
LABEL_12:
    LODWORD(v5) = 0;
    goto LABEL_13;
  }

  Value = (const __CFNumber *)CFDictionaryGetValue(v3, @"FamilyCode");
  uint64_t v5 = Value;
  if (Value)
  {
    CFTypeID v6 = CFGetTypeID(Value);
    if (v6 == CFNumberGetTypeID())
    {
      if (CFNumberGetValue(v5, kCFNumberIntType, &valuePtr)) {
        BOOL v7 = (valuePtr + 536723450) >= 3;
      }
      else {
        BOOL v7 = 1;
      }
      LODWORD(v5) = !v7;
      goto LABEL_13;
    }

    goto LABEL_12;
  }

uint64_t sub_100995394(uint64_t a1)
{
  *(void *)a1 = off_101863A98;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100995408(uint64_t a1)
{
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  uint64_t result = notify_is_valid_token(*(_DWORD *)(a1 + 152));
  if ((_DWORD)result)
  {
    uint64_t result = notify_cancel(*(_DWORD *)(a1 + 152));
    *(_DWORD *)(a1 + 152) = -1;
  }

  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  return result;
}

void *sub_100995460@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

void sub_1009954D8(uint64_t a1)
{
  uint64_t v2 = objc_autoreleasePoolPush();
  id v3 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  id v4 = *(void **)(a1 + 128);
  uint64_t v5 = (void *)(a1 + 136);
  if (v4 != (void *)(a1 + 136))
  {
    do
    {
      CFTypeID v6 = v4 + 4;
      BOOL v7 = +[NSNumber numberWithUnsignedChar:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedChar:",  *((unsigned __int8 *)v4 + 56));
      objc_msgSend( v3,  "setObject:forKeyedSubscript:",  v7,  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v6));
      unsigned __int8 v8 = (void *)v4[1];
      if (v8)
      {
        do
        {
          unsigned __int8 v9 = v8;
          unsigned __int8 v8 = (void *)*v8;
        }

        while (v8);
      }

      else
      {
        do
        {
          unsigned __int8 v9 = (void *)v4[2];
          BOOL v10 = *v9 == (void)v4;
          id v4 = v9;
        }

        while (!v10);
      }

      id v4 = v9;
    }

    while (v9 != v5);
  }

  uint64_t v11 = sub_1002F8DDC();
  sub_1002AB3DC(v11);
  uint64_t v12 = sub_1002F8DDC();
  (*(void (**)(uint64_t))(*(void *)v12 + 944LL))(v12);
  objc_autoreleasePoolPop(v2);
}

uint64_t sub_1009955D8(uint64_t a1)
{
  uint64_t v2 = sub_1002F8DDC();
  +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 156));
  sub_1002AB3DC(v2);
  uint64_t v3 = sub_1002F8DDC();
  return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 944LL))(v3);
}

_BYTE *sub_10099562C(_BYTE *result, int a2)
{
  if (result[156] != a2)
  {
    uint64_t v2 = (uint64_t)result;
    result[156] = a2;
    int v21 = 0;
    __int128 v20 = 0u;
    __int128 v19 = 0u;
    __int128 v18 = 0u;
    __int128 v17 = 0u;
    __int128 v16 = 0u;
    __int128 v15 = 0u;
    __int128 v14 = 0u;
    __int128 v13 = 0u;
    __int128 v12 = 0u;
    __int128 v11 = 0u;
    __int128 v10 = 0u;
    __int128 v9 = 0u;
    __int128 v8 = 0u;
    __int128 v7 = 0u;
    __int128 v6 = 0u;
    __int128 v5 = 0u;
    int v3 = 0;
    int v4 = 2;
    LOBYTE(v5) = a2;
    (*(void (**)(_BYTE *, int *, int *, uint64_t, uint64_t, void))(*(void *)result + 152LL))( result,  &v3,  &v4,  1LL,  0xFFFFFFFFLL,  0LL);
    return (_BYTE *)sub_1009955D8(v2);
  }

  return result;
}

void sub_10099570C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  __int128 v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLMagneticAccessory");
  sub_1009957D4((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *__int128 v8 = off_101863990;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1009957A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1009957D4(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_101863BE8;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    __int128 v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

uint64_t sub_1009958A8(uint64_t a1)
{
  *(void *)a1 = off_1018638B0;
  sub_1000229D4(a1 + 128, *(char **)(a1 + 136));
  return sub_100995394(a1);
}

void sub_1009958DC(uint64_t a1)
{
  *(void *)a1 = off_1018638B0;
  sub_1000229D4(a1 + 128, *(char **)(a1 + 136));
  uint64_t v2 = (void *)sub_100995394(a1);
  operator delete(v2);
}

void sub_100995914(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        __int128 v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)int buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101863A08);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        __int128 v11 = (void *)(a1 + 8);
        *(_DWORD *)int buf = 136446466;
        int v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101863A08);
        }
        __int128 v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        __int128 v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLMagneticAccessory_Type::Notification, CLMagneticAccessory_Type::NotificationData>::r emoveClient(int) [Notification_T = CLMagneticAccessory_Type::Notification, NotificationData_T = CLMagneticAcce ssory_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_100995B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_10198E8E8);
}

uint64_t sub_100995B9C(uint64_t a1, int a2, int *a3, char *a4)
{
  int v42 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)__int128 v43 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          int v24 = (uint64_t *)v18;
        }
        else {
          int v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          int v29 = (uint64_t *)v25;
        }
        else {
          int v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v41 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)&buf[0] = &v42;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        uint64_t v47 = 0LL;
        memset(buf, 0, sizeof(buf));
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          __int128 v36 = sub_1009987F8(buf);
          sub_100997C24((_BYTE *)a1, (uint64_t)v43, (uint64_t)&v41, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v41 = a1 + 64;
        char v30 = byte_10198E8E9;
        HIDWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v17;
        *(void *)&buf[0] = (char *)&v40 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v30;
        HIDWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *a3;
        *(void *)&buf[0] = (char *)&v40 + 4;
        uint64_t v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *a3;
        *(void *)&buf[0] = (char *)&v40 + 4;
        uint64_t v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)&buf[0] = &v42;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        LODWORD(buf[0]) = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v43 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101863A08);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    LODWORD(buf[0]) = 136446466;
    *(void *)((char *)buf + 4) = v15;
    WORD6(buf[0]) = 1026;
    *(_DWORD *)((char *)buf + 14) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      (uint8_t *)buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101863A08);
    }
    __int128 v37 = (void *)(a1 + 8);
    *(_DWORD *)__int128 v43 = 136446466;
    *(void *)&v43[4] = v37;
    __int16 v44 = 1026;
    int v45 = a2;
    LODWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v43,
      v40);
    int v39 = (char *)v38;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLMagneticAccessory_Type::Notification, CLMagneticAccessory_Type::NotificationData>::regis terForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLMagneticAccessory_ Type::Notification, NotificationData_T = CLMagneticAccessory_Type::NotificationData, NotificationInfo_T = char, Re gistrationInfo_T = char]",  "%s\n",  v38);
    return 0LL;
  }

  return result;
}

BOOL sub_100996024(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      __int128 v9 = (uint64_t *)v5;
    }
    else {
      __int128 v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101863A08);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)int buf = 136446466;
      char v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101863A08);
      }
      int v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      uint64_t v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      int v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLMagneticAccessory_Type::Notification, CLMagneticAccessory_Type::NotificationData>::cli entRegistered(int, const Notification_T &) [Notification_T = CLMagneticAccessory_Type::Notification, Notificatio nData_T = CLMagneticAccessory_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_1009962A4(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101863A08);
              }
              uint64_t v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)int buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                __int128 v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101863A08);
                }
                int v29 = a1 + 8;
                if (a1[31] < 0) {
                  int v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                int v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLMagneticAccessory_Type::Notification, CLMagneticAccessory_Type::Notification Data>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLMagneticAccessory_Ty pe::Notification, NotificationData_T = CLMagneticAccessory_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_10099662C(uint64_t a1, int *a2, void *__dst)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 == v3) {
    return 0LL;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0LL;
  }
  int v11 = *(const void **)(v7 + 64);
  if (!v11) {
    return 0LL;
  }
  memcpy(__dst, v11, 0x108uLL);
  return 1LL;
}

uint64_t sub_10099669C(uint64_t a1, int *a2, const void *a3)
{
  int v6 = operator new(0x120uLL);
  v6[2] = 0LL;
  *int v6 = off_101863B78;
  v6[1] = 0LL;
  memcpy(v6 + 3, a3, 0x108uLL);
  *(void *)&__int128 v13 = v6 + 3;
  *((void *)&v13 + 1) = v6;
  int v12 = *a2;
  uint64_t v14 = &v12;
  uint64_t v7 = sub_10023347C((uint64_t **)(a1 + 56), &v12, (uint64_t)&unk_1012CF090, &v14);
  sub_10005F550((uint64_t)(v7 + 8), &v13);
  int v8 = (std::__shared_weak_count *)*((void *)&v13 + 1);
  if (*((void *)&v13 + 1))
  {
    BOOL v9 = (unint64_t *)(*((void *)&v13 + 1) + 8LL);
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  return 1LL;
}

void sub_100996784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100996798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = 0LL;
  memset(v5, 0, sizeof(v5));
  return (*(uint64_t (**)(uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v5,  a3,  a4,  0LL);
}

void sub_100996828(uint64_t a1, unsigned int *a2, const void *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    unint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101863A08);
    }
    int v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v12 = (void *)(a1 + 8);
      __int128 v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)int buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2082;
      *(void *)&_BYTE buf[20] = "activity";
      __int16 v67 = 2082;
      unint64_t v68 = v12;
      __int16 v69 = 2050;
      __int128 v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)__int128 v71 = &v71[8];
      memset(&v71[8], 0, 24);
      __int128 v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      __int16 v27 = operator new(0x120uLL);
      _OWORD v27[2] = 0LL;
      *__int16 v27 = off_101863B78;
      v27[1] = 0LL;
      memcpy(v27 + 3, a3, 0x108uLL);
      *(void *)int buf = v27 + 3;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      int v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        int v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    __int16 v31 = sub_1009977C8(a3);
    if (a5 == -1)
    {
      sub_100997850((void *)a1, (int *)a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          __int128 v37 = (uint64_t *)v33;
        }
        else {
          __int128 v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v64 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      uint64_t v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          __int128 v43 = (unint64_t *)v38;
        }
        else {
          __int128 v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          uint64_t v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        __int128 v63 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101863A08);
        }
        char v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          int v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            int v46 = v71;
          }
          else {
            int v46 = *(_BYTE **)v71;
          }
          *(_DWORD *)int buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&_BYTE buf[18] = 2080;
          *(void *)&_BYTE buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101863A08);
          }
          uint64_t v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v62 >= 0) {
            __int128 v49 = __p;
          }
          else {
            __int128 v49 = (void **)__p[0];
          }
          *(_DWORD *)__int128 v71 = 136315650;
          *(void *)&v71[4] = v47;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&_BYTE v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v49;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v60);
          __int128 v51 = v50;
          if (v62 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMagneticAccessory_Type::Notification, CLMagneticAccessory_Type::NotificationData>: :notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLMagneticAccessory_Type::Notification, NotificationData_T = CLMagneticAccessory_Type::NotificationData, N otificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v51);
          if (v51 != buf) {
            free(v51);
          }
        }

        goto LABEL_83;
      }

      __int128 v63 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v54 = v40[3].n128_i64[0];
      __int128 v52 = v40 + 3;
      __int128 v53 = (__n128 *)v54;
      if (!v54) {
        goto LABEL_60;
      }
      int v55 = *(_DWORD *)(v34 + 32);
      __int128 v56 = v52;
      do
      {
        int v57 = v53[1].n128_i32[3];
        BOOL v58 = v57 < v55;
        if (v57 >= v55) {
          __int128 v59 = v53;
        }
        else {
          __int128 v59 = (__n128 *)&v53->n128_i8[8];
        }
        if (!v58) {
          __int128 v56 = v53;
        }
        __int128 v53 = (__n128 *)v59->n128_u64[0];
      }

      while (v59->n128_u64[0]);
      sub_100997C24((_BYTE *)a1, (uint64_t)&v64, (uint64_t)&v63, v31);
    }

void sub_100996E6C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100996EB8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101863A08);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)int buf = 136315138;
      __int128 v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101863A08);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMagneticAccessory_Type::Notification, CLMagneticAccessory_Type::NotificationData>::lis tClients() [Notification_T = CLMagneticAccessory_Type::Notification, NotificationData_T = CLMagneticAccessory_Ty pe::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101863A08);
    }
    uint64_t v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)int buf = 136315394;
      __int128 v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101863A08);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      unint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMagneticAccessory_Type::Notification, CLMagneticAccessory_Type::NotificationData>::lis tClients() [Notification_T = CLMagneticAccessory_Type::Notification, NotificationData_T = CLMagneticAccessory_Ty pe::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    unint64_t v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      int v11 = (void *)(a1 + 8);
      do
      {
        int v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101863A08);
            }
            __int128 v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)int buf = 136315650;
              __int128 v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101863A08);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMagneticAccessory_Type::Notification, CLMagneticAccessory_Type::NotificationDa ta>::listClients() [Notification_T = CLMagneticAccessory_Type::Notification, NotificationData_T = CLMagn eticAccessory_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                int v12 = v18;
              }

              while (!v19);
            }

            int v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            unint64_t v10 = v26;
          }

          while (!v19);
        }

        unint64_t v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_100997464(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100998798(a1);
  operator delete(v1);
}

id sub_100997478(uint64_t a1, int a2, void *a3)
{
  id result = sub_100997D50(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_1009974C4(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

Class sub_1009974F0()
{
  if (qword_1019999D0 != -1) {
    dispatch_once(&qword_1019999D0, &stru_101863A28);
  }
  Class result = objc_getClass("ACCConnectionInfo");
  qword_1019999C8 = (uint64_t)result;
  off_10198E8C8[0] = sub_10099754C;
  return result;
}

uint64_t sub_10099754C()
{
  return qword_1019999C8;
}

void sub_100997558(id a1)
{
  qword_1019999D8 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/CoreAccessories.framework/CoreAccessories", 2);
}

void sub_100997580(id a1)
{
  qword_1019345C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Accessory");
}

uint64_t sub_1009975AC()
{
  if (qword_1019999D0 != -1) {
    dispatch_once(&qword_1019999D0, &stru_101863A28);
  }
  unsigned __int8 v0 = (uint64_t *)dlsym((void *)qword_1019999D8, "ACCConnectionInfoFilterAllowConnectionType");
  if (v0)
  {
    uint64_t result = *v0;
    qword_1019999E0 = result;
  }

  else
  {
    uint64_t result = qword_1019999E0;
  }

  off_10198E8D0[0] = sub_100997624;
  return result;
}

uint64_t sub_100997624()
{
  return qword_1019999E0;
}

uint64_t sub_100997630()
{
  if (qword_1019999D0 != -1) {
    dispatch_once(&qword_1019999D0, &stru_101863A28);
  }
  unsigned __int8 v0 = (uint64_t *)dlsym((void *)qword_1019999D8, "kACCProperties_Endpoint_NFC_Type");
  if (v0)
  {
    uint64_t result = *v0;
    qword_1019999E8 = result;
  }

  else
  {
    uint64_t result = qword_1019999E8;
  }

  off_10198E8D8[0] = sub_1009976A8;
  return result;
}

uint64_t sub_1009976A8()
{
  return qword_1019999E8;
}

uint64_t sub_1009976B4()
{
  if (qword_1019999F0 != -1) {
    dispatch_once(&qword_1019999F0, &stru_101863A68);
  }
  off_10198E8E0 = (uint64_t (*)())dlsym((void *)qword_1019999F8, "IOPSCopyExternalPowerAdapterDetails");
  return off_10198E8E0();
}

void sub_100997708(id a1)
{
  qword_1019999F8 = (uint64_t)dlopen("/System/Library/Frameworks/IOKit.framework/IOKit", 2);
}

_OWORD *sub_100997730(uint64_t **a1, const void **a2, uint64_t a3, _OWORD **a4)
{
  int v6 = (void **)sub_1000227E8((uint64_t)a1, &v12, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    int v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x40uLL);
    uint64_t v9 = *a4;
    uint64_t v10 = *((void *)*a4 + 2);
    _OWORD v7[2] = **a4;
    *((void *)v7 + 6) = v10;
    v9[1] = 0LL;
    _DWORD v9[2] = 0LL;
    void *v9 = 0LL;
    *((_BYTE *)v7 + 56) = 0;
    sub_1000085FC(a1, v12, v8, (uint64_t *)v7);
  }

  return v7;
}

CLCppContainer *sub_1009977C8(const void *a1)
{
  uint64_t v2 = operator new(0x108uLL);
  memcpy(v2, a1, 0x108uLL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100997D40;
  v4[3] = &unk_10181D3D0;
  _BYTE v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  264LL);
}

void sub_100997850(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        __int128 v51 = v9;
        id v13 = sub_100997D50(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              __int128 v50 = v19;
              sub_100997C24(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              int v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  int v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              __int128 v51 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                int v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    int v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      BOOL v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      BOOL v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int128 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      __int128 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      int v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              __int128 v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101863A08);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)int buf = 136446466;
                int v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101863A08);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                __int128 v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                uint64_t v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLMagneticAccessory_Type::Notification, CLMagneticAccessory_Type::NotificationData>::i nvokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLMagneticAccessory_T ype::Notification, NotificationData_T = CLMagneticAccessory_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_100997C24(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100997D50(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    uint64_t v14 = (int *)(*(void *)a2 + 32LL);
    uint64_t v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    uint64_t result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_100997D00(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101863B78;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100997D14(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101863B78;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100997D40(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_100997D50(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100997DC8(a1);
  }
  objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v4) & 1) != 0) {
    return sub_100998150(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100997DC8(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_1009984FC((uint64_t)&v8 + 7, a1);
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101863BB8);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x8000000101342186LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101863BB8);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101863BB8);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)int buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x8000000101342186LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101863BB8);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMagneticAccessory_Type::NotificationData, Call bacunint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100998150(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101863BB8);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101342186LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101863BB8);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101863BB8);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)int buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101342186LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101863BB8);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMagneticAccessory_Type::NotificationData, Call bacunint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_1009984FC(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D3D58))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)264) {
      sub_101255558();
    }
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
  }

  return [a2 cppObjectPtr];
}

void sub_100998570(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t *sub_10099859C(uint64_t *a1, const void ***a2)
{
  a1[2] = 0LL;
  a1[1] = 0LL;
  *a1 = (uint64_t)(a1 + 1);
  sub_1009985F0(a1, *a2, a2 + 1);
  return a1;
}

void sub_1009985D8(_Unwind_Exception *a1)
{
}

uint64_t *sub_1009985F0(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    int v6 = result + 1;
    do
    {
      uint64_t result = sub_100998674(v5, v6, v4 + 4, (uint64_t)(v4 + 4));
      uint64_t v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = (const void ***)v7;
          uint64_t v7 = (const void **)*v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          uint64_t v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          uint64_t v4 = (const void **)v8;
        }

        while (!v9);
      }

      uint64_t v4 = (const void **)v8;
    }

    while (v8 != a3);
  }

  return result;
}

uint64_t *sub_100998674(uint64_t **a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  int v6 = (uint64_t **)sub_1003F9A10(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1009986F4((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1000085FC(a1, (uint64_t)v10, v6, v8);
    return v8;
  }

  return result;
}

_BYTE *sub_1009986F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 224), 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t result = sub_1010DD48C(result, *(void **)a2, *(void *)(a2 + 8));
  }

  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a2;
    *((void *)v6 + 6) = *(void *)(a2 + 16);
  }

  v6[56] = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10099877C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0LL;
  sub_100022988(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t sub_100998798(uint64_t a1)
{
  *(void *)a1 = &off_101863BE8;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *id v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_1009987F8(const void *a1)
{
  id v2 = operator new(0x108uLL);
  memcpy(v2, a1, 0x108uLL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100998880;
  v4[3] = &unk_10181D3D0;
  _BYTE v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  264LL);
}

void sub_100998880(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_1009988F8(uint64_t a1)
{
  id v2 = -[CLWifiAssociatedApCentroidMO initWithContext:]( [CLWifiAssociatedApCentroidMO alloc],  "initWithContext:",  [*(id *)(a1 + 32) managedObjectContext]);
  -[CLWifiAssociatedApCentroidMO setMac:]( v2,  "setMac:",  -[NSString initWithString:]( [NSString alloc],  "initWithString:",  [*(id *)(a1 + 40) mac]));
  [*(id *)(a1 + 40) latitude];
  -[CLWifiAssociatedApCentroidMO setLatitude:](v2, "setLatitude:");
  [*(id *)(a1 + 40) longitude];
  -[CLWifiAssociatedApCentroidMO setLongitude:](v2, "setLongitude:");
  [*(id *)(a1 + 40) altitude];
  -[CLWifiAssociatedApCentroidMO setAltitude:](v2, "setAltitude:");
  [*(id *)(a1 + 40) horizontalAccuracy];
  -[CLWifiAssociatedApCentroidMO setHorizontalAccuracy:](v2, "setHorizontalAccuracy:");
  [*(id *)(a1 + 40) verticalAccuracy];
  -[CLWifiAssociatedApCentroidMO setVerticalAccuracy:](v2, "setVerticalAccuracy:");
  -[CLWifiAssociatedApCentroidMO setReach:](v2, "setReach:", [*(id *)(a1 + 40) reach]);
  -[CLWifiAssociatedApCentroidMO setLoiType:]( v2,  "setLoiType:",  -[NSString initWithString:]( [NSString alloc],  "initWithString:",  [*(id *)(a1 + 40) loiType]));
  [*(id *)(a1 + 40) stationaryTimeInSeconds];
  -[CLWifiAssociatedApCentroidMO setStationaryTimeInSeconds:](v2, "setStationaryTimeInSeconds:");
  [*(id *)(a1 + 40) lastUpdated];
  return -[CLWifiAssociatedApCentroidMO setLastUpdated:](v2, "setLastUpdated:");
}

void sub_100998EA0()
{
  if (sub_100231608())
  {
    unsigned __int8 v0 = operator new(0x68uLL);
    sub_100E61F40((uint64_t)v0, (uint64_t)"CLAccessoryGyro", 2, 32, 122);
    *(void *)unsigned __int8 v0 = &off_101863C30;
    v0[25] = 0x800000;
    qword_1019A18A8 = (uint64_t)v0;
  }

void sub_100998F00(_Unwind_Exception *a1)
{
}

uint64_t sub_100998F14()
{
  if (qword_101999A00 != -1) {
    dispatch_once(&qword_101999A00, &stru_101863C00);
  }
  return qword_1019A18A8;
}

void sub_100998F5C(void *a1)
{
  uint64_t v1 = sub_100E61F94(a1);
  operator delete(v1);
}

double sub_100998F70(uint64_t a1, int a2, double *a3)
{
  if (a2)
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863C88);
    }
    uint64_t v4 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)int buf = 67240192;
      LODWORD(v19) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "[AccessoryGyro] Unrecognized update interval notification %{public}d",  buf,  8u);
    }

    double v5 = 0.0;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101863C88);
      }
      int v16 = 67240192;
      LODWORD(v17) = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  17LL,  "[AccessoryGyro] Unrecognized update interval notification %{public}d",  &v16,  8);
      uint64_t v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual CFTimeInterval CLAccessoryGyro::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  else
  {
    sub_100E62108(a1);
    if (*a3 > 0.0)
    {
      (*(void (**)(double))(**(void **)(a1 + 32) + 16LL))(*a3);
      (*(void (**)(void))(**(void **)(a1 + 32) + 16LL))();
      *(_BYTE *)(a1 + 3sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
    }

    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863C88);
    }
    id v10 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = *(void *)a3;
      *(_DWORD *)int buf = 134349056;
      uint64_t v19 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "[AccessoryGyro] Setting update interval to %{public}f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101863C88);
      }
      uint64_t v13 = *(void *)a3;
      int v16 = 134349056;
      uint64_t v17 = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  1LL,  "[AccessoryGyro] Setting update interval to %{public}f",  &v16,  12);
      unint64_t v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFTimeInterval CLAccessoryGyro::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    sub_10071A73C(*(void *)(a1 + 32), *a3);
    return *a3;
  }

  return v5;
}

double sub_10099931C(uint64_t a1, int a2, double *a3)
{
  if (a2)
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863C88);
    }
    uint64_t v4 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)int buf = 67240192;
      LODWORD(v19) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "[AccessoryGyro] Unrecognized batch interval notification %{public}d",  buf,  8u);
    }

    double v5 = 0.0;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101863C88);
      }
      int v16 = 67240192;
      LODWORD(v17) = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  17LL,  "[AccessoryGyro] Unrecognized batch interval notification %{public}d",  &v16,  8);
      uint64_t v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual CFTimeInterval CLAccessoryGyro::minimumBatchIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  else
  {
    sub_100E62108(a1);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863C88);
    }
    id v10 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_INFO))
    {
      double v11 = *a3;
      *(_DWORD *)int buf = 134349056;
      double v19 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "[AccessoryGyro] Setting batch interval to %{public}f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101863C88);
      }
      uint64_t v13 = *(void *)a3;
      int v16 = 134349056;
      uint64_t v17 = v13;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  1LL,  "[AccessoryGyro] Setting batch interval to %{public}f",  &v16,  12);
      unint64_t v15 = (uint8_t *)v14;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFTimeInterval CLAccessoryGyro::minimumBatchIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v14);
      if (v15 != buf) {
        free(v15);
      }
    }

    sub_10071A7C0(*(void *)(a1 + 32), *a3);
    return *a3;
  }

  return v5;
}

void sub_100999644(uint64_t a1, uint64_t a2)
{
  if (!*(_BYTE *)(a1 + 30))
  {
    *(_BYTE *)(a1 + 3sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 1;
    int v13 = 0;
    sub_1010DDBC0(v14, "N/A");
    sub_1010DDBC0(__p, "N/A");
    int v18 = 0;
    if (sub_100E62278(a1, (uint64_t)&v13))
    {
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101863C88);
      }
      uint64_t v3 = (os_log_s *)qword_1019345C8;
      if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_DEBUG))
      {
        if (v15 >= 0) {
          uint64_t v4 = v14;
        }
        else {
          uint64_t v4 = (void **)v14[0];
        }
        if (v17 >= 0) {
          double v5 = __p;
        }
        else {
          double v5 = (void **)__p[0];
        }
        *(_DWORD *)int buf = 67240707;
        int v25 = v13;
        __int16 v26 = 2081;
        uint64_t v27 = v4;
        __int16 v28 = 2081;
        int v29 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "[AccessoryGyro] config,side,%{public}d,configuration,%{private}s,serialNumber,%{private}s",  buf,  0x1Cu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345C0 != -1) {
          dispatch_once(&qword_1019345C0, &stru_101863C88);
        }
        if (v15 >= 0) {
          uint64_t v7 = v14;
        }
        else {
          uint64_t v7 = (void **)v14[0];
        }
        if (v17 >= 0) {
          uint64_t v8 = __p;
        }
        else {
          uint64_t v8 = (void **)__p[0];
        }
        v19[0] = 67240707;
        v19[1] = v13;
        __int16 v20 = 2081;
        BOOL v21 = v7;
        __int16 v22 = 2081;
        int v23 = v8;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  2LL,  "[AccessoryGyro] config,side,%{public}d,configuration,%{private}s,serialNumber,%{private}s",  v19,  28);
        id v10 = (uint8_t *)v9;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLAccessoryGyro::onGyroData(const Sample &)", "%s\n", v9);
        if (v10 != buf) {
          free(v10);
        }
      }

      sub_1006DD528(a1, 1LL, (uint64_t)&v13, 64LL);
    }

    else
    {
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101863C88);
      }
      int v6 = (os_log_s *)qword_1019345C8;
      if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "[AccessoryGyro] Service not found!", buf, 2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345C0 != -1) {
          dispatch_once(&qword_1019345C0, &stru_101863C88);
        }
        LOWORD(v19[0]) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  17LL,  "[AccessoryGyro] Service not found!",  v19,  2);
        uint64_t v12 = (uint8_t *)v11;
        sub_10029211C("Generic", 1LL, 0, 0LL, "void CLAccessoryGyro::onGyroData(const Sample &)", "%s\n", v11);
        if (v12 != buf) {
          free(v12);
        }
      }
    }

    if (v17 < 0) {
      operator delete(__p[0]);
    }
    if (v15 < 0) {
      operator delete(v14[0]);
    }
  }

void sub_100999A30( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
}

void sub_100999A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (IOHIDEventGetType(a4) == 20)
  {
    float FloatValue = IOHIDEventGetFloatValue(a4, 1310720LL);
    float v19 = FloatValue;
    float v7 = IOHIDEventGetFloatValue(a4, 1310721LL);
    float v20 = v7;
    float v8 = IOHIDEventGetFloatValue(a4, 1310722LL);
    float v21 = v8;
    unint64_t TimeStamp = IOHIDEventGetTimeStamp(a4);
    double v10 = sub_101171C7C(TimeStamp);
    double v18 = v10;
    unsigned __int16 IntegerValue = IOHIDEventGetIntegerValue(a4, 1310725LL);
    unsigned __int16 v23 = IntegerValue;
    uint64_t v12 = sub_100FACB74();
    uint64_t v22 = v12;
    float v13 = *(float *)(a1 + 100);
    float v24 = v13;
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863C88);
    }
    unint64_t v14 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int buf = 67241728;
      int v39 = IntegerValue;
      __int16 v40 = 2050;
      double v41 = FloatValue;
      __int16 v42 = 2050;
      double v43 = v7;
      __int16 v44 = 2050;
      double v45 = v8;
      __int16 v46 = 2050;
      double v47 = v13;
      __int16 v48 = 2050;
      uint64_t v49 = v12;
      __int16 v50 = 2050;
      double v51 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "[AccessoryGyro] seq,%{public}d,x,%{public}20.20f,y,%{public}20.20f,z,%{public}20.20f,temp,%{public}20.20f,sensor Time,%{public}llu,timestamp,%{public}20.20f",  buf,  0x44u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101863C88);
      }
      v25[0] = 67241728;
      v25[1] = IntegerValue;
      __int16 v26 = 2050;
      double v27 = FloatValue;
      __int16 v28 = 2050;
      double v29 = v7;
      __int16 v30 = 2050;
      double v31 = v8;
      __int16 v32 = 2050;
      double v33 = v13;
      __int16 v34 = 2050;
      uint64_t v35 = v12;
      __int16 v36 = 2050;
      double v37 = v10;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  2LL,  "[AccessoryGyro] seq,%{public}d,x,%{public}20.20f,y,%{public}20.20f,z,%{public}20.20f,temp,%{public}20.20f,sensor Time,%{public}llu,timestamp,%{public}20.20f",  v25,  68);
      char v17 = (uint8_t *)v16;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLAccessoryGyro::onEventData(void *, void *, IOHIDEventRef)",  "%s\n",  v16);
      if (v17 != buf) {
        free(v17);
      }
    }

    sub_100999644(a1, (uint64_t)&v18);
  }

  else if (IOHIDEventGetType(a4) == 15)
  {
    float v15 = IOHIDEventGetFloatValue(a4, 983040LL);
    *(float *)(a1 + 10sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v15;
  }

void sub_100999D98(id a1)
{
  qword_1019345C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Accessory");
}

double sub_100999DC4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  return result;
}

double sub_100999DDC(unint64_t *a1, double a2)
{
  double v5 = a2;
  id v2 = a1 + 1;
  unint64_t v3 = a1[6];
  if (v3 >= *a1)
  {
    ++a1[5];
    a1[6] = v3 - 1;
    sub_1002109A4((uint64_t)(a1 + 1), 1);
  }

  return sub_100355FA8(v2, &v5);
}

uint64_t sub_100999E3C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 48);
  if (v1)
  {
    ++*(void *)(result + 40);
    *(void *)(result + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v1 - 1;
    return sub_1002109A4(result + 8, 1);
  }

  return result;
}

double sub_100999E68(void *a1)
{
  uint64_t v1 = a1[2];
  if (a1[3] == v1)
  {
    unint64_t v2 = a1[6];
  }

  else
  {
    unint64_t v3 = a1[5];
    unint64_t v2 = a1[6];
    uint64_t v4 = (double **)(v1 + 8 * (v3 >> 9));
    double v5 = *v4;
    int v6 = &(*v4)[v3 & 0x1FF];
    uint64_t v7 = *(void *)(v1 + (((v2 + v3) >> 6) & 0x3FFFFFFFFFFFFF8LL)) + 8 * ((v2 + v3) & 0x1FF);
    if (v6 != (double *)v7)
    {
      double v8 = 0.0;
      do
      {
        double v9 = *v6++;
        double v10 = v9;
        if ((char *)v6 - (char *)v5 == 4096)
        {
          double v11 = v4[1];
          ++v4;
          double v5 = v11;
          int v6 = v11;
        }

        double v8 = v8 + v10;
      }

      while (v6 != (double *)v7);
      if (v2) {
        return v8 / (double)v2;
      }
      return 0.0;
    }
  }

  double v8 = 0.0;
  if (v2) {
    return v8 / (double)v2;
  }
  return 0.0;
}

uint64_t sub_100999EF8(uint64_t a1, void *a2)
{
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
  sub_101204164((unsigned __int8 *)(a1 + 56), "GyroBiasLoggerDailyReportTimeout", &qword_1013421D0, 0);
  sub_101204164((unsigned __int8 *)(a1 + 88), "GyroBiasLoggerBiasEstimationTimeout", &qword_1013421D8, 0);
  sub_101204164((unsigned __int8 *)(a1 + 112), "GyroBiasLoggerMinTimeBetweenFitSessions", &qword_1013421E0, 0);
  *(void *)(a1 + 136) = 0xFF7FFFFF7F7FFFFFLL;
  *(_BYTE *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 156) = 0;
  *(_BYTE *)(a1 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
  *(_BYTE *)(a1 + 172) = 0;
  *(_BYTE *)(a1 + 232) = 0;
  uint64_t v4 = (int)*(double *)(a1 + 96);
  *(void *)(a1 + 256) = a2;
  *(void *)(a1 + 264) = off_10184DB98;
  *(void *)(a1 + 272) = v4;
  *(_OWORD *)(a1 + 28sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(void *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 336) = off_10184DB98;
  *(void *)(a1 + 344) = v4;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(void *)(a1 + 40sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(void *)(a1 + 245) = 0x800000007FFFFFFFLL;
  *(void *)(a1 + 237) = 0xFF7FFFFF7F7FFFFFLL;
  *(void *)(a1 + 412) = 0xFF7FFFFF7F7FFFFFLL;
  *(void *)(a1 + 176) = 0xFF7FFFFF7F7FFFFFLL;
  *(void *)(a1 + 184) = 0LL;
  *(_DWORD *)(a1 + 192) = 0;
  *(void *)(a1 + 216) = 0LL;
  *(void *)(a1 + 224) = 0LL;
  *(void *)(a1 + 20sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10099A094;
  v6[3] = &unk_10181FA90;
  _DWORD v6[4] = a2;
  void v6[5] = a1;
  objc_msgSend(objc_msgSend(a2, "silo"), "async:", v6);
  return a1;
}

void sub_10099A070(_Unwind_Exception *a1)
{
  v1[42] = v2;
  sub_10046E180(v1 + 45);
  v1[33] = v2;
  sub_10046E180(v1 + 36);
  _Unwind_Resume(a1);
}

id sub_10099A094(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "silo"), "newTimer");
  *(void *)(v2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _OWORD v7[2] = sub_10099A160;
  v7[3] = &unk_10181D3D0;
  v7[4] = v2;
  [v3 setHandler:v7];
  [*(id *)(v2 + 48) setNextFireDelay:*(double *)(v2 + 64) interval:*(double *)(v2 + 64)];
  id v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "silo"), "newTimer");
  *(void *)(v2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v4;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10099A41C;
  v6[3] = &unk_10181D3D0;
  _DWORD v6[4] = v2;
  [v4 setHandler:v6];
  return [*(id *)(v2 + 80) setNextFireDelay:*(double *)(v2 + 96) interval:*(double *)(v2 + 96)];
}

double sub_10099A160(uint64_t a1)
{
  uint64_t v1 = *(float32x2_t **)(a1 + 32);
  sub_10099A190(v1);
  sub_10099A258((uint64_t)v1);
  return sub_10099A380((uint64_t)v1);
}

float32x2_t *sub_10099A190(float32x2_t *result)
{
  uint64_t v1 = result;
  uint64_t v2 = result + 20;
  if (result[21].i8[4] && result[19].i8[4])
  {
    double v3 = vabds_f32(result[19].f32[0], result[21].f32[0]) * 1000.0;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472LL;
    v4[2] = sub_10099ADC4;
    v4[3] = &unk_101863CA8;
    float64x2_t v5 = vmulq_f64(vcvtq_f64_f32(vabd_f32(result[18], result[20])), (float64x2_t)vdupq_n_s64(0x408F400000000000uLL));
    double v6 = v3;
    double result = (float32x2_t *)AnalyticsSendEventLazy(@"com.apple.CoreMotion.GyroBiasDailyDelta", v4);
  }

  *uint64_t v2 = v1[18];
  *(float32x2_t *)((char *)v2 + 5) = *(float32x2_t *)((char *)v1 + 149);
  return result;
}

double sub_10099A258(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 200);
  double v3 = *(double *)(a1 + 200);
  if (v3 >= 0.0)
  {
    double v4 = *(double *)(a1 + 208);
    if (v4 >= 0.0)
    {
      double v5 = *(double *)(a1 + 216);
      if (v5 >= 0.0)
      {
        unsigned int v6 = *(_DWORD *)(a1 + 192);
        if (v6)
        {
          uint64_t v7 = *(void *)(a1 + 184);
          v8.i64[0] = v7;
          v8.i64[1] = HIDWORD(v7);
          float64x2_t v9 = vdivq_f64( vmulq_f64(vcvtq_f64_u64(v8), (float64x2_t)vdupq_n_s64(0x4059000000000000uLL)),  (float64x2_t)vdupq_lane_s64(COERCE__INT64((double)v6), 0));
        }

        else
        {
          float64x2_t v9 = 0uLL;
        }

        if (v3 < 0.6) {
          double v3 = *(double *)(a1 + 64);
        }
        if (v4 < 1.0) {
          double v4 = *(double *)(a1 + 64);
        }
        if (v5 < 1.0) {
          double v5 = *(double *)(a1 + 64);
        }
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 3221225472LL;
        _OWORD v11[2] = sub_10099AC24;
        void v11[3] = &unk_101827B30;
        v11[4] = a1;
        float64x2_t v12 = v9;
        double v13 = v3;
        double v14 = v4;
        double v15 = v5;
        AnalyticsSendEventLazy(@"com.apple.CoreMotion.GyroBiasDailyStatistics", v11);
      }
    }
  }

  *(void *)(a1 + 412) = 0xFF7FFFFF7F7FFFFFLL;
  double result = -1.40444743e306;
  *(void *)(a1 + 176) = 0xFF7FFFFF7F7FFFFFLL;
  *(void *)(a1 + 184) = 0LL;
  *(_DWORD *)(a1 + 192) = 0;
  v2[1] = 0LL;
  v2[2] = 0LL;
  *uint64_t v2 = 0LL;
  return result;
}

double sub_10099A380(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 245) != 0x7FFFFFFF && *(_DWORD *)(a1 + 249) != 0x80000000)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    _DWORD v3[2] = sub_10099B018;
    unsigned __int8 v3[3] = &unk_101820718;
    v3[4] = a1;
    AnalyticsSendEventLazy(@"com.apple.CoreMotion.OISDailyStatistics", v3);
    *(void *)(a1 + 245) = 0x800000007FFFFFFFLL;
    double result = -1.40444743e306;
    *(void *)(a1 + 237) = 0xFF7FFFFF7F7FFFFFLL;
  }

  return result;
}

void sub_10099A41C(uint64_t a1)
{
}

void sub_10099A424(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 328);
  if (v1)
  {
    uint64_t v2 = (void *)(a1 + 264);
    float v3 = *(float *)(a1 + 280) / (float)v1;
    double v4 = (void *)(a1 + 336);
    unint64_t v5 = *(void *)(a1 + 400);
    if (v5) {
      float v6 = *(float *)(a1 + 352) / (float)v5;
    }
    else {
      float v6 = -3.4028e38;
    }
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    _OWORD v7[2] = sub_10099AE84;
    v7[3] = &unk_101827B10;
    v7[4] = a1;
    float v8 = v3;
    float v9 = v6;
    AnalyticsSendEventLazy(@"com.apple.CoreMotion.GyroBiasEstimationTemperature", v7);
    sub_10074DFF8(v2);
    sub_10074DFF8(v4);
  }

uint64_t sub_10099A4D8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 256) silo];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10099A568;
  v4[3] = &unk_10181D3D0;
  void v4[4] = a1;
  [v2 async:v4];
  *(void *)(a1 + 336) = off_10184DB98;
  sub_10046E180((void *)(a1 + 360));
  *(void *)(a1 + 264) = off_10184DB98;
  sub_10046E180((void *)(a1 + 288));
  return a1;
}

void sub_10099A568(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  [*(id *)(v1 + 48) invalidate];

  *(void *)(v1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  [*(id *)(v1 + 80) invalidate];

  *(void *)(v1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
}

uint64_t sub_10099A5B0(uint64_t result, double a2)
{
  uint64_t v3 = result;
  if (*(_BYTE *)(result + 40))
  {
    double v4 = a2 - *(double *)(result + 32);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_10099A65C;
    v6[3] = &unk_101820718;
    *(double *)&_DWORD v6[4] = v4;
    double result = AnalyticsSendEventLazy(@"com.apple.CoreMotion.GyroCalibrationDatabaseUpdate", v6);
    double v5 = 0.0;
    if (a2 >= 1.0)
    {
      double v5 = *(double *)(v3 + 216);
      if (v4 >= v5) {
        double v5 = v4;
      }
    }

    *(double *)(v3 + 216) = v5;
  }

  *(double *)(v3 + 32) = a2;
  *(_BYTE *)(v3 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 1;
  return result;
}

NSDictionary *sub_10099A65C(uint64_t a1)
{
  id v2 = @"timeBetweenDatabaseUpdates";
  uint64_t v3 = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v3,  &v2,  1LL);
}

NSDictionary *sub_10099A6DC(uint64_t a1)
{
  id v2 = @"timeBetweenFits";
  uint64_t v3 = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v3,  &v2,  1LL);
}

double *sub_10099A75C(double *result, double *a2)
{
  int v2 = *(_DWORD *)a2;
  if (*(_DWORD *)a2)
  {
    double v4 = result;
    if (*((_BYTE *)result + 24)) {
      double v5 = a2[2] - result[2];
    }
    else {
      double v5 = -1.0;
    }
    if (v2 != 1)
    {
      if (v2 == 2)
      {
        if (*((_BYTE *)result + 24))
        {
          __dst[0] = _NSConcreteStackBlock;
          __dst[1] = 3221225472LL;
          __dst[2] = sub_10099A6DC;
          __dst[3] = &unk_101820718;
          *(double *)&__dst[4] = v5;
          AnalyticsSendEventLazy(@"com.apple.CoreMotion.GyroBiasFit", __dst);
          double v6 = v4[26];
          if (v6 < v5) {
            double v6 = v5;
          }
          v4[26] = v6;
        }

        double result = (double *)memcpy(__dst, (char *)a2 + 33, 0x11AuLL);
        for (uint64_t i = 0LL; i != 8; ++i)
        {
        }

        float v8 = *(float *)&__dst[28] + *((float *)&__dst[24] + i);
        *((float *)v4 + 34) = *((float *)&__dst[24] + 1) - *(float *)&__dst[28];
        *((float *)v4 + 35) = v8;
      }

NSDictionary *sub_10099A974(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v6[0] = @"timeBetweenFits";
  if (*(_BYTE *)(v2 + 24)) {
    uint64_t v3 = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 40));
  }
  else {
    uint64_t v3 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v6[1] = @"timeSinceLastMiniCal";
  v7[0] = v3;
  else {
    double v4 = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:");
  }
  v7[1] = v4;
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v7,  v6,  2LL);
}

void sub_10099AA48(uint64_t a1, float a2, double a3)
{
  float v16 = a2;
  if (*(_BYTE *)(a1 + 8))
  {
    double v4 = a3 - *(double *)a1;
    *(double *)(a1 + 20sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v4;
  }

  *(double *)a1 = a3;
  *(_BYTE *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  float v5 = *(float *)(a1 + 176);
  float v6 = *(float *)(a1 + 180);
  if (v5 > a2) {
    float v5 = a2;
  }
  if (v6 < a2) {
    float v6 = a2;
  }
  *(float *)(a1 + 176) = v5;
  *(float *)(a1 + 18sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v6;
  ++*(_DWORD *)(a1 + 192);
  float v7 = *(float *)(a1 + 136);
  float v8 = *(float *)(a1 + 140);
  if (v7 > a2 || v8 < a2)
  {
    float v10 = vabds_f32(v7, a2);
    float v11 = vabds_f32(v8, a2);
    if (v11 >= v10) {
      float v11 = v10;
    }
    float v15 = v11;
    sub_10074DC40(a1 + 336, &v15);
    ++*(_DWORD *)(a1 + 188);
  }

  else
  {
    ++*(_DWORD *)(a1 + 184);
  }

  sub_10074DC40(a1 + 264, &v16);
  if (*(_BYTE *)(a1 + 232))
  {
    double v12 = CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 224);
    if (v12 < 0.0) {
      double v12 = 0.0;
    }
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    _DWORD v13[2] = sub_10099AB84;
    void v13[3] = &unk_1018486F8;
    float v14 = v16;
    *(double *)&_DWORD v13[4] = v12;
    AnalyticsSendEventLazy(@"com.apple.CoreMotion.GyroBiasEstimationOutOfBoxExperience", v13);
    *(_BYTE *)(a1 + 232) = 0;
  }

NSDictionary *sub_10099AB84(uint64_t a1, double a2)
{
  v4[0] = @"outOfBoxFirstConvergedTemperature";
  LODWORD(a2) = *(_DWORD *)(a1 + 40);
  v4[1] = @"outOfBoxTimeToFirstConvergedBiasEstimate";
  v5[0] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", a2);
  v5[1] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v4,  2LL);
}

NSDictionary *sub_10099AC24(uint64_t a1, double a2)
{
  uint64_t v3 = *(_DWORD **)(a1 + 32);
  v10[0] = @"dailyMinObservedTemperature";
  LODWORD(a2) = v3[103];
  v11[0] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", a2);
  v10[1] = @"dailyMaxObservedTemperature";
  LODWORD(v4) = v3[104];
  v11[1] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v4);
  _OWORD v10[2] = @"dailyBiasEstimationPercentageUsingFitInterpolation";
  else {
    float v5 = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:");
  }
  _OWORD v11[2] = v5;
  v10[3] = @"dailyBiasEstimationPercentageUsingFitExtrapolation";
  else {
    float v6 = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:");
  }
  void v11[3] = v6;
  v10[4] = @"dailyMaxTimeBetweenGyroBiasEstimations";
  v11[4] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 56));
  void v10[5] = @"dailyMaxTimeBetweenNonlinearFits";
  void v11[5] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 64));
  void v10[6] = @"dailyMaxTimeBetweenDataBaseUpdates";
  v11[6] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 72));
  v10[7] = @"dailyMinBiasEstimateTemperature";
  LODWORD(v7) = v3[44];
  v11[7] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v7);
  v10[8] = @"dailyMaxBiasEstimateTemperature";
  LODWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = v3[45];
  _WORD v11[8] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v8);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v11,  v10,  9LL);
}

NSDictionary *sub_10099ADC4(double *a1)
{
  v3[0] = @"dailyChangeInInterceptX";
  v4[0] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a1[4]);
  v3[1] = @"dailyChangeInInterceptY";
  v4[1] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a1[5]);
  _DWORD v3[2] = @"dailyChangeInInterceptZ";
  void v4[2] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a1[6]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

NSDictionary *sub_10099AE84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v14[0] = @"logSequenceID";
  v15[0] = +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  (unint64_t)(CFAbsoluteTimeGetCurrent() * 1000000.0));
  v14[1] = @"gyroBiasEstimationTemperature";
  LODWORD(v3) = *(_DWORD *)(a1 + 40);
  v15[1] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v3);
  _DWORD v14[2] = @"temperatureDistanceFromFit";
  float v4 = *(float *)(a1 + 44);
  if (v4 > -3.4028e38 && v4 < 3.4028e38) {
    float v6 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  else {
    float v6 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  double v15[2] = v6;
  v14[3] = @"gyroBiasEstimationMinDatabaseTemperature";
  float v7 = *(float *)(v2 + 136);
  if (v7 > -100.0 && v7 < 100.0) {
    double v9 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  else {
    double v9 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  void v15[3] = v9;
  v14[4] = @"gyroBiasEstimationMaxDatabaseTemperature";
  float v10 = *(float *)(v2 + 140);
  if (v10 > -100.0 && v10 < 100.0) {
    double v12 = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:");
  }
  else {
    double v12 = +[NSNull null](&OBJC_CLASS___NSNull, "null");
  }
  v15[4] = v12;
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v15,  v14,  5LL);
}

NSDictionary *sub_10099B018(uint64_t a1, double a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v5[0] = @"dailyMinGyroBiasError";
  LODWORD(a2) = *(_DWORD *)(v2 + 237);
  v6[0] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", a2);
  v5[1] = @"dailyMaxGyroBiasError";
  LODWORD(v3) = *(_DWORD *)(v2 + 241);
  v6[1] = +[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v3);
  void v5[2] = @"dailyMinGyroTemperature";
  void v6[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(v2 + 245));
  void v5[3] = @"dailyMaxGyroTemperature";
  v6[3] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(v2 + 249));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v6,  v5,  4LL);
}

uint64_t sub_10099B0F4(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 12);
  if (v2 >= *(_DWORD *)(result + 245)) {
    int v2 = *(_DWORD *)(result + 245);
  }
  *(_DWORD *)(result + 245) = v2;
  int v3 = *(_DWORD *)(result + 249);
  if (v3 <= *(_DWORD *)(a2 + 16)) {
    int v3 = *(_DWORD *)(a2 + 16);
  }
  *(_DWORD *)(result + 249) = v3;
  float v4 = *(float *)(a2 + 4);
  *(float *)(result + 237) = v4;
  float v5 = *(float *)(result + 241);
  *(float *)(result + 241) = v5;
  return result;
}

void sub_10099B148(uint64_t a1)
{
  *(_BYTE *)(a1 + 232) = 1;
  *(CFAbsoluteTime *)(a1 + 224) = CFAbsoluteTimeGetCurrent();
}

uint64_t sub_10099B174(uint64_t result, uint64_t a2)
{
  float v2 = *(float *)(a2 + 4);
  *(float *)(result + 412) = v2;
  float v3 = *(float *)(result + 416);
  *(float *)(result + 416) = v3;
  return result;
}

uint64_t sub_10099BA60(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    float v4 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    float v5 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    float v6 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    float v7 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    double v8 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    double v9 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    float v10 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    float v11 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    double v12 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    int v13 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    float v14 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    float v15 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
    do
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        break;
      }
      char v16 = 0;
      unsigned int v17 = 0;
      unint64_t v18 = 0LL;
      while (1)
      {
        uint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v21 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20;
        v18 |= (unint64_t)(v21 & 0x7F) << v16;
        if ((v21 & 0x80) == 0) {
          goto LABEL_12;
        }
        v16 += 7;
        BOOL v22 = v17++ >= 9;
        if (v22)
        {
          unint64_t v18 = 0LL;
          int v23 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_14;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
      int v23 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v18 = 0LL;
      }
LABEL_14:
      if (v23 || (v18 & 7) == 4) {
        break;
      }
      switch((v18 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + v4[458]) |= 0x10u;
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 <= 0xFFFFFFFFFFFFFFF7LL && v25 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v26 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 8;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v26 = 0LL;
          }

          uint64_t v79 = v5[459];
          goto LABEL_130;
        case 2u:
          *(_WORD *)(a1 + v4[458]) |= 0x200u;
          unint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v34 <= 0xFFFFFFFFFFFFFFFBLL && v34 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v35 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v35 = 0;
          }

          uint64_t v80 = v6[460];
          goto LABEL_121;
        case 3u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0LL;
          *(_WORD *)(a1 + v4[458]) |= 0x100u;
          while (2)
          {
            uint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v41 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                BOOL v22 = v37++ >= 9;
                if (v22)
                {
                  LODWORD(v3_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
                  goto LABEL_90;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v3_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
          }
LABEL_90:
          uint64_t v76 = v7[461];
          goto LABEL_107;
        case 4u:
          *(_WORD *)(a1 + v4[458]) |= 0x40u;
          unint64_t v42 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v42 <= 0xFFFFFFFFFFFFFFFBLL && v42 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v35 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v42);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v42 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v35 = 0;
          }

          uint64_t v80 = v8[462];
          goto LABEL_121;
        case 5u:
          *(_WORD *)(a1 + v4[458]) |= 0x80u;
          unint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v43 <= 0xFFFFFFFFFFFFFFFBLL && v43 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            int v35 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v43 + 4;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            int v35 = 0;
          }

          uint64_t v80 = v9[463];
LABEL_121:
          *(_DWORD *)(a1 + v8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v35;
          continue;
        case 6u:
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v38 = 0LL;
          *(_WORD *)(a1 + v4[458]) |= 0x20u;
          while (2)
          {
            uint64_t v46 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v47 = v46 + 1;
            if (v46 == -1 || v47 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v48 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v46);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v47;
              v38 |= (unint64_t)(v48 & 0x7F) << v44;
              if (v48 < 0)
              {
                v44 += 7;
                BOOL v22 = v45++ >= 9;
                if (v22)
                {
                  LODWORD(v3_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
                  goto LABEL_94;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v3_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
          }
LABEL_94:
          uint64_t v76 = v10[464];
          goto LABEL_107;
        case 7u:
          *(_WORD *)(a1 + v4[458]) |= 2u;
          unint64_t v49 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v49 <= 0xFFFFFFFFFFFFFFF7LL && v49 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v26 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v49);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v49 + 8;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v26 = 0LL;
          }

          uint64_t v79 = v11[465];
          goto LABEL_130;
        case 8u:
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v52 = 0LL;
          *(_WORD *)(a1 + v4[458]) |= 0x800u;
          while (2)
          {
            uint64_t v53 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v54 = v53 + 1;
            if (v53 == -1 || v54 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v55 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v53);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v54;
              v52 |= (unint64_t)(v55 & 0x7F) << v50;
              if (v55 < 0)
              {
                v50 += 7;
                BOOL v22 = v51++ >= 9;
                if (v22)
                {
                  uint64_t v52 = 0LL;
                  goto LABEL_98;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v52 = 0LL;
          }
LABEL_98:
          BOOL v77 = v52 != 0;
          uint64_t v78 = v12[466];
          goto LABEL_112;
        case 9u:
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v58 = 0LL;
          *(_WORD *)(a1 + v4[458]) |= 0x1000u;
          while (2)
          {
            uint64_t v59 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v61 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v59);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v60;
              v58 |= (unint64_t)(v61 & 0x7F) << v56;
              if (v61 < 0)
              {
                v56 += 7;
                BOOL v22 = v57++ >= 9;
                if (v22)
                {
                  uint64_t v58 = 0LL;
                  goto LABEL_102;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v58 = 0LL;
          }
LABEL_102:
          BOOL v77 = v58 != 0;
          uint64_t v78 = v13[467];
          goto LABEL_112;
        case 0xAu:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v38 = 0LL;
          *(_WORD *)(a1 + v4[458]) |= 0x400u;
          while (2)
          {
            uint64_t v64 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            }

            else
            {
              char v66 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v64);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v65;
              v38 |= (unint64_t)(v66 & 0x7F) << v62;
              if (v66 < 0)
              {
                v62 += 7;
                BOOL v22 = v63++ >= 9;
                if (v22)
                {
                  LODWORD(v3_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
                  goto LABEL_106;
                }

                continue;
              }
            }

            break;
          }

          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v3_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
          }
LABEL_106:
          uint64_t v76 = v14[468];
LABEL_107:
          *(_DWORD *)(a1 + v76) = v38;
          continue;
        case 0xBu:
          *(_WORD *)(a1 + v4[458]) |= 1u;
          unint64_t v67 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v67 <= 0xFFFFFFFFFFFFFFF7LL && v67 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v26 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v67);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v67 + 8;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v26 = 0LL;
          }

          uint64_t v79 = v15[469];
          goto LABEL_130;
        case 0xCu:
          *(_WORD *)(a1 + v4[458]) |= 8u;
          unint64_t v68 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v68 <= 0xFFFFFFFFFFFFFFF7LL && v68 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v26 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v68);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v68 + 8;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v26 = 0LL;
          }

          uint64_t v79 = 32LL;
          goto LABEL_130;
        case 0xDu:
          char v69 = 0;
          unsigned int v70 = 0;
          uint64_t v71 = 0LL;
          *(_WORD *)(a1 + v4[458]) |= 0x2000u;
          break;
        case 0xEu:
          *(_WORD *)(a1 + v4[458]) |= 4u;
          unint64_t v75 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v75 <= 0xFFFFFFFFFFFFFFF7LL && v75 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v26 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v75);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v75 + 8;
          }

          else
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v26 = 0LL;
          }

          uint64_t v79 = 24LL;
LABEL_130:
          *(void *)(a1 + v79) = v26;
          continue;
        default:
          double v27 = v5;
          __int16 v28 = v6;
          double v29 = v4;
          __int16 v30 = v7;
          double v31 = v8;
          uint64_t v32 = a1;
          uint64_t result = PBReaderSkipValueWithTag(a2);
          float v15 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
          a1 = v32;
          double v9 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
          double v8 = v31;
          float v10 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
          float v7 = v30;
          float v11 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
          float v4 = v29;
          int v13 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
          float v6 = v28;
          double v12 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
          float v5 = v27;
          float v14 = &OBJC_IVAR___CLCountryTracker__allowSimulatedLocations;
          if (!(_DWORD)result) {
            return result;
          }
          continue;
      }

      while (1)
      {
        uint64_t v72 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v73 = v72 + 1;
        if (v72 == -1 || v73 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v74 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v72);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v73;
        v71 |= (unint64_t)(v74 & 0x7F) << v69;
        if ((v74 & 0x80) == 0) {
          goto LABEL_109;
        }
        v69 += 7;
        BOOL v22 = v70++ >= 9;
        if (v22)
        {
          uint64_t v71 = 0LL;
          goto LABEL_111;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_109:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v71 = 0LL;
      }
LABEL_111:
      BOOL v77 = v71 != 0;
      uint64_t v78 = 74LL;
LABEL_112:
      *(_BYTE *)(a1 + v7_Block_object_dispose((const void *)(v1 - 224), 8) = v77;
    }

    while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length));
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

double sub_10099D49C(uint64_t a1)
{
  *(void *)a1 = off_101863CD8;
  double result = 0.0;
  *(_OWORD *)(a1 + 180sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 1816) = 0u;
  *(_BYTE *)(a1 + 1752) = 0;
  *(_OWORD *)(a1 + 172sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 1736) = 0u;
  *(_OWORD *)(a1 + 176sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 1776) = 0u;
  *(_BYTE *)(a1 + 1792) = 0;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0x4600000000LL;
  *(_OWORD *)(a1 + 1696) = 0u;
  *(_BYTE *)(a1 + 1712) = 0;
  return result;
}

void *sub_10099D4EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(unsigned __int8 *)(a1 + 1712);
  float v4 = *(float *)(a1 + 1728);
  double v5 = *(double *)(a1 + 1704);
  BOOL v7 = v5 > 600.0 && v3 != 0;
  if (v4 != 0.0) {
    BOOL v7 = 0;
  }
  snprintf( __str,  0x200uLL,  "valid15s,%d,dur15s,%f,cadence15s,%f,stroller15s,%f,up15s,%f,down15s,%f,drive15s,%f,cycle15s,%f,valid1m,%d,dur1m,%f,c adence1m,%f,stroller1m,%f,up1m,%f,down1m,%f,drive1m,%f,cycle1m,%f,valid3m,%d,dur3m,%f,cadence3m,%f,stroller3m,%f,up3 m,%f,down3m,%f,drive3m,%f,cycle3m,%f,lastActive,%f,stopTimer,%f,stopped,%d",  v3,  *(double *)(a1 + 1720),  v4,  *(float *)(a1 + 1732),  *(float *)(a1 + 1736),  *(float *)(a1 + 1740),  *(float *)(a1 + 1744),  *(float *)(a1 + 1748),  *(unsigned __int8 *)(a1 + 1752),  *(double *)(a1 + 1760),  *(float *)(a1 + 1768),  *(float *)(a1 + 1772),  *(float *)(a1 + 1776),  *(float *)(a1 + 1780),  *(float *)(a1 + 1784),  *(float *)(a1 + 1788),  *(unsigned __int8 *)(a1 + 1792),  *(double *)(a1 + 1800),  *(float *)(a1 + 1808),  *(float *)(a1 + 1812),  *(float *)(a1 + 1816),  *(float *)(a1 + 1820),  *(float *)(a1 + 1824),  *(float *)(a1 + 1828),  *(double *)(a1 + 1696),  v5,  v7);
  return sub_1010DDBC0(a2, __str);
}

double sub_10099D674(uint64_t a1, int a2)
{
  if (a2 != 3)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101863D10);
    }
    uint64_t v3 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "Only hiking is supported here!", buf, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101863D10);
      }
      v7[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "Only hiking is supported here!",  v7,  2);
      float v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLHikingStopDetector::setStopModeAndReset(StopMode)",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 1696) = 0u;
  return result;
}

uint64_t sub_10099D818(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 1712) || !*(_BYTE *)(a1 + 1752) || !*(_BYTE *)(a1 + 1792)) {
    return 1LL;
  }
  float v1 = *(float *)(a1 + 1728);
  BOOL v2 = v1 > 45.0 && *(float *)(a1 + 1768) > 45.0 && *(float *)(a1 + 1808) > 29.7;
  BOOL v4 = *(float *)(a1 + 1776) >= 0.9 || *(float *)(a1 + 1780) >= 0.9;
  BOOL v5 = *(float *)(a1 + 1784) == 0.0;
  BOOL v6 = *(float *)(a1 + 1788) == 0.0;
  char v7 = v1 > 140.0 || v2;
  int v8 = 1;
  return v6 & v8 & v5;
}

uint64_t sub_10099D92C(uint64_t a1, uint64_t a2)
{
  __int128 v4 = v24;
  *(_OWORD *)(a1 + 1712) = *(_OWORD *)buf;
  *(_OWORD *)(a1 + 172_Block_object_dispose((const void *)(v1 - 224), 8) = v4;
  *(void *)(a1 + 1744) = v25;
  sub_10099E160(a1, 0x17uLL, (uint64_t)buf);
  *(void *)(a1 + 1784) = v25;
  __int128 v5 = v24;
  *(_OWORD *)(a1 + 1752) = *(_OWORD *)buf;
  *(_OWORD *)(a1 + 176_Block_object_dispose((const void *)(v1 - 224), 8) = v5;
  sub_10099E160(a1, 0x46uLL, (uint64_t)buf);
  __int128 v6 = v24;
  *(_OWORD *)(a1 + 1792) = *(_OWORD *)buf;
  *(_OWORD *)(a1 + 180_Block_object_dispose((const void *)(v1 - 224), 8) = v6;
  *(void *)(a1 + 1824) = v25;
  if (sub_10099D818(a1))
  {
    *(void *)(a1 + 1704) = 0LL;
    *(void *)(a1 + 1696) = *(void *)(a2 + 296);
  }

  else if (*(float *)(a1 + 1768) < 45.0)
  {
    *(double *)(a1 + 1704) = *(double *)(a1 + 1704) + 2.55999994;
  }

  sub_10099D4EC(a1, __p);
  if (*(double *)(a1 + 1704) > 600.0 && *(_BYTE *)(a1 + 1712) && *(float *)(a1 + 1728) == 0.0)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101863D10);
    }
    char v7 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = __p;
      if (v20 < 0) {
        int v8 = (void **)__p[0];
      }
      *(_DWORD *)int buf = 136315138;
      *(void *)&uint8_t buf[4] = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "PedestrianStop DETECTED!,%s", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_101863D10);
      }
      char v16 = __p;
      if (v20 < 0) {
        char v16 = (void **)__p[0];
      }
      int v21 = 136315138;
      BOOL v22 = v16;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "PedestrianStop DETECTED!,%s",  (const char *)&v21);
      unint64_t v18 = (uint8_t *)v17;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual std::pair<BOOL, CFAbsoluteTime> CLHikingStopDetector::update(const CLWorkoutPredictorInputs &)",  "%s\n",  v17);
      if (v18 != buf) {
        free(v18);
      }
    }

    uint64_t v9 = 1LL;
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_101863D10);
  }
  float v10 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
  {
    float v11 = __p;
    if (v20 < 0) {
      float v11 = (void **)__p[0];
    }
    *(_DWORD *)int buf = 136315138;
    *(void *)&uint8_t buf[4] = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "PedestrianStop,%s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_101863D10);
    }
    int v13 = __p;
    if (v20 < 0) {
      int v13 = (void **)__p[0];
    }
    int v21 = 136315138;
    BOOL v22 = v13;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "PedestrianStop,%s",  (const char *)&v21);
    float v15 = (uint8_t *)v14;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual std::pair<BOOL, CFAbsoluteTime> CLHikingStopDetector::update(const CLWorkoutPredictorInputs &)",  "%s\n",  v14);
    if (v15 != buf) {
      free(v15);
    }
  }

  if (v20 < 0) {
    operator delete(__p[0]);
  }
  return v9;
}

void sub_10099DD80( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10099DDAC(uint64_t a1, double *a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)&qword_101999A20);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_101999A20))
  {
    v11[0] = 0x100000008LL;
    LODWORD(v11[1]) = 0;
    sub_1002C72A8(qword_101999A08, v11, 3uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101999A08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101999A20);
  }

  __int16 v12 = 0;
  *(_OWORD *)float v11 = xmmword_1012E1E90;
  memset(&v11[2], 0, 135);
  __int128 v13 = xmmword_1012E1E90;
  uint64_t v14 = 0LL;
  int v15 = 0;
  uint64_t v16 = 0LL;
  v17[0] = 0LL;
  *(void *)((char *)v17 + 5) = 0LL;
  *(void *)((char *)&v17[1] + 6) = 0LL;
  char v18 = 0;
  memset(&v17[3], 0, 24);
  __int128 v19 = xmmword_1012E1E90;
  uint64_t v20 = 0LL;
  int v21 = 0;
  unint64_t v22 = 0xFFEFFFFFFFFFFFFFLL;
  int v33 = 0;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  int v28 = 0;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  memset(v32, 0, sizeof(v32));
  uint64_t v34 = 0LL;
  uint64_t v35 = 0LL;
  unint64_t v36 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v37 = 0LL;
  int v38 = 0;
  uint64_t v44 = 0LL;
  __int16 v45 = 0;
  int v50 = 0;
  int v43 = 0;
  __int128 v41 = 0u;
  __int128 v42 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v47 = 0u;
  __int128 v46 = 0u;
  char v48 = 0;
  memset(v49, 0, sizeof(v49));
  double v51 = -1.79769313e308;
  __int128 v70 = 0u;
  __int128 v69 = 0u;
  __int128 v68 = 0u;
  __int128 v67 = 0u;
  __int128 v66 = 0u;
  __int128 v65 = 0u;
  __int128 v64 = 0u;
  __int128 v63 = 0u;
  __int128 v62 = 0u;
  __int128 v61 = 0u;
  __int128 v60 = 0u;
  __int128 v59 = 0u;
  __int128 v58 = 0u;
  __int128 v57 = 0u;
  __int128 v56 = 0u;
  __int128 v55 = 0u;
  __int128 v54 = 0u;
  __int128 v53 = 0u;
  __int128 v52 = 0u;
  uint64_t v71 = 0LL;
  unint64_t v72 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v73 = 0u;
  __int128 v74 = 0u;
  __int128 v75 = 0u;
  __int128 v76 = 0u;
  unint64_t v77 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v78 = 0LL;
  int v79 = 0;
  uint64_t v80 = 0LL;
  char v81 = 0;
  unint64_t v82 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v84 = 0LL;
  uint64_t v83 = 0LL;
  uint64_t v85 = 0x80000000800000LL;
  uint64_t v87 = 0LL;
  uint64_t v86 = 0LL;
  __int128 v88 = xmmword_1012E1EA0;
  uint64_t v89 = 0x80000000800000LL;
  __int128 v90 = 0u;
  __int128 v91 = 0u;
  uint64_t v92 = 0LL;
  unint64_t v93 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v94 = 0u;
  __int128 v95 = 0u;
  __int128 v96 = 0u;
  __int128 v97 = 0u;
  __int128 v98 = 0u;
  __int128 v99 = 0u;
  int v100 = 0;
  unint64_t v101 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v102 = 0;
  int v103 = 0;
  unint64_t v104 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v105 = 7LL;
  unint64_t v106 = 0xFFEFFFFFFFFFFFFFLL;
  char v107 = 0;
  uint64_t v109 = 0LL;
  uint64_t v108 = 0LL;
  uint64_t v110 = 0LL;
  sub_100CDB578(a2, qword_101999A08, (uint64_t)v11);
  if (v51 == -1.79769313e308)
  {
    sub_1010DDBC0(__p, "CLPedestrianStopDetector");
    sub_100CDC2CC(a2, (uint64_t *)__p, (uint64_t)qword_101999A08);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    *(double *)&__int128 v9 = v51;
    BYTE8(v9) = v65;
    BYTE9(v9) = BYTE8(v61) == 1;
    int v5 = v15;
    HIDWORD(v9) = v5;
    if (*(double *)&v11[1] == -1.79769313e308)
    {
      int v6 = 0;
    }

    else
    {
      sub_100672E64((uint64_t)v11, (uint64_t)__p);
      int v6 = (int)__p[0];
    }

    int v10 = v6;
    sub_1002E5BC0((unsigned __int16 *)(a1 + 8), &v9);
  }

void sub_10099E128( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

uint64_t sub_10099E160@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)(a3 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  int v5 = (double *)(a3 + 8);
  *(_OWORD *)(a3 + 24) = 0u;
  unint64_t v6 = *(unsigned __int16 *)(result + 10);
  *(_BYTE *)a3 = v6 >= a2;
  if (v6 >= a2)
  {
    if (v6 - a2 >= v6)
    {
      *(_DWORD *)(a3 + 16) = 0;
    }

    else
    {
      char v8 = (unsigned __int16 *)(result + 8);
      uint64_t v9 = -(uint64_t)a2;
      float32x2_t v10 = 0LL;
      __asm { FMOV            V0.2S, #1.0 }

      int8x8_t v36 = _D0;
      float v16 = 0.0;
      float v17 = 0.0;
      float v18 = 0.0;
      float v19 = 0.0;
      float v20 = 0.0;
      do
      {
        unint64_t v21 = v6 + v9;
        uint64_t v22 = sub_10099E364(v8, v6 + v9);
        uint64_t v24 = v22;
        LOBYTE(v3) = *(_BYTE *)(v22 + 8);
        if (*(_BYTE *)(v22 + 9)) {
          float v25 = 1.0;
        }
        else {
          float v25 = 0.0;
        }
        __int128 v26 = (const float *)(v22 + 12);
        v23.n128_u64[0] = (unint64_t)vld1_dup_f32(v26);
        int32x2_t v38 = (int32x2_t)v23.n128_u64[0];
        unsigned int isTypeInVehicle = CLMotionActivity::isTypeInVehicle(*(unsigned int *)(v22 + 16), v23);
        double result = CLMotionActivity::isTypeCycling(*(unsigned int *)(v24 + 16));
        unsigned int v28 = result;
        double v29 = 2.55999994;
        if (v21)
        {
          float v37 = v25;
          unsigned int v30 = v3;
          double v31 = *(double *)v24;
          double result = sub_10099E364(v8, v21 - 1);
          double v29 = v31 - *(double *)result;
          unsigned int v3 = v30;
          float v25 = v37;
        }

        float v19 = v19 + (float)v3;
        float v20 = v20 + v25;
        float32x2_t v10 = vadd_f32(v10, (float32x2_t)vand_s8((int8x8_t)vceq_s32(v38, (int32x2_t)0x300000001LL), v36));
        float v17 = v17 + (float)isTypeInVehicle;
        float v16 = v16 + (float)v28;
        float v32 = v29;
        float v18 = v18 + v32;
      }

      while (!__CFADD__(v9++, 1LL));
      double v33 = v18;
      double *v5 = v18;
      float v34 = 0.0;
      if (v18 > 0.0)
      {
        double v33 = v19 / v33 * 60.0;
        float v34 = v33;
      }

      *(float *)(a3 + 16) = v34;
      if (a2)
      {
        *(float *)&double v33 = (float)a2;
        *(float *)(a3 + 2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v20 / (float)a2;
        *(float32x2_t *)(a3 + 24) = vdiv_f32(v10, (float32x2_t)vdup_lane_s32(*(int32x2_t *)&v33, 0));
        *(float *)(a3 + 32) = v17 / (float)a2;
        float v35 = v16 / (float)a2;
LABEL_17:
        *(float *)(a3 + 36) = v35;
        return result;
      }
    }

    *(void *)(a3 + 2_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
    *(void *)(a3 + 2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
    float v35 = 0.0;
    goto LABEL_17;
  }

  return result;
}

uint64_t sub_10099E364(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101863D30);
    }
    char v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)int buf = 134218240;
      unint64_t v17 = a2;
      __int16 v18 = 1024;
      int v19 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101863D30);
      }
      int v9 = *((_DWORD *)a1 + 1);
      int v12 = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 1024;
      int v15 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  (size_t)&v12,  18);
      float v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const T &CMQueue<CLHikingStopDetector::HistoryEntry>::operator[](const size_t) const [T = CLHikingStopDetector::HistoryEntry]",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0LL;
  }
  return (uint64_t)&a1[12 * (v4 - v5) + 4];
}

void *sub_10099E560(void *result)
{
  _BYTE *result = off_101863CD8;
  return result;
}

void sub_10099E570(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

void sub_10099E59C(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_10099E5C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10099E600(uint64_t a1)
{
  return a1;
}

uint64_t sub_10099E630@<X0>(uint64_t *a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  unint64_t v4 = sub_10000CF44(&v37, (uint64_t)"{", 1LL);
  unint64_t v5 = sub_10000CF44(v4, (uint64_t)"mac: ", 7LL);
  double v35 = *(double *)a1;
  sub_1007EC360(&v36);
  if ((v36.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    unint64_t v6 = &v36;
  }
  else {
    unint64_t v6 = (std::string *)v36.__r_.__value_.__r.__words[0];
  }
  if ((v36.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = v36.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = v36.__r_.__value_.__l.__size_;
  }
  int v8 = sub_10000CF44(v5, (uint64_t)v6, size);
  int v9 = sub_10000CF44(v8, (uint64_t)", ssid: ", 10LL);
  if (*((char *)a1 + 31) < 0)
  {
    sub_1010DD48C(__p, (void *)a1[1], a1[2]);
  }

  else
  {
    *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)(a1 + 1);
    uint64_t v34 = a1[3];
  }

  if (v34 >= 0) {
    float32x2_t v10 = __p;
  }
  else {
    float32x2_t v10 = (void **)__p[0];
  }
  if (v34 >= 0) {
    uint64_t v11 = HIBYTE(v34);
  }
  else {
    uint64_t v11 = (uint64_t)__p[1];
  }
  int v12 = sub_10000CF44(v9, (uint64_t)v10, v11);
  unint64_t v13 = sub_10000CF44(v12, (uint64_t)", rssi: ", 10LL);
  __int16 v14 = (void *)std::ostream::operator<<(v13, *((unsigned int *)a1 + 8));
  int v15 = sub_10000CF44(v14, (uint64_t)", mode: ", 10LL);
  float v16 = (void *)std::ostream::operator<<(v15, *((unsigned int *)a1 + 9));
  unint64_t v17 = sub_10000CF44(v16, (uint64_t)", channel: ", 13LL);
  __int16 v18 = (void *)std::ostream::operator<<(v17, *((unsigned int *)a1 + 10));
  int v19 = sub_10000CF44(v18, (uint64_t)", age: ", 9LL);
  uint64_t v20 = *v19;
  *(_DWORD *)((char *)v19 + *(void *)(*v19 - 24) + _Block_object_dispose((const void *)(v1 - 224), 8) = *(_DWORD *)((_BYTE *)v19 + *(void *)(*v19 - 24) + 8) & 0xFFFFFEFB | 4;
  *(uint64_t *)((char *)v19 + *(void *)(v20 - 24) + 16) = 2LL;
  unint64_t v21 = (void *)std::ostream::operator<<(*((double *)a1 + 6));
  uint64_t v22 = sub_10000CF44(v21, (uint64_t)", timestamp: ", 15LL);
  uint64_t v23 = *v22;
  *(_DWORD *)((char *)v22 + *(void *)(*v22 - 24) + _Block_object_dispose((const void *)(v1 - 224), 8) = *(_DWORD *)((_BYTE *)v22 + *(void *)(*v22 - 24) + 8) & 0xFFFFFEFB | 4;
  *(uint64_t *)((char *)v22 + *(void *)(v23 - 24) + 16) = 1LL;
  uint64_t v24 = (void *)std::ostream::operator<<(*((double *)a1 + 7));
  float v25 = sub_10000CF44(v24, (uint64_t)", rssiFlags: ", 15LL);
  std::ostream::operator<<(v25, *((unsigned int *)a1 + 17));
  if (SHIBYTE(v34) < 0) {
    operator delete(__p[0]);
  }
  if (*((_BYTE *)a1 + 64))
  {
    __int128 v26 = sub_10000CF44(&v37, (uint64_t)", isApplePersonalHotspot: ", 28LL);
    std::ostream::operator<<(v26, *((unsigned __int8 *)a1 + 64));
  }

  if (*((_BYTE *)a1 + 65))
  {
    __int128 v27 = sub_10000CF44(&v37, (uint64_t)", isMoving: ", 14LL);
    std::ostream::operator<<(v27, *((unsigned __int8 *)a1 + 65));
  }

  if (*((double *)a1 + 10) > 0.0)
  {
    unsigned int v28 = sub_10000CF44(&v37, (uint64_t)", notificationAge: ", 21LL);
    uint64_t v29 = *v28;
    *(_DWORD *)((char *)v28 + *(void *)(*v28 - 24) + _Block_object_dispose((const void *)(v1 - 224), 8) = *(_DWORD *)((_BYTE *)v28 + *(void *)(*v28 - 24) + 8) & 0xFFFFFEFB | 4;
    *(uint64_t *)((char *)v28 + *(void *)(v29 - 24) + 16) = 2LL;
    double Current = CFAbsoluteTimeGetCurrent();
    std::ostream::operator<<(vabdd_f64(Current, *((double *)a1 + 10)));
  }

  if (*((_BYTE *)a1 + 72))
  {
    double v31 = sub_10000CF44(&v37, (uint64_t)", isAssociated: ", 18LL);
    std::ostream::operator<<(v31, *((unsigned __int8 *)a1 + 72));
  }

  sub_10000CF44(&v37, (uint64_t)"}", 1LL);
  std::stringbuf::str(a2, &v38);
  std::streambuf::~streambuf(&v38);
  return std::ios::~ios(&v39);
}

void sub_10099E990( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, char a22)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  sub_1002720B4((uint64_t)&a22);
  _Unwind_Resume(a1);
}

double sub_10099E9E8(uint64_t a1)
{
  return vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(a1 + 80));
}

uint64_t sub_10099EA10@<X0>(uint64_t a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  unint64_t v4 = sub_10000CF44(&v12, (uint64_t)"{", 1LL);
  unint64_t v5 = sub_10000CF44(v4, (uint64_t)"isAssociated: ", 16LL);
  if (*(_BYTE *)(a1 + 88)) {
    BOOL v6 = *(_DWORD *)(a1 + 40) > 0;
  }
  else {
    BOOL v6 = 0LL;
  }
  std::ostream::operator<<(v5, v6);
  if (*(_BYTE *)(a1 + 88) && *(int *)(a1 + 40) >= 1)
  {
    char v7 = sub_10000CF44(&v12, (uint64_t)", accessPoint: ", 17LL);
    sub_10099E630((uint64_t *)a1, &__p);
    int v8 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
       ? &__p
       : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    uint64_t v9 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0 ? __p.__r_.__value_.__s.__size_ : __p.__r_.__value_.__l.__size_;
    sub_10000CF44(v7, (uint64_t)v8, v9);
  }

  sub_10000CF44(&v12, (uint64_t)"}", 1LL);
  std::stringbuf::str(a2, &v13);
  std::streambuf::~streambuf(&v13);
  return std::ios::~ios(&v14);
}

void sub_10099EB84( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1002720B4((uint64_t)&a15);
  _Unwind_Resume(a1);
}

const char *sub_10099EBB4(int a1)
{
  if (a1 > 13) {
    return "-";
  }
  else {
    return (&off_101863D50)[a1];
  }
}

const char *sub_10099EBD8(unsigned int a1)
{
  if (a1 > 0xC) {
    return "na";
  }
  else {
    return (&off_101863DC0)[a1];
  }
}

const char *sub_10099EC00(unsigned int a1)
{
  if (a1 < 3) {
    return (&off_101863E68)[a1];
  }
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101863E28);
  }
  unsigned int v3 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)int buf = 67240192;
    unsigned int v7 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "@WifiService_Type, unsupported scan source %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863E28);
    }
    v5[0] = 67240192;
    v5[1] = a1;
    unint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "@WifiService_Type, unsupported scan source %{public}d",  v5,  8);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "const char *CLWifiService_Type::toString(CLWifiService_Type::ScanSource)",  "%s\n",  v4);
  }

  return "?";
}

BOOL sub_10099EDC8(int a1)
{
  return (a1 - 1) < 0xE;
}

BOOL sub_10099EDD8(int a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101863E28);
  }
  unsigned int v3 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)int buf = 67240192;
    int v8 = a1;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "@WifiService_Type, unsupported scan type %{public}d",  buf,  8u);
  }

  BOOL v4 = sub_1002921D0(115, 0);
  BOOL result = 0LL;
  if (v4)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101863E28);
    }
    v6[0] = 67240192;
    v6[1] = a1;
    unint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "@WifiService_Type, unsupported scan type %{public}d",  v6,  8);
    sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CLWifiService_Type::isLocationScanTypeOn5GHzBand(ScanType)", "%s\n", v5);
    return 0LL;
  }

  return result;
}

unsigned int **sub_10099EFA8@<X0>(unsigned int **result@<X0>, std::string *a2@<X8>)
{
  if (*result == result[1])
  {
    a2->__r_.__value_.__r.__words[0] = 0LL;
    a2->__r_.__value_.__l.__size_ = 0LL;
    a2->__r_.__value_.__l.__cap_ = 0LL;
  }

  else
  {
    unsigned int v3 = result;
    sub_100271FC8((uint64_t)&v11);
    BOOL v4 = *v3;
    unint64_t v5 = v3[1];
    if (*v3 != v5)
    {
      do
      {
        BOOL v6 = (void *)std::ostream::operator<<(&v11, *v4);
        sub_10000CF44(v6, (uint64_t)",", 1LL);
        ++v4;
      }

      while (v4 != v5);
    }

    std::stringbuf::str(a2, &v12);
    uint64_t size = a2->__r_.__value_.__s.__size_;
    int v8 = (char)size;
    uint64_t v9 = (char *)a2 + size;
    if (v8 >= 0)
    {
      std::string::size_type v10 = (std::string::size_type)a2;
    }

    else
    {
      uint64_t v9 = (char *)(a2->__r_.__value_.__r.__words[0] + a2->__r_.__value_.__l.__size_);
      std::string::size_type v10 = a2->__r_.__value_.__r.__words[0];
    }

    std::string::erase(a2, (std::string::size_type)&v9[~v10], 1uLL);
    std::streambuf::~streambuf(&v12);
    return (unsigned int **)std::ios::~ios(&v13);
  }

  return result;
}

void sub_10099F0DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

double sub_10099F10C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (*(_BYTE *)(a1 + 31)) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1012556C8();
  }

  if (!*(void *)(a1 + 16)) {
    goto LABEL_7;
  }
LABEL_3:
  int v4 = *(_DWORD *)(a1 + 40);
  if (v4 == -1) {
    sub_10125583C();
  }
  if ((*(_BYTE *)(a1 + 31) & 0x80) != 0)
  {
    sub_1010DD48C(&v7, *(void **)(a1 + 8), *(void *)(a1 + 16));
    int v4 = *(_DWORD *)(a1 + 40);
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 24);
  }

  int v5 = *(_DWORD *)(a1 + 36);
  double result = *(double *)(a1 + 48);
  *(_OWORD *)a2 = v7;
  *(void *)(a2 + 16) = v8;
  *(_DWORD *)(a2 + 24) = v5;
  *(_DWORD *)(a2 + 2_Block_object_dispose((const void *)(v1 - 224), 8) = v4;
  *(double *)(a2 + 32) = result;
  return result;
}

void sub_10099F1B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)a1;
  int v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_1010DD48C(v4, *(void **)(a1 + 8), *(void *)(a1 + 16));
  }

  else
  {
    *(_OWORD *)int v4 = *(_OWORD *)(a1 + 8);
    *(void *)(a2 + 24) = *(void *)(a1 + 24);
  }

  __int128 v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v5;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(void *)(a2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *(void *)(a1 + 80);
  *(CFAbsoluteTime *)(a2 + 56) = CFAbsoluteTimeGetCurrent();
}

void sub_10099F230(_Unwind_Exception *exception_object)
{
}

void sub_10099F24C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(_BYTE *)(a1 + 88)) {
    BOOL v3 = *(_DWORD *)(a1 + 40) < 1;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    sub_1000C6980((_BYTE *)a2, a1);
  }

  else
  {
    sub_10099F1B0(a1, (uint64_t)&v8);
    *(void *)a2 = v8;
    int v4 = (_BYTE *)(a2 + 8);
    if (SHIBYTE(v10) < 0)
    {
      sub_1010DD48C(v4, (void *)__p, *((unint64_t *)&__p + 1));
      int v6 = SHIBYTE(v10);
      __int128 v7 = v12;
      *(_OWORD *)(a2 + 32) = v11;
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v7;
      *(_OWORD *)(a2 + 64) = v13;
      *(void *)(a2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v14;
      *(_BYTE *)(a2 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
      if (v6 < 0) {
        operator delete((void *)__p);
      }
    }

    else
    {
      *(_OWORD *)int v4 = __p;
      *(void *)(a2 + 24) = v10;
      __int128 v5 = v12;
      *(_OWORD *)(a2 + 32) = v11;
      *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v5;
      *(_OWORD *)(a2 + 64) = v13;
      *(void *)(a2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v14;
      *(_BYTE *)(a2 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
    }
  }

void sub_10099F338( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10099F354(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_10099F380(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_10099F3AC()
{
  byte_1019A18B0 = 0;
  byte_1019A1908 = 0;
  __cxa_atexit((void (*)(void *))sub_10099E5C8, &byte_1019A18B0, (void *)&_mh_execute_header);
  nullsub_10(0LL);
  uint64_t v1 = v0;
  sub_1010DDBC0(&v8, "");
  qword_1019A1910 = v1;
  *(_OWORD *)byte_1019A1918 = v8;
  *(void *)&byte_1019A1918[16] = v9;
  __int128 v8 = 0uLL;
  uint64_t v9 = 0LL;
  *(void *)&xmmword_1019A1930 = -100LL;
  DWORD2(xmmword_1019A193sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = -1;
  __asm { FMOV            V0.2D, #-1.0 }

  xmmword_1019A1940 = _Q0;
  LOWORD(xmmword_1019A195sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 256;
  DWORD1(xmmword_1019A195sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
  BYTE8(xmmword_1019A195sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
  qword_1019A1960 = 0LL;
  __cxa_atexit((void (*)(void *))sub_10099E600, &qword_1019A1910, (void *)&_mh_execute_header);
  sub_1010DDBC0(&v8, "");
  xmmword_1019A1968 = v8;
  qword_1019A1978 = v9;
  uint64_t v9 = 0LL;
  __int128 v8 = 0uLL;
  qword_1019A1980 = -1LL;
  qword_1019A1988 = 0xBFF0000000000000LL;
  return __cxa_atexit((void (*)(void *))sub_100355650, &xmmword_1019A1968, (void *)&_mh_execute_header);
}

uint64_t sub_10099F4CC()
{
  uint64_t v0 = operator new(0x60uLL);
  uint64_t result = sub_10099F554((uint64_t)v0);
  qword_1019A1990 = (uint64_t)v0;
  return result;
}

void sub_10099F4FC(_Unwind_Exception *a1)
{
}

uint64_t sub_10099F510()
{
  if (qword_101999A28 != -1) {
    dispatch_once(&qword_101999A28, &stru_101863E80);
  }
  return qword_1019A1990;
}

uint64_t sub_10099F554(uint64_t a1)
{
  uint64_t v2 = sub_1006DC9EC(a1, (uint64_t)"CLKeyboardCoverState", 1);
  *(void *)(v2 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0xFFEFFFFFFFFFFFFFLL;
  BOOL v3 = (double *)(v2 + 88);
  *(void *)uint64_t v2 = off_101863EB0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_BYTE *)(v2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
  if (sub_1004FAA50())
  {
    uint64_t v4 = sub_1002F8DDC();
    if (sub_1002A82BC(v4, "LastKeyboardDisconnect", v3))
    {
      BOOL v5 = *v3 == 1.79769313e308;
    }

    else
    {
      BOOL v5 = 0;
      *BOOL v3 = -1.79769313e308;
    }

    *(_BYTE *)(a1 + 81) = v5;
    sub_10099F618(a1);
  }

  return a1;
}

void sub_10099F604(_Unwind_Exception *a1)
{
}

uint64_t sub_10099F618(uint64_t a1)
{
  BOOL v2 = sub_1009A02F0(a1, "AppleHIDKeyboardEventDriverV2", @"RequiresCompassResetOnConnect");
  uint64_t result = sub_1009A02F0(v2, "IOAccessoryIDBusHIDDevice", @"RequiresCompassResetOnConnect");
  char v7 = v2 | result;
  if (*(unsigned __int8 *)(a1 + 81) != (v2 | result))
  {
    *(_BYTE *)(a1 + 81) = v2 | result;
    else {
      double Current = CFAbsoluteTimeGetCurrent();
    }
    *(double *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = Current;
    uint64_t v5 = sub_1002F8DDC();
    sub_1002AC7B8(v5, "LastKeyboardDisconnect", (const void *)(a1 + 88));
    uint64_t v6 = sub_1002F8DDC();
    (*(void (**)(uint64_t))(*(void *)v6 + 944LL))(v6);
    return sub_1006DD65C(a1, 0LL, (uint64_t)&v7, 1LL);
  }

  return result;
}

void *sub_10099F6DC(void *a1)
{
  *a1 = off_101863EB0;
  sub_10099F730((uint64_t)a1, 0, 0LL);
  return sub_1006DCAA8(a1);
}

void sub_10099F71C(void *a1)
{
  uint64_t v1 = sub_10099F6DC(a1);
  operator delete(v1);
}

void sub_10099F730(uint64_t a1, int a2, unint64_t a3)
{
  if (!a2)
  {
    if (a3)
    {
      if (!*(_BYTE *)(a1 + 80))
      {
        if (qword_101999A28 != -1) {
          dispatch_once(&qword_101999A28, &stru_101863E80);
        }
        sub_10099F9C4(qword_1019A1990);
      }

      if (a3 >= 2) {
        sub_1006DD65C(a1, 0LL, a1 + 81, 1LL);
      }
    }

    else
    {
      if (qword_101999A28 != -1) {
        dispatch_once(&qword_101999A28, &stru_101863E80);
      }
      sub_10099F7F4(qword_1019A1990);
    }
  }

void sub_10099F7F4(uint64_t a1)
{
  if (qword_1019345C0 != -1) {
    dispatch_once(&qword_1019345C0, &stru_101863EF8);
  }
  BOOL v2 = (os_log_s *)qword_1019345C8;
  if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "unregistering for keyboard updates", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863EF8);
    }
    v7[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  2LL,  "unregistering for keyboard updates",  v7,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLKeyboardCoverState::unregisterForKeyboardUpdates()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  uint64_t v3 = sub_1006E27E8();
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  void v6[2] = sub_1009A01A4;
  v6[3] = &unk_10181D3D0;
  _DWORD v6[4] = a1;
  sub_1006E28B8(v3, (uint64_t)v6);
  *(_BYTE *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0;
}

void sub_10099F9C4(uint64_t a1)
{
  if (qword_1019345C0 != -1) {
    dispatch_once(&qword_1019345C0, &stru_101863EF8);
  }
  BOOL v2 = (os_log_s *)qword_1019345C8;
  if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "registering for keyboard updates", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863EF8);
    }
    v7[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  2LL,  "registering for keyboard updates",  v7,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLKeyboardCoverState::registerForKeyboardUpdates()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  uint64_t v3 = sub_1006E27E8();
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  void v6[2] = sub_10099FBF0;
  v6[3] = &unk_10181D3D0;
  _DWORD v6[4] = a1;
  sub_1006E28B8(v3, (uint64_t)v6);
  *(_BYTE *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 1;
}

uint64_t sub_10099FB98(uint64_t a1, io_iterator_t iterator)
{
  uint64_t result = IOIteratorNext(iterator);
  if ((_DWORD)result)
  {
    io_object_t v5 = result;
    do
    {
      sub_10099F618(a1);
      IOObjectRelease(v5);
      uint64_t result = IOIteratorNext(iterator);
      io_object_t v5 = result;
    }

    while ((_DWORD)result);
  }

  return result;
}

void sub_10099FBF0(uint64_t a1)
{
  kern_return_t v20;
  IONotificationPort *v21;
  CFDictionaryRef v22;
  kern_return_t v23;
  IONotificationPort *v24;
  CFDictionaryRef v25;
  kern_return_t v26;
  IONotificationPort *v27;
  CFDictionaryRef v28;
  kern_return_t v29;
  os_log_s *v30;
  const char *v31;
  uint8_t *v32;
  const char *v33;
  uint8_t *v34;
  _WORD v35[8];
  uint8_t buf[1640];
  uint64_t v1 = *(void *)(a1 + 32);
  *(void *)(v1 + 32) = IONotificationPortCreate(kIOMainPortDefault);
  *(void *)(v1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = IONotificationPortCreate(kIOMainPortDefault);
  *(void *)(v1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = IONotificationPortCreate(kIOMainPortDefault);
  IONotificationPortRef v2 = IONotificationPortCreate(kIOMainPortDefault);
  *(void *)(v1 + 56) = v2;
  uint64_t v3 = *(IONotificationPort **)(v1 + 32);
  if (v3 && *(void *)(v1 + 40) && (*(void *)(v1 + 48) ? (BOOL v4 = v2 == 0LL) : (BOOL v4 = 1), !v4))
  {
    RunLoopSource = IONotificationPortGetRunLoopSource(v3);
    char v7 = IONotificationPortGetRunLoopSource(*(IONotificationPortRef *)(v1 + 40));
    __int128 v8 = IONotificationPortGetRunLoopSource(*(IONotificationPortRef *)(v1 + 48));
    CFRunLoopSourceRef v9 = IONotificationPortGetRunLoopSource(*(IONotificationPortRef *)(v1 + 56));
    if (RunLoopSource) {
      BOOL v10 = v7 == 0LL;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10 || v8 == 0LL || v9 == 0LL)
    {
      if (qword_101999A28 != -1) {
        dispatch_once(&qword_101999A28, &stru_101863E80);
      }
      sub_10099F7F4(qword_1019A1990);
    }

    else
    {
      __int128 v13 = v9;
      sub_1006E27E8();
      uint64_t v14 = (__CFRunLoop *)sub_1006E2AB4();
      CFRunLoopAddSource(v14, RunLoopSource, kCFRunLoopDefaultMode);
      sub_1006E27E8();
      int v15 = (__CFRunLoop *)sub_1006E2AB4();
      CFRunLoopAddSource(v15, v7, kCFRunLoopDefaultMode);
      sub_1006E27E8();
      float v16 = (__CFRunLoop *)sub_1006E2AB4();
      CFRunLoopAddSource(v16, v8, kCFRunLoopDefaultMode);
      sub_1006E27E8();
      unint64_t v17 = (__CFRunLoop *)sub_1006E2AB4();
      CFRunLoopAddSource(v17, v13, kCFRunLoopDefaultMode);
      __int16 v18 = *(IONotificationPort **)(v1 + 32);
      int v19 = IOServiceMatching("AppleHIDKeyboardEventDriverV2");
      uint64_t v20 = IOServiceAddMatchingNotification( v18,  "IOServiceFirstMatch",  v19,  (IOServiceMatchingCallback)sub_10099FB98,  (void *)v1,  (io_iterator_t *)(v1 + 64));
      unint64_t v21 = *(IONotificationPort **)(v1 + 40);
      uint64_t v22 = IOServiceMatching("AppleHIDKeyboardEventDriverV2");
      uint64_t v23 = IOServiceAddMatchingNotification( v21,  "IOServiceTerminate",  v22,  (IOServiceMatchingCallback)sub_10099FB98,  (void *)v1,  (io_iterator_t *)(v1 + 68));
      uint64_t v24 = *(IONotificationPort **)(v1 + 48);
      float v25 = IOServiceMatching("IOAccessoryIDBusHIDDevice");
      __int128 v26 = IOServiceAddMatchingNotification( v24,  "IOServiceFirstMatch",  v25,  (IOServiceMatchingCallback)sub_10099FB98,  (void *)v1,  (io_iterator_t *)(v1 + 72));
      __int128 v27 = *(IONotificationPort **)(v1 + 56);
      unsigned int v28 = IOServiceMatching("IOAccessoryIDBusHIDDevice");
      uint64_t v29 = IOServiceAddMatchingNotification( v27,  "IOServiceTerminate",  v28,  (IOServiceMatchingCallback)sub_10099FB98,  (void *)v1,  (io_iterator_t *)(v1 + 76));
      if (v20 || v23 || v26 || v29)
      {
        if (qword_1019345C0 != -1) {
          dispatch_once(&qword_1019345C0, &stru_101863EF8);
        }
        unsigned int v30 = (os_log_s *)qword_1019345C8;
        if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "#Warning Failed to register for keyboard updates. Could not register for notifications from  AppleHIDKeyboar dEventDriverV2 service and IOAccessoryIDBusHIDDevice service (for kIOFirstMatchNotification and kIOTerminatedNotification).",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019345C0 != -1) {
            dispatch_once(&qword_1019345C0, &stru_101863EF8);
          }
          v35[0] = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  0LL,  "#Warning Failed to register for keyboard updates. Could not register for notifications from  AppleHIDKeyboar dEventDriverV2 service and IOAccessoryIDBusHIDDevice service (for kIOFirstMatchNotification and kIOTerminatedNotification).",  v35,  2);
          uint64_t v34 = (uint8_t *)v33;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLKeyboardCoverState::registerForKeyboardUpdates()_block_invoke",  "%s\n",  v33);
          if (v34 != buf) {
            free(v34);
          }
        }

        if (qword_101999A28 != -1) {
          dispatch_once(&qword_101999A28, &stru_101863E80);
        }
        sub_10099F7F4(qword_1019A1990);
      }

      else
      {
        sub_10099FB98(v1, *(_DWORD *)(v1 + 64));
        sub_10099FB98(v1, *(_DWORD *)(v1 + 68));
        sub_10099FB98(v1, *(_DWORD *)(v1 + 72));
        sub_10099FB98(v1, *(_DWORD *)(v1 + 76));
      }
    }
  }

  else
  {
    if (qword_1019345C0 != -1) {
      dispatch_once(&qword_1019345C0, &stru_101863EF8);
    }
    io_object_t v5 = (os_log_s *)qword_1019345C8;
    if (os_log_type_enabled((os_log_t)qword_1019345C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#Warning Failed to register for keyboard updates. Could not create KeyboardConnectNotificationPort and KeyboardC onnectNotificationPort",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345C0 != -1) {
        dispatch_once(&qword_1019345C0, &stru_101863EF8);
      }
      v35[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345C8,  0LL,  "#Warning Failed to register for keyboard updates. Could not create KeyboardConnectNotificationPort and KeyboardC onnectNotificationPort",  v35,  2);
      float v32 = (uint8_t *)v31;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLKeyboardCoverState::registerForKeyboardUpdates()_block_invoke",  "%s\n",  v31);
      if (v32 != buf) {
        free(v32);
      }
    }
  }

uint64_t sub_1009A01A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  IONotificationPortRef v2 = *(IONotificationPort **)(v1 + 32);
  if (v2)
  {
    CFRunLoopSourceRef RunLoopSource = IONotificationPortGetRunLoopSource(v2);
    if (RunLoopSource)
    {
      BOOL v4 = RunLoopSource;
      sub_1006E27E8();
      io_object_t v5 = (__CFRunLoop *)sub_1006E2AB4();
      CFRunLoopRemoveSource(v5, v4, kCFRunLoopDefaultMode);
    }

    IONotificationPortDestroy(*(IONotificationPortRef *)(v1 + 32));
    *(void *)(v1 + 32) = 0LL;
  }

  uint64_t v6 = *(IONotificationPort **)(v1 + 40);
  if (v6)
  {
    CFRunLoopSourceRef v7 = IONotificationPortGetRunLoopSource(v6);
    if (v7)
    {
      __int128 v8 = v7;
      sub_1006E27E8();
      CFRunLoopSourceRef v9 = (__CFRunLoop *)sub_1006E2AB4();
      CFRunLoopRemoveSource(v9, v8, kCFRunLoopDefaultMode);
    }

    IONotificationPortDestroy(*(IONotificationPortRef *)(v1 + 40));
    *(void *)(v1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  }

  BOOL v10 = *(IONotificationPort **)(v1 + 48);
  if (v10)
  {
    CFRunLoopSourceRef v11 = IONotificationPortGetRunLoopSource(v10);
    if (v11)
    {
      __int128 v12 = v11;
      sub_1006E27E8();
      __int128 v13 = (__CFRunLoop *)sub_1006E2AB4();
      CFRunLoopRemoveSource(v13, v12, kCFRunLoopDefaultMode);
    }

    IONotificationPortDestroy(*(IONotificationPortRef *)(v1 + 48));
    *(void *)(v1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  }

  uint64_t v14 = *(IONotificationPort **)(v1 + 56);
  if (v14)
  {
    CFRunLoopSourceRef v15 = IONotificationPortGetRunLoopSource(v14);
    if (v15)
    {
      float v16 = v15;
      sub_1006E27E8();
      unint64_t v17 = (__CFRunLoop *)sub_1006E2AB4();
      CFRunLoopRemoveSource(v17, v16, kCFRunLoopDefaultMode);
    }

    IONotificationPortDestroy(*(IONotificationPortRef *)(v1 + 56));
    *(void *)(v1 + 56) = 0LL;
  }

  io_object_t v18 = *(_DWORD *)(v1 + 64);
  if (v18)
  {
    IOObjectRelease(v18);
    *(_DWORD *)(v1 + 64) = 0;
  }

  io_object_t v19 = *(_DWORD *)(v1 + 68);
  if (v19)
  {
    IOObjectRelease(v19);
    *(_DWORD *)(v1 + 6_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  }

  io_object_t v20 = *(_DWORD *)(v1 + 72);
  if (v20)
  {
    IOObjectRelease(v20);
    *(_DWORD *)(v1 + 72) = 0;
  }

  uint64_t result = *(unsigned int *)(v1 + 76);
  if ((_DWORD)result)
  {
    uint64_t result = IOObjectRelease(result);
    *(_DWORD *)(v1 + 76) = 0;
  }

  return result;
}

BOOL sub_1009A02F0(int a1, char *name, const __CFString *a3)
{
  BOOL v4 = IOServiceMatching(name);
  IOServiceGetMatchingServices(kIOMainPortDefault, v4, &existing);
  io_object_t v5 = IOIteratorNext(existing);
  if (v5)
  {
    io_registry_entry_t v6 = v5;
    BOOL v7 = 0;
    do
    {
      CFProperty = (const __CFBoolean *)IORegistryEntryCreateCFProperty(v6, a3, kCFAllocatorDefault, 0);
      if (CFProperty)
      {
        CFRunLoopSourceRef v9 = CFProperty;
        CFTypeID v10 = CFGetTypeID(CFProperty);
        if (v10 == CFBooleanGetTypeID())
        {
          BOOL v7 = CFBooleanGetValue(v9) != 0;
          CFRelease(v9);
        }
      }

      IOObjectRelease(v6);
      io_registry_entry_t v6 = IOIteratorNext(existing);
    }

    while (v6);
  }

  else
  {
    return 0;
  }

  return v7;
}

uint64_t sub_1009A03D4(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  double v3 = *(double *)(a1 + 88);
  if (v3 == 1.79769313e308) {
    return 2LL;
  }
  if (v3 >= Current + -1800.0) {
    return v3 <= Current;
  }
  return 0LL;
}

uint64_t sub_1009A042C()
{
  uint64_t v0 = 0xFFFFFFFFLL;
  unsigned int v4 = -1;
  io_registry_entry_t v1 = sub_100E45F70( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "AppleHIDKeyboardEventDriverV2"));
  if (v1)
  {
    io_object_t v2 = v1;
    sub_100E45FA4(&v4, v1, @"ProductID");
    IOObjectRelease(v2);
    return v4;
  }

  return v0;
}

void sub_1009A0498(id a1)
{
  qword_1019345C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Accessory");
}

double sub_1009A04C4(uint64_t a1)
{
  *(void *)a1 = off_10182B230;
  *(_DWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 5;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(void *)(a1 + 64) = a1 + 72;
  double result = 2.22507386e-308;
  *(_OWORD *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = xmmword_1012E2690;
  return result;
}

double sub_1009A0508(uint64_t a1, double a2)
{
  double v2 = a2 - *(double *)(a1 + 88);
  double result = 0.0;
  if (v2 < 10.0) {
    return *(double *)(a1 + 96);
  }
  return result;
}

void sub_1009A0528(uint64_t a1, double a2)
{
  double v4 = *(double *)(a1 + 88);
  double v5 = a2 - v4;
  if (v5 >= 10.0)
  {
    sub_100210444((void *)a1);
    *(void *)(a1 + 96) = 0LL;
    goto LABEL_9;
  }

  if (v4 == 2.22507386e-308)
  {
LABEL_9:
    *(double *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = a2;
    return;
  }

  double v7 = v5;
  sub_1002104CC(a1, &v7);
  *(double *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = a2;
  double v7 = 0.0;
  if (*(_DWORD *)(a1 + 80) >= 3u && sub_100358478((void *)a1, 2, &v7))
  {
    double v6 = 0.0;
    if (v7 > 0.0) {
      double v6 = 1.0 / v7;
    }
    *(double *)(a1 + 96) = v6;
  }

void sub_1009A080C(_Unwind_Exception *a1)
{
}

uint64_t sub_1009A0828(uint64_t a1, uint64_t a2)
{
  if (qword_101934510 != -1) {
    dispatch_once(&qword_101934510, &stru_101863F40);
  }
  double v4 = (os_log_s *)qword_101934518;
  if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(_DWORD *)int buf = 134217984;
    *(void *)unint64_t v21 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Finished insertion startTime %f", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934510 != -1) {
      dispatch_once(&qword_101934510, &stru_101863F40);
    }
    uint64_t v13 = *(void *)(a2 + 8);
    int v18 = 134217984;
    uint64_t v19 = v13;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Finished insertion startTime %f",  COERCE_DOUBLE(&v18));
    CFRunLoopSourceRef v15 = (uint8_t *)v14;
    sub_10029211C("Generic", 1LL, 0, 2LL, "-[CMStrideCalibrationDatabase initWithSilo:]_block_invoke", "%s\n", v14);
    if (v15 != buf) {
      free(v15);
    }
  }

  double v6 = sub_100DA5ECC(*(void *)(*(void *)(a1 + 32) + 8LL), *(double *)(a2 + 72));
  if (-[NSArray count](v6, "count") >= 0x33)
  {
    objc_msgSend(-[NSArray objectAtIndex:](v6, "objectAtIndex:", 50), "getBytes:length:", buf, 120);
    sub_100DA4290(*(void *)(*(void *)(a1 + 32) + 8LL), *(double *)&v21[4]);
  }

  uint64_t result = objc_opt_respondsToSelector( [*(id *)(a1 + 32) delegate],  "strideCalibrationDatabase:didInsertEntry:");
  if ((result & 1) != 0)
  {
    id v8 = [*(id *)(a1 + 32) delegate];
    uint64_t v9 = *(void *)(a1 + 32);
    __int128 v10 = *(_OWORD *)(a2 + 80);
    v16[4] = *(_OWORD *)(a2 + 64);
    v16[5] = v10;
    void v16[6] = *(_OWORD *)(a2 + 96);
    uint64_t v17 = *(void *)(a2 + 112);
    __int128 v11 = *(_OWORD *)(a2 + 16);
    v16[0] = *(_OWORD *)a2;
    v16[1] = v11;
    __int128 v12 = *(_OWORD *)(a2 + 48);
    _DWORD v16[2] = *(_OWORD *)(a2 + 32);
    double v16[3] = v12;
    return (uint64_t)[v8 strideCalibrationDatabase:v9 didInsertEntry:v16];
  }

  return result;
}

uint64_t sub_1009A0C44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  *(void *)&v23[1] = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v24 = 256;
  v23[0] = *(double *)(a2 + 8);
  if (sub_100D8AB44(v6, v23))
  {
    if (sub_100D8A92C(v6))
    {
      (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 80LL))(a1, a2, 0LL);
    }

    else if (!*(_BYTE *)(a1 + 128))
    {
      __int128 v12 = (void *)(a1 + 176);
      unint64_t v13 = *(void *)(a1 + 216);
      if (v13 > *(int *)(a1 + 344))
      {
        ++*(void *)(a1 + 208);
        *(void *)(a1 + 216) = v13 - 1;
        sub_1005AA13C(a1 + 176, 1);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101863F60);
        }
        uint64_t v14 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)int buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "Maximum number of entries exceeded, throwing out oldest entry.",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_101863F60);
          }
          v22[0] = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Maximum number of entries exceeded, throwing out oldest entry.",  v22,  2);
          io_object_t v20 = (uint8_t *)v19;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityRecorderDb<CLStrideCalEntry>::addSuspectRecord(const T &) [T = CLStrideCalEntry, DataProtecti onPolicy = CLActivityDB::ClassCDataProtectionPolicy]",  "%s\n",  v19);
          if (v20 != buf) {
            free(v20);
          }
        }
      }

      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101863F40);
      }
      CFRunLoopSourceRef v15 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "Buffer was added to since db was inaccesible.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101863F40);
        }
        v22[0] = 0;
        LODWORD(v21) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Buffer was added to since db was inaccesible.",  v22,  v21);
        int v18 = (uint8_t *)v17;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityRecorderDb<CLStrideCalEntry>::addSuspectRecord(const T &) [T = CLStrideCalEntry, DataProtection Policy = CLActivityDB::ClassCDataProtectionPolicy]",  "%s\n",  v17);
        if (v18 != buf) {
          free(v18);
        }
      }

      __n128 v7 = sub_1009A1948(v12, (__int128 *)a2);
    }
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101863F60);
    }
    id v8 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289538;
      int v26 = 0;
      __int16 v27 = 2082;
      unsigned int v28 = "";
      __int16 v29 = 1026;
      int v30 = (int)v23[0];
      __int16 v31 = 2082;
      float v32 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:CL database error, record contains invalid time, invalid time:%{public}d, name: %{public, location:escape_only}s}",  buf,  0x22u);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101863F60);
      }
    }

    __int128 v10 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      __int128 v11 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289538;
      int v26 = 0;
      __int16 v27 = 2082;
      unsigned int v28 = "";
      __int16 v29 = 1026;
      int v30 = (int)v23[0];
      __int16 v31 = 2082;
      float v32 = v11;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v10,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "CL database error, record contains invalid time",  "{msg%{public}.0s:CL database error, record contains invalid time, invalid time:%{public}d, name: %{public, location:escape_only}s}",  buf,  0x22u);
    }
  }

  return (*(uint64_t (**)(uint64_t, __n128))(*(void *)v5 + 24LL))(v5, v7);
}

void sub_1009A113C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

void sub_1009A16F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_1009A1820(_Unwind_Exception *exception_object)
{
  double v3 = *(void **)(v1 - 72);
  if (v3)
  {
    *(void *)(v1 - 64) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void sub_1009A191C(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

__n128 sub_1009A1948(void *a1, __int128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 34 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1009A1A38(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x22)) + 120 * (v7 % 0x22);
  __int128 v9 = *a2;
  __int128 v10 = a2[1];
  __int128 v11 = a2[3];
  *(_OWORD *)(v8 + 32) = a2[2];
  *(_OWORD *)(v8 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v11;
  *(_OWORD *)unint64_t v8 = v9;
  *(_OWORD *)(v8 + 16) = v10;
  __n128 result = (__n128)a2[4];
  __int128 v13 = a2[5];
  __int128 v14 = a2[6];
  *(void *)(v8 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(v8 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v13;
  *(_OWORD *)(v8 + 96) = v14;
  *(__n128 *)(v8 + 64) = result;
  ++a1[5];
  return result;
}

void sub_1009A1A0C(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_1009A1A38(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x22;
  unint64_t v4 = v2 - 34;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    __int128 v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      double v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      std::stringbuf v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        __int128 v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)__int128 v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_1009A1D00( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_1009A1D4C(void *a1, int a2)
{
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  *a1 = off_101863F90;
  a1[9] = off_101864048;
  sub_1009A2FA0((uint64_t)a1);
  return a1;
}

void sub_1009A1DD4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_1009A1E00(uint64_t a1, char *a2, int a3, uint64_t a4, int a5, float a6)
{
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  uint64_t v12 = (void *)(a1 + 8);
  *(void *)a1 = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 8));
  void *v12 = &off_101826EF8;
  *(void *)a1 = off_101864468;
  *(void *)(a1 + 72) = off_101864510;
  sub_100D8A584(a1 + 72, a2, a3, a1, a6, a4, a5, 0LL);
  *(void *)a1 = off_101864468;
  *(void *)(a1 + 72) = off_101864510;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(void *)(a1 + 224) = 0LL;
  *(void *)(a1 + 232) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)(a1 + 24sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(void *)(a1 + 264) = 0x7FEFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 28_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 32sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 36_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_DWORD *)(a1 + 40sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 1;
  *(_DWORD *)(a1 + 40_Block_object_dispose((const void *)(v1 - 224), 8) = 12000;
  *(void *)(a1 + 416) = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 424));
  *(void *)(a1 + 424) = &off_101826EF8;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v29 = a1 + 112;
  (*(void (**)(void))(v13 + 16))();
  __int16 v31 = 256;
  if (a3)
  {
    *(void *)(a1 + 232) = 0xBFF0000000000000LL;
LABEL_3:
    (*(void (**)(uint64_t))(*(void *)v29 + 24LL))(v29);
    return a1;
  }

  if (*(char *)(a4 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a4, *(void *)(a4 + 8));
  }

  else
  {
    *(_OWORD *)__int128 __p = *(_OWORD *)a4;
    uint64_t v28 = *(void *)(a4 + 16);
  }

  sub_100D8AF38(a1 + 72, (uint64_t)__p);
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v14 = sub_1006E27E8();
  sub_100413284(v14, buf);
  uint64_t v15 = (int *)(a1 + 408);
  char v16 = sub_1002A7CB0(*(uint64_t *)buf, "ActivityInMemoryBufferSize", (_DWORD *)(a1 + 408));
  uint64_t v17 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }

  if ((v16 & 1) == 0) {
    *uint64_t v15 = 12000;
  }
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101864550);
  }
  int64_t v20 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    int v21 = *v15;
    *(_DWORD *)int buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v21;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Buffer size: %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101864550);
    }
    int v24 = *v15;
    v32[0] = 67109120;
    v32[1] = v24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Buffer size: %d",  v32);
    uint64_t v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLActivityRecorderDb<VO2MaxStagingSummary, CLActivityDB::ClassBDataProtectionPolicy>::CLActivityRecorderDb(const c har *, BOOL, float, const std::string &, const CLSqliteDatabase::SqlitePropertyPersistence) [T = VO2MaxStagingSumm ary, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  int v22 = HIBYTE(v31);
  *(void *)(a1 + 232) = 0xBFF0000000000000LL;
  if (v22)
  {
    if ((_BYTE)v31)
    {
      pthread_mutex_unlock(v30);
      return a1;
    }

    goto LABEL_3;
  }

  return a1;
}

void sub_1009A21D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  v24[52] = off_101826EC8;
  sub_1001B9C98(v27);
  sub_1009A5488(v26);
  sub_100D8A88C(a12);
  *int v24 = off_101826EC8;
  sub_1001B9C98(v25);
  _Unwind_Resume(a1);
}

void sub_1009A2274()
{
}

void *sub_1009A227C(void *a1)
{
  a1[9] = off_101864510;
  uint64_t v2 = (uint64_t)(a1 + 9);
  *a1 = off_101864468;
  a1[52] = off_101826EC8;
  sub_1001B9C98(a1 + 53);
  sub_1009A5488(a1 + 22);
  sub_100D8A88C(v2);
  *a1 = off_101826EC8;
  sub_1001B9C98(a1 + 1);
  return a1;
}

void *sub_1009A22FC(uint64_t a1)
{
  return sub_1009A227C((void *)(a1 - 72));
}

void sub_1009A2304(void *a1)
{
  uint64_t v1 = sub_1009A227C(a1);
  operator delete(v1);
}

void sub_1009A2318(uint64_t a1)
{
  uint64_t v1 = sub_1009A227C((void *)(a1 - 72));
  operator delete(v1);
}

void *sub_1009A2330@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "VO2MaxStagingSummaryHistory");
}

void *sub_1009A2340@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "VO2MaxStagingSummaryHistory");
}

uint64_t sub_1009A2350(uint64_t *a1, uint64_t a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1003C0D54(a1[10], "DELETE FROM VO2MaxStagingSummaryHistory WHERE startTime < ?", &v13);
  uint64_t v5 = v13;
  char v6 = (sqlite3_stmt *)sub_100019240(v13);
  if (sub_1003B7480(v6, 1, Current - *(double *)(*(void *)(a2 + 8) - 24LL)))
  {
    uint64_t v7 = a1[10];
    unint64_t v8 = (sqlite3_stmt *)sub_100019240(v5);
    sub_1003BB2BC(v7, v8);
    uint64_t v9 = (*(int (**)(uint64_t *))(*a1 + 152))(a1);
  }

  else
  {
    uint64_t v9 = -1LL;
  }

  sub_1003C05BC(a1[10]);
  uint64_t v10 = a1[10];
  else {
    uint64_t v11 = *(void *)(v10 + 88);
  }
  sub_1003C1EC0(v10, v11);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return v9;
}

void sub_1009A2468(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009A2488(uint64_t a1, uint64_t a2)
{
  return sub_1009A2350((uint64_t *)(a1 - 72), a2);
}

uint64_t sub_1009A2490(uint64_t a1, const unsigned __int8 *a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    uuid_unparse(a2, out);
    sub_1003C0D54(*(void *)(a1 + 80), "DELETE FROM VO2MaxStagingSummaryHistory WHERE sessionId = ?", buf);
    uint64_t v5 = *(void *)buf;
    char v6 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)buf);
    uint64_t result = sub_1003BC1F0(v6, 1, out);
    if ((_DWORD)result)
    {
      if (qword_1019346E0 != -1) {
        dispatch_once(&qword_1019346E0, &stru_1018640D8);
      }
      uint64_t v7 = (os_log_s *)qword_1019346E8;
      if (os_log_type_enabled((os_log_t)qword_1019346E8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)int buf = 136446210;
        *(void *)&uint8_t buf[4] = out;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Deleting VO2MaxStagingSummaryHistory records from db where sessionId = %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019346E0 != -1) {
          dispatch_once(&qword_1019346E0, &stru_1018640D8);
        }
        int v11 = 136446210;
        uint64_t v12 = out;
        uint64_t v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346E8,  2LL,  "Deleting VO2MaxStagingSummaryHistory records from db where sessionId = %{public}s",  &v11,  12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLVO2MaxStagingSummaryRecorderDb::deleteRecordsForSessionId(unsigned char *)",  "%s\n",  v10);
        if (v10 != buf) {
          free(v10);
        }
      }

      uint64_t v8 = *(void *)(a1 + 80);
      uint64_t v9 = (sqlite3_stmt *)sub_100019240(v5);
      uint64_t result = sub_1003BB2BC(v8, v9);
    }

    if (v5) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return result;
}

void sub_1009A26B8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009A26E4(uint64_t a1, char **a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    a2[1] = *a2;
    sub_1003C0D54(*(void *)(a1 + 80), "SELECT * from VO2MaxStagingSummaryHistory ORDER BY startTime ASC", &v46);
    uint64_t v5 = v46;
    uint64_t v45 = v46;
    sub_1003C0454(*(void *)(a1 + 80));
    *(void *)&__int128 v46 = 0LL;
    *((void *)&v46 + 1) = 0x7FEFFFFFFFFFFFFFLL;
    *(void *)&__int128 v47 = 0LL;
    *((void *)&v48 + 1) = 0x7FEFFFFFFFFFFFFFLL;
    __int128 v49 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    __int128 v55 = 0u;
    LODWORD(v57) = 1;
    __int128 v56 = 0u;
    while (!sub_1009A2A14(&v45, (uint64_t)&v46))
    {
      unint64_t v6 = (unint64_t)a2[1];
      unint64_t v7 = (unint64_t)a2[2];
      if (v6 >= v7)
      {
        unint64_t v18 = 0xD37A6F4DE9BD37A7LL * ((uint64_t)(v6 - (void)*a2) >> 3);
        unint64_t v19 = v18 + 1;
        if (v18 + 1 > 0x1642C8590B21642LL) {
          sub_100007008();
        }
        unint64_t v20 = 0xD37A6F4DE9BD37A7LL * ((uint64_t)(v7 - (void)*a2) >> 3);
        if (2 * v20 > v19) {
          unint64_t v19 = 2 * v20;
        }
        if (v20 >= 0xB21642C8590B21LL) {
          unint64_t v21 = 0x1642C8590B21642LL;
        }
        else {
          unint64_t v21 = v19;
        }
        if (v21) {
          int v22 = (char *)sub_1002DF6FC((uint64_t)(a2 + 2), v21);
        }
        else {
          int v22 = 0LL;
        }
        uint64_t v23 = &v22[184 * v18];
        __int128 v24 = v46;
        __int128 v25 = v47;
        __int128 v26 = v49;
        *((_OWORD *)v23 + 2) = v48;
        *((_OWORD *)v23 + 3) = v26;
        *(_OWORD *)uint64_t v23 = v24;
        *((_OWORD *)v23 + 1) = v25;
        __int128 v27 = v50;
        __int128 v28 = v51;
        __int128 v29 = v53;
        *((_OWORD *)v23 + 6) = v52;
        *((_OWORD *)v23 + 7) = v29;
        *((_OWORD *)v23 + 4) = v27;
        *((_OWORD *)v23 + 5) = v28;
        __int128 v30 = v54;
        __int128 v31 = v55;
        __int128 v32 = v56;
        *((void *)v23 + 22) = v57;
        *((_OWORD *)v23 + 9) = v31;
        *((_OWORD *)v23 + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v32;
        *((_OWORD *)v23 + _Block_object_dispose((const void *)(v1 - 224), 8) = v30;
        uint64_t v34 = *a2;
        unint64_t v33 = a2[1];
        double v35 = v23;
        if (v33 != *a2)
        {
          do
          {
            __int128 v36 = *(_OWORD *)(v33 - 184);
            __int128 v37 = *(_OWORD *)(v33 - 168);
            __int128 v38 = *(_OWORD *)(v33 - 152);
            *(_OWORD *)(v35 - 136) = *(_OWORD *)(v33 - 136);
            *(_OWORD *)(v35 - 152) = v38;
            *(_OWORD *)(v35 - 16_Block_object_dispose((const void *)(v1 - 224), 8) = v37;
            *(_OWORD *)(v35 - 184) = v36;
            __int128 v39 = *(_OWORD *)(v33 - 120);
            __int128 v40 = *(_OWORD *)(v33 - 104);
            __int128 v41 = *(_OWORD *)(v33 - 88);
            *(_OWORD *)(v35 - 72) = *(_OWORD *)(v33 - 72);
            *(_OWORD *)(v35 - 8_Block_object_dispose((const void *)(v1 - 224), 8) = v41;
            *(_OWORD *)(v35 - 104) = v40;
            *(_OWORD *)(v35 - 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v39;
            __int128 v42 = *(_OWORD *)(v33 - 56);
            __int128 v43 = *(_OWORD *)(v33 - 40);
            __int128 v44 = *(_OWORD *)(v33 - 24);
            *((void *)v35 - 1) = *((void *)v33 - 1);
            *(_OWORD *)(v35 - 24) = v44;
            *(_OWORD *)(v35 - 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v43;
            *(_OWORD *)(v35 - 56) = v42;
            v35 -= 184;
            v33 -= 184;
          }

          while (v33 != v34);
          unint64_t v33 = *a2;
        }

        uint64_t v17 = v23 + 184;
        *a2 = v35;
        a2[1] = v23 + 184;
        a2[2] = &v22[184 * v21];
        if (v33) {
          operator delete(v33);
        }
      }

      else
      {
        __int128 v8 = v46;
        __int128 v9 = v47;
        __int128 v10 = v49;
        *(_OWORD *)(v6 + 32) = v48;
        *(_OWORD *)(v6 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v10;
        *(_OWORD *)unint64_t v6 = v8;
        *(_OWORD *)(v6 + 16) = v9;
        __int128 v11 = v50;
        __int128 v12 = v51;
        __int128 v13 = v53;
        *(_OWORD *)(v6 + 96) = v52;
        *(_OWORD *)(v6 + 112) = v13;
        *(_OWORD *)(v6 + 64) = v11;
        *(_OWORD *)(v6 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v12;
        __int128 v14 = v54;
        __int128 v15 = v55;
        __int128 v16 = v56;
        *(void *)(v6 + 176) = v57;
        *(_OWORD *)(v6 + 144) = v15;
        *(_OWORD *)(v6 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v16;
        *(_OWORD *)(v6 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v14;
        uint64_t v17 = (char *)(v6 + 184);
      }

      a2[1] = v17;
    }

    uint64_t result = sub_1003C05BC(*(void *)(a1 + 80));
    if (v5) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return result;
}

void sub_1009A29E4(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009A2A14(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = (sqlite3_stmt *)sub_100019240(*a1);
  int v5 = sqlite3_step(v4);
  if (v5 == 101) {
    return 1LL;
  }
  if (v5 != 100) {
    return 2LL;
  }
  sub_1009A331C(a1, a2);
  return 0LL;
}

uint64_t sub_1009A2A70(uint64_t a1)
{
  uint64_t v3 = v8;
  unint64_t v4 = (sqlite3_stmt *)sub_100019240(v8);
  int v5 = sqlite3_step(v4);
  if (v5 == 100)
  {
    unint64_t v6 = (sqlite3_stmt *)sub_100019240(v3);
    uint64_t v1 = sqlite3_column_int(v6, 0);
  }

  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  if (v5 != 100) {
    return 0xFFFFFFFFLL;
  }
  return v1;
}

void sub_1009A2B10(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009A2B34(uint64_t a1)
{
  return sub_1009A2A70(a1 - 72);
}

uint64_t sub_1009A2B3C(uint64_t a1, char **a2, double a3, double a4)
{
  if ((sub_100D8A92C(a1 + 72) & 1) != 0)
  {
    a2[1] = *a2;
    sub_1003C0D54( *(void *)(a1 + 80),  "SELECT * FROM VO2MaxStagingSummaryHistory WHERE pointCount > 0 AND startTime > ? and startTime < ? ORDER BY startTime DESC",  buf);
    uint64_t v8 = *(void *)buf;
    v53[0] = *(void *)buf;
    *(void *)int buf = 0LL;
    *(void *)&uint8_t buf[8] = 0x7FEFFFFFFFFFFFFFLL;
    *(void *)&__int128 v55 = 0LL;
    *((void *)&v56 + 1) = 0x7FEFFFFFFFFFFFFFLL;
    __int128 v57 = 0u;
    __int128 v58 = 0u;
    __int128 v59 = 0u;
    __int128 v60 = 0u;
    __int128 v61 = 0u;
    __int128 v62 = 0u;
    __int128 v63 = 0u;
    __int128 v64 = 0u;
    LODWORD(v65) = 1;
    __int128 v9 = (sqlite3_stmt *)sub_100019240(v53[0]);
    if (sub_1003C28BC(v9, 1, (int)a3))
    {
      __int128 v10 = (sqlite3_stmt *)sub_100019240(v8);
      if (sub_1003C28BC(v10, 2, (int)a4))
      {
        while (!sub_1009A2A14(v53, (uint64_t)buf))
        {
          unint64_t v11 = (unint64_t)a2[1];
          unint64_t v12 = (unint64_t)a2[2];
          if (v11 >= v12)
          {
            unint64_t v23 = 0xD37A6F4DE9BD37A7LL * ((uint64_t)(v11 - (void)*a2) >> 3);
            unint64_t v24 = v23 + 1;
            if (v23 + 1 > 0x1642C8590B21642LL) {
              sub_100007008();
            }
            unint64_t v25 = 0xD37A6F4DE9BD37A7LL * ((uint64_t)(v12 - (void)*a2) >> 3);
            if (2 * v25 > v24) {
              unint64_t v24 = 2 * v25;
            }
            if (v25 >= 0xB21642C8590B21LL) {
              unint64_t v26 = 0x1642C8590B21642LL;
            }
            else {
              unint64_t v26 = v24;
            }
            if (v26) {
              __int128 v27 = (char *)sub_1002DF6FC((uint64_t)(a2 + 2), v26);
            }
            else {
              __int128 v27 = 0LL;
            }
            __int128 v28 = &v27[184 * v23];
            __int128 v29 = *(_OWORD *)buf;
            __int128 v30 = v55;
            __int128 v31 = v57;
            *((_OWORD *)v28 + 2) = v56;
            *((_OWORD *)v28 + 3) = v31;
            *(_OWORD *)__int128 v28 = v29;
            *((_OWORD *)v28 + 1) = v30;
            __int128 v32 = v58;
            __int128 v33 = v59;
            __int128 v34 = v61;
            *((_OWORD *)v28 + 6) = v60;
            *((_OWORD *)v28 + 7) = v34;
            *((_OWORD *)v28 + 4) = v32;
            *((_OWORD *)v28 + 5) = v33;
            __int128 v35 = v62;
            __int128 v36 = v63;
            __int128 v37 = v64;
            *((void *)v28 + 22) = v65;
            *((_OWORD *)v28 + 9) = v36;
            *((_OWORD *)v28 + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v37;
            *((_OWORD *)v28 + _Block_object_dispose((const void *)(v1 - 224), 8) = v35;
            __int128 v39 = *a2;
            __int128 v38 = a2[1];
            __int128 v40 = v28;
            if (v38 != *a2)
            {
              do
              {
                __int128 v41 = *(_OWORD *)(v38 - 184);
                __int128 v42 = *(_OWORD *)(v38 - 168);
                __int128 v43 = *(_OWORD *)(v38 - 152);
                *(_OWORD *)(v40 - 136) = *(_OWORD *)(v38 - 136);
                *(_OWORD *)(v40 - 152) = v43;
                *(_OWORD *)(v40 - 16_Block_object_dispose((const void *)(v1 - 224), 8) = v42;
                *(_OWORD *)(v40 - 184) = v41;
                __int128 v44 = *(_OWORD *)(v38 - 120);
                __int128 v45 = *(_OWORD *)(v38 - 104);
                __int128 v46 = *(_OWORD *)(v38 - 88);
                *(_OWORD *)(v40 - 72) = *(_OWORD *)(v38 - 72);
                *(_OWORD *)(v40 - 8_Block_object_dispose((const void *)(v1 - 224), 8) = v46;
                *(_OWORD *)(v40 - 104) = v45;
                *(_OWORD *)(v40 - 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v44;
                __int128 v47 = *(_OWORD *)(v38 - 56);
                __int128 v48 = *(_OWORD *)(v38 - 40);
                __int128 v49 = *(_OWORD *)(v38 - 24);
                *((void *)v40 - 1) = *((void *)v38 - 1);
                *(_OWORD *)(v40 - 24) = v49;
                *(_OWORD *)(v40 - 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v48;
                *(_OWORD *)(v40 - 56) = v47;
                v40 -= 184;
                v38 -= 184;
              }

              while (v38 != v39);
              __int128 v38 = *a2;
            }

            int v22 = v28 + 184;
            *a2 = v40;
            a2[1] = v28 + 184;
            a2[2] = &v27[184 * v26];
            if (v38) {
              operator delete(v38);
            }
          }

          else
          {
            __int128 v13 = *(_OWORD *)buf;
            __int128 v14 = v55;
            __int128 v15 = v57;
            *(_OWORD *)(v11 + 32) = v56;
            *(_OWORD *)(v11 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v15;
            *(_OWORD *)unint64_t v11 = v13;
            *(_OWORD *)(v11 + 16) = v14;
            __int128 v16 = v58;
            __int128 v17 = v59;
            __int128 v18 = v61;
            *(_OWORD *)(v11 + 96) = v60;
            *(_OWORD *)(v11 + 112) = v18;
            *(_OWORD *)(v11 + 64) = v16;
            *(_OWORD *)(v11 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v17;
            __int128 v19 = v62;
            __int128 v20 = v63;
            __int128 v21 = v64;
            *(void *)(v11 + 176) = v65;
            *(_OWORD *)(v11 + 144) = v20;
            *(_OWORD *)(v11 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v21;
            *(_OWORD *)(v11 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v19;
            int v22 = (char *)(v11 + 184);
          }

          a2[1] = v22;
        }
      }
    }

    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
    return 100LL;
  }

  else
  {
    if (qword_1019346E0 != -1) {
      dispatch_once(&qword_1019346E0, &stru_1018640D8);
    }
    __int128 v50 = (os_log_s *)qword_1019346E8;
    if (os_log_type_enabled((os_log_t)qword_1019346E8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)int buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEBUG,  "VO2MaxStagingSummaryHistory, DB not accessible",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346E0 != -1) {
        dispatch_once(&qword_1019346E0, &stru_1018640D8);
      }
      LOWORD(v53[0]) = 0;
      __int128 v52 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346E8,  2LL,  "VO2MaxStagingSummaryHistory, DB not accessible",  v53,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMError CLVO2MaxStagingSummaryRecorderDb::queryInTimeRange(const CFAbsoluteTime, const CFAbsoluteTime, std::vect or<VO2MaxStagingSummary> &) const",  "%s\n",  v52);
    }

    return 109LL;
  }

void sub_1009A2F74(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1009A2FA0(uint64_t a1)
{
  uint64_t result = sub_1003C1048(*(void *)(a1 + 80));
  if ((_DWORD)result) {
    return sub_1003B59A0( *(void *)(a1 + 80),  "VO2MaxStagingSummaryHistory",  (const char **)&off_1018640F8,  (const std::string::value_type **)&off_10198E8F0,  0);
  }
  return result;
}

uint64_t sub_1009A2FF4(uint64_t a1)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_1003C0D54(*(void *)(a1 + 80), "DELETE FROM VO2MaxStagingSummaryHistory", &v8);
    uint64_t v3 = v8;
    uint64_t v4 = *(void *)(a1 + 80);
    int v5 = (sqlite3_stmt *)sub_100019240(v8);
    sub_1003BB2BC(v4, v5);
    uint64_t v6 = *(void *)(a1 + 80);
    else {
      uint64_t v7 = *(void *)(v6 + 88);
    }
    uint64_t result = sub_1003C1EC0(v6, v7);
    if (v3) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
  }

  return result;
}

void sub_1009A3088(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009A30A8(uint64_t a1)
{
  return sub_1009A2FF4(a1 - 72);
}

uint64_t sub_1009A30B0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_1003C0D54( *(void *)(a1 + 80),  "INSERT INTO VO2MaxStagingSummaryHistory (startTime, workoutType, sessionId, durationInSeconds, pointCount, hrMax, hrMin, meanHr, meanVo2, meanSpeed, meanGrade, meanHrConfidence, meanHrCadenceAgreement, meanCadence, vo2MaxModelSo urce, sessionType) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",  v24);
    uint64_t v5 = *(void *)v24;
    uuid_unparse((const unsigned __int8 *)(a2 + 24), v24);
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v5);
    uint64_t result = sub_1003B7480(v6, 1, *(double *)(a2 + 8));
    if ((_DWORD)result)
    {
      uint64_t v7 = (sqlite3_stmt *)sub_100019240(v5);
      uint64_t result = sub_1003C28BC(v7, 2, *(_DWORD *)(a2 + 16));
      if ((_DWORD)result)
      {
        uint64_t v8 = (sqlite3_stmt *)sub_100019240(v5);
        uint64_t result = sub_1003BC1F0(v8, 3, v24);
        if ((_DWORD)result)
        {
          __int128 v9 = (sqlite3_stmt *)sub_100019240(v5);
          uint64_t result = sub_1003B7480(v9, 4, *(double *)(a2 + 40));
          if ((_DWORD)result)
          {
            __int128 v10 = (sqlite3_stmt *)sub_100019240(v5);
            uint64_t result = sub_1003C2D24(v10, 5, *(void *)(a2 + 48));
            if ((_DWORD)result)
            {
              unint64_t v11 = (sqlite3_stmt *)sub_100019240(v5);
              uint64_t result = sub_1003B7480(v11, 6, *(double *)(a2 + 64));
              if ((_DWORD)result)
              {
                unint64_t v12 = (sqlite3_stmt *)sub_100019240(v5);
                uint64_t result = sub_1003B7480(v12, 7, *(double *)(a2 + 56));
                if ((_DWORD)result)
                {
                  __int128 v13 = (sqlite3_stmt *)sub_100019240(v5);
                  uint64_t result = sub_1003B7480(v13, 8, *(double *)(a2 + 72));
                  if ((_DWORD)result)
                  {
                    __int128 v14 = (sqlite3_stmt *)sub_100019240(v5);
                    uint64_t result = sub_1003B7480(v14, 9, *(double *)(a2 + 96));
                    if ((_DWORD)result)
                    {
                      __int128 v15 = (sqlite3_stmt *)sub_100019240(v5);
                      uint64_t result = sub_1003B7480(v15, 10, *(double *)(a2 + 104));
                      if ((_DWORD)result)
                      {
                        __int128 v16 = (sqlite3_stmt *)sub_100019240(v5);
                        uint64_t result = sub_1003B7480(v16, 11, *(double *)(a2 + 112));
                        if ((_DWORD)result)
                        {
                          __int128 v17 = (sqlite3_stmt *)sub_100019240(v5);
                          uint64_t result = sub_1003B7480(v17, 12, *(double *)(a2 + 80));
                          if ((_DWORD)result)
                          {
                            __int128 v18 = (sqlite3_stmt *)sub_100019240(v5);
                            uint64_t result = sub_1003B7480(v18, 13, *(double *)(a2 + 88));
                            if ((_DWORD)result)
                            {
                              __int128 v19 = (sqlite3_stmt *)sub_100019240(v5);
                              uint64_t result = sub_1003B7480(v19, 14, *(double *)(a2 + 120));
                              if ((_DWORD)result)
                              {
                                __int128 v20 = (sqlite3_stmt *)sub_100019240(v5);
                                uint64_t result = sub_1003C28BC(v20, 15, *(_DWORD *)(a2 + 176));
                                if ((_DWORD)result)
                                {
                                  __int128 v21 = (sqlite3_stmt *)sub_100019240(v5);
                                  uint64_t result = sub_1003C28BC(v21, 16, *(_DWORD *)(a2 + 180));
                                  if ((_DWORD)result)
                                  {
                                    uint64_t v22 = *(void *)(a1 + 80);
                                    unint64_t v23 = (sqlite3_stmt *)sub_100019240(v5);
                                    uint64_t result = sub_1003BB2BC(v22, v23);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    if (v5) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return result;
}

void sub_1009A32E8(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1009A3310(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1009A331C(a2, a3);
}

uint64_t sub_1009A331C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (sqlite3_stmt *)sub_100019240(*a1);
  *(void *)a2 = sqlite3_column_int(v4, 0);
  uint64_t v5 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = sqlite3_column_double(v5, 1);
  uint64_t v6 = (sqlite3_stmt *)sub_100019240(*a1);
  *(void *)(a2 + 16) = sqlite3_column_int(v6, 2);
  uint64_t v7 = (sqlite3_stmt *)sub_100019240(*a1);
  uint64_t v8 = sqlite3_column_text(v7, 3);
  uuid_parse((const char *)v8, (unsigned __int8 *)(a2 + 24));
  __int128 v9 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = sqlite3_column_double(v9, 4);
  __int128 v10 = (sqlite3_stmt *)sub_100019240(*a1);
  *(void *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = sqlite3_column_int(v10, 5);
  unint64_t v11 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 64) = sqlite3_column_double(v11, 6);
  unint64_t v12 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 56) = sqlite3_column_double(v12, 7);
  __int128 v13 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 72) = sqlite3_column_double(v13, 8);
  __int128 v14 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 96) = sqlite3_column_double(v14, 9);
  __int128 v15 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 104) = sqlite3_column_double(v15, 10);
  __int128 v16 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 112) = sqlite3_column_double(v16, 11);
  __int128 v17 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = sqlite3_column_double(v17, 12);
  __int128 v18 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = sqlite3_column_double(v18, 13);
  __int128 v19 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = sqlite3_column_double(v19, 14);
  __int128 v20 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_DWORD *)(a2 + 176) = sqlite3_column_int(v20, 15);
  __int128 v21 = (sqlite3_stmt *)sub_100019240(*a1);
  uint64_t result = sqlite3_column_int(v21, 16);
  *(_DWORD *)(a2 + 18sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = result;
  return result;
}

uint64_t sub_1009A34A0(void *a1, void **a2, double a3, double a4)
{
  uint64_t v8 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v63);
  if ((SHIBYTE(v64) & 0x80000000) == 0)
  {
    if (HIBYTE(v64)) {
      goto LABEL_3;
    }
LABEL_40:
    sub_1012559B0(v8);
    __break(1u);
  }

  __int128 v58 = v63[1];
  operator delete(v63[0]);
  if (!v58) {
    goto LABEL_40;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v63);
  __int128 v9 = sub_10000CF44(&v64, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(__int128 *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((SBYTE7(v68) & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (__int128 *)__p;
  }
  if ((SBYTE7(v68) & 0x80u) == 0) {
    uint64_t v11 = BYTE7(v68);
  }
  else {
    uint64_t v11 = *((void *)&__p + 1);
  }
  unint64_t v12 = sub_10000CF44(v9, (uint64_t)p_p, v11);
  sub_10000CF44(v12, (uint64_t)" WHERE startTime > ? and startTime <= ? ORDER BY rowid ASC", 58LL);
  if (SBYTE7(v68) < 0) {
    operator delete((void *)__p);
  }
  uint64_t v13 = a1[10];
  std::stringbuf::str((std::stringbuf::string_type *)&__p, &v65);
  if ((SBYTE7(v68) & 0x80u) == 0) {
    __int128 v14 = (char *)&__p;
  }
  else {
    __int128 v14 = (char *)__p;
  }
  sub_1003C0D54(v13, v14, &v61);
  uint64_t v15 = v61;
  uint64_t v61 = 0LL;
  uint64_t v62 = v15;
  if (SBYTE7(v68) < 0) {
    operator delete((void *)__p);
  }
  __int128 v16 = (sqlite3_stmt *)sub_100019240(v15);
  if (sub_1003B7480(v16, 1, a3) && (__int128 v17 = (sqlite3_stmt *)sub_100019240(v15), sub_1003B7480(v17, 2, a4)))
  {
    *(void *)&__int128 __p = 0LL;
    *((void *)&__p + 1) = 0x7FEFFFFFFFFFFFFFLL;
    *(void *)&__int128 v68 = 0LL;
    *((void *)&v69 + 1) = 0x7FEFFFFFFFFFFFFFLL;
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    __int128 v72 = 0u;
    __int128 v73 = 0u;
    __int128 v74 = 0u;
    __int128 v75 = 0u;
    LODWORD(v7_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
    __int128 v76 = 0u;
    __int128 v77 = 0u;
    while (1)
    {
      uint64_t v18 = sub_1001BA11C((uint64_t)a1, &v62, (uint64_t)&__p);
      if ((_DWORD)v18) {
        break;
      }
      __int128 v19 = (char *)a2[1];
      __int128 v20 = (char *)a2[2];
      if (v19 >= v20)
      {
        unint64_t v31 = 0xD37A6F4DE9BD37A7LL * ((v19 - (_BYTE *)*a2) >> 3);
        unint64_t v32 = v31 + 1;
        if (v31 + 1 > 0x1642C8590B21642LL) {
          sub_100007008();
        }
        unint64_t v33 = 0xD37A6F4DE9BD37A7LL * ((v20 - (_BYTE *)*a2) >> 3);
        if (2 * v33 > v32) {
          unint64_t v32 = 2 * v33;
        }
        if (v33 >= 0xB21642C8590B21LL) {
          unint64_t v34 = 0x1642C8590B21642LL;
        }
        else {
          unint64_t v34 = v32;
        }
        if (v34) {
          __int128 v35 = (char *)sub_1002DF6FC((uint64_t)(a2 + 2), v34);
        }
        else {
          __int128 v35 = 0LL;
        }
        __int128 v36 = &v35[184 * v31];
        __int128 v37 = __p;
        __int128 v38 = v68;
        __int128 v39 = v70;
        *((_OWORD *)v36 + 2) = v69;
        *((_OWORD *)v36 + 3) = v39;
        *(_OWORD *)__int128 v36 = v37;
        *((_OWORD *)v36 + 1) = v38;
        __int128 v40 = v71;
        __int128 v41 = v72;
        __int128 v42 = v74;
        *((_OWORD *)v36 + 6) = v73;
        *((_OWORD *)v36 + 7) = v42;
        *((_OWORD *)v36 + 4) = v40;
        *((_OWORD *)v36 + 5) = v41;
        __int128 v43 = v75;
        __int128 v44 = v76;
        __int128 v45 = v77;
        *((void *)v36 + 22) = v78;
        *((_OWORD *)v36 + 9) = v44;
        *((_OWORD *)v36 + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v45;
        *((_OWORD *)v36 + _Block_object_dispose((const void *)(v1 - 224), 8) = v43;
        __int128 v47 = (char *)*a2;
        __int128 v46 = (char *)a2[1];
        __int128 v48 = v36;
        if (v46 != *a2)
        {
          do
          {
            __int128 v49 = *(_OWORD *)(v46 - 184);
            __int128 v50 = *(_OWORD *)(v46 - 168);
            __int128 v51 = *(_OWORD *)(v46 - 152);
            *(_OWORD *)(v48 - 136) = *(_OWORD *)(v46 - 136);
            *(_OWORD *)(v48 - 152) = v51;
            *(_OWORD *)(v48 - 16_Block_object_dispose((const void *)(v1 - 224), 8) = v50;
            *(_OWORD *)(v48 - 184) = v49;
            __int128 v52 = *(_OWORD *)(v46 - 120);
            __int128 v53 = *(_OWORD *)(v46 - 104);
            __int128 v54 = *(_OWORD *)(v46 - 88);
            *(_OWORD *)(v48 - 72) = *(_OWORD *)(v46 - 72);
            *(_OWORD *)(v48 - 8_Block_object_dispose((const void *)(v1 - 224), 8) = v54;
            *(_OWORD *)(v48 - 104) = v53;
            *(_OWORD *)(v48 - 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v52;
            __int128 v55 = *(_OWORD *)(v46 - 56);
            __int128 v56 = *(_OWORD *)(v46 - 40);
            __int128 v57 = *(_OWORD *)(v46 - 24);
            *((void *)v48 - 1) = *((void *)v46 - 1);
            *(_OWORD *)(v48 - 24) = v57;
            *(_OWORD *)(v48 - 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v56;
            *(_OWORD *)(v48 - 56) = v55;
            v48 -= 184;
            v46 -= 184;
          }

          while (v46 != v47);
          __int128 v46 = (char *)*a2;
        }

        __int128 v30 = v36 + 184;
        *a2 = v48;
        a2[1] = v36 + 184;
        a2[2] = &v35[184 * v34];
        if (v46) {
          operator delete(v46);
        }
      }

      else
      {
        __int128 v21 = __p;
        __int128 v22 = v68;
        __int128 v23 = v70;
        *((_OWORD *)v19 + 2) = v69;
        *((_OWORD *)v19 + 3) = v23;
        *(_OWORD *)__int128 v19 = v21;
        *((_OWORD *)v19 + 1) = v22;
        __int128 v24 = v71;
        __int128 v25 = v72;
        __int128 v26 = v74;
        *((_OWORD *)v19 + 6) = v73;
        *((_OWORD *)v19 + 7) = v26;
        *((_OWORD *)v19 + 4) = v24;
        *((_OWORD *)v19 + 5) = v25;
        __int128 v27 = v75;
        __int128 v28 = v76;
        __int128 v29 = v77;
        *((void *)v19 + 22) = v78;
        *((_OWORD *)v19 + 9) = v28;
        *((_OWORD *)v19 + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v29;
        *((_OWORD *)v19 + _Block_object_dispose((const void *)(v1 - 224), 8) = v27;
        __int128 v30 = v19 + 184;
      }

      a2[1] = v30;
    }

    uint64_t v15 = v62;
  }

  else
  {
    uint64_t v18 = 2LL;
  }

  uint64_t v62 = 0LL;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
  }
  *(void **)((char *)v63
  uint64_t v64 = v59;
  std::streambuf::~streambuf(&v65);
  std::ios::~ios(&v66);
  return v18;
}

void sub_1009A38F8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, void *__p, uint64_t a47, int a48, __int16 a49, char a50,char a51)
{
  if (a51 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_1009A3968(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v2 = a1 + 112;
  uint64_t v4 = v2 - 40;
  uint64_t v40 = v2;
  (*(void (**)(void))(v3 + 16))();
  if (sub_100D8A92C(v4))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101864550);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289282;
      *(_DWORD *)__int128 v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      __int128 v46 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Database is already opened., name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    if (*(void *)(a1 + 216))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101864550);
      }
      uint64_t v7 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v8 = *(void *)(a1 + 216);
        *(_DWORD *)int buf = 134349056;
        *(void *)__int128 v44 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101864550);
        }
        uint64_t v35 = *(void *)(a1 + 216);
        int v41 = 134349056;
        uint64_t v42 = v35;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  &v41,  12);
        __int128 v37 = (uint8_t *)v36;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLActivityRecorderDb<VO2MaxStagingSummary, CLActivityDB::ClassBDataProtectionPolicy>::setDatabase Accessible() [T = VO2MaxStagingSummary, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v36);
        if (v37 != buf) {
          free(v37);
        }
      }
    }

    uint64_t v9 = 1LL;
    goto LABEL_63;
  }

  sub_1001BA070(a1);
  uint64_t v9 = sub_100D8A92C(v4);
  if ((_DWORD)v9)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101864550);
    }
    __int128 v10 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = (void *)(a1 + 88);
      uint64_t v12 = *(void *)(a1 + 216);
      *(_DWORD *)int buf = 68289539;
      *(_DWORD *)__int128 v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      __int128 v46 = v11;
      __int16 v47 = 2049;
      uint64_t v48 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Inserting entries into database, name:%{public, location:escape_only}s, size:%{private}llu}",  buf,  0x26u);
    }

    sub_1003C0454(*(void *)(a1 + 80));
    unint64_t v13 = *(void *)(a1 + 208);
    uint64_t v14 = *(void *)(a1 + 184);
    uint64_t v15 = *(void *)(a1 + 192);
    __int128 v16 = (void *)(v14 + 8 * (v13 / 0x16));
    unsigned int v39 = v9;
    if (v15 == v14) {
      unint64_t v17 = 0LL;
    }
    else {
      unint64_t v17 = *v16 + 184 * (v13 % 0x16);
    }
    while (1)
    {
      if (v15 == v14)
      {
        unint64_t v23 = 0LL;
      }

      else
      {
        unint64_t v22 = *(void *)(a1 + 216) + *(void *)(a1 + 208);
        unint64_t v23 = *(void *)(v14 + 8 * (v22 / 0x16)) + 184 * (v22 % 0x16);
      }

      if (v17 == v23) {
        break;
      }
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101864570);
      }
      __int128 v24 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "Adding from buffer to db.", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101864570);
        }
        LOWORD(v41) = 0;
        LODWORD(v3_Block_object_dispose((const void *)(v1 - 224), 8) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Adding from buffer to db.",  &v41,  v38);
        __int128 v27 = (uint8_t *)v26;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLActivityRecorderDb<VO2MaxStagingSummary, CLActivityDB::ClassBDataProtectionPolicy>::setDatabase Accessible() [T = VO2MaxStagingSummary, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v26);
        if (v27 != buf) {
          free(v27);
        }
      }

      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)a1 + 80LL))(a1, v17, 1LL);
      v17 += 184LL;
      if (v17 - *v16 == 4048)
      {
        unint64_t v25 = v16[1];
        ++v16;
        unint64_t v17 = v25;
      }

      uint64_t v14 = *(void *)(a1 + 184);
      uint64_t v15 = *(void *)(a1 + 192);
    }

    sub_1003C05BC(*(void *)(a1 + 80));
    uint64_t v9 = v39;
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101864550);
    }
    uint64_t v18 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
    {
      __int128 v19 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289282;
      *(_DWORD *)__int128 v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      __int128 v46 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101864550);
      }
    }

    __int128 v20 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      __int128 v21 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289282;
      *(_DWORD *)__int128 v44 = 0;
      *(_WORD *)&v44[4] = 2082;
      *(void *)&v44[6] = "";
      __int16 v45 = 2082;
      __int128 v46 = v21;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v20,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Unexpected error condition! Device has been unlocked but database remains unreadable!",  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    *(_BYTE *)(a1 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  }

  __int128 v28 = *(void ***)(a1 + 184);
  uint64_t v29 = *(void *)(a1 + 192);
  *(void *)(a1 + 216) = 0LL;
  unint64_t v30 = v29 - (void)v28;
  if (v30 >= 0x11)
  {
    do
    {
      operator delete(*v28);
      uint64_t v31 = *(void *)(a1 + 192);
      __int128 v28 = (void **)(*(void *)(a1 + 184) + 8LL);
      *(void *)(a1 + 184) = v28;
      unint64_t v30 = v31 - (void)v28;
    }

    while (v30 > 0x10);
  }

  if (v30 >> 3 == 1)
  {
    uint64_t v32 = 11LL;
  }

  else
  {
    if (v30 >> 3 != 2) {
      goto LABEL_61;
    }
    uint64_t v32 = 22LL;
  }

  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = v32;
LABEL_61:
  unint64_t v33 = *(void **)(a1 + 144);
  if (v33)
  {

    *(void *)(a1 + 144) = 0LL;
  }

void sub_1009A409C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

__n128 sub_1009A40D0(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v3 = *a3;
  __int128 v4 = a3[1];
  __int128 v5 = a3[3];
  *(_OWORD *)(a2 + 32) = a3[2];
  *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v5;
  *(_OWORD *)a2 = v3;
  *(_OWORD *)(a2 + 16) = v4;
  __int128 v6 = a3[4];
  __int128 v7 = a3[5];
  __int128 v8 = a3[7];
  *(_OWORD *)(a2 + 96) = a3[6];
  *(_OWORD *)(a2 + 112) = v8;
  *(_OWORD *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v7;
  __n128 result = (__n128)a3[8];
  __int128 v10 = a3[9];
  __int128 v11 = a3[10];
  *(void *)(a2 + 176) = *((void *)a3 + 22);
  *(_OWORD *)(a2 + 144) = v10;
  *(_OWORD *)(a2 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v11;
  *(__n128 *)(a2 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = result;
  return result;
}

id *sub_1009A410C(uint64_t a1, __int128 *a2, char a3)
{
  v40[0] = (id)os_transaction_create("CLActivityRecorderDb::sanitizeAndStoreRecordUL");
  v40[1] = 0LL;
  if (*(double *)(a1 + 232) > 0.0
    && (*(unsigned int (**)(uint64_t, uint64_t, __int128 *))(*(void *)a1 + 136LL))(a1, a1 + 224, a2))
  {
    (*(void (**)(uint64_t, uint64_t, __int128 *))(*(void *)a1 + 72LL))(a1, a1 + 224, a2);
    return sub_1001BA1BC(v40);
  }

  if ((a3 & 1) == 0) {
    sub_1003C0454(*(void *)(a1 + 80));
  }
  uint64_t v49 = 0LL;
  double v50 = 1.79769313e308;
  uint64_t v51 = 0LL;
  uint64_t v52 = 0x7FEFFFFFFFFFFFFFLL;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  __int128 v60 = 0u;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v56 = 0u;
  __int128 v55 = 0u;
  int v61 = 1;
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 104LL))(a1, &v49);
  if (v6 == 1)
  {
    (*(void (**)(uint64_t, __int128 *, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

  else
  {
    if (v6)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101864550);
      }
      uint64_t v14 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Failed to insert record due to failure from reading the most recent entry.",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101864550);
        }
        LOWORD(v41) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "Failed to insert record due to failure from reading the most recent entry.",  &v41,  2);
        __int128 v16 = (uint8_t *)v15;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLActivityRecorderDb<VO2MaxStagingSummary, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAnd StoreRecordUL(const T &, BOOL) [T = VO2MaxStagingSummary, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v15);
        if (v16 != buf) {
          free(v16);
        }
      }

      goto LABEL_43;
    }

    double v7 = *((double *)a2 + 1);
    double v8 = v50;
    double v9 = v7 - v50;
    if (v7 - v50 < 0.0) {
      double v9 = -(v7 - v50);
    }
    if (v9 > 604800.0)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101864550);
      }
      __int128 v10 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *((void *)a2 + 1);
        *(_DWORD *)int buf = 134349312;
        double v46 = v50;
        __int16 v47 = 2050;
        uint64_t v48 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101864550);
        }
        uint64_t v31 = *((void *)a2 + 1);
        int v41 = 134349312;
        double v42 = v50;
        __int16 v43 = 2050;
        uint64_t v44 = v31;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  &v41,  22);
        unint64_t v33 = (uint8_t *)v32;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<VO2MaxStagingSummary, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAnd StoreRecordUL(const T &, BOOL) [T = VO2MaxStagingSummary, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v32);
        if (v33 != buf) {
          free(v33);
        }
      }

      CLWriteStackshot("Potential CM database inconsistency, time jump", 0LL);
      double v7 = *((double *)a2 + 1);
      double v8 = v50;
    }

    if (v7 < v8)
    {
      if (v8 - v7 < 10.0)
      {
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101864550);
        }
        uint64_t v12 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
        {
          double v13 = *((double *)a2 + 1);
          *(_DWORD *)int buf = 134217984;
          double v46 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_101864550);
          }
          double v34 = *((double *)a2 + 1);
          int v41 = 134217984;
          double v42 = v34;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  COERCE_DOUBLE(&v41));
          __int128 v36 = (uint8_t *)v35;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<VO2MaxStagingSummary, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeA ndStoreRecordUL(const T &, BOOL) [T = VO2MaxStagingSummary, DataProtectionPolicy = CLActivityDB::ClassBDataP rotectionPolicy]",  "%s\n",  v35);
          if (v36 != buf) {
            free(v36);
          }
        }

        (*(void (**)(uint64_t, __int128 *))(*(void *)a1 + 88LL))(a1, a2);
        goto LABEL_42;
      }

      double v17 = v7 - v8;
      double v18 = *(float *)(a1 + 136);
      if (qword_1019344B0 != -1)
      {
        double v39 = *(float *)(a1 + 136);
        dispatch_once(&qword_1019344B0, &stru_101864550);
        double v18 = v39;
      }

      double v19 = v17 - v18;
      __int128 v20 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)int buf = 134217984;
        double v46 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101864550);
        }
        int v41 = 134217984;
        double v42 = v19;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  COERCE_DOUBLE(&v41));
        uint64_t v38 = (uint8_t *)v37;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<VO2MaxStagingSummary, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAnd StoreRecordUL(const T &, BOOL) [T = VO2MaxStagingSummary, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v37);
        if (v38 != buf) {
          free(v38);
        }
      }

      (*(void (**)(uint64_t, double))(*(void *)a1 + 96LL))(a1, v19);
    }

    (*(void (**)(uint64_t, uint64_t *, uint64_t, __int128 *))(*(void *)a1 + 144LL))(a1, &v49, a1 + 224, a2);
    (*(void (**)(uint64_t, __int128 *, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

void sub_1009A48B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_1009A48E4(void *a1, uint64_t a2)
{
  __int128 v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v23);
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    if (HIBYTE(v24)) {
      goto LABEL_3;
    }
LABEL_29:
    __int128 v20 = (_Unwind_Exception *)sub_101255B1C(v4);
    sub_1011F8850((uint64_t)v23);
    _Unwind_Resume(v20);
  }

  double v19 = v23[1];
  operator delete(v23[0]);
  if (!v19) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120LL))(a1, a2, 1LL);
    sub_10000CE18((uint64_t)v23);
    int v6 = sub_10000CF44(&v24, (uint64_t)"DELETE FROM ", 12LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" WHERE startTime > ?", 20LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v25);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v21);
    uint64_t v12 = v21;
    uint64_t v21 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, *(double *)(a2 + 8)))
    {
      uint64_t v14 = a1[10];
      uint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    uint64_t v16 = a1[10];
    else {
      uint64_t v17 = *(void *)(v16 + 88);
    }
    sub_1003C1EC0(v16, v17);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v23
    uint64_t v24 = v18;
    std::streambuf::~streambuf(&v25);
    return std::ios::~ios(&v26);
  }

  return result;
}

uint64_t sub_1009A4B44(void *a1, double a2)
{
  __int128 v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v21);
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22)) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v18 = (_Unwind_Exception *)sub_101255C88(v4);
    sub_1011F8850((uint64_t)v21);
    _Unwind_Resume(v18);
  }

  uint64_t v17 = v21[1];
  operator delete(v21[0]);
  if (!v17) {
    goto LABEL_26;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v21);
    int v6 = sub_10000CF44(&v22, (uint64_t)"UPDATE ", 7LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" SET startTime = startTime + ?", 30LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v23);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v19);
    uint64_t v12 = v19;
    uint64_t v19 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, a2))
    {
      uint64_t v14 = a1[10];
      uint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v21
    uint64_t v22 = v16;
    std::streambuf::~streambuf(&v23);
    return std::ios::~ios(&v24);
  }

  return result;
}

uint64_t sub_1009A4D7C(void *a1, uint64_t a2)
{
  __int128 v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v22);
  if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    if (HIBYTE(v23)) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t v17 = (_Unwind_Exception *)sub_101255DF4(v4);
    uint64_t v18 = v20;
    uint64_t v20 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
    sub_1011F8850((uint64_t)v22);
    _Unwind_Resume(v17);
  }

  uint64_t v16 = v22[1];
  operator delete(v22[0]);
  if (!v16) {
    goto LABEL_25;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v22);
  __int128 v5 = sub_10000CF44(&v23, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  double v8 = sub_10000CF44(v5, (uint64_t)p_p, size);
  sub_10000CF44(v8, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28LL);
  uint64_t v9 = a1[10];
  std::stringbuf::str(&__p, &v24);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = &__p;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v9, (char *)v10, &v19);
  uint64_t v11 = v19;
  uint64_t v19 = 0LL;
  uint64_t v20 = v11;
  uint64_t v12 = sub_1001BA11C((uint64_t)a1, &v20, a2);
  uint64_t v13 = v20;
  uint64_t v20 = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  *(void **)((char *)v22
  uint64_t v23 = v14;
  std::streambuf::~streambuf(&v24);
  std::ios::~ios(&v25);
  return v12;
}

uint64_t sub_1009A4FA4(uint64_t a1)
{
  return sub_1009A3968(a1 - 72);
}

void sub_1009A4FAC(id a1)
{
  qword_1019346E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "VO2Max");
}

uint64_t sub_1009A4FD8(uint64_t *a1, char **a2)
{
  __int128 v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v57);
  if ((SHIBYTE(v58) & 0x80000000) == 0)
  {
    if (HIBYTE(v58)) {
      goto LABEL_3;
    }
LABEL_43:
    sub_101255F60(v4);
    __break(1u);
  }

  __int128 v54 = v57[1];
  operator delete(v57[0]);
  if (!v54) {
    goto LABEL_43;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    a2[1] = *a2;
    sub_10000CE18((uint64_t)v57);
    int v6 = sub_10000CF44(&v58, (uint64_t)"SELECT * from ", 14LL);
    (*(void (**)(__int128 *__return_ptr, uint64_t *))(*a1 + 64))(&__p, a1);
    if ((SBYTE7(v62) & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (__int128 *)__p;
    }
    if ((SBYTE7(v62) & 0x80u) == 0) {
      uint64_t v8 = BYTE7(v62);
    }
    else {
      uint64_t v8 = *((void *)&__p + 1);
    }
    uint64_t v9 = sub_10000CF44(v6, (uint64_t)p_p, v8);
    sub_10000CF44(v9, (uint64_t)" ORDER BY id ASC", 16LL);
    if (SBYTE7(v62) < 0) {
      operator delete((void *)__p);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str((std::stringbuf::string_type *)&__p, &v59);
    if ((SBYTE7(v62) & 0x80u) == 0) {
      uint64_t v11 = (char *)&__p;
    }
    else {
      uint64_t v11 = (char *)__p;
    }
    sub_1003C0D54(v10, v11, &v55);
    uint64_t v12 = v55;
    uint64_t v55 = 0LL;
    uint64_t v56 = v12;
    if (SBYTE7(v62) < 0) {
      operator delete((void *)__p);
    }
    sub_1003C0454(a1[10]);
    *(void *)&__int128 __p = 0LL;
    *((void *)&__p + 1) = 0x7FEFFFFFFFFFFFFFLL;
    *(void *)&__int128 v62 = 0LL;
    *((void *)&v63 + 1) = 0x7FEFFFFFFFFFFFFFLL;
    __int128 v64 = 0u;
    __int128 v65 = 0u;
    __int128 v66 = 0u;
    __int128 v67 = 0u;
    __int128 v68 = 0u;
    __int128 v69 = 0u;
    LODWORD(v72) = 1;
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    while (!sub_1001BA11C((uint64_t)a1, &v56, (uint64_t)&__p))
    {
      unint64_t v13 = (unint64_t)a2[1];
      unint64_t v14 = (unint64_t)a2[2];
      if (v13 >= v14)
      {
        unint64_t v25 = 0xD37A6F4DE9BD37A7LL * ((uint64_t)(v13 - (void)*a2) >> 3);
        unint64_t v26 = v25 + 1;
        if (v25 + 1 > 0x1642C8590B21642LL) {
          sub_100007008();
        }
        unint64_t v27 = 0xD37A6F4DE9BD37A7LL * ((uint64_t)(v14 - (void)*a2) >> 3);
        if (2 * v27 > v26) {
          unint64_t v26 = 2 * v27;
        }
        if (v27 >= 0xB21642C8590B21LL) {
          unint64_t v28 = 0x1642C8590B21642LL;
        }
        else {
          unint64_t v28 = v26;
        }
        if (v28) {
          __int128 v29 = (char *)sub_1002DF6FC((uint64_t)(a2 + 2), v28);
        }
        else {
          __int128 v29 = 0LL;
        }
        unint64_t v30 = &v29[184 * v25];
        __int128 v31 = __p;
        __int128 v32 = v62;
        __int128 v33 = v64;
        *((_OWORD *)v30 + 2) = v63;
        *((_OWORD *)v30 + 3) = v33;
        *(_OWORD *)unint64_t v30 = v31;
        *((_OWORD *)v30 + 1) = v32;
        __int128 v34 = v65;
        __int128 v35 = v66;
        __int128 v36 = v68;
        *((_OWORD *)v30 + 6) = v67;
        *((_OWORD *)v30 + 7) = v36;
        *((_OWORD *)v30 + 4) = v34;
        *((_OWORD *)v30 + 5) = v35;
        __int128 v37 = v69;
        __int128 v38 = v70;
        __int128 v39 = v71;
        *((void *)v30 + 22) = v72;
        *((_OWORD *)v30 + 9) = v38;
        *((_OWORD *)v30 + 1sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v39;
        *((_OWORD *)v30 + _Block_object_dispose((const void *)(v1 - 224), 8) = v37;
        int v41 = *a2;
        uint64_t v40 = a2[1];
        double v42 = v30;
        if (v40 != *a2)
        {
          do
          {
            __int128 v43 = *(_OWORD *)(v40 - 184);
            __int128 v44 = *(_OWORD *)(v40 - 168);
            __int128 v45 = *(_OWORD *)(v40 - 152);
            *(_OWORD *)(v42 - 136) = *(_OWORD *)(v40 - 136);
            *(_OWORD *)(v42 - 152) = v45;
            *(_OWORD *)(v42 - 16_Block_object_dispose((const void *)(v1 - 224), 8) = v44;
            *(_OWORD *)(v42 - 184) = v43;
            __int128 v46 = *(_OWORD *)(v40 - 120);
            __int128 v47 = *(_OWORD *)(v40 - 104);
            __int128 v48 = *(_OWORD *)(v40 - 88);
            *(_OWORD *)(v42 - 72) = *(_OWORD *)(v40 - 72);
            *(_OWORD *)(v42 - 8_Block_object_dispose((const void *)(v1 - 224), 8) = v48;
            *(_OWORD *)(v42 - 104) = v47;
            *(_OWORD *)(v42 - 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v46;
            __int128 v49 = *(_OWORD *)(v40 - 56);
            __int128 v50 = *(_OWORD *)(v40 - 40);
            __int128 v51 = *(_OWORD *)(v40 - 24);
            *((void *)v42 - 1) = *((void *)v40 - 1);
            *(_OWORD *)(v42 - 24) = v51;
            *(_OWORD *)(v42 - 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v50;
            *(_OWORD *)(v42 - 56) = v49;
            v42 -= 184;
            v40 -= 184;
          }

          while (v40 != v41);
          uint64_t v40 = *a2;
        }

        std::stringbuf v24 = v30 + 184;
        *a2 = v42;
        a2[1] = v30 + 184;
        a2[2] = &v29[184 * v28];
        if (v40) {
          operator delete(v40);
        }
      }

      else
      {
        __int128 v15 = __p;
        __int128 v16 = v62;
        __int128 v17 = v64;
        *(_OWORD *)(v13 + 32) = v63;
        *(_OWORD *)(v13 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = v17;
        *(_OWORD *)unint64_t v13 = v15;
        *(_OWORD *)(v13 + 16) = v16;
        __int128 v18 = v65;
        __int128 v19 = v66;
        __int128 v20 = v68;
        *(_OWORD *)(v13 + 96) = v67;
        *(_OWORD *)(v13 + 112) = v20;
        *(_OWORD *)(v13 + 64) = v18;
        *(_OWORD *)(v13 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v19;
        __int128 v21 = v69;
        __int128 v22 = v70;
        __int128 v23 = v71;
        *(void *)(v13 + 176) = v72;
        *(_OWORD *)(v13 + 144) = v22;
        *(_OWORD *)(v13 + 16sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v23;
        *(_OWORD *)(v13 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = v21;
        std::stringbuf v24 = (char *)(v13 + 184);
      }

      a2[1] = v24;
    }

    sub_1003C05BC(a1[10]);
    uint64_t v52 = v56;
    uint64_t v56 = 0LL;
    if (v52) {
      (*(void (**)(uint64_t))(*(void *)v52 + 8LL))(v52);
    }
    *(void **)((char *)v57
    uint64_t v58 = v53;
    std::streambuf::~streambuf(&v59);
    return std::ios::~ios(&v60);
  }

  return result;
}

void sub_1009A53EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, void *__p, uint64_t a47, int a48, __int16 a49, char a50,char a51)
{
  if (v51) {
    (*(void (**)(uint64_t))(*(void *)v51 + 8LL))(v51);
  }
  sub_1011F8850((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_1009A545C(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_1009A5488(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  __int128 v3 = (void **)a1[2];
  a1[5] = 0LL;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      __int128 v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 11LL;
  }

  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 22LL;
  }

  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    double v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void sub_1009A551C(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void sub_1009A58C4(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void sub_1009A58F0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_101342330;
      v1[3] = unk_101342340;
      v1[4] = xmmword_101342350;
      v1[0] = xmmword_101342310;
      v1[1] = unk_101342320;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_1009A59C4(_Unwind_Exception *a1)
{
}

uint64_t sub_1009A59DC()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_101999A30, (void *)&_mh_execute_header);
}

uint64_t sub_1009A5A20(uint64_t a1, uint64_t a2, double a3)
{
  if ((*(unsigned int (**)(void))(**(void **)(a2 + 48) + 48LL))(*(void *)(a2 + 48)))
  {
    (*(void (**)(void, _BYTE *, double))(**(void **)(a2 + 48) + 24LL))(*(void *)(a2 + 48), v7, a3);
    if (v7[208]) {
      sub_100253308(*(void *)(a2 + 8));
    }
  }

  return nullsub_1227(a1 + 8, a2, a3);
}

uint64_t sub_1009A5AD4(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(a3 + 8) + 48LL))(*(void *)(a3 + 8));
  if ((_DWORD)result) {
    return (*(uint64_t (**)(void, double))(**(void **)(a3 + 40) + 48LL))(*(void *)(a3 + 40), a1);
  }
  return result;
}

void sub_1009A5B30(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0LL;
  *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a3 + 16) = 0LL;
  *(void *)(a3 + 24) = 3LL;
  *(void *)(a3 + 32) = 3LL;
  sub_100FBF0F8(a1 + 8, a2, (uint64_t)buf);
  float v5 = *(float *)&v31[6];
  *(_DWORD *)(a3 + 4) = *(_DWORD *)&v31[6];
  float v6 = 3.0;
  if (v5 >= 3.0) {
    float v7 = v5;
  }
  else {
    float v7 = 3.0;
  }
  float v8 = 0.0;
  if (sub_1003DBFB4(a2) && *(double *)(a2 + 600) < *(double *)a2)
  {
    float v9 = *(double *)(a2 + 560);
    float v10 = *(float *)(a2 + 1368);
    float v11 = (*(float *)(a2 + 1380) - v9) / (*(float *)(a2 + 1380) - *(float *)(a2 + 1376));
    float v12 = v10 * sub_100D086F8(v11, *(float *)(a2 + 1372));
    float v8 = v12 * 0.72;
    *(float *)a3 = v12 * 0.72;
    float v6 = 1.6;
    else {
      float v7 = 1.6;
    }
  }

  *(float *)(a3 + 2_Block_object_dispose((const void *)(v1 - 224), 8) = v7;
  *(float *)(a3 + 2sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v7;
  if (v7 == v6) {
    int v13 = 3;
  }
  else {
    int v13 = v7 == v8;
  }
  *(_DWORD *)(a3 + 24) = v13;
  *(float *)(a3 + 12) = v5;
  *(_DWORD *)(a3 + 32) = v13;
  *(_DWORD *)(a3 + 36) = 19;
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101864600);
  }
  unint64_t v14 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int buf = 134219008;
    double v29 = v6;
    __int16 v30 = 2048;
    *(double *)__int128 v31 = v8;
    *(_WORD *)&v31[8] = 2048;
    double v32 = v5;
    __int16 v33 = 2048;
    double v34 = v7;
    __int16 v35 = 1024;
    int v36 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "TaiChi,baselineMets,%.1f,metsHR,%.1f,metsWR,%.1f,userMets,%.1f,userMetsSource,%d",  buf,  0x30u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101864600);
    }
    int v18 = 134219008;
    double v19 = v6;
    __int16 v20 = 2048;
    double v21 = v8;
    __int16 v22 = 2048;
    double v23 = v5;
    __int16 v24 = 2048;
    double v25 = v7;
    __int16 v26 = 1024;
    int v27 = v13;
    LODWORD(v17) = 48;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "TaiChi,baselineMets,%.1f,metsHR,%.1f,metsWR,%.1f,userMets,%.1f,userMetsSource,%d",  COERCE_DOUBLE(&v18),  v17);
    __int128 v16 = (uint8_t *)v15;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLMetsInfo CLCalorieTaiChiModel::computeMETS(const CLNatalieModelInput &)",  "%s\n",  v15);
    if (v16 != buf) {
      free(v16);
    }
  }

void sub_1009A5E38(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

uint64_t sub_1009A5E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2) {
    return 0LL;
  }
  uint64_t v3 = 0LL;
  unsigned int v4 = -1;
  do
  {
    char v5 = *(_BYTE *)(a1 + v3);
    if (a3 + 1 == v3 || a3 == v3 || a3 + 2 == v3 || a3 + 3 == v3) {
      char v5 = 0;
    }
    unsigned int v4 = dword_101342384[(v5 ^ v4)] ^ (v4 >> 8);
    ++v3;
  }

  while (a2 != v3);
  return ~v4;
}

uint64_t sub_1009A5EC8(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_1009A6174(a1, "CLSkiNotifier", a2);
  *uint64_t v3 = off_101864630;
  v3[14] = 0LL;
  sub_1005318A0((uint64_t)(v3 + 15));
  *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  LOBYTE(v20[0]) = 0;
  sub_1012049AC((unsigned __int8 *)(a1 + 256), "SimulateSkiWorkout", (unsigned __int8 *)v20, 0);
  *(void *)(a1 + 264) = 0LL;
  *(void *)(a1 + 272) = 0LL;
  sub_100468458((uint64_t)sub_1009A6210, a1, *(void **)(a1 + 32), v20);
  uint64_t v4 = v20[0];
  v20[0] = 0LL;
  uint64_t v5 = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = v4;
  if (v5)
  {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    uint64_t v6 = v20[0];
    v20[0] = 0LL;
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
  }

  [*(id *)(*(void *)(a1 + 264) + 16) register:*(void *)(*(void *)(a1 + 264) + 8) forNotification:2 registrationInfo:0];
  sub_10027EB5C((uint64_t)sub_1009A63E8, a1, *(void **)(a1 + 32), v20);
  uint64_t v7 = v20[0];
  v20[0] = 0LL;
  uint64_t v8 = *(void *)(a1 + 272);
  *(void *)(a1 + 272) = v7;
  if (v8)
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    uint64_t v9 = v20[0];
    v20[0] = 0LL;
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
  }

  uint64_t v10 = sub_1008FA854(0);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  v21[2] = sub_1009A65C0;
  v21[3] = &unk_10181D3D0;
  void v21[4] = a1;
  (*(void (**)(uint64_t, void *))(*(void *)(v10 + 88) + 16LL))(v10 + 88, v21);
  uint64_t v12 = *(void *)(a1 + 120);
  float v11 = *(std::__shared_weak_count **)(a1 + 128);
  v20[0] = v12;
  v20[1] = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      unint64_t v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
  }

  id v15 = [*(id *)(a1 + 32) silo];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  _DWORD v19[2] = sub_1009A6818;
  v19[3] = &unk_101864700;
  v19[4] = a1;
  sub_100C477A4(v12, v15, v19);
  if (v11)
  {
    __int128 v16 = (unint64_t *)&v11->__shared_owners_;
    do
      unint64_t v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }

  return a1;
}

void sub_1009A60E4(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void *)(v1 + 272);
  *(void *)(v1 + 272) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  uint64_t v6 = *v3;
  *uint64_t v3 = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  sub_1005318A4(v2);
  uint64_t v7 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  sub_1009A6A7C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1009A6174(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1018647F8;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
  return a1;
}

void sub_1009A61F4(_Unwind_Exception *exception_object)
{
}

void sub_1009A6210(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018647A8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLSkiNotifier::onMotionStateMediatorNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018647A8);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      id v15 = "";
      __int16 v16 = 2082;
      unint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLSkiNotifier::onMotionStateMediatorNotification, event:%{public, location:escape_o nly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1009A7810((_BYTE *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009A63C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009A63E8(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018647A8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLSkiNotifier::onOdometerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018647A8);
    }
    uint64_t v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLSkiNotifier::onOdometerNotification, event:%{public, location:escape_only}s, th is:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  sub_1009A795C(a4, v6, a2);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009A65A0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_1009A65C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_1009A6618;
  void v4[3] = &unk_10181D3D0;
  void v4[4] = v1;
  return [v2 async:v4];
}

uint64_t sub_1009A6618(uint64_t a1)
{
  return sub_1009A6620(*(void **)(a1 + 32));
}

uint64_t sub_1009A6620(void *a1)
{
  if (qword_101934660 != -1) {
    dispatch_once(&qword_101934660, &stru_1018647C8);
  }
  uint64_t v2 = (os_log_s *)qword_101934668;
  if (os_log_type_enabled((os_log_t)qword_101934668, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Skiing autoresume", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934660 != -1) {
      dispatch_once(&qword_101934660, &stru_1018647C8);
    }
    LOWORD(v6[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934668,  0LL,  "Skiing autoresume",  v6,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSkiNotifier::onSkiAlarm()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  sub_1009A6BB0(a1);
  sub_1009A76EC((uint64_t)a1, 1);
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  *(_OWORD *)int buf = 0u;
  __int128 v8 = 0u;
  buf[0] = 1;
  v6[0] = 1;
  (*(void (**)(void *, _DWORD *, uint8_t *, uint64_t, uint64_t, void))(*a1 + 152LL))( a1,  v6,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
  uint64_t result = a1[14];
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 24LL))(result);
  }
  return result;
}

uint64_t sub_1009A6818(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  v48[2] = *(_OWORD *)(a2 + 32);
  float v48[3] = v4;
  __int128 v5 = *(_OWORD *)(a2 + 80);
  v48[4] = *(_OWORD *)(a2 + 64);
  v48[5] = v5;
  __int128 v6 = *(_OWORD *)(a2 + 16);
  v48[0] = *(_OWORD *)a2;
  v48[1] = v6;
  if (qword_101934660 != -1) {
    dispatch_once(&qword_101934660, &stru_1018647C8);
  }
  uint64_t v7 = (os_log_s *)qword_101934668;
  if (os_log_type_enabled((os_log_t)qword_101934668, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    uint64_t v10 = *(void *)(a2 + 88);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 72);
    *(_DWORD *)int buf = 134219264;
    uint64_t v37 = v8;
    __int16 v38 = 2048;
    uint64_t v39 = v9;
    __int16 v40 = 2048;
    uint64_t v41 = v11;
    __int16 v42 = 2048;
    uint64_t v43 = v10;
    __int16 v44 = 2048;
    uint64_t v45 = v12;
    __int16 v46 = 2048;
    uint64_t v47 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Ski Record update: startTime %lf, endTime %lf, runDistance %f, runElevationDescent %f, runAvgSpeed %f, runMaxSpeed %f",  buf,  0x3Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934660 != -1) {
      dispatch_once(&qword_101934660, &stru_1018647C8);
    }
    uint64_t v15 = *(void *)(a2 + 40);
    uint64_t v16 = *(void *)(a2 + 48);
    uint64_t v17 = *(void *)(a2 + 88);
    uint64_t v18 = *(void *)(a2 + 56);
    uint64_t v19 = *(void *)(a2 + 64);
    uint64_t v20 = *(void *)(a2 + 72);
    int v24 = 134219264;
    uint64_t v25 = v15;
    __int16 v26 = 2048;
    uint64_t v27 = v16;
    __int16 v28 = 2048;
    uint64_t v29 = v18;
    __int16 v30 = 2048;
    uint64_t v31 = v17;
    __int16 v32 = 2048;
    uint64_t v33 = v19;
    __int16 v34 = 2048;
    uint64_t v35 = v20;
    LODWORD(v23) = 62;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934668,  1LL,  "Ski Record update: startTime %lf, endTime %lf, runDistance %f, runElevationDescent %f, runAvgSpeed %f, runMaxSpeed %f",  COERCE_DOUBLE(&v24),  v23);
    __int16 v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSkiNotifier::CLSkiNotifier(id<CLIntersiloUniverse>)_block_invoke",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  *(_DWORD *)int buf = 0;
  return (*(uint64_t (**)(uint64_t, uint8_t *, _OWORD *, uint64_t, uint64_t, void))(*(void *)v3 + 152LL))( v3,  buf,  v48,  1LL,  0xFFFFFFFFLL,  0LL);
}

uint64_t sub_1009A6A7C(uint64_t a1)
{
  *(void *)a1 = off_1018647F8;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_1009A6AF0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1009A6B64;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101999A60 != -1) {
    dispatch_once(&qword_101999A60, block);
  }
  return qword_1019A1998;
}

uint64_t sub_1009A6B64(uint64_t a1)
{
  uint64_t v2 = operator new(0x118uLL);
  uint64_t result = sub_1009A5EC8((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A1998 = (uint64_t)v2;
  return result;
}

void sub_1009A6B9C(_Unwind_Exception *a1)
{
}

id sub_1009A6BB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) newTimer];
  *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = v2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_1009A6C2C;
  void v4[3] = &unk_10181D3D0;
  void v4[4] = a1;
  [v2 setHandler:v4];
  return [*(id *)(a1 + 248) setNextFireDelay:5.11999989 interval:5.11999989];
}

void *sub_1009A6C2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t result = *(void **)(v1 + 112);
  if (result)
  {
    uint64_t result = (*(void *(**)(double *__return_ptr))(*result + 16LL))(&v8);
    if ((LODWORD(v8) - 3) >= 3)
    {
      if (LODWORD(v8) == 2 && *(_BYTE *)(v1 + 257)) {
        uint64_t result = (void *)sub_1009A6620((void *)v1);
      }
    }

    else
    {
      sub_1009A6ED8((id *)v1);
      uint64_t v3 = sub_1008FA854(0);
      uint64_t result = (void *)(*(uint64_t (**)(uint64_t, void))(*(void *)(v3 + 88) + 24LL))( v3 + 88,  LODWORD(v8));
    }

    if (v12)
    {
      if (qword_101934660 != -1) {
        dispatch_once(&qword_101934660, &stru_1018647C8);
      }
      __int128 v4 = (os_log_s *)qword_101934668;
      if (os_log_type_enabled((os_log_t)qword_101934668, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)int buf = 134218752;
        *(void *)&uint8_t buf[4] = v9;
        *(_WORD *)&_BYTE buf[12] = 2048;
        *(void *)&buf[14] = *((void *)&v9 + 1);
        *(_WORD *)&_BYTE buf[22] = 2048;
        *(void *)&_BYTE buf[24] = v10;
        LOWORD(v22) = 2048;
        *(void *)((char *)&v22 + 2) = *((void *)&v10 + 1);
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "[live data] sending live update updateTime, %f, distance, %f, averageSpeed, %f, verticalDescent, %f",  buf,  0x2Au);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934660 != -1) {
          dispatch_once(&qword_101934660, &stru_1018647C8);
        }
        int v13 = 134218752;
        uint64_t v14 = v9;
        __int16 v15 = 2048;
        uint64_t v16 = *((void *)&v9 + 1);
        __int16 v17 = 2048;
        uint64_t v18 = v10;
        __int16 v19 = 2048;
        uint64_t v20 = *((void *)&v10 + 1);
        LODWORD(v7) = 42;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934668,  1LL,  "[live data] sending live update updateTime, %f, distance, %f, averageSpeed, %f, verticalDescent, %f",  COERCE_DOUBLE(&v13),  v7,  v8,  *(double *)&v9);
        __int128 v6 = (char *)v5;
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSkiNotifier::setupTimer()_block_invoke", "%s\n", v5);
        if (v6 != buf) {
          free(v6);
        }
      }

      int v13 = 2;
      if (!v12) {
        sub_100036CD8();
      }
      *(_OWORD *)int buf = v9;
      *(_OWORD *)&uint8_t buf[16] = v10;
      __int128 v22 = v11;
      return (void *)(*(uint64_t (**)(uint64_t, int *, _BYTE *, void, uint64_t, void))(*(void *)v1 + 152LL))( v1,  &v13,  buf,  0LL,  0xFFFFFFFFLL,  0LL);
    }
  }

  return result;
}

uint64_t sub_1009A6ED8(id *a1)
{
  if (qword_101934660 != -1) {
    dispatch_once(&qword_101934660, &stru_1018647C8);
  }
  id v2 = (os_log_s *)qword_101934668;
  if (os_log_type_enabled((os_log_t)qword_101934668, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Skiing autopause", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934660 != -1) {
      dispatch_once(&qword_101934660, &stru_1018647C8);
    }
    LOWORD(v6[0]) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934668,  0LL,  "Skiing autopause",  v6,  2);
    __int128 v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLSkiNotifier::pauseSkiTracking()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  [a1[31] invalidate];

  a1[31] = 0LL;
  sub_1009A76EC((uint64_t)a1, 0);
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  *(_OWORD *)int buf = 0u;
  __int128 v8 = 0u;
  v6[0] = 1;
  return (*((uint64_t (**)(id *, _DWORD *, uint8_t *, uint64_t, uint64_t, void))*a1 + 19))( a1,  v6,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
}

uint64_t sub_1009A70C4(uint64_t a1)
{
  *(void *)a1 = off_101864630;
  uint64_t v2 = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  [*(id *)(a1 + 248) invalidate];

  *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  uint64_t v3 = *(void *)(a1 + 272);
  *(void *)(a1 + 272) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  sub_1005318A4(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return sub_1009A6A7C(a1);
}

void sub_1009A7174(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009A70C4(a1);
  operator delete(v1);
}

uint64_t sub_1009A7188(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

void *sub_1009A71A8@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_1009A7220(uint64_t a1, int *a2)
{
  if (qword_101934660 != -1) {
    dispatch_once(&qword_101934660, &stru_1018647C8);
  }
  uint64_t v4 = (os_log_s *)qword_101934668;
  if (os_log_type_enabled((os_log_t)qword_101934668, OS_LOG_TYPE_INFO))
  {
    v14[0] = *a2;
    int v5 = v14[0];
    int v6 = sub_100247620(a1, v14, 1LL);
    *(_DWORD *)int buf = 67109376;
    int v18 = v5;
    __int16 v19 = 1024;
    int v20 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Added client for %d, count %d", buf, 0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934660 != -1) {
      dispatch_once(&qword_101934660, &stru_1018647C8);
    }
    uint64_t v8 = qword_101934668;
    int v9 = *a2;
    int v13 = v9;
    int v10 = sub_100247620(a1, &v13, 1LL);
    v14[0] = 67109376;
    v14[1] = v9;
    __int16 v15 = 1024;
    int v16 = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  1LL,  "Added client for %d, count %d",  v14,  14);
    __int128 v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSkiNotifier::registerForNotificationInternal(const CLSkiNotifier_Type::Notification &)",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  return 1LL;
}

uint64_t sub_1009A7424(uint64_t a1, int *a2)
{
  if (qword_101934660 != -1) {
    dispatch_once(&qword_101934660, &stru_1018647C8);
  }
  uint64_t v4 = (os_log_s *)qword_101934668;
  if (os_log_type_enabled((os_log_t)qword_101934668, OS_LOG_TYPE_INFO))
  {
    v14[0] = *a2;
    int v5 = v14[0];
    int v6 = sub_100247620(a1, v14, 1LL);
    *(_DWORD *)int buf = 67109376;
    int v18 = v5;
    __int16 v19 = 1024;
    int v20 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Removed client for %d, count %d", buf, 0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934660 != -1) {
      dispatch_once(&qword_101934660, &stru_1018647C8);
    }
    uint64_t v8 = qword_101934668;
    int v9 = *a2;
    int v13 = v9;
    int v10 = sub_100247620(a1, &v13, 1LL);
    v14[0] = 67109376;
    v14[1] = v9;
    __int16 v15 = 1024;
    int v16 = v10;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  1LL,  "Removed client for %d, count %d",  v14,  14);
    __int128 v12 = (uint8_t *)v11;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSkiNotifier::unregisterForNotificationInternal(const CLSkiNotifier_Type::Notification &)",  "%s\n",  v11);
    if (v12 != buf) {
      free(v12);
    }
  }

  return 1LL;
}

_BYTE *sub_1009A7628(_BYTE *result, unsigned __int8 *a2)
{
  if (!*((void *)result + 14))
  {
    uint64_t v3 = (uint64_t)result;
    uint64_t v4 = (uint64_t)(result + 120);
    if (result[257])
    {
      int v5 = operator new(0x730uLL);
      sub_100A117CC((uint64_t)v5, v4);
    }

    else
    {
      int v5 = operator new(0x608uLL);
      sub_100831148((uint64_t)v5, v4);
    }

    uint64_t v6 = *(void *)(v3 + 112);
    *(void *)(v3 + 112) = v5;
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    sub_100831DA8(*(void *)(v3 + 112), a2);
    sub_1009A6BB0(v3);
    return sub_1009A76EC(v3, 1);
  }

  return result;
}

void sub_1009A76D4(_Unwind_Exception *a1)
{
}

id sub_1009A76EC(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 272);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void **)(v3 + 16);
  if (a2)
  {
    [v4 register:v5 forNotification:2 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 272) + 16) register:*(void *)(*(void *)(a1 + 272) + 8) forNotification:4 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 272) + 16) register:*(void *)(*(void *)(a1 + 272) + 8) forNotification:3 registrationInfo:0];
    return [*(id *)(*(void *)(a1 + 272) + 16) register:*(void *)(*(void *)(a1 + 272) + 8) forNotification:7 registrationInfo:0];
  }

  else
  {
    [v4 unregister:v5 forNotification:2];
    [*(id *)(*(void *)(a1 + 272) + 16) unregister:*(void *)(*(void *)(a1 + 272) + 8) forNotification:4];
    [*(id *)(*(void *)(a1 + 272) + 16) unregister:*(void *)(*(void *)(a1 + 272) + 8) forNotification:3];
    return [*(id *)(*(void *)(a1 + 272) + 16) unregister:*(void *)(*(void *)(a1 + 272) + 8) forNotification:7];
  }

uint64_t sub_1009A7794(uint64_t a1)
{
  *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  sub_1009A76EC(a1, 0);
  uint64_t v2 = sub_1008FA854(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 + 88) + 24LL))(v2 + 88, 5LL);
  uint64_t result = *(void *)(a1 + 112);
  if (result)
  {
    *(void *)(a1 + 112) = 0LL;
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }

  return result;
}

uint64_t sub_1009A7808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1005318A8((uint64_t **)(a1 + 120), a2, a3);
}

__n128 sub_1009A7810(_BYTE *a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 2)
  {
    uint64_t v6 = *(void *)(a4 + 16);
    if (v6 == 1)
    {
      uint64_t v17 = *(void *)(a4 + 112);
      if (v17 == 37 || v17 == 23)
      {
        sub_1009A7794((uint64_t)a1);
        __int128 v19 = *(_OWORD *)(a4 + 208);
        v26[12] = *(_OWORD *)(a4 + 192);
        void v26[13] = v19;
        uint64_t v27 = *(void *)(a4 + 224);
        __int128 v20 = *(_OWORD *)(a4 + 144);
        v26[8] = *(_OWORD *)(a4 + 128);
        v26[9] = v20;
        __int128 v21 = *(_OWORD *)(a4 + 176);
        v26[10] = *(_OWORD *)(a4 + 160);
        v26[11] = v21;
        __int128 v22 = *(_OWORD *)(a4 + 80);
        v26[4] = *(_OWORD *)(a4 + 64);
        v26[5] = v22;
        __int128 v23 = *(_OWORD *)(a4 + 112);
        v26[6] = *(_OWORD *)(a4 + 96);
        v26[7] = v23;
        __int128 v24 = *(_OWORD *)(a4 + 16);
        v26[0] = *(_OWORD *)a4;
        v26[1] = v24;
        __int128 v25 = *(_OWORD *)(a4 + 48);
        void v26[2] = *(_OWORD *)(a4 + 32);
        v26[3] = v25;
        sub_1005319C0((uint64_t)(a1 + 120), (uint64_t)v26);
      }
    }

    else if (!v6)
    {
      uint64_t v7 = *(void *)(a4 + 112);
      if (v7 == 37 || v7 == 23)
      {
        __int128 v9 = *(_OWORD *)(a4 + 208);
        v28[12] = *(_OWORD *)(a4 + 192);
        v28[13] = v9;
        uint64_t v29 = *(void *)(a4 + 224);
        __int128 v10 = *(_OWORD *)(a4 + 144);
        v28[8] = *(_OWORD *)(a4 + 128);
        v28[9] = v10;
        __int128 v11 = *(_OWORD *)(a4 + 176);
        v28[10] = *(_OWORD *)(a4 + 160);
        v28[11] = v11;
        __int128 v12 = *(_OWORD *)(a4 + 80);
        v28[4] = *(_OWORD *)(a4 + 64);
        v28[5] = v12;
        __int128 v13 = *(_OWORD *)(a4 + 112);
        void v28[6] = *(_OWORD *)(a4 + 96);
        v28[7] = v13;
        __int128 v14 = *(_OWORD *)(a4 + 16);
        v28[0] = *(_OWORD *)a4;
        v28[1] = v14;
        __int128 v15 = *(_OWORD *)(a4 + 48);
        v28[2] = *(_OWORD *)(a4 + 32);
        v28[3] = v15;
        sub_1005319C0((uint64_t)(a1 + 120), (uint64_t)v28);
        sub_1009A7628(a1, (unsigned __int8 *)(a4 + 64));
      }
    }
  }

  return result;
}

uint64_t sub_1009A795C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t result = *(void *)(a1 + 112);
  if (result)
  {
    switch(*a3)
    {
      case 2:
      case 4:
        uint64_t v4 = *(uint64_t (**)(void))(*(void *)result + 40LL);
        goto LABEL_6;
      case 3:
      case 7:
        uint64_t v4 = *(uint64_t (**)(void))(*(void *)result + 32LL);
LABEL_6:
        uint64_t result = v4();
        break;
      default:
        return result;
    }
  }

  return result;
}

void sub_1009A79AC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLSkiNotifier");
  sub_1009A7A74((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *uint64_t v8 = off_101864730;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1009A7A48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1009A7A74(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_101864948;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    __int128 v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_1009A7B48(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        __int128 v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)int buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018647A8);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        __int128 v11 = (void *)(a1 + 8);
        *(_DWORD *)int buf = 136446466;
        __int128 v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_1018647A8);
        }
        __int128 v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        uint64_t v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        id v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLSkiNotifier_Type::Notification, CLSkiNotifier_Type::NotificationData>::removeClient( int) [Notification_T = CLSkiNotifier_Type::Notification, NotificationData_T = CLSkiNotifier_Type::Notification Data, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_1009A7DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_10198E900);
}

uint64_t sub_1009A7DD0(uint64_t a1, int a2, int *a3, char *a4)
{
  int v42 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)uint64_t v43 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          __int128 v24 = (uint64_t *)v18;
        }
        else {
          __int128 v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          uint64_t v29 = (uint64_t *)v25;
        }
        else {
          uint64_t v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v41 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)&buf[0] = &v42;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        memset(buf, 0, 96);
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          int v36 = sub_1009AA148(buf);
          sub_1009A9B98((_BYTE *)a1, (uint64_t)v43, (uint64_t)&v41, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v41 = a1 + 64;
        char v30 = byte_10198E901;
        HIDWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v17;
        *(void *)&buf[0] = (char *)&v40 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v30;
        HIDWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *a3;
        *(void *)&buf[0] = (char *)&v40 + 4;
        uint64_t v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *a3;
        *(void *)&buf[0] = (char *)&v40 + 4;
        uint64_t v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)&buf[0] = &v42;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        LODWORD(buf[0]) = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v43 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_1018647A8);
  }
  id v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    LODWORD(buf[0]) = 136446466;
    *(void *)((char *)buf + 4) = v15;
    WORD6(buf[0]) = 1026;
    *(_DWORD *)((char *)buf + 14) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      (uint8_t *)buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018647A8);
    }
    uint64_t v37 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t v43 = 136446466;
    *(void *)&v43[4] = v37;
    __int16 v44 = 1026;
    int v45 = a2;
    LODWORD(v4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v43,
      v40);
    uint64_t v39 = (char *)v38;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLSkiNotifier_Type::Notification, CLSkiNotifier_Type::NotificationData>::registerForNotifi cation(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLSkiNotifier_Type::Notification , NotificationData_T = CLSkiNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    return 0LL;
  }

  return result;
}

BOOL sub_1009A8240(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      __int128 v9 = (uint64_t *)v5;
    }
    else {
      __int128 v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018647A8);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)int buf = 136446466;
      char v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018647A8);
      }
      int v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      uint64_t v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      __int128 v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLSkiNotifier_Type::Notification, CLSkiNotifier_Type::NotificationData>::clientRegistere d(int, const Notification_T &) [Notification_T = CLSkiNotifier_Type::Notification, NotificationData_T = CLSkiNot ifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_1009A84C0(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_1018647A8);
              }
              uint64_t v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)int buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                uint64_t v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_1018647A8);
                }
                uint64_t v29 = a1 + 8;
                if (a1[31] < 0) {
                  uint64_t v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                int v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLSkiNotifier_Type::Notification, CLSkiNotifier_Type::NotificationData>::unreg isterForNotification(int, const Notification_T &) [Notification_T = CLSkiNotifier_Type::Notification, NotificationData_T = CLSkiNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_1009A8848(uint64_t a1, int *a2, _OWORD *a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 == v3) {
    return 0LL;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0LL;
  }
  int v11 = *(_OWORD **)(v7 + 64);
  if (!v11) {
    return 0LL;
  }
  __int128 v12 = v11[1];
  *a3 = *v11;
  a3[1] = v12;
  __int128 v13 = v11[2];
  __int128 v14 = v11[3];
  __int128 v15 = v11[5];
  a3[4] = v11[4];
  a3[5] = v15;
  a3[2] = v13;
  a3[3] = v14;
  return 1LL;
}

uint64_t sub_1009A88B8(uint64_t a1, int *a2, _OWORD *a3)
{
  int v6 = (char *)operator new(0x78uLL);
  __int128 v7 = a3[3];
  *(_OWORD *)(v6 + 56) = a3[2];
  *(_OWORD *)(v6 + 72) = v7;
  __int128 v8 = a3[5];
  *(_OWORD *)(v6 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = a3[4];
  *(_OWORD *)(v6 + 104) = v8;
  __int128 v9 = a3[1];
  *(_OWORD *)(v6 + 24) = *a3;
  *((void *)v6 + 2) = 0LL;
  *(void *)int v6 = off_1018648D8;
  *((void *)v6 + 1) = 0LL;
  *(_OWORD *)(v6 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v9;
  *(void *)&__int128 v16 = v6 + 24;
  *((void *)&v16 + 1) = v6;
  int v15 = *a2;
  int v17 = &v15;
  BOOL v10 = sub_10023347C((uint64_t **)(a1 + 56), &v15, (uint64_t)&unk_1012CF090, &v17);
  sub_10005F550((uint64_t)(v10 + 8), &v16);
  int v11 = (std::__shared_weak_count *)*((void *)&v16 + 1);
  if (*((void *)&v16 + 1))
  {
    __int128 v12 = (unint64_t *)(*((void *)&v16 + 1) + 8LL);
    do
      unint64_t v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }

  return 1LL;
}

void sub_1009A89A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1009A89BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v5,  a3,  a4,  0LL);
}

void sub_1009A8A2C(uint64_t a1, unsigned int *a2, _OWORD *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    BOOL v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018647A8);
    }
    int v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v12 = (void *)(a1 + 8);
      unint64_t v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)int buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2082;
      *(void *)&_BYTE buf[20] = "activity";
      __int16 v70 = 2082;
      __int128 v71 = v12;
      __int16 v72 = 2050;
      __int128 v73 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    __int128 v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      __int128 v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)__int128 v74 = &v74[8];
      memset(&v74[8], 0, 24);
      __int128 v75 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v74);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v73;
      if (v73)
      {
        p_shared_owners = (unint64_t *)&v73->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v75;
      if (v75)
      {
        int v25 = (unint64_t *)&v75->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v74, *(void **)&v74[8]);
    }

    if (a4)
    {
      __int16 v27 = (char *)operator new(0x78uLL);
      __int128 v28 = a3[3];
      *(_OWORD *)(v27 + 56) = a3[2];
      *(_OWORD *)(v27 + 72) = v28;
      __int128 v29 = a3[5];
      *(_OWORD *)(v27 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = a3[4];
      *(_OWORD *)(v27 + 104) = v29;
      __int128 v30 = a3[1];
      *(_OWORD *)(v27 + 24) = *a3;
      *((void *)v27 + 2) = 0LL;
      *(void *)__int16 v27 = off_1018648D8;
      *((void *)v27 + 1) = 0LL;
      *(_OWORD *)(v27 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v30;
      *(void *)int buf = v27 + 24;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      __int16 v31 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        int v32 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v33 = __ldaxr(v32);
        while (__stlxr(v33 - 1, v32));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    uint64_t v34 = sub_1009A9734(a3);
    if (a5 == -1)
    {
      sub_1009A97C4((void *)a1, (int *)a2, v34);
    }

    else
    {
      uint64_t v35 = a1 + 88;
      uint64_t v36 = *(void *)(a1 + 88);
      if (!v36) {
        goto LABEL_48;
      }
      uint64_t v37 = a1 + 88;
      do
      {
        int v38 = *(_DWORD *)(v36 + 32);
        BOOL v39 = v38 < a5;
        if (v38 >= a5) {
          uint64_t v40 = (uint64_t *)v36;
        }
        else {
          uint64_t v40 = (uint64_t *)(v36 + 8);
        }
        if (!v39) {
          uint64_t v37 = v36;
        }
        uint64_t v36 = *v40;
      }

      while (*v40);
      if (v37 == v35 || *(_DWORD *)(v37 + 32) > a5) {
LABEL_48:
      }
        uint64_t v37 = a1 + 88;
      uint64_t v67 = v37;
      unint64_t v41 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v42 = *a2;
      uint64_t v43 = (__n128 *)(a1 + 64);
      do
      {
        int v44 = *(_DWORD *)(v41 + 32);
        BOOL v45 = v44 < v42;
        if (v44 >= v42) {
          __int16 v46 = (unint64_t *)v41;
        }
        else {
          __int16 v46 = (unint64_t *)(v41 + 8);
        }
        if (!v45) {
          uint64_t v43 = (__n128 *)v41;
        }
        unint64_t v41 = *v46;
      }

      while (*v46);
      if (v43 == v15 || v42 < (signed __int32)v43[2].n128_u32[0])
      {
LABEL_59:
        __int128 v66 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_1018647A8);
        }
        uint64_t v47 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          __int128 v48 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v74, a1, a2);
          if (v74[23] >= 0) {
            __int128 v49 = v74;
          }
          else {
            __int128 v49 = *(_BYTE **)v74;
          }
          *(_DWORD *)int buf = 136315650;
          *(void *)&uint8_t buf[4] = v48;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&_BYTE buf[18] = 2080;
          *(void *)&_BYTE buf[20] = v49;
          _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v74[23] & 0x80000000) != 0) {
            operator delete(*(void **)v74);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_1018647A8);
          }
          __int128 v50 = (void *)(a1 + 8);
          uint64_t v51 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v65 >= 0) {
            uint64_t v52 = __p;
          }
          else {
            uint64_t v52 = (void **)__p[0];
          }
          *(_DWORD *)__int128 v74 = 136315650;
          *(void *)&v74[4] = v50;
          *(_WORD *)&_BYTE v74[12] = 1024;
          *(_DWORD *)&v74[14] = a5;
          *(_WORD *)&v74[18] = 2080;
          *(void *)&v74[20] = v52;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v51,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v74,
            28,
            v63);
          __int128 v54 = v53;
          if (v65 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLSkiNotifier_Type::Notification, CLSkiNotifier_Type::NotificationData>::notifyClien tsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLSkiNotif ier_Type::Notification, NotificationData_T = CLSkiNotifier_Type::NotificationData, NotificationInfo_T = char , RegistrationInfo_T = char]",  "%s\n",  v54);
          if (v54 != buf) {
            free(v54);
          }
        }

        goto LABEL_83;
      }

      __int128 v66 = v43;
      if (v37 == v35) {
        goto LABEL_60;
      }
      uint64_t v57 = v43[3].n128_i64[0];
      uint64_t v55 = v43 + 3;
      uint64_t v56 = (__n128 *)v57;
      if (!v57) {
        goto LABEL_60;
      }
      int v58 = *(_DWORD *)(v37 + 32);
      std::stringbuf v59 = v55;
      do
      {
        int v60 = v56[1].n128_i32[3];
        BOOL v61 = v60 < v58;
        if (v60 >= v58) {
          __int128 v62 = v56;
        }
        else {
          __int128 v62 = (__n128 *)&v56->n128_i8[8];
        }
        if (!v61) {
          std::stringbuf v59 = v56;
        }
        uint64_t v56 = (__n128 *)v62->n128_u64[0];
      }

      while (v62->n128_u64[0]);
      sub_1009A9B98((_BYTE *)a1, (uint64_t)&v67, (uint64_t)&v66, v34);
    }

void sub_1009A9084( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_1009A90D0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018647A8);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)int buf = 136315138;
      uint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018647A8);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      unint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      int v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLSkiNotifier_Type::Notification, CLSkiNotifier_Type::NotificationData>::listClients() [ Notification_T = CLSkiNotifier_Type::Notification, NotificationData_T = CLSkiNotifier_Type::NotificationData, No tificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_1018647A8);
    }
    __int128 v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)int buf = 136315394;
      uint64_t v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_1018647A8);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      unint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      __int128 v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLSkiNotifier_Type::Notification, CLSkiNotifier_Type::NotificationData>::listClients() [ Notification_T = CLSkiNotifier_Type::Notification, NotificationData_T = CLSkiNotifier_Type::NotificationData, No tificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    BOOL v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      int v11 = (void *)(a1 + 8);
      do
      {
        __int128 v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_1018647A8);
            }
            unint64_t v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)int buf = 136315650;
              uint64_t v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_1018647A8);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              unint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLSkiNotifier_Type::Notification, CLSkiNotifier_Type::NotificationData>::listCli ents() [Notification_T = CLSkiNotifier_Type::Notification, NotificationData_T = CLSkiNotifier_Type::Noti ficationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            int v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                int v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                __int128 v12 = v18;
              }

              while (!v19);
            }

            __int128 v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            BOOL v10 = v26;
          }

          while (!v19);
        }

        BOOL v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_1009A967C(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009AA0E8(a1);
  operator delete(v1);
}

id sub_1009A9690(uint64_t a1, int a2, void *a3)
{
  id result = sub_1009A9CC4(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_1009A96DC(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1009A9708(id a1)
{
  qword_101934668 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Skiing");
}

CLCppContainer *sub_1009A9734(_OWORD *a1)
{
  uint64_t v2 = operator new(0x60uLL);
  __int128 v3 = a1[3];
  v2[2] = a1[2];
  v2[3] = v3;
  __int128 v4 = a1[5];
  v2[4] = a1[4];
  v2[5] = v4;
  __int128 v5 = a1[1];
  *uint64_t v2 = *a1;
  v2[1] = v5;
  __int128 v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472LL;
  uint64_t v9 = sub_1009A9CB4;
  BOOL v10 = &unk_10181D3D0;
  int v11 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_1009A97C4(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    __int128 v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          __int128 v12 = (uint64_t *)v4;
        }
        else {
          __int128 v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        uint64_t v51 = v9;
        id v13 = sub_1009A9CC4(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        __int128 v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              __int128 v50 = v19;
              sub_1009A9B98(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              __int128 v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  __int128 v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              uint64_t v51 = v29;
              uint64_t v34 = v29[6];
              __int128 v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                uint64_t v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    BOOL v39 = (uint64_t *)v36;
                  }
                  else {
                    BOOL v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    uint64_t v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      int v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      int v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      __int128 v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  uint64_t v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      __int128 v14 = v43;
                      uint64_t v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      __int128 v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      uint64_t v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              __int128 v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_1018647A8);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)int buf = 136446466;
                uint64_t v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_1018647A8);
                }
                BOOL v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                __int128 v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLSkiNotifier_Type::Notification, CLSkiNotifier_Type::NotificationData>::invokeClients WithData(const Notification_T &, CLCppContainer *) [Notification_T = CLSkiNotifier_Type::Notification, NotificationData_T = CLSkiNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_1009A9B98(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    __int128 v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_1009A9CC4(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    __int128 v14 = (int *)(*(void *)a2 + 32LL);
    __int128 v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    id result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_1009A9C74(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1018648D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1009A9C88(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1018648D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_1009A9CB4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_1009A9CC4(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_1009A9D10(a1);
  }
  else {
    return 0LL;
  }
}

id sub_1009A9D10(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101864918);
    }
    __int128 v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013428BELL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101864918);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101864918);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)int buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001013428BELL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101864918);
    }
    LODWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = 134218498;
    HIDWORD(v_Block_object_dispose((const void *)(v1 - 224), 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  __int128 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLSkiNotifier_Type::NotificationData, Callbacunint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_1009AA0BC(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_1009AA0E8(uint64_t a1)
{
  *(void *)a1 = off_101864948;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *id v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_1009AA148(_OWORD *a1)
{
  id v2 = operator new(0x60uLL);
  __int128 v3 = a1[3];
  v2[2] = a1[2];
  v2[3] = v3;
  __int128 v4 = a1[5];
  v2[4] = a1[4];
  v2[5] = v4;
  __int128 v5 = a1[1];
  *id v2 = *a1;
  v2[1] = v5;
  __int128 v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472LL;
  id v9 = sub_1009AA1D8;
  id v10 = &unk_10181D3D0;
  __int16 v11 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_1009AA1D8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

uint64_t sub_1009AA1E8()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_101999A48, (void *)&_mh_execute_header);
}

void *sub_1009AA22C(void *a1, int a2)
{
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  *a1 = off_101864970;
  a1[9] = off_101864A28;
  sub_1009AAEAC((uint64_t)a1);
  return a1;
}

void sub_1009AA2B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_1009AA2E0(uint64_t a1, char *a2, int a3, uint64_t a4, int a5, float a6)
{
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  uint64_t v12 = (void *)(a1 + 8);
  *(void *)a1 = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 8));
  void *v12 = &off_101826EF8;
  *(void *)a1 = off_101864BA8;
  *(void *)(a1 + 72) = off_101864C50;
  sub_100D8A584(a1 + 72, a2, a3, a1, a6, a4, a5, 0LL);
  *(void *)a1 = off_101864BA8;
  *(void *)(a1 + 72) = off_101864C50;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_DWORD *)(a1 + 256) = 12000;
  *(void *)(a1 + 264) = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 272));
  *(void *)(a1 + 272) = &off_101826EF8;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v29 = a1 + 112;
  (*(void (**)(void))(v13 + 16))();
  __int16 v31 = 256;
  if (a3)
  {
    *(void *)(a1 + 232) = 0xBFF0000000000000LL;
LABEL_3:
    (*(void (**)(uint64_t))(*(void *)v29 + 24LL))(v29);
    return a1;
  }

  if (*(char *)(a4 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a4, *(void *)(a4 + 8));
  }

  else
  {
    *(_OWORD *)__int128 __p = *(_OWORD *)a4;
    uint64_t v28 = *(void *)(a4 + 16);
  }

  sub_100D8AF38(a1 + 72, (uint64_t)__p);
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v14 = sub_1006E27E8();
  sub_100413284(v14, buf);
  int v15 = (int *)(a1 + 256);
  char v16 = sub_1002A7CB0(*(uint64_t *)buf, "ActivityInMemoryBufferSize", (_DWORD *)(a1 + 256));
  uint64_t v17 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }

  if ((v16 & 1) == 0) {
    *int v15 = 12000;
  }
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101864C90);
  }
  int v20 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    int v21 = *v15;
    *(_DWORD *)int buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v21;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Buffer size: %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101864C90);
    }
    int v24 = *v15;
    v32[0] = 67109120;
    v32[1] = v24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Buffer size: %d",  v32);
    int v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLActivityRecorderDb<VO2MaxStagingLostEstimate, CLActivityDB::ClassBDataProtectionPolicy>::CLActivityRecorderDb(co nst char *, BOOL, float, const std::string &, const CLSqliteDatabase::SqlitePropertyPersistence) [T = VO2MaxStagin gLostEstimate, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  int v22 = HIBYTE(v31);
  *(void *)(a1 + 232) = 0xBFF0000000000000LL;
  if (v22)
  {
    if ((_BYTE)v31)
    {
      pthread_mutex_unlock(v30);
      return a1;
    }

    goto LABEL_3;
  }

  return a1;
}

void sub_1009AA68C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  v24[33] = off_101826EC8;
  sub_1001B9C98(v27);
  sub_1000EAA04(v26);
  sub_100D8A88C(a12);
  *int v24 = off_101826EC8;
  sub_1001B9C98(v25);
  _Unwind_Resume(a1);
}

void sub_1009AA730()
{
}

void *sub_1009AA738(void *a1)
{
  a1[9] = off_101864C50;
  uint64_t v2 = (uint64_t)(a1 + 9);
  *a1 = off_101864BA8;
  a1[33] = off_101826EC8;
  sub_1001B9C98(a1 + 34);
  sub_1000EAA04(a1 + 22);
  sub_100D8A88C(v2);
  *a1 = off_101826EC8;
  sub_1001B9C98(a1 + 1);
  return a1;
}

void *sub_1009AA7B8(uint64_t a1)
{
  return sub_1009AA738((void *)(a1 - 72));
}

void sub_1009AA7C0(void *a1)
{
  uint64_t v1 = sub_1009AA738(a1);
  operator delete(v1);
}

void sub_1009AA7D4(uint64_t a1)
{
  uint64_t v1 = sub_1009AA738((void *)(a1 - 72));
  operator delete(v1);
}

uint64_t sub_1009AA7EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1009AA7F8(a2, a3);
}

uint64_t sub_1009AA7F8(uint64_t *a1, uint64_t a2)
{
  __int128 v4 = (sqlite3_stmt *)sub_100019240(*a1);
  *(void *)a2 = sqlite3_column_int(v4, 0);
  __int128 v5 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = sqlite3_column_double(v5, 1);
  char v6 = (sqlite3_stmt *)sub_100019240(*a1);
  __int128 v7 = sqlite3_column_text(v6, 2);
  return uuid_parse((const char *)v7, (unsigned __int8 *)(a2 + 16));
}

uint64_t sub_1009AA858(uint64_t *a1, uint64_t a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1003C0D54(a1[10], "DELETE FROM VO2MaxStagingLostEstimateHistory WHERE startTime < ?", &v13);
  uint64_t v5 = v13;
  char v6 = (sqlite3_stmt *)sub_100019240(v13);
  if (sub_1003B7480(v6, 1, Current - *(double *)(*(void *)(a2 + 8) - 24LL)))
  {
    uint64_t v7 = a1[10];
    uint64_t v8 = (sqlite3_stmt *)sub_100019240(v5);
    sub_1003BB2BC(v7, v8);
    uint64_t v9 = (*(int (**)(uint64_t *))(*a1 + 152))(a1);
  }

  else
  {
    uint64_t v9 = -1LL;
  }

  sub_1003C05BC(a1[10]);
  uint64_t v10 = a1[10];
  else {
    uint64_t v11 = *(void *)(v10 + 88);
  }
  sub_1003C1EC0(v10, v11);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return v9;
}

void sub_1009AA970(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009AA990(uint64_t a1, uint64_t a2)
{
  return sub_1009AA858((uint64_t *)(a1 - 72), a2);
}

uint64_t sub_1009AA998(uint64_t a1, char **a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    a2[1] = *a2;
    sub_1003C0D54(*(void *)(a1 + 80), "SELECT * from VO2MaxStagingLostEstimateHistory ORDER BY startTime ASC", &v23);
    uint64_t v5 = v23;
    uint64_t v22 = v23;
    sub_1003C0454(*(void *)(a1 + 80));
    __int128 v23 = 0uLL;
    while (1)
    {
      char v6 = (sqlite3_stmt *)sub_100019240(v5);
      if (sqlite3_step(v6) != 100) {
        break;
      }
      sub_1009AA7F8(&v22, (uint64_t)&v23);
      uint64_t v7 = a2[1];
      unint64_t v8 = (unint64_t)a2[2];
      if ((unint64_t)v7 >= v8)
      {
        uint64_t v11 = (v7 - *a2) >> 5;
        unint64_t v12 = v11 + 1;
        uint64_t v13 = v8 - (void)*a2;
        if (v13 >> 4 > v12) {
          unint64_t v12 = v13 >> 4;
        }
        else {
          unint64_t v14 = v12;
        }
        if (v14) {
          int v15 = (char *)sub_10000835C((uint64_t)(a2 + 2), v14);
        }
        else {
          int v15 = 0LL;
        }
        char v16 = &v15[32 * v11];
        __int128 v17 = v24;
        *(_OWORD *)char v16 = v23;
        *((_OWORD *)v16 + 1) = v17;
        unint64_t v19 = *a2;
        int v18 = a2[1];
        int v20 = v16;
        if (v18 != *a2)
        {
          do
          {
            __int128 v21 = *((_OWORD *)v18 - 1);
            *((_OWORD *)v20 - 2) = *((_OWORD *)v18 - 2);
            *((_OWORD *)v20 - 1) = v21;
            v20 -= 32;
            v18 -= 32;
          }

          while (v18 != v19);
          int v18 = *a2;
        }

        uint64_t v10 = v16 + 32;
        *a2 = v20;
        a2[1] = v16 + 32;
        a2[2] = &v15[32 * v14];
        if (v18) {
          operator delete(v18);
        }
      }

      else
      {
        __int128 v9 = v24;
        *(_OWORD *)uint64_t v7 = v23;
        *((_OWORD *)v7 + 1) = v9;
        uint64_t v10 = v7 + 32;
      }

      a2[1] = v10;
    }

    uint64_t result = sub_1003C05BC(*(void *)(a1 + 80));
    if (v5) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return result;
}

void sub_1009AAB5C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009AAB8C(uint64_t a1)
{
  uint64_t v3 = v8;
  __int128 v4 = (sqlite3_stmt *)sub_100019240(v8);
  int v5 = sqlite3_step(v4);
  if (v5 == 100)
  {
    char v6 = (sqlite3_stmt *)sub_100019240(v3);
    uint64_t v1 = sqlite3_column_int(v6, 0);
  }

  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  if (v5 != 100) {
    return 0xFFFFFFFFLL;
  }
  return v1;
}

void sub_1009AAC2C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009AAC50(uint64_t a1)
{
  return sub_1009AAB8C(a1 - 72);
}

uint64_t sub_1009AAC58(uint64_t a1, const unsigned __int8 *a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    uuid_unparse(a2, out);
    sub_1003C0D54(*(void *)(a1 + 80), "DELETE FROM VO2MaxStagingLostEstimateHistory WHERE sessionId = ?", buf);
    uint64_t v5 = *(void *)buf;
    char v6 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)buf);
    uint64_t result = sub_1003BC1F0(v6, 1, out);
    if ((_DWORD)result)
    {
      if (qword_1019346E0 != -1) {
        dispatch_once(&qword_1019346E0, &stru_101864AB8);
      }
      uint64_t v7 = (os_log_s *)qword_1019346E8;
      if (os_log_type_enabled((os_log_t)qword_1019346E8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)int buf = 136446210;
        *(void *)&uint8_t buf[4] = out;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Deleting VO2MaxStagingLostEstimateHistory records from db where sessionId = %{public}s",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019346E0 != -1) {
          dispatch_once(&qword_1019346E0, &stru_101864AB8);
        }
        int v11 = 136446210;
        unint64_t v12 = out;
        uint64_t v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346E8,  2LL,  "Deleting VO2MaxStagingLostEstimateHistory records from db where sessionId = %{public}s",  &v11,  12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLVO2MaxStagingLostEstimateRecorderDb::deleteRecordsForSessionId(unsigned char *)",  "%s\n",  v10);
        if (v10 != buf) {
          free(v10);
        }
      }

      uint64_t v8 = *(void *)(a1 + 80);
      __int128 v9 = (sqlite3_stmt *)sub_100019240(v5);
      uint64_t result = sub_1003BB2BC(v8, v9);
    }

    if (v5) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return result;
}

void sub_1009AAE80(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009AAEAC(uint64_t a1)
{
  uint64_t result = sub_1003C1048(*(void *)(a1 + 80));
  if ((_DWORD)result) {
    return sub_1003B59A0( *(void *)(a1 + 80),  "VO2MaxStagingLostEstimateHistory",  (const char **)&off_101864AD8,  (const std::string::value_type **)&off_10198E908,  0);
  }
  return result;
}

uint64_t sub_1009AAF00(uint64_t a1)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_1003C0D54(*(void *)(a1 + 80), "DELETE FROM VO2MaxStagingLostEstimateHistory", &v8);
    uint64_t v3 = v8;
    uint64_t v4 = *(void *)(a1 + 80);
    uint64_t v5 = (sqlite3_stmt *)sub_100019240(v8);
    sub_1003BB2BC(v4, v5);
    uint64_t v6 = *(void *)(a1 + 80);
    else {
      uint64_t v7 = *(void *)(v6 + 88);
    }
    uint64_t result = sub_1003C1EC0(v6, v7);
    if (v3) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
  }

  return result;
}

void sub_1009AAF94(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009AAFB4(uint64_t a1)
{
  return sub_1009AAF00(a1 - 72);
}

uint64_t sub_1009AAFBC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_1003C0D54( *(void *)(a1 + 80),  "INSERT INTO VO2MaxStagingLostEstimateHistory (startTime, sessionId) VALUES (?, ?)",  v10);
    uint64_t v5 = *(void *)v10;
    uuid_unparse((const unsigned __int8 *)(a2 + 16), v10);
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v5);
    uint64_t result = sub_1003B7480(v6, 1, *(double *)(a2 + 8));
    if ((_DWORD)result)
    {
      uint64_t v7 = (sqlite3_stmt *)sub_100019240(v5);
      uint64_t result = sub_1003BC1F0(v7, 2, v10);
      if ((_DWORD)result)
      {
        uint64_t v8 = *(void *)(a1 + 80);
        __int128 v9 = (sqlite3_stmt *)sub_100019240(v5);
        uint64_t result = sub_1003BB2BC(v8, v9);
      }
    }

    if (v5) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return result;
}

void sub_1009AB0A4(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1009AB0CC(void *a1, void **a2, double a3, double a4)
{
  uint64_t v8 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v39);
  if ((SHIBYTE(v40) & 0x80000000) == 0)
  {
    if (HIBYTE(v40)) {
      goto LABEL_3;
    }
LABEL_40:
    sub_1012560CC(v8);
    __break(1u);
  }

  uint64_t v34 = v39[1];
  operator delete(v39[0]);
  if (!v34) {
    goto LABEL_40;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v39);
  __int128 v9 = sub_10000CF44(&v40, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(_BYTE *__return_ptr, void *))(*a1 + 64LL))(v43, a1);
  if (v43[23] >= 0) {
    uint64_t v10 = v43;
  }
  else {
    uint64_t v10 = *(_BYTE **)v43;
  }
  if (v43[23] >= 0) {
    uint64_t v11 = v43[23];
  }
  else {
    uint64_t v11 = *(void *)&v43[8];
  }
  unint64_t v12 = sub_10000CF44(v9, (uint64_t)v10, v11);
  sub_10000CF44(v12, (uint64_t)" WHERE startTime > ? and startTime <= ? ORDER BY rowid ASC", 58LL);
  if ((v43[23] & 0x80000000) != 0) {
    operator delete(*(void **)v43);
  }
  uint64_t v13 = a1[10];
  std::stringbuf::str((std::stringbuf::string_type *)v43, &v41);
  if (v43[23] >= 0) {
    unint64_t v14 = v43;
  }
  else {
    unint64_t v14 = *(char **)v43;
  }
  sub_1003C0D54(v13, v14, &v37);
  uint64_t v15 = v37;
  uint64_t v37 = 0LL;
  uint64_t v38 = v15;
  if ((v43[23] & 0x80000000) != 0) {
    operator delete(*(void **)v43);
  }
  char v16 = (sqlite3_stmt *)sub_100019240(v15);
  if (sub_1003B7480(v16, 1, a3) && (__int128 v17 = (sqlite3_stmt *)sub_100019240(v15), sub_1003B7480(v17, 2, a4)))
  {
    *(_OWORD *)uint64_t v43 = 0uLL;
    while (1)
    {
      uint64_t v18 = sub_1001BA11C((uint64_t)a1, &v38, (uint64_t)v43);
      if ((_DWORD)v18) {
        break;
      }
      unint64_t v19 = a2[1];
      unint64_t v20 = (unint64_t)a2[2];
      if ((unint64_t)v19 >= v20)
      {
        uint64_t v23 = ((char *)v19 - (_BYTE *)*a2) >> 5;
        unint64_t v24 = v23 + 1;
        uint64_t v25 = v20 - (void)*a2;
        if (v25 >> 4 > v24) {
          unint64_t v24 = v25 >> 4;
        }
        else {
          unint64_t v26 = v24;
        }
        if (v26) {
          uint64_t v27 = (char *)sub_10000835C((uint64_t)(a2 + 2), v26);
        }
        else {
          uint64_t v27 = 0LL;
        }
        uint64_t v28 = &v27[32 * v23];
        __int128 v29 = *(_OWORD *)&v43[16];
        *(_OWORD *)uint64_t v28 = *(_OWORD *)v43;
        *((_OWORD *)v28 + 1) = v29;
        __int16 v31 = (char *)*a2;
        int v30 = (char *)a2[1];
        int v32 = v28;
        if (v30 != *a2)
        {
          do
          {
            __int128 v33 = *((_OWORD *)v30 - 1);
            *((_OWORD *)v32 - 2) = *((_OWORD *)v30 - 2);
            *((_OWORD *)v32 - 1) = v33;
            v32 -= 32;
            v30 -= 32;
          }

          while (v30 != v31);
          int v30 = (char *)*a2;
        }

        uint64_t v22 = v28 + 32;
        *a2 = v32;
        a2[1] = v28 + 32;
        a2[2] = &v27[32 * v26];
        if (v30) {
          operator delete(v30);
        }
      }

      else
      {
        __int128 v21 = *(_OWORD *)&v43[16];
        *unint64_t v19 = *(_OWORD *)v43;
        v19[1] = v21;
        uint64_t v22 = v19 + 2;
      }

      a2[1] = v22;
    }

    uint64_t v15 = v38;
  }

  else
  {
    uint64_t v18 = 2LL;
  }

  uint64_t v38 = 0LL;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
  }
  *(void **)((char *)v39
  uint64_t v40 = v35;
  std::streambuf::~streambuf(&v41);
  std::ios::~ios(&v42);
  return v18;
}

void sub_1009AB408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1009AB478(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v2 = a1 + 112;
  uint64_t v4 = v2 - 40;
  uint64_t v38 = v2;
  (*(void (**)(void))(v3 + 16))();
  if (sub_100D8A92C(v4))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101864C90);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289282;
      *(_DWORD *)uint64_t v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&void v42[6] = "";
      __int16 v43 = 2082;
      BOOL v44 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Database is already opened., name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    if (*(void *)(a1 + 216))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101864C90);
      }
      uint64_t v7 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v8 = *(void *)(a1 + 216);
        *(_DWORD *)int buf = 134349056;
        *(void *)uint64_t v42 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101864C90);
        }
        uint64_t v34 = *(void *)(a1 + 216);
        int v39 = 134349056;
        uint64_t v40 = v34;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  &v39,  12);
        uint64_t v36 = (uint8_t *)v35;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLActivityRecorderDb<VO2MaxStagingLostEstimate, CLActivityDB::ClassBDataProtectionPolicy>::setDat abaseAccessible() [T = VO2MaxStagingLostEstimate, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v35);
        if (v36 != buf) {
          free(v36);
        }
      }
    }

    uint64_t v9 = 1LL;
    goto LABEL_63;
  }

  sub_1001BA070(a1);
  uint64_t v9 = sub_100D8A92C(v4);
  if ((_DWORD)v9)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101864C90);
    }
    uint64_t v10 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = (void *)(a1 + 88);
      uint64_t v12 = *(void *)(a1 + 216);
      *(_DWORD *)int buf = 68289539;
      *(_DWORD *)uint64_t v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&void v42[6] = "";
      __int16 v43 = 2082;
      BOOL v44 = v11;
      __int16 v45 = 2049;
      uint64_t v46 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Inserting entries into database, name:%{public, location:escape_only}s, size:%{private}llu}",  buf,  0x26u);
    }

    sub_1003C0454(*(void *)(a1 + 80));
    uint64_t v13 = *(void *)(a1 + 184);
    uint64_t v14 = *(void *)(a1 + 192);
    uint64_t v15 = (void *)(v13 + 8LL * (*(void *)(a1 + 208) >> 7));
    if (v14 == v13) {
      uint64_t v16 = 0LL;
    }
    else {
      uint64_t v16 = *v15 + 32 * (*(void *)(a1 + 208) & 0x7FLL);
    }
    while (1)
    {
      if (v14 == v13)
      {
        uint64_t v22 = 0LL;
      }

      else
      {
        unint64_t v21 = *(void *)(a1 + 216) + *(void *)(a1 + 208);
        uint64_t v22 = *(void *)(v13 + ((v21 >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * (v21 & 0x7F);
      }

      if (v16 == v22) {
        break;
      }
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101864CB0);
      }
      uint64_t v23 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "Adding from buffer to db.", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101864CB0);
        }
        LOWORD(v39) = 0;
        LODWORD(v37) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Adding from buffer to db.",  &v39,  v37);
        unint64_t v26 = (uint8_t *)v25;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLActivityRecorderDb<VO2MaxStagingLostEstimate, CLActivityDB::ClassBDataProtectionPolicy>::setDat abaseAccessible() [T = VO2MaxStagingLostEstimate, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v25);
        if (v26 != buf) {
          free(v26);
        }
      }

      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 80LL))(a1, v16, 1LL);
      v16 += 32LL;
      if (v16 - *v15 == 4096)
      {
        uint64_t v24 = v15[1];
        ++v15;
        uint64_t v16 = v24;
      }

      uint64_t v13 = *(void *)(a1 + 184);
      uint64_t v14 = *(void *)(a1 + 192);
    }

    sub_1003C05BC(*(void *)(a1 + 80));
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101864C90);
    }
    __int128 v17 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
    {
      uint64_t v18 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289282;
      *(_DWORD *)uint64_t v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&void v42[6] = "";
      __int16 v43 = 2082;
      BOOL v44 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101864C90);
      }
    }

    unint64_t v19 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      unint64_t v20 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289282;
      *(_DWORD *)uint64_t v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&void v42[6] = "";
      __int16 v43 = 2082;
      BOOL v44 = v20;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v19,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Unexpected error condition! Device has been unlocked but database remains unreadable!",  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    *(_BYTE *)(a1 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  }

  uint64_t v27 = *(void ***)(a1 + 184);
  uint64_t v28 = *(void *)(a1 + 192);
  *(void *)(a1 + 216) = 0LL;
  unint64_t v29 = v28 - (void)v27;
  if (v29 >= 0x11)
  {
    do
    {
      operator delete(*v27);
      uint64_t v30 = *(void *)(a1 + 192);
      uint64_t v27 = (void **)(*(void *)(a1 + 184) + 8LL);
      *(void *)(a1 + 184) = v27;
      unint64_t v29 = v30 - (void)v27;
    }

    while (v29 > 0x10);
  }

  if (v29 >> 3 == 1)
  {
    uint64_t v31 = 64LL;
  }

  else
  {
    if (v29 >> 3 != 2) {
      goto LABEL_61;
    }
    uint64_t v31 = 128LL;
  }

  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = v31;
LABEL_61:
  int v32 = *(void **)(a1 + 144);
  if (v32)
  {

    *(void *)(a1 + 144) = 0LL;
  }

void sub_1009ABB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

id *sub_1009ABBB4(uint64_t a1, uint64_t a2, char a3)
{
  v32[0] = (id)os_transaction_create("CLActivityRecorderDb::sanitizeAndStoreRecordUL");
  v32[1] = 0LL;
  if (*(double *)(a1 + 232) > 0.0
    && (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136LL))(a1, a1 + 224, a2))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 72LL))(a1, a1 + 224, a2);
    return sub_1001BA1BC(v32);
  }

  if ((a3 & 1) == 0) {
    sub_1003C0454(*(void *)(a1 + 80));
  }
  uint64_t v41 = 0LL;
  double v42 = 0.0;
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 104LL))(a1, &v41);
  if (v6 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

  else
  {
    if (v6)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101864C90);
      }
      uint64_t v14 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Failed to insert record due to failure from reading the most recent entry.",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101864C90);
        }
        LOWORD(v33) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "Failed to insert record due to failure from reading the most recent entry.",  &v33,  2);
        uint64_t v16 = (uint8_t *)v15;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLActivityRecorderDb<VO2MaxStagingLostEstimate, CLActivityDB::ClassBDataProtectionPolicy>::saniti zeAndStoreRecordUL(const T &, BOOL) [T = VO2MaxStagingLostEstimate, DataProtectionPolicy = CLActivityDB::Class BDataProtectionPolicy]",  "%s\n",  v15);
        if (v16 != buf) {
          free(v16);
        }
      }

      goto LABEL_43;
    }

    double v7 = *(double *)(a2 + 8);
    double v8 = v42;
    double v9 = v7 - v42;
    if (v7 - v42 < 0.0) {
      double v9 = -(v7 - v42);
    }
    if (v9 > 604800.0)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101864C90);
      }
      uint64_t v10 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a2 + 8);
        *(_DWORD *)int buf = 134349312;
        double v38 = v42;
        __int16 v39 = 2050;
        uint64_t v40 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101864C90);
        }
        uint64_t v23 = *(void *)(a2 + 8);
        int v33 = 134349312;
        double v34 = v42;
        __int16 v35 = 2050;
        uint64_t v36 = v23;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  &v33,  22);
        uint64_t v25 = (uint8_t *)v24;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<VO2MaxStagingLostEstimate, CLActivityDB::ClassBDataProtectionPolicy>::saniti zeAndStoreRecordUL(const T &, BOOL) [T = VO2MaxStagingLostEstimate, DataProtectionPolicy = CLActivityDB::Class BDataProtectionPolicy]",  "%s\n",  v24);
        if (v25 != buf) {
          free(v25);
        }
      }

      CLWriteStackshot("Potential CM database inconsistency, time jump", 0LL);
      double v7 = *(double *)(a2 + 8);
      double v8 = v42;
    }

    if (v7 < v8)
    {
      if (v8 - v7 < 10.0)
      {
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101864C90);
        }
        uint64_t v12 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
        {
          double v13 = *(double *)(a2 + 8);
          *(_DWORD *)int buf = 134217984;
          double v38 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_101864C90);
          }
          double v26 = *(double *)(a2 + 8);
          int v33 = 134217984;
          double v34 = v26;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  COERCE_DOUBLE(&v33));
          uint64_t v28 = (uint8_t *)v27;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<VO2MaxStagingLostEstimate, CLActivityDB::ClassBDataProtectionPolicy>::sani tizeAndStoreRecordUL(const T &, BOOL) [T = VO2MaxStagingLostEstimate, DataProtectionPolicy = CLActivityDB::C lassBDataProtectionPolicy]",  "%s\n",  v27);
          if (v28 != buf) {
            free(v28);
          }
        }

        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 88LL))(a1, a2);
        goto LABEL_42;
      }

      double v17 = v7 - v8;
      double v18 = *(float *)(a1 + 136);
      if (qword_1019344B0 != -1)
      {
        double v31 = *(float *)(a1 + 136);
        dispatch_once(&qword_1019344B0, &stru_101864C90);
        double v18 = v31;
      }

      double v19 = v17 - v18;
      unint64_t v20 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)int buf = 134217984;
        double v38 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101864C90);
        }
        int v33 = 134217984;
        double v34 = v19;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  COERCE_DOUBLE(&v33));
        uint64_t v30 = (uint8_t *)v29;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<VO2MaxStagingLostEstimate, CLActivityDB::ClassBDataProtectionPolicy>::saniti zeAndStoreRecordUL(const T &, BOOL) [T = VO2MaxStagingLostEstimate, DataProtectionPolicy = CLActivityDB::Class BDataProtectionPolicy]",  "%s\n",  v29);
        if (v30 != buf) {
          free(v30);
        }
      }

      (*(void (**)(uint64_t, double))(*(void *)a1 + 96LL))(a1, v19);
    }

    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(*(void *)a1 + 144LL))(a1, &v41, a1 + 224, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

void sub_1009AC2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_1009AC320(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v23);
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    if (HIBYTE(v24)) {
      goto LABEL_3;
    }
LABEL_29:
    unint64_t v20 = (_Unwind_Exception *)sub_101256238(v4);
    sub_1011F8850((uint64_t)v23);
    _Unwind_Resume(v20);
  }

  double v19 = v23[1];
  operator delete(v23[0]);
  if (!v19) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120LL))(a1, a2, 1LL);
    sub_10000CE18((uint64_t)v23);
    int v6 = sub_10000CF44(&v24, (uint64_t)"DELETE FROM ", 12LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" WHERE startTime > ?", 20LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v25);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v21);
    uint64_t v12 = v21;
    uint64_t v21 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, *(double *)(a2 + 8)))
    {
      uint64_t v14 = a1[10];
      uint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    uint64_t v16 = a1[10];
    else {
      uint64_t v17 = *(void *)(v16 + 88);
    }
    sub_1003C1EC0(v16, v17);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v23
    uint64_t v24 = v18;
    std::streambuf::~streambuf(&v25);
    return std::ios::~ios(&v26);
  }

  return result;
}

uint64_t sub_1009AC580(void *a1, double a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v21);
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22)) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v18 = (_Unwind_Exception *)sub_1012563A4(v4);
    sub_1011F8850((uint64_t)v21);
    _Unwind_Resume(v18);
  }

  uint64_t v17 = v21[1];
  operator delete(v21[0]);
  if (!v17) {
    goto LABEL_26;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v21);
    int v6 = sub_10000CF44(&v22, (uint64_t)"UPDATE ", 7LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" SET startTime = startTime + ?", 30LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v23);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v19);
    uint64_t v12 = v19;
    uint64_t v19 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, a2))
    {
      uint64_t v14 = a1[10];
      uint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v21
    uint64_t v22 = v16;
    std::streambuf::~streambuf(&v23);
    return std::ios::~ios(&v24);
  }

  return result;
}

uint64_t sub_1009AC7B8(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v22);
  if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    if (HIBYTE(v23)) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t v17 = (_Unwind_Exception *)sub_101256510(v4);
    uint64_t v18 = v20;
    uint64_t v20 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
    sub_1011F8850((uint64_t)v22);
    _Unwind_Resume(v17);
  }

  uint64_t v16 = v22[1];
  operator delete(v22[0]);
  if (!v16) {
    goto LABEL_25;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v22);
  uint64_t v5 = sub_10000CF44(&v23, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  double v8 = sub_10000CF44(v5, (uint64_t)p_p, size);
  sub_10000CF44(v8, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28LL);
  uint64_t v9 = a1[10];
  std::stringbuf::str(&__p, &v24);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = &__p;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v9, (char *)v10, &v19);
  uint64_t v11 = v19;
  uint64_t v19 = 0LL;
  uint64_t v20 = v11;
  uint64_t v12 = sub_1001BA11C((uint64_t)a1, &v20, a2);
  uint64_t v13 = v20;
  uint64_t v20 = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  *(void **)((char *)v22
  uint64_t v23 = v14;
  std::streambuf::~streambuf(&v24);
  std::ios::~ios(&v25);
  return v12;
}

uint64_t sub_1009AC9E0(uint64_t a1)
{
  return sub_1009AB478(a1 - 72);
}

void sub_1009AC9E8(id a1)
{
  qword_1019346E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "VO2Max");
}

uint64_t sub_1009ACA14(uint64_t *a1, char **a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v33);
  if ((SHIBYTE(v34) & 0x80000000) == 0)
  {
    if (HIBYTE(v34)) {
      goto LABEL_3;
    }
LABEL_43:
    sub_10125667C(v4);
    __break(1u);
  }

  uint64_t v30 = v33[1];
  operator delete(v33[0]);
  if (!v30) {
    goto LABEL_43;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    a2[1] = *a2;
    sub_10000CE18((uint64_t)v33);
    int v6 = sub_10000CF44(&v34, (uint64_t)"SELECT * from ", 14LL);
    (*(void (**)(_BYTE *__return_ptr, uint64_t *))(*a1 + 64))(v37, a1);
    if (v37[23] >= 0) {
      double v7 = v37;
    }
    else {
      double v7 = *(_BYTE **)v37;
    }
    if (v37[23] >= 0) {
      uint64_t v8 = v37[23];
    }
    else {
      uint64_t v8 = *(void *)&v37[8];
    }
    uint64_t v9 = sub_10000CF44(v6, (uint64_t)v7, v8);
    sub_10000CF44(v9, (uint64_t)" ORDER BY id ASC", 16LL);
    if ((v37[23] & 0x80000000) != 0) {
      operator delete(*(void **)v37);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str((std::stringbuf::string_type *)v37, &v35);
    if (v37[23] >= 0) {
      uint64_t v11 = v37;
    }
    else {
      uint64_t v11 = *(char **)v37;
    }
    sub_1003C0D54(v10, v11, &v31);
    uint64_t v12 = v31;
    uint64_t v31 = 0LL;
    uint64_t v32 = v12;
    if ((v37[23] & 0x80000000) != 0) {
      operator delete(*(void **)v37);
    }
    sub_1003C0454(a1[10]);
    *(_OWORD *)uint64_t v37 = 0uLL;
    while (!sub_1001BA11C((uint64_t)a1, &v32, (uint64_t)v37))
    {
      uint64_t v13 = a2[1];
      unint64_t v14 = (unint64_t)a2[2];
      if ((unint64_t)v13 >= v14)
      {
        uint64_t v17 = (v13 - *a2) >> 5;
        unint64_t v18 = v17 + 1;
        uint64_t v19 = v14 - (void)*a2;
        if (v19 >> 4 > v18) {
          unint64_t v18 = v19 >> 4;
        }
        else {
          unint64_t v20 = v18;
        }
        if (v20) {
          uint64_t v21 = (char *)sub_10000835C((uint64_t)(a2 + 2), v20);
        }
        else {
          uint64_t v21 = 0LL;
        }
        uint64_t v22 = &v21[32 * v17];
        __int128 v23 = *(_OWORD *)&v37[16];
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v37;
        *((_OWORD *)v22 + 1) = v23;
        uint64_t v25 = *a2;
        std::stringbuf v24 = a2[1];
        uint64_t v26 = v22;
        if (v24 != *a2)
        {
          do
          {
            __int128 v27 = *((_OWORD *)v24 - 1);
            *((_OWORD *)v26 - 2) = *((_OWORD *)v24 - 2);
            *((_OWORD *)v26 - 1) = v27;
            v26 -= 32;
            v24 -= 32;
          }

          while (v24 != v25);
          std::stringbuf v24 = *a2;
        }

        uint64_t v16 = v22 + 32;
        *a2 = v26;
        a2[1] = v22 + 32;
        a2[2] = &v21[32 * v20];
        if (v24) {
          operator delete(v24);
        }
      }

      else
      {
        __int128 v15 = *(_OWORD *)&v37[16];
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v37;
        *((_OWORD *)v13 + 1) = v15;
        uint64_t v16 = v13 + 32;
      }

      a2[1] = v16;
    }

    sub_1003C05BC(a1[10]);
    uint64_t v28 = v32;
    uint64_t v32 = 0LL;
    if (v28) {
      (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
    }
    *(void **)((char *)v33
    uint64_t v34 = v29;
    std::streambuf::~streambuf(&v35);
    return std::ios::~ios(&v36);
  }

  return result;
}

void sub_1009ACD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_1011F8850((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1009ACD78(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_1009ACDA4(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void sub_1009AEB00(_Unwind_Exception *a1)
{
  STACK[0xE30] = v1 + 16;
  uint64_t v3 = (void *)STACK[0xE38];
  if (STACK[0xE38])
  {
    STACK[0xE40] = (unint64_t)v3;
    operator delete(v3);
  }

  sub_10111C2D8((uint64_t)&STACK[0xE50]);
  _Unwind_Resume(a1);
}

void *sub_1009AEB40(void *a1)
{
  *a1 = &off_101864D00;
  uint64_t v2 = (void *)a1[1];
  if (v2)
  {
    a1[2] = v2;
    operator delete(v2);
  }

  return a1;
}

void sub_1009AECF4(id a1)
{
  qword_1019345D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Fall");
}

void sub_1009AED20(void *__p)
{
  void *__p = &off_101864D00;
  uint64_t v2 = (void *)__p[1];
  if (v2)
  {
    __p[2] = v2;
    operator delete(v2);
  }

  operator delete(__p);
}

uint64_t sub_1009AED60(uint64_t result)
{
  *(void *)(result + 16) = *(void *)(result + 8);
  return result;
}

char *sub_1009AED6C(uint64_t a1, char *__src, int64_t a3)
{
  return sub_1009AED88(a1 + 8, *(char **)(a1 + 16), __src, &__src[a3], a3);
}

char *sub_1009AED88(uint64_t a1, char *__dst, char *__src, char *a4, int64_t a5)
{
  uint64_t v5 = __dst;
  if (a5 < 1) {
    return v5;
  }
  uint64_t v10 = *(char **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9 - (uint64_t)v10 < a5)
  {
    uint64_t v11 = *(char **)a1;
    uint64_t v12 = (uint64_t)&v10[a5 - *(void *)a1];
    if (v12 < 0) {
      sub_100007008();
    }
    uint64_t v13 = (char *)(__dst - v11);
    unint64_t v14 = v9 - (void)v11;
    if (2 * v14 > v12) {
      uint64_t v12 = 2 * v14;
    }
    if (v14 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v15 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v15 = v12;
    }
    if (v15)
    {
      size_t v16 = v15;
      uint64_t v17 = (char *)operator new(v15);
    }

    else
    {
      size_t v16 = 0LL;
      uint64_t v17 = 0LL;
    }

    __int128 v27 = &v13[(void)v17];
    memcpy(&v13[(void)v17], __src, a5);
    uint64_t v28 = &v13[(void)v17];
    size_t v29 = v16;
    if (v11 != v5)
    {
      do
      {
        v13[(void)v17 - 1] = v13[(void)(v11 - 1)];
        --v13;
      }

      while (v13);
      uint64_t v10 = *(char **)(a1 + 8);
      uint64_t v28 = v17;
    }

    uint64_t v30 = &v27[a5];
    uint64_t v31 = &v17[v29];
    if (v10 != v5) {
      memmove(v30, v5, v10 - v5);
    }
    uint64_t v32 = *(char **)a1;
    *(void *)a1 = v28;
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = &v30[v10 - v5];
    *(void *)(a1 + 16) = v31;
    if (v32) {
      operator delete(v32);
    }
    return v27;
  }

  uint64_t v18 = v10 - __dst;
  if (v10 - __dst >= a5)
  {
    uint64_t v19 = &__src[a5];
    uint64_t v21 = *(char **)(a1 + 8);
LABEL_17:
    uint64_t v22 = &v5[a5];
    __int128 v23 = &v21[-a5];
    std::stringbuf v24 = v21;
    if (&v21[-a5] < v10)
    {
      int64_t v25 = &v10[a5] - v21;
      std::stringbuf v24 = v21;
      do
      {
        char v26 = *v23++;
        *v24++ = v26;
        --v25;
      }

      while (v25);
    }

    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = v24;
    if (v21 != v22) {
      memmove(&v5[a5], v5, v21 - v22);
    }
    if (v19 != __src) {
      memmove(v5, __src, v19 - __src);
    }
    return v5;
  }

  uint64_t v19 = &__src[v18];
  int64_t v20 = a4 - &__src[v18];
  if (a4 != &__src[v18]) {
    memmove(*(void **)(a1 + 8), &__src[v18], a4 - &__src[v18]);
  }
  uint64_t v21 = &v10[v20];
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = &v10[v20];
  if (v18 >= 1) {
    goto LABEL_17;
  }
  return v5;
}

uint64_t sub_1009AEF70()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_101999A68, (void *)&_mh_execute_header);
}

BOOL sub_1009AEFF8(uint64_t a1, uint64_t a2)
{
  return sub_1002AC7B8(a2, "kCLMotionTypeGeomagneticModelDataTimestampKey", (const void *)(a1 + 56));
}

BOOL sub_1009AF0B4(float *a1, float *a2, char a3, uint64_t a4)
{
  char v9 = a3;
  double v8 = *a1;
  sub_1002AC7B8(a4, "kCLBiasXKey", &v8);
  double v8 = a1[1];
  sub_1002AC7B8(a4, "kCLBiasYKey", &v8);
  double v8 = a1[2];
  sub_1002AC7B8(a4, "kCLBiasZKey", &v8);
  double v8 = *a2;
  sub_1002AC7B8(a4, "kCLVarianceXKey", &v8);
  double v8 = a2[1];
  sub_1002AC7B8(a4, "kCLVarianceYKey", &v8);
  double v8 = a2[2];
  sub_1002AC7B8(a4, "kCLVarianceZKey", &v8);
  return sub_1002AB3FC(a4, "KCLDoingBiasEstimationKey", &v9);
}

BOOL sub_1009AF1C0(const void *a1, const void *a2, const void *a3, uint64_t a4)
{
  return sub_1002AC7B8(a4, "kCMActivityAlarmDuration", a3);
}

uint64_t sub_1009AF224(_DWORD *a1, _DWORD *a2, void *a3, uint64_t a4)
{
  if (sub_1002A7CB0(a4, "kCMActivityAlarmId", a1)
    && sub_1002A7CB0(a4, "kCMActivityAlarmTrigger", a2))
  {
    return sub_1002A82BC(a4, "kCMActivityAlarmDuration", a3);
  }

  else
  {
    return 0LL;
  }

void sub_1009AF2B0(UInt8 *bytes, uint64_t a2)
{
  CFDataRef v3 = CFDataCreate(kCFAllocatorDefault, bytes, 29LL);
  sub_1002AB370(a2, "kCMPressureBiasId", (uint64_t)v3);
  CFRelease(v3);
}

uint64_t sub_1009AF300(UInt8 *a1, uint64_t a2)
{
  CFTypeRef cf = 0LL;
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    return 0LL;
  }
  CFTypeID v4 = CFGetTypeID(cf);
  if (v4 != CFDataGetTypeID()) {
    return 0LL;
  }
  uint64_t v5 = (const __CFData *)cf;
  v8.location = 0LL;
  v8.length = 29LL;
  CFDataGetBytes(v5, v8, a1);
  return 1LL;
}

uint64_t sub_1009AF3A0()
{
  return qword_101999A80;
}

void *sub_1009AF3AC(void *result)
{
  uint64_t v1 = qword_101999A80;
  void *result = off_101864D60;
  result[1] = v1;
  qword_101999A80 = (uint64_t)result;
  return result;
}

void *sub_1009AF3C8(void *a1)
{
  *a1 = off_101864D60;
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101864DB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "CMFFTProcessor is being cleaned up.  Subsequent calls to CMAccelerometerProcessor::computeFrequencyFeatures will l ead to undefined behavior.",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101864DB8);
    }
    v5[0] = 0;
    CFTypeID v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CMFFTProcessor is being cleaned up.  Subsequent calls to CMAccelerometerProcessor::computeFrequencyFe atures will lead to undefined behavior.",  v5,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual CMFFTProcessor::~CMFFTProcessor()", "%s\n", v4);
  }

  return a1;
}

void sub_1009AF568(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_1009AF578(void *a1)
{
  uint64_t v1 = sub_1009AF3C8(a1);
  operator delete(v1);
}

uint64_t sub_1009AF58C(float a1)
{
  if (a1 < 0.0 || a1 > 2147500000.0)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101864DB8);
    }
    uint64_t v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)int buf = 134217984;
      double v10 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Assertion failed: arg >= 0.f && arg <= static_cast<scalar_32>(2147483647), file /Library/Caches/com.apple.xbs/So urces/CoreLocation/Oscar/CMFFTProcessor.cpp, line 52,arg,%f.",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101864DB8);
      }
      int v7 = 134217984;
      double v8 = a1;
      int v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: arg >= 0.f && arg <= static_cast<scalar_32>(2147483647), file /Library/Caches/com .apple.xbs/Sources/CoreLocation/Oscar/CMFFTProcessor.cpp, line 52,arg,%f.",  COERCE_DOUBLE(&v7));
      sub_10029211C("Generic", 1LL, 0, 0LL, "static int CMFFTProcessor::idxCeil(scalar_32)", "%s\n", v6);
    }
  }

  unsigned int v3 = (int)a1;
  else {
    return v3 + 1;
  }
}

float sub_1009AF760(int a1, unint64_t a2, float a3)
{
  float result = a3 / (float)((float)((float)a1 * 0.25) / (float)(int)(a2 >> 1));
  return result;
}

float sub_1009AF790(int a1, unint64_t a2)
{
  return (float)((float)a1 * 0.25) / (float)(int)(a2 >> 1);
}

float sub_1009AF7AC(int a1, int a2, uint64_t a3)
{
  if (a1 >= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101864DB8);
    }
    double v10 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)int buf = 67109376;
      int v16 = a1;
      __int16 v17 = 1024;
      int v18 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "Assertion failed: start < end, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMFFTProcessor.cpp, line 74,start,%d,end,%d.",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101864DB8);
      }
      v12[0] = 67109376;
      v12[1] = a1;
      __int16 v13 = 1024;
      int v14 = a2;
      uint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: start < end, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMFFT Processor.cpp, line 74,start,%d,end,%d.",  v12,  14);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static float CMFFTProcessor::getSum(int, int, const FrequencyData *)",  "%s\n",  v11);
    }
  }

  float result = 0.0;
  if (a1 <= a2)
  {
    int v7 = (float *)(a3 + 4LL * a1);
    int v8 = a2 - a1 + 1;
    do
    {
      float v9 = *v7++;
      float result = result + v9;
      --v8;
    }

    while (v8);
  }

  return result;
}

float sub_1009AF9AC(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 >= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101864DB8);
    }
    int64_t v20 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)int buf = 67109376;
      int v26 = a1;
      __int16 v27 = 1024;
      int v28 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_FAULT,  "Assertion failed: start < end, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMFFTProcessor.cpp, line 85,start,%d,end,%d.",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101864DB8);
      }
      v22[0] = 67109376;
      v22[1] = a1;
      __int16 v23 = 1024;
      int v24 = a2;
      uint64_t v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: start < end, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMFFT Processor.cpp, line 85,start,%d,end,%d.",  v22,  14);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "static float CMFFTProcessor::getPowerSum(int, int, const FrequencyData *, const FrequencyData *, const FrequencyData *)",  "%s\n",  v21);
    }
  }

  float result = 0.0;
  if (a1 <= a2)
  {
    uint64_t v11 = (float *)(a3 + 4LL * a1);
    uint64_t v12 = (float *)(a4 + 4LL * a1);
    int v13 = a2 - a1 + 1;
    int v14 = (float *)(a5 + 4LL * a1);
    do
    {
      float v15 = *v11++;
      float v16 = v15 * v15;
      float v17 = *v12++;
      float v18 = v16 + (float)(v17 * v17);
      float v19 = *v14++;
      float result = result + (float)(v18 + (float)(v19 * v19));
      --v13;
    }

    while (v13);
  }

  return result;
}

void sub_1009AFBE0(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

double sub_1009AFC0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0xBFF0000000000000LL;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(void *)(a2 + 76) = 0LL;
  *(void *)(a2 + 6_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
  *(_OWORD *)(a2 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a2 + 104) = 0u;
  *(void *)(a2 + 12sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(_BYTE *)a2 = 1;
  (*(void (**)(__int128 *__return_ptr))(**(void **)(a1 + 56) + 16LL))(&v6);
  int v4 = *(_DWORD *)(a1 + 16);
  double result = *(double *)&v6;
  *(_OWORD *)(a2 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v6;
  *(void *)(a2 + 56) = v7;
  *(_DWORD *)(a2 + 64) = v4;
  return result;
}

void sub_1009AFC90(_Unwind_Exception *a1)
{
}

id sub_1009AFCA4(uint64_t a1)
{
  if (v5 >= 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  id v2 = objc_msgSend( @"LastUploadTime",  "stringByAppendingString:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", p_p));
  if (v5 < 0) {
    operator delete(__p);
  }
  return v2;
}

void sub_1009AFD1C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1009AFD38(uint64_t a1, double a2)
{
  *(double *)(a1 + 96) = a2;
  unsigned int v3 = (const void *)(a1 + 96);
  uint64_t v4 = sub_1002F8DDC();
  char v5 = (const __CFString *)sub_1009AFCA4(a1);
  return sub_1002AC820(v4, v5, v3);
}

uint64_t sub_1009AFD80(uint64_t a1)
{
  id v2 = *(void **)(a1 + 104);
  if (v2)
  {
    *(void *)(a1 + 112) = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_1009AFDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((_DWORD)a3 == 7)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 96LL))(a1, a4);
  }

  else if ((_DWORD)a3 == 6)
  {
    (*(void (**)(uint64_t, void))(*(void *)a1 + 104LL))(a1, *(unsigned int *)(a4 + 4));
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120LL))(a1, a2, a3, a4);
}

BOOL sub_1009AFE54(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 88))
  {
    if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 160LL))(a1) || !*(_BYTE *)(a1 + 320))
    {
      __int128 v19 = *(_OWORD *)(a1 + 104);
      uint64_t v20 = *(void *)(a1 + 120);
      sub_100E31DD4(a1 + 280);
      int v3 = v2;
      if (*(_DWORD *)(a1 + 128) >= v2) {
        return 1LL;
      }
      if (qword_1019349B0 != -1) {
        dispatch_once(&qword_1019349B0, &stru_101864DD8);
      }
      uint64_t v4 = (os_log_s *)qword_1019349B8;
      if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEBUG))
      {
        sub_10083CBD8(*(_DWORD *)(a1 + 16));
        char v5 = v29 >= 0 ? v25 : *(_BYTE **)v25;
        int v6 = *(_DWORD *)(a1 + 128);
        *(_DWORD *)int buf = 136315650;
        *(void *)uint64_t v22 = v5;
        *(_WORD *)&_WORD v22[8] = 1024;
        *(_DWORD *)&v22[10] = v6;
        __int16 v23 = 1024;
        LODWORD(v24) = v3;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "%s not ready to upload: invalid reachability. Have %d and need %d",  buf,  0x18u);
        if (SHIBYTE(v29) < 0) {
          operator delete(*(void **)v25);
        }
      }

      BOOL result = sub_1002921D0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349B0 != -1) {
          dispatch_once(&qword_1019349B0, &stru_101864DD8);
        }
        uint64_t v8 = qword_1019349B8;
        sub_10083CBD8(*(_DWORD *)(a1 + 16));
        if (v18 >= 0) {
          p_p = &__p;
        }
        else {
          p_p = __p;
        }
        int v10 = *(_DWORD *)(a1 + 128);
        *(_DWORD *)int64_t v25 = 136315650;
        *(void *)&char v25[4] = p_p;
        __int16 v26 = 1024;
        int v27 = v10;
        __int16 v28 = 1024;
        int v29 = v3;
        uint64_t v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  2LL,  "%s not ready to upload: invalid reachability. Have %d and need %d",  v25,  24,  v16);
        if (v18 < 0) {
          operator delete(__p);
        }
        sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLSubHarvester::baseUploadRequirementsMet()", "%s\n", v11);
        return 0LL;
      }
    }

    else
    {
      if (qword_1019349B0 != -1) {
        dispatch_once(&qword_1019349B0, &stru_101864DD8);
      }
      uint64_t v12 = (os_log_s *)qword_1019349B8;
      BOOL result = os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEBUG);
      if (result)
      {
        uint64_t v15 = *(unsigned int *)(a1 + 16);
        *(_DWORD *)int buf = 68289282;
        *(_DWORD *)uint64_t v22 = 0;
        *(_WORD *)&void v22[4] = 2082;
        *(void *)&v22[6] = "";
        __int16 v23 = 2050;
        uint64_t v24 = v15;
        int v14 = "{msg%{public}.0s:not ready to upload: no locations, subHarvester:%{public, location:CLSubHarve"
              "sterIdentifier}lld}";
        goto LABEL_32;
      }
    }
  }

  else
  {
    if (qword_1019349B0 != -1) {
      dispatch_once(&qword_1019349B0, &stru_101864DD8);
    }
    uint64_t v12 = (os_log_s *)qword_1019349B8;
    BOOL result = os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEBUG);
    if (result)
    {
      uint64_t v13 = *(unsigned int *)(a1 + 16);
      *(_DWORD *)int buf = 68289282;
      *(_DWORD *)uint64_t v22 = 0;
      *(_WORD *)&void v22[4] = 2082;
      *(void *)&v22[6] = "";
      __int16 v23 = 2050;
      uint64_t v24 = v13;
      int v14 = "{msg%{public}.0s:not ready to upload: turned off, subHarvester:%{public, location:CLSubHarvesterIdentifier}lld}";
LABEL_32:
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, v14, buf, 0x1Cu);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1009B021C(uint64_t a1)
{
  uint64_t result = sub_1009AFE54(a1);
  if ((_DWORD)result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 128LL))(a1);
    if ((_DWORD)result)
    {
      if (qword_1019349B0 != -1) {
        dispatch_once(&qword_1019349B0, &stru_101864DD8);
      }
      int v3 = (os_log_s *)qword_1019349B8;
      if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_INFO))
      {
        uint64_t v4 = *(unsigned int *)(a1 + 16);
        uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160LL))(a1);
        v8[0] = 68289795;
        v8[1] = 0;
        __int16 v9 = 2082;
        int v10 = "";
        __int16 v11 = 2049;
        uint64_t v12 = v4;
        __int16 v13 = 2049;
        uint64_t v14 = v5;
        __int16 v15 = 2049;
        double v16 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Harvest-Upload, subHarvester:%{private, location:CLSubHarvesterIdentifier}lld,  numPoints:%{private}lu, secondsSinceLastUpload:%{private}f}",  (uint8_t *)v8,  0x30u);
      }

      (*(void (**)(uint64_t))(*(void *)a1 + 136LL))(a1);
      double v7 = (*(double (**)(void))(**(void **)(a1 + 56) + 64LL))(*(void *)(a1 + 56));
      return sub_1009AFD38(a1, v7);
    }
  }

  return result;
}

void sub_1009B038C(uint64_t a1)
{
  if (sub_1009AFE54(a1)) {
    int v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 128LL))(a1);
  }
  else {
    int v2 = 0;
  }
  int v3 = *(unsigned __int8 *)(a1 + 344);
  if ((v2 & 1) != 0 || *(_BYTE *)(a1 + 344))
  {
    (*(void (**)(void))(**(void **)(a1 + 56) + 64LL))(*(void *)(a1 + 56));
    uint64_t v5 = 224LL;
    if (!v3) {
      uint64_t v5 = 232LL;
    }
    *(double *)(a1 + v5) = v4 - *(double *)(a1 + 336) + *(double *)(a1 + v5);
    *(double *)(a1 + 336) = v4;
    double v6 = (*(double (**)(void))(**(void **)(a1 + 56) + 64LL))(*(void *)(a1 + 56));
    __int128 v25 = *(_OWORD *)(a1 + 104);
    uint64_t v26 = *(void *)(a1 + 120);
    sub_100E31D9C(a1 + 280, (uint64_t)&v25);
    double v8 = v7;
    if (qword_1019349B0 != -1) {
      dispatch_once(&qword_1019349B0, &stru_101864DD8);
    }
    __int16 v9 = (os_log_s *)qword_1019349B8;
    if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = *(unsigned int *)(a1 + 16);
      double v11 = *(double *)(a1 + 96);
      double v12 = *(double *)(a1 + 328);
      *(_DWORD *)int buf = 68290307;
      int v28 = 0;
      __int16 v29 = 2082;
      uint64_t v30 = "";
      __int16 v31 = 2050;
      uint64_t v32 = v10;
      __int16 v33 = 2049;
      double v34 = v11;
      __int16 v35 = 2049;
      double v36 = v12;
      __int16 v37 = 2049;
      double v38 = v6 - v11;
      __int16 v39 = 2049;
      double v40 = v12 - v6;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#uploadTimer ATU, subHarvester:%{public, location:CLSubHarvesterIdentifier}lld, f LastUploadTime_s:%{private}.09f, fNextUploadTime_s:%{private}.09f, sinceLU_s:%{private}.09f , tillNU_s:%{private}.09f}",  buf,  0x44u);
    }

    if (!v2)
    {
      double v6 = 1.79769313e308;
LABEL_32:
      *(_BYTE *)(a1 + 344) = v2;
      *(double *)(a1 + 32_Block_object_dispose((const void *)(v1 - 224), 8) = v6;
      (*(void (**)(void, void, double))(**(void **)(a1 + 56) + 56LL))( *(void *)(a1 + 56),  *(unsigned int *)(a1 + 16),  v6);
      return;
    }

    double v13 = *(double *)(a1 + 328);
    double v14 = v8 + *(double *)(a1 + 96);
    if (v13 <= v6 || v13 >= v14)
    {
      if (v14 >= v6)
      {
        if (qword_1019349B0 != -1) {
          dispatch_once(&qword_1019349B0, &stru_101864DD8);
        }
        uint64_t v22 = (os_log_s *)qword_1019349B8;
        if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_INFO))
        {
          uint64_t v23 = *(unsigned int *)(a1 + 16);
          double v24 = *(double *)(a1 + 96);
          *(_DWORD *)int buf = 68289795;
          int v28 = 0;
          __int16 v29 = 2082;
          uint64_t v30 = "";
          __int16 v31 = 2050;
          uint64_t v32 = v23;
          __int16 v33 = 2049;
          double v34 = v24;
          __int16 v35 = 2049;
          double v36 = v8;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:#uploadTimer option B, subHarvester:%{public, location:CLSubHarvesterIdentifier }lld, fLastUploadTime:%{private}f, interval:%{private}f}",  buf,  0x30u);
        }

        double v6 = v8 + *(double *)(a1 + 96);
      }

      else
      {
        if (qword_1019349B0 != -1) {
          dispatch_once(&qword_1019349B0, &stru_101864DD8);
        }
        double v16 = (os_log_s *)qword_1019349B8;
        if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_INFO))
        {
          uint64_t v17 = *(unsigned int *)(a1 + 16);
          double v18 = *(double *)(a1 + 96);
          *(_DWORD *)int buf = 68289795;
          int v28 = 0;
          __int16 v29 = 2082;
          uint64_t v30 = "";
          __int16 v31 = 2050;
          uint64_t v32 = v17;
          __int16 v33 = 2049;
          double v34 = v18;
          __int16 v35 = 2049;
          double v36 = v8;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:#uploadTimer option C, subHarvester:%{public, location:CLSubHarvesterIdentifier }lld, fLastUploadTime:%{private}f, interval:%{private}f}",  buf,  0x30u);
        }
      }

      goto LABEL_32;
    }

    if (qword_1019349B0 != -1) {
      dispatch_once(&qword_1019349B0, &stru_101864DD8);
    }
    __int128 v19 = (os_log_s *)qword_1019349B8;
    if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_INFO))
    {
      uint64_t v20 = *(unsigned int *)(a1 + 16);
      double v21 = *(double *)(a1 + 96);
      *(_DWORD *)int buf = 68289795;
      int v28 = 0;
      __int16 v29 = 2082;
      uint64_t v30 = "";
      __int16 v31 = 2050;
      uint64_t v32 = v20;
      __int16 v33 = 2049;
      double v34 = v21;
      __int16 v35 = 2049;
      double v36 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:#uploadTimer option A, subHarvester:%{public, location:CLSubHarvesterIdentifier}lld , fLastUploadTime:%{private}f, interval:%{private}f}",  buf,  0x30u);
    }
  }

void sub_1009B07B0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 88)) {
    return;
  }
  if (*(_BYTE *)(a1 + 280))
  {
    if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 112LL))(a1) & 1) != 0)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 144LL))(a1))
      {
        (*(void (**)(void, void, void))(**(void **)(a1 + 56) + 24LL))( *(void *)(a1 + 56),  *(unsigned int *)(a1 + 16),  0LL);
        *(_BYTE *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
        if (qword_1019349B0 != -1) {
          dispatch_once(&qword_1019349B0, &stru_101864DD8);
        }
        int v2 = (os_log_s *)qword_1019349B8;
        if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v3 = *(unsigned int *)(a1 + 16);
          int v9 = 68289283;
          int v10 = 0;
          __int16 v11 = 2082;
          double v12 = "";
          __int16 v13 = 2049;
          uint64_t v14 = v3;
          _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:harvesting enabled, subHarvester:%{private, location:CLSubHarvesterIdentifier}lld}",  (uint8_t *)&v9,  0x1Cu);
        }

        uint64_t v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 40) + 24LL))(*(void *)(a1 + 40));
        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 104LL))(a1, v4);
        sub_1009B038C(a1);
      }

      return;
    }

    if (qword_1019349B0 != -1) {
      dispatch_once(&qword_1019349B0, &stru_101864DD8);
    }
    uint64_t v5 = (os_log_s *)qword_1019349B8;
    if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = *(unsigned int *)(a1 + 16);
      int v9 = 68289283;
      int v10 = 0;
      __int16 v11 = 2082;
      double v12 = "";
      __int16 v13 = 2049;
      uint64_t v14 = v8;
      double v7 = "{msg%{public}.0s:cannot be enabled: not supported, subHarvester:%{private, location:CLSubHarveste"
           "rIdentifier}lld}";
      goto LABEL_19;
    }
  }

  else
  {
    if (qword_1019349B0 != -1) {
      dispatch_once(&qword_1019349B0, &stru_101864DD8);
    }
    uint64_t v5 = (os_log_s *)qword_1019349B8;
    if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(unsigned int *)(a1 + 16);
      int v9 = 68289283;
      int v10 = 0;
      __int16 v11 = 2082;
      double v12 = "";
      __int16 v13 = 2049;
      uint64_t v14 = v6;
      double v7 = "{msg%{public}.0s:cannot be enabled: disabled by harvest rule, subHarvester:%{private, location:CL"
           "SubHarvesterIdentifier}lld}";
LABEL_19:
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, v7, (uint8_t *)&v9, 0x1Cu);
    }
  }

void sub_1009B0A44(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)a1 + 152LL))(a1);
    *(_BYTE *)(a1 + 8_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
    (*(void (**)(void, void, void))(**(void **)(a1 + 56) + 32LL))( *(void *)(a1 + 56),  *(unsigned int *)(a1 + 16),  0LL);
    if (qword_1019349B0 != -1) {
      dispatch_once(&qword_1019349B0, &stru_101864DD8);
    }
    int v2 = (os_log_s *)qword_1019349B8;
    if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(unsigned int *)(a1 + 16);
      v4[0] = 68289283;
      v4[1] = 0;
      __int16 v5 = 2082;
      uint64_t v6 = "";
      __int16 v7 = 2049;
      uint64_t v8 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:harvesting disabled, subHarvester:%{private, location:CLSubHarvesterIdentifier}lld}",  (uint8_t *)v4,  0x1Cu);
    }

    sub_1009B038C(a1);
  }

void sub_1009B0B64(unsigned int *a1)
{
  uint64_t v2 = (*(uint64_t (**)(unsigned int *))(*(void *)a1 + 160LL))(a1);
  (*(void (**)(unsigned int *))(*(void *)a1 + 168LL))(a1);
  uint64_t v3 = (*(uint64_t (**)(unsigned int *))(*(void *)a1 + 160LL))(a1);
  if (qword_1019349B0 != -1) {
    dispatch_once(&qword_1019349B0, &stru_101864DD8);
  }
  uint64_t v4 = v2 - v3;
  __int16 v5 = (os_log_s *)qword_1019349B8;
  if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_INFO))
  {
    uint64_t v6 = a1[4];
    v7[0] = 68289539;
    v7[1] = 0;
    __int16 v8 = 2082;
    int v9 = "";
    __int16 v10 = 2049;
    uint64_t v11 = v6;
    __int16 v12 = 2049;
    uint64_t v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:pruned harvest points, subHarvester:%{private, location:CLSubHarvesterIdentifier}lld, prunedPointsCount:%{private}lu}",  (uint8_t *)v7,  0x26u);
  }

  a1[53] += v4;
  sub_1009B038C((uint64_t)a1);
}

void sub_1009B0CA8(unsigned int *a1)
{
  uint64_t v2 = (*(uint64_t (**)(unsigned int *))(*(void *)a1 + 160LL))(a1);
  (*(void (**)(unsigned int *))(*(void *)a1 + 176LL))(a1);
  if (qword_1019349B0 != -1) {
    dispatch_once(&qword_1019349B0, &stru_101864DD8);
  }
  uint64_t v3 = (os_log_s *)qword_1019349B8;
  if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = a1[4];
    v5[0] = 68289539;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    __int16 v8 = 2049;
    uint64_t v9 = v4;
    __int16 v10 = 2049;
    uint64_t v11 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:cleared harvest points, subHarvester:%{private, location:CLSubHarvesterIdentifier}lld , clearedPointsCount:%{private}lu}",  (uint8_t *)v5,  0x26u);
  }

  a1[54] += v2;
  sub_1009B038C((uint64_t)a1);
}

void sub_1009B0DD4(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 344);
  (*(void (**)(void))(**(void **)(a1 + 56) + 64LL))(*(void *)(a1 + 56));
  uint64_t v4 = 224LL;
  if (!v2) {
    uint64_t v4 = 232LL;
  }
  *(double *)(a1 + v4) = v3 - *(double *)(a1 + 336) + *(double *)(a1 + v4);
  *(double *)(a1 + 336) = v3;
  *(double *)(a1 + 144) = (*(double (**)(void))(**(void **)(a1 + 56) + 64LL))(*(void *)(a1 + 56));
  (*(void (**)(uint64_t))(*(void *)a1 + 192LL))(a1);
  if (qword_1019349B0 != -1) {
    dispatch_once(&qword_1019349B0, &stru_101864DD8);
  }
  __int16 v5 = (os_log_s *)qword_1019349B8;
  if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEFAULT))
  {
    sub_10083CBD8(*(_DWORD *)(a1 + 200));
    __int16 v6 = v26 >= 0 ? __p : (void **)__p[0];
    int v7 = *(_DWORD *)(a1 + 204);
    int v8 = *(_DWORD *)(a1 + 208);
    int v9 = *(_DWORD *)(a1 + 212);
    int v10 = *(_DWORD *)(a1 + 216);
    uint64_t v11 = *(void *)(a1 + 224);
    uint64_t v12 = *(void *)(a1 + 232);
    *(_DWORD *)int buf = 68290819;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&_BYTE buf[18] = 2081;
    *(void *)&_BYTE buf[20] = v6;
    *(_WORD *)&_BYTE buf[28] = 1025;
    *(_DWORD *)&buf[30] = v7;
    *(_WORD *)&_BYTE buf[34] = 1025;
    *(_DWORD *)&_BYTE buf[36] = v8;
    *(_WORD *)int v28 = 1025;
    *(_DWORD *)&v28[2] = v9;
    *(_WORD *)&void v28[6] = 1025;
    *(_DWORD *)&v28[8] = v10;
    *(_WORD *)&v28[12] = 2049;
    *(void *)&_OWORD v28[14] = v11;
    *(_WORD *)&v28[22] = 2049;
    *(void *)&__int128 v29 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:SubHarvesterMetrics, subHarvesterIdentifier:%{private, location:escape_only}s, poin tsReceived:%{private}d, pointsSaved:%{private}d, pointsPruned:%{private}d, pointsCleared:%{private}d , durationUploadCapable:%{private}f, durationUploadIncapable:%{private}f}",  buf,  0x48u);
    if (v26 < 0) {
      operator delete(__p[0]);
    }
  }

  uint64_t v13 = *(unsigned __int8 **)(a1 + 240);
  for (uint64_t i = *(unsigned __int8 **)(a1 + 248); v13 != i; v13 += 12)
  {
    if (qword_1019349B0 != -1) {
      dispatch_once(&qword_1019349B0, &stru_101864DD8);
    }
    __int16 v15 = (os_log_s *)qword_1019349B8;
    if (os_log_type_enabled((os_log_t)qword_1019349B8, OS_LOG_TYPE_DEFAULT))
    {
      sub_10083CBD8(*(_DWORD *)(a1 + 200));
      double v16 = __p;
      if (v26 < 0) {
        double v16 = (void **)__p[0];
      }
      int v17 = *v13;
      int v18 = *((_DWORD *)v13 + 1);
      int v19 = *((_DWORD *)v13 + 2);
      *(_DWORD *)int buf = 68290051;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2081;
      *(void *)&_BYTE buf[20] = v16;
      *(_WORD *)&_BYTE buf[28] = 1025;
      *(_DWORD *)&buf[30] = v17;
      *(_WORD *)&_BYTE buf[34] = 1025;
      *(_DWORD *)&_BYTE buf[36] = v18;
      *(_WORD *)int v28 = 1025;
      *(_DWORD *)&v28[2] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:SubHarvesterUploadAttempt, subHarvesterIdentifier:%{private, location:escape_only}s , uploadSucceeded:%{private}d, errorCode:%{private}d, pointsAttached:%{private}d}",  buf,  0x2Eu);
      if (v26 < 0) {
        operator delete(__p[0]);
      }
    }
  }

  sub_1009AFC0C(a1, (uint64_t)buf);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)buf;
  uint64_t v20 = (void **)(a1 + 152);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)&buf[16];
  *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 224), 8) = *(void *)&buf[32];
  buf[39] = 0;
  uint8_t buf[16] = 0;
  double v21 = (void **)(a1 + 176);
  *(_OWORD *)double v21 = *(_OWORD *)v28;
  __int128 v22 = v30;
  *(_OWORD *)(a1 + 20sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v29;
  *(void *)(a1 + 192) = *(void *)&v28[16];
  v28[23] = 0;
  v28[0] = 0;
  *(_OWORD *)(a1 + 216) = v22;
  *(void *)(a1 + 232) = v31;
  uint64_t v23 = *(void **)(a1 + 240);
  if (v23)
  {
    *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = v23;
    operator delete(v23);
    int v24 = v28[23];
    *(_OWORD *)(a1 + 24sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v32;
    *(void *)(a1 + 256) = v33;
    uint64_t v33 = 0LL;
    __int128 v32 = 0uLL;
    if (v24 < 0) {
      operator delete(*(void **)v28);
    }
  }

  else
  {
    *(_OWORD *)(a1 + 24sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v32;
    *(void *)(a1 + 256) = v33;
    uint64_t v33 = 0LL;
    __int128 v32 = 0uLL;
  }

  if ((buf[39] & 0x80000000) != 0) {
    operator delete(*(void **)&buf[16]);
  }
}

void sub_1009B11B0(id a1)
{
  qword_1019349B8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Harvester");
}

void *sub_1009B11DC(void *a1, int a2)
{
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  *a1 = off_101864E08;
  a1[9] = off_101864EC0;
  sub_100B14CF0(a1 + 47, 0LL, 0LL);
  (*(void (**)(void *))(*a1 + 112LL))(a1);
  return a1;
}

void sub_1009B127C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009B12A8(uint64_t a1, char *a2, int a3, uint64_t a4, int a5, float a6)
{
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + _Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  uint64_t v12 = (void *)(a1 + 8);
  *(void *)a1 = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 8));
  void *v12 = &off_101826EF8;
  *(void *)a1 = off_1018650C0;
  *(void *)(a1 + 72) = off_101865168;
  sub_100D8A584(a1 + 72, a2, a3, a1, a6, a4, a5, 0LL);
  *(void *)a1 = off_1018650C0;
  *(void *)(a1 + 72) = off_101865168;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 24_Block_object_dispose((const void *)(v1 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 28sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_DWORD *)(a1 + 296) = 12000;
  *(void *)(a1 + 304) = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 312));
  *(void *)(a1 + 312) = &off_101826EF8;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v29 = a1 + 112;
  (*(void (**)(void))(v13 + 16))();
  __int16 v31 = 256;
  if (a3)
  {
    *(void *)(a1 + 232) = 0xBFF0000000000000LL;
LABEL_3:
    (*(void (**)(uint64_t))(*(void *)v29 + 24LL))(v29);
    return a1;
  }

  if (*(char *)(a4 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a4, *(void *)(a4 + 8));
  }

  else
  {
    *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)a4;
    uint64_t v28 = *(void *)(a4 + 16);
  }

  sub_100D8AF38(a1 + 72, (uint64_t)__p);
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v14 = sub_1006E27E8();
  sub_100413284(v14, buf);
  __int16 v15 = (int *)(a1 + 296);
  char v16 = sub_1002A7CB0(*(uint64_t *)buf, "ActivityInMemoryBufferSize", (_DWORD *)(a1 + 296));
  int v17 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }

  if ((v16 & 1) == 0) {
    *__int16 v15 = 12000;
  }
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_1018651A8);
  }
  uint64_t v20 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    int v21 = *v15;
    *(_DWORD *)int buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v21;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Buffer size: %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018651A8);
    }
    int v24 = *v15;
    v32[0] = 67109120;
    v32[1] = v24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Buffer size: %d",  v32);
    char v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLActivityRecorderDb<CLCyclingDeviceDbRow, CLActivityDB::ClassBDataProtectionPolicy>::CLActivityRecorderDb(const c har *, BOOL, float, const std::string &, const CLSqliteDatabase::SqlitePropertyPersistence) [T = CLCyclingDeviceDb Row, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  int v22 = HIBYTE(v31);
  *(void *)(a1 + 232) = 0xBFF0000000000000LL;
  if (v22)
  {
    if ((_BYTE)v31)
    {
      pthread_mutex_unlock(v30);
      return a1;
    }

    goto LABEL_3;
  }

  return a1;
}

void sub_1009B1660( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  v24[38] = off_101826EC8;
  sub_1001B9C98(v28);
  sub_1009B19F8(v27);
  sub_1009B3F6C(v26);
  sub_100D8A88C(a12);
  *int v24 = off_101826EC8;
  sub_1001B9C98(v25);
  _Unwind_Resume(a1);
}

void sub_1009B170C()
{
}

uint64_t sub_1009B1714(uint64_t a1)
{
  *(void *)(a1 + 72) = off_101865168;
  uint64_t v2 = a1 + 72;
  *(void *)a1 = off_1018650C0;
  *(void *)(a1 + 304) = off_101826EC8;
  sub_1001B9C98((void *)(a1 + 312));
  sub_1009B3F6C((void *)(a1 + 176));
  sub_100D8A88C(v2);
  *(void *)a1 = off_101826EC8;
  sub_1001B9C98((void *)(a1 + 8));
  return a1;
}

uint64_t sub_1009B17B8(uint64_t a1)
{
  return sub_1009B1714(a1 - 72);
}

void sub_1009B17C0(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009B1714(a1);
  operator delete(v1);
}

void sub_1009B17D4(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009B1714(a1 - 72);
  operator delete(v1);
}

uint64_t sub_1009B17EC()
{
  return -1LL;
}

uint64_t sub_1009B1804()
{
  return -1LL;
}

uint64_t sub_1009B181C(uint64_t a1)
{
  uint64_t v4 = a1 + 112;
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v5 = a1 + 72;
  v11[1] = a1 + 112;
  (*(void (**)(uint64_t))(v3 + 16))(a1 + 112);
  __int16 v12 = 256;
  sub_1003C0D54(*(void *)(a1 + 80), "SELECT COUNT(*) FROM CLCyclingDevice", v11);
  uint64_t v6 = v11[0];
  int v7 = (sqlite3_stmt *)sub_100019240(v11[0]);
  int v8 = sqlite3_step(v7);
  if (v8 == 100)
  {
    int v9 = (sqlite3_stmt *)sub_100019240(v6);
    uint64_t v1 = sqlite3_column_int(v9, 0);
  }

  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  if (v8 != 100) {
LABEL_7:
  }
    uint64_t v1 = 0xFFFFFFFFLL;
  (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  return v1;
}

void sub_1009B18F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  sub_1011C52D0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1009B192C(uint64_t a1)
{
  return sub_1009B181C(a1 - 72);
}

uint64_t sub_1009B1934(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (sqlite3_stmt *)sub_100019240(*a1);
  int v5 = sqlite3_step(v4);
  if (v5 == 101) {
    return 1LL;
  }
  if (v5 != 100) {
    return 2LL;
  }
  uint64_t v6 = (sqlite3_stmt *)sub_100019240(*a1);
  *(void *)a2 = sqlite3_column_int64(v6, 0);
  int v7 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + _Block_object_dispose((const void *)(v1 - 224), 8) = sqlite3_column_double(v7, 1);
  int v8 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_DWORD *)(a2 + 16) = sqlite3_column_int(v8, 2);
  int v9 = (sqlite3_stmt *)sub_100019240(*a1);
  int v10 = sqlite3_column_text(v9, 3);
  std::string::assign((std::string *)(a2 + 24), (const std::string::value_type *)v10);
  uint64_t v11 = (sqlite3_stmt *)sub_100019240(*a1);
  __int16 v12 = sqlite3_column_text(v11, 4);
  std::string::assign((std::string *)(a2 + 48), (const std::string::value_type *)v12);
  return 0LL;
}

uint64_t sub_1009B19F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1009B1A38(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  v17[1] = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v18 = 256;
  if (sub_100D8A92C(v6))
  {
    uint64_t v8 = *a2;
    uint64_t v7 = a2[1];
    if (v7 != *a2)
    {
      do
      {
        v7 -= 72LL;
        sub_1009B40A8((uint64_t)(a2 + 2), v7);
      }

      while (v7 != v8);
    }

    a2[1] = v8;
    sub_1003C0D54(*(void *)(a1 + 80), "SELECT * from CLCyclingDevice ORDER BY start_time ASC", &v13);
    uint64_t v9 = v13;
    v17[0] = v13;
    sub_1003C0454(*(void *)(a1 + 80));
    *(_OWORD *)std::stringbuf::string_type __p = 0u;
    __int128 v16 = 0u;
    *(_OWORD *)uint64_t v14 = 0u;
    while (!sub_1009B1934(v17, (uint64_t)&v13))
    {
      unint64_t v10 = a2[1];
      if (v10 >= a2[2])
      {
        uint64_t v11 = sub_1009B41C8(a2, &v13);
      }

      else
      {
        sub_1009B4118((uint64_t)(a2 + 2), a2[1], &v13);
        uint64_t v11 = v10 + 72;
        a2[1] = v10 + 72;
      }

      a2[1] = v11;
    }

    sub_1003C05BC(*(void *)(a1 + 80));
    if (SHIBYTE(v16) < 0) {
      operator delete(__p[1]);
    }
    if (SHIBYTE(__p[0]) < 0) {
      operator delete(v14[0]);
    }
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
}

void sub_1009B1B98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  sub_1011C52D0(v3 - 72);
  _Unwind_Resume(a1);
}

uint64_t sub_1009B1BF0(uint64_t *a1)
{
  uint64_t result = sub_1003C1048(a1[10]);
  if ((_DWORD)result)
  {
    sub_1003B59A0( a1[10],  "CLCyclingDevice",  (const char **)&off_101864F50,  (const std::string::value_type **)&off_10198E918,  0);
    uint64_t result = sub_1003BF158(a1[10], "DELETE FROM CLCyclingDevice WHERE power_meter_id < 0");
    a1[47] = result;
    a1[48] = v3;
  }

  return result;
}

uint64_t sub_1009B1C50(uint64_t a1)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_1003C0D54(*(void *)(a1 + 80), "DELETE FROM CLCyclingDevice", &v8);
    uint64_t v3 = v8;
    uint64_t v4 = *(void *)(a1 + 80);
    uint64_t v5 = (sqlite3_stmt *)sub_100019240(v8);
    sub_1003BB2BC(v4, v5);
    uint64_t v6 = *(void *)(a1 + 80);
    else {
      uint64_t v7 = *(void *)(v6 + 88);
    }
    uint64_t result = sub_1003C1EC0(v6, v7);
    if (v3) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
  }

  return result;
}

void sub_1009B1CE4(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009B1D04(uint64_t a1)
{
  return sub_1009B1C50(a1 - 72);
}

void sub_1009B1D14(uint64_t a1, uint64_t a2)
{
  if ((sub_100D8A92C(a1 + 72) & 1) != 0)
  {
    sub_1003C0D54( *(void *)(a1 + 80),  "INSERT INTO CLCyclingDevice (start_time, power_meter_id, manufacturer, serial_number) VALUES (?, ?, ?, ?)",  buf);
    uint64_t v4 = *(void *)buf;
    uint64_t v5 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)buf);
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v4);
    if (!sub_1003C28BC(v6, 2, *(_DWORD *)(a2 + 16))) {
      goto LABEL_13;
    }
    uint64_t v7 = (sqlite3_stmt *)sub_100019240(v4);
    uint64_t v8 = *(char *)(a2 + 47) >= 0 ? (char *)(a2 + 24) : *(char **)(a2 + 24);
    if (!sub_1003BC1F0(v7, 3, v8)
      || ((uint64_t v9 = (sqlite3_stmt *)sub_100019240(v4),
           __int16 v12 = *(char **)(a2 + 48),
           uint64_t v11 = (char *)(a2 + 48),
           unint64_t v10 = v12,
           v11[23] >= 0)
        ? (__int128 v13 = v11)
        : (__int128 v13 = v10),
          !sub_1003BC1F0(v9, 4, v13)
       || (uint64_t v14 = *(void *)(a1 + 80), v15 = (sqlite3_stmt *)sub_100019240(v4), !sub_1003BB2BC(v14, v15))))
    {
LABEL_13:
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_101865090);
      }
      __int128 v16 = (os_log_s *)qword_1019344D8;
      if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_FAULT,  "CLCyclingDevice, unable to insert record.",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344D0 != -1) {
          dispatch_once(&qword_1019344D0, &stru_101865090);
        }
        LOWORD(v36) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  17LL,  "CLCyclingDevice, unable to insert record.",  &v36,  2);
        __int16 v35 = (char *)v34;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLCyclingDeviceDb::insertRecordUL(const CLCyclingDeviceDbRow &, BOOL)",  "%s\n",  v34);
        if (v35 != buf) {
          free(v35);
        }
      }
    }

    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
  }

  else
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_101865070);
    }
    int v17 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v18 = *(void *)(a2 + 24);
      uint64_t v19 = *(void *)(a2 + 8);
      int v20 = *(_DWORD *)(a2 + 16);
      uint64_t v21 = a2 + 48;
      *(_DWORD *)int buf = 134349826;
      *(void *)&uint8_t buf[4] = v19;
      __int16 v45 = 1026;
      int v46 = v20;
      __int16 v47 = 2082;
      uint64_t v48 = v18;
      __int16 v49 = 2082;
      uint64_t v50 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "CLCyclingDeviceDb, database isn't available for entry with startTime, %{public}f, power meter id, %{public}d, ma nufacturer, %{public}s, serial number, %{public}s",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_101865070);
      }
      uint64_t v24 = *(void *)(a2 + 24);
      uint64_t v23 = a2 + 24;
      uint64_t v22 = v24;
      uint64_t v25 = *(void *)(v23 - 16);
      int v26 = *(_DWORD *)(v23 - 8);
      int v27 = *(char *)(v23 + 47);
      uint64_t v30 = *(void *)(v23 + 24);
      uint64_t v29 = v23 + 24;
      uint64_t v28 = v30;
      if (v27 >= 0) {
        uint64_t v31 = v29;
      }
      else {
        uint64_t v31 = v28;
      }
      int v36 = 134349826;
      uint64_t v37 = v25;
      __int16 v38 = 1026;
      int v39 = v26;
      __int16 v40 = 2082;
      uint64_t v41 = v22;
      __int16 v42 = 2082;
      uint64_t v43 = v31;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  16LL,  "CLCyclingDeviceDb, database isn't available for entry with startTime, %{public}f, power meter id, %{public}d, ma nufacturer, %{public}s, serial number, %{public}s",  &v36,  38);
      uint64_t v33 = (char *)v32;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLCyclingDeviceDb::insertRecordUL(const CLCyclingDeviceDbRow &, BOOL)",  "%s\n",  v32);
      if (v33 != buf) {
        free(v33);
      }
    }
  }

void sub_1009B2158(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009B2184(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a1 + 120LL))(a1, a2, 0LL);
}

uint64_t sub_1009B2194()
{
  return 0LL;
}

uint64_t sub_1009B219C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v7;
  uint64_t v8 = v7;
  uint64_t v5 = sub_1009B1934(&v8, a2);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return v5;
}

void sub_1009B221C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009B223C(void *a1, uint64_t *a2, double a3, double a4)
{
  unint64_t v10 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v30);
  if ((SHIBYTE(v31) & 0x80000000) == 0)
  {
    if (HIBYTE(v31)) {
      goto LABEL_3;
    }
LABEL_27:
    sub_1012567E8(v10);
    goto LABEL_28;
  }

  uint64_t v4 = (std::stringbuf *)v30[1];
  operator delete(v30[0]);
  if (!v4) {
    goto LABEL_27;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v30);
  uint64_t v11 = sub_10000CF44(&v31, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v14 = sub_10000CF44(v11, (uint64_t)p_p, size);
  sub_10000CF44(v14, (uint64_t)" WHERE startTime > ? and startTime <= ? ORDER BY rowid ASC", 58LL);
  uint64_t v15 = a1[10];
  uint64_t v4 = &v32;
  std::stringbuf::str(&__p, &v32);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    __int128 v16 = &__p;
  }
  else {
    __int128 v16 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v15, (char *)v16, &v28);
  uint64_t v5 = v28;
  uint64_t v28 = 0LL;
  uint64_t v29 = v5;
  int v17 = (sqlite3_stmt *)sub_100019240(v5);
  if (sub_1003B7480(v17, 1, a3))
  {
    uint64_t v18 = (sqlite3_stmt *)sub_100019240(v5);
    if (sub_1003B7480(v18, 2, a4))
    {
      __int128 v27 = 0u;
      *(_OWORD *)int v26 = 0u;
      *(_OWORD *)uint64_t v25 = 0u;
      while (1)
      {
        uint64_t v19 = sub_1001BA11C((uint64_t)a1, &v29, (uint64_t)&__p);
        if ((_DWORD)v19) {
          break;
        }
        unint64_t v20 = a2[1];
        if (v20 >= a2[2])
        {
          uint64_t v21 = sub_1009B41C8(a2, (__int128 *)&__p);
        }

        else
        {
          sub_1009B4118((uint64_t)(a2 + 2), a2[1], (__int128 *)&__p);
          uint64_t v21 = v20 + 72;
          a2[1] = v20 + 72;
        }

        a2[1] = v21;
      }

      if (SHIBYTE(v27) < 0) {
        operator delete(v26[1]);
      }
      if (SHIBYTE(v26[0]) < 0) {
        operator delete(v25[0]);
      }
      uint64_t v5 = v29;
      goto LABEL_34;
    }
  }

void sub_1009B24CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a23);
  _Unwind_Resume(a1);
}

uint64_t sub_1009B2544(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v2 = a1 + 112;
  uint64_t v4 = v2 - 40;
  uint64_t v45 = v2;
  (*(void (**)(void))(v3 + 16))();
  if (sub_100D8A92C(v4))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018651A8);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289282;
      *(_DWORD *)__int16 v49 = 0;
      *(_WORD *)&v49[4] = 2082;
      *(void *)&v49[6] = "";
      __int16 v50 = 2082;
      uint64_t v51 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Database is already opened., name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    if (*(void *)(a1 + 216))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018651A8);
      }
      uint64_t v7 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v8 = *(void *)(a1 + 216);
        *(_DWORD *)int buf = 134349056;
        *(void *)__int16 v49 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018651A8);
        }
        uint64_t v40 = *(void *)(a1 + 216);
        int v46 = 134349056;
        uint64_t v47 = v40;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  &v46,  12);
        __int16 v42 = (uint8_t *)v41;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLActivityRecorderDb<CLCyclingDeviceDbRow, CLActivityDB::ClassBDataProtectionPolicy>::setDatabase Accessible() [T = CLCyclingDeviceDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v41);
        if (v42 != buf) {
          free(v42);
        }
      }
    }

    uint64_t v9 = 1LL;
    goto LABEL_70;
  }

  sub_1001BA070(a1);
  uint64_t v9 = sub_100D8A92C(v4);
  if ((_DWORD)v9)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018651A8);
    }
    unint64_t v10 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = (void *)(a1 + 88);
      uint64_t v12 = *(void *)(a1 + 216);
      *(_DWORD *)int buf = 68289539;
      *(_DWORD *)__int16 v49 = 0;
      *(_WORD *)&v49[4] = 2082;
      *(void *)&v49[6] = "";
      __int16 v50 = 2082;
      uint64_t v51 = v11;
      __int16 v52 = 2049;
      uint64_t v53 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Inserting entries into database, name:%{public, location:escape_only}s, size:%{private}llu}",  buf,  0x26u);
    }

    sub_1003C0454(*(void *)(a1 + 80));
    unint64_t v13 = *(void *)(a1 + 208);
    uint64_t v14 = *(void *)(a1 + 184);
    uint64_t v15 = *(void *)(a1 + 192);
    __int128 v16 = (void *)(v14 + 8 * (v13 / 0x38));
    unsigned int v44 = v9;
    if (v15 == v14) {
      unint64_t v17 = 0LL;
    }
    else {
      unint64_t v17 = *v16 + 72 * (v13 % 0x38);
    }
    while (1)
    {
      if (v15 == v14)
      {
        unint64_t v23 = 0LL;
      }

      else
      {
        unint64_t v22 = *(void *)(a1 + 216) + *(void *)(a1 + 208);
        unint64_t v23 = *(void *)(v14 + 8 * (v22 / 0x38)) + 72 * (v22 % 0x38);
      }

      if (v17 == v23) {
        break;
      }
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_1018651C8);
      }
      uint64_t v24 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)int buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "Adding from buffer to db.", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_1018651C8);
        }
        LOWORD(v46) = 0;
        LODWORD(v43) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Adding from buffer to db.",  &v46,  v43);
        __int128 v27 = (uint8_t *)v26;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLActivityRecorderDb<CLCyclingDeviceDbRow, CLActivityDB::ClassBDataProtectionPolicy>::setDatabase Accessible() [T = CLCyclingDeviceDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v26);
        if (v27 != buf) {
          free(v27);
        }
      }

      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)a1 + 80LL))(a1, v17, 1LL);
      v17 += 72LL;
      if (v17 - *v16 == 4032)
      {
        unint64_t v25 = v16[1];
        ++v16;
        unint64_t v17 = v25;
      }

      uint64_t v14 = *(void *)(a1 + 184);
      uint64_t v15 = *(void *)(a1 + 192);
    }

    sub_1003C05BC(*(void *)(a1 + 80));
    uint64_t v9 = v44;
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018651A8);
    }
    uint64_t v18 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
    {
      uint64_t v19 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289282;
      *(_DWORD *)__int16 v49 = 0;
      *(_WORD *)&v49[4] = 2082;
      *(void *)&v49[6] = "";
      __int16 v50 = 2082;
      uint64_t v51 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018651A8);
      }
    }

    unint64_t v20 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      uint64_t v21 = (void *)(a1 + 88);
      *(_DWORD *)int buf = 68289282;
      *(_DWORD *)__int16 v49 = 0;
      *(_WORD *)&v49[4] = 2082;
      *(void *)&v49[6] = "";
      __int16 v50 = 2082;
      uint64_t v51 = v21;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v20,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Unexpected error condition! Device has been unlocked but database remains unreadable!",  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    *(_BYTE *)(a1 + 12_Block_object_dispose((const void *)(v1 - 224), 8) = 1;
  }

  uint64_t v28 = *(void ***)(a1 + 184);
  uint64_t v29 = *(void ***)(a1 + 192);
  if (v29 == v28)
  {
    uint64_t v29 = *(void ***)(a1 + 184);
  }

  else
  {
    unint64_t v30 = *(void *)(a1 + 208);
    uint64_t v31 = &v28[v30 / 0x38];
    uint64_t v32 = (uint64_t)*v31 + 72 * (v30 % 0x38);
    unint64_t v33 = (unint64_t)v28[(*(void *)(a1 + 216) + v30) / 0x38] + 72 * ((*(void *)(a1 + 216) + v30) % 0x38);
    if (v32 != v33)
    {
      do
      {
        sub_1009B40A8(a1 + 216, v32);
        v32 += 72LL;
        if (v32 - (void)*v31 == 4032)
        {
          uint64_t v34 = (uint64_t)v31[1];
          ++v31;
          uint64_t v32 = v34;
        }
      }

      while (v32 != v33);
      uint64_t v28 = *(void ***)(a1 + 184);
      uint64_t v29 = *(void ***)(a1 + 192);
    }
  }

  *(void *)(a1 + 216) = 0LL;
  unint64_t v35 = (char *)v29 - (char *)v28;
  if (v35 >= 0x11)
  {
    do
    {
      operator delete(*v28);
      uint64_t v36 = *(void *)(a1 + 192);
      uint64_t v28 = (void **)(*(void *)(a1 + 184) + 8LL);
      *(void *)(a1 + 184) = v28;
      unint64_t v35 = v36 - (void)v28;
    }

    while (v35 > 0x10);
  }

  if (v35 >> 3 == 1)
  {
    uint64_t v37 = 28LL;
  }

  else
  {
    if (v35 >> 3 != 2) {
      goto LABEL_68;
    }
    uint64_t v37 = 56LL;
  }

  *(void *)(a1 + 20_Block_object_dispose((const void *)(v1 - 224), 8) = v37;
LABEL_68:
  __int16 v38 = *(void **)(a1 + 144);
  if (v38)
  {

    *(void *)(a1 + 144) = 0LL;
  }

void sub_1009B2D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

std::string *sub_1009B2D44(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v5 = *a3;
  *(_DWORD *)(a2 + 16) = *((_DWORD *)a3 + 4);
  *(_OWORD *)a2 = v5;
  std::string::operator=((std::string *)(a2 + 24), (const std::string *)a3 + 1);
  return std::string::operator=((std::string *)(a2 + 48), (const std::string *)a3 + 2);
}

uint64_t sub_1009B2D88(uint64_t a1)
{
  return sub_1009B2544(a1 - 72);
}

void sub_1009B2D90(id a1)
{
  qword_1019347A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CyclingPower");
}

void sub_1009B2DBC(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

uint64_t sub_1009B2DE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v28);
  if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    if (HIBYTE(v29)) {
      goto LABEL_3;
    }
LABEL_36:
    unint64_t v20 = (_Unwind_Exception *)sub_101256954(v4);
    sub_1009B19F8((uint64_t)&__p);
    uint64_t v21 = v27;
    uint64_t v27 = 0LL;
    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
    }
    sub_1011F8850((uint64_t)v28);
    _Unwind_Resume(v20);
  }

  uint64_t v19 = v28[1];
  operator delete(v28[0]);
  if (!v19) {
    goto LABEL_36;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    uint64_t v7 = *a2;
    uint64_t v6 = a2[1];
    if (v6 != *a2)
    {
      do
      {
        v6 -= 72LL;
        sub_1009B40A8((uint64_t)(a2 + 2), v6);
      }

      while (v6 != v7);
    }

    a2[1] = v7;
    sub_10000CE18((uint64_t)v28);
    uint64_t v8 = sub_10000CF44(&v29, (uint64_t)"SELECT * from ", 14LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t *))(*a1 + 64))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v11 = sub_10000CF44(v8, (uint64_t)p_p, size);
    sub_10000CF44(v11, (uint64_t)" ORDER BY id ASC", 16LL);
    uint64_t v12 = a1[10];
    std::stringbuf::str(&__p, &v30);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      unint64_t v13 = &__p;
    }
    else {
      unint64_t v13 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v12, (char *)v13, &v26);
    uint64_t v14 = v26;
    uint64_t v26 = 0LL;
    uint64_t v27 = v14;
    sub_1003C0454(a1[10]);
    __int128 v25 = 0u;
    *(_OWORD *)uint64_t v24 = 0u;
    *(_OWORD *)unint64_t v23 = 0u;
    while (!sub_1001BA11C((uint64_t)a1, &v27, (uint64_t)&__p))
    {
      unint64_t v15 = a2[1];
      if (v15 >= a2[2])
      {
        uint64_t v16 = sub_1009B41C8(a2, (__int128 *)&__p);
      }

      else
      {
        sub_1009B4118((uint64_t)(a2 + 2), a2[1], (__int128 *)&__p);
        uint64_t v16 = v15 + 72;
        a2[1] = v15 + 72;
      }

      a2[1] = v16;
    }

    sub_1003C05BC(a1[10]);
    if (SHIBYTE(v25) < 0) {
      operator delete(v24[1]);
    }
    if (SHIBYTE(v24[0]) < 0) {
      operator delete(v23[0]);
    }
    uint64_t v17 = v27;
    uint64_t v27 = 0LL;
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
    }
    *(void **)((char *)v28
    uint64_t v29 = v18;
    std::streambuf::~streambuf(&v30);
    return std::ios::~ios(&v31);
  }

  return result;
}

id *sub_1009B30D4(uint64_t *a1, __int128 *a2, char a3)
{
  v37[0] = (id)os_transaction_create("CLActivityRecorderDb::sanitizeAndStoreRecordUL");
  v37[1] = 0LL;
  if (*((double *)a1 + 29) <= 0.0
    || !(*(unsigned int (**)(uint64_t *, uint64_t *, __int128 *))(*a1 + 136))(a1, a1 + 28, a2))
  {
    if ((a3 & 1) == 0) {
      sub_1003C0454(a1[10]);
    }
    *(_OWORD *)std::stringbuf::string_type __p = 0u;
    __int128 v36 = 0u;
    *(_OWORD *)uint64_t v34 = 0u;
    int v6 = (*(uint64_t (**)(uint64_t *, char *))(*a1 + 104))(a1, v32);
    if (v6 != 1)
    {
      if (v6)
      {
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018651A8);
        }
        uint64_t v14 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)int buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Failed to insert record due to failure from reading the most recent entry.",  buf,  2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018651A8);
          }
          LOWORD(v3_Block_object_dispose((const void *)(v1 - 224), 8) = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "Failed to insert record due to failure from reading the most recent entry.",  &v38,  2);
          uint64_t v16 = (uint8_t *)v15;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLActivityRecorderDb<CLCyclingDeviceDbRow, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeA ndStoreRecordUL(const T &, BOOL) [T = CLCyclingDeviceDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataP rotectionPolicy]",  "%s\n",  v15);
          if (v16 != buf) {
            free(v16);
          }
        }

void sub_1009B3848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_1009B19F8((uint64_t)va);
  sub_1001BA1BC((id *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_1009B3880(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v23);
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    if (HIBYTE(v24)) {
      goto LABEL_3;
    }
LABEL_29:
    unint64_t v20 = (_Unwind_Exception *)sub_101256AC0(v4);
    sub_1011F8850((uint64_t)v23);
    _Unwind_Resume(v20);
  }

  double v19 = v23[1];
  operator delete(v23[0]);
  if (!v19) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120LL))(a1, a2, 1LL);
    sub_10000CE18((uint64_t)v23);
    int v6 = sub_10000CF44(&v24, (uint64_t)"DELETE FROM ", 12LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" WHERE startTime > ?", 20LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v25);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v21);
    uint64_t v12 = v21;
    uint64_t v21 = 0LL;
    uint64_t v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, *(double *)(a2 + 8)))
    {
      uint64_t v14 = a1[10];
      unint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    uint64_t v16 = a1[10];
    else {
      uint64_t v17 = *(void *)(v16 + 88);
    }
    sub_1003C1EC0(v16, v17);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v23
    uint64_t v24 = v18;
    std::streambuf::~streambuf(&v25);
    return std::ios::~ios(&v26);
  }

  return result;
}

uint64_t sub_1009B3AE0(void *a1, double a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v21);
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22)) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v18 = (_Unwind_Exception *)sub_101256C2C(v4);
    sub_1011F8850((uint64_t)v21);
    _Unwind_Resume(v18);
  }

  uint64_t v17 = v21[1];
  operator delete(v21[0]);
  if (!v17) {
    goto LABEL_26;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v21);
    int v6 = sub_10000CF44(&v22, (uint64_t)"UPDATE ", 7LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" SET startTime = startTime + ?", 30LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v23);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v19);
    uint64_t v12 = v19;
    uint64_t v19 = 0LL;
    uint64_t v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, a2))
    {
      uint64_t v14 = a1[10];
      unint64_t v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v21
    uint64_t v22 = v16;
    std::streambuf::~streambuf(&v23);
    return std::ios::~ios(&v24);
  }

  return result;
}

uint64_t sub_1009B3D18(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v22);
  if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    if (HIBYTE(v23)) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t v17 = (_Unwind_Exception *)sub_101256D98(v4);
    uint64_t v18 = v20;
    uint64_t v20 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
    sub_1011F8850((uint64_t)v22);
    _Unwind_Resume(v17);
  }

  uint64_t v16 = v22[1];
  operator delete(v22[0]);
  if (!v16) {
    goto LABEL_25;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v22);
  uint64_t v5 = sub_10000CF44(&v23, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v8 = sub_10000CF44(v5, (uint64_t)p_p, size);
  sub_10000CF44(v8, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28LL);
  uint64_t v9 = a1[10];
  std::stringbuf::str(&__p, &v24);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = &__p;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v9, (char *)v10, &v19);
  uint64_t v11 = v19;
  uint64_t v19 = 0LL;
  uint64_t v20 = v11;
  uint64_t v12 = sub_1001BA11C((uint64_t)a1, &v20, a2);
  uint64_t v13 = v20;
  uint64_t v20 = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  *(void **)((char *)v22
  uint64_t v23 = v14;
  std::streambuf::~streambuf(&v24);
  std::ios::~ios(&v25);
  return v12;
}

void sub_1009B3F40(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_1009B3F6C(void *a1)
{
  uint64_t v2 = a1 + 5;
  uint64_t v3 = (void **)a1[1];
  uint64_t v4 = (void **)a1[2];
  if (v4 == v3)
  {
    uint64_t v4 = (void **)a1[1];
  }

  else
  {
    unint64_t v5 = a1[4];
    int v6 = &v3[v5 / 0x38];
    uint64_t v7 = (uint64_t)*v6 + 72 * (v5 % 0x38);
    unint64_t v8 = (unint64_t)v3[(a1[5] + v5) / 0x38] + 72 * ((a1[5] + v5) % 0x38);
    if (v7 != v8)
    {
      do
      {
        sub_1009B40A8((uint64_t)v2, v7);
        v7 += 72LL;
        if (v7 - (void)*v6 == 4032)
        {
          uint64_t v9 = (uint64_t)v6[1];
          ++v6;
          uint64_t v7 = v9;
        }
      }

      while (v7 != v8);
      uint64_t v3 = (void **)a1[1];
      uint64_t v4 = (void **)a1[2];
    }
  }

  *uint64_t v2 = 0LL;
  unint64_t v10 = (char *)v4 - (char *)v3;
  if ((unint64_t)((char *)v4 - (char *)v3) >= 0x11)
  {
    do
    {
      operator delete(*v3);
      uint64_t v4 = (void **)a1[2];
      uint64_t v3 = (void **)(a1[1] + 8LL);
      a1[1] = v3;
      unint64_t v10 = (char *)v4 - (char *)v3;
    }

    while ((unint64_t)((char *)v4 - (char *)v3) > 0x10);
  }

  unint64_t v11 = v10 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 28LL;
  }

  else
  {
    if (v11 != 2) {
      goto LABEL_16;
    }
    uint64_t v12 = 56LL;
  }

  a1[4] = v12;
LABEL_16:
  while (v3 != v4)
  {
    uint64_t v13 = *v3++;
    operator delete(v13);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void sub_1009B40A8(uint64_t a1, uint64_t a2)
{
}

void sub_1009B40EC(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

_BYTE *sub_1009B4118(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v5 = *a3;
  *(_DWORD *)(a2 + 16) = *((_DWORD *)a3 + 4);
  *(_OWORD *)a2 = v5;
  int v6 = (_BYTE *)(a2 + 24);
  if (*((char *)a3 + 47) < 0)
  {
    sub_1010DD48C(v6, *((void **)a3 + 3), *((void *)a3 + 4));
  }

  else
  {
    __int128 v7 = *(__int128 *)((char *)a3 + 24);
    *(void *)(a2 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = *((void *)a3 + 5);
    *(_OWORD *)int v6 = v7;
  }

  uint64_t result = (_BYTE *)(a2 + 48);
  __int128 v9 = a3[3];
  *(void *)(a2 + 64) = *((void *)a3 + 8);
  *(_OWORD *)uint64_t result = v9;
  return result;
}

void sub_1009B41AC(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1009B41C8(uint64_t *a1, __int128 *a2)
{
  unint64_t v3 = 0x8E38E38E38E38E39LL * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x38E38E38E38E38ELL) {
    sub_100007008();
  }
  if (0x1C71C71C71C71C72LL * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x1C71C71C71C71C72LL * ((a1[2] - *a1) >> 3);
  }
  if (0x8E38E38E38E38E39LL * ((a1[2] - *a1) >> 3) >= 0x1C71C71C71C71C7LL) {
    unint64_t v6 = 0x38E38E38E38E38ELL;
  }
  else {
    unint64_t v6 = v4;
  }
  uint64_t v14 = a1 + 2;
  if (v6) {
    __int128 v7 = (char *)sub_100046304((uint64_t)(a1 + 2), v6);
  }
  else {
    __int128 v7 = 0LL;
  }
  unint64_t v10 = v7;
  unint64_t v11 = &v7[72 * v3];
  uint64_t v13 = &v7[72 * v6];
  sub_1009B4118((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  uint64_t v12 = v11 + 72;
  sub_1009B42EC(a1, &v10);
  uint64_t v8 = a1[1];
  sub_1009B44A8(&v10);
  return v8;
}

void sub_1009B42D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1009B42EC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1009B4360((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1009B4360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v17 = a6;
  *((void *)&v17 + 1) = a7;
  __int128 v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  int v14[2] = &v17;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      __int128 v10 = *(_OWORD *)(a3 - 72);
      *(_DWORD *)(v9 - 56) = *(_DWORD *)(a3 - 56);
      *(_OWORD *)(v9 - 72) = v10;
      __int128 v11 = *(_OWORD *)(a3 - 48);
      *(void *)(v9 - 32) = *(void *)(a3 - 32);
      *(_OWORD *)(v9 - 4_Block_object_dispose((const void *)(v1 - 224), 8) = v11;
      *(void *)(a3 - 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
      *(void *)(a3 - 32) = 0LL;
      *(void *)(a3 - 4_Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
      __int128 v12 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - _Block_object_dispose((const void *)(v1 - 224), 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v12;
      v9 -= 72LL;
      *(void *)(a3 - 16) = 0LL;
      *(void *)(a3 - _Block_object_dispose((const void *)(v1 - 224), 8) = 0LL;
      *(void *)(a3 - 24) = 0LL;
      v7 -= 72LL;
      a3 -= 72LL;
    }

    while (a3 != a5);
    *((void *)&v17 + 1) = v9;
  }

  char v15 = 1;
  sub_1009B4424((uint64_t)v14);
  return a6;
}

uint64_t sub_1009B4424(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_1009B4458((uint64_t *)a1);
  }
  return a1;
}

void sub_1009B4458(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_1009B40A8(v3, v1);
      v1 += 72LL;
    }

    while (v1 != v2);
  }

void **sub_1009B44A8(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_1009B44D8(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 72;
    sub_1009B40A8(v4, i - 72);
  }

void sub_1009B45C0(id a1)
{
  qword_101999A88 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLDMVisionServiceSilo");
}

void *sub_1009B4700(void *result)
{
  _BYTE *result = &off_101865238;
  return result;
}

void sub_1009B482C(id a1)
{
  if (NSClassFromString(@"RTRoutineManager")
    && -[NSFileManager fileExistsAtPath:]( +[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"),  "fileExistsAtPath:",  +[CLRoutineMonitor bundlePath](&OBJC_CLASS___CLRoutineMonitor, "bundlePath"))
    && (sub_1004F9FF4() & 1) == 0)
  {
    byte_101999AB8 = 1;
  }

void sub_1009B4938(id a1)
{
  qword_101999AC8 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLRoutineMonitorSilo");
}

void sub_1009B49A8(id a1)
{
  uint64_t v1 = +[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager");
  uint64_t v2 = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 0x408uLL, 0);
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id v3 = -[NSArray countByEnumeratingWithState:objects:count:]( v2,  "countByEnumeratingWithState:objects:count:",  &v11,  v19,  16LL);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v12;
    while (2)
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = [*(id *)(*((void *)&v11 + 1) + 8 * (void)i) stringByAppendingPathComponent:@"LocationBundles/Routine.bundle"];
        if (-[NSFileManager fileExistsAtPath:](v1, "fileExistsAtPath:", v7))
        {
          if (qword_1019349A0 != -1) {
            dispatch_once(&qword_1019349A0, &stru_101865440);
          }
          uint64_t v8 = (os_log_s *)qword_1019349A8;
          if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int buf = 138412290;
            id v18 = v7;
            _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "Bundle path for LocationBundles/Routine.bundle found %@",  buf,  0xCu);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019349A0 != -1) {
              dispatch_once(&qword_1019349A0, &stru_101865440);
            }
            int v15 = 138412290;
            id v16 = v7;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349A8,  1LL,  "Bundle path for LocationBundles/Routine.bundle found %@",  &v15,  12);
            __int128 v10 = (uint8_t *)v9;
            sub_10029211C("Generic", 1LL, 0, 2LL, "+[CLRoutineMonitor bundlePath]_block_invoke", "%s\n", v9);
            if (v10 != buf) {
              free(v10);
            }
          }

          qword_101999AD8 = (uint64_t)[v7 copy];
          return;
        }
      }

      id v4 = -[NSArray countByEnumeratingWithState:objects:count:]( v2,  "countByEnumeratingWithState:objects:count:",  &v11,  v19,  16LL);
      if (v4) {
        continue;
      }
      break;
    }
  }

void sub_1009B5330( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Block_object_dispose(&a22, 8);
  _Unwind_Resume(a1);
}

void sub_1009B53CC(uint64_t a1, uint64_t a2)
{
}

void sub_1009B53DC(uint64_t a1)
{
}

id sub_1009B53E8(uint64_t a1)
{
  return _[*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) onWakeRoutinedTimer];
}

void sub_1009B53F8(uint64_t a1, unsigned int *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *a2;
  sub_100246C40((uint64_t)v15, a3);
  [a4 onLocationNotification:v5 data:v15];

  uint64_t v6 = v20;
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  if (v19 < 0) {
    operator delete(__p);
  }
  uint64_t v9 = v17;
  if (v17)
  {
    __int128 v10 = (unint64_t *)&v17->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  __int128 v12 = v16;
  if (v16)
  {
    __int128 v13 = (unint64_t *)&v16->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

void sub_1009B5508(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

id sub_1009B551C(uint64_t a1, unsigned int *a2, uint64_t a3, void *a4)
{
  uint64_t v4 = *a2;
  __int128 v5 = *(_OWORD *)(a3 + 16);
  v7[0] = *(_OWORD *)a3;
  v7[1] = v5;
  _DWORD v7[2] = *(_OWORD *)(a3 + 32);
  uint64_t v8 = *(void *)(a3 + 48);
  return [a4 onVdrNotification:v4 data:v7];
}

void sub_1009B5560(uint64_t a1, unsigned int *a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *a2;
  sub_1011F69B0((char *)v7, (__int128 *)a3);
  uint64_t v21 = *(void *)(a3 + 184);
  [a4 onClientManagerNotification:v6 data:v7];
  if (v20 < 0) {
    operator delete(__p);
  }
  if (v18 < 0) {
    operator delete(v17);
  }
  if (v16 < 0) {
    operator delete(v15);
  }
  if (v14 < 0) {
    operator delete(v13);
  }
  if (v12 < 0) {
    operator delete(v11);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
}

void sub_1009B5628( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

id sub_1009B5808(uint64_t a1, void *a2)
{
  return objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "routineManager"),  "stopMonitoringScenarioTriggerOfType:",  objc_msgSend(a2, "unsignedIntegerValue"));
}

id sub_1009B5A38(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "universe"), "silo");
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _DWORD v7[2] = sub_1009B5AA8;
  _OWORD v7[3] = &unk_10181A328;
  uint64_t v5 = *(void *)(a1 + 32);
  v7[4] = a2;
  void v7[5] = v5;
  return [v4 async:v7];
}

id sub_1009B5AA8(uint64_t a1)
{
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  uint64_t v2 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    id v7 = "";
    __int16 v8 = 2113;
    uint64_t v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:received place inferences for cache, placeInferences:%{private, location:escape_only}@}",  (uint8_t *)v5,  0x1Cu);
  }

  objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "cachedPlaceInferences"), "removeAllObjects");
  return objc_msgSend( objc_msgSend(*(id *)(a1 + 40), "cachedPlaceInferences"),  "addObjectsFromArray:",  *(void *)(a1 + 32));
}

id sub_1009B5E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "universe"), "silo");
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1009B5E9C;
  v8[3] = &unk_10181A2D8;
  _DWORD v8[4] = a2;
  void v8[5] = a3;
  void v8[6] = *(void *)(a1 + 32);
  return [v6 async:v8];
}

void sub_1009B5E9C(uint64_t a1)
{
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  uint64_t v2 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    *(_DWORD *)int buf = 138412546;
    uint64_t v25 = v3;
    __int16 v26 = 2112;
    uint64_t v27 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "#slv received visit from routined, visit, %@, error, %@",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349A0 != -1) {
      dispatch_once(&qword_1019349A0, &stru_101865440);
    }
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    int v20 = 138412546;
    uint64_t v21 = v11;
    __int16 v22 = 2112;
    uint64_t v23 = v12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349A8,  1LL,  "#slv received visit from routined, visit, %@, error, %@",  &v20,  22);
    char v14 = (uint8_t *)v13;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLRoutineMonitor startMonitoringVisitsForClient:]_block_invoke",  "%s\n",  v13);
    if (v14 != buf) {
      free(v14);
    }
  }

  if (!*(void *)(a1 + 40))
  {
    if (*(void *)(a1 + 32))
    {
      uint64_t v5 = -[CLVisit initWithVisit:](objc_alloc(&OBJC_CLASS___CLVisit), "initWithVisit:", *(void *)(a1 + 32));
      __int128 v15 = 0u;
      __int128 v16 = 0u;
      __int128 v17 = 0u;
      __int128 v18 = 0u;
      id v6 = [*(id *)(a1 + 48) visitClients];
      id v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = *(void *)v16;
        do
        {
          for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v16 != v9) {
              objc_enumerationMutation(v6);
            }
            [*(id *)(*((void *)&v15 + 1) + 8 * (void)i) onVisit:v5];
          }

          id v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
        }

        while (v8);
      }
    }
  }

id sub_1009B6520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "universe"), "silo");
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1009B65A0;
  v8[3] = &unk_10181A2D8;
  _DWORD v8[4] = a2;
  void v8[5] = a3;
  void v8[6] = *(void *)(a1 + 32);
  return [v6 async:v8];
}

void sub_1009B65A0(uint64_t a1)
{
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  uint64_t v2 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    *(_DWORD *)int buf = 138412546;
    uint64_t v25 = v3;
    __int16 v26 = 2112;
    uint64_t v27 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "#slv Received leeched visit from routined, visit, %@, error, %@",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349A0 != -1) {
      dispatch_once(&qword_1019349A0, &stru_101865440);
    }
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    int v20 = 138412546;
    uint64_t v21 = v11;
    __int16 v22 = 2112;
    uint64_t v23 = v12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349A8,  1LL,  "#slv Received leeched visit from routined, visit, %@, error, %@",  &v20,  22);
    char v14 = (uint8_t *)v13;
    sub_10029211C("Generic", 1LL, 0, 2LL, "-[CLRoutineMonitor startLeechingVisitsForClient:]_block_invoke", "%s\n", v13);
    if (v14 != buf) {
      free(v14);
    }
  }

  if (!*(void *)(a1 + 40))
  {
    if (*(void *)(a1 + 32))
    {
      uint64_t v5 = -[CLVisit initWithVisit:](objc_alloc(&OBJC_CLASS___CLVisit), "initWithVisit:", *(void *)(a1 + 32));
      __int128 v15 = 0u;
      __int128 v16 = 0u;
      __int128 v17 = 0u;
      __int128 v18 = 0u;
      id v6 = [*(id *)(a1 + 48) leechClients];
      id v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = *(void *)v16;
        do
        {
          for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v16 != v9) {
              objc_enumerationMutation(v6);
            }
            [*(id *)(*((void *)&v15 + 1) + 8 * (void)i) onVisit:v5];
          }

          id v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
        }

        while (v8);
      }
    }
  }

id sub_1009B6BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "universe"), "silo");
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1009B6C6C;
  v8[3] = &unk_10181A2D8;
  _DWORD v8[4] = a2;
  void v8[5] = a3;
  void v8[6] = *(void *)(a1 + 32);
  return [v6 async:v8];
}

void sub_1009B6C6C(uint64_t a1)
{
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  uint64_t v2 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    *(_DWORD *)int buf = 138412546;
    uint64_t v33 = v3;
    __int16 v34 = 2112;
    uint64_t v35 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "#slv Received leeched low confidence visit from routined, visit, %@, error, %@",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349A0 != -1) {
      dispatch_once(&qword_1019349A0, &stru_101865440);
    }
    uint64_t v18 = *(void *)(a1 + 32);
    uint64_t v19 = *(void *)(a1 + 40);
    int v28 = 138412546;
    uint64_t v29 = v18;
    __int16 v30 = 2112;
    uint64_t v31 = v19;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349A8,  1LL,  "#slv Received leeched low confidence visit from routined, visit, %@, error, %@",  &v28,  22);
    uint64_t v21 = (uint8_t *)v20;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLRoutineMonitor startLeechingLowConfidenceVisitsForClient:]_block_invoke",  "%s\n",  v20);
    if (v21 != buf) {
      free(v21);
    }
  }

  uint64_t v5 = *(void **)(a1 + 40);
  if (v5)
  {
    id v6 = [v5 domain];
    if ([v6 isEqualToString:RTErrorDomain]
      && [*(id *)(a1 + 40) code] != (id)1)
    {
      if (qword_1019349A0 != -1) {
        dispatch_once(&qword_1019349A0, &stru_101865440);
      }
      id v7 = (os_log_s *)qword_1019349A8;
      if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v8 = *(void *)(a1 + 40);
        *(_DWORD *)int buf = 138412290;
        uint64_t v33 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "#slv Got unexpceted error from routined, error, %@",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349A0 != -1) {
          dispatch_once(&qword_1019349A0, &stru_101865440);
        }
        uint64_t v9 = *(void *)(a1 + 40);
        int v28 = 138412290;
        uint64_t v29 = v9;
        LODWORD(v22) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349A8,  16LL,  "#slv Got unexpceted error from routined, error, %@",  &v28,  v22);
        uint64_t v11 = (uint8_t *)v10;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CLRoutineMonitor startLeechingLowConfidenceVisitsForClient:]_block_invoke",  "%s\n",  v10);
        if (v11 != buf) {
          free(v11);
        }
      }
    }
  }

  else
  {
    uint64_t v12 = -[CLVisit initWithVisit:](objc_alloc(&OBJC_CLASS___CLVisit), "initWithVisit:", *(void *)(a1 + 32));
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    id v13 = [*(id *)(a1 + 48) lowConfidenceVisitLeechClients];
    id v14 = [v13 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v24;
      do
      {
        for (uint64_t i = 0LL; i != v15; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v24 != v16) {
            objc_enumerationMutation(v13);
          }
          [*(id *)(*((void *)&v23 + 1) + 8 * (void)i) onLowConfidenceVisit:v12];
        }

        id v15 = [v13 countByEnumeratingWithState:&v23 objects:v27 count:16];
      }

      while (v15);
    }
  }

void sub_1009B85E0(id a1)
{
  int v1 = sub_1002A7CB0(v6, "CLTSPBatchSizeInertialDataSent", &v8);
  uint64_t v2 = v8;
  if (!v1) {
    uint64_t v2 = 60LL;
  }
  qword_10198EA48 = v2;
  uint64_t v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      unint64_t v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }

void sub_1009B8670(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

id sub_1009B9584(uint64_t a1)
{
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  uint64_t v2 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Connection interrupted", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349A0 != -1) {
      dispatch_once(&qword_1019349A0, &stru_101865440);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349A8,  1LL,  "Connection interrupted",  v6,  2);
    unint64_t v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLRoutineMonitor listener:shouldAcceptNewConnection:]_block_invoke",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  [*(id *)(a1 + 32) setUpdating:0];
  return [*(id *)(a1 + 32) setConnection:0];
}

id sub_1009B9738(uint64_t a1)
{
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  uint64_t v2 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)int buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Connection invalidated", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349A0 != -1) {
      dispatch_once(&qword_1019349A0, &stru_101865440);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349A8,  1LL,  "Connection invalidated",  v6,  2);
    unint64_t v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLRoutineMonitor listener:shouldAcceptNewConnection:]_block_invoke",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  [*(id *)(a1 + 32) setUpdating:0];
  return [*(id *)(a1 + 32) setConnection:0];
}

uint64_t sub_1009B9E44(uint64_t a1)
{
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  uint64_t v2 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_DEBUG))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    uint64_t v6 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#location #routine sendLocations replied}",  (uint8_t *)v4,  0x12u);
  }

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1009BABA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "universe"), "silo");
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1009BAC24;
  v8[3] = &unk_10183D288;
  _DWORD v8[4] = a2;
  void v8[5] = a3;
  __int128 v9 = *(_OWORD *)(a1 + 32);
  return [v6 async:v8];
}

void sub_1009BAC24(uint64_t a1)
{
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  uint64_t v2 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(a1 + 32) type];
    uint64_t v4 = *(void *)(a1 + 40);
    *(_DWORD *)int buf = 134218242;
    id v33 = v3;
    __int16 v34 = 2112;
    uint64_t v35 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "#scenarioTrigger Received trigger of type %lu from routined, error %@",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349A0 != -1) {
      dispatch_once(&qword_1019349A0, &stru_101865440);
    }
    uint64_t v17 = qword_1019349A8;
    id v18 = [*(id *)(a1 + 32) type];
    uint64_t v19 = *(void *)(a1 + 40);
    int v28 = 134218242;
    id v29 = v18;
    __int16 v30 = 2112;
    uint64_t v31 = v19;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v17,  1LL,  "#scenarioTrigger Received trigger of type %lu from routined, error %@",  &v28,  22);
    uint64_t v21 = (uint8_t *)v20;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLRoutineMonitor startMonitoringScenarioTriggerOfType:forClient:]_block_invoke",  "%s\n",  v20);
    if (v21 != buf) {
      free(v21);
    }
  }

  __int16 v5 = *(void **)(a1 + 40);
  if (v5)
  {
    id v6 = [v5 domain];
    if ([v6 isEqualToString:RTErrorDomain]
      && [*(id *)(a1 + 40) code] != (id)1)
    {
      if (qword_1019349A0 != -1) {
        dispatch_once(&qword_1019349A0, &stru_101865440);
      }
      id v7 = (os_log_s *)qword_1019349A8;
      if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_ERROR))
      {
        int v8 = *(void **)(a1 + 40);
        *(_DWORD *)int buf = 138412290;
        id v33 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "#scenarioTrigger Got error from routined, error, %@",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349A0 != -1) {
          dispatch_once(&qword_1019349A0, &stru_101865440);
        }
        __int128 v9 = *(void **)(a1 + 40);
        int v28 = 138412290;
        id v29 = v9;
        LODWORD(v22) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349A8,  16LL,  "#scenarioTrigger Got error from routined, error, %@",  &v28,  v22);
        uint64_t v11 = (uint8_t *)v10;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "-[CLRoutineMonitor startMonitoringScenarioTriggerOfType:forClient:]_block_invoke",  "%s\n",  v10);
        if (v11 != buf) {
          free(v11);
        }
      }
    }
  }

  else
  {
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    id v12 = objc_msgSend(objc_msgSend(*(id *)(a1 + 48), "scenarioTriggerClients"), "objectForKey:", *(void *)(a1 + 56));
    id v13 = [v12 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v24;
      do
      {
        for (uint64_t i = 0LL; i != v14; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v24 != v15) {
            objc_enumerationMutation(v12);
          }
          [*(id *)(*((void *)&v23 + 1) + 8 * (void)i) onScenarioTrigger:*(void *)(a1 + 32)];
        }

        id v14 = [v12 countByEnumeratingWithState:&v23 objects:v27 count:16];
      }

      while (v14);
    }
  }

id sub_1009BB524(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101865460);
    }
    id v6 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = 68289282LL;
      *(_WORD *)uint64_t v16 = 2082;
      *(void *)&_DWORD v16[2] = "";
      *(_WORD *)&v16[10] = 2114;
      *(void *)&v16[12] = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:#storedLocations: CoreRoutine error while getting stored visits., Error:%{public, l ocation:escape_only}@}",  (uint8_t *)&v15,  0x1Cu);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101865460);
      }
    }

    uint64_t v7 = qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      uint64_t v15 = 68289282LL;
      *(_WORD *)uint64_t v16 = 2082;
      *(void *)&_DWORD v16[2] = "";
      *(_WORD *)&v16[10] = 2114;
      *(void *)&v16[12] = a3;
      int v8 = "#storedLocations: CoreRoutine error while getting stored visits.";
      __int128 v9 = "{msg%{public}.0s:#storedLocations: CoreRoutine error while getting stored visits., Error:%{public"
           ", location:escape_only}@}";
      char v10 = (os_log_s *)v7;
LABEL_17:
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v10,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  v8,  v9,  (uint8_t *)&v15,  0x1Cu);
    }
  }

  else if (a2)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101865460);
    }
    uint64_t v11 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = 68289282LL;
      *(_WORD *)uint64_t v16 = 2082;
      *(void *)&_DWORD v16[2] = "";
      *(_WORD *)&v16[10] = 2050;
      *(void *)&v16[12] = [a2 count];
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:#storedLocations: CoreRoutine returned., Visits:%{public}ld}",  (uint8_t *)&v15,  0x1Cu);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101865460);
      }
    }

    uint64_t v12 = qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      id v13 = [a2 count];
      uint64_t v15 = 68289282LL;
      *(_WORD *)uint64_t v16 = 2082;
      *(void *)&_DWORD v16[2] = "";
      *(_WORD *)&v16[10] = 2050;
      *(void *)&v16[12] = v13;
      int v8 = "#storedLocations: CoreRoutine returned.";
      __int128 v9 = "{msg%{public}.0s:#storedLocations: CoreRoutine returned., Visits:%{public}ld}";
      char v10 = (os_log_s *)v12;
      goto LABEL_17;
    }
  }

  return objc_msgSend( *(id *)(a1 + 32),  "zipperedStoredLocationsBetweenStartTime:endTime:apartFromEachOther:lyingWithinTimeIntervals:custeredWithVisits:withReply:",  *(void *)(a1 + 40),  a2,  *(void *)(a1 + 48),  *(double *)(a1 + 56),  *(double *)(a1 + 64),  *(double *)(a1 + 72),  v15,  *(_OWORD *)v16,  *(void *)&v16[16]);
}

void sub_1009BBC68( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, char a39, uint64_t a40, uint64_t a41, uint64_t a42, char a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47, uint64_t a48, uint64_t a49, uint64_t a50,char a51)
{
}

void sub_1009BBCCC(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  if (a3)
  {
    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101865460);
    }
    __int16 v5 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_ERROR))
    {
      int v56 = 68289282;
      int v57 = 0;
      __int16 v58 = 2082;
      int v59 = "";
      __int16 v60 = 2114;
      id v61 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:#storedLocations: CoreRoutine error while getting stored locations., Error:%{public , location:escape_only}@}",  (uint8_t *)&v56,  0x1Cu);
      if (qword_101934980 != -1) {
        dispatch_once(&qword_101934980, &stru_101865460);
      }
    }

    id v6 = (os_log_s *)qword_101934988;
    if (os_signpost_enabled((os_log_t)qword_101934988))
    {
      int v56 = 68289282;
      int v57 = 0;
      __int16 v58 = 2082;
      int v59 = "";
      __int16 v60 = 2114;
      id v61 = a3;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v6,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#storedLocations: CoreRoutine error while getting stored locations.",  "{msg%{public}.0s:#storedLocations: CoreRoutine error while getting stored locations., Error:%{public , location:escape_only}@}",  (uint8_t *)&v56,  0x1Cu);
    }

    return;
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101865460);
  }
  char v10 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    int v56 = 68289282;
    int v57 = 0;
    __int16 v58 = 2082;
    int v59 = "";
    __int16 v60 = 2050;
    id v61 = [a2 count];
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#storedLocations: enumerateStoredLocationsWithOptions, LocationCount:%{public}ld}",  (uint8_t *)&v56,  0x1Cu);
  }

  if ([a2 count])
  {
    uint64_t v11 = 0LL;
    int v12 = 0;
    while (1)
    {
      unint64_t v13 = *(int *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);
      objc_msgSend(objc_msgSend(a2, "objectAtIndexedSubscript:", v11), "horizontalAccuracy");
      double v15 = v14;
      objc_msgSend( objc_msgSend(objc_msgSend(a2, "objectAtIndexedSubscript:", v11), "timestamp"),  "timeIntervalSinceReferenceDate");
      double v17 = v16;
      objc_msgSend( objc_msgSend( *(id *)(a1 + 32),  "objectAtIndexedSubscript:",  *(int *)(*(void *)(*(void *)(a1 + 64) + 8) + 24)),  "start");
      double v19 = v18;
      objc_msgSend( objc_msgSend( *(id *)(a1 + 32),  "objectAtIndexedSubscript:",  *(int *)(*(void *)(*(void *)(a1 + 64) + 8) + 24)),  "end");
      if (v17 <= v20) {
        break;
      }
      if (*(_BYTE *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL))
      {
        double v21 = 0.0;
        int v22 = -2;
      }

      else
      {
        if (*(void *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 40LL)) {
          int v22 = -1;
        }
        else {
          int v22 = -2;
        }
        if (*(void *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 40LL)) {
          double v21 = v20;
        }
        else {
          double v21 = 0.0;
        }
      }

      ++*(_DWORD *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);
      *(_BYTE *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL) = 0;
LABEL_41:
      if (v22 >= -1)
      {
        *(double *)(*(void *)(*(void *)(a1 + 88) + 8LL) + 24LL) = v21;
        while (1)
        {
          unint64_t v35 = *(int *)(*(void *)(*(void *)(a1 + 96) + 8LL) + 24LL);
          *(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 4sub_10095D844(v2, 0) = objc_msgSend( *(id *)(a1 + 40),  "objectAtIndexedSubscript:",  *(int *)(*(void *)(*(void *)(a1 + 96)
                                                                                              + 8LL)
                                                                                  + 24LL));
          if ([*(id *)(*(void *)(*(void *)(a1 + 104) + 8) + 40) entry])
          {
            if ([*(id *)(*(void *)(*(void *)(a1 + 104) + 8) + 40) exit])
            {
              objc_msgSend( objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 104) + 8) + 40), "exit"),  "timeIntervalSinceReferenceDate");
            }
          }

          *(_BYTE *)(*(void *)(*(void *)(a1 + 112) + 8LL) + 24LL) = 0;
          ++*(_DWORD *)(*(void *)(*(void *)(a1 + 96) + 8LL) + 24LL);
        }

        id v37 = [*(id *)(*(void *)(*(void *)(a1 + 104) + 8) + 40) entry];
        id v38 = [*(id *)(*(void *)(*(void *)(a1 + 104) + 8) + 40) exit];
        if (v37)
        {
          [v37 timeIntervalSinceReferenceDate];
          double v40 = v39 - *(double *)(a1 + 120);
          if (v38) {
            goto LABEL_50;
          }
LABEL_52:
          -[NSDate timeIntervalSinceReferenceDate]( +[NSDate distantFuture](&OBJC_CLASS___NSDate, "distantFuture"),  "timeIntervalSinceReferenceDate");
        }

        else
        {
          -[NSDate timeIntervalSinceReferenceDate]( +[NSDate distantFuture](&OBJC_CLASS___NSDate, "distantFuture"),  "timeIntervalSinceReferenceDate");
          double v40 = v42;
          if (!v38) {
            goto LABEL_52;
          }
LABEL_50:
          [v38 timeIntervalSinceReferenceDate];
          double v20 = v41 + *(double *)(a1 + 120);
        }

        if (v21 > v40 && v21 < v20)
        {
          if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 112) + 8LL) + 24LL))
          {
            uint64_t v47 = objc_alloc(&OBJC_CLASS___CLUsageReportCoordinate);
            objc_msgSend(objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 104) + 8) + 40), "location"), "latitude");
            double v49 = v48;
            objc_msgSend( objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 104) + 8) + 40), "location"),  "longitude");
            uint64_t v51 = -[CLUsageReportCoordinate initWithLatitude:longitude:](v47, "initWithLatitude:longitude:", v49, v50);
            if (v51)
            {
              [*(id *)(a1 + 48) addObject:v51];
              *(_BYTE *)(*(void *)(*(void *)(a1 + 112) + 8LL) + 24LL) = 1;
            }
          }
        }

        else
        {
          if (v22 < 0)
          {
            objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), "coordinate", v20);
            double v45 = v52;
            id v46 = *(id *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 40LL);
          }

          else
          {
            objc_msgSend(objc_msgSend(a2, "objectAtIndexedSubscript:", v22, v20), "coordinate");
            double v45 = v44;
            id v46 = [a2 objectAtIndexedSubscript:v22];
          }

          [v46 coordinate];
          __int16 v54 =  -[CLUsageReportCoordinate initWithLatitude:longitude:]( objc_alloc(&OBJC_CLASS___CLUsageReportCoordinate),  "initWithLatitude:longitude:",  v45,  v53);
          if (v54) {
            [*(id *)(a1 + 56) addObject:v54];
          }
        }
      }

      uint64_t v11 = v12;
    }

    double v20 = v17 + 8.0;
    double v21 = 0.0;
    if (v17 + 8.0 >= v19
      && (double v20 = *(double *)(*(void *)(*(void *)(a1 + 88) + 8LL) + 24LL) + *(double *)(a1 + 120), v17 >= v20))
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL) = 1;
      int v22 = v12;
      double v21 = v17;
    }

    else
    {
      int v22 = -2;
    }

    __int128 v23 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8LL) + 40LL);
    if (v15 <= 300.0)
    {
      if (!v23) {
        goto LABEL_40;
      }
      objc_msgSend(objc_msgSend(v23, "timestamp", v20), "timeIntervalSinceReferenceDate");
      double v20 = v17 - v25;
      if (v20 <= 600.0) {
        goto LABEL_40;
      }
      [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) coordinate];
      double v27 = v26;
      double v29 = v28;
      objc_msgSend(objc_msgSend(a2, "objectAtIndexedSubscript:", v11), "coordinate");
      double v32 = sub_100D2EC74(v27, v29, v30, v31);
      [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) horizontalAccuracy];
      double v20 = v33 + v33;
      if (v32 <= v20) {
        goto LABEL_40;
      }
      __int16 v34 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8LL) + 40LL);
      if (!v34) {
        goto LABEL_40;
      }

      id v24 = 0LL;
    }

    else
    {
      if (v23) {

      }
      id v24 = objc_msgSend(a2, "objectAtIndexedSubscript:", v11, v20);
    }

    *(void *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 4sub_10095D844(v2, 0LL) = v24;
LABEL_40:
    ++v12;
    goto LABEL_41;
  }

id sub_1009BC44C(void *a1, unsigned int a2)
{
  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101865460);
  }
  uint64_t v4 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    uint64_t buf = 68289282LL;
    __int16 v43 = 2082;
    double v44 = "";
    __int16 v45 = 2050;
    id v46 = [a1 count];
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#storedLocations: dedupe, locationCount:%{public}ld}",  (uint8_t *)&buf,  0x1Cu);
  }

  __int16 v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  id v6 = [a1 countByEnumeratingWithState:&v36 objects:v41 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v37;
    double v9 = 90.0;
    double v10 = 360.0;
    do
    {
      for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v37 != v8) {
          objc_enumerationMutation(a1);
        }
        int v12 = *(void **)(*((void *)&v36 + 1) + 8LL * (void)i);
        [v12 latitude];
        double v9 = fmin(v9, v13);
        [v12 longitude];
        double v10 = fmin(v10, v14);
      }

      id v7 = [a1 countByEnumeratingWithState:&v36 objects:v41 count:16];
    }

    while (v7);
  }

  else
  {
    double v9 = 90.0;
    double v10 = 360.0;
  }

  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  id v15 = [a1 countByEnumeratingWithState:&v32 objects:v40 count:16];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = fmax((double)a2, 50.0);
    uint64_t v18 = *(void *)v33;
    do
    {
      for (uint64_t j = 0LL; j != v16; uint64_t j = (char *)j + 1)
      {
        if (*(void *)v33 != v18) {
          objc_enumerationMutation(a1);
        }
        double v20 = *(void **)(*((void *)&v32 + 1) + 8LL * (void)j);
        [v20 latitude];
        double v22 = sub_100D2EC74(v9, 0.0, v21, 0.0);
        [v20 latitude];
        double v24 = v23;
        [v20 latitude];
        double v26 = v25;
        [v20 longitude];
        double v28 = +[NSNumber numberWithLong:]( &OBJC_CLASS___NSNumber,  "numberWithLong:",  50000000 * (uint64_t)(v22 / (double)v17) / v17 + (uint64_t)(sub_100D2EC74(v24, v10, v26, v27) / (double)v17));
        if (!-[NSMutableDictionary objectForKey:](v5, "objectForKey:", v28)) {
          -[NSMutableDictionary setObject:forKey:](v5, "setObject:forKey:", v20, v28);
        }
      }

      id v16 = [a1 countByEnumeratingWithState:&v32 objects:v40 count:16];
    }

    while (v16);
  }

  if (qword_101934980 != -1) {
    dispatch_once(&qword_101934980, &stru_101865460);
  }
  double v29 = (os_log_s *)qword_101934988;
  if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_DEBUG))
  {
    id v30 = objc_msgSend(-[NSMutableDictionary allValues](v5, "allValues"), "count");
    uint64_t buf = 68289282LL;
    __int16 v43 = 2082;
    double v44 = "";
    __int16 v45 = 2050;
    id v46 = v30;
    _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#storedLocations: dedupe, deduppedCount:%{public}ld}",  (uint8_t *)&buf,  0x1Cu);
  }

  return -[NSMutableDictionary allValues](v5, "allValues");
}

void sub_1009BCAC0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

id sub_1009BCADC(uint64_t a1)
{
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  uint64_t v2 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_DEBUG))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    id v6 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#location #routine sendLocations complete}",  (uint8_t *)v4,  0x12u);
  }

  return objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "routineManager"),  "fetchEstimatedLocationAtDate:handler:",  *(void *)(a1 + 40),  *(void *)(a1 + 48));
}

void sub_1009BCE64( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

id sub_1009BCE80(uint64_t a1)
{
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  uint64_t v2 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_DEBUG))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    id v6 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#location #routine sendLocations complete for options}",  (uint8_t *)v4,  0x12u);
  }

  return objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "routineManager"),  "fetchEstimatedLocationAtDate:options:handler:",  *(void *)(a1 + 40),  *(void *)(a1 + 48),  *(void *)(a1 + 56));
}

uint64_t sub_1009BD064(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1009BD1E8(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    if (qword_1019349A0 != -1) {
      dispatch_once(&qword_1019349A0, &stru_101865440);
    }
    __int16 v5 = (os_log_s *)qword_1019349A8;
    if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 68289026;
      int v14 = 0;
      __int16 v15 = 2082;
      id v16 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#location #routine familiarityIndex error}",  (uint8_t *)&v13,  0x12u);
    }

    (*(void (**)(double))(*(void *)(a1 + 32) + 16LL))(0.0);
  }

  id v6 = [a2 firstObject];
  if (qword_1019349A0 != -1) {
    dispatch_once(&qword_1019349A0, &stru_101865440);
  }
  id v7 = (os_log_s *)qword_1019349A8;
  if (os_log_type_enabled((os_log_t)qword_1019349A8, OS_LOG_TYPE_DEFAULT))
  {
    [v6 familiarityIndex];
    int v9 = (int)(v8 * 100.0);
    unsigned int v10 = [a2 count];
    int v13 = 68289538;
    int v14 = 0;
    __int16 v15 = 2082;
    id v16 = "";
    __int16 v17 = 1026;
    int v18 = v9;
    __int16 v19 = 1026;
    unsigned int v20 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#cms familiarityIndex, pct:%{public}d, count:%{public}d}",  (uint8_t *)&v13,  0x1Eu);
  }

  uint64_t v11 = *(void *)(a1 + 32);
  [v6 familiarityIndex];
  return (*(uint64_t (**)(uint64_t, void))(v11 + 16))(v11, 0LL);
}

void sub_1009BD6C4(id a1)
{
  qword_1019349A8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Routine");
}

void sub_1009BD6F0(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_1009BD71C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      int v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)int v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_1009BD7B8(_Unwind_Exception *a1)
{
}

void sub_1009BD7D0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      int v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      *int v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_1009BD85C(_Unwind_Exception *a1)
{
}

uint64_t sub_1009BD874()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101999AA0, (void *)&_mh_execute_header);
}

uint64_t sub_1009BD8B8@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  unsigned int v10 = operator new(0x30uLL);
  uint64_t v11 = v10;
  if (a1) {
    uint64_t v12 = a1 + 8;
  }
  else {
    uint64_t v12 = 0LL;
  }
  uint64_t result = sub_1009BD944((uint64_t)v10, v12, a4, a2, a3);
  *uint64_t v11 = off_101865490;
  *a5 = v11;
  return result;
}

void sub_1009BD930(_Unwind_Exception *a1)
{
}

uint64_t sub_1009BD944(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = off_101865B08;
  *(void *)(a1 + _Block_object_dispose((const void *)(v51 - 224), 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = a5;
  [a3 silo];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 80LL))(a2);
  __int16 v19 = &OBJC_PROTOCOL___CLIntersiloServiceProtocol;
  objc_msgSend( +[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface"),  "extendSelectorInfoWithProtocol:bases:",  &OBJC_PROTOCOL___CLNotifierServiceProtocol,  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v19, 1));
  int v18 = &OBJC_PROTOCOL___CLIntersiloClientProtocol;
  objc_msgSend( +[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface"),  "extendSelectorInfoWithProtocol:bases:",  &OBJC_PROTOCOL___CLNotifierServiceClientProtocol,  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v18, 1));
  id v11 = [a3 silo];
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C(__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 24);
  }

  if (v17 >= 0) {
    uint64_t v12 = __p;
  }
  else {
    uint64_t v12 = (void **)__p[0];
  }
  id v13 = +[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:]( &OBJC_CLASS___CLIntersiloProxy,  "proxyForRecipientObject:inSilo:recipientName:",  v10,  v11,  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v12, __p[0], __p[1], v17));
  *(void *)(a1 + 16) = v13;
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    id v13 = *(id *)(a1 + 16);
  }

  id v14 = v13;
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a3, "silo"));
  return a1;
}

void sub_1009BDB40( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009BDC00(uint64_t a1, void *a2)
{
  if (a2)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v4 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 68289283;
      int v9 = 0;
      __int16 v10 = 2082;
      id v11 = "";
      __int16 v12 = 2113;
      id v13 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Fence: Received visit from routined, visit:%{private, location:escape_only}@}",  (uint8_t *)&v8,  0x1Cu);
    }

    double Current = CFAbsoluteTimeGetCurrent();
    sub_100A09218(a1 + 120, a2, Current);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    id v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      int v8 = 68289026;
      int v9 = 0;
      __int16 v10 = 2082;
      id v11 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Fence: Attempting to notify nil visit}",  (uint8_t *)&v8,  0x12u);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
    }

    id v7 = (os_log_s *)qword_101934878;
    if (os_signpost_enabled((os_log_t)qword_101934878))
    {
      int v8 = 68289026;
      int v9 = 0;
      __int16 v10 = 2082;
      id v11 = "";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Fence: Attempting to notify nil visit",  "{msg%{public}.0s:Fence: Attempting to notify nil visit}",  (uint8_t *)&v8,  0x12u);
    }
  }

void sub_1009BDE54(uint64_t a1, void *a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 136380675;
    id v13 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: received scenario trigger, %{private}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v7 = qword_101934878;
    int v10 = 136380675;
    id v11 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v7,  2LL,  "Fence: received scenario trigger, %{private}s",  &v10,  12);
    int v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onScenarioTrigger(RTScenarioTrigger *)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  objc_opt_class(&OBJC_CLASS___RTScenarioTriggerSettled);
  if ((objc_opt_isKindOfClass(a2, v5) & 1) != 0)
  {
    double Current = CFAbsoluteTimeGetCurrent();
    sub_100A008A0(a1 + 120, Current);
  }

uint64_t sub_1009BE064(uint64_t a1, void *a2)
{
  *(void *)a1 = off_1018658C0;
  sub_1009BF140(a1 + 8, "FenceMonitorNotifier", a2);
  *(void *)a1 = off_1018654B8;
  *(void *)(a1 + _Block_object_dispose((const void *)(v51 - 224), 8) = off_1018656C0;
  sub_1005D49C8(a1 + 117);
  sub_1009F2C08(a1 + 120, a1, 0LL);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = operator new(0x20uLL);
  *uint64_t v4 = &off_101865C10;
  v4[1] = sub_1009C3FF8;
  _DWORD v4[2] = 0LL;
  void v4[3] = a1;
  __int128 v73 = v4;
  sub_101023E00(a1 + 2064, v3, v72);
  uint64_t v5 = v73;
  if (v73 == v72)
  {
    uint64_t v6 = 4LL;
    uint64_t v5 = v72;
    goto LABEL_5;
  }

  if (v73)
  {
    uint64_t v6 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }

  uint64_t v7 = a1 + 2216;
  *(_OWORD *)(a1 + 2296) = 0u;
  *(_OWORD *)(a1 + 2312) = 0u;
  *(_OWORD *)(a1 + 2264) = 0u;
  *(_OWORD *)(a1 + 228sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_OWORD *)(a1 + 2232) = 0u;
  *(_OWORD *)(a1 + 224_Block_object_dispose((const void *)(v51 - 224), 8) = 0u;
  *(_OWORD *)(a1 + 2216) = 0u;
  *(void *)(a1 + 232_Block_object_dispose((const void *)(v51 - 224), 8) = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0,  0,  (dispatch_queue_t)[*(id *)(a1 + 48) queue]);
  *(void *)(a1 + 2336) = 0LL;
  *(void *)(a1 + 2352) = 0LL;
  *(void *)(a1 + 2344) = 0LL;
  *(void *)(a1 + 236sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "silo"), "newTimer");
  *(void *)(a1 + 236_Block_object_dispose((const void *)(v51 - 224), 8) = 0LL;
  sub_100AD558C(a1 + 2376, (uint64_t)"FenceMonitorAlwaysOn", a1, 0.0);
  sub_100AD558C(a1 + 2424, (uint64_t)"FenceMonitorWatchdog", a1, 90.0);
  sub_100AD558C(a1 + 2472, (uint64_t)"CLFenceMonitorWifi", a1, 300.0);
  int v8 = sub_100D0ABD8();
  sub_100AD558C(a1 + 2520, (uint64_t)"FenceMonitorConvergingState", a1, *((double *)v8 + 9));
  *(void *)(a1 + 256_Block_object_dispose((const void *)(v51 - 224), 8) = 0LL;
  *(_BYTE *)(a1 + 2584) = 0;
  *(_OWORD *)(a1 + 260sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0u;
  *(_DWORD *)(a1 + 2615) = 0;
  *(_BYTE *)(a1 + 2619) = 1;
  *(void *)(a1 + 2624) = 0LL;
  *(_BYTE *)(a1 + 2632) = 0;
  *(void *)(a1 + 2912) = 0LL;
  *(void *)(a1 + 292_Block_object_dispose((const void *)(v51 - 224), 8) = 0LL;
  *(void *)(a1 + 292sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(_DWORD *)(a1 + 2936) = 0;
  sub_1006DA49C(a1 + 2960, *(void **)(a1 + 40));
  v65[0] = _NSConcreteStackBlock;
  v65[1] = 3221225472LL;
  v65[2] = sub_1009BF1DC;
  v65[3] = &unk_10181D3D0;
  v65[4] = a1;
  [*(id *)(a1 + 2360) setHandler:v65];
  sub_1008F15C8((uint64_t)sub_1009BF204, a1, *(void **)(a1 + 40), buf);
  uint64_t v9 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v10 = *(void *)(a1 + 2216);
  *(void *)(a1 + 2216) = v9;
  if (v10)
  {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    uint64_t v11 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
    }
  }

  [*(id *)(*(void *)v7 + 16) register:*(void *)(*(void *)v7 + 8) forNotification:4 registrationInfo:0];
  [*(id *)(*(void *)v7 + 16) register:*(void *)(*(void *)v7 + 8) forNotification:5 registrationInfo:0];
  sub_10043AC3C((uint64_t)sub_1009BF3E0, a1, *(void **)(a1 + 40), buf);
  uint64_t v12 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v13 = *(void *)(a1 + 2224);
  *(void *)(a1 + 2224) = v12;
  if (v13)
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    uint64_t v14 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
    }
  }

  *(void *)(a1 + 2912) = -[CLFenceMonitorNotifierAdapter initWithFenceMonitor:]( objc_alloc(&OBJC_CLASS___CLFenceMonitorNotifierAdapter),  "initWithFenceMonitor:",  a1);
  __int16 v15 = -[CLFenceBackgroundActivityScheduler initWithQueue:]( [CLFenceBackgroundActivityScheduler alloc],  "initWithQueue:",  [*(id *)(a1 + 48) queue]);
  *(void *)(a1 + 232sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v15;
  v64[0] = _NSConcreteStackBlock;
  v64[1] = 3221225472LL;
  void v64[2] = sub_1009BF5BC;
  v64[3] = &unk_10181D3D0;
  v64[4] = a1;
  -[CLFenceBackgroundActivityScheduler registerDailyBlock:](v15, "registerDailyBlock:", v64);
  id v16 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "vendor"), "proxyForService:", @"CLRoutineMonitor");
  *(void *)(a1 + 228sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v16;
  [v16 registerDelegate:*(void *)(a1 + 2912) inSilo:*(void *)(a1 + 48)];
  [*(id *)(a1 + 2280) setDelegateEntityName:"CLFenceMonitor"];
  CLMotionActivity::init((CLMotionActivity *)(a1 + 2640));
  CLMotionActivity::init((CLMotionActivity *)(a1 + 2776));
  sub_10036B3B4((uint64_t)sub_1009BF7D8, a1, *(void **)(a1 + 40), buf);
  uint64_t v17 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v18 = *(void *)(a1 + 2256);
  *(void *)(a1 + 2256) = v17;
  if (v18)
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    uint64_t v19 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
    }
  }

  [*(id *)(*(void *)(a1 + 2256) + 16) register:*(void *)(*(void *)(a1 + 2256) + 8) forNotification:2 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 2256) + 16) register:*(void *)(*(void *)(a1 + 2256) + 8) forNotification:3 registrationInfo:0];
  *(void *)(a1 + 228_Block_object_dispose((const void *)(v51 - 224), 8) =  objc_msgSend( objc_msgSend(*(id *)(a1 + 40), "vendor"),  "proxyForService:",  @"CLWifiService");
  *(_DWORD *)uint64_t buf = 3;
  sub_1010240A4(a1 + 2064, (unsigned int *)buf);
  *(_DWORD *)uint64_t buf = 4;
  sub_1010240A4(a1 + 2064, (unsigned int *)buf);
  *(_DWORD *)uint64_t buf = 11;
  sub_1010240A4(a1 + 2064, (unsigned int *)buf);
  *(_DWORD *)uint64_t buf = 9;
  sub_1010240A4(a1 + 2064, (unsigned int *)buf);
  *(_DWORD *)uint64_t buf = 8;
  sub_1010240A4(a1 + 2064, (unsigned int *)buf);
  sub_100ACD980((uint64_t)sub_1009BF9B0, a1, *(void **)(a1 + 40), buf);
  uint64_t v20 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v21 = *(void *)(a1 + 2296);
  *(void *)(a1 + 2296) = v20;
  if (v21)
  {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
    uint64_t v22 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v22) {
      (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
    }
  }

  [*(id *)(*(void *)(a1 + 2296) + 16) register:*(void *)(*(void *)(a1 + 2296) + 8) forNotification:0 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 2296) + 16) register:*(void *)(*(void *)(a1 + 2296) + 8) forNotification:1 registrationInfo:0];
  sub_1003CC884((uint64_t)sub_1009BFB88, a1, *(void **)(a1 + 40), buf);
  uint64_t v23 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v24 = *(void *)(a1 + 2232);
  *(void *)(a1 + 2232) = v23;
  if (v24)
  {
    (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
    uint64_t v25 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v25) {
      (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
    }
  }

  [*(id *)(*(void *)(a1 + 2232) + 16) register:*(void *)(*(void *)(a1 + 2232) + 8) forNotification:7 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 2232) + 16) register:*(void *)(*(void *)(a1 + 2232) + 8) forNotification:8 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 2232) + 16) register:*(void *)(*(void *)(a1 + 2232) + 8) forNotification:16 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 2232) + 16) register:*(void *)(*(void *)(a1 + 2232) + 8) forNotification:3 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 2232) + 16) register:*(void *)(*(void *)(a1 + 2232) + 8) forNotification:2 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 2232) + 16) register:*(void *)(*(void *)(a1 + 2232) + 8) forNotification:6 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 2232) + 16) register:*(void *)(*(void *)(a1 + 2232) + 8) forNotification:15 registrationInfo:0];
  sub_100A1C6E0((uint64_t)sub_1009BFD64, a1, *(void **)(a1 + 40), buf);
  uint64_t v26 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v27 = *(void *)(a1 + 2304);
  *(void *)(a1 + 2304) = v26;
  if (v27)
  {
    (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
    uint64_t v28 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v28) {
      (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
    }
  }

  [*(id *)(*(void *)(a1 + 2304) + 16) register:*(void *)(*(void *)(a1 + 2304) + 8) forNotification:0 registrationInfo:0];
  sub_1003A09BC((uint64_t)sub_1009BFF40, a1, *(void **)(a1 + 40), buf);
  uint64_t v29 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v30 = *(void *)(a1 + 2248);
  *(void *)(a1 + 224_Block_object_dispose((const void *)(v51 - 224), 8) = v29;
  if (v30)
  {
    (*(void (**)(uint64_t))(*(void *)v30 + 8LL))(v30);
    uint64_t v31 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v31) {
      (*(void (**)(uint64_t))(*(void *)v31 + 8LL))(v31);
    }
  }

  [*(id *)(*(void *)(a1 + 2248) + 16) register:*(void *)(*(void *)(a1 + 2248) + 8) forNotification:5 registrationInfo:0];
  __int128 v32 = (unsigned __int8 *)(a1 + 2619);
  *(_BYTE *)(a1 + 2619) = +[CMActivityAlarmLocal activityAlarmAvailable]( &OBJC_CLASS___CMActivityAlarmLocal,  "activityAlarmAvailable");
  sub_1002F0B04(buf);
  sub_1002A6F64(*(uint64_t *)buf, "FenceMonitorUseActivityAlarm", (BOOL *)(a1 + 2619));
  __int128 v33 = v70;
  if (v70)
  {
    p_shared_owners = (unint64_t *)&v70->__shared_owners_;
    do
      unint64_t v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  __int128 v36 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v37 = *v32;
    unsigned int v38 = +[CMActivityAlarmLocal activityAlarmAvailable](&OBJC_CLASS___CMActivityAlarmLocal, "activityAlarmAvailable");
    *(_DWORD *)uint64_t buf = 67174913;
    *(_DWORD *)&uint8_t buf[4] = v37;
    LOWORD(v7sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 1025;
    *(_DWORD *)((char *)&v70 + 2) = v38;
    _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEBUG,  "Fence: fIsUseActivityAlarm, %{private}d, activityAlarmAvailable, %{private}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v54 = qword_101934878;
    int v55 = *v32;
    unsigned int v56 = +[CMActivityAlarmLocal activityAlarmAvailable](&OBJC_CLASS___CMActivityAlarmLocal, "activityAlarmAvailable");
    v66[0] = 67174913;
    v66[1] = v55;
    __int16 v67 = 1025;
    unsigned int v68 = v56;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v54,  2LL,  "Fence: fIsUseActivityAlarm, %{private}d, activityAlarmAvailable, %{private}d",  v66,  14,  a1 + 2960,  a1 + 2520,  a1 + 2472,  a1 + 2424,  a1 + 2376,  a1 + 120);
    __int16 v58 = (uint8_t *)v57;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLFenceMonitorNotifier::CLFenceMonitorNotifier(id<CLIntersiloUniverse>)",  "%s\n",  v57);
    if (v58 != buf) {
      free(v58);
    }
  }

  sub_100EE2800((uint64_t)sub_1009C0118, a1, *(void **)(a1 + 40), buf);
  uint64_t v39 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v40 = *(void *)(a1 + 2272);
  *(void *)(a1 + 2272) = v39;
  if (v40)
  {
    (*(void (**)(uint64_t))(*(void *)v40 + 8LL))(v40);
    uint64_t v41 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v41) {
      (*(void (**)(uint64_t))(*(void *)v41 + 8LL))(v41);
    }
  }

  [*(id *)(*(void *)(a1 + 2272) + 16) register:*(void *)(*(void *)(a1 + 2272) + 8) forNotification:11 registrationInfo:0];
  double v42 = operator new(0x38uLL);
  sub_1010DDBC0(buf, "FenceTrigger");
  sub_1006B5FBC(v42, buf, sub_1009C02E8, a1, *(void *)(a1 + 48), 1LL, 1.79769313e308, 1.79769313e308, 0.9);
  *(void *)(a1 + 2336) = v42;
  if (v71 < 0) {
    operator delete(*(void **)buf);
  }
  __int16 v43 = operator new(0x38uLL);
  sub_1010DDBC0(buf, "FenceTriggerDeAss");
  sub_1006B5FBC(v43, buf, sub_1009C04AC, a1, *(void *)(a1 + 48), 1LL, 1.79769313e308, 1.79769313e308, 0.9);
  *(void *)(a1 + 2344) = v43;
  if (v71 < 0) {
    operator delete(*(void **)buf);
  }
  double v44 = operator new(0x38uLL);
  sub_1010DDBC0(buf, "FenceContTrack");
  sub_1006B5FBC(v44, buf, sub_1009C0670, a1, *(void *)(a1 + 48), 1LL, 1.79769313e308, 1.79769313e308, 0.9);
  *(void *)(a1 + 2352) = v44;
  if (v71 < 0) {
    operator delete(*(void **)buf);
  }
  __int16 v45 = operator new(0x38uLL);
  sub_1010DDBC0(buf, "FenceSettledTimer");
  sub_1006B5FBC(v45, buf, sub_1009C0834, a1, *(void *)(a1 + 48), 1LL, 1.79769313e308, 1.79769313e308, 0.9);
  *(void *)(a1 + 236_Block_object_dispose((const void *)(v51 - 224), 8) = v45;
  if (v71 < 0) {
    operator delete(*(void **)buf);
  }
  id v46 = operator new(0x38uLL);
  sub_1010DDBC0(buf, "FenceMiLoWaitTimer");
  sub_1006B5FBC(v46, buf, sub_1009C09F4, a1, *(void *)(a1 + 48), 1LL, 1.79769313e308, 1.79769313e308, 0.9);
  *(void *)(a1 + 292sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = v46;
  if (v71 < 0) {
    operator delete(*(void **)buf);
  }
  uint64_t v47 = operator new(0x38uLL);
  sub_1010DDBC0(buf, "FenceMiLoMetricsGpsWaitTimer");
  sub_1006B5FBC(v47, buf, sub_1009C0BB4, a1, *(void *)(a1 + 48), 1LL, 1.79769313e308, 1.79769313e308, 0.9);
  *(void *)(a1 + 292_Block_object_dispose((const void *)(v51 - 224), 8) = v47;
  if (v71 < 0) {
    operator delete(*(void **)buf);
  }
  double v48 = operator new(0x38uLL);
  sub_1010DDBC0(buf, "FenceConvergingStateChangeTimer");
  sub_1006B5FBC(v48, buf, sub_1009C0D74, a1, *(void *)(a1 + 48), 1LL, 1.79769313e308, 1.79769313e308, 0.9);
  *(void *)(a1 + 2576) = v48;
  if (v71 < 0) {
    operator delete(*(void **)buf);
  }
  id v49 = [*(id *)(a1 + 48) newTimer];
  *(void *)(a1 + 256_Block_object_dispose((const void *)(v51 - 224), 8) = v49;
  v63[0] = _NSConcreteStackBlock;
  v63[1] = 3221225472LL;
  void v63[2] = sub_1009C0F34;
  v63[3] = &unk_10181D3D0;
  v63[4] = a1;
  [v49 setHandler:v63];
  [*(id *)(a1 + 2568) setFireInterval:43200.0];
  if (!*(void *)(a1 + 2568))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    double v50 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_FAULT,  "Fence: failed to allocate, fConsolidatedTrigger",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      LOWORD(v66[0]) = 0;
      LODWORD(v61) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "Fence: failed to allocate, fConsolidatedTrigger",  v66,  v61);
      __int16 v60 = (uint8_t *)v59;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLFenceMonitorNotifier::CLFenceMonitorNotifier(id<CLIntersiloUniverse>)",  "%s\n",  v59);
      if (v60 != buf) {
        free(v60);
      }
    }
  }

  uint64_t v51 = *(dispatch_source_s **)(a1 + 2328);
  if (v51)
  {
    dispatch_source_set_timer(v51, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0LL);
    double v52 = *(dispatch_source_s **)(a1 + 2328);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_1009C1220;
    handler[3] = &unk_10181D3D0;
    handler[4] = a1;
    dispatch_source_set_event_handler(v52, handler);
    dispatch_resume(*(dispatch_object_t *)(a1 + 2328));
  }

  return a1;
}

void sub_1009BEE88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, void *__p, uint64_t a42, int a43, __int16 a44, char a45, char a46)
{
  uint64_t v50 = v46[288];
  v46[288] = 0LL;
  if (v50) {
    (*(void (**)(uint64_t))(*(void *)v50 + 8LL))(v50);
  }
  uint64_t v51 = v46[287];
  v46[287] = 0LL;
  if (v51) {
    (*(void (**)(uint64_t))(*(void *)v51 + 8LL))(v51);
  }
  uint64_t v52 = v46[284];
  v46[284] = 0LL;
  if (v52) {
    (*(void (**)(uint64_t))(*(void *)v52 + 8LL))(v52);
  }
  uint64_t v53 = v46[283];
  v46[283] = 0LL;
  if (v53) {
    (*(void (**)(uint64_t))(*(void *)v53 + 8LL))(v53);
  }
  uint64_t v54 = v46[282];
  v46[282] = 0LL;
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8LL))(v54);
  }
  uint64_t v55 = v46[281];
  v46[281] = 0LL;
  if (v55) {
    (*(void (**)(uint64_t))(*(void *)v55 + 8LL))(v55);
  }
  uint64_t v56 = v46[280];
  v46[280] = 0LL;
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8LL))(v56);
  }
  uint64_t v57 = v46[279];
  v46[279] = 0LL;
  if (v57) {
    (*(void (**)(uint64_t))(*(void *)v57 + 8LL))(v57);
  }
  uint64_t v58 = v46[278];
  v46[278] = 0LL;
  if (v58) {
    (*(void (**)(uint64_t))(*(void *)v58 + 8LL))(v58);
  }
  uint64_t v59 = *v47;
  uint64_t *v47 = 0LL;
  if (v59) {
    (*(void (**)(uint64_t))(*(void *)v59 + 8LL))(v59);
  }
  sub_1010240A0(v48);
  sub_1009F2CD0(a16);
  nullsub_10(a17);
  sub_1009C13EC(a18);
  _Unwind_Resume(a1);
}

uint64_t sub_1009BF140(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_101865B30;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 4sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = [a3 silo];
  *(void *)(a1 + 4_Block_object_dispose((const void *)(v51 - 224), 8) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 8_Block_object_dispose((const void *)(v51 - 224), 8) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 10_Block_object_dispose((const void *)(v51 - 224), 8) = 0;
  return a1;
}

void sub_1009BF1C0(_Unwind_Exception *exception_object)
{
}

void sub_1009BF1DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  *(_BYTE *)(v1 + 2616) = 0;
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009FE19C(v1 + 120, Current);
}

void sub_1009BF204(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onBluetoothNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    int v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onBluetoothNotification, event:%{public, location:escape_on ly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009F6E18(a4 + 120, a2, a3, Current);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009BF3C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009BF3E0(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    int v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onLocationNotification, event:%{public, location:escape_onl y}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009F7958((void *)(a4 + 120), a2, a3, Current);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009BF59C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_1009BF5BC(uint64_t a1)
{
  return sub_1009BF5C4(*(void *)(a1 + 32));
}

id sub_1009BF5C4(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v3 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#FenceMetrics #BackgroundTask metric submission handler invoked",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v10[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#FenceMetrics #BackgroundTask metric submission handler invoked",  v10,  2);
    uint64_t v7 = (char *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorNotifier::onBackgroundActivityFired()", "%s\n", v6);
  }

  uint64_t v4 = a1 + 2960;
  sub_1006DABB0(v4, (uint64_t)buf, Current);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1009C1DBC;
  v8[3] = &unk_10183D0E8;
  v9[0] = *(_OWORD *)buf;
  *(_OWORD *)((char *)v9 + 12) = *(_OWORD *)&buf[12];
  AnalyticsSendEventLazy(@"com.apple.locationd.GeofenceConvergingState.usage", v8);
  return sub_1006DAC58(v4, Current, 172800.0);
}

void sub_1009BF7D8(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    int v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onMotionStateNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onMotionStateNotification, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1009C37E0(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009BF990( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009BF9B0(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    int v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onDataProtectionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onDataProtectionNotification, event:%{public, location:esca pe_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1009CA748(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009BFB68( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009BFB88(uint64_t a1, int *a2, unsigned __int8 *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    int v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onStatusNotification, event:%{public, location:escape_only} s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009FD388(a4 + 120, a2, a3, Current);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009BFD44( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009BFD64(uint64_t a1, _DWORD *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onSignalEnvironmentNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    int v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onSignalEnvironmentNotification, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  CFAbsoluteTimeGetCurrent();
  sub_1009FDE6C(a4 + 120, a2, a3);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009BFF20( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009BFF40(uint64_t a1, int *a2, _BYTE *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    int v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onCompanionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onCompanionNotification, event:%{public, location:escape_on ly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1009C312C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009C00F8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C0118(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onDarwinNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    int v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onDarwinNotification, event:%{public, location:escape_only} s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  sub_1009C3E48(a4, v6, a2);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009C02C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C02E8(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v3 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onDelayedTriggerTimer",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v4 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      __int16 v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onDelayedTriggerTimer, event:%{public, location:escape_only }s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009FF8DC(a2 + 120, Current);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009C048C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C04AC(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v3 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onDeAssTriggerTimer",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v4 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      __int16 v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onDeAssTriggerTimer, event:%{public, location:escape_only}s , this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009FF640(a2 + 120, Current);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009C0650( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C0670(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v3 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onContinousTrackingTimer",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v4 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      __int16 v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onContinousTrackingTimer, event:%{public, location:escape_o nly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009FFB78(a2 + 120, Current);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009C0814( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C0834(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v6 = 1;
    uint64_t v3 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onSettledTimerExpired",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v4 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v8 = 0;
      __int16 v9 = 2082;
      __int16 v10 = "";
      __int16 v11 = 2082;
      __int16 v12 = "activity";
      __int16 v13 = 2050;
      uint64_t v14 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onSettledTimerExpired, event:%{public, location:escape_only }s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v6 = 0;
  }

  sub_1009C9A2C(a2);
  if (v6) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009C09D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C09F4(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v6 = 1;
    uint64_t v3 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onMiLoLocalizerWaitTimerExpired",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v4 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v8 = 0;
      __int16 v9 = 2082;
      __int16 v10 = "";
      __int16 v11 = 2082;
      __int16 v12 = "activity";
      __int16 v13 = 2050;
      uint64_t v14 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onMiLoLocalizerWaitTimerExpired, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v6 = 0;
  }

  sub_1009C6E58(a2);
  if (v6) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009C0B94( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C0BB4(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v6 = 1;
    uint64_t v3 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onMiLoMetircsGpsWaitTimerExpired",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v4 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v8 = 0;
      __int16 v9 = 2082;
      __int16 v10 = "";
      __int16 v11 = 2082;
      __int16 v12 = "activity";
      __int16 v13 = 2050;
      uint64_t v14 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onMiLoMetircsGpsWaitTimerExpired, event:%{public, location: escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v6 = 0;
  }

  sub_1009C5450((_BYTE *)a2);
  if (v6) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009C0D54( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C0D74(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v6 = 1;
    uint64_t v3 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onConvergingStateChangeTimerFired",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v4 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v8 = 0;
      __int16 v9 = 2082;
      __int16 v10 = "";
      __int16 v11 = 2082;
      __int16 v12 = "activity";
      __int16 v13 = 2050;
      uint64_t v14 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onConvergingStateChangeTimerFired, event:%{public, location :escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v6 = 0;
  }

  sub_1009C6CBC(a2);
  if (v6) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009C0F14( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C0F34(uint64_t a1)
{
}

void sub_1009C0F3C(uint64_t a1)
{
  if (*(void *)(a1 + 2568))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v2 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Fence: onConsolidatedTrigger, calling triggerReceivedNow",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v9[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: onConsolidatedTrigger, calling triggerReceivedNow",  v9,  2);
      char v6 = (uint8_t *)v5;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorNotifier::onConsolidatedTrigger()", "%s\n", v5);
      if (v6 != buf) {
        free(v6);
      }
    }

    [*(id *)(a1 + 2568) setNextFireDelay:1.79769313e308];
    double Current = CFAbsoluteTimeGetCurrent();
    sub_1009F6208(a1 + 120, Current);
    *(_BYTE *)(a1 + 2584) = 0;
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v4 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: ignore, onConsolidatedTrigger, shutdown?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v9[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: ignore, onConsolidatedTrigger, shutdown?",  v9,  2);
      int v8 = (uint8_t *)v7;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorNotifier::onConsolidatedTrigger()", "%s\n", v7);
      if (v8 != buf) {
        free(v8);
      }
    }
  }

void sub_1009C1220(uint64_t a1)
{
}

void sub_1009C1228(uint64_t a1)
{
  if (*(void *)(a1 + 2328))
  {
    double Current = CFAbsoluteTimeGetCurrent();
    sub_1009F6E10(a1 + 120, Current);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "Fence: ignoring recalculateNow, shut down?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v6[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: ignoring recalculateNow, shut down?",  v6,  2);
      uint64_t v5 = (uint8_t *)v4;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLFenceMonitorNotifier::recalculateNow()", "%s\n", v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

uint64_t sub_1009C13EC(uint64_t a1)
{
  *(void *)a1 = off_101865B30;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100589F4C(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_1009C1464(uint64_t a1)
{
  *(void *)a1 = off_1018654B8;
  *(void *)(a1 + _Block_object_dispose((const void *)(v51 - 224), 8) = off_1018656C0;
  uint64_t v2 = a1 + 8;
  sub_1009C7A6C(a1, (uint64_t)"~CLFenceMonitor");
  uint64_t v3 = *(void *)(a1 + 2256);
  *(void *)(a1 + 2256) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 2272);
  *(void *)(a1 + 2272) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  [*(id *)(a1 + 2568) invalidate];

  *(void *)(a1 + 256_Block_object_dispose((const void *)(v51 - 224), 8) = 0LL;
  (*(void (**)(uint64_t))(*(void *)a1 + 216LL))(a1);
  uint64_t v5 = *(void *)(a1 + 2336);
  if (v5)
  {
    char v6 = (void *)sub_1006B6010(v5);
    operator delete(v6);
    *(void *)(a1 + 2336) = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)a1 + 144LL))(a1);
  uint64_t v7 = *(void *)(a1 + 2352);
  if (v7)
  {
    int v8 = (void *)sub_1006B6010(v7);
    operator delete(v8);
    *(void *)(a1 + 2352) = 0LL;
  }

  (*(void (**)(uint64_t))(*(void *)a1 + 288LL))(a1);
  uint64_t v9 = *(void *)(a1 + 2344);
  if (v9)
  {
    __int16 v10 = (void *)sub_1006B6010(v9);
    operator delete(v10);
    *(void *)(a1 + 2344) = 0LL;
  }

  [*(id *)(a1 + 2360) invalidate];

  *(void *)(a1 + 236sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(_BYTE *)(a1 + 2616) = 0;
  uint64_t v11 = *(void *)(a1 + 2920);
  if (v11)
  {
    sub_1006B6294(v11);
    uint64_t v12 = *(void *)(a1 + 2920);
    if (v12)
    {
      __int16 v13 = (void *)sub_1006B6010(v12);
      operator delete(v13);
    }

    *(void *)(a1 + 292sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  }

  uint64_t v14 = *(void *)(a1 + 2928);
  if (v14)
  {
    sub_1006B6294(v14);
    uint64_t v15 = *(void *)(a1 + 2928);
    if (v15)
    {
      __int16 v16 = (void *)sub_1006B6010(v15);
      operator delete(v16);
    }

    *(void *)(a1 + 292_Block_object_dispose((const void *)(v51 - 224), 8) = 0LL;
  }

  *(void *)(a1 + 228sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  *(void *)(a1 + 228_Block_object_dispose((const void *)(v51 - 224), 8) = 0LL;
  (*(void (**)(uint64_t))(*(void *)a1 + 328LL))(a1);
  uint64_t v17 = *(void *)(a1 + 2368);
  if (v17)
  {
    uint64_t v18 = (void *)sub_1006B6010(v17);
    operator delete(v18);
    *(void *)(a1 + 236_Block_object_dispose((const void *)(v51 - 224), 8) = 0LL;
  }

  [*(id *)(a1 + 2912) setValid:0];
  [*(id *)(a1 + 2944) cancel];
  *(void *)(a1 + 2944) = 0LL;

  *(void *)(a1 + 2952) = 0LL;
  sub_1006DA4A0(a1 + 2960);
  sub_100AD5650(a1 + 2520);
  sub_100AD5650(a1 + 2472);
  sub_100AD5650(a1 + 2424);
  sub_100AD5650(a1 + 2376);
  uint64_t v19 = *(void *)(a1 + 2304);
  *(void *)(a1 + 2304) = 0LL;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  uint64_t v20 = *(void *)(a1 + 2296);
  *(void *)(a1 + 2296) = 0LL;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8LL))(v20);
  }
  uint64_t v21 = *(void *)(a1 + 2272);
  *(void *)(a1 + 2272) = 0LL;
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
  }
  uint64_t v22 = *(void *)(a1 + 2264);
  *(void *)(a1 + 2264) = 0LL;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  uint64_t v23 = *(void *)(a1 + 2256);
  *(void *)(a1 + 2256) = 0LL;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
  }
  uint64_t v24 = *(void *)(a1 + 2248);
  *(void *)(a1 + 224_Block_object_dispose((const void *)(v51 - 224), 8) = 0LL;
  if (v24) {
    (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
  }
  uint64_t v25 = *(void *)(a1 + 2240);
  *(void *)(a1 + 224sub_100222B94(v8, (uint64_t)"clearLocationInformationCoarseCell", 0) = 0LL;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
  }
  uint64_t v26 = *(void *)(a1 + 2232);
  *(void *)(a1 + 2232) = 0LL;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
  }
  uint64_t v27 = *(void *)(a1 + 2224);
  *(void *)(a1 + 2224) = 0LL;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
  }
  uint64_t v28 = *(void *)(a1 + 2216);
  *(void *)(a1 + 2216) = 0LL;
  if (v28) {
    (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
  }
  sub_1010240A0(a1 + 2064);
  sub_1009F2CD0(a1 + 120);
  nullsub_10(a1 + 117);
  sub_1009C13EC(v2);
  return a1;
}

uint64_t sub_1009C1770(uint64_t a1)
{
  return sub_1009C1464(a1 - 8);
}

void sub_1009C1778(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009C1464(a1);
  operator delete(v1);
}

void sub_1009C178C(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009C1464(a1 - 8);
  operator delete(v1);
}

uint64_t sub_1009C17A4(uint64_t a1, _DWORD *a2)
{
  if (!*a2) {
    sub_100A0128C(a1 + 120);
  }
  return 1LL;
}

uint64_t sub_1009C17C8(uint64_t a1, _DWORD *a2)
{
  if (!*a2) {
    sub_100A0128C(a1 + 112);
  }
  return 1LL;
}

uint64_t sub_1009C17EC()
{
  return 1LL;
}

uint64_t sub_1009C17F4()
{
  return 1LL;
}

void *sub_1009C17FC@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

void *sub_1009C1874@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

BOOL sub_1009C18EC()
{
  uint64_t v0 = sub_1002F8DDC();
  uint64_t v1 = off_10198EB10;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  return sub_1002AC7B8(v0, v1, &Current);
}

void sub_1009C1934(uint64_t a1, int a2)
{
}

uint64_t sub_1009C193C(uint64_t a1, char a2)
{
  return sub_1009F30C4(a1 + 120, a2);
}

void sub_1009C1944(uint64_t a1, char a2)
{
}

id *sub_1009C194C(uint64_t a1, uint64_t *a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009F3608(a1 + 120, a2, Current);
  return sub_1001BA1BC(v6);
}

void sub_1009C19D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
}

void sub_1009C19EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    while (*(void *)(v2 + 232) == *(void *)(v2 + 224))
    {
      double v5 = sub_1009232CC(v2);
      sub_1009C1C30(a1, v2);
      v2 += 248LL;
      if (v2 == v3) {
        return;
      }
    }

    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    char v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      BOOL v7 = *(void *)(v2 + 232) != *(void *)(v2 + 224);
      *(_DWORD *)uint64_t buf = 67240448;
      BOOL v16 = v7;
      __int16 v17 = 2050;
      double v18 = sub_1009232CC(v2);
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Skip finding LOI type,poly,%{public}d,radius,%{public}.01lf",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v8 = qword_101934878;
      BOOL v9 = *(void *)(v2 + 232) != *(void *)(v2 + 224);
      v12[0] = 67240448;
      v12[1] = v9;
      __int16 v13 = 2050;
      double v14 = sub_1009232CC(v2);
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v8,  2LL,  "Skip finding LOI type,poly,%{public}d,radius,%{public}.01lf",  v12,  18);
      uint64_t v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::findAndSetLoiTypeForFences(const std::vector<CLFenceManager_Type::Fence> &)",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

void sub_1009C1C30(uint64_t a1, uint64_t a2)
{
  v7[0] = 0LL;
  v7[1] = v7;
  _DWORD v7[2] = 0x12812000000LL;
  _OWORD v7[3] = sub_1009C801C;
  v7[4] = sub_1009C8028;
  void v7[5] = "/!0";
  sub_1002718F0((char *)&v8, (__int128 *)a2);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  id v6[2] = sub_1009C80A8;
  v6[3] = &unk_101865798;
  _DWORD v6[4] = v7;
  void v6[5] = a1;
  uint64_t v4 = objc_alloc(&OBJC_CLASS___CLCircularRegion);
  CLLocationCoordinate2D v5 = CLLocationCoordinate2DMake(*(CLLocationDegrees *)(a2 + 72), *(CLLocationDegrees *)(a2 + 80));
  objc_msgSend( *(id *)(a1 + 2280),  "fetchLocationOfInterestForRegion:withReply:",   -[CLCircularRegion initWithCenter:radius:identifier:]( v4,  "initWithCenter:radius:identifier:",  @"GeoFence",  v5.latitude,  v5.longitude,  *((double *)sub_100D0ABB4() + 5)),  v6);
  _Block_object_dispose(v7, 8);
  if (__p)
  {
    double v18 = __p;
    operator delete(__p);
  }

  if (v15 < 0) {
    operator delete(v14);
  }
  if (v13 < 0) {
    operator delete(v12);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
}

void sub_1009C1D9C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

NSDictionary *sub_1009C1DBC(uint64_t a1)
{
  uint64_t v1 = sub_100A15664((unsigned int *)(a1 + 32));
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 138412290;
    char v9 = v1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#FenceMetrics submitting metric %@", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    int v6 = 138412290;
    BOOL v7 = v1;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#FenceMetrics submitting metric %@",  &v6,  12);
    CLLocationCoordinate2D v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onBackgroundActivityFired()_block_invoke",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  return v1;
}

id *sub_1009C1F70(uint64_t a1, unsigned __int8 **a2, int a3)
{
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009F3B68(a1 + 120, a2, a3, Current);
  return sub_1001BA1BC(v8);
}

void sub_1009C1FD4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
}

void sub_1009C1FE8(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009F4514(a1 + 120, Current);
}

BOOL sub_1009C200C(uint64_t a1, uint64_t *a2)
{
  return sub_1009F4620(a1 + 120, a2);
}

uint64_t sub_1009C2014(uint64_t a1, uint64_t a2, int a3)
{
  return sub_1009F47DC(a1 + 120, a2, a3);
}

uint64_t sub_1009C201C(uint64_t result, unint64_t a2, unint64_t a3)
{
  if (a2 != a3)
  {
    uint64_t v3 = result;
    if (*(void *)(result + 2224))
    {
      if (a2 || !a3)
      {
        if (!a2 || a3)
        {
          if (a3 < a2)
          {
            uint64_t result = sub_1009F4C98(result + 120);
            if ((result & 1) == 0) {
              return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 344LL))(v3);
            }
          }
        }

        else
        {
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101865AB8);
          }
          BOOL v7 = (os_log_s *)qword_101934878;
          if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 134283777;
            *(void *)&uint8_t buf[4] = a2;
            *(_WORD *)&_BYTE buf[12] = 2049;
            *(void *)&buf[14] = 0LL;
            _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Fence: unregisterForNotification, location, numOfFencesOld, %{private}lu, numOfFenceNew, %{private}lu",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934870 != -1) {
              dispatch_once(&qword_101934870, &stru_101865AB8);
            }
            int v21 = 134283777;
            unint64_t v22 = a2;
            __int16 v23 = 2049;
            unint64_t v24 = 0LL;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence: unregisterForNotification, location, numOfFencesOld, %{private}lu, numOfFenceNew, %{private}lu",  &v21,  22);
            char v13 = (char *)v12;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::updateSubscriptions(const size_t, const size_t)",  "%s\n",  v12);
            if (v13 != buf) {
              free(v13);
            }
          }

          if (_os_feature_enabled_impl("CoreLocation", "Nautilus_AlwaysOn"))
          {
            if (qword_101934880 != -1) {
              dispatch_once(&qword_101934880, &stru_101865AD8);
            }
            uint64_t v8 = (os_log_s *)qword_101934888;
            if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)uint64_t buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#wigo,off,FenceAlwaysOn", buf, 2u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934880 != -1) {
                dispatch_once(&qword_101934880, &stru_101865AD8);
              }
              LOWORD(v21) = 0;
              LODWORD(v1_Block_object_dispose(va, 8) = 2;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "#wigo,off,FenceAlwaysOn",  &v21,  v18);
              __int16 v17 = (char *)v16;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::updateSubscriptions(const size_t, const size_t)",  "%s\n",  v16);
              if (v17 != buf) {
                free(v17);
              }
            }

            [*(id *)(*(void *)(v3 + 2224) + 16) unregister:*(void *)(*(void *)(v3 + 2224) + 8) forNotification:0];
          }

          [*(id *)(*(void *)(v3 + 2224) + 16) unregister:*(void *)(*(void *)(v3 + 2224) + 8) forNotification:22];
          [*(id *)(*(void *)(v3 + 2224) + 16) unregister:*(void *)(*(void *)(v3 + 2224) + 8) forNotification:3];
          return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 344LL))(v3);
        }
      }

      else
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101865AB8);
        }
        int v6 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 134283777;
          *(void *)&uint8_t buf[4] = 0LL;
          *(_WORD *)&_BYTE buf[12] = 2049;
          *(void *)&buf[14] = a3;
          _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Fence: registerForNotification, location, numOfFencesOld, %{private}lu, numOfFenceNew, %{private}lu",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101865AB8);
          }
          int v21 = 134283777;
          unint64_t v22 = 0LL;
          __int16 v23 = 2049;
          unint64_t v24 = a3;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence: registerForNotification, location, numOfFencesOld, %{private}lu, numOfFenceNew, %{private}lu",  &v21,  22);
          char v11 = (char *)v10;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::updateSubscriptions(const size_t, const size_t)",  "%s\n",  v10);
          if (v11 != buf) {
            free(v11);
          }
        }

        [*(id *)(*(void *)(v3 + 2224) + 16) register:*(void *)(*(void *)(v3 + 2224) + 8) forNotification:3 registrationInfo:0];
        [*(id *)(*(void *)(v3 + 2224) + 16) register:*(void *)(*(void *)(v3 + 2224) + 8) forNotification:22 registrationInfo:0];
        uint64_t result = _os_feature_enabled_impl("CoreLocation", "Nautilus_AlwaysOn");
        if ((_DWORD)result)
        {
          sub_1010DDBC0(__p, "none");
          if (*(int *)(v3 + 2384) <= 0)
          {
            if (SHIBYTE(v20) < 0)
            {
              sub_1010DD48C(buf, __p[0], (unint64_t)__p[1]);
            }

            else
            {
              *(_OWORD *)uint64_t buf = *(_OWORD *)__p;
              *(void *)&uint8_t buf[16] = v20;
            }

            sub_100AD5668(v3 + 2376, (uint64_t *)buf);
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }

          if (SHIBYTE(v20) < 0) {
            operator delete(__p[0]);
          }
          if (qword_101934880 != -1) {
            dispatch_once(&qword_101934880, &stru_101865AD8);
          }
          char v9 = (os_log_s *)qword_101934888;
          if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#wigo,on,FenceAlwaysOn", buf, 2u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934880 != -1) {
              dispatch_once(&qword_101934880, &stru_101865AD8);
            }
            LOWORD(v21) = 0;
            LODWORD(v1_Block_object_dispose(va, 8) = 2;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "#wigo,on,FenceAlwaysOn",  &v21,  v18);
            char v15 = (char *)v14;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::updateSubscriptions(const size_t, const size_t)",  "%s\n",  v14);
            if (v15 != buf) {
              free(v15);
            }
          }

          return (uint64_t)[*(id *)(*(void *)(v3 + 2224) + 16) register:*(void *)(*(void *)(v3 + 2224) + 8) forNotification:0 registrationInfo:0];
        }
      }
    }
  }

  return result;
}

void sub_1009C2750( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C278C(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *(unsigned __int8 *)(a1 + 2618);
    *(_DWORD *)uint64_t buf = 67240192;
    int v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Start emergency acquisition, %{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    int v7 = *(unsigned __int8 *)(a1 + 2618);
    LODWORD(v12[0]) = 67240192;
    HIDWORD(v12[0]) = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Start emergency acquisition, %{public}d",  v12,  8);
    char v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::startEmergencyAcquisition()",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  if (!*(_BYTE *)(a1 + 2618))
  {
    *(_BYTE *)(a1 + 261_Block_object_dispose(va, 8) = 1;
    if (_os_feature_enabled_impl("CoreLocation", "Nautilus_AlwaysOn"))
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v4 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Stopped emergency acquisition", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101865AB8);
        }
        LOWORD(v12[0]) = 0;
        LODWORD(v11) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Stopped emergency acquisition",  v12,  v11,  v12[0]);
LABEL_29:
        __int16 v10 = (uint8_t *)v5;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::startEmergencyAcquisition()",  "%s\n",  v5);
        if (v10 != buf) {
          free(v10);
        }
      }
    }

    else
    {
      [*(id *)(*(void *)(a1 + 2224) + 16) register:*(void *)(*(void *)(a1 + 2224) + 8) forNotification:0 registrationInfo:0];
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      int v6 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Started emergency acquisition", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101865AB8);
        }
        LOWORD(v12[0]) = 0;
        LODWORD(v11) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Started emergency acquisition",  v12,  v11,  v12[0]);
        goto LABEL_29;
      }
    }
  }

void sub_1009C2B6C(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *(unsigned __int8 *)(a1 + 2618);
    *(_DWORD *)uint64_t buf = 67240192;
    int v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Stop emergency acquisition, %{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    int v6 = *(unsigned __int8 *)(a1 + 2618);
    LODWORD(v12[0]) = 67240192;
    HIDWORD(v12[0]) = v6;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Stop emergency acquisition, %{public}d",  v12,  8);
    uint64_t v8 = (uint8_t *)v7;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFenceMonitorNotifier::stopEmergencyAcquisition()", "%s\n", v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  if (*(_BYTE *)(a1 + 2618))
  {
    *(_BYTE *)(a1 + 261_Block_object_dispose(va, 8) = 0;
    if (_os_feature_enabled_impl("CoreLocation", "Nautilus_AlwaysOn"))
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v4 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Stopped emergency acquisition", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 == -1)
        {
LABEL_26:
          LOWORD(v12[0]) = 0;
          LODWORD(v11) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Stopped emergency acquisition",  v12,  v11,  v12[0]);
          __int16 v10 = (uint8_t *)v9;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::stopEmergencyAcquisition()",  "%s\n",  v9);
          if (v10 != buf) {
            free(v10);
          }
          return;
        }

void sub_1009C2F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  CLLocationCoordinate2D v5 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v6 = *(void *)(a4 + 4);
    uint64_t v7 = *(void *)(a4 + 12);
    uint64_t v8 = *(void *)(a4 + 20);
    *(_DWORD *)uint64_t buf = 134284033;
    uint64_t v21 = v6;
    __int16 v22 = 2049;
    uint64_t v23 = v7;
    __int16 v24 = 2049;
    uint64_t v25 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Fence: got gps notification, %{private}.8lf, %{private}.8lf, %{private}.1lf",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v9 = *(void *)(a4 + 4);
    uint64_t v10 = *(void *)(a4 + 12);
    uint64_t v11 = *(void *)(a4 + 20);
    int v14 = 134284033;
    uint64_t v15 = v9;
    __int16 v16 = 2049;
    uint64_t v17 = v10;
    __int16 v18 = 2049;
    uint64_t v19 = v11;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: got gps notification, %{private}.8lf, %{private}.8lf, %{private}.1lf",  &v14,  32);
    char v13 = (uint8_t *)v12;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onGpsNotification(int, const CLLocationProvider_Type::Notification &, const CLLocatio nProvider_Type::NotificationData &)",  "%s\n",  v12);
    if (v13 != buf) {
      free(v13);
    }
  }

void sub_1009C312C(uint64_t a1, uint64_t a2, int *a3, _BYTE *a4)
{
  if (*a3 != 5)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v10 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = *a3;
      *(_DWORD *)uint64_t buf = 67240192;
      *(_DWORD *)__int16 v43 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Warning Unhandled notification %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v7 = qword_101934878;
      int v12 = *a3;
      *(_DWORD *)uint64_t v41 = 67240192;
      *(_DWORD *)&v41[4] = v12;
      int v40 = 8;
      uint64_t v8 = "#Warning Unhandled notification %{public}d";
      goto LABEL_39;
    }

    return;
  }

  sub_1004F2598();
  if ((sub_1001B9A1C() & 1) != 0)
  {
    if (_os_feature_enabled_impl("CoreLocation", "cl_fence_handoff"))
    {
      if (*a4)
      {
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101865AB8);
        }
        uint64_t v6 = (os_log_s *)qword_101934878;
        if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Companion is nearby but not yet ready for handoff",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934870 != -1) {
            dispatch_once(&qword_101934870, &stru_101865AB8);
          }
          uint64_t v7 = qword_101934878;
          *(_WORD *)uint64_t v41 = 0;
          int v40 = 2;
          uint64_t v8 = "Companion is nearby but not yet ready for handoff";
LABEL_39:
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v7,  0LL,  v8,  v41,  v40,  *(_OWORD *)v41,  *(void *)&v41[16]);
          __int16 v22 = (uint8_t *)v21;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, co nst CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v21);
          if (v22 != buf) {
            free(v22);
          }
          return;
        }

        return;
      }

      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v31 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        int v32 = sub_1009F4C1C(a1 + 120);
        int v33 = *a4;
        *(_DWORD *)uint64_t buf = 68289538;
        *(_DWORD *)__int16 v43 = 0;
        *(_WORD *)&v43[4] = 2082;
        *(void *)&v43[6] = "";
        *(_WORD *)&v43[14] = 1026;
        *(_DWORD *)&v43[16] = v32;
        __int16 v44 = 1026;
        int v45 = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:Connected state of watch changed, from:%{public}hhd, to:%{public}hhd}",  buf,  0x1Eu);
      }

      double Current = CFAbsoluteTimeGetCurrent();
      uint64_t v29 = a1 + 120;
      int v30 = 0;
    }

    else
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v23 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
      {
        int v24 = sub_1009F4C1C(a1 + 120);
        uint64_t v25 = "No";
        if (v24) {
          uint64_t v26 = "Yes";
        }
        else {
          uint64_t v26 = "No";
        }
        if (*a4) {
          uint64_t v25 = "Yes";
        }
        *(_DWORD *)uint64_t buf = 136380931;
        *(void *)__int16 v43 = v26;
        *(_WORD *)&v43[8] = 2081;
        *(void *)&_BYTE v43[10] = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_INFO,  "Connected state changed from %{private}s to %{private}s",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101865AB8);
        }
        uint64_t v34 = qword_101934878;
        int v35 = sub_1009F4C1C(a1 + 120);
        __int128 v36 = "No";
        if (v35) {
          int v37 = "Yes";
        }
        else {
          int v37 = "No";
        }
        if (*a4) {
          __int128 v36 = "Yes";
        }
        *(_DWORD *)uint64_t v41 = 136380931;
        *(void *)&v41[4] = v37;
        *(_WORD *)&v41[12] = 2081;
        *(void *)&v41[14] = v36;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v34,  1LL,  "Connected state changed from %{private}s to %{private}s",  v41,  22);
        uint64_t v39 = (uint8_t *)v38;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, cons t CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v38);
        if (v39 != buf) {
          free(v39);
        }
      }

      int v27 = *a4;
      double Current = CFAbsoluteTimeGetCurrent();
      uint64_t v29 = a1 + 120;
      int v30 = v27;
    }

    sub_1009F4CF8(v29, v30, Current);
    return;
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  char v13 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = sub_1009F4C1C(a1 + 120);
    uint64_t v15 = "No";
    if (v14) {
      __int16 v16 = "Yes";
    }
    else {
      __int16 v16 = "No";
    }
    if (*a4) {
      uint64_t v15 = "Yes";
    }
    *(_DWORD *)uint64_t buf = 136380931;
    *(void *)__int16 v43 = v16;
    *(_WORD *)&v43[8] = 2081;
    *(void *)&_BYTE v43[10] = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Connected state changed from %{private}s to %{private}s",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v17 = qword_101934878;
    int v18 = sub_1009F4C1C(a1 + 120);
    uint64_t v19 = "No";
    if (v18) {
      uint64_t v20 = "Yes";
    }
    else {
      uint64_t v20 = "No";
    }
    if (*a4) {
      uint64_t v19 = "Yes";
    }
    *(_DWORD *)uint64_t v41 = 136380931;
    *(void *)&v41[4] = v20;
    *(_WORD *)&v41[12] = 2081;
    *(void *)&v41[14] = v19;
    int v40 = 22;
    uint64_t v8 = "Connected state changed from %{private}s to %{private}s";
    uint64_t v7 = v17;
    goto LABEL_39;
  }

void sub_1009C37E0(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (*a3 == 3)
  {
    *(_OWORD *)(a1 + 2776) = *(_OWORD *)a4;
    __int128 v17 = *(_OWORD *)(a4 + 16);
    __int128 v18 = *(_OWORD *)(a4 + 32);
    __int128 v19 = *(_OWORD *)(a4 + 64);
    *(_OWORD *)(a1 + 2824) = *(_OWORD *)(a4 + 48);
    *(_OWORD *)(a1 + 284sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v19;
    *(_OWORD *)(a1 + 2792) = v17;
    *(_OWORD *)(a1 + 280_Block_object_dispose(va, 8) = v18;
    __int128 v20 = *(_OWORD *)(a4 + 80);
    __int128 v21 = *(_OWORD *)(a4 + 96);
    __int128 v22 = *(_OWORD *)(a4 + 112);
    *(void *)(a1 + 2904) = *(void *)(a4 + 128);
    *(_OWORD *)(a1 + 2872) = v21;
    *(_OWORD *)(a1 + 288_Block_object_dispose(va, 8) = v22;
    *(_OWORD *)(a1 + 2856) = v20;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v23 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 67175937;
      *(_DWORD *)__int16 v43 = CLMotionActivity::isStatic((CLMotionActivity *)(a1 + 2640));
      *(_WORD *)&v43[4] = 1025;
      *(_DWORD *)&v43[6] = CLMotionActivity::isWalking((CLMotionActivity *)(a1 + 2640));
      *(_WORD *)__int16 v44 = 1025;
      *(_DWORD *)&v44[2] = CLMotionActivity::isDriving((CLMotionActivity *)(a1 + 2640));
      __int16 v45 = 1025;
      int v46 = CLMotionActivity::isInVehicle((CLMotionActivity *)(a1 + 2640));
      __int16 v47 = 1025;
      int isRunning = CLMotionActivity::isRunning((CLMotionActivity *)(a1 + 2640));
      __int16 v49 = 1025;
      int isCycling = CLMotionActivity::isCycling((CLMotionActivity *)(a1 + 2640));
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "Received dominant motion state,static,%{private}d,walking,%{private}d,driving,%{private}d,inVehicle,%{private}d, running,%{private}d,cycling,%{private}d",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v24 = qword_101934878;
      uint64_t v25 = (CLMotionActivity *)(a1 + 2640);
      int v33 = 67175937;
      *(_DWORD *)uint64_t v34 = CLMotionActivity::isStatic(v25);
      *(_WORD *)&v34[4] = 1025;
      *(_DWORD *)&v34[6] = CLMotionActivity::isWalking(v25);
      *(_WORD *)int v35 = 1025;
      *(_DWORD *)&void v35[2] = CLMotionActivity::isDriving(v25);
      __int16 v36 = 1025;
      int v37 = CLMotionActivity::isInVehicle(v25);
      __int16 v38 = 1025;
      int v39 = CLMotionActivity::isRunning(v25);
      __int16 v40 = 1025;
      int v41 = CLMotionActivity::isCycling(v25);
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v24,  2LL,  "Received dominant motion state,static,%{private}d,walking,%{private}d,driving,%{private}d,inVehicle,%{private}d, running,%{private}d,cycling,%{private}d",  &v33,  38);
      __int16 v16 = (uint8_t *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onMotionStateNotification(int, const CLMotionState_Type::Notification &, const CLMo tionState_Type::NotificationData &)",  "%s\n",  v26);
      if (v16 != buf) {
        goto LABEL_30;
      }
    }
  }

  else
  {
    if (*a3 == 2)
    {
      CLLocationCoordinate2D v5 = (CLMotionActivity *)(a1 + 2640);
      *(_OWORD *)(a1 + 264sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = *(_OWORD *)a4;
      __int128 v6 = *(_OWORD *)(a4 + 16);
      __int128 v7 = *(_OWORD *)(a4 + 32);
      __int128 v8 = *(_OWORD *)(a4 + 48);
      *(_OWORD *)(a1 + 2704) = *(_OWORD *)(a4 + 64);
      *(_OWORD *)(a1 + 268_Block_object_dispose(va, 8) = v8;
      *(_OWORD *)(a1 + 2672) = v7;
      *(_OWORD *)(a1 + 2656) = v6;
      __int128 v9 = *(_OWORD *)(a4 + 80);
      __int128 v10 = *(_OWORD *)(a4 + 96);
      __int128 v11 = *(_OWORD *)(a4 + 112);
      *(void *)(a1 + 276_Block_object_dispose(va, 8) = *(void *)(a4 + 128);
      *(_OWORD *)(a1 + 2752) = v11;
      *(_OWORD *)(a1 + 2736) = v10;
      *(_OWORD *)(a1 + 272sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v9;
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      int v12 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)uint64_t buf = 67175425;
        *(_DWORD *)__int16 v43 = CLMotionActivity::isStatic(v5);
        *(_WORD *)&v43[4] = 1025;
        *(_DWORD *)&v43[6] = CLMotionActivity::isWalking(v5);
        *(_WORD *)__int16 v44 = 1025;
        *(_DWORD *)&v44[2] = CLMotionActivity::isDriving(v5);
        __int16 v45 = 1025;
        int v46 = CLMotionActivity::isInVehicle(v5);
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Received motion state,static,%{private}d,walking,%{private}d,driving,%{private}d,inVehicle,%{private}d",  buf,  0x1Au);
      }

      if (!sub_1002921D0(115, 2)) {
        return;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v13 = qword_101934878;
      int v33 = 67175425;
      *(_DWORD *)uint64_t v34 = CLMotionActivity::isStatic(v5);
      *(_WORD *)&v34[4] = 1025;
      *(_DWORD *)&v34[6] = CLMotionActivity::isWalking(v5);
      *(_WORD *)int v35 = 1025;
      *(_DWORD *)&void v35[2] = CLMotionActivity::isDriving(v5);
      __int16 v36 = 1025;
      int v37 = CLMotionActivity::isInVehicle(v5);
      double v14 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v13,  2LL,  "Received motion state,static,%{private}d,walking,%{private}d,driving,%{private}d,inVehicle,%{private}d",  &v33,  26);
      __int16 v16 = v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onMotionStateNotification(int, const CLMotionState_Type::Notification &, const CLMo tionState_Type::NotificationData &)",  "%s\n",  v14);
    }

    else
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v28 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_ERROR))
      {
        int v29 = *a3;
        *(_DWORD *)uint64_t buf = 136315394;
        *(void *)__int16 v43 = "onMotionStateNotification";
        *(_WORD *)&v43[8] = 1026;
        *(_DWORD *)__int16 v44 = v29;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "%s, Unhandled notification %{public}d",  buf,  0x12u);
      }

      if (!sub_1002921D0(115, 0)) {
        return;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      int v30 = *a3;
      int v33 = 136315394;
      *(void *)uint64_t v34 = "onMotionStateNotification";
      *(_WORD *)&v34[8] = 1026;
      *(_DWORD *)int v35 = v30;
      double v31 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  16LL,  "%s, Unhandled notification %{public}d",  &v33,  18);
      __int16 v16 = v32;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceMonitorNotifier::onMotionStateNotification(int, const CLMotionState_Type::Notification &, const CLMo tionState_Type::NotificationData &)",  "%s\n",  v31);
    }

    if (v16 != buf) {
LABEL_30:
    }
      free(v16);
  }

uint64_t sub_1009C3E48(uint64_t result, uint64_t a2, _DWORD *a3)
{
  if (*a3 == 11)
  {
    uint64_t v3 = result;
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v4 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#significantRegion model change event",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v7[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion model change event",  v7,  2);
      __int128 v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onDarwinNotification(int, const CLDarwinNotifier_Type::Notification &, const CLDarw inNotifier_Type::NotificationData &)",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }

    CFAbsoluteTimeGetCurrent();
    return sub_100A0079C(v3 + 120);
  }

  return result;
}

uint64_t sub_1009C3FF0(uint64_t a1, uint64_t a2)
{
  return sub_100A00584(a1 + 120, a2);
}

void sub_1009C3FF8(uint64_t a1, uint64_t a2, int *a3, double *a4)
{
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009FC3F4(a1 + 120, a3, a4, Current);
}

id sub_1009C4034(uint64_t a1, uint64_t a2, double a3)
{
  *(CFAbsoluteTime *)(a1 + 2592) = CFAbsoluteTimeGetCurrent();
  id result = (id)sub_1009F4C34(a1 + 120);
  if ((_DWORD)result)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    __int128 v7 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 2568);
      int v9 = *(unsigned __int8 *)(a1 + 2584);
      *(_DWORD *)uint64_t buf = 136381443;
      uint64_t v23 = a2;
      __int16 v24 = 2049;
      uint64_t v25 = v8;
      __int16 v26 = 1025;
      int v27 = v9;
      __int16 v28 = 2049;
      double v29 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Fence: triggerReceived, reason, %{private}s, schedule, %{private}p, pending, %{private}d, interval, %{private}lf",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v10 = *(void *)(a1 + 2568);
      int v11 = *(unsigned __int8 *)(a1 + 2584);
      int v14 = 136381443;
      uint64_t v15 = a2;
      __int16 v16 = 2049;
      uint64_t v17 = v10;
      __int16 v18 = 1025;
      int v19 = v11;
      __int16 v20 = 2049;
      double v21 = a3;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: triggerReceived, reason, %{private}s, schedule, %{private}p, pending, %{private}d, interval, %{private}lf",  &v14,  38);
      uint64_t v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::triggerReceived(const char *, CFTimeInterval)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    id result = *(id *)(a1 + 2568);
    if (result)
    {
      if (!*(_BYTE *)(a1 + 2584))
      {
        id result = [result setNextFireDelay:a3];
        *(_BYTE *)(a1 + 2584) = 1;
      }
    }
  }

  return result;
}

id sub_1009C4270(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Fence: cancelTriggerWake", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: cancelTriggerWake",  v6,  2);
    CLLocationCoordinate2D v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFenceMonitorNotifier::cancelTriggerWake()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  id result = *(id *)(a1 + 2336);
  if (result) {
    return sub_1006B6294((uint64_t)result);
  }
  return result;
}

void *sub_1009C440C(void *result, double *a2)
{
  if (result[292])
  {
    uint64_t v3 = result;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    return sub_1006B6014(v3[292], Current + *a2);
  }

  return result;
}

uint64_t sub_1009C4450(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 2616);
}

void sub_1009C4458(uint64_t a1, double *a2)
{
  if (*(void *)(a1 + 2360))
  {
    *(_BYTE *)(a1 + 2616) = 1;
    sub_1010DDBC0(__p, "onLocationWatchdog");
    if (*(int *)(a1 + 2432) <= 0)
    {
      if (SHIBYTE(v16) < 0)
      {
        sub_1010DD48C(buf, __p[0], (unint64_t)__p[1]);
      }

      else
      {
        *(_OWORD *)uint64_t buf = *(_OWORD *)__p;
        *(void *)&uint8_t buf[16] = v16;
      }

      sub_100AD5668(a1 + 2424, (uint64_t *)buf);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (SHIBYTE(v16) < 0) {
      operator delete(__p[0]);
    }
    sub_100A01768(a1 + 120);
    double Current = CFAbsoluteTimeGetCurrent();
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      double v9 = *a2;
      double v10 = Current + *a2;
      *(_DWORD *)uint64_t buf = 134283777;
      *(double *)&uint8_t buf[4] = v10;
      *(_WORD *)&_BYTE buf[12] = 2049;
      *(double *)&buf[14] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: scheduleLocationWatchdog, at %{private}.1lf, in, %{private}.1lf, seconds",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v11 = *(void *)a2;
      double v12 = Current + *a2;
      int v17 = 134283777;
      double v18 = v12;
      __int16 v19 = 2049;
      uint64_t v20 = v11;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: scheduleLocationWatchdog, at %{private}.1lf, in, %{private}.1lf, seconds",  &v17,  22);
      int v14 = (char *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::scheduleLocationWatchdog(const CFTimeInterval &)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }

    [*(id *)(a1 + 2360) setNextFireDelay:*a2];
    sub_100A01758(a1 + 120);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v4 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: scheduleLocationWatchdog, ignore, shutdown?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      LOWORD(v17) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: scheduleLocationWatchdog, ignore, shutdown?",  &v17,  2);
      __int128 v6 = (char *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::scheduleLocationWatchdog(const CFTimeInterval &)",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

void sub_1009C4814( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C4850(uint64_t a1, double *a2)
{
  if (*(void *)(a1 + 2920))
  {
    double Current = CFAbsoluteTimeGetCurrent();
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    CLLocationCoordinate2D v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      double v6 = *a2;
      double v7 = Current + *a2;
      *(_DWORD *)uint64_t buf = 134283777;
      double v20 = v7;
      __int16 v21 = 2049;
      double v22 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, scheduleMiLoLocalizerWaitTimer, at %{private}.1lf, in, %{private}.1lf, seconds",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      double v9 = *a2;
      double v10 = Current + *a2;
      int v15 = 134283777;
      double v16 = v10;
      __int16 v17 = 2049;
      double v18 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, scheduleMiLoLocalizerWaitTimer, at %{private}.1lf, in, %{private}.1lf, seconds",  &v15,  22);
      double v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::scheduleMiLoLocalizerWaitTimer(const CFTimeInterval &)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }

    sub_1006B6014(*(void *)(a1 + 2920), Current + *a2);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, scheduleMiLoLocalizerWaitTimer, ignore, shutdown?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      LOWORD(v15) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, scheduleMiLoLocalizerWaitTimer, ignore, shutdown?",  &v15,  2);
      int v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::scheduleMiLoLocalizerWaitTimer(const CFTimeInterval &)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

void sub_1009C4B80(uint64_t a1)
{
  if (*(void *)(a1 + 2920))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v2 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, cancelMiLoLocalizerWaitTimer",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v8[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, cancelMiLoLocalizerWaitTimer",  v8,  2);
      CLLocationCoordinate2D v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::cancelMiLoLocalizerWaitTimer()",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }

    sub_1006B6294(*(void *)(a1 + 2920));
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, cancelMiLoLocalizerWaitTimer, ignore, shutdown?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v8[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, cancelMiLoLocalizerWaitTimer, ignore, shutdown?",  v8,  2);
      double v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::cancelMiLoLocalizerWaitTimer()",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  *(_DWORD *)(a1 + 2936) = 0;
}

uint64_t sub_1009C4E4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 2936);
}

void sub_1009C4E54(uint64_t a1, double *a2)
{
  if (*(void *)(a1 + 2928))
  {
    double Current = CFAbsoluteTimeGetCurrent();
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    CLLocationCoordinate2D v5 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      double v6 = *a2;
      double v7 = Current + *a2;
      *(_DWORD *)uint64_t buf = 134283777;
      double v20 = v7;
      __int16 v21 = 2049;
      double v22 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, scheduleMiLoMetricsGpsWaitTimer, at %{private}.1lf, in, %{private}.1lf, seconds",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      double v9 = *a2;
      double v10 = Current + *a2;
      int v15 = 134283777;
      double v16 = v10;
      __int16 v17 = 2049;
      double v18 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, scheduleMiLoMetricsGpsWaitTimer, at %{private}.1lf, in, %{private}.1lf, seconds",  &v15,  22);
      double v12 = (uint8_t *)v11;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::scheduleMiLoMetricsGpsWaitTimer(const CFTimeInterval &)",  "%s\n",  v11);
      if (v12 != buf) {
        free(v12);
      }
    }

    sub_1006B6014(*(void *)(a1 + 2928), Current + *a2);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, scheduleMiLoMetricsGpsWaitTimer, ignore, shutdown?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      LOWORD(v15) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, scheduleMiLoMetricsGpsWaitTimer, ignore, shutdown?",  &v15,  2);
      int v14 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::scheduleMiLoMetricsGpsWaitTimer(const CFTimeInterval &)",  "%s\n",  v13);
      if (v14 != buf) {
        free(v14);
      }
    }
  }

void sub_1009C5184(uint64_t a1)
{
  if (*(void *)(a1 + 2928))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v2 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, cancelMiLoMetricsGpsWaitTimer",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v8[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, cancelMiLoMetricsGpsWaitTimer",  v8,  2);
      CLLocationCoordinate2D v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::cancelMiLoMetricsGpsWaitTimer()",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }

    sub_1006B6294(*(void *)(a1 + 2928));
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, cancelMiLoMetricsGpsWaitTimer, ignore, shutdown?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v8[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, cancelMiLoMetricsGpsWaitTimer, ignore, shutdown?",  v8,  2);
      double v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::cancelMiLoMetricsGpsWaitTimer()",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

void sub_1009C5450(_BYTE *a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, onMiLoMetircsGpsWaitTimerExpired",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v9[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, onMiLoMetircsGpsWaitTimerExpired",  v9,  2);
    CLLocationCoordinate2D v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onMiLoMetircsGpsWaitTimerExpired(CLPersistentTimer *)",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  sub_100A07788((uint64_t)(a1 + 120));
  if (!a1[2616])
  {
    (*(void (**)(_BYTE *))(*(void *)a1 + 392LL))(a1);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, onMiLoMetircsGpsWaitTimerExpired, stopGps",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v9[0] = 0;
      LODWORD(v_Block_object_dispose(va, 8) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, onMiLoMetircsGpsWaitTimerExpired, stopGps",  v9,  v8);
      double v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onMiLoMetircsGpsWaitTimerExpired(CLPersistentTimer *)",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

uint64_t sub_1009C5728(uint64_t a1)
{
  if (*(void *)(a1 + 2360))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v2 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Fence: cancelLocationWatchdog", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v10[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: cancelLocationWatchdog",  v10,  2);
      double v7 = (uint8_t *)v6;
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFenceMonitorNotifier::cancelLocationWatchdog()", "%s\n", v6);
      if (v7 != buf) {
        free(v7);
      }
    }

    [*(id *)(a1 + 2360) setNextFireDelay:1.79769313e308];
    *(_BYTE *)(a1 + 2616) = 0;
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Fence: cancelLocationWatchdog, ignore, shutdown?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v10[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: cancelLocationWatchdog, ignore, shutdown?",  v10,  2);
      double v9 = (uint8_t *)v8;
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFenceMonitorNotifier::cancelLocationWatchdog()", "%s\n", v8);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 400LL))(a1);
  if ((_DWORD)result)
  {
    double Current = CFAbsoluteTimeGetCurrent();
    uint64_t result = sub_100A012DC(a1 + 120, Current);
  }

  return result;
}

id sub_1009C5A34(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Fence: cancelDeassociationDelayedTrigger",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: cancelDeassociationDelayedTrigger",  v6,  2);
    CLLocationCoordinate2D v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::cancelDeassociationDelayedTrigger()",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  id result = *(id *)(a1 + 2344);
  if (result) {
    return sub_1006B6294((uint64_t)result);
  }
  return result;
}

void *sub_1009C5BD0(void *result, double *a2)
{
  if (result[293])
  {
    uint64_t v3 = result;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    return sub_1006B6014(v3[293], Current + *a2);
  }

  return result;
}

double sub_1009C5C14(uint64_t a1)
{
  if (*(void *)(a1 + 2352))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v2 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Fence: cancelTrackingWake", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v9[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: cancelTrackingWake",  v9,  2);
      double v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFAbsoluteTime CLFenceMonitorNotifier::cancelTrackingWake()",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }

    sub_1006B6294(*(void *)(a1 + 2352));
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Fence: ignoring, cancelTrackingWake, shutdown?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v9[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: ignoring, cancelTrackingWake, shutdown?",  v9,  2);
      uint64_t v8 = (uint8_t *)v7;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFAbsoluteTime CLFenceMonitorNotifier::cancelTrackingWake()",  "%s\n",  v7);
      if (v8 != buf) {
        free(v8);
      }
    }
  }

  return 0.0;
}

double sub_1009C5EE4(uint64_t a1, double *a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v5 = *(void *)(a1 + 2352);
  if (v5)
  {
    double v6 = Current + *a2;
    sub_1006B6014(v5, v6);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    double v7 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Fence: ignoring, setNextTrackingWake, shutdown?",  buf,  2u);
    }

    double v6 = 0.0;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v11[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: ignoring, setNextTrackingWake, shutdown?",  v11,  2);
      double v10 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFAbsoluteTime CLFenceMonitorNotifier::setNextTrackingWake(const CFTimeInterval &)",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }
  }

  return v6;
}

void sub_1009C60A0(uint64_t a1, double a2)
{
  double v4 = CFAbsoluteTimeGetCurrent() + a2;
  sub_1006B6014(*(void *)(a1 + 2576), v4);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v5 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 134218240;
    double v14 = a2;
    __int16 v15 = 2048;
    double v16 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "converging state change timer, scheduled, interval, %.2f, fireTime, %f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    int v9 = 134218240;
    double v10 = a2;
    __int16 v11 = 2048;
    double v12 = v4;
    LODWORD(v_Block_object_dispose(va, 8) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "converging state change timer, scheduled, interval, %.2f, fireTime, %f",  COERCE_DOUBLE(&v9),  v8);
    double v7 = (uint8_t *)v6;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::scheduleConvergingStateChangeTimer(CFTimeInterval)",  "%s\n",  v6);
    if (v7 != buf) {
      free(v7);
    }
  }

uint64_t sub_1009C6278(uint64_t *a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "converging state change timer, canceled",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v10[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "converging state change timer, canceled",  v10,  2);
    double v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::cancelConvergingStateChangeTimer()",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  uint64_t result = (*(uint64_t (**)(uint64_t *))(*a1 + 176))(a1);
  if ((_DWORD)result)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    double v4 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "converging state change timer, gnss session ended",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v10[0] = 0;
      LODWORD(v9) = 2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "converging state change timer, gnss session ended",  v10,  v9);
      double v8 = (uint8_t *)v7;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::cancelConvergingStateChangeTimer()",  "%s\n",  v7);
      if (v8 != buf) {
        free(v8);
      }
    }

    return (*(uint64_t (**)(uint64_t *))(*a1 + 192))(a1);
  }

  return result;
}

void sub_1009C6560(uint64_t a1, int a2, double a3)
{
}

BOOL sub_1009C6568(uint64_t a1)
{
  return *(void *)(a1 + 2264) != 0LL;
}

void sub_1009C6578(uint64_t a1)
{
  if (*(int *)(a1 + 2528) < 1)
  {
    sub_1010DDBC0(__p, "none");
    sub_100AD5668(a1 + 2520, (uint64_t *)__p);
    if (v6 < 0) {
      operator delete(__p[0]);
    }
    sub_100A9E608();
  }

  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v1 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "converging state, GNSS already started", buf, 2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    LOWORD(v7) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  16LL,  "converging state, GNSS already started",  &v7,  2);
    uint64_t v3 = (char *)v2;
    sub_10029211C("Generic", 1LL, 0, 0LL, "virtual void CLFenceMonitorNotifier::startConvergingStateGNSS()", "%s\n", v2);
  }

void sub_1009C691C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C6940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  BOOL v6 = os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG);
  if (v6)
  {
    char v12 = 1;
    uint64_t v9 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLFenceMonitorNotifier::onGpsNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v9, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    double v10 = (os_log_s *)qword_1019349D8;
    BOOL v6 = os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG);
    if (v6)
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v14 = 0;
      __int16 v15 = 2082;
      double v16 = "";
      __int16 v17 = 2082;
      double v18 = "activity";
      __int16 v19 = 2050;
      uint64_t v20 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLFenceMonitorNotifier::onGpsNotification, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v12 = 0;
  }

  sub_1009C2F44(v6, v7, v8, a3);
  if (v12) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009C6AEC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009C6B0C(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "converging state, cancelling GNSS", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "converging state, cancelling GNSS",  v6,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::cancelConvergingStateGNSS()",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  sub_100AD5D38(a1 + 2520);
  uint64_t result = *(void *)(a1 + 2264);
  *(void *)(a1 + 2264) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

void sub_1009C6CBC(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "converging state, onConvergingStateChangeTimerFired",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "converging state, onConvergingStateChangeTimerFired",  v6,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onConvergingStateChangeTimerFired(CLPersistentTimer *)",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_1009FF2D0(a1 + 120, Current);
}

void sub_1009C6E58(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Fence: MiLo, onMiLoLocalizerWaitTimerExpired",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: MiLo, onMiLoLocalizerWaitTimerExpired",  v6,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onMiLoLocalizerWaitTimerExpired(CLPersistentTimer *)",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  double Current = CFAbsoluteTimeGetCurrent();
  *(_DWORD *)(a1 + 2936) = 0;
  sub_1009FF2C8(a1 + 120, Current);
}

dispatch_source_s *sub_1009C6FF8(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Fence: CLFenceMonitor, shutdown", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v8[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: CLFenceMonitor, shutdown",  v8,  2);
    uint64_t v7 = (uint8_t *)v6;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFenceMonitorNotifier::shutdown()", "%s\n", v6);
    if (v7 != buf) {
      free(v7);
    }
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_100A012DC(a1 + 120, Current);
  uint64_t result = *(dispatch_source_s **)(a1 + 2328);
  if (result)
  {
    dispatch_source_cancel(result);
    uint64_t v5 = *(dispatch_object_s **)(a1 + 2328);
    *(void *)(a1 + 232_Block_object_dispose(va, 8) = 0LL;
    dispatch_release(v5);
    return (dispatch_source_s *)[*(id *)(a1 + 2288) clearExitAndEntryScanNetworks:1];
  }

  return result;
}

dispatch_source_s *sub_1009C71BC(uint64_t a1)
{
  return sub_1009C6FF8(a1 - 8);
}

void sub_1009C71C4(uint64_t a1, uint64_t a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  double v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint64_t buf = 136380675;
    *(void *)&uint8_t buf[4] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Fence: request update, reason, %{private}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    int v21 = 136380675;
    uint64_t v22 = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  1LL,  "Fence: request update, reason, %{private}s",  &v21,  12);
    uint64_t v8 = (char *)v7;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::requestWifiLocationUpdate(const char *)",  "%s\n",  v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  sub_100A01760(a1 + 120);
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1010DDBC0(__p, "geofence");
  sub_100495E50(buf, 4LL, 0LL, __p, Current);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  id v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "vendor"), "proxyForService:", @"CLWifiLocationProvider");
  uint64_t v9 = *(void *)buf;
  char v10 = buf[8];
  if (SHIBYTE(v25) < 0)
  {
    sub_1010DD48C(&v11, (void *)v24, *((unint64_t *)&v24 + 1));
  }

  else
  {
    __int128 v11 = v24;
    uint64_t v12 = v25;
  }

  __int128 v14 = v27;
  __int128 v15 = v28;
  v16[0] = v29[0];
  *(_OWORD *)((char *)v16 + 12) = *(_OWORD *)((char *)v29 + 12);
  __int128 v13 = v26;
  if (SHIBYTE(v31) < 0)
  {
    sub_1010DD48C(&v17, (void *)v30, *((unint64_t *)&v30 + 1));
  }

  else
  {
    __int128 v17 = v30;
    uint64_t v18 = v31;
  }

  [v6 requestLocationUpdateWithParameters:sub_10039A914((uint64_t)&v9)];
  if (SHIBYTE(v18) < 0) {
    operator delete((void *)v17);
  }
  if (SHIBYTE(v12) < 0) {
    operator delete((void *)v11);
  }
  if (SHIBYTE(v31) < 0) {
    operator delete((void *)v30);
  }
  if (SHIBYTE(v25) < 0) {
    operator delete((void *)v24);
  }
}

void sub_1009C74CC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, void *a33, uint64_t a34, int a35, __int16 a36, char a37, char a38, uint64_t a39, uint64_t a40, char a41)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_1002DDC84((uint64_t)&a41);
  _Unwind_Resume(a1);
}

void sub_1009C7528(uint64_t a1, uint64_t a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  double v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 2624);
    int v6 = *(unsigned __int8 *)(a1 + 2619);
    *(_DWORD *)uint64_t buf = 136381187;
    uint64_t v19 = a2;
    __int16 v20 = 2049;
    uint64_t v21 = v5;
    __int16 v22 = 1025;
    int v23 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: createActivityAlarm, %{private}s, %{private}p, fIsUseActivityAlarm, %{private}d",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v7 = *(void *)(a1 + 2624);
    int v8 = *(unsigned __int8 *)(a1 + 2619);
    int v12 = 136381187;
    uint64_t v13 = a2;
    __int16 v14 = 2049;
    uint64_t v15 = v7;
    __int16 v16 = 1025;
    int v17 = v8;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: createActivityAlarm, %{private}s, %{private}p, fIsUseActivityAlarm, %{private}d",  &v12,  28);
    char v10 = (uint8_t *)v9;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::createActivityAlarm(const char *)",  "%s\n",  v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  if (*(_BYTE *)(a1 + 2619))
  {
    if (!*(void *)(a1 + 2624))
    {
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472LL;
      _OWORD v11[2] = sub_1009C778C;
      uint64_t v11[3] = &unk_10182FA08;
      v11[4] = a1;
      *(void *)(a1 + 2624) = -[CMActivityAlarmLocal initWithTrigger:duration:onQueue:withHandler:]( [CMActivityAlarmLocal alloc],  "initWithTrigger:duration:onQueue:withHandler:",  6,  [*(id *)(a1 + 48) queue],  v11,  900.0);
    }
  }

void sub_1009C778C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  double Current = CFAbsoluteTimeGetCurrent();
  double v22 = Current;
  if (a3) {
    uint64_t v7 = (char *)objc_msgSend(objc_msgSend(a3, "description"), "UTF8String");
  }
  else {
    uint64_t v7 = "ok";
  }
  sub_1010DDBC0(__p, v7);
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  int v8 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_INFO))
  {
    int v9 = v21;
    char v10 = (void **)__p[0];
    unsigned int v11 = [a2 trigger];
    int v12 = __p;
    *(_DWORD *)uint64_t buf = 134284035;
    if (v9 < 0) {
      int v12 = v10;
    }
    __int128 v30 = a2;
    __int16 v31 = 2081;
    int v32 = v12;
    __int16 v33 = 1025;
    unsigned int v34 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "Fence: activityAlarmHandler, %{private}p, %{private}s, trigger, %{private}d",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v13 = qword_101934878;
    int v14 = v21;
    uint64_t v15 = (void **)__p[0];
    unsigned int v16 = [a2 trigger];
    int v17 = __p;
    int v23 = 134284035;
    if (v14 < 0) {
      int v17 = v15;
    }
    __int128 v24 = a2;
    __int16 v25 = 2081;
    __int128 v26 = v17;
    __int16 v27 = 1025;
    unsigned int v28 = v16;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v13,  1LL,  "Fence: activityAlarmHandler, %{private}p, %{private}s, trigger, %{private}d",  &v23,  28);
    uint64_t v19 = (uint8_t *)v18;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::createActivityAlarm(const char *)_block_invoke",  "%s\n",  v18);
    if (v19 != buf) {
      free(v19);
    }
  }

  sub_100A00828(v5 + 120, Current);
  sub_1009F7318(v5 + 120, (uint64_t)"kNotificationDelayTriggerReceived", 0, &v22);
  (*(void (**)(uint64_t, const char *))(*(void *)v5 + 320LL))(v5, "createActivityAlarm-cleanup");
  if (v21 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1009C7A3C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C7A6C(uint64_t a1, uint64_t a2)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  double v4 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 2624);
    *(_DWORD *)uint64_t buf = 136380931;
    uint64_t v15 = a2;
    __int16 v16 = 2049;
    uint64_t v17 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Fence: releaseActivityAlarm, %{private}s, %{private}p",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v7 = *(void *)(a1 + 2624);
    int v10 = 136380931;
    uint64_t v11 = a2;
    __int16 v12 = 2049;
    uint64_t v13 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: releaseActivityAlarm, %{private}s, %{private}p",  &v10,  22);
    int v9 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::releaseActivityAlarm(const char *)",  "%s\n",  v8);
    if (v9 != buf) {
      free(v9);
    }
  }

  int v6 = *(void **)(a1 + 2624);
  if (v6)
  {
    [v6 invalidate];

    *(void *)(a1 + 2624) = 0LL;
  }

id sub_1009C7C50(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Fence: cancelSettledTimer", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: cancelSettledTimer",  v6,  2);
    uint64_t v5 = (uint8_t *)v4;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFenceMonitorNotifier::cancelSettledTimer()", "%s\n", v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  id result = *(id *)(a1 + 2368);
  if (result) {
    return sub_1006B6294((uint64_t)result);
  }
  return result;
}

void sub_1009C7DEC(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  uint64_t v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 134283521;
    uint64_t v10 = 0x4072C00000000000LL;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Fence: scheduleNextSettledTimer in, %{private}.1lf",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    int v7 = 134283521;
    uint64_t v8 = 0x4072C00000000000LL;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: scheduleNextSettledTimer in, %{private}.1lf",  &v7,  12);
    int v6 = (uint8_t *)v5;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFenceMonitorNotifier::scheduleSettledTimer()", "%s\n", v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  uint64_t v3 = *(void *)(a1 + 2368);
  if (v3)
  {
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    sub_1006B6014(v3, Current + 300.0);
  }

uint64_t sub_1009C7FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, void))(*(void *)(a1 + 8) + 152LL))( a1 + 8,  a2,  a3,  0LL,  0xFFFFFFFFLL,  0LL);
}

BOOL sub_1009C7FDC(uint64_t a1)
{
  return *(void *)(a1 + 2280) != 0LL;
}

id sub_1009C7FEC(uint64_t a1)
{
  return [*(id *)(a1 + 2280) startMonitoringScenarioTriggerOfType:1 forClient:CLISP_ME_TOKEN];
}

id sub_1009C8004(uint64_t a1)
{
  return [*(id *)(a1 + 2280) stopMonitoringScenarioTriggerOfType:1 forClient:CLISP_ME_TOKEN];
}

char *sub_1009C801C(uint64_t a1, uint64_t a2)
{
  return sub_1002718F0((char *)(a1 + 48), (__int128 *)(a2 + 48));
}

void sub_1009C8028(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 272);
  if (v2)
  {
    *(void *)(a1 + 28sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v2;
    operator delete(v2);
  }
}

void sub_1009C80A8(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    double v4 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8LL);
      int v6 = (void *)(v5 + 72);
      *(_DWORD *)uint64_t buf = 136380675;
      id v27 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#Warning, error requesting LOI for fence %{private}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8LL);
      uint64_t v8 = (void *)(v7 + 72);
      LODWORD(v25) = 136380675;
      *(void *)((char *)&v25 + 4) = v8;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#Warning, error requesting LOI for fence %{private}s",  &v25,  12,  v25);
LABEL_14:
      uint64_t v10 = (uint8_t *)v9;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::findAndSetLoiTypeForFence(const CLFenceManager_Type::Fence &)_block_invoke",  "%s\n",  v9);
      if (v10 != buf) {
        free(v10);
      }
    }
  }

  else if (a2)
  {
    uint64_t v12 = *(void *)(a1 + 40);
    CFAbsoluteTimeGetCurrent();
    id v13 = a2;
    id v14 = [v13 type];
    if ((unint64_t)v14 + 1 >= 5)
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      char v21 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)uint64_t buf = 134349056;
        id v27 = [v13 type];
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_FAULT, "Unhandled LOI type, %{public}ld", buf, 0xCu);
      }

      int v15 = 0;
      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101865AB8);
        }
        uint64_t v22 = qword_101934878;
        LODWORD(v25) = 134349056;
        *(void *)((char *)&v25 + 4) = [v13 type];
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  17LL,  "Unhandled LOI type, %{public}ld",  &v25,  12);
        __int128 v24 = (uint8_t *)v23;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLFenceMonitorNotifier::findAndSetLoiTypeForFence(const CLFenceManager_Type::Fence &)_block_invoke",  "%s\n",  v23);
        if (v24 != buf) {
          free(v24);
        }
        int v15 = 0;
      }
    }

    else
    {
      int v15 = dword_101342F58[(void)v14 + 1];
    }

    sub_1009F30CC(v12 + 120, *(void *)(*(void *)(a1 + 32) + 8LL) + 48LL, v15);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    __int16 v16 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v17 = *(void *)(*(void *)(a1 + 32) + 8LL);
      uint64_t v18 = (void *)(v17 + 72);
      *(_DWORD *)uint64_t buf = 136380675;
      id v27 = v18;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "No LOI info for fence %{private}s", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 32) + 8LL);
      __int16 v20 = (void *)(v19 + 72);
      LODWORD(v25) = 136380675;
      *(void *)((char *)&v25 + 4) = v20;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "No LOI info for fence %{private}s",  &v25,  12,  v25);
      goto LABEL_14;
    }
  }

void sub_1009C8588(uint64_t a1, uint64_t a2, char a3)
{
  v12[0] = 0LL;
  v12[1] = v12;
  void v12[2] = 0x12812000000LL;
  void v12[3] = sub_1009C801C;
  _DWORD v12[4] = sub_1009C8028;
  v12[5] = "/!0";
  sub_1002718F0((char *)&v13, (__int128 *)a2);
  v10[0] = 0LL;
  v10[1] = v10;
  _OWORD v10[2] = 0x2020000000LL;
  char v11 = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  _OWORD v9[2] = sub_1009C875C;
  void v9[3] = &unk_1018657C0;
  void v9[5] = v10;
  v9[6] = a1;
  v9[4] = v12;
  int v6 = objc_alloc(&OBJC_CLASS___CLCircularRegion);
  CLLocationCoordinate2D v7 = CLLocationCoordinate2DMake(*(CLLocationDegrees *)(a2 + 72), *(CLLocationDegrees *)(a2 + 80));
  uint64_t v8 =  -[CLCircularRegion initWithCenter:radius:identifier:]( v6,  "initWithCenter:radius:identifier:",  @"SignificantRegion",  v7.latitude,  v7.longitude,  sub_1009232CC(a2),  _NSConcreteStackBlock,  3221225472LL,  sub_1009C875C,  &unk_1018657C0,  v12,  v10,  a1);
  sub_100A09D20(a1 + 120);
  [*(id *)(a1 + 2280) fetchLocationOfInterestForRegion:v8 withReply:v9];
  _Block_object_dispose(v10, 8);
  _Block_object_dispose(v12, 8);
  if (__p)
  {
    int v23 = __p;
    operator delete(__p);
  }

  if (v20 < 0) {
    operator delete(v19);
  }
  if (v18 < 0) {
    operator delete(v17);
  }
  if (v16 < 0) {
    operator delete(v15);
  }
  if (v14 < 0) {
    operator delete(v13);
  }
}

void sub_1009C8730( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  sub_10026EDA4(v8);
  _Unwind_Resume(a1);
}

void sub_1009C875C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a1[6];
  double Current = CFAbsoluteTimeGetCurrent();
  if (a3)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v8 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1[4] + 8LL);
      int v10 = (int)*(double *)(v9 + 144);
      uint64_t v12 = *(void *)(v9 + 120);
      uint64_t v11 = *(void *)(v9 + 128);
      *(_DWORD *)uint64_t buf = 68290051;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2049;
      *(void *)&_BYTE buf[20] = v12;
      *(_WORD *)&_BYTE buf[28] = 2049;
      *(void *)&buf[30] = v11;
      *(_WORD *)&buf[38] = 1026;
      LODWORD(v51[0]) = v10;
      WORD2(v51[0]) = 2114;
      *(void *)((char *)v51 + 6) = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:#significantRegion: fetching LOI - error, latitude:%{private}f, longitude: %{private}f, radius:%{public}d, error:%{public, location:escape_only}@}",  buf,  0x36u);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
    }

    uint64_t v13 = (os_log_s *)qword_101934878;
    if (os_signpost_enabled((os_log_t)qword_101934878))
    {
      uint64_t v14 = *(void *)(a1[4] + 8LL);
      int v15 = (int)*(double *)(v14 + 144);
      uint64_t v17 = *(void *)(v14 + 120);
      uint64_t v16 = *(void *)(v14 + 128);
      *(_DWORD *)uint64_t buf = 68290051;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2049;
      *(void *)&_BYTE buf[20] = v17;
      *(_WORD *)&_BYTE buf[28] = 2049;
      *(void *)&buf[30] = v16;
      *(_WORD *)&buf[38] = 1026;
      LODWORD(v51[0]) = v15;
      WORD2(v51[0]) = 2114;
      *(void *)((char *)v51 + 6) = a3;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v13,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#significantRegion: fetching LOI - error",  "{msg%{public}.0s:#significantRegion: fetching LOI - error, latitude:%{private}f, longitude: %{private}f, radius:%{public}d, error:%{public, location:escape_only}@}",  buf,  0x36u);
    }

    sub_100A09D28(v6 + 120);
    if (!*(_BYTE *)(*(void *)(a1[5] + 8LL) + 24LL)) {
      sub_100A090A4(v6 + 120, (unsigned __int8 *)(*(void *)(a1[4] + 8LL) + 48LL), 1, Current);
    }
  }

  else if (a2)
  {
    id v18 = a2;
    sub_1010DDBC0(v40, (char *)objc_msgSend(objc_msgSend(objc_msgSend(v18, "identifier"), "UUIDString"), "UTF8String"));
    if (SHIBYTE(v41) < 0)
    {
      sub_1010DD48C(__p, v40[0], (unint64_t)v40[1]);
    }

    else
    {
      *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)v40;
      uint64_t v39 = v41;
    }

    objc_msgSend(objc_msgSend(v18, "location", __p[0]), "latitude");
    uint64_t v25 = v24;
    objc_msgSend(objc_msgSend(v18, "location"), "longitude");
    uint64_t v27 = v26;
    objc_msgSend(objc_msgSend(v18, "location"), "horizontalUncertainty");
    uint64_t v29 = v28;
    if (SHIBYTE(v39) < 0)
    {
      sub_1010DD48C(buf, __p[0], (unint64_t)__p[1]);
      *(void *)&_BYTE buf[24] = v25;
      *(void *)&_BYTE buf[32] = v27;
      v51[0] = v29;
      if (SHIBYTE(v39) < 0) {
        operator delete(__p[0]);
      }
    }

    else
    {
      *(_OWORD *)uint64_t buf = *(_OWORD *)__p;
      *(void *)&uint8_t buf[16] = v39;
      *(void *)&_BYTE buf[24] = v25;
      *(void *)&_BYTE buf[32] = v27;
      v51[0] = v28;
    }

    uint64_t v30 = v6 + 120;
    sub_100A07C58( (uint64_t **)(v6 + 120),  (std::string *)buf,  (unsigned __int8 *)(*(void *)(a1[4] + 8LL) + 48LL),  Current,  *(unsigned __int8 *)(*(void *)(a1[5] + 8LL) + 24LL));
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    __int16 v31 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(objc_msgSend(v18, "location"), "horizontalUncertainty");
      *(_DWORD *)double v42 = 68289539;
      int v43 = 0;
      __int16 v44 = 2082;
      __int16 v45 = "";
      __int16 v46 = 2113;
      id v47 = v18;
      __int16 v48 = 1026;
      int v49 = (int)v32;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#significantRegion: fetching LOI - match, loi:%{private, location:escape_only}@,  radius:%{public}d}",  v42,  0x22u);
    }

    objc_msgSend(objc_msgSend(v18, "location"), "horizontalUncertainty");
    double v34 = v33;
    objc_msgSend(objc_msgSend(v18, "location"), "latitude");
    double v36 = v35;
    objc_msgSend(objc_msgSend(v18, "location"), "longitude");
    sub_100A09D38( v30,  v34,  v36,  v37,  *(double *)(*(void *)(a1[4] + 8LL) + 120LL),  *(double *)(*(void *)(a1[4] + 8LL) + 128LL));

    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (SHIBYTE(v41) < 0) {
      operator delete(v40[0]);
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v19 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = *(void *)(a1[4] + 8LL);
      int v21 = (int)*(double *)(v20 + 144);
      uint64_t v23 = *(void *)(v20 + 120);
      uint64_t v22 = *(void *)(v20 + 128);
      *(_DWORD *)uint64_t buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&_BYTE buf[18] = 2049;
      *(void *)&_BYTE buf[20] = v23;
      *(_WORD *)&_BYTE buf[28] = 2049;
      *(void *)&buf[30] = v22;
      *(_WORD *)&buf[38] = 1026;
      LODWORD(v51[0]) = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#significantRegion: fetching LOI - no match, latitude:%{private}f, longitude :%{private}f, radius:%{public}d}",  buf,  0x2Cu);
    }

    sub_100A09D30(v6 + 120);
    if (!*(_BYTE *)(*(void *)(a1[5] + 8LL) + 24LL)) {
      sub_100A090A4(v6 + 120, (unsigned __int8 *)(*(void *)(a1[4] + 8LL) + 48LL), 0, Current);
    }
  }

void sub_1009C8CC4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, int a29, __int16 a30, char a31, char a32)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C8D18(uint64_t a1, int *a2, uint64_t a3, __int128 *a4)
{
  v38[0] = 0LL;
  v38[1] = v38;
  v38[2] = 0x12812000000LL;
  void v38[3] = sub_1009C801C;
  v38[4] = sub_1009C8028;
  v38[5] = "/!0";
  sub_1002718F0((char *)&v39, (__int128 *)a3);
  id v36[2] = 0x2020000000LL;
  void v26[2] = 0xD012000000LL;
  __int128 v8 = a4[6];
  __int128 v9 = a4[8];
  __int128 v34 = a4[7];
  v35[0] = v9;
  *(_OWORD *)((char *)v35 + 12) = *(__int128 *)((char *)a4 + 140);
  __int128 v10 = a4[2];
  __int128 v11 = a4[4];
  __int128 v12 = a4[5];
  __int128 v30 = a4[3];
  __int128 v31 = v11;
  __int128 v32 = v12;
  __int128 v33 = v8;
  __int128 v13 = a4[1];
  __int128 v27 = *a4;
  v36[0] = 0LL;
  v36[1] = v36;
  int v37 = *a2;
  v26[0] = 0LL;
  v26[1] = v26;
  v26[3] = sub_1009C9370;
  v26[4] = nullsub_877;
  v26[5] = 0LL;
  __int128 v28 = v13;
  __int128 v29 = v10;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472LL;
  _DWORD v25[2] = sub_1009C93A8;
  void v25[3] = &unk_1018657E8;
  char v25[4] = v38;
  v25[5] = v36;
  uint64_t v14 = 1LL;
  v25[6] = v26;
  v25[7] = a1;
  switch(v37)
  {
    case -1:
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      int v15 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_FAULT, "#significantRegion: unknown status", buf, 2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101865AB8);
        }
        __int16 v24 = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "#significantRegion: unknown status",  &v24,  2);
        uint64_t v17 = (uint8_t *)v16;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLFenceMonitorNotifier::sendLoiFenceEventHint(const CLFenceManager_Type::FenceStatus &, const CLF enceManager_Type::Fence &, const CLDaemonLocation &)",  "%s\n",  v16);
        break;
      }

      goto LABEL_25;
    case 1:
      uint64_t v14 = 2LL;
      goto LABEL_19;
    case 2:
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      id v18 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_FAULT, "#significantRegion: invalid status", buf, 2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_25;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      __int16 v24 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "#significantRegion: invalid status",  &v24,  2);
      uint64_t v17 = (uint8_t *)v19;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLFenceMonitorNotifier::sendLoiFenceEventHint(const CLFenceManager_Type::FenceStatus &, const CLFen ceManager_Type::Fence &, const CLDaemonLocation &)",  "%s\n",  v19);
      break;
    case 3:
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v22 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_FAULT, "#significantRegion: not set status", buf, 2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_25;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      __int16 v24 = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  17LL,  "#significantRegion: not set status",  &v24,  2);
      uint64_t v17 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLFenceMonitorNotifier::sendLoiFenceEventHint(const CLFenceManager_Type::FenceStatus &, const CLFen ceManager_Type::Fence &, const CLDaemonLocation &)",  "%s\n",  v23);
      break;
    default:
LABEL_19:
      uint64_t v20 = objc_alloc(&OBJC_CLASS___CLCircularRegion);
      CLLocationCoordinate2D v21 = CLLocationCoordinate2DMake(*(CLLocationDegrees *)(a3 + 72), *(CLLocationDegrees *)(a3 + 80));
      objc_msgSend( *(id *)(a1 + 2280),  "setHintForRegionState:significantRegion:withReply:",  v14,   -[CLCircularRegion initWithCenter:radius:identifier:]( v20,  "initWithCenter:radius:identifier:",  @"SignificantRegion",  v21.latitude,  v21.longitude,  sub_1009232CC(a3)),  v25);
      goto LABEL_25;
  }

  if (v17 != buf) {
    free(v17);
  }
LABEL_25:
  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v36, 8);
  _Block_object_dispose(v38, 8);
  if (__p)
  {
    int v49 = __p;
    operator delete(__p);
  }

  if (v46 < 0) {
    operator delete(v45);
  }
  if (v44 < 0) {
    operator delete(v43);
  }
  if (v42 < 0) {
    operator delete(v41);
  }
  if (v40 < 0) {
    operator delete(v39);
  }
}

void sub_1009C92FC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, char a46, uint64_t a47, uint64_t a48, uint64_t a49, char a50)
{
}

__n128 sub_1009C9370(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 4_Block_object_dispose(va, 8) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v2;
  __int128 v3 = *(_OWORD *)(a2 + 80);
  __int128 v4 = *(_OWORD *)(a2 + 96);
  __int128 v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 12_Block_object_dispose(va, 8) = v5;
  *(_OWORD *)(a1 + 8sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v3;
  *(_OWORD *)(a1 + 96) = v4;
  __n128 result = *(__n128 *)(a2 + 144);
  __int128 v7 = *(_OWORD *)(a2 + 160);
  __int128 v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 18_Block_object_dispose(va, 8) = *(_OWORD *)(a2 + 188);
  *(_OWORD *)(a1 + 16sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v7;
  *(_OWORD *)(a1 + 176) = v8;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

void sub_1009C93A8(void *a1, int a2, uint64_t a3)
{
  if (a2)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    __int128 v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "#significantRegion: successfully sent hint",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v17[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "#significantRegion: successfully sent hint",  v17,  2);
      __int128 v5 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLFenceMonitorNotifier::sendLoiFenceEventHint(const CLFenceManager_Type::FenceStatus &, const CLFen ceManager_Type::Fence &, const CLDaemonLocation &)_block_invoke",  "%s\n",  v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

  else
  {
    uint64_t v8 = a1[7];
    if (*((_BYTE *)sub_100D0ABB4() + 2))
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      __int128 v9 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t buf = 68289282;
        int v19 = 0;
        __int16 v20 = 2082;
        CLLocationCoordinate2D v21 = "";
        __int16 v22 = 2114;
        uint64_t v23 = a3;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:#significantRegion: could not deliver hint, error:%{public, location:escape_only}@}",  buf,  0x1Cu);
        if (qword_101934870 != -1) {
          dispatch_once(&qword_101934870, &stru_101865AB8);
        }
      }

      __int128 v10 = (os_log_s *)qword_101934878;
      if (os_signpost_enabled((os_log_t)qword_101934878))
      {
        *(_DWORD *)uint64_t buf = 68289282;
        int v19 = 0;
        __int16 v20 = 2082;
        CLLocationCoordinate2D v21 = "";
        __int16 v22 = 2114;
        uint64_t v23 = a3;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v10,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "#significantRegion: could not deliver hint",  "{msg%{public}.0s:#significantRegion: could not deliver hint, error:%{public, location:escape_only}@}",  buf,  0x1Cu);
      }

      double Current = CFAbsoluteTimeGetCurrent();
      uint64_t v12 = *(void *)(a1[4] + 8LL);
      uint64_t v13 = *(void *)(a1[5] + 8LL);
      uint64_t v14 = *(void *)(a1[6] + 8LL);
      sub_1010DDBC0(__p, "HintError");
      sub_1009F57F8(v8 + 120, v12 + 48, (int *)(v13 + 24), v14 + 48, (uint64_t *)__p, Current);
      if (v16 < 0) {
        operator delete(__p[0]);
      }
    }
  }

void sub_1009C96E4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009C9708(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 2632))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v1 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v4 = 68289026;
      int v5 = 0;
      __int16 v6 = 2082;
      __int128 v7 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#significantRegion: already monitoring}",  (uint8_t *)&v4,  0x12u);
    }
  }

  else if (sub_100A07C48(a1 + 120))
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    __int128 v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 68289026;
      int v5 = 0;
      __int16 v6 = 2082;
      __int128 v7 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#significantRegion: start monitoring}",  (uint8_t *)&v4,  0x12u);
    }

    [*(id *)(a1 + 2280) startMonitoringVisitsForClient:CLISP_ME_TOKEN];
    *(_BYTE *)(a1 + 2632) = 1;
  }

void sub_1009C989C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 2632))
  {
    if (!sub_100A07C48(a1 + 120))
    {
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      __int128 v2 = (os_log_s *)qword_101934878;
      if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
      {
        int v4 = 68289026;
        int v5 = 0;
        __int16 v6 = 2082;
        __int128 v7 = "";
        _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "{msg%{public}.0s:#significantRegion: stop monitoring}",  (uint8_t *)&v4,  0x12u);
      }

      [*(id *)(a1 + 2280) stopMonitoringVisitsForClient:CLISP_ME_TOKEN];
      *(_BYTE *)(a1 + 2632) = 0;
    }
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    __int128 v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v4 = 68289026;
      int v5 = 0;
      __int16 v6 = 2082;
      __int128 v7 = "";
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:#significantRegion: already stopped monitoring}",  (uint8_t *)&v4,  0x12u);
    }
  }

void sub_1009C9A2C(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  __int128 v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Fence: settled timer expired", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    v6[0] = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: settled timer expired",  v6,  2);
    int v5 = (uint8_t *)v4;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onSettledTimerExpired(CLPersistentTimer *)",  "%s\n",  v4);
    if (v5 != buf) {
      free(v5);
    }
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_100A008A0(a1 + 120, Current);
}

BOOL sub_1009C9BC8(uint64_t a1)
{
  return *(void *)(a1 + 2240) != 0LL;
}

double sub_1009C9BD8(uint64_t a1, int a2)
{
  int v9 = a2;
  if (+[CLGnssProviderAdapter isSupported](&OBJC_CLASS___CLGnssProviderAdapter, "isSupported"))
  {
    sub_1010DDBC0(v7, "onLocationWatchdogExpire");
    if (*(int *)(a1 + 2432) <= 0)
    {
      if (SHIBYTE(v8) < 0)
      {
        sub_1010DD48C(__p, v7[0], (unint64_t)v7[1]);
      }

      else
      {
        *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)v7;
        uint64_t v12 = v8;
      }

      sub_100AD5668(a1 + 2424, (uint64_t *)__p);
      if (SHIBYTE(v12) < 0) {
        operator delete(__p[0]);
      }
    }

    if (SHIBYTE(v8) < 0) {
      operator delete(v7[0]);
    }
    sub_100A01768(a1 + 120);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    __int128 v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(__p[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Fence: onLocationWatchdogExpired, start gps",  (uint8_t *)__p,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      LOWORD(v1sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: onLocationWatchdogExpired, start gps",  &v10,  2);
      __int16 v6 = (void **)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFAbsoluteTime CLFenceMonitorNotifier::startGps(int, int)",  "%s\n",  v5);
      if (v6 != __p) {
        free(v6);
      }
    }

    if (sub_100E575B0())
    {
      sub_1002A5370(__p);
      sub_1002AC220((uint64_t)__p, "WatchdogExpiredStartGps", &v9);
      sub_100E57614((uint64_t)__p, (uint64_t)"locationd");
      sub_1002A5590(__p);
    }

    sub_100A9E608();
  }

  return *(double *)(a1 + 2600);
}

void sub_1009CA3FC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009CA448()
{
  return 0LL;
}

uint64_t sub_1009CA450(uint64_t a1)
{
  if (qword_101934870 != -1) {
    dispatch_once(&qword_101934870, &stru_101865AB8);
  }
  __int128 v2 = (os_log_s *)qword_101934878;
  if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 2240);
    *(_DWORD *)uint64_t buf = 134283521;
    uint64_t v15 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Fence: unregister gps client, %{private}p",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v6 = *(void *)(a1 + 2240);
    int v12 = 134283521;
    uint64_t v13 = v6;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  0LL,  "Fence: unregister gps client, %{private}p",  &v12,  12);
    uint64_t v8 = (uint8_t *)v7;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFenceMonitorNotifier::stopGps()", "%s\n", v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_101865AD8);
  }
  int v4 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wigo,off,Fence", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101865AD8);
    }
    LOWORD(v12) = 0;
    LODWORD(v11) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "#wigo,off,Fence",  &v12,  v11);
    int v10 = (uint8_t *)v9;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFenceMonitorNotifier::stopGps()", "%s\n", v9);
    if (v10 != buf) {
      free(v10);
    }
  }

  uint64_t result = *(void *)(a1 + 2240);
  *(void *)(a1 + 224sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0LL;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

void sub_1009CA748(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 1)
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    uint64_t v6 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      int v7 = sub_1009F4C24(a1 + 120);
      int v8 = *(unsigned __int8 *)(a4 + 4);
      *(_DWORD *)uint64_t buf = 67240448;
      int v18 = v7;
      __int16 v19 = 1026;
      int v20 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Fence: state kNotificationDeviceUnlockedSinceBoot, from, %{public}d, to, %{public}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      uint64_t v9 = qword_101934878;
      int v10 = sub_1009F4C24(a1 + 120);
      int v11 = *(unsigned __int8 *)(a4 + 4);
      v14[0] = 67240448;
      v14[1] = v10;
      __int16 v15 = 1026;
      int v16 = v11;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v9,  2LL,  "Fence: state kNotificationDeviceUnlockedSinceBoot, from, %{public}d, to, %{public}d",  v14,  14);
      uint64_t v13 = (uint8_t *)v12;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFenceMonitorNotifier::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notification &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v12);
      if (v13 != buf) {
        free(v13);
      }
    }

    if (*(_BYTE *)(a4 + 4))
    {
      [*(id *)(*(void *)(a1 + 2296) + 16) unregister:*(void *)(*(void *)(a1 + 2296) + 8) forNotification:1];
      CFAbsoluteTimeGetCurrent();
      sub_100A01144(a1 + 120, *(unsigned __int8 *)(a4 + 4));
    }
  }

uint64_t sub_1009CA95C(uint64_t a1)
{
  return sub_101024128(a1 + 2064);
}

BOOL sub_1009CA964(uint64_t a1)
{
  return sub_101024130(a1 + 2064);
}

_BYTE *sub_1009CA96C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_101024158(a1 + 2064, a2);
}

__n128 sub_1009CA974@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2 = *(_OWORD *)(a1 + 2720);
  __int128 v3 = *(_OWORD *)(a1 + 2752);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 2736);
  *(_OWORD *)(a2 + 112) = v3;
  *(void *)(a2 + 12_Block_object_dispose(va, 8) = *(void *)(a1 + 2768);
  __int128 v4 = *(_OWORD *)(a1 + 2656);
  __int128 v5 = *(_OWORD *)(a1 + 2688);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 2672);
  *(_OWORD *)(a2 + 4_Block_object_dispose(va, 8) = v5;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 2704);
  *(_OWORD *)(a2 + 8sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v2;
  __n128 result = *(__n128 *)(a1 + 2640);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v4;
  return result;
}

__n128 sub_1009CA9B0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 12_Block_object_dispose(va, 8) = *(void *)(a1 + 2904);
  __int128 v2 = *(_OWORD *)(a1 + 2888);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 2872);
  *(_OWORD *)(a2 + 112) = v2;
  __int128 v3 = *(_OWORD *)(a1 + 2824);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 2808);
  *(_OWORD *)(a2 + 4_Block_object_dispose(va, 8) = v3;
  __int128 v4 = *(_OWORD *)(a1 + 2856);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 2840);
  *(_OWORD *)(a2 + 8sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v4;
  __n128 result = *(__n128 *)(a1 + 2792);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 2776);
  *(__n128 *)(a2 + 16) = result;
  return result;
}

id sub_1009CA9E0(uint64_t a1)
{
  return [*(id *)(a1 + 2288) clearExitAndEntryScanNetworks:0];
}

void sub_1009CA9EC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  __int128 v4 = *(void **)(a1 + 2288);
  memset(v7, 0, sizeof(v7));
  sub_1002DE3C8(v7, *a2, a2[1], 0x2E8BA2E8BA2E8BA3LL * ((a2[1] - *a2) >> 3));
  id v5 = sub_1009CAAE8(v7);
  memset(v6, 0, sizeof(v6));
  sub_1002DE3C8(v6, *a3, a3[1], 0x2E8BA2E8BA2E8BA3LL * ((a3[1] - *a3) >> 3));
  [v4 programEntryScanNetworks:v5 andExitScanNetworks:sub_1009CAAE8(v6)];
  int v8 = (void **)v6;
  sub_100023498(&v8);
  int v8 = (void **)v7;
  sub_100023498(&v8);
}

void sub_1009CAAB8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  *(void *)(v14 - 4sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v13;
  sub_100023498((void ***)(v14 - 40));
  *(void *)(v14 - 4sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = &a13;
  sub_100023498((void ***)(v14 - 40));
  _Unwind_Resume(a1);
}

id sub_1009CAAE8(uint64_t *a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768LL;
  _DWORD v3[2] = sub_1009CD924;
  void v3[3] = &unk_101865D08;
  memset(v4, 0, sizeof(v4));
  sub_1002DE3C8(v4, *a1, a1[1], 0x2E8BA2E8BA2E8BA3LL * ((a1[1] - *a1) >> 3));
  id v1 = [v3 copy];
  id v5 = (void **)v4;
  sub_100023498(&v5);
  return v1;
}

void sub_1009CAB8C(_Unwind_Exception *a1)
{
  *(void *)(v2 - 24) = v1;
  sub_100023498((void ***)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_1009CABA8(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 2288) setBackgroundExitScanCount:a2];
}

void sub_1009CABB4(uint64_t a1, char *a2)
{
  if (*(int *)(a1 + 2480) <= 0)
  {
    if (SHIBYTE(v4) < 0)
    {
      sub_1010DD48C(__p, v3[0], (unint64_t)v3[1]);
    }

    else
    {
      *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)v3;
      uint64_t v6 = v4;
    }

    sub_100AD5668(a1 + 2472, (uint64_t *)__p);
    if (SHIBYTE(v6) < 0) {
      operator delete(__p[0]);
    }
  }

  if (SHIBYTE(v4) < 0) {
    operator delete(v3[0]);
  }
}

void sub_1009CAC40( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1009CAC74(uint64_t a1)
{
  return sub_100AD5D38(a1 + 2472);
}

BOOL sub_1009CAC7C(uint64_t a1)
{
  return *(_DWORD *)(a1 + 2480) > 0;
}

void sub_1009CAC8C(uint64_t a1)
{
  uint64_t v1 = *(dispatch_source_s **)(a1 + 2328);
  if (v1)
  {
    dispatch_time_t v2 = dispatch_time(0LL, 5000000000LL);
    dispatch_source_set_timer(v1, v2, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
  }

  else
  {
    if (qword_101934870 != -1) {
      dispatch_once(&qword_101934870, &stru_101865AB8);
    }
    __int128 v3 = (os_log_s *)qword_101934878;
    if (os_log_type_enabled((os_log_t)qword_101934878, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Fence: ignore recalculation, shut down?",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934870 != -1) {
        dispatch_once(&qword_101934870, &stru_101865AB8);
      }
      v6[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934878,  2LL,  "Fence: ignore recalculation, shut down?",  v6,  2);
      id v5 = (uint8_t *)v4;
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLFenceMonitorNotifier::scheduleRecalculate()", "%s\n", v4);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

void sub_1009CAE6C(uint64_t a1, uint64_t a2)
{
  HIDWORD(v15) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        uint64_t v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)uint64_t buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v15 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101865A98);
      }
      int v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        int v11 = (void *)(a1 + 8);
        *(_DWORD *)uint64_t buf = 136446466;
        CLLocationCoordinate2D v21 = v11;
        __int16 v22 = 1026;
        int v23 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101865A98);
        }
        int v12 = (void *)(a1 + 8);
        int v16 = 136446466;
        uint64_t v17 = v12;
        __int16 v18 = 1026;
        int v19 = a2;
        LODWORD(v15) = 18;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
          &v16,
          v15);
        uint64_t v14 = (uint8_t *)v13;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::s tring>::removeClient(int) [Notification_T = CLFenceMonitor_Type::Notification, NotificationData_T = CLFenceMon itor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v13);
        if (v14 != buf) {
          free(v14);
        }
      }
    }
  }

uint64_t sub_1009CB0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_10198EB30);
  if ((v3 & 1) == 0)
  {
    uint64_t v9 = a1;
    uint64_t v8 = a3;
    unsigned int v7 = a2;
    int v5 = __cxa_guard_acquire(&qword_10198EB30);
    a2 = v7;
    a3 = v8;
    int v6 = v5;
    a1 = v9;
    if (v6)
    {
      qword_10198EB18 = 0LL;
      unk_10198EB20 = 0LL;
      qword_10198EB28 = 0LL;
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10198EB18, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10198EB30);
      a1 = v9;
      a2 = v7;
      a3 = v8;
    }
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &qword_10198EB18);
}

BOOL sub_1009CB188(uint64_t a1, int a2, int *a3, const std::string *a4)
{
  int v42 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        uint64_t v13 = (uint64_t *)v7;
      }
      else {
        uint64_t v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v41 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }

      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          __int128 v28 = (uint64_t *)v24;
        }
        else {
          __int128 v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }

      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        *(void *)int v43 = v25;
        uint64_t v33 = *(void *)(v25 + 56);
        *(void *)uint64_t buf = &v42;
        __int128 v34 = sub_1004C2E20((uint64_t **)(v25 + 40), &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        std::string::operator=((std::string *)(v34 + 5), a4);
        __n128 v35 = sub_1009CDA54(buf);
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *, __n128))(*(void *)a1 + 128LL))(a1, a3, buf, v35))
        {
          double v36 = sub_1009CD9AC((__int128 *)buf);
          sub_1009CD200((_BYTE *)a1, (uint64_t)&v41, (uint64_t)v43, v36);
        }

        if (v57)
        {
          uint64_t v58 = v57;
          operator delete(v57);
        }

        if (v55 < 0) {
          operator delete(v54);
        }
        if (v53 < 0) {
          operator delete(__p);
        }
        if (v51 < 0) {
          operator delete(v50);
        }
        if (v49 < 0) {
          operator delete(*(void **)buf);
        }
        if (v33) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        *(void *)int v43 = a1 + 64;
        char v29 = byte_10198EB38;
        HIDWORD(v4sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v16;
        *(void *)uint64_t buf = (char *)&v40 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v29;
        HIDWORD(v4sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = *a3;
        *(void *)uint64_t buf = (char *)&v40 + 4;
        __int128 v30 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v30 + 8);
        HIDWORD(v4sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = *a3;
        *(void *)uint64_t buf = (char *)&v40 + 4;
        __int128 v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v40 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)uint64_t buf = &v42;
        __int128 v32 = sub_1004C2E20(v31 + 5, &v42, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        std::string::operator=((std::string *)(v32 + 5), a4);
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v20 == v18)
      {
        *(_DWORD *)uint64_t buf = *a3;
        sub_10004A8FC((uint64_t **)(v41 + 40), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101865A98);
  }
  uint64_t v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v47 = 1026;
    int v48 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL result = sub_1002921D0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    int v37 = (void *)(a1 + 8);
    *(_DWORD *)int v43 = 136446466;
    *(void *)&v43[4] = v37;
    __int16 v44 = 1026;
    int v45 = v42;
    LODWORD(v4sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
      v43,
      v40);
    uint64_t v39 = (char *)v38;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::strin g>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLFenceMoni tor_Type::Notification, NotificationData_T = CLFenceMonitor_Type::NotificationData, NotificationInfo_T = char, Reg istrationInfo_T = std::string]",  "%s\n",  v38);
    if (v39 != buf) {
      free(v39);
    }
    return 0LL;
  }

  return result;
}

void sub_1009CB658( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

BOOL sub_1009CB688(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      uint64_t v9 = (uint64_t *)v5;
    }
    else {
      uint64_t v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 136446466;
      __int128 v30 = v11;
      __int16 v31 = 1026;
      int v32 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101865A98);
      }
      BOOL v22 = (void *)(a1 + 8);
      int v25 = 136446466;
      int v26 = v22;
      __int16 v27 = 1026;
      int v28 = a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
        &v25,
        18);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::str ing>::clientRegistered(int, const Notification_T &) [Notification_T = CLFenceMonitor_Type::Notification, Notific ationData_T = CLFenceMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
      return 0LL;
    }
  }

  return result;
}

BOOL sub_1009CB908(char *a1, int a2, int *a3)
{
  HIDWORD(v34) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        uint64_t v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            uint64_t v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                int v25 = (uint64_t *)v20;
              }
              else {
                int v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_10052A02C((uint64_t)(v22 + 40), (int *)&v34 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101865A98);
              }
              int v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                __int16 v27 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v44 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)uint64_t buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v36 = 2082;
                int v37 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v44 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101865A98);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v38 >= 0) {
                  __int16 v31 = buf;
                }
                else {
                  __int16 v31 = *(_BYTE **)buf;
                }
                int v39 = 136446466;
                uint64_t v40 = v29;
                __int16 v41 = 2082;
                int v42 = v31;
                LODWORD(v34) = 22;
                _os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                  &v39,
                  v34);
                uint64_t v33 = v32;
                if (v38 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char , std::string>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLFenceMonito r_Type::Notification, NotificationData_T = CLFenceMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v33);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_1009CBC90(uint64_t a1, int *a2, std::string *this)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      int v11 = (uint64_t *)v4;
    }
    else {
      int v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }

  while (*v11);
  if (v8 == v3) {
    return 0LL;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0LL;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0LL;
  }
  std::string::operator=(this, *(const std::string **)(v8 + 64));
  std::string::operator=(this + 1, (const std::string *)(v12 + 24));
  std::string::operator=(this + 2, (const std::string *)(v12 + 48));
  __int128 v13 = *(_OWORD *)(v12 + 88);
  __int128 v14 = *(_OWORD *)(v12 + 104);
  __int128 v15 = *(_OWORD *)(v12 + 120);
  *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = *(_OWORD *)(v12 + 72);
  *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = v15;
  *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = v14;
  *(_OWORD *)&this[3].__r_.__value_.__r.__words[2] = v13;
  __int128 v16 = *(_OWORD *)(v12 + 152);
  __int128 v17 = *(_OWORD *)(v12 + 168);
  std::string::size_type v18 = *(void *)(v12 + 181);
  *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = *(_OWORD *)(v12 + 136);
  *(std::string::size_type *)((char *)&this[7].__r_.__value_.__r.__words[1] + 5) = v18;
  *(_OWORD *)&this[7].__r_.__value_.__l.__data_ = v17;
  *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v16;
  std::string::operator=(this + 8, (const std::string *)(v12 + 192));
  std::string::pointer data = this[9].__r_.__value_.__l.__data_;
  this[9].__r_.__value_.__r.__words[0] = (std::string::size_type)*(id *)(v12 + 216);

  if ((std::string *)v12 != this) {
    sub_10009B244( &this[9].__r_.__value_.__s.__data_[8],  *(char **)(v12 + 224),  *(void *)(v12 + 232),  (uint64_t)(*(void *)(v12 + 232) - *(void *)(v12 + 224)) >> 4);
  }
  memcpy(&this[10].__r_.__value_.__r.__words[1], (const void *)(v12 + 248), 0x460uLL);
  return 1LL;
}

uint64_t sub_1009CBDB8(uint64_t a1, int *a2, __int128 *a3)
{
  int v10 = *a2;
  uint64_t v12 = &v10;
  uint64_t v5 = sub_10023347C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_1012CF090, &v12);
  sub_10005F550((uint64_t)(v5 + 8), &v11);
  uint64_t v6 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1))
  {
    int v7 = (unint64_t *)(*((void *)&v11 + 1) + 8LL);
    do
      unint64_t v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

  return 1LL;
}

void sub_1009CBE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1009CBE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 v8 = sub_1009CDA54((char *)v9);
  (*(void (**)(uint64_t, uint64_t, void **, uint64_t, uint64_t, void, __n128))(*(void *)a1 + 152LL))( a1,  a2,  v9,  a3,  a4,  0LL,  v8);
  if (__p)
  {
    int v19 = __p;
    operator delete(__p);
  }

  if (v16 < 0) {
    operator delete(v15);
  }
  if (v14 < 0) {
    operator delete(v13);
  }
  if (v12 < 0) {
    operator delete(v11);
  }
  if (v10 < 0) {
    operator delete(v9[0]);
  }
}

void sub_1009CBF40(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1009CBF54(uint64_t a1, unsigned int *a2, __int128 *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    char v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    __int128 v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      char v12 = (void *)(a1 + 8);
      __int128 v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)uint64_t buf = 68289794;
      *(_DWORD *)__int128 v66 = 0;
      *(_WORD *)&v66[4] = 2082;
      *(void *)&v66[6] = "";
      *(_WORD *)&_BYTE v66[14] = 2082;
      *(void *)&v66[16] = "activity";
      __int16 v67 = 2082;
      unsigned int v68 = v12;
      __int16 v69 = 2050;
      __int16 v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    __int128 v15 = (__n128 *)(a1 + 64);
    char v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    id v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        id v17 = v14;
      }
      char v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)char v71 = &v71[8];
      memset(&v71[8], 0, 24);
      __int16 v72 = 0LL;
      sub_1005285AC((uint64_t)buf, a2, (uint64_t)v71);
      id v17 = sub_100528470((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100528854((uint64_t)&v66[4], *(char **)&v66[12]);
      BOOL v24 = v72;
      if (v72)
      {
        int v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100528854((uint64_t)v71, *(char **)&v71[8]);
    }

    if (a4)
    {
      sub_1009CD2DC(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      __int16 v27 = *(std::__shared_weak_count **)&v66[4];
      if (*(void *)&v66[4])
      {
        int v28 = (unint64_t *)(*(void *)&v66[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    uint64_t v30 = sub_1009CCD84(a3);
    if (a5 == -1)
    {
      sub_1009CCE2C((void *)a1, (int *)a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          __int16 v36 = (uint64_t *)v32;
        }
        else {
          __int16 v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v63 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      int v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          int v42 = (unint64_t *)v37;
        }
        else {
          int v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          int v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        __int128 v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101865A98);
        }
        int v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          char v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            int v45 = v71;
          }
          else {
            int v45 = *(_BYTE **)v71;
          }
          *(_DWORD *)uint64_t buf = 136315650;
          *(void *)__int128 v66 = v44;
          *(_WORD *)&v66[8] = 1024;
          *(_DWORD *)&v66[10] = a5;
          *(_WORD *)&_BYTE v66[14] = 2080;
          *(void *)&v66[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101865A98);
          }
          char v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            int v48 = __p;
          }
          else {
            int v48 = (void **)__p[0];
          }
          *(_DWORD *)char v71 = 136315650;
          *(void *)&v71[4] = v46;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&_BYTE v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
            v71,
            28,
            v59);
          uint64_t v50 = v49;
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std: :string>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notifi cation_T = CLFenceMonitor_Type::Notification, NotificationData_T = CLFenceMonitor_Type::NotificationData, No tificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v50);
        }

        goto LABEL_83;
      }

      __int128 v62 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v53 = v39[3].n128_i64[0];
      char v51 = v39 + 3;
      uint64_t v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v33 + 32);
      char v55 = v51;
      do
      {
        int v56 = v52[2].n128_i32[0];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          uint64_t v58 = v52;
        }
        else {
          uint64_t v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          char v55 = v52;
        }
        uint64_t v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_1009CD200((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v30);
    }

void sub_1009CC570( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_1009CC5BC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    dispatch_time_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)uint64_t buf = 136315138;
      unint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101865A98);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v32 = 136315138;
      uint64_t v33 = v4;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
        (const char *)&v32);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::str ing>::listClients() [Notification_T = CLFenceMonitor_Type::Notification, NotificationData_T = CLFenceMonitor_Typ e::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101865A98);
    }
    int v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __n128 v8 = (void *)(a1 + 8);
      uint64_t v9 = *(void *)(a1 + 96);
      *(_DWORD *)uint64_t buf = 136315394;
      unint64_t v37 = v8;
      __int16 v38 = 2048;
      v39[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101865A98);
      }
      __int16 v27 = (void *)(a1 + 8);
      uint64_t v28 = *(void *)(a1 + 96);
      int v32 = 136315394;
      uint64_t v33 = v27;
      __int16 v34 = 2048;
      v35[0] = v28;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
        (const char *)&v32,
        22);
      uint64_t v30 = (uint8_t *)v29;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::str ing>::listClients() [Notification_T = CLFenceMonitor_Type::Notification, NotificationData_T = CLFenceMonitor_Typ e::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v29);
      if (v30 != buf) {
        free(v30);
      }
    }

    char v10 = *(void **)(a1 + 80);
    if (v10 != (void *)(a1 + 88))
    {
      __int128 v11 = (void *)(a1 + 8);
      do
      {
        char v12 = (void *)v10[5];
        if (v12 != v10 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101865A98);
            }
            __int128 v13 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              char v14 = (void *)(a1 + 8);
              int v15 = *((_DWORD *)v10 + 8);
              int v16 = *((_DWORD *)v12 + 7);
              *(_DWORD *)uint64_t buf = 136315650;
              unint64_t v37 = v14;
              __int16 v38 = 1024;
              LODWORD(v39[0]) = v15;
              WORD2(v39[0]) = 1024;
              *(_DWORD *)((char *)v39 + 6) = v16;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101865A98);
              }
              uint64_t v20 = (void *)(a1 + 8);
              int v21 = *((_DWORD *)v10 + 8);
              int v22 = *((_DWORD *)v12 + 7);
              int v32 = 136315650;
              uint64_t v33 = v20;
              __int16 v34 = 1024;
              LODWORD(v35[0]) = v21;
              WORD2(v35[0]) = 1024;
              *(_DWORD *)((char *)v35 + 6) = v22;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                (const char *)&v32,
                24,
                v31);
              BOOL v24 = (uint8_t *)v23;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLFenceMonitor_Type::Notification, NotificationData_T = CL FenceMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v23);
              if (v24 != buf) {
                free(v24);
              }
            }

            id v17 = (void *)v12[1];
            if (v17)
            {
              do
              {
                signed __int32 v18 = v17;
                id v17 = (void *)*v17;
              }

              while (v17);
            }

            else
            {
              do
              {
                signed __int32 v18 = (void *)v12[2];
                BOOL v19 = *v18 == (void)v12;
                char v12 = v18;
              }

              while (!v19);
            }

            char v12 = v18;
          }

          while (v18 != v10 + 6);
        }

        int v25 = (void *)v10[1];
        if (v25)
        {
          do
          {
            unint64_t v26 = v25;
            int v25 = (void *)*v25;
          }

          while (v25);
        }

        else
        {
          do
          {
            unint64_t v26 = (void *)v10[2];
            BOOL v19 = *v26 == (void)v10;
            char v10 = v26;
          }

          while (!v19);
        }

        char v10 = v26;
      }

      while (v26 != (void *)(a1 + 88));
    }
  }

void sub_1009CCB68(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1009CCC4C(a1);
  operator delete(v1);
}

id sub_1009CCB7C(uint64_t a1, int a2, void *a3)
{
  id result = sub_1009CD500(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_1009CCBC8(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1009CCBF4(id a1)
{
  qword_101934878 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_1009CCC20(id a1)
{
  qword_101934888 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_1009CCC4C(uint64_t a1)
{
  *(void *)a1 = off_101865B08;
  dispatch_time_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *dispatch_time_t v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

__n128 sub_1009CCCAC(uint64_t a1)
{
  dispatch_time_t v2 = (char *)operator new(0x20uLL);
  *(void *)dispatch_time_t v2 = &off_101865C10;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + _Block_object_dispose(va, 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_1009CCCF0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_101865C10;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + _Block_object_dispose(va, 8) = result;
  return result;
}

uint64_t sub_1009CCD1C(void *a1, unsigned int *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (uint64_t (*)(void *, void))a1[1];
  uint64_t v4 = (void *)(a1[3] + (v2 >> 1));
  if ((v2 & 1) != 0) {
    uint64_t v3 = *(uint64_t (**)(void *, void))(*v4 + v3);
  }
  return v3(v4, *a2);
}

uint64_t sub_1009CCD3C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1009CCD78()
{
}

CLCppContainer *sub_1009CCD84(__int128 *a1)
{
  uint64_t v2 = (char *)operator new(0x558uLL);
  sub_1002718F0(v2, a1);
  memcpy(v2 + 248, (char *)a1 + 248, 0x460uLL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_1009CD474;
  void v4[3] = &unk_10181D3D0;
  void v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  1368LL);
}

void sub_1009CCE18(_Unwind_Exception *a1)
{
}

void sub_1009CCE2C(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          char v12 = (uint64_t *)v4;
        }
        else {
          char v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        char v51 = v9;
        id v13 = sub_1009CD500(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        char v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          int v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 8);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v50 = v19;
              sub_1009CD200(a1, (uint64_t)&v50, (uint64_t)&v51, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              unint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  unint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              char v51 = v29;
              uint64_t v34 = v29[6];
              char v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                BOOL v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 32);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    BOOL v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 8))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 32);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      int v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      int v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      char v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  int v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      char v14 = v43;
                      int v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      char v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      BOOL v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              uint64_t v50 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101865A98);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 8);
                *(_DWORD *)uint64_t buf = 136446466;
                BOOL v57 = v25;
                __int16 v58 = 1026;
                int v59 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101865A98);
                }
                int v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 8);
                int v52 = 136446466;
                uint64_t v53 = v45;
                __int16 v54 = 1026;
                int v55 = v46;
                LODWORD(v49) = 18;
                _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                  &v52,
                  v49);
                int v48 = (uint8_t *)v47;
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::s tring>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLFenceMonit or_Type::Notification, NotificationData_T = CLFenceMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]",  "%s\n",  v47);
                if (v48 != buf) {
                  free(v48);
                }
              }
            }
          }

          while (v14 != v51 + 6);
        }
      }
    }
  }

_BYTE *sub_1009CD200(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    int v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_1009CD500(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    char v14 = (int *)(*(void *)a2 + 32LL);
    char v12 = sub_1004C2E20(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    __n128 result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 5);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

uint64_t sub_1009CD2DC@<X0>(__int128 *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x570uLL);
  uint64_t result = sub_1009CD334((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_1009CD320(_Unwind_Exception *a1)
{
}

uint64_t sub_1009CD334(uint64_t a1, __int128 *a2)
{
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = off_101865CA8;
  *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;
  sub_1002718F0((char *)(a1 + 24), a2);
  memcpy((void *)(a1 + 272), (char *)a2 + 248, 0x460uLL);
  return a1;
}

void sub_1009CD380(_Unwind_Exception *a1)
{
}

void sub_1009CD394(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101865CA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1009CD3A8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101865CA8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_1009CD3CC(uint64_t a1)
{
}

void sub_1009CD3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 224);
  if (v3)
  {
    *(void *)(a2 + 232) = v3;
    operator delete(v3);
  }
}

void sub_1009CD474(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 224);
    if (v2)
    {
      *(void *)(v1 + 232) = v2;
      operator delete(v2);
    }

    operator delete((void *)v1);
  }

id sub_1009CD500(void *a1)
{
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_1009CD54C(a1);
  }
  else {
    return 0LL;
  }
}

id sub_1009CD54C(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101865CE8);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101342F2ELL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101865CE8);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101865CE8);
    }
    int v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x8000000101342F2ELL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101865CE8);
    }
    LODWORD(v_Block_object_dispose(va, 8) = 134218498;
    HIDWORD(v_Block_object_dispose(va, 8) = (_DWORD)v2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has c hanged on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  int v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLFenceMonitor_Type::NotificationData, Callbacunint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_1009CD8F8(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

void *sub_1009CD924@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  return sub_1002DE3C8( a2,  *(void *)(a1 + 32),  *(void *)(a1 + 40),  0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(a1 + 40) - *(void *)(a1 + 32)) >> 3));
}

void *sub_1009CD954(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 4sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0LL;
  id v2 = (void *)(a1 + 32);
  v2[2] = 0LL;
  return sub_1002DE3C8( v2,  *(void *)(a2 + 32),  *(void *)(a2 + 40),  0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3));
}

void sub_1009CD984(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 32);
  sub_100023498(&v1);
}

CLCppContainer *sub_1009CD9AC(__int128 *a1)
{
  id v2 = (char *)operator new(0x558uLL);
  sub_1002718F0(v2, a1);
  memcpy(v2 + 248, (char *)a1 + 248, 0x460uLL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  _DWORD v4[2] = sub_1009CDBC8;
  void v4[3] = &unk_10181D3D0;
  void v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  1368LL);
}

void sub_1009CDA40(_Unwind_Exception *a1)
{
}

__n128 sub_1009CDA54(char *a1)
{
  uint64_t v1 = a1 + 340;
  id v2 = sub_100922994(a1);
  *((void *)v2 + 31) = 0xFFFFFFFFFFFFLL;
  *((void *)v2 + 32) = 0LL;
  *((void *)v2 + 33) = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  *((_OWORD *)v2 + 17) = xmmword_1012E0070;
  *((__n128 *)v2 + 1_Block_object_dispose(va, 8) = result;
  *((__n128 *)v2 + 19) = result;
  *((__n128 *)v2 + 2sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = result;
  *((_DWORD *)v2 + 84) = 0;
  *(void *)uint64_t v1 = 0xBFF0000000000000LL;
  *(void *)(v2 + 34_Block_object_dispose(va, 8) = 0LL;
  *(void *)(v2 + 356) = 0LL;
  *((_DWORD *)v2 + 91) = 0;
  *((void *)v2 + 46) = 0xBFF0000000000000LL;
  *((_DWORD *)v2 + 94) = 0x7FFFFFFF;
  *(void *)(v2 + 38_Block_object_dispose(va, 8) = 0LL;
  *(void *)(v2 + 396) = 0LL;
  *(void *)(v2 + 38sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0LL;
  v2[404] = 0;
  v2[412] = 0;
  *((void *)v2 + 52) = 0xBFF0000000000000LL;
  v2[432] = 1;
  *((void *)v2 + 55) = 0xBFF0000000000000LL;
  *((__n128 *)v2 + 2_Block_object_dispose(va, 8) = result;
  *((__n128 *)v2 + 29) = result;
  *((__n128 *)v2 + 3sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = result;
  *((__n128 *)v2 + 31) = result;
  *((__n128 *)v2 + 32) = result;
  *((__n128 *)v2 + 33) = result;
  *((void *)v2 + 6_Block_object_dispose(va, 8) = 0xBFF0000000000000LL;
  *((_DWORD *)v2 + 14sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0xFFFF;
  *(void *)(v2 + 572) = 0LL;
  *(void *)(v2 + 564) = 0LL;
  *((_OWORD *)v1 + 15) = xmmword_1012E0070;
  *((__n128 *)v1 + 16) = result;
  *((__n128 *)v1 + 17) = result;
  *((__n128 *)v1 + 1_Block_object_dispose(va, 8) = result;
  *((_DWORD *)v2 + 161) = 0;
  *((void *)v2 + 81) = 0xBFF0000000000000LL;
  *((void *)v2 + 83) = 0LL;
  *((void *)v2 + 82) = 0LL;
  *((_DWORD *)v2 + 16_Block_object_dispose(va, 8) = 0;
  *((void *)v1 + 42) = 0xBFF0000000000000LL;
  *((_DWORD *)v2 + 171) = 0x7FFFFFFF;
  v2[712] = 0;
  *((void *)v2 + 8_Block_object_dispose(va, 8) = 0LL;
  *((void *)v2 + 86) = 0LL;
  *((void *)v2 + 87) = 0LL;
  *((_DWORD *)v2 + 179) = 0xFFFF;
  *((void *)v2 + 91) = 0LL;
  *((void *)v2 + 9sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0LL;
  *((_OWORD *)v2 + 46) = xmmword_1012E0070;
  *((__n128 *)v2 + 47) = result;
  *((__n128 *)v2 + 4_Block_object_dispose(va, 8) = result;
  *((__n128 *)v2 + 49) = result;
  *((_DWORD *)v2 + 20sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0;
  *((void *)v1 + 5_Block_object_dispose(va, 8) = 0xBFF0000000000000LL;
  *(void *)(v2 + 812) = 0LL;
  *(void *)(v2 + 82sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0LL;
  *((_DWORD *)v2 + 207) = 0;
  *((void *)v2 + 104) = 0xBFF0000000000000LL;
  *((_DWORD *)v2 + 21sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0x7FFFFFFF;
  *(void *)(v2 + 844) = 0LL;
  *(void *)(v2 + 852) = 0LL;
  v2[868] = 0;
  *(void *)(v2 + 86sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0LL;
  *((_DWORD *)v2 + 21_Block_object_dispose(va, 8) = 0xFFFF;
  *(void *)(v2 + 884) = 0LL;
  *(void *)(v2 + 876) = 0LL;
  *(_OWORD *)(v2 + 892) = xmmword_1012E0070;
  *(__n128 *)(v2 + 90_Block_object_dispose(va, 8) = result;
  *(__n128 *)(v2 + 924) = result;
  *(__n128 *)(v2 + 94sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = result;
  *((_DWORD *)v2 + 239) = 0;
  *((void *)v2 + 12sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0xBFF0000000000000LL;
  *((void *)v2 + 122) = 0LL;
  *((void *)v2 + 121) = 0LL;
  *((_DWORD *)v2 + 246) = 0;
  *((void *)v1 + 81) = 0xBFF0000000000000LL;
  *((_DWORD *)v2 + 249) = 0x7FFFFFFF;
  *((void *)v2 + 126) = 0LL;
  *((void *)v2 + 125) = 0LL;
  v2[1024] = 0;
  *((void *)v2 + 127) = 0LL;
  return result;
}

void sub_1009CDBC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id v2 = *(void **)(v1 + 224);
    if (v2)
    {
      *(void *)(v1 + 232) = v2;
      operator delete(v2);
    }

    operator delete((void *)v1);
  }

void sub_1009CDC54()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_1009CDCB8()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_1009CDD2C(_Unwind_Exception *a1)
{
}

void sub_1009CDD44()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_101342AE8;
      v1[3] = unk_101342AF8;
      v1[4] = xmmword_101342B08;
      v1[0] = xmmword_101342AC8;
      v1[1] = unk_101342AD8;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_1009CDE18(_Unwind_Exception *a1)
{
}

void sub_1009CDE30()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_1009CDECC(_Unwind_Exception *a1)
{
}

void sub_1009CDEE4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      *uint64_t v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_1009CDF70(_Unwind_Exception *a1)
{
}

void sub_1009CDF88(void *a1@<X8>)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_101999B00);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_101999B00))
  {
    __cxa_atexit((void (*)(void *))sub_1009CE040, &qword_101999AF0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101999B00);
  }

  if (qword_101999B08 != -1) {
    dispatch_once(&qword_101999B08, &stru_101865D38);
  }
  uint64_t v3 = *(void *)algn_101999AF8;
  *a1 = qword_101999AF0;
  a1[1] = v3;
  if (v3)
  {
    uint64_t v4 = (unint64_t *)(v3 + 8);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

void sub_1009CE044(id a1)
{
  uint64_t v1 = (std::__shared_weak_count *)*((void *)&v4 + 1);
  if (*((void *)&v4 + 1))
  {
    unsigned __int8 v2 = (unint64_t *)(*((void *)&v4 + 1) + 8LL);
    do
      unint64_t v3 = __ldaxr(v2);
    while (__stlxr(v3 - 1, v2));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }

uint64_t sub_1009CE0B8(uint64_t a1)
{
  *(CFAbsoluteTime *)a1 = CFAbsoluteTimeGetCurrent();
  sub_1005CAFE8((void *)(a1 + 8));
  sub_1010DDBC0(v5, "CLWifiAssociatedApHarvestDatabase");
  sub_1010DDBC0(__p, "CLWifiAssociatedApWifiHarvester");
  sub_100F81CD0(a1 + 24, v5, __p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  return a1;
}

void sub_1009CE150( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  sub_10000AE14(v20);
  _Unwind_Resume(a1);
}

void sub_1009CE194(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  BOOL v2 = sub_100400B64(*(void *)(a1 + 8));
  sub_100F81CDC(v1 + 16, v2);
  sub_10036E100((double *)(v1 + 16));
  if (!sub_100400B64(*(void *)v1))
  {
    sub_1005CAFE8(buf);
    sub_10005F550(v1, (__int128 *)buf);
    unint64_t v3 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8])
    {
      char v4 = (unint64_t *)(*(void *)&buf[8] + 8LL);
      do
        unint64_t v5 = __ldaxr(v4);
      while (__stlxr(v5 - 1, v4));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }

    if (sub_100400B64(*(void *)v1)) {
      char v6 = "success";
    }
    else {
      char v6 = "fail";
    }
    sub_1010DDBC0(__p, v6);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101865D58);
    }
    int v7 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = __p;
      if (v12 < 0) {
        uint64_t v8 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 136315138;
      *(void *)&uint8_t buf[4] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CLWifiAssociatedApWifiHarvester, re-initialize database: %s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101865D58);
      }
      id v9 = __p;
      if (v12 < 0) {
        id v9 = (void **)__p[0];
      }
      int v13 = 136315138;
      unint64_t v14 = v9;
      id v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "CLWifiAssociatedApWifiHarvester, re-initialize database: %s",  (const char *)&v13);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiAssociatedApWifiHarvester::reinitializeWifiAssociatedApHarvestDatabaseIfInvalid()",  "%s\n",  v10);
    }

    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }

void sub_1009CE40C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009CE434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = *(double *)(a2 + 76) - *(double *)a1;
  uint64_t result = (uint64_t)sub_100F4BF44();
  if (v6 >= *(double *)(result + 24) && *(_BYTE *)(a2 + 180) == 0)
  {
    sub_100B60D34((uint64_t)&v11, a3, (_OWORD *)a2, -1LL);
    v9[6] = v18;
    void v9[7] = v19;
    v10[0] = v20[0];
    *(_OWORD *)((char *)v10 + 12) = *(_OWORD *)((char *)v20 + 12);
    _OWORD v9[2] = v14;
    void v9[3] = v15;
    v9[4] = v16;
    void v9[5] = v17;
    v9[0] = v12;
    v9[1] = v13;
    uint64_t result = sub_100869780((uint64_t)v9);
    if ((_DWORD)result)
    {
      sub_1009CE194(a1);
      uint64_t result = sub_1005CD9E8(*(void *)(a1 + 8), &v11);
      *(void *)a1 = *(void *)(a2 + 76);
    }
  }

  return result;
}

void sub_1009CE51C(uint64_t a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101865D58);
  }
  BOOL v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "Clearing associated AP harvest data in WifiAssociatedApHarvestDatabase [Wifi Harvest]",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101865D58);
    }
    v4[0] = 0;
    unint64_t v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "Clearing associated AP harvest data in WifiAssociatedApHarvestDatabase [Wifi Harvest]",  v4,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiAssociatedApWifiHarvester::clearHarvest()", "%s\n", v3);
  }

  sub_1004031F8(*(void *)(a1 + 8));
}

void sub_1009CE6B4(uint64_t a1)
{
  BOOL v2 = (uint64_t *)sub_100F4BF44();
  double v3 = sub_100F4CB14(v2);
  double v6 = v3;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101865D58);
  }
  char v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 134283521;
    double v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Purging Wifi harvest samples older than %{private}.1fs in WifiAssociatedApHarvestDatabase",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101865D58);
    }
    int v7 = 134283521;
    double v8 = v3;
    unint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "Purging Wifi harvest samples older than %{private}.1fs in WifiAssociatedApHarvestDatabase",  &v7,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiAssociatedApWifiHarvester::purgeOlderWifiHarvestSamples()",  "%s\n",  v5);
  }

  sub_100400BE0(*(void *)(a1 + 8), &v6);
}

void sub_1009CE880(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void *sub_1009CE8AC@<X0>(void *a1@<X8>)
{
  BOOL v2 = operator new(0x90uLL);
  uint64_t result = sub_1009CE8F4(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_1009CE8E0(_Unwind_Exception *a1)
{
}

void *sub_1009CE8F4(void *a1)
{
  a1[2] = 0LL;
  *a1 = off_101865D88;
  a1[1] = 0LL;
  sub_1009CE0B8((uint64_t)(a1 + 3));
  return a1;
}

void sub_1009CE92C(_Unwind_Exception *a1)
{
}

void sub_1009CE940(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101865D88;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1009CE954(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101865D88;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_1009CE978(uint64_t a1)
{
  return sub_1009CE9A0((uint64_t)&v2, a1 + 24);
}

uint64_t sub_1009CE9A0(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = &off_10188FD28;
  return sub_10000AE14(a2 + 8);
}

void sub_1009CE9F0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_1009CEA8C(_Unwind_Exception *a1)
{
}

void sub_1009CEAA4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      *uint64_t v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_1009CEB30(_Unwind_Exception *a1)
{
}

std::string::size_type *sub_1009CEB48(std::string::size_type *a1, int a2)
{
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  *a1 = (std::string::size_type)off_101865DD8;
  a1[9] = (std::string::size_type)off_101865E90;
  sub_100B14CF0(a1 + 50, 0LL, 0LL);
  double v4 = sub_1009CF094(a1 + 52);
  (*(void (**)(std::string::size_type *, double))(*a1 + 112))(a1, v4);
  return a1;
}

void sub_1009CEBFC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_1009CEC40(uint64_t a1, char *a2, int a3, uint64_t a4, int a5, float a6)
{
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + _Block_object_dispose(va, 8) = 0u;
  __int128 v12 = (void *)(a1 + 8);
  *(void *)a1 = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 8));
  void *v12 = &off_101826EF8;
  *(void *)a1 = off_101866190;
  *(void *)(a1 + 72) = off_101866238;
  sub_100D8A584(a1 + 72, a2, a3, a1, a6, a4, a5, 0LL);
  *(void *)a1 = off_101866190;
  *(void *)(a1 + 72) = off_101866238;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 20_Block_object_dispose(va, 8) = 0u;
  *(_DWORD *)(a1 + 32sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = 12000;
  *(void *)(a1 + 32_Block_object_dispose(va, 8) = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 336));
  *(void *)(a1 + 336) = &off_101826EF8;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v29 = a1 + 112;
  (*(void (**)(void))(v13 + 16))();
  __int16 v31 = 256;
  if (a3)
  {
    *(void *)(a1 + 24_Block_object_dispose(va, 8) = 0xBFF0000000000000LL;
LABEL_3:
    (*(void (**)(uint64_t))(*(void *)v29 + 24LL))(v29);
    return a1;
  }

  if (*(char *)(a4 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a4, *(void *)(a4 + 8));
  }

  else
  {
    *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)a4;
    uint64_t v28 = *(void *)(a4 + 16);
  }

  sub_100D8AF38(a1 + 72, (uint64_t)__p);
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v14 = sub_1006E27E8();
  sub_100413284(v14, buf);
  uint64_t v15 = (int *)(a1 + 320);
  char v16 = sub_1002A7CB0(*(uint64_t *)buf, "ActivityInMemoryBufferSize", (_DWORD *)(a1 + 320));
  __int128 v17 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }

  if ((v16 & 1) == 0) {
    *uint64_t v15 = 12000;
  }
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_101866278);
  }
  uint64_t v20 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    int v21 = *v15;
    *(_DWORD *)uint64_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v21;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Buffer size: %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101866278);
    }
    int v24 = *v15;
    v32[0] = 67109120;
    v32[1] = v24;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Buffer size: %d",  v32);
    int v26 = (uint8_t *)v25;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::CLActivityRecorderDb (const char *, BOOL, float, const std::string &, const CLSqliteDatabase::SqlitePropertyPersistence) [T = CLCycling SessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v25);
    if (v26 != buf) {
      free(v26);
    }
  }

  int v22 = HIBYTE(v31);
  *(void *)(a1 + 24_Block_object_dispose(va, 8) = 0xBFF0000000000000LL;
  if (v22)
  {
    if ((_BYTE)v31)
    {
      pthread_mutex_unlock(v30);
      return a1;
    }

    goto LABEL_3;
  }

  return a1;
}

void sub_1009CEFE8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  v24[41] = off_101826EC8;
  sub_1001B9C98(v27);
  sub_1009D4FA0(v26);
  sub_100D8A88C(a12);
  *int v24 = off_101826EC8;
  sub_1001B9C98(v25);
  _Unwind_Resume(a1);
}

void sub_1009CF08C()
{
}

double sub_1009CF094@<D0>(std::string::size_type *a1@<X8>)
{
  for (uint64_t i = 0LL; i != 72; i += 6LL)
  {
    double v3 = (&off_101865F40)[i];
    if (v3)
    {
      else {
        size_t v4 = a1[1];
      }
      size_t v5 = strlen((&off_101865F40)[i]);
      sub_1000392EC((uint64_t)&v20, v4 + v5);
      if ((v20.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        double v6 = &v20;
      }
      else {
        double v6 = (std::string *)v20.__r_.__value_.__r.__words[0];
      }
      if (v4)
      {
        else {
          char v7 = (const void *)*a1;
        }
        memmove(v6, v7, v4);
      }

      double v8 = (char *)v6 + v4;
      if (v5) {
        memmove(v8, v3, v5);
      }
      v8[v5] = 0;
      id v9 = std::string::append(&v20, ", ");
      std::string::size_type v10 = v9->__r_.__value_.__r.__words[0];
      v21[0] = v9->__r_.__value_.__l.__size_;
      *(void *)((char *)v21 + 7) = *(std::string::size_type *)((char *)&v9->__r_.__value_.__r.__words[1] + 7);
      unsigned __int8 size = v9->__r_.__value_.__s.__size_;
      v9->__r_.__value_.__l.__size_ = 0LL;
      v9->__r_.__value_.__l.__cap_ = 0LL;
      v9->__r_.__value_.__r.__words[0] = 0LL;
      *a1 = v10;
      a1[1] = v21[0];
      *(std::string::size_type *)((char *)a1 + 15) = *(void *)((char *)v21 + 7);
      *((_BYTE *)a1 + 23) = size;
    }
  }

  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v13 = (uint64_t *)*a1;
    uint64_t v12 = a1[1] - 1;
    a1[1] = v12;
  }

  else
  {
    uint64_t v12 = *((unsigned __int8 *)a1 + 23) - 1LL;
    *((_BYTE *)a1 + 23) = v12 & 0x7F;
    uint64_t v13 = (uint64_t *)a1;
  }

  *((_BYTE *)v13 + v12) = 0;
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v15 = (uint64_t *)*a1;
    uint64_t v14 = a1[1] - 1;
    a1[1] = v14;
  }

  else
  {
    uint64_t v14 = *((unsigned __int8 *)a1 + 23) - 1LL;
    *((_BYTE *)a1 + 23) = v14 & 0x7F;
    uint64_t v15 = (uint64_t *)a1;
  }

  *((_BYTE *)v15 + v14) = 0;
  else {
    size_t v16 = a1[1];
  }
  __int128 v17 = &v20;
  sub_1000392EC((uint64_t)&v20, v16 + 27);
  if ((v20.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    __int128 v17 = (std::string *)v20.__r_.__value_.__r.__words[0];
  }
  if (v16)
  {
    else {
      __int128 v18 = (const void *)*a1;
    }
    memmove(v17, v18, v16);
  }

  strcpy((char *)v17 + v16, " from CyclingSessionSummary");
  double result = *(double *)&v20.__r_.__value_.__l.__data_;
  *(std::string *)a1 = v20;
  return result;
}

void sub_1009CF318( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

void *sub_1009CF350(void *a1)
{
  a1[9] = off_101866238;
  uint64_t v2 = (uint64_t)(a1 + 9);
  *a1 = off_101866190;
  a1[41] = off_101826EC8;
  sub_1001B9C98(a1 + 42);
  sub_1009D4FA0(a1 + 22);
  sub_100D8A88C(v2);
  *a1 = off_101826EC8;
  sub_1001B9C98(a1 + 1);
  return a1;
}

void *sub_1009CF3CC(uint64_t a1)
{
  *(void *)a1 = off_101865DD8;
  *(void *)(a1 + 72) = off_101865E90;
  return sub_1009CF350((void *)a1);
}

void *sub_1009CF414(uint64_t a1)
{
  return sub_1009CF3CC(a1 - 72);
}

void sub_1009CF41C(uint64_t a1)
{
  uint64_t v1 = sub_1009CF3CC(a1);
  operator delete(v1);
}

void sub_1009CF430(uint64_t a1)
{
  uint64_t v1 = sub_1009CF3CC(a1 - 72);
  operator delete(v1);
}

uint64_t sub_1009CF448(uint64_t *a1, uint64_t a2, double a3)
{
  char v7 = a1 + 14;
  uint64_t v6 = a1[14];
  v16[1] = (uint64_t)(a1 + 14);
  (*(void (**)(uint64_t *))(v6 + 16))(a1 + 14);
  __int16 v17 = 256;
  if (*(double *)(*(void *)(a2 + 8) - 16LL) == 1.79769313e308 && sub_100D8A92C(a1 + 9))
  {
    sub_1003C0454(a1[10]);
    sub_100B14CF8(a1 + 50, v16);
    double v8 = (sqlite3_stmt *)sub_100019240(v16[0]);
    if (sub_1003B7480(v8, 1, a3 - *(double *)(*(void *)(a2 + 8) - 24LL)))
    {
      uint64_t v9 = a1[10];
      std::string::size_type v10 = (sqlite3_stmt *)sub_100019240(v16[0]);
      sub_1003BB2BC(v9, v10);
      uint64_t v11 = (*(int (**)(uint64_t *))(*a1 + 152))(a1);
    }

    else
    {
      uint64_t v11 = -1LL;
    }

    sub_1003C05BC(a1[10]);
    uint64_t v12 = a1[10];
    else {
      uint64_t v13 = *(void *)(v12 + 88);
    }
    sub_1003C1EC0(v12, v13);
    uint64_t v14 = v16[0];
    v16[0] = 0LL;
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
    }
  }

  else
  {
    uint64_t v11 = -1LL;
  }

  (*(void (**)(uint64_t *))(*v7 + 24))(v7);
  return v11;
}

void sub_1009CF584(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1009CF5C0(uint64_t *a1, uint64_t a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  return sub_1009CF448(a1, a2, Current);
}

uint64_t sub_1009CF5EC(uint64_t a1, uint64_t a2)
{
  double v3 = (uint64_t *)(a1 - 72);
  double Current = CFAbsoluteTimeGetCurrent();
  return sub_1009CF448(v3, a2, Current);
}

uint64_t sub_1009CF618(uint64_t a1)
{
  uint64_t v3 = v8;
  size_t v4 = (sqlite3_stmt *)sub_100019240(v8);
  int v5 = sqlite3_step(v4);
  if (v5 == 100)
  {
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v3);
    uint64_t v1 = sqlite3_column_int(v6, 0);
  }

  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  if (v5 != 100) {
    return 0xFFFFFFFFLL;
  }
  return v1;
}

void sub_1009CF6B8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009CF6DC(uint64_t a1)
{
  return sub_1009CF618(a1 - 72);
}

uint64_t sub_1009CF6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  *(void *)&v23[1] = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v24 = 256;
  v23[0] = *(double *)(a2 + 24);
  if (sub_100D8AB44(v6, v23))
  {
    if (sub_100D8A92C(v6))
    {
      (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 80LL))(a1, a2, 0LL);
    }

    else if (!*(_BYTE *)(a1 + 128))
    {
      uint64_t v12 = (void *)(a1 + 176);
      unint64_t v13 = *(void *)(a1 + 216);
      if (v13 > *(int *)(a1 + 320))
      {
        ++*(void *)(a1 + 208);
        *(void *)(a1 + 216) = v13 - 1;
        sub_100354110(a1 + 176, 1);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101866278);
        }
        uint64_t v14 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "Maximum number of entries exceeded, throwing out oldest entry.",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_101866278);
          }
          v22[0] = 0;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Maximum number of entries exceeded, throwing out oldest entry.",  v22,  2);
          std::string v20 = (uint8_t *)v19;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::addSuspec tRecord(const T &) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v19);
          if (v20 != buf) {
            free(v20);
          }
        }
      }

      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_101866298);
      }
      uint64_t v15 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "Buffer was added to since db was inaccesible.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_101866298);
        }
        v22[0] = 0;
        LODWORD(v21) = 2;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Buffer was added to since db was inaccesible.",  v22,  v21);
        __int128 v18 = (uint8_t *)v17;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::addSuspectR ecord(const T &) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v17);
        if (v18 != buf) {
          free(v18);
        }
      }

      __n128 v7 = sub_1009D5034(v12, a2);
    }
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101866278);
    }
    uint64_t v8 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = (void *)(a1 + 88);
      *(_DWORD *)uint64_t buf = 68289538;
      int v26 = 0;
      __int16 v27 = 2082;
      uint64_t v28 = "";
      __int16 v29 = 1026;
      int v30 = (int)v23[0];
      __int16 v31 = 2082;
      int v32 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:CL database error, record contains invalid time, invalid time:%{public}d, name: %{public, location:escape_only}s}",  buf,  0x22u);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866278);
      }
    }

    std::string::size_type v10 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      uint64_t v11 = (void *)(a1 + 88);
      *(_DWORD *)uint64_t buf = 68289538;
      int v26 = 0;
      __int16 v27 = 2082;
      uint64_t v28 = "";
      __int16 v29 = 1026;
      int v30 = (int)v23[0];
      __int16 v31 = 2082;
      int v32 = v11;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v10,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "CL database error, record contains invalid time",  "{msg%{public}.0s:CL database error, record contains invalid time, invalid time:%{public}d, name: %{public, location:escape_only}s}",  buf,  0x22u);
    }
  }

  return (*(uint64_t (**)(uint64_t, __n128))(*(void *)v5 + 24LL))(v5, v7);
}

void sub_1009CFBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

void sub_1009CFC0C(uint64_t a1@<X0>, const unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_100D8A92C(a1 + 72))
  {
    else {
      size_t v6 = *(void *)(a1 + 424);
    }
    __n128 v7 = __p;
    sub_1000392EC((uint64_t)__p, v6 + 22);
    if (v18 < 0) {
      __n128 v7 = (void **)__p[0];
    }
    if (v6)
    {
      else {
        uint64_t v8 = *(const void **)(a1 + 416);
      }
      memmove(v7, v8, v6);
    }

    strcpy((char *)v7 + v6, "  where session_id = ?");
    if (v18 >= 0) {
      uint64_t v9 = (char *)__p;
    }
    else {
      uint64_t v9 = (char *)__p[0];
    }
    sub_1003C0D54(*(void *)(a1 + 80), v9, v19);
    uint64_t v10 = *(void *)&v19[0];
    uint64_t v16 = *(void *)&v19[0];
    uuid_unparse(a2, out);
    uint64_t v11 = (sqlite3_stmt *)sub_100019240(v10);
    if (sub_1003BC1F0(v11, 1, out))
    {
      char v12 = 1;
      if (!sub_1009CFE00(&v16, (uint64_t)v19))
      {
        __int128 v13 = v19[3];
        *(_OWORD *)(a3 + 32) = v19[2];
        *(_OWORD *)(a3 + 4_Block_object_dispose(va, 8) = v13;
        __int128 v14 = v19[5];
        *(_OWORD *)(a3 + 64) = v19[4];
        *(_OWORD *)(a3 + 8sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v14;
        __int128 v15 = v19[1];
        *(_OWORD *)a3 = v19[0];
        *(_OWORD *)(a3 + 16) = v15;
        *(_BYTE *)(a3 + 96) = 1;
        char v12 = 0;
      }
    }

    else
    {
      char v12 = 1;
    }

    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
    if (v18 < 0)
    {
      operator delete(__p[0]);
      if ((v12 & 1) == 0) {
        return;
      }
    }

    else if ((v12 & 1) == 0)
    {
      return;
    }
  }

  *(_BYTE *)a3 = 0;
  *(_BYTE *)(a3 + 96) = 0;
}

void sub_1009CFDBC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009CFE00(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (sqlite3_stmt *)sub_100019240(*a1);
  int v5 = sqlite3_step(v4);
  if (v5 == 101) {
    return 1LL;
  }
  if (v5 != 100) {
    return 2LL;
  }
  size_t v6 = (sqlite3_stmt *)sub_100019240(*a1);
  *(void *)a2 = sqlite3_column_int64(v6, 0);
  __n128 v7 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 24) = sqlite3_column_double(v7, 1);
  uint64_t v8 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 32) = sqlite3_column_double(v8, 2);
  uint64_t v9 = (sqlite3_stmt *)sub_100019240(*a1);
  *(void *)(a2 + 4sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = sqlite3_column_int(v9, 3);
  uint64_t v10 = (sqlite3_stmt *)sub_100019240(*a1);
  *(void *)(a2 + 4_Block_object_dispose(va, 8) = sqlite3_column_int(v10, 4);
  uint64_t v11 = (sqlite3_stmt *)sub_100019240(*a1);
  char v12 = sqlite3_column_text(v11, 5);
  uuid_parse((const char *)v12, (unsigned __int8 *)(a2 + 8));
  __int128 v13 = (sqlite3_stmt *)sub_100019240(*a1);
  double v14 = sqlite3_column_double(v13, 6);
  if (v14 == 0.0 || v14 == 5.0) {
    double v14 = -1.0;
  }
  *(double *)(a2 + 56) = v14;
  uint64_t v16 = (sqlite3_stmt *)sub_100019240(*a1);
  double v17 = sqlite3_column_double(v16, 7);
  if (v17 == 0.0 || v17 == 5.0) {
    double v17 = -1.0;
  }
  *(double *)(a2 + 64) = v17;
  unint64_t v19 = (sqlite3_stmt *)sub_100019240(*a1);
  float v20 = sqlite3_column_double(v19, 8);
  *(float *)(a2 + 72) = v20;
  uint64_t v21 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 8sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = sqlite3_column_double(v21, 9);
  int v22 = (sqlite3_stmt *)sub_100019240(*a1);
  double v23 = sqlite3_column_double(v22, 10);
  uint64_t result = 0LL;
  *(float *)&double v23 = v23;
  *(_DWORD *)(a2 + 8_Block_object_dispose(va, 8) = LODWORD(v23);
  return result;
}

uint64_t sub_1009CFF7C(uint64_t a1, char **a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  uint64_t v40 = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v41 = 256;
  if (sub_100D8A92C(v6))
  {
    a2[1] = *a2;
    else {
      size_t v7 = *(void *)(a1 + 424);
    }
    uint64_t v8 = __p;
    sub_1000392EC((uint64_t)__p, v7 + 24);
    if (v39 < 0) {
      uint64_t v8 = (void **)__p[0];
    }
    if (v7)
    {
      else {
        uint64_t v9 = *(const void **)(a1 + 416);
      }
      memmove(v8, v9, v7);
    }

    strcpy((char *)v8 + v7, " ORDER BY start_time ASC");
    if (v39 >= 0) {
      uint64_t v10 = (char *)__p;
    }
    else {
      uint64_t v10 = (char *)__p[0];
    }
    sub_1003C0D54(*(void *)(a1 + 80), v10, &v42);
    uint64_t v36 = v42;
    uint64_t v37 = v42;
    sub_1003C0454(*(void *)(a1 + 80));
    while (!sub_1009CFE00(&v37, (uint64_t)&v42))
    {
      uint64_t v11 = a2[1];
      unint64_t v12 = (unint64_t)a2[2];
      if ((unint64_t)v11 >= v12)
      {
        unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((v11 - *a2) >> 5);
        unint64_t v19 = v18 + 1;
        if (v18 + 1 > 0x2AAAAAAAAAAAAAALL) {
          sub_100007008();
        }
        unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (void)*a2) >> 5);
        if (2 * v20 > v19) {
          unint64_t v19 = 2 * v20;
        }
        if (v20 >= 0x155555555555555LL) {
          unint64_t v21 = 0x2AAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v21 = v19;
        }
        if (v21) {
          int v22 = (char *)sub_1003F6AEC((uint64_t)(a2 + 2), v21);
        }
        else {
          int v22 = 0LL;
        }
        double v23 = &v22[96 * v18];
        __int128 v24 = v43;
        *(_OWORD *)double v23 = v42;
        *((_OWORD *)v23 + 1) = v24;
        __int128 v25 = v44;
        __int128 v26 = v45;
        __int128 v27 = v47;
        *((_OWORD *)v23 + 4) = v46;
        *((_OWORD *)v23 + 5) = v27;
        *((_OWORD *)v23 + 2) = v25;
        *((_OWORD *)v23 + 3) = v26;
        __int16 v29 = *a2;
        uint64_t v28 = a2[1];
        int v30 = v23;
        if (v28 != *a2)
        {
          do
          {
            __int128 v31 = *((_OWORD *)v28 - 5);
            *((_OWORD *)v30 - 6) = *((_OWORD *)v28 - 6);
            *((_OWORD *)v30 - 5) = v31;
            __int128 v32 = *((_OWORD *)v28 - 4);
            __int128 v33 = *((_OWORD *)v28 - 3);
            __int128 v34 = *((_OWORD *)v28 - 1);
            *((_OWORD *)v30 - 2) = *((_OWORD *)v28 - 2);
            *((_OWORD *)v30 - 1) = v34;
            *((_OWORD *)v30 - 4) = v32;
            *((_OWORD *)v30 - 3) = v33;
            v30 -= 96;
            v28 -= 96;
          }

          while (v28 != v29);
          uint64_t v28 = *a2;
        }

        double v17 = v23 + 96;
        *a2 = v30;
        a2[1] = v23 + 96;
        a2[2] = &v22[96 * v21];
        if (v28) {
          operator delete(v28);
        }
      }

      else
      {
        __int128 v13 = v43;
        *(_OWORD *)uint64_t v11 = v42;
        *((_OWORD *)v11 + 1) = v13;
        __int128 v14 = v44;
        __int128 v15 = v45;
        __int128 v16 = v47;
        *((_OWORD *)v11 + 4) = v46;
        *((_OWORD *)v11 + 5) = v16;
        *((_OWORD *)v11 + 2) = v14;
        *((_OWORD *)v11 + 3) = v15;
        double v17 = v11 + 96;
      }

      a2[1] = v17;
    }

    sub_1003C05BC(*(void *)(a1 + 80));
    if (v36) {
      (*(void (**)(uint64_t))(*(void *)v36 + 8LL))(v36);
    }
    if (v39 < 0) {
      operator delete(__p[0]);
    }
  }

  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
}

void sub_1009D0254( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a9) {
    (*(void (**)(uint64_t))(*(void *)a9 + 8LL))(a9);
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1011C52D0((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1009D02BC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (_OWORD *)*a2;
  uint64_t v4 = (_OWORD *)a2[1];
  if ((_OWORD *)*a2 == v4) {
    goto LABEL_65;
  }
  size_t v7 = (_OWORD *)a2[1];
  while (1)
  {
    double v9 = *((double *)v5 + 3);
    double v8 = *((double *)v5 + 4);
    double v10 = *(double *)a3;
    int v11 = *(_DWORD *)(a3 + 32);
    if (v11 == 1)
    {
      __int128 v13 = *(const __int32 **)(a3 + 40);
      __int128 v14 = *(const __int32 **)(a3 + 48);
      if (v13 == v14)
      {
        BOOL v18 = *((void *)v5 + 6) == -1LL;
      }

      else
      {
        uint64_t v15 = *((void *)v5 + 6);
        __int128 v16 = *(__int32 **)(a3 + 48);
        if (v15 == (int)v15)
        {
          double v17 = wmemchr(v13, v15, v14 - v13);
          if (v17) {
            __int128 v16 = v17;
          }
          else {
            __int128 v16 = (__int32 *)v14;
          }
          __int128 v14 = *(const __int32 **)(a3 + 48);
        }

        BOOL v18 = v16 == v14;
      }

      BOOL v12 = !v18;
    }

    else
    {
      BOOL v12 = v11 != 2 || *((void *)v5 + 6) == -1LL;
    }

    unint64_t v20 = *(void **)(a3 + 8);
    unint64_t v19 = *(void **)(a3 + 16);
    if (v20 == v19)
    {
      BOOL v21 = 1;
    }

    else
    {
      while (*v20 != *((void *)v5 + 5))
      {
        if (++v20 == v19)
        {
          unint64_t v20 = *(void **)(a3 + 16);
          break;
        }
      }

      BOOL v21 = v20 != v19;
    }

    if (v8 - v9 < v10) {
      BOOL v12 = 0;
    }
    if (!v12 || !v21) {
      break;
    }
    v5 += 6;
    if (v5 == v4) {
      goto LABEL_66;
    }
  }

  if (v5 != v4)
  {
    double v23 = v5 + 6;
    if (v5 + 6 != v4)
    {
      size_t v7 = v5;
      do
      {
        __int128 v24 = v23;
        double v26 = *((double *)v5 + 15);
        double v25 = *((double *)v5 + 16);
        double v27 = *(double *)a3;
        int v28 = *(_DWORD *)(a3 + 32);
        if (v28 == 1)
        {
          int v30 = *(const __int32 **)(a3 + 40);
          __int128 v31 = *(const __int32 **)(a3 + 48);
          if (v30 == v31)
          {
            BOOL v35 = *((void *)v5 + 18) == -1LL;
          }

          else
          {
            uint64_t v32 = *((void *)v5 + 18);
            __int128 v33 = *(__int32 **)(a3 + 48);
            if (v32 == (int)v32)
            {
              __int128 v34 = wmemchr(v30, v32, v31 - v30);
              if (v34) {
                __int128 v33 = v34;
              }
              else {
                __int128 v33 = (__int32 *)v31;
              }
              __int128 v31 = *(const __int32 **)(a3 + 48);
            }

            BOOL v35 = v33 == v31;
          }

          BOOL v29 = !v35;
        }

        else
        {
          BOOL v29 = v28 != 2 || *((void *)v5 + 18) == -1LL;
        }

        uint64_t v37 = *(void **)(a3 + 8);
        uint64_t v36 = *(void **)(a3 + 16);
        if (v37 == v36)
        {
          BOOL v38 = 1;
        }

        else
        {
          while (*v37 != *((void *)v5 + 17))
          {
            if (++v37 == v36)
            {
              uint64_t v37 = *(void **)(a3 + 16);
              break;
            }
          }

          BOOL v38 = v37 != v36;
        }

        if (v25 - v26 < v27) {
          BOOL v29 = 0;
        }
        if (v29 && v38)
        {
          __int128 v40 = v24[1];
          *size_t v7 = *v24;
          v7[1] = v40;
          __int128 v41 = v24[2];
          __int128 v42 = v24[3];
          __int128 v43 = v24[5];
          v7[4] = v24[4];
          void v7[5] = v43;
          _DWORD v7[2] = v41;
          uint64_t v7[3] = v42;
          v7 += 6;
        }

        double v23 = v24 + 6;
        uint64_t v5 = v24;
      }

      while (v24 + 6 != v4);
      goto LABEL_66;
    }

uint64_t sub_1009D0544(uint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  a3[1] = *a3;
  if ((sub_100D8A92C(a1 + 72) & 1) != 0)
  {
    uint64_t v10 = (*(uint64_t (**)(uint64_t, void *))(*(void *)a1 + 40LL))(a1, a3);
    sub_1009D02BC(v10, a3, a2);
    uint64_t v12 = *a3;
    uint64_t v11 = a3[1];
    if (*a3 != v11)
    {
      while (*(double *)(v12 + 32) >= a4 && *(double *)(v12 + 24) <= a5)
      {
        v12 += 96LL;
        if (v12 == v11) {
          return 100LL;
        }
      }
    }

    if (v12 != v11)
    {
      uint64_t v15 = v12 + 96;
      if (v12 + 96 != v11)
      {
        do
        {
          if (*(double *)(v15 + 32) >= a4 && *(double *)(v15 + 24) <= a5)
          {
            __int128 v16 = *(_OWORD *)(v15 + 16);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v15;
            *(_OWORD *)(v12 + 16) = v16;
            __int128 v17 = *(_OWORD *)(v15 + 32);
            __int128 v18 = *(_OWORD *)(v15 + 48);
            __int128 v19 = *(_OWORD *)(v15 + 80);
            *(_OWORD *)(v12 + 64) = *(_OWORD *)(v15 + 64);
            *(_OWORD *)(v12 + 8sub_100222B94(v8, (uint64_t)"CLFenceMonitorNotifier.stopMonitoringFences", 0) = v19;
            *(_OWORD *)(v12 + 32) = v17;
            *(_OWORD *)(v12 + 4_Block_object_dispose(va, 8) = v18;
            v12 += 96LL;
          }

          v15 += 96LL;
        }

        while (v15 != v11);
        uint64_t v11 = a3[1];
      }
    }

    if (v12 != v11) {
      a3[1] = v12;
    }
    return 100LL;
  }

  else
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_101865F20);
    }
    __int128 v13 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "CyclingSessionSummary, DB not accessible",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_101865F20);
      }
      v22[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  2LL,  "CyclingSessionSummary, DB not accessible",  v22,  2);
      BOOL v21 = (uint8_t *)v20;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMError CLCyclingSessionSummaryDb::queryInTimeRange(CFAbsoluteTime, CFAbsoluteTime, const CLCyclingSessionSummar yDb::QueryRules &, std::vector<CLCyclingSessionSummaryDbRow> &) const",  "%s\n",  v20);
      if (v21 != buf) {
        free(v21);
      }
    }

    return 109LL;
  }

uint64_t sub_1009D07E0(uint64_t *a1)
{
  uint64_t result = sub_1003C1048(a1[10]);
  if ((_DWORD)result)
  {
    sub_1009D0848((uint64_t)a1);
    sub_1003B59A0( a1[10],  "CyclingSessionSummary",  (const char **)&off_101865F40,  (const std::string::value_type **)&off_10198EB40,  0);
    uint64_t result = sub_1003BF158(a1[10], "DELETE FROM CyclingSessionSummary WHERE start_time < ?");
    a1[50] = result;
    a1[51] = v3;
  }

  return result;
}

uint64_t sub_1009D0848(uint64_t a1)
{
  uint64_t result = sub_1003B747C(*(void *)(a1 + 80), "CyclingSessionSummary");
  if ((_DWORD)result)
  {
    uint64_t v3 = 0LL;
    int v4 = 0;
    double v8 = "session_id";
    do
    {
      BOOL v38 = v8;
      int v39 = 5;
      __int16 v40 = 0;
      char v41 = 0;
      char v42 = 0;
      if ((sub_1003BC790(*(void *)(a1 + 80), "CyclingSessionSummary", v8, (uint64_t)&v38) & 1) == 0)
      {
        sub_1003C0454(*(void *)(a1 + 80));
        sub_10000CE18((uint64_t)v34);
        double v9 = sub_10000CF44(&v35, (uint64_t)"ALTER TABLE CyclingSessionSummary ADD COLUMN ", 45LL);
        size_t v10 = strlen(v8);
        uint64_t v11 = sub_10000CF44(v9, (uint64_t)v8, v10);
        uint64_t v12 = sub_10000CF44(v11, (uint64_t)" ", 1LL);
        __int128 v13 = (const char *)sub_1003BCC40((int)(&off_101865F40)[v3 + 31]);
        size_t v14 = strlen(v13);
        uint64_t v15 = sub_10000CF44(v12, (uint64_t)v13, v14);
        sub_10000CF44(v15, (uint64_t)";", 1LL);
        uint64_t v16 = *(void *)(a1 + 80);
        std::stringbuf::str(&v31, &v36);
        if ((v31.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int128 v17 = &v31;
        }
        else {
          __int128 v17 = (std::stringbuf::string_type *)v31.__r_.__value_.__r.__words[0];
        }
        sub_1003C0D54(v16, (char *)v17, &v29);
        uint64_t v18 = v29.__r_.__value_.__r.__words[0];
        v29.__r_.__value_.__r.__words[0] = 0LL;
        uint64_t v19 = *(void *)(a1 + 80);
        unint64_t v20 = (sqlite3_stmt *)sub_100019240(v18);
        sub_1003BB2BC(v19, v20);
        sub_10000CE18((uint64_t)&v31);
        BOOL v21 = sub_10000CF44(&v31.__r_.__value_.__l.__cap_, (uint64_t)"UPDATE CyclingSessionSummary SET ", 33LL);
        size_t v22 = strlen(v8);
        double v23 = sub_10000CF44(v21, (uint64_t)v8, v22);
        sub_10000CF44(v23, (uint64_t)" = 0;", 5LL);
        uint64_t v24 = *(void *)(a1 + 80);
        std::stringbuf::str(&v29, &v32);
        if ((v29.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          double v25 = &v29;
        }
        else {
          double v25 = (std::stringbuf::string_type *)v29.__r_.__value_.__r.__words[0];
        }
        sub_1003C0D54(v24, (char *)v25, &v30);
        uint64_t v26 = v30;
        uint64_t v30 = 0LL;
        uint64_t v27 = *(void *)(a1 + 80);
        int v28 = (sqlite3_stmt *)sub_100019240(v26);
        sub_1003BB2BC(v27, v28);
        sub_1003C05BC(*(void *)(a1 + 80));
        if (v26) {
          (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
        }
        v31.__r_.__value_.__r.__words[0] = v5;
        *(std::string::size_type *)((char *)v31.__r_.__value_.__r.__words + *(void *)(v5 - 24)) = v7;
        v31.__r_.__value_.__l.__cap_ = v6;
        std::streambuf::~streambuf(&v32);
        std::ios::~ios(&v33);
        if (v18) {
          (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
        }
        v34[0] = v5;
        *(void *)((char *)v34 + *(void *)(v5 - 24)) = v7;
        std::string::size_type v35 = v6;
        std::streambuf::~streambuf(&v36);
        std::ios::~ios(&v37);
        int v4 = 1;
      }

      double v8 = (&off_101865F40)[v3 + 36];
      v3 += 6LL;
    }

    while (v3 != 36);
    uint64_t result = sub_1009D1360( a1,  "CyclingSessionSummary",  (const char **)&off_101865F40,  (const std::string::value_type **)&off_10198EB40);
  }

  return result;
}

void sub_1009D0BEC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, void *a21, uint64_t a22, int a23, __int16 a24, char a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a21);
  if (v59) {
    (*(void (**)(uint64_t))(*(void *)v59 + 8LL))(v59);
  }
  sub_1011F8850((uint64_t)&a59);
  _Unwind_Resume(a1);
}

uint64_t sub_1009D0C84(uint64_t a1)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_1003C0D54(*(void *)(a1 + 80), "DELETE FROM CyclingSessionSummary", &v8);
    uint64_t v3 = v8;
    uint64_t v4 = *(void *)(a1 + 80);
    std::string::size_type v5 = (sqlite3_stmt *)sub_100019240(v8);
    sub_1003BB2BC(v4, v5);
    uint64_t v6 = *(void *)(a1 + 80);
    else {
      uint64_t v7 = *(void *)(v6 + 88);
    }
    uint64_t result = sub_1003C1EC0(v6, v7);
    if (v3) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
  }

  return result;
}

void sub_1009D0D18(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009D0D38(uint64_t a1)
{
  return sub_1009D0C84(a1 - 72);
}

void sub_1009D0D48(uint64_t a1, uint64_t a2)
{
  if ((sub_100D8A92C(a1 + 72) & 1) != 0)
  {
    sub_1003C0D54( *(void *)(a1 + 80),  "INSERT INTO CyclingSessionSummary (start_time, end_time, workout_type, power_meter_id, session_id, hr_max, hr_min, ftp, ftp_calculation_average_time, ftp_raw) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",  buf);
    uint64_t v4 = *(void *)buf;
    std::string::size_type v5 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)buf);
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v4);
    uint64_t v7 = (sqlite3_stmt *)sub_100019240(v4);
    if (!sub_1003C28BC(v7, 3, *(_DWORD *)(a2 + 40))) {
      goto LABEL_13;
    }
    uint64_t v8 = (sqlite3_stmt *)sub_100019240(v4);
    if (!sub_1003C2D24(v8, 4, *(void *)(a2 + 48))) {
      goto LABEL_13;
    }
    double v9 = (sqlite3_stmt *)sub_100019240(v4);
    if (!sub_1003BC1F0(v9, 5, out)
      || (size_t v10 = (sqlite3_stmt *)sub_100019240(v4), !sub_1003B7480(v10, 6, *(double *)(a2 + 56)))
      || (uint64_t v11 = (sqlite3_stmt *)sub_100019240(v4), !sub_1003B7480(v11, 7, *(double *)(a2 + 64)))
      || (uint64_t v12 = (sqlite3_stmt *)sub_100019240(v4), !sub_1003B7480(v12, 8, *(float *)(a2 + 72)))
      || (__int128 v13 = (sqlite3_stmt *)sub_100019240(v4), !sub_1003B7480(v13, 9, *(double *)(a2 + 80)))
      || (size_t v14 = (sqlite3_stmt *)sub_100019240(v4), !sub_1003B7480(v14, 10, *(float *)(a2 + 88)))
      || (uint64_t v15 = *(void *)(a1 + 80), v16 = (sqlite3_stmt *)sub_100019240(v4), !sub_1003BB2BC(v15, v16)))
    {
LABEL_13:
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_101865F20);
      }
      __int128 v17 = (os_log_s *)qword_1019347A8;
      if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_FAULT,  "CyclingSessionSummary, unable to insert record.",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019347A0 != -1) {
          dispatch_once(&qword_1019347A0, &stru_101865F20);
        }
        LOWORD(v27) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  17LL,  "CyclingSessionSummary, unable to insert record.",  &v27,  2);
        uint64_t v26 = (char *)v25;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLCyclingSessionSummaryDb::insertRecordUL(const CLCyclingSessionSummaryDbRow &, BOOL)",  "%s\n",  v25);
        if (v26 != buf) {
          free(v26);
        }
      }
    }

    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
  }

  else
  {
    if (qword_1019347A0 != -1) {
      dispatch_once(&qword_1019347A0, &stru_101865F20);
    }
    uint64_t v18 = (os_log_s *)qword_1019347A8;
    if (os_log_type_enabled((os_log_t)qword_1019347A8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v19 = *(void *)(a2 + 24);
      uint64_t v20 = *(void *)(a2 + 32);
      *(_DWORD *)uint64_t buf = 134349570;
      *(void *)&uint8_t buf[4] = v19;
      __int16 v34 = 2050;
      uint64_t v35 = v20;
      __int16 v36 = 2082;
      uint64_t v37 = out;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "CyclingSessionSummary, database isn't available for entry with startTime, %{public}f, endTime, %{public}f, sessi onId, %{public}s",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019347A0 != -1) {
        dispatch_once(&qword_1019347A0, &stru_101865F20);
      }
      uint64_t v21 = *(void *)(a2 + 24);
      uint64_t v22 = *(void *)(a2 + 32);
      int v27 = 134349570;
      uint64_t v28 = v21;
      __int16 v29 = 2050;
      uint64_t v30 = v22;
      __int16 v31 = 2082;
      std::stringbuf v32 = out;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019347A8,  16LL,  "CyclingSessionSummary, database isn't available for entry with startTime, %{public}f, endTime, %{public}f, sessi onId, %{public}s",  &v27,  32);
      uint64_t v24 = (char *)v23;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLCyclingSessionSummaryDb::insertRecordUL(const CLCyclingSessionSummaryDbRow &, BOOL)",  "%s\n",  v23);
      if (v24 != buf) {
        free(v24);
      }
    }
  }

void sub_1009D11C0(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009D11EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a1 + 120LL))(a1, a2, 0LL);
}

uint64_t sub_1009D11FC()
{
  return 0LL;
}

uint64_t sub_1009D1204(uint64_t a1, uint64_t a2)
{
  else {
    size_t v4 = *(void *)(a1 + 424);
  }
  sub_1000392EC((uint64_t)__p, v4 + 25);
  if (v14 >= 0) {
    std::string::size_type v5 = __p;
  }
  else {
    std::string::size_type v5 = (void **)__p[0];
  }
  if (v4)
  {
    else {
      uint64_t v6 = *(const void **)(a1 + 416);
    }
    memmove(v5, v6, v4);
  }

  strcpy((char *)v5 + v4, " ORDER BY id DESC LIMIT 1");
  if (v14 >= 0) {
    uint64_t v7 = (char *)__p;
  }
  else {
    uint64_t v7 = (char *)__p[0];
  }
  sub_1003C0D54(*(void *)(a1 + 80), v7, &v11);
  uint64_t v8 = v11;
  uint64_t v12 = v11;
  uint64_t v9 = sub_1009CFE00(&v12, a2);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  return v9;
}

void sub_1009D1328( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
  }
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009D1360(uint64_t a1, char *a2, const char **a3, const std::string::value_type **a4)
{
  if (!sub_1003B79FC(*(void *)(a1 + 80), a2))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_101866278);
    }
    uint64_t v8 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#Notice %{public}s needs autoincrement migration",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866278);
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice %{public}s needs autoincrement migration",  &__p,  12);
      __int128 v132 = (std::string *)v131;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::migrateDbCons traints(const char *, const CLSqliteDatabase::ColumnInfo *, const char **) [T = CLCyclingSessionSummaryDbRow, Da taProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v131);
      if (v132 != buf) {
        free(v132);
      }
    }

    memset(&__p, 0, sizeof(__p));
    sub_1010DDBC0(buf, a2);
    uint64_t v9 = std::string::append(buf, "AutoIncr");
    __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    int64_t cap = v9->__r_.__value_.__l.__cap_;
    *(_OWORD *)double v143 = v10;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    v9->__r_.__value_.__r.__words[0] = 0LL;
    sub_1010DDBC0(buf, a2);
    uint64_t v11 = std::string::append(buf, "Index");
    __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    int64_t v142 = v11->__r_.__value_.__l.__cap_;
    *(_OWORD *)__int16 v141 = v12;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    v11->__r_.__value_.__r.__words[0] = 0LL;
    sub_1003C0454(*(void *)(a1 + 80));
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      size_t size = __p.__r_.__value_.__l.__size_;
    }
    char v14 = buf;
    sub_1000392EC((uint64_t)buf, size + 21);
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
      char v14 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if (size)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v14, p_p, size);
    }

    strcpy((char *)v14 + size, "DROP TABLE IF EXISTS ");
    if (cap >= 0) {
      uint64_t v16 = v143;
    }
    else {
      uint64_t v16 = (void **)v143[0];
    }
    if (cap >= 0) {
      std::string::size_type v17 = HIBYTE(cap);
    }
    else {
      std::string::size_type v17 = (std::string::size_type)v143[1];
    }
    uint64_t v18 = std::string::append(buf, (const std::string::value_type *)v16, v17);
    std::string::size_type v19 = v18->__r_.__value_.__r.__words[0];
    v149.__r_.__value_.__r.__words[0] = v18->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v149.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v18->__r_.__value_.__r.__words[1] + 7);
    signed __int8 v20 = v18->__r_.__value_.__s.__size_;
    v18->__r_.__value_.__l.__size_ = 0LL;
    v18->__r_.__value_.__l.__cap_ = 0LL;
    v18->__r_.__value_.__r.__words[0] = 0LL;
    __p.__r_.__value_.__r.__words[0] = v19;
    __p.__r_.__value_.__l.__size_ = v149.__r_.__value_.__r.__words[0];
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v149.__r_.__value_.__r.__words + 7);
    __p.__r_.__value_.__s.__size_ = v20;
    if ((char)buf[0].__r_.__value_.__s.__size_ < 0)
    {
      operator delete(buf[0].__r_.__value_.__l.__data_);
      signed __int8 v20 = __p.__r_.__value_.__s.__size_;
      std::string::size_type v19 = __p.__r_.__value_.__r.__words[0];
    }

    if (v20 >= 0) {
      uint64_t v21 = &__p;
    }
    else {
      uint64_t v21 = (std::string *)v19;
    }
    sub_1003C0D54(*(void *)(a1 + 80), (char *)v21, buf);
    uint64_t v22 = (sqlite3_stmt *)sub_100019240((uint64_t)buf[0].__r_.__value_.__l.__data_);
    int v23 = sqlite3_step(v22);
    std::string::size_type v24 = buf[0].__r_.__value_.__r.__words[0];
    buf[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v24) {
      (*(void (**)(std::string::size_type))(*(void *)v24 + 8LL))(v24);
    }
    if (v23 != 101) {
      goto LABEL_234;
    }
    std::string::assign(&__p, "");
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t v25 = __p.__r_.__value_.__s.__size_;
    }
    else {
      size_t v25 = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v26 = &v148;
    sub_1000392EC((uint64_t)&v148, v25 + 13);
    if ((v148.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v26 = (std::string *)v148.__r_.__value_.__r.__words[0];
    }
    if (v25)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v27 = &__p;
      }
      else {
        int v27 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v26, v27, v25);
    }

    strcpy((char *)v26 + v25, "CREATE TABLE ");
    if (cap >= 0) {
      uint64_t v28 = v143;
    }
    else {
      uint64_t v28 = (void **)v143[0];
    }
    if (cap >= 0) {
      std::string::size_type v29 = HIBYTE(cap);
    }
    else {
      std::string::size_type v29 = (std::string::size_type)v143[1];
    }
    uint64_t v30 = std::string::append(&v148, (const std::string::value_type *)v28, v29);
    __int128 v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v140.__r_.__value_.__l.__cap_ = v30->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v140.__r_.__value_.__l.__data_ = v31;
    v30->__r_.__value_.__l.__size_ = 0LL;
    v30->__r_.__value_.__l.__cap_ = 0LL;
    v30->__r_.__value_.__r.__words[0] = 0LL;
    std::stringbuf v32 = std::string::append(&v140, " (");
    __int128 v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    v149.__r_.__value_.__l.__cap_ = v32->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v149.__r_.__value_.__l.__data_ = v33;
    v32->__r_.__value_.__l.__size_ = 0LL;
    v32->__r_.__value_.__l.__cap_ = 0LL;
    v32->__r_.__value_.__r.__words[0] = 0LL;
    sub_1003BE030(a3, 1, 1, (uint64_t)&v139);
    if ((v139.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v34 = &v139;
    }
    else {
      __int16 v34 = (std::string *)v139.__r_.__value_.__r.__words[0];
    }
    if ((v139.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v35 = v139.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type v35 = v139.__r_.__value_.__l.__size_;
    }
    __int16 v36 = std::string::append(&v149, (const std::string::value_type *)v34, v35);
    __int128 v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    buf[0].__r_.__value_.__l.__cap_ = v36->__r_.__value_.__l.__cap_;
    *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v37;
    v36->__r_.__value_.__l.__size_ = 0LL;
    v36->__r_.__value_.__l.__cap_ = 0LL;
    v36->__r_.__value_.__r.__words[0] = 0LL;
    BOOL v38 = std::string::append(buf, ")");
    std::string::size_type v39 = v38->__r_.__value_.__r.__words[0];
    v146.__r_.__value_.__r.__words[0] = v38->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v146.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v38->__r_.__value_.__r.__words[1] + 7);
    unsigned __int8 v40 = v38->__r_.__value_.__s.__size_;
    v38->__r_.__value_.__l.__size_ = 0LL;
    v38->__r_.__value_.__l.__cap_ = 0LL;
    v38->__r_.__value_.__r.__words[0] = 0LL;
    __p.__r_.__value_.__r.__words[0] = v39;
    __p.__r_.__value_.__l.__size_ = v146.__r_.__value_.__r.__words[0];
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v146.__r_.__value_.__r.__words + 7);
    __p.__r_.__value_.__s.__size_ = v40;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      char v41 = &__p;
    }
    else {
      char v41 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(*(void *)(a1 + 80), (char *)v41, buf);
    char v42 = (sqlite3_stmt *)sub_100019240((uint64_t)buf[0].__r_.__value_.__l.__data_);
    int v43 = sqlite3_step(v42);
    std::string::size_type v44 = buf[0].__r_.__value_.__r.__words[0];
    buf[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v44) {
      (*(void (**)(std::string::size_type))(*(void *)v44 + 8LL))(v44);
    }
    if (v43 != 101) {
      goto LABEL_234;
    }
    sub_1003BE030(a3, 0, 0, (uint64_t)buf);
    std::string::assign(&__p, "");
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t v45 = __p.__r_.__value_.__s.__size_;
    }
    else {
      size_t v45 = __p.__r_.__value_.__l.__size_;
    }
    __int128 v46 = &v145;
    sub_1000392EC((uint64_t)&v145, v45 + 12);
    if ((v145.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      __int128 v46 = (std::string *)v145.__r_.__value_.__r.__words[0];
    }
    if (v45)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v47 = &__p;
      }
      else {
        __int128 v47 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v46, v47, v45);
    }

    strcpy((char *)v46 + v45, "INSERT INTO ");
    if (cap >= 0) {
      int v48 = v143;
    }
    else {
      int v48 = (void **)v143[0];
    }
    if (cap >= 0) {
      std::string::size_type v49 = HIBYTE(cap);
    }
    else {
      std::string::size_type v49 = (std::string::size_type)v143[1];
    }
    uint64_t v50 = std::string::append(&v145, (const std::string::value_type *)v48, v49);
    __int128 v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
    v138.__r_.__value_.__l.__cap_ = v50->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v138.__r_.__value_.__l.__data_ = v51;
    v50->__r_.__value_.__l.__size_ = 0LL;
    v50->__r_.__value_.__l.__cap_ = 0LL;
    v50->__r_.__value_.__r.__words[0] = 0LL;
    int v52 = std::string::append(&v138, " (");
    __int128 v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
    v146.__r_.__value_.__l.__cap_ = v52->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v146.__r_.__value_.__l.__data_ = v53;
    v52->__r_.__value_.__l.__size_ = 0LL;
    v52->__r_.__value_.__l.__cap_ = 0LL;
    v52->__r_.__value_.__r.__words[0] = 0LL;
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v54 = buf;
    }
    else {
      __int16 v54 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v55 = buf[0].__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type v55 = buf[0].__r_.__value_.__l.__size_;
    }
    int v56 = std::string::append(&v146, (const std::string::value_type *)v54, v55);
    __int128 v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
    v139.__r_.__value_.__l.__cap_ = v56->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v139.__r_.__value_.__l.__data_ = v57;
    v56->__r_.__value_.__l.__size_ = 0LL;
    v56->__r_.__value_.__l.__cap_ = 0LL;
    v56->__r_.__value_.__r.__words[0] = 0LL;
    __int16 v58 = std::string::append(&v139, ") SELECT ");
    __int128 v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
    v148.__r_.__value_.__l.__cap_ = v58->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v148.__r_.__value_.__l.__data_ = v59;
    v58->__r_.__value_.__l.__size_ = 0LL;
    v58->__r_.__value_.__l.__cap_ = 0LL;
    v58->__r_.__value_.__r.__words[0] = 0LL;
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v60 = buf;
    }
    else {
      __int16 v60 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v61 = buf[0].__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type v61 = buf[0].__r_.__value_.__l.__size_;
    }
    __int128 v62 = std::string::append(&v148, (const std::string::value_type *)v60, v61);
    __int128 v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
    v140.__r_.__value_.__l.__cap_ = v62->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v140.__r_.__value_.__l.__data_ = v63;
    v62->__r_.__value_.__l.__size_ = 0LL;
    v62->__r_.__value_.__l.__cap_ = 0LL;
    v62->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v64 = std::string::append(&v140, " FROM ");
    __int128 v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
    v149.__r_.__value_.__l.__cap_ = v64->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v149.__r_.__value_.__l.__data_ = v65;
    v64->__r_.__value_.__l.__size_ = 0LL;
    v64->__r_.__value_.__l.__cap_ = 0LL;
    v64->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v66 = std::string::append(&v149, a2);
    std::string::size_type v67 = v66->__r_.__value_.__r.__words[0];
    v147[0] = v66->__r_.__value_.__l.__size_;
    *(void *)((char *)v147 + 7) = *(std::string::size_type *)((char *)&v66->__r_.__value_.__r.__words[1] + 7);
    unsigned __int8 v68 = v66->__r_.__value_.__s.__size_;
    v66->__r_.__value_.__l.__size_ = 0LL;
    v66->__r_.__value_.__l.__cap_ = 0LL;
    v66->__r_.__value_.__r.__words[0] = 0LL;
    __p.__r_.__value_.__r.__words[0] = v67;
    __p.__r_.__value_.__l.__size_ = v147[0];
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v147 + 7);
    __p.__r_.__value_.__s.__size_ = v68;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int16 v69 = &__p;
    }
    else {
      __int16 v69 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(*(void *)(a1 + 80), (char *)v69, &v149);
    __int16 v70 = (sqlite3_stmt *)sub_100019240((uint64_t)v149.__r_.__value_.__l.__data_);
    int v71 = sqlite3_step(v70);
    std::string::size_type v72 = v149.__r_.__value_.__r.__words[0];
    v149.__r_.__value_.__r.__words[0] = 0LL;
    if (v72) {
      (*(void (**)(std::string::size_type))(*(void *)v72 + 8LL))(v72);
    }
    if (v71 != 101) {
      goto LABEL_234;
    }
    std::string::assign(&__p, "");
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t v73 = __p.__r_.__value_.__s.__size_;
    }
    else {
      size_t v73 = __p.__r_.__value_.__l.__size_;
    }
    __int128 v74 = buf;
    sub_1000392EC((uint64_t)buf, v73 + 11);
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
      __int128 v74 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if (v73)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v75 = &__p;
      }
      else {
        __int128 v75 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v74, v75, v73);
    }

    strcpy((char *)v74 + v73, "DROP TABLE ");
    __int128 v76 = std::string::append(buf, a2);
    std::string::size_type v77 = v76->__r_.__value_.__r.__words[0];
    v149.__r_.__value_.__r.__words[0] = v76->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v149.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v76->__r_.__value_.__r.__words[1] + 7);
    signed __int8 v78 = v76->__r_.__value_.__s.__size_;
    v76->__r_.__value_.__l.__size_ = 0LL;
    v76->__r_.__value_.__l.__cap_ = 0LL;
    v76->__r_.__value_.__r.__words[0] = 0LL;
    __p.__r_.__value_.__r.__words[0] = v77;
    __p.__r_.__value_.__l.__size_ = v149.__r_.__value_.__r.__words[0];
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v149.__r_.__value_.__r.__words + 7);
    __p.__r_.__value_.__s.__size_ = v78;
    if ((char)buf[0].__r_.__value_.__s.__size_ < 0)
    {
      operator delete(buf[0].__r_.__value_.__l.__data_);
      signed __int8 v78 = __p.__r_.__value_.__s.__size_;
      std::string::size_type v77 = __p.__r_.__value_.__r.__words[0];
    }

    if (v78 >= 0) {
      int v79 = &__p;
    }
    else {
      int v79 = (std::string *)v77;
    }
    sub_1003C0D54(*(void *)(a1 + 80), (char *)v79, buf);
    uint64_t v80 = (sqlite3_stmt *)sub_100019240((uint64_t)buf[0].__r_.__value_.__l.__data_);
    int v81 = sqlite3_step(v80);
    std::string::size_type v82 = buf[0].__r_.__value_.__r.__words[0];
    buf[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v82) {
      (*(void (**)(std::string::size_type))(*(void *)v82 + 8LL))(v82);
    }
    if (v81 != 101) {
      goto LABEL_234;
    }
    std::string::assign(&__p, "");
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t v83 = __p.__r_.__value_.__s.__size_;
    }
    else {
      size_t v83 = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v84 = &v140;
    sub_1000392EC((uint64_t)&v140, v83 + 12);
    if ((v140.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v84 = (std::string *)v140.__r_.__value_.__r.__words[0];
    }
    if (v83)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v85 = &__p;
      }
      else {
        uint64_t v85 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v84, v85, v83);
    }

    strcpy((char *)v84 + v83, "ALTER TABLE ");
    if (cap >= 0) {
      uint64_t v86 = v143;
    }
    else {
      uint64_t v86 = (void **)v143[0];
    }
    if (cap >= 0) {
      std::string::size_type v87 = HIBYTE(cap);
    }
    else {
      std::string::size_type v87 = (std::string::size_type)v143[1];
    }
    __int128 v88 = std::string::append(&v140, (const std::string::value_type *)v86, v87);
    __int128 v89 = *(_OWORD *)&v88->__r_.__value_.__l.__data_;
    v149.__r_.__value_.__l.__cap_ = v88->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v149.__r_.__value_.__l.__data_ = v89;
    v88->__r_.__value_.__l.__size_ = 0LL;
    v88->__r_.__value_.__l.__cap_ = 0LL;
    v88->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v90 = std::string::append(&v149, " RENAME TO ");
    __int128 v91 = *(_OWORD *)&v90->__r_.__value_.__l.__data_;
    buf[0].__r_.__value_.__l.__cap_ = v90->__r_.__value_.__l.__cap_;
    *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v91;
    v90->__r_.__value_.__l.__size_ = 0LL;
    v90->__r_.__value_.__l.__cap_ = 0LL;
    v90->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v92 = std::string::append(buf, a2);
    std::string::size_type v93 = v92->__r_.__value_.__r.__words[0];
    v148.__r_.__value_.__r.__words[0] = v92->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v148.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v92->__r_.__value_.__r.__words[1] + 7);
    unsigned __int8 v94 = v92->__r_.__value_.__s.__size_;
    v92->__r_.__value_.__l.__size_ = 0LL;
    v92->__r_.__value_.__l.__cap_ = 0LL;
    v92->__r_.__value_.__r.__words[0] = 0LL;
    __p.__r_.__value_.__r.__words[0] = v93;
    __p.__r_.__value_.__l.__size_ = v148.__r_.__value_.__r.__words[0];
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v148.__r_.__value_.__r.__words + 7);
    __p.__r_.__value_.__s.__size_ = v94;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int128 v95 = &__p;
    }
    else {
      __int128 v95 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(*(void *)(a1 + 80), (char *)v95, buf);
    __int128 v96 = (sqlite3_stmt *)sub_100019240((uint64_t)buf[0].__r_.__value_.__l.__data_);
    int v97 = sqlite3_step(v96);
    std::string::size_type v98 = buf[0].__r_.__value_.__r.__words[0];
    buf[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v98) {
      (*(void (**)(std::string::size_type))(*(void *)v98 + 8LL))(v98);
    }
    if (v97 != 101) {
      goto LABEL_234;
    }
    sub_1003BAFA4(a4, buf);
    std::string::size_type v99 = buf[0].__r_.__value_.__s.__size_;
    unsigned __int8 v100 = buf[0].__r_.__value_.__s.__size_;
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string::size_type v99 = buf[0].__r_.__value_.__l.__size_;
    }
    if (v99)
    {
      std::string::assign(&__p, "");
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        size_t v101 = __p.__r_.__value_.__s.__size_;
      }
      else {
        size_t v101 = __p.__r_.__value_.__l.__size_;
      }
      __int16 v102 = &v138;
      sub_1000392EC((uint64_t)&v138, v101 + 13);
      if ((v138.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        __int16 v102 = (std::string *)v138.__r_.__value_.__r.__words[0];
      }
      if (v101)
      {
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          int v103 = &__p;
        }
        else {
          int v103 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        memmove(v102, v103, v101);
      }

      strcpy((char *)v102 + v101, "CREATE INDEX ");
      if (v142 >= 0) {
        unint64_t v104 = v141;
      }
      else {
        unint64_t v104 = (void **)v141[0];
      }
      if (v142 >= 0) {
        std::string::size_type v105 = HIBYTE(v142);
      }
      else {
        std::string::size_type v105 = (std::string::size_type)v141[1];
      }
      unint64_t v106 = std::string::append(&v138, (const std::string::value_type *)v104, v105);
      __int128 v107 = *(_OWORD *)&v106->__r_.__value_.__l.__data_;
      v146.__r_.__value_.__l.__cap_ = v106->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v146.__r_.__value_.__l.__data_ = v107;
      v106->__r_.__value_.__l.__size_ = 0LL;
      v106->__r_.__value_.__l.__cap_ = 0LL;
      v106->__r_.__value_.__r.__words[0] = 0LL;
      uint64_t v108 = std::string::append(&v146, " ON ");
      __int128 v109 = *(_OWORD *)&v108->__r_.__value_.__l.__data_;
      v139.__r_.__value_.__l.__cap_ = v108->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v139.__r_.__value_.__l.__data_ = v109;
      v108->__r_.__value_.__l.__size_ = 0LL;
      v108->__r_.__value_.__l.__cap_ = 0LL;
      v108->__r_.__value_.__r.__words[0] = 0LL;
      uint64_t v110 = std::string::append(&v139, a2);
      __int128 v111 = *(_OWORD *)&v110->__r_.__value_.__l.__data_;
      v148.__r_.__value_.__l.__cap_ = v110->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v148.__r_.__value_.__l.__data_ = v111;
      v110->__r_.__value_.__l.__size_ = 0LL;
      v110->__r_.__value_.__l.__cap_ = 0LL;
      v110->__r_.__value_.__r.__words[0] = 0LL;
      int v112 = std::string::append(&v148, " (");
      __int128 v113 = *(_OWORD *)&v112->__r_.__value_.__l.__data_;
      v140.__r_.__value_.__l.__cap_ = v112->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v140.__r_.__value_.__l.__data_ = v113;
      v112->__r_.__value_.__l.__size_ = 0LL;
      v112->__r_.__value_.__l.__cap_ = 0LL;
      v112->__r_.__value_.__r.__words[0] = 0LL;
      if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v114 = buf;
      }
      else {
        int v114 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
      }
      if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v115 = buf[0].__r_.__value_.__s.__size_;
      }
      else {
        std::string::size_type v115 = buf[0].__r_.__value_.__l.__size_;
      }
      __int16 v116 = std::string::append(&v140, (const std::string::value_type *)v114, v115);
      __int128 v117 = *(_OWORD *)&v116->__r_.__value_.__l.__data_;
      v149.__r_.__value_.__l.__cap_ = v116->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v149.__r_.__value_.__l.__data_ = v117;
      v116->__r_.__value_.__l.__size_ = 0LL;
      v116->__r_.__value_.__l.__cap_ = 0LL;
      v116->__r_.__value_.__r.__words[0] = 0LL;
      __int16 v118 = std::string::append(&v149, ")");
      std::string::size_type v119 = v118->__r_.__value_.__r.__words[0];
      v145.__r_.__value_.__r.__words[0] = v118->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v145.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v118->__r_.__value_.__r.__words[1] + 7);
      unsigned __int8 v120 = v118->__r_.__value_.__s.__size_;
      v118->__r_.__value_.__l.__size_ = 0LL;
      v118->__r_.__value_.__l.__cap_ = 0LL;
      v118->__r_.__value_.__r.__words[0] = 0LL;
      __p.__r_.__value_.__r.__words[0] = v119;
      __p.__r_.__value_.__l.__size_ = v145.__r_.__value_.__r.__words[0];
      *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v145.__r_.__value_.__r.__words + 7);
      __p.__r_.__value_.__s.__size_ = v120;
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        int v121 = &__p;
      }
      else {
        int v121 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      sub_1003C0D54(*(void *)(a1 + 80), (char *)v121, &v149);
      __int16 v122 = (sqlite3_stmt *)sub_100019240((uint64_t)v149.__r_.__value_.__l.__data_);
      int v123 = sqlite3_step(v122);
      std::string::size_type v124 = v149.__r_.__value_.__r.__words[0];
      v149.__r_.__value_.__r.__words[0] = 0LL;
      if (v124) {
        (*(void (**)(std::string::size_type))(*(void *)v124 + 8LL))(v124);
      }
      unsigned __int8 v100 = buf[0].__r_.__value_.__s.__size_;
    }

    else
    {
      int v123 = 101;
    }

    if ((v100 & 0x80) != 0) {
      operator delete(buf[0].__r_.__value_.__l.__data_);
    }
    if (v123 == 101)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866278);
      }
      double v125 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
        _os_log_impl( (void *)&_mh_execute_header,  v125,  OS_LOG_TYPE_DEFAULT,  "#Notice %{public}s autoincrement migration succeeded",  (uint8_t *)buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101866278);
        }
        LODWORD(v149.__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)v149.__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
        LODWORD(v137) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice %{public}s autoincrement migration succeeded",  &v149,  v137);
        uint64_t v136 = (std::string *)v135;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::migrateDbCo nstraints(const char *, const CLSqliteDatabase::ColumnInfo *, const char **) [T = CLCyclingSessionSummaryDbRow , DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v135);
        if (v136 != buf) {
          free(v136);
        }
      }

      sub_1003C05BC(*(void *)(a1 + 80));
      char v126 = 0;
    }

    else
    {
LABEL_234:
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_101866278);
      }
      double v127 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
        _os_log_impl( (void *)&_mh_execute_header,  v127,  OS_LOG_TYPE_FAULT,  "%{public}s autoincrement migration failed",  (uint8_t *)buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_101866278);
        }
        LODWORD(v149.__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)v149.__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
        LODWORD(v137) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "%{public}s autoincrement migration failed",  &v149,  v137);
        int v134 = (std::string *)v133;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::migrateDbCo nstraints(const char *, const CLSqliteDatabase::ColumnInfo *, const char **) [T = CLCyclingSessionSummaryDbRow , DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v133);
        if (v134 != buf) {
          free(v134);
        }
      }

      sub_1003C0E18(*(void *)(a1 + 80));
      char v126 = 1;
    }

    if (SHIBYTE(v142) < 0) {
      operator delete(v141[0]);
    }
    if (SHIBYTE(cap) < 0) {
      operator delete(v143[0]);
    }
    if ((char)__p.__r_.__value_.__s.__size_ < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((v126 & 1) != 0) {
        goto LABEL_246;
      }
    }

    else if ((v126 & 1) != 0)
    {
      goto LABEL_246;
    }

    return 1LL;
  }