void sub_100400288( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  sub_10000AE14((uint64_t)&a9);
  sub_10000AE14((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_1004002AC(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_1004002D8(id a1)
{
  qword_101934978 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

void sub_100400304(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

id *sub_100400330(id *a1)
{
  *a1 = 0LL;
  return a1;
}

id *sub_10040036C(id *a1)
{
  *a1 = 0LL;
  return a1;
}

void *sub_10040039C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  std::operator+<char>(__p, "LocationUpdater:", a2);
  int v3 = v9;
  v4 = (void **)__p[0];
  v5 = objc_alloc(&OBJC_CLASS___CLOSTransaction);
  if (v3 >= 0) {
    v6 = __p;
  }
  else {
    v6 = v4;
  }
  *a1 = -[CLOSTransaction initWithDescription:](v5, "initWithDescription:", v6);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_100400418( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100400434@<X0>(char *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  v6 = operator new(0x70uLL);
  result = sub_100215340(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_100400480(_Unwind_Exception *a1)
{
}

void *sub_100400494@<X0>(char *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  v6 = operator new(0x70uLL);
  result = sub_100215340(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1004004E0(_Unwind_Exception *a1)
{
}

void *sub_1004004F4@<X0>(char *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  v6 = operator new(0x70uLL);
  result = sub_100215340(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_100400540(_Unwind_Exception *a1)
{
}

uint64_t sub_100400554(uint64_t a1, uint64_t *a2, void *a3)
{
  *(void *)a1 = off_101836F78;
  uint64_t v6 = *a2;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 4);
  *(void *)(a1 + 8) = v6;
  if (*((char *)a2 + 39) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 24), (void *)a2[2], a2[3]);
  }

  else
  {
    __int128 v7 = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 40) = a2[4];
    *(_OWORD *)(a1 + 24) = v7;
  }

  *(void *)(a1 + 48) = a2[5];
  *(void *)(a1 + 56) = *a3;
  sub_1003B35F4(a1 + 64, a2);
  sub_100B14CF0((void *)(a1 + 200), 0LL, 0LL);
  sub_100B14CF0((void *)(a1 + 216), 0LL, 0LL);
  return a1;
}

void sub_100400610(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10040063C(uint64_t a1)
{
  *(void *)a1 = off_101836F78;
  sub_1003B3930(a1 + 64);
  return a1;
}

void sub_100400684(uint64_t a1)
{
  if (sub_1003C1048(a1 + 64))
  {
    sub_10000CE18((uint64_t)v18);
    HIBYTE(v17) = 1;
    sub_1002F0B04(&v29);
    int v2 = sub_1002A6F64((uint64_t)v29, "ClearDatabaseTablesByAge", (BOOL *)&v17 + 7);
    int v3 = v2;
    v4 = v30;
    if (!v30) {
      goto LABEL_6;
    }
    p_shared_owners = (unint64_t *)&v30->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      if (v3) {
        goto LABEL_7;
      }
    }

    else
    {
LABEL_6:
      if (v2)
      {
LABEL_7:
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101836FC0);
        }
        __int128 v7 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
        {
          int v8 = HIBYTE(v17);
          (*(void (**)(void ***__return_ptr, uint64_t))(*(void *)a1 + 16LL))(&v29, a1);
          char v9 = v31 >= 0 ? (void **)&v29 : v29;
          LODWORD(buf) = 67109378;
          HIDWORD(buf) = v8;
          __int16 v23 = 2080;
          v24 = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#Warning Overriding clear tables by age to %d for %s",  (uint8_t *)&buf,  0x12u);
          if (v31 < 0) {
            operator delete(v29);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(&v29, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101836FC0);
          }
          uint64_t v13 = qword_101934A78;
          int v14 = HIBYTE(v17);
          (*(void (**)(void ***__return_ptr, uint64_t))(*(void *)a1 + 16LL))(&buf, a1);
          if (v25 >= 0) {
            p_buf = (void **)&buf;
          }
          else {
            p_buf = buf;
          }
          v26[0] = 67109378;
          v26[1] = v14;
          __int16 v27 = 2080;
          v28 = p_buf;
          LODWORD(v17) = 18;
          v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v29,  1628LL,  &_mh_execute_header,  v13,  0LL,  "#Warning Overriding clear tables by age to %d for %s",  v26,  v17);
          if (v25 < 0) {
            operator delete(buf);
          }
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationDatabase::prepareStatements()", "%s\n", v16);
        }
      }
    }

    *(void *)((char *)v18
    v18[2] = v10;
    if (v20 < 0) {
      operator delete((void *)v19[8]);
    }
    std::streambuf::~streambuf(v19);
    std::ios::~ios(&v21);
    return;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101836FA0);
  }
  v11 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v29) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call prepareStatements() without a backing database in CLLocationDatabase!",  (uint8_t *)&v29,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v29, 0x65CuLL);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101836FA0);
    }
    LOWORD(v18[0]) = 0;
    LODWORD(v17) = 2;
    v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v29,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call prepareStatements() without a backing database in CLLocationDatabase!",  v18,  v17);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationDatabase::prepareStatements()", "%s\n", v12);
  }

void sub_100400B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

BOOL sub_100400B64(uint64_t a1)
{
  return sub_1003C1048(a1 + 64);
}

uint64_t sub_100400B6C(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 16LL))(__p);
  uint64_t v2 = sub_100400C7C(v1, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return v2;
}

void sub_100400BC4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100400BE0(uint64_t a1, double *a2)
{
  uint64_t v3 = a1 + 64;
  uint64_t v4 = a1 + 8;
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 16LL))(__p);
  sub_10040326C(a2, v3, v4, (std::string::size_type)__p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100400C48( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100400C64(uint64_t a1)
{
  return sub_1003C0454(a1 + 64);
}

uint64_t sub_100400C6C(uint64_t a1)
{
  return sub_1003C05BC(a1 + 64);
}

uint64_t sub_100400C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003C0F7C(a1 + 64, a2);
}

uint64_t sub_100400C7C(uint64_t a1, uint64_t a2)
{
  if (sub_1003C1048(a1))
  {
    sub_10000CE18((uint64_t)buf);
    uint64_t v4 = sub_10000CF44(&v28, (uint64_t)"SELECT ", 7LL);
    size_t v5 = strlen("Count");
    char v6 = sub_10000CF44(v4, (uint64_t)"Count", v5);
    __int128 v7 = sub_10000CF44(v6, (uint64_t)" FROM ", 6LL);
    int v8 = *(char *)(a2 + 23);
    if (v8 >= 0) {
      uint64_t v9 = a2;
    }
    else {
      uint64_t v9 = *(void *)a2;
    }
    if (v8 >= 0) {
      uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      uint64_t v10 = *(void *)(a2 + 8);
    }
    v11 = sub_10000CF44(v7, v9, v10);
    size_t v12 = strlen("Counts");
    uint64_t v13 = sub_10000CF44(v11, (uint64_t)"Counts", v12);
    int v14 = sub_10000CF44(v13, (uint64_t)" WHERE rowid=", 13LL);
    std::ostream::operator<<(v14, 1LL);
    std::stringbuf::str(&v25, &v29);
    if ((v25.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v15 = &v25;
    }
    else {
      v15 = (std::stringbuf::string_type *)v25.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(a1, (char *)v15, &v26);
    uint64_t v16 = v26;
    uint64_t v26 = 0LL;
    v17 = (sqlite3_stmt *)sub_100019240(v16);
    if (sqlite3_step(v17) == 100)
    {
      v18 = (sqlite3_stmt *)sub_100019240(v16);
      uint64_t v19 = sqlite3_column_int(v18, 0);
    }

    else
    {
      uint64_t v19 = 0LL;
    }

    uint64_t v21 = (sqlite3_stmt *)sub_100019240(v16);
    sqlite3_reset(v21);
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
    }
    uint64_t v28 = v22;
    std::streambuf::~streambuf(&v29);
    std::ios::~ios(&v30);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101836FA0);
    }
    char v20 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call getCountFromTriggerTable() without a backing database in CLLocationDatabase!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101836FA0);
      }
      LOWORD(v25.__r_.__value_.__l.__data_) = 0;
      v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call getCountFromTriggerTable() without a backing database in CLLocationDatabase!",  &v25,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static int CLLocationDatabase::getCountFromTriggerTable(CLSqliteDatabase &, const std::string &)",  "%s\n",  v24);
    }

    return 0LL;
  }

  return v19;
}

void sub_100400FD8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  _Unwind_Resume(a1);
}

BOOL sub_10040102C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 64;
  BOOL v5 = sub_1003C1048(a1 + 64);
  if (v5)
  {
    int v55 = 0xFFFF;
    double v57 = 0.0;
    double v56 = 0.0;
    __int128 v58 = xmmword_1012E0070;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v59 = _Q0;
    __int128 v60 = _Q0;
    __int128 v61 = _Q0;
    int v62 = 0;
    uint64_t v64 = 0LL;
    uint64_t v65 = 0LL;
    unint64_t v63 = 0xBFF0000000000000LL;
    int v66 = 0;
    unint64_t v67 = 0xBFF0000000000000LL;
    int v68 = 0x7FFFFFFF;
    uint64_t v70 = 0LL;
    uint64_t v71 = 0LL;
    uint64_t v69 = 0LL;
    char v72 = 0;
    sub_10000CE18((uint64_t)buf);
    v11 = sub_10000CF44(&v74, (uint64_t)"SELECT ", 7LL);
    size_t v12 = sub_10000CF44(v11, (uint64_t)"Timestamp", 9LL);
    uint64_t v13 = sub_10000CF44(v12, (uint64_t)", ", 2LL);
    int v14 = sub_10000CF44(v13, (uint64_t)"Latitude", 8LL);
    v15 = sub_10000CF44(v14, (uint64_t)", ", 2LL);
    uint64_t v16 = sub_10000CF44(v15, (uint64_t)"Longitude", 9LL);
    v17 = sub_10000CF44(v16, (uint64_t)", ", 2LL);
    v18 = sub_10000CF44(v17, (uint64_t)"HorizontalAccuracy", 18LL);
    uint64_t v19 = sub_10000CF44(v18, (uint64_t)", ", 2LL);
    char v20 = sub_10000CF44(v19, (uint64_t)"Altitude", 8LL);
    uint64_t v21 = sub_10000CF44(v20, (uint64_t)", ", 2LL);
    uint64_t v22 = sub_10000CF44(v21, (uint64_t)"VerticalAccuracy", 16LL);
    __int16 v23 = sub_10000CF44(v22, (uint64_t)", ", 2LL);
    v24 = sub_10000CF44(v23, (uint64_t)"Speed", 5LL);
    std::stringbuf::string_type v25 = sub_10000CF44(v24, (uint64_t)", ", 2LL);
    uint64_t v26 = sub_10000CF44(v25, (uint64_t)"Course", 6LL);
    __int16 v27 = sub_10000CF44(v26, (uint64_t)", ", 2LL);
    uint64_t v28 = sub_10000CF44(v27, (uint64_t)"Confidence", 10LL);
    std::stringbuf v29 = sub_10000CF44(v28, (uint64_t)", ", 2LL);
    uint64_t v30 = sub_10000CF44(v29, (uint64_t)"ROWID", 5LL);
    char v31 = sub_10000CF44(v30, (uint64_t)" FROM ", 6LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a1 + 16LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    sub_10000CF44(v31, (uint64_t)p_p, size);
    std::stringbuf::str(&__p, &v75);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v34 = &__p;
    }
    else {
      v34 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v4, (char *)v34, &v53);
    uint64_t v35 = v53;
    uint64_t v53 = 0LL;
    while (1)
    {
      v36 = (sqlite3_stmt *)sub_100019240(v35);
      if (sqlite3_step(v36) != 100) {
        break;
      }
      v37 = (sqlite3_stmt *)sub_100019240(v35);
      *((void *)&v61 + 1) = sqlite3_column_double(v37, 0);
      v38 = (sqlite3_stmt *)sub_100019240(v35);
      double v56 = sqlite3_column_double(v38, 1);
      v39 = (sqlite3_stmt *)sub_100019240(v35);
      double v57 = sqlite3_column_double(v39, 2);
      v40 = (sqlite3_stmt *)sub_100019240(v35);
      *(void *)&__int128 v58 = sqlite3_column_double(v40, 3);
      v41 = (sqlite3_stmt *)sub_100019240(v35);
      *((void *)&v58 + 1) = sqlite3_column_double(v41, 4);
      v42 = (sqlite3_stmt *)sub_100019240(v35);
      *(void *)&__int128 v59 = sqlite3_column_double(v42, 5);
      v43 = (sqlite3_stmt *)sub_100019240(v35);
      *((void *)&v59 + 1) = sqlite3_column_double(v43, 6);
      v44 = (sqlite3_stmt *)sub_100019240(v35);
      *((void *)&v60 + 1) = sqlite3_column_double(v44, 7);
      v45 = (sqlite3_stmt *)sub_100019240(v35);
      int v62 = (int)sqlite3_column_double(v45, 8);
      HIDWORD(v69) = 1;
      v46 = (sqlite3_stmt *)sub_100019240(v35);
      sqlite3_int64 v47 = sqlite3_column_int64(v46, 9);
      (*(void (**)(uint64_t, uint64_t, int *, sqlite3_int64))(a2 + 16))(a2, a1, &v55, v47);
    }

    v50 = (sqlite3_stmt *)sub_100019240(v35);
    sqlite3_reset(v50);
    if (v35) {
      (*(void (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
    }
    uint64_t v74 = v51;
    std::streambuf::~streambuf(&v75);
    std::ios::~ios(&v76);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101836FA0);
    }
    v48 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call getLocations() without a backing database in CLLocationDatabase!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101836FA0);
      }
      LOWORD(v55) = 0;
      v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call getLocations() without a backing database in CLLocationDatabase!",  &v55,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLLocationDatabase::getLocations(OnLocation) const", "%s\n", v49);
    }
  }

  return v5;
}

void sub_1004015AC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a38);
  _Unwind_Resume(a1);
}

BOOL sub_100401610(uint64_t a1, sqlite3_int64 *a2, uint64_t a3)
{
  uint64_t v6 = a1 + 64;
  if (sub_1003C1048(a1 + 64))
  {
    sub_10000CE18((uint64_t)v55);
    __int128 v7 = sub_10000CF44(&v56, (uint64_t)"SELECT ", 7LL);
    int v8 = sub_10000CF44(v7, (uint64_t)"Timestamp", 9LL);
    uint64_t v9 = sub_10000CF44(v8, (uint64_t)", ", 2LL);
    uint64_t v10 = sub_10000CF44(v9, (uint64_t)"Latitude", 8LL);
    v11 = sub_10000CF44(v10, (uint64_t)", ", 2LL);
    size_t v12 = sub_10000CF44(v11, (uint64_t)"Longitude", 9LL);
    uint64_t v13 = sub_10000CF44(v12, (uint64_t)", ", 2LL);
    int v14 = sub_10000CF44(v13, (uint64_t)"HorizontalAccuracy", 18LL);
    v15 = sub_10000CF44(v14, (uint64_t)", ", 2LL);
    uint64_t v16 = sub_10000CF44(v15, (uint64_t)"Altitude", 8LL);
    v17 = sub_10000CF44(v16, (uint64_t)", ", 2LL);
    v18 = sub_10000CF44(v17, (uint64_t)"VerticalAccuracy", 16LL);
    uint64_t v19 = sub_10000CF44(v18, (uint64_t)", ", 2LL);
    char v20 = sub_10000CF44(v19, (uint64_t)"Speed", 5LL);
    uint64_t v21 = sub_10000CF44(v20, (uint64_t)", ", 2LL);
    uint64_t v22 = sub_10000CF44(v21, (uint64_t)"Course", 6LL);
    __int16 v23 = sub_10000CF44(v22, (uint64_t)", ", 2LL);
    v24 = sub_10000CF44(v23, (uint64_t)"Confidence", 10LL);
    std::stringbuf::string_type v25 = sub_10000CF44(v24, (uint64_t)" FROM ", 6LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t))(*(void *)a1 + 16LL))(__p, a1);
    if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v26 = __p;
    }
    else {
      uint64_t v26 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    }
    if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p[0].__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p[0].__r_.__value_.__l.__size_;
    }
    uint64_t v28 = sub_10000CF44(v25, (uint64_t)v26, size);
    std::stringbuf v29 = sub_10000CF44(v28, (uint64_t)" WHERE ", 7LL);
    uint64_t v30 = sub_10000CF44(v29, (uint64_t)"ROWID", 5LL);
    sub_10000CF44(v30, (uint64_t)"=?", 2LL);
    std::stringbuf::str(__p, &v57);
    if ((__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      char v31 = __p;
    }
    else {
      char v31 = (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v6, (char *)v31, v54);
    uint64_t v32 = v54[0];
    v54[0] = 0LL;
    v33 = (sqlite3_stmt *)sub_100019240(v32);
    if (sub_1003C2D24(v33, 1, *a2))
    {
      v34 = (sqlite3_stmt *)sub_100019240(v32);
      int v35 = sqlite3_step(v34);
      BOOL v36 = v35 == 100;
      if (v35 == 100)
      {
        v37 = (sqlite3_stmt *)sub_100019240(v32);
        *(double *)(a3 + 76) = sqlite3_column_double(v37, 0);
        v38 = (sqlite3_stmt *)sub_100019240(v32);
        *(double *)(a3 + 4) = sqlite3_column_double(v38, 1);
        v39 = (sqlite3_stmt *)sub_100019240(v32);
        *(double *)(a3 + 12) = sqlite3_column_double(v39, 2);
        v40 = (sqlite3_stmt *)sub_100019240(v32);
        *(double *)(a3 + 20) = sqlite3_column_double(v40, 3);
        v41 = (sqlite3_stmt *)sub_100019240(v32);
        *(double *)(a3 + 28) = sqlite3_column_double(v41, 4);
        v42 = (sqlite3_stmt *)sub_100019240(v32);
        *(double *)(a3 + 36) = sqlite3_column_double(v42, 5);
        v43 = (sqlite3_stmt *)sub_100019240(v32);
        *(double *)(a3 + 44) = sqlite3_column_double(v43, 6);
        v44 = (sqlite3_stmt *)sub_100019240(v32);
        *(double *)(a3 + 60) = sqlite3_column_double(v44, 7);
        v45 = (sqlite3_stmt *)sub_100019240(v32);
        *(_DWORD *)(a3 + 84) = (int)sqlite3_column_double(v45, 8);
        *(_DWORD *)(a3 + 132) = 1;
      }

      v46 = (sqlite3_stmt *)sub_100019240(v32);
      sqlite3_reset(v46);
      if (!v32) {
        goto LABEL_20;
      }
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836FC0);
      }
      v50 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
        _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_FAULT, "could not bind", (uint8_t *)__p, 2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101836FC0);
        }
        LOWORD(v54[0]) = 0;
        uint64_t v53 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "could not bind",  v54,  2);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLocationDatabase::getLocation(const sqlite3_int64 &, CLDaemonLocation &) const",  "%s\n",  (const char *)v53);
        if (v53 != __p) {
          free(v53);
        }
      }

      uint64_t v51 = (sqlite3_stmt *)sub_100019240(v32);
      sqlite3_reset(v51);
      BOOL v36 = 0LL;
      if (!v32) {
        goto LABEL_20;
      }
    }

    (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
LABEL_20:
    *(void *)((char *)v55
    uint64_t v56 = v47;
    std::streambuf::~streambuf(&v57);
    std::ios::~ios(&v58);
    return v36;
  }

  if (qword_101934A20 != -1) {
    dispatch_once(&qword_101934A20, &stru_101836FA0);
  }
  v48 = (os_log_s *)off_101934A28;
  if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call getLocation() without a backing database in CLLocationDatabase!",  (uint8_t *)__p,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101836FA0);
    }
    LOWORD(v55[0]) = 0;
    v52 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call getLocation() without a backing database in CLLocationDatabase!",  v55,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationDatabase::getLocation(const sqlite3_int64 &, CLDaemonLocation &) const",  "%s\n",  (const char *)v52);
    if (v52 != __p) {
      free(v52);
    }
  }

  return 0LL;
}

void sub_100401C88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, void *__p, uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8LL))(v54);
  }
  sub_1011F8850((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_100401CE8(uint64_t *a1, sqlite3_int64 *a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t)(a1 + 8);
  if (!sub_1003C1048((uint64_t)(a1 + 8)))
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101836FA0);
    }
    uint64_t v51 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(__p.__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call setLocation() without a backing database in CLLocationDatabase!",  (uint8_t *)&__p,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(&__p, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101836FA0);
      }
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      __int128 v59 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call setLocation() without a backing database in CLLocationDatabase!",  &buf,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationDatabase::setLocation(const sqlite3_int64 &, const CLDaemonLocation &)",  "%s\n",  (const char *)v59);
      if (v59 != &__p) {
        free(v59);
      }
    }

    return 0LL;
  }

  __int128 v7 = a1 + 27;
  if (!sub_100B14D64(a1 + 27))
  {
    sub_10000CE18((uint64_t)&buf);
    int v8 = sub_10000CF44(&buf.__r_.__value_.__l.__cap_, (uint64_t)"UPDATE OR REPLACE ", 18LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, uint64_t *))(*a1 + 16))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    v11 = sub_10000CF44(v8, (uint64_t)p_p, size);
    size_t v12 = sub_10000CF44(v11, (uint64_t)" SET ", 5LL);
    uint64_t v13 = sub_10000CF44(v12, (uint64_t)"Timestamp", 9LL);
    int v14 = sub_10000CF44(v13, (uint64_t)"=?, ", 4LL);
    v15 = sub_10000CF44(v14, (uint64_t)"Latitude", 8LL);
    uint64_t v16 = sub_10000CF44(v15, (uint64_t)"=?, ", 4LL);
    v17 = sub_10000CF44(v16, (uint64_t)"Longitude", 9LL);
    v18 = sub_10000CF44(v17, (uint64_t)"=?, ", 4LL);
    uint64_t v19 = sub_10000CF44(v18, (uint64_t)"HorizontalAccuracy", 18LL);
    char v20 = sub_10000CF44(v19, (uint64_t)"=?, ", 4LL);
    uint64_t v21 = sub_10000CF44(v20, (uint64_t)"Altitude", 8LL);
    uint64_t v22 = sub_10000CF44(v21, (uint64_t)"=?, ", 4LL);
    __int16 v23 = sub_10000CF44(v22, (uint64_t)"VerticalAccuracy", 16LL);
    v24 = sub_10000CF44(v23, (uint64_t)"=?, ", 4LL);
    std::stringbuf::string_type v25 = sub_10000CF44(v24, (uint64_t)"Speed", 5LL);
    uint64_t v26 = sub_10000CF44(v25, (uint64_t)"=?, ", 4LL);
    __int16 v27 = sub_10000CF44(v26, (uint64_t)"Course", 6LL);
    uint64_t v28 = sub_10000CF44(v27, (uint64_t)"=?, ", 4LL);
    std::stringbuf v29 = sub_10000CF44(v28, (uint64_t)"Confidence", 10LL);
    uint64_t v30 = sub_10000CF44(v29, (uint64_t)"=?", 2LL);
    char v31 = sub_10000CF44(v30, (uint64_t)" WHERE ", 7LL);
    uint64_t v32 = sub_10000CF44(v31, (uint64_t)"ROWID", 5LL);
    sub_10000CF44(v32, (uint64_t)"=?", 2LL);
    std::stringbuf::str(&__p, &v77);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v33 = &__p;
    }
    else {
      v33 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    a1[27] = sub_1003BF158(v6, (char *)v33);
    a1[28] = v34;
    BOOL v35 = sub_100B14D64(a1 + 27);
    if (!v35)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836FC0);
      }
      BOOL v36 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        LOWORD(__p.__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_FAULT,  "Could not prepare cached update statement",  (uint8_t *)&__p,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&__p, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101836FC0);
        }
        LOWORD(v73[0]) = 0;
        uint64_t v69 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Could not prepare cached update statement",  v73,  2);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLocationDatabase::setLocation(const sqlite3_int64 &, const CLDaemonLocation &)",  "%s\n",  (const char *)v69);
        if (v69 != &__p) {
          free(v69);
        }
      }
    }

    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words
    buf.__r_.__value_.__l.__cap_ = v37;
    std::streambuf::~streambuf(&v77);
    std::ios::~ios(&v78);
    if (!v35) {
      return 0LL;
    }
  }

  sub_100B14CF8(v7, &v72);
  v38 = (sqlite3_stmt *)sub_100019240(v72);
  v39 = (sqlite3_stmt *)sub_100019240(v72);
  v40 = (sqlite3_stmt *)sub_100019240(v72);
  if (!sub_1003B7480(v40, 3, *(double *)(a3 + 12))
    || (v41 = (sqlite3_stmt *)sub_100019240(v72), !sub_1003B7480(v41, 4, *(double *)(a3 + 20)))
    || (v42 = (sqlite3_stmt *)sub_100019240(v72), !sub_1003B7480(v42, 5, *(double *)(a3 + 28)))
    || (v43 = (sqlite3_stmt *)sub_100019240(v72), !sub_1003B7480(v43, 6, *(double *)(a3 + 36)))
    || (v44 = (sqlite3_stmt *)sub_100019240(v72), !sub_1003B7480(v44, 7, *(double *)(a3 + 44)))
    || (v45 = (sqlite3_stmt *)sub_100019240(v72), !sub_1003B7480(v45, 8, *(double *)(a3 + 60)))
    || (v46 = (sqlite3_stmt *)sub_100019240(v72), !sub_1003C28BC(v46, 9, *(_DWORD *)(a3 + 84)))
    || (uint64_t v47 = (sqlite3_stmt *)sub_100019240(v72), !sub_1003C2D24(v47, 10, *a2)))
  {
LABEL_43:
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836FC0);
    }
    v52 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      std::string::size_type v53 = *(void *)(a3 + 76);
      std::string::size_type v54 = *(void *)(a3 + 4);
      uint64_t v55 = *(void *)(a3 + 12);
      uint64_t v56 = *(void *)(a3 + 20);
      LODWORD(__p.__r_.__value_.__l.__data_) = 134218752;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = v53;
      WORD2(__p.__r_.__value_.__r.__words[1]) = 2048;
      *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v54;
      HIWORD(__p.__r_.__value_.__r.__words[2]) = 2048;
      uint64_t v80 = v55;
      __int16 v81 = 2048;
      uint64_t v82 = v56;
      _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_FAULT,  "could not bind %.3f <%+.8f,%+.8f> %.2f",  (uint8_t *)&__p,  0x2Au);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_48;
    }
    bzero(&__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836FC0);
    }
    std::string::size_type v60 = *(void *)(a3 + 76);
    std::string::size_type v61 = *(void *)(a3 + 4);
    int v62 = *(std::stringbuf_vtbl **)(a3 + 12);
    unint64_t v63 = *(std::locale::__imp **)(a3 + 20);
    LODWORD(buf.__r_.__value_.__l.__data_) = 134218752;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v60;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v61;
    HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
    v77.__vftable = v62;
    LOWORD(v77.__loc_.__locale_) = 2048;
    *(std::locale::__imp **)((char *)&v77.__loc_.__locale_ + 2) = v63;
    LODWORD(v70) = 42;
    uint64_t v64 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "could not bind %.3f <%+.8f,%+.8f> %.2f",  COERCE_DOUBLE(&buf),  *(double *)&v70,  v71,  *(double *)&v72);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLocationDatabase::setLocation(const sqlite3_int64 &, const CLDaemonLocation &)",  "%s\n",  (const char *)v64);
    if (v64 == &__p) {
      goto LABEL_48;
    }
    goto LABEL_59;
  }

  v48 = (sqlite3_stmt *)sub_100019240(v72);
  sub_1003BB2BC(v6, v48);
  int v49 = sub_1003C10E4(v6);
  if (v49 > 0)
  {
    uint64_t v50 = 1LL;
    goto LABEL_49;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101836FC0);
  }
  uint64_t v65 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
  {
    sub_100832C64(a3, &__p);
    int v66 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &__p
        : (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
    HIDWORD(buf.__r_.__value_.__r.__words[0]) = v49;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v66;
    _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_FAULT,  "failed to setLocation, numModRows, %d, %s",  (uint8_t *)&buf,  0x12u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(&__p, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836FC0);
    }
    uint64_t v67 = qword_101934A78;
    sub_100832C64(a3, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    v73[0] = 67109378;
    v73[1] = v49;
    __int16 v74 = 2080;
    std::stringbuf v75 = p_buf;
    LODWORD(v70) = 18;
    uint64_t v64 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v67,  17LL,  "failed to setLocation, numModRows, %d, %s",  v73,  v70);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLocationDatabase::setLocation(const sqlite3_int64 &, const CLDaemonLocation &)",  "%s\n",  (const char *)v64);
    if (v64 != &__p) {
LABEL_59:
    }
      free(v64);
  }

void sub_100402714( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_10040278C(_BYTE *a1, sqlite3_int64 *a2)
{
  uint64_t v4 = (uint64_t)(a1 + 64);
  if (!sub_1003C1048((uint64_t)(a1 + 64)))
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101836FA0);
    }
    __int128 v7 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call clearLocation() without a backing database in CLLocationDatabase!",  (uint8_t *)buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101836FA0);
    }
    LOWORD(v26[0]) = 0;
    uint64_t v6 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call clearLocation() without a backing database in CLLocationDatabase!",  v26,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationDatabase::clearLocation(const sqlite3_int64 &)",  "%s\n",  (const char *)v6);
    goto LABEL_47;
  }

  if (a1[16])
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836FC0);
    }
    BOOL v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Can't clear location for read-only database",  (uint8_t *)buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836FC0);
    }
    LOWORD(v26[0]) = 0;
    uint64_t v6 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Can't clear location for read-only database",  v26,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLocationDatabase::clearLocation(const sqlite3_int64 &)",  "%s\n",  (const char *)v6);
LABEL_47:
    if (v6 != buf) {
      free(v6);
    }
    return 0LL;
  }

  sub_10000CE18((uint64_t)v26);
  uint64_t v10 = sub_10000CF44(&v27, (uint64_t)"DELETE FROM ", 12LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, _BYTE *))(*(void *)a1 + 16LL))(buf, a1);
  if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    v11 = buf;
  }
  else {
    v11 = (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
  }
  if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = buf[0].__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = buf[0].__r_.__value_.__l.__size_;
  }
  uint64_t v13 = sub_10000CF44(v10, (uint64_t)v11, size);
  int v14 = sub_10000CF44(v13, (uint64_t)" WHERE ", 7LL);
  v15 = sub_10000CF44(v14, (uint64_t)"ROWID", 5LL);
  sub_10000CF44(v15, (uint64_t)"=?", 2LL);
  std::stringbuf::str(buf, &v28);
  if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v16 = buf;
  }
  else {
    uint64_t v16 = (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v4, (char *)v16, v30);
  uint64_t v17 = *(void *)v30;
  *(void *)uint64_t v30 = 0LL;
  v18 = (sqlite3_stmt *)sub_100019240(v17);
  BOOL v8 = sub_1003C2D24(v18, 1, *a2);
  if (v8)
  {
    uint64_t v19 = (sqlite3_stmt *)sub_100019240(v17);
    sub_1003BB2BC(v4, v19);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101836FC0);
    }
    char v20 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      std::string::size_type v21 = *a2;
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 134349056;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_FAULT,  "could not bind %{public}lld",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836FC0);
      }
      sqlite3_int64 v24 = *a2;
      *(_DWORD *)uint64_t v30 = 134349056;
      *(void *)&v30[4] = v24;
      std::stringbuf::string_type v25 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "could not bind %{public}lld",  v30,  12);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLocationDatabase::clearLocation(const sqlite3_int64 &)",  "%s\n",  (const char *)v25);
      if (v25 != buf) {
        free(v25);
      }
    }

    uint64_t v22 = (sqlite3_stmt *)sub_100019240(v17);
    sqlite3_reset(v22);
  }

  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
  }
  *(void *)((char *)v26
  uint64_t v27 = v23;
  std::streambuf::~streambuf(&v28);
  std::ios::~ios(&v29);
  return v8;
}

void sub_100402D60( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, void *__p, uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8LL))(v54);
  }
  sub_1011F8850((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_100402DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_1003C1048(a1))
  {
    if (*(_BYTE *)(a2 + 8))
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836FC0);
      }
      uint64_t v6 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Can't clear locations in read-only database",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101836FC0);
        }
        LOWORD(v18.__r_.__value_.__l.__data_) = 0;
        __int128 v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Can't clear locations in read-only database",  &v18,  2);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLLocationDatabase::clearLocations(CLSqliteDatabase &, const CLSqliteDatabase::SqliteProperties &, const std::string &)",  "%s\n",  v7);
LABEL_19:
      }
    }

    else
    {
      sub_10000CE18((uint64_t)buf);
      uint64_t v9 = sub_10000CF44(&v21, (uint64_t)"DELETE FROM ", 12LL);
      int v10 = *(char *)(a3 + 23);
      if (v10 >= 0) {
        uint64_t v11 = a3;
      }
      else {
        uint64_t v11 = *(void *)a3;
      }
      if (v10 >= 0) {
        uint64_t v12 = *(unsigned __int8 *)(a3 + 23);
      }
      else {
        uint64_t v12 = *(void *)(a3 + 8);
      }
      sub_10000CF44(v9, v11, v12);
      std::stringbuf::str(&v18, &v22);
      if ((v18.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v13 = &v18;
      }
      else {
        uint64_t v13 = (std::stringbuf::string_type *)v18.__r_.__value_.__r.__words[0];
      }
      sub_1003C0D54(a1, (char *)v13, &v19);
      uint64_t v14 = v19;
      uint64_t v19 = 0LL;
      v15 = (sqlite3_stmt *)sub_100019240(v14);
      sub_1003BB2BC(a1, v15);
      else {
        uint64_t v16 = *(void *)(a1 + 88);
      }
      sub_1003C1EC0(a1, v16);
      if (v14) {
        (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
      }
      uint64_t v21 = v17;
      std::streambuf::~streambuf(&v22);
      std::ios::~ios(&v23);
    }
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101836FA0);
    }
    BOOL v8 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call clearLocations() without a backing database in CLLocationDatabase!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101836FA0);
      }
      LOWORD(v18.__r_.__value_.__l.__data_) = 0;
      __int128 v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call clearLocations() without a backing database in CLLocationDatabase!",  &v18,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationDatabase::clearLocations(CLSqliteDatabase &, const CLSqliteDatabase::SqliteProperties &, c onst std::string &)",  "%s\n",  v7);
      goto LABEL_19;
    }
  }

void sub_1004031A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_1004031F8(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = a1 + 8;
  (*(void (**)(void **__return_ptr))(*(void *)a1 + 16LL))(__p);
  sub_100402DC0(v1, v2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100403250( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id *sub_10040326C(double *a1, uint64_t a2, uint64_t a3, std::string::size_type a4)
{
  if (sub_1003C1048(a2))
  {
    if (*(_BYTE *)(a3 + 8))
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836FC0);
      }
      BOOL v8 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_FAULT,  "Can't clear locations by age in read-only database",  (uint8_t *)buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101836FC0);
        }
        LOWORD(v49[0]) = 0;
        uint64_t v9 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Can't clear locations by age in read-only database",  v49,  2);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLLocationDatabase::clearLocationsByAge(const CFTimeInterval &, CLSqliteDatabase &, const CLSqlite Database::SqliteProperties &, const std::string &)",  "%s\n",  (const char *)v9);
LABEL_19:
        if (v9 != buf) {
          free(v9);
        }
      }
    }

    else
    {
      v53[0] = _NSConcreteStackBlock;
      v53[1] = 3221225472LL;
      v53[2] = sub_100403D80;
      v53[3] = &unk_101835B80;
      v53[4] = a1;
      v53[5] = a4;
      v54[0] = mach_absolute_time();
      v54[1] = (uint64_t)v53;
      sub_10000CE18((uint64_t)v49);
      uint64_t v11 = sub_10000CF44(&v50, (uint64_t)"DELETE FROM ", 12LL);
      int v12 = *(char *)(a4 + 23);
      if (v12 >= 0) {
        uint64_t v13 = a4;
      }
      else {
        uint64_t v13 = *(void *)a4;
      }
      if (v12 >= 0) {
        uint64_t v14 = *(unsigned __int8 *)(a4 + 23);
      }
      else {
        uint64_t v14 = *(void *)(a4 + 8);
      }
      v15 = sub_10000CF44(v11, v13, v14);
      uint64_t v16 = sub_10000CF44(v15, (uint64_t)" WHERE ", 7LL);
      uint64_t v17 = sub_10000CF44(v16, (uint64_t)"Timestamp", 9LL);
      std::stringbuf::string_type v18 = sub_10000CF44(v17, (uint64_t)" < ? OR ", 8LL);
      uint64_t v19 = sub_10000CF44(v18, (uint64_t)"Timestamp", 9LL);
      sub_10000CF44(v19, (uint64_t)" > ?", 4LL);
      std::stringbuf::str(buf, &v51);
      if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
        char v20 = buf;
      }
      else {
        char v20 = (std::stringbuf::string_type *)buf[0].__r_.__value_.__r.__words[0];
      }
      sub_1003C0D54(a2, (char *)v20, v56);
      uint64_t v21 = *(void *)v56;
      *(void *)uint64_t v56 = 0LL;
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101836FC0);
      }
      std::stringbuf v22 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        double v23 = *a1;
        else {
          std::string::size_type v24 = *(void *)a4;
        }
        LODWORD(buf[0].__r_.__value_.__l.__data_) = 134218242;
        *(double *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v23;
        WORD2(buf[0].__r_.__value_.__r.__words[1]) = 2080;
        *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 6) = v24;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "Clearing locations older than %.3f from %s",  (uint8_t *)buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101836FC0);
        }
        double v39 = *a1;
        else {
          uint64_t v40 = *(void *)a4;
        }
        *(_DWORD *)uint64_t v56 = 134218242;
        *(double *)&v56[4] = v39;
        __int16 v57 = 2080;
        uint64_t v58 = v40;
        v41 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Clearing locations older than %.3f from %s",  COERCE_DOUBLE(v56),  22);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationDatabase::clearLocationsByAge(const CFTimeInterval &, CLSqliteDatabase &, const CLSqlite Database::SqliteProperties &, const std::string &)",  "%s\n",  (const char *)v41);
        if (v41 != buf) {
          free(v41);
        }
      }

      std::stringbuf::string_type v25 = (sqlite3_stmt *)sub_100019240(v21);
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      if (sub_1003B7480(v25, 1, Current - *a1)
        && (uint64_t v27 = (sqlite3_stmt *)sub_100019240(v21), v28 = CFAbsoluteTimeGetCurrent(),
                                                      sub_1003B7480(v27, 2, v28 + 30.0)))
      {
        uint64_t v29 = (sqlite3_stmt *)sub_100019240(v21);
        sub_1003BB2BC(a2, v29);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101836FC0);
        }
        uint64_t v30 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v31 = sub_1003C10E4(a2);
          LODWORD(buf[0].__r_.__value_.__l.__data_) = 134217984;
          *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v31;
          _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "%lld total entries deleted",  (uint8_t *)buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101836FC0);
          }
          uint64_t v43 = qword_101934A78;
          uint64_t v44 = sub_1003C10E4(a2);
          *(_DWORD *)uint64_t v56 = 134217984;
          *(void *)&v56[4] = v44;
          v45 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v43,  2LL,  "%lld total entries deleted",  v56);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationDatabase::clearLocationsByAge(const CFTimeInterval &, CLSqliteDatabase &, const CLSqli teDatabase::SqliteProperties &, const std::string &)",  "%s\n",  (const char *)v45);
          if (v45 != buf) {
            free(v45);
          }
        }

        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101836FC0);
        }
        uint64_t v32 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
        {
          else {
            std::string::size_type v33 = *(void *)a4;
          }
          LODWORD(buf[0].__r_.__value_.__l.__data_) = 136315138;
          *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v33;
          _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "Performing incremental vacuum on %s",  (uint8_t *)buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101836FC0);
          }
          else {
            uint64_t v46 = *(void *)a4;
          }
          *(_DWORD *)uint64_t v56 = 136315138;
          *(void *)&v56[4] = v46;
          uint64_t v47 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Performing incremental vacuum on %s",  v56);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationDatabase::clearLocationsByAge(const CFTimeInterval &, CLSqliteDatabase &, const CLSqli teDatabase::SqliteProperties &, const std::string &)",  "%s\n",  (const char *)v47);
          if (v47 != buf) {
            free(v47);
          }
        }

        else {
          uint64_t v34 = *(void *)(a2 + 88);
        }
        sub_1003C1EC0(a2, v34);
      }

      else
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101836FC0);
        }
        BOOL v35 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
        {
          LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
          _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_FAULT, "could not bind", (uint8_t *)buf, 2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934A70 != -1) {
            dispatch_once(&qword_101934A70, &stru_101836FC0);
          }
          *(_WORD *)uint64_t v56 = 0;
          LODWORD(v48) = 2;
          v42 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "could not bind",  v56,  v48);
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLLocationDatabase::clearLocationsByAge(const CFTimeInterval &, CLSqliteDatabase &, const CLSqli teDatabase::SqliteProperties &, const std::string &)",  "%s\n",  (const char *)v42);
          if (v42 != buf) {
            free(v42);
          }
        }

        BOOL v36 = (sqlite3_stmt *)sub_100019240(v21);
        sqlite3_reset(v36);
      }

      if (v21) {
        (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
      }
      *(void *)((char *)v49
      uint64_t v50 = v37;
      std::streambuf::~streambuf(&v51);
      std::ios::~ios(&v52);
      sub_1011F6BE4(v54);
    }
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_101836FA0);
    }
    int v10 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call clearLocationsByAge() without a backing database in CLLocationDatabase!",  (uint8_t *)buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_101836FA0);
      }
      LOWORD(v49[0]) = 0;
      uint64_t v9 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call clearLocationsByAge() without a backing database in CLLocationDatabase!",  v49,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLLocationDatabase::clearLocationsByAge(const CFTimeInterval &, CLSqliteDatabase &, const CLSqliteDa tabase::SqliteProperties &, const std::string &)",  "%s\n",  (const char *)v9);
      goto LABEL_19;
    }
  }

  return sub_1001BA1BC(v55);
}

void sub_100403CE8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,id a55)
{
  if (v55) {
    (*(void (**)(uint64_t))(*(void *)v55 + 8LL))(v55);
  }
  sub_1011F8850((uint64_t)&a11);
  sub_1011F6BE4(&a53);
  sub_1001BA1BC(&a55);
  _Unwind_Resume(a1);
}

void sub_100403D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = sub_101171C7C(a3 - a2);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101836FE0);
  }
  __int128 v7 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    BOOL v8 = *(uint64_t **)(a1 + 40);
    uint64_t v9 = **(void **)(a1 + 32);
    v10[0] = 68290563;
    v10[1] = 0;
    __int16 v11 = 2082;
    int v12 = "";
    __int16 v13 = 2082;
    uint64_t v14 = "elapsed";
    __int16 v15 = 2050;
    uint64_t v16 = a2;
    __int16 v17 = 2050;
    uint64_t v18 = a3;
    __int16 v19 = 2050;
    double v20 = v6;
    __int16 v21 = 2050;
    uint64_t v22 = v9;
    __int16 v23 = 2081;
    std::string::size_type v24 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:CLLocationDatabase::clearLocationsByAge, event:%{public, location:escape_only}s, be gin_mach:%{public}llu, end_mach:%{public}llu, elapsed_s:%{public}.09f, age_s:%{public}.09f, tableName:%{private, location:escape_only}s}",  (uint8_t *)v10,  0x4Eu);
  }

void sub_100403ED0(id a1)
{
  off_101934A28 = os_log_create("com.apple.locationd.Utility", "Database");
}

void sub_100403EFC(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100403F28(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_100403F54()
{
  uint64_t result = sub_1004FAB40();
  if ((result & 0x20) != 0)
  {
    uint64_t v1 = operator new(0x30uLL);
    uint64_t result = sub_1006DC9EC((uint64_t)v1, (uint64_t)"CLHA", 1);
    void *v1 = off_101837030;
    v1[4] = 0LL;
    v1[5] = 0LL;
    qword_1019A0FF0 = (uint64_t)v1;
  }

  return result;
}

void sub_100403FAC(_Unwind_Exception *a1)
{
}

uint64_t sub_100403FC0()
{
  if (qword_101995730 != -1) {
    dispatch_once(&qword_101995730, &stru_101837000);
  }
  return qword_1019A0FF0;
}

double sub_100404004(uint64_t a1, int a2, double *a3)
{
  if (a2)
  {
    if (qword_1019345A0 != -1) {
      dispatch_once(&qword_1019345A0, &stru_101837078);
    }
    uint64_t v3 = (os_log_s *)qword_1019345A8;
    if (os_log_type_enabled((os_log_t)qword_1019345A8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "Invalid notification", buf, 2u);
    }

    double v4 = 0.0;
    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345A0 != -1) {
        dispatch_once(&qword_1019345A0, &stru_101837078);
      }
      LOWORD(v13) = 0;
      BOOL v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345A8,  17LL,  "Invalid notification",  &v13,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual CFTimeInterval CLHA::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v5);
    }
  }

  else
  {
    double v4 = 0.0;
    if (sub_10040432C(a1))
    {
      if (qword_1019345A0 != -1) {
        dispatch_once(&qword_1019345A0, &stru_101837078);
      }
      BOOL v8 = (os_log_s *)qword_1019345A8;
      if (os_log_type_enabled((os_log_t)qword_1019345A8, OS_LOG_TYPE_INFO))
      {
        double v9 = *a3;
        *(_DWORD *)std::stringbuf::string_type buf = 134349056;
        double v16 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Setting HA interval to %{public}f", buf, 0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345A0 != -1) {
          dispatch_once(&qword_1019345A0, &stru_101837078);
        }
        uint64_t v11 = *(void *)a3;
        int v13 = 134349056;
        uint64_t v14 = v11;
        int v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345A8,  1LL,  "Setting HA interval to %{public}f",  &v13,  12);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CFTimeInterval CLHA::minimumUpdateIntervalChanged(int, const CFTimeInterval &)",  "%s\n",  v12);
      }

      sub_10071A73C(*(void *)(a1 + 32), *a3);
      sub_10071A7C0(*(void *)(a1 + 32), *a3 * 16.0);
      return *a3;
    }
  }

  return v4;
}

uint64_t sub_10040432C(uint64_t a1)
{
  unsigned int v2 = sub_1004FAB40();
  if ((v2 & 0x20) != 0)
  {
    if (!*(void *)(a1 + 32))
    {
      uint64_t v3 = (uint64_t *)sub_10071542C();
      uint64_t v10 = 0x1E0000FF00LL;
      char v11 = 0;
      sub_10121B774(v3, (uint64_t)&v10, (uint64_t *)buf);
      sub_10005F550(a1 + 32, (__int128 *)buf);
      double v4 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        BOOL v5 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v6 = __ldaxr(v5);
        while (__stlxr(v6 - 1, v5));
        if (!v6)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
      }

      sub_10071A850(*(void *)(a1 + 32), &off_1018D6760);
      sub_100719D78(*(uint64_t **)(a1 + 32), (uint64_t)sub_10040456C, a1);
    }
  }

  else
  {
    if (qword_1019345A0 != -1) {
      dispatch_once(&qword_1019345A0, &stru_101837078);
    }
    __int128 v7 = (os_log_s *)qword_1019345A8;
    if (os_log_type_enabled((os_log_t)qword_1019345A8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "HA unavailable, unable to establish hid interface",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019345A0 != -1) {
        dispatch_once(&qword_1019345A0, &stru_101837078);
      }
      v12[0] = 0;
      double v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345A8,  17LL,  "HA unavailable, unable to establish hid interface",  v12,  2);
      sub_10029211C("Generic", 1LL, 0, 0LL, "BOOL CLHA::openHidDevice()", "%s\n", v9);
    }
  }

  return (v2 >> 5) & 1;
}

void sub_10040456C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (IOHIDEventGetType(a4) == 13)
  {
    if (IOHIDEventGetIntegerValue(a4, 851971LL) == 1)
    {
      if (qword_1019345A0 != -1) {
        dispatch_once(&qword_1019345A0, &stru_101837078);
      }
      unint64_t v6 = (os_log_s *)qword_1019345A8;
      if (os_log_type_enabled((os_log_t)qword_1019345A8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Received shake data, discarding.", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019345A0 != -1) {
          dispatch_once(&qword_1019345A0, &stru_101837078);
        }
        v12[0] = 0;
        __int128 v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345A8,  2LL,  "Received shake data, discarding.",  v12,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLHA::onIohidEvent(void *, void *, void *, IOHIDEventRef)",  "%s\n",  v7);
      }
    }

    else
    {
      float FloatValue = IOHIDEventGetFloatValue(a4, 851968LL);
      float v9 = IOHIDEventGetFloatValue(a4, 851969LL);
      float v10 = IOHIDEventGetFloatValue(a4, 851970LL);
      unint64_t TimeStamp = IOHIDEventGetTimeStamp(a4);
      *(void *)std::stringbuf::string_type buf = sub_101171C7C(TimeStamp);
      float v14 = FloatValue;
      float v15 = v9;
      float v16 = v10;
      sub_1006DD528(a1, 0LL, (uint64_t)buf, 24LL);
    }
  }

void *sub_100404798(void *a1)
{
  *a1 = off_101837030;
  sub_10000AE14((uint64_t)(a1 + 4));
  return sub_1006DCAA8(a1);
}

void sub_1004047C8(void *a1)
{
  *a1 = off_101837030;
  sub_10000AE14((uint64_t)(a1 + 4));
  unsigned int v2 = sub_1006DCAA8(a1);
  operator delete(v2);
}

void sub_1004047FC(id a1)
{
  qword_1019345A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Accel");
}

void *sub_100404828(void *a1, int a2)
{
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  *a1 = off_1018370A8;
  a1[9] = off_101837168;
  a1[56] = off_1018371B8;
  sub_100405E0C((uint64_t)a1);
  return a1;
}

void sub_1004048B8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_1004048E4(uint64_t a1, char *a2, int a3, uint64_t a4, int a5, float a6)
{
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  int v12 = (void *)(a1 + 8);
  *(void *)a1 = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 8));
  void *v12 = &off_101826EF8;
  *(void *)a1 = off_1018375E0;
  *(void *)(a1 + 72) = off_101837688;
  sub_100D8A584(a1 + 72, a2, a3, a1, a6, a4, a5, 0LL);
  *(void *)a1 = off_1018375E0;
  *(void *)(a1 + 72) = off_101837688;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(void *)(a1 + 248) = 0LL;
  *(void *)(a1 + 352) = 0LL;
  *(void *)(a1 + 36sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(void *)(a1 + 344) = 0LL;
  *(_DWORD *)(a1 + 368) = 12000;
  *(void *)(a1 + 376) = off_101826EC8;
  sub_1001B9AC4((void *)(a1 + 384));
  *(void *)(a1 + 384) = &off_101826EF8;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v28 = a1 + 112;
  (*(void (**)(void))(v13 + 16))();
  __int16 v30 = 256;
  if (a3)
  {
    *(void *)(a1 + 248) = 0xBFF0000000000000LL;
LABEL_3:
    (*(void (**)(uint64_t))(*(void *)v28 + 24LL))(v28);
    return a1;
  }

  if (*(char *)(a4 + 23) < 0)
  {
    sub_1010DD48C(__p, *(void **)a4, *(void *)(a4 + 8));
  }

  else
  {
    *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)a4;
    uint64_t v27 = *(void *)(a4 + 16);
  }

  sub_100D8AF38(a1 + 72, (uint64_t)__p);
  if (SHIBYTE(v27) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v14 = sub_1006E27E8();
  sub_100413284(v14, buf);
  float v15 = (int *)(a1 + 368);
  char v16 = sub_1002A7CB0(*(uint64_t *)buf, "ActivityInMemoryBufferSize", (_DWORD *)(a1 + 368));
  __int16 v17 = v33;
  if (v33)
  {
    p_shared_owners = (unint64_t *)&v33->__shared_owners_;
    do
      unint64_t v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }

  if ((v16 & 1) == 0) {
    int *v15 = 12000;
  }
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_1018376C8);
  }
  double v20 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    int v21 = *v15;
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v21;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Buffer size: %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018376C8);
    }
    int v24 = *v15;
    v31[0] = 67109120;
    v31[1] = v24;
    std::stringbuf::string_type v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Buffer size: %d",  v31);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::CLActivityRecorderDb(const char *, b ool, float, const std::string &, const CLSqliteDatabase::SqlitePropertyPersistence) [T = VO2MaxOutput, DataProtect ionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v25);
  }

  int v22 = HIBYTE(v30);
  *(void *)(a1 + 248) = 0xBFF0000000000000LL;
  if (v22)
  {
    if ((_BYTE)v30)
    {
      pthread_mutex_unlock(v29);
      return a1;
    }

    goto LABEL_3;
  }

  return a1;
}

void sub_100404C98( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, char a24)
{
  v24[47] = off_101826EC8;
  sub_1001B9C98(v27);
  sub_10040A09C(v26);
  sub_100D8A88C(a12);
  void *v24 = off_101826EC8;
  sub_1001B9C98(v25);
  _Unwind_Resume(a1);
}

void sub_100404D3C()
{
}

void *sub_100404D44(void *a1)
{
  a1[9] = off_101837688;
  uint64_t v2 = (uint64_t)(a1 + 9);
  *a1 = off_1018375E0;
  a1[47] = off_101826EC8;
  sub_1001B9C98(a1 + 48);
  sub_10040A09C(a1 + 22);
  sub_100D8A88C(v2);
  *a1 = off_101826EC8;
  sub_1001B9C98(a1 + 1);
  return a1;
}

void *sub_100404DC4(uint64_t a1)
{
  return sub_100404D44((void *)(a1 - 72));
}

void *sub_100404DCC(uint64_t a1)
{
  return sub_100404D44((void *)(a1 - 448));
}

void sub_100404DD4(void *a1)
{
  uint64_t v1 = sub_100404D44(a1);
  operator delete(v1);
}

void sub_100404DE8(uint64_t a1)
{
  uint64_t v1 = sub_100404D44((void *)(a1 - 72));
  operator delete(v1);
}

void sub_100404E00(uint64_t a1)
{
  uint64_t v1 = sub_100404D44((void *)(a1 - 448));
  operator delete(v1);
}

uint64_t sub_100404E18(uint64_t *a1, uint64_t a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1003C0D54(a1[10], "DELETE FROM VO2MaxHistory WHERE estimatedVo2Max IS NULL OR startTime < ?", &v13);
  uint64_t v5 = v13;
  char v6 = (sqlite3_stmt *)sub_100019240(v13);
  if (sub_1003B7480(v6, 1, Current - *(double *)(*(void *)(a2 + 8) - 24LL)))
  {
    uint64_t v7 = a1[10];
    BOOL v8 = (sqlite3_stmt *)sub_100019240(v5);
    sub_1003BB2BC(v7, v8);
    uint64_t v9 = (*(int (**)(uint64_t *))(*a1 + 152))(a1);
  }

  else
  {
    uint64_t v9 = -1LL;
  }

  sub_1003C05BC(a1[10]);
  uint64_t v10 = a1[10];
  else {
    uint64_t v11 = *(void *)(v10 + 88);
  }
  sub_1003C1EC0(v10, v11);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return v9;
}

void sub_100404F30(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100404F50(uint64_t a1, uint64_t a2)
{
  return sub_100404E18((uint64_t *)(a1 - 72), a2);
}

uint64_t sub_100404F58(uint64_t a1, char **a2)
{
  if ((sub_100D8A92C(a1 + 72) & 1) != 0)
  {
    a2[1] = *a2;
    sub_1003C0D54(*(void *)(a1 + 80), "SELECT * from VO2MaxHistory ORDER BY id ASC", buf);
    uint64_t v37 = *(void *)buf;
    uint64_t v38 = *(void *)buf;
    sub_1003C0454(*(void *)(a1 + 80));
    *((void *)&v41 + 1) = 0LL;
    *((void *)&v47 + 1) = 0LL;
    __int128 v48 = 0uLL;
    sub_100405344(a1, src);
    while (!sub_100405378(&v38, (uint64_t)buf))
    {
      uuid_copy(&buf[8], src);
      double v4 = a2[1];
      unint64_t v5 = (unint64_t)a2[2];
      if ((unint64_t)v4 >= v5)
      {
        unint64_t v13 = 0x8E38E38E38E38E39LL * ((v4 - *a2) >> 4);
        unint64_t v14 = v13 + 1;
        if (v13 + 1 > 0x1C71C71C71C71C7LL) {
          sub_100007008();
        }
        unint64_t v15 = 0x8E38E38E38E38E39LL * ((uint64_t)(v5 - (void)*a2) >> 4);
        if (2 * v15 > v14) {
          unint64_t v14 = 2 * v15;
        }
        if (v15 >= 0xE38E38E38E38E3LL) {
          unint64_t v16 = 0x1C71C71C71C71C7LL;
        }
        else {
          unint64_t v16 = v14;
        }
        if (v16) {
          __int16 v17 = (char *)sub_1002B4F00((uint64_t)(a2 + 2), v16);
        }
        else {
          __int16 v17 = 0LL;
        }
        uint64_t v18 = &v17[144 * v13];
        *(_OWORD *)uint64_t v18 = *(_OWORD *)buf;
        __int128 v19 = v41;
        __int128 v20 = v42;
        __int128 v21 = v44;
        *((_OWORD *)v18 + 3) = v43;
        *((_OWORD *)v18 + 4) = v21;
        *((_OWORD *)v18 + 1) = v19;
        *((_OWORD *)v18 + 2) = v20;
        __int128 v22 = v45;
        __int128 v23 = v46;
        __int128 v24 = v48;
        *((_OWORD *)v18 + 7) = v47;
        *((_OWORD *)v18 + 8) = v24;
        *((_OWORD *)v18 + 5) = v22;
        *((_OWORD *)v18 + 6) = v23;
        uint64_t v26 = *a2;
        std::stringbuf::string_type v25 = a2[1];
        uint64_t v27 = v18;
        if (v25 != *a2)
        {
          do
          {
            *((_OWORD *)v27 - 9) = *((_OWORD *)v25 - 9);
            __int128 v28 = *((_OWORD *)v25 - 8);
            __int128 v29 = *((_OWORD *)v25 - 7);
            __int128 v30 = *((_OWORD *)v25 - 5);
            *((_OWORD *)v27 - 6) = *((_OWORD *)v25 - 6);
            *((_OWORD *)v27 - 5) = v30;
            *((_OWORD *)v27 - 8) = v28;
            *((_OWORD *)v27 - 7) = v29;
            __int128 v31 = *((_OWORD *)v25 - 4);
            __int128 v32 = *((_OWORD *)v25 - 3);
            __int128 v33 = *((_OWORD *)v25 - 1);
            *((_OWORD *)v27 - 2) = *((_OWORD *)v25 - 2);
            *((_OWORD *)v27 - 1) = v33;
            *((_OWORD *)v27 - 4) = v31;
            *((_OWORD *)v27 - 3) = v32;
            v27 -= 144;
            v25 -= 144;
          }

          while (v25 != v26);
          std::stringbuf::string_type v25 = *a2;
        }

        int v12 = v18 + 144;
        *a2 = v27;
        a2[1] = v18 + 144;
        a2[2] = &v17[144 * v16];
        if (v25) {
          operator delete(v25);
        }
      }

      else
      {
        *(_OWORD *)double v4 = *(_OWORD *)buf;
        __int128 v6 = v41;
        __int128 v7 = v42;
        __int128 v8 = v44;
        *((_OWORD *)v4 + 3) = v43;
        *((_OWORD *)v4 + 4) = v8;
        *((_OWORD *)v4 + 1) = v6;
        *((_OWORD *)v4 + 2) = v7;
        __int128 v9 = v45;
        __int128 v10 = v46;
        __int128 v11 = v48;
        *((_OWORD *)v4 + 7) = v47;
        *((_OWORD *)v4 + 8) = v11;
        *((_OWORD *)v4 + 5) = v9;
        *((_OWORD *)v4 + 6) = v10;
        int v12 = v4 + 144;
      }

      a2[1] = v12;
    }

    sub_1003C05BC(*(void *)(a1 + 80));
    if (v37) {
      (*(void (**)(uint64_t))(*(void *)v37 + 8LL))(v37);
    }
    return 100LL;
  }

  else
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101837250);
    }
    uint64_t v34 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "getAllRecordsWithErrorCode, DB not accessible",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_101837250);
      }
      *(_WORD *)src = 0;
      BOOL v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  0LL,  "getAllRecordsWithErrorCode, DB not accessible",  src,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMError CLVO2MaxOutputRecorderDb::getAllRecordsWithErrorCode(std::vector<VO2MaxOutput> &) const",  "%s\n",  v36);
    }

    return 109LL;
  }

void sub_100405310( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    (*(void (**)(uint64_t))(*(void *)a11 + 8LL))(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100405344(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = (const __CFString *)sub_1003B76B4(*(void *)(a1 + 80));
  CStringPtr = CFStringGetCStringPtr(v3, 0x8000100u);
  return uuid_parse(CStringPtr, a2);
}

uint64_t sub_100405378(uint64_t *a1, uint64_t a2)
{
  double v4 = (sqlite3_stmt *)sub_100019240(*a1);
  int v5 = sqlite3_step(v4);
  if (v5 == 101) {
    return 1LL;
  }
  if (v5 != 100) {
    return 2LL;
  }
  __int128 v6 = (sqlite3_stmt *)sub_100019240(*a1);
  *(void *)a2 = sqlite3_column_int(v6, 0);
  __int128 v7 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 24) = sqlite3_column_double(v7, 1);
  __int128 v8 = (sqlite3_stmt *)sub_100019240(*a1);
  *(void *)(a2 + 4sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = sqlite3_column_int(v8, 2);
  __int128 v9 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 32) = sqlite3_column_double(v9, 3);
  __int128 v10 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 48) = sqlite3_column_double(v10, 4);
  __int128 v11 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 56) = sqlite3_column_double(v11, 5);
  int v12 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 64) = sqlite3_column_double(v12, 6);
  unint64_t v13 = (sqlite3_stmt *)sub_100019240(*a1);
  unint64_t v14 = sqlite3_column_text(v13, 7);
  uuid_parse((const char *)v14, (unsigned __int8 *)(a2 + 72));
  unint64_t v15 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 88) = sqlite3_column_double(v15, 8);
  unint64_t v16 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 96) = sqlite3_column_double(v16, 9);
  __int16 v17 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_DWORD *)(a2 + 104) = sqlite3_column_int(v17, 10);
  uint64_t v18 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_BYTE *)(a2 + 108) = sqlite3_column_int(v18, 11) != 0;
  __int128 v19 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_BYTE *)(a2 + 109) = sqlite3_column_int(v19, 12) != 0;
  __int128 v20 = (sqlite3_stmt *)sub_100019240(*a1);
  *(_DWORD *)(a2 + 112) = sqlite3_column_int(v20, 13);
  __int128 v21 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 12sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = sqlite3_column_double(v21, 14);
  __int128 v22 = (sqlite3_stmt *)sub_100019240(*a1);
  *(double *)(a2 + 128) = sqlite3_column_double(v22, 15);
  __int128 v23 = (sqlite3_stmt *)sub_100019240(*a1);
  double v24 = sqlite3_column_double(v23, 16);
  uint64_t result = 0LL;
  *(double *)(a2 + 136) = v24;
  return result;
}

uint64_t sub_10040553C(uint64_t a1, char **a2, int a3, int a4, double a5)
{
  if ((sub_100D8A92C(a1 + 72) & 1) != 0)
  {
    a2[1] = *a2;
    if (a3) {
      sub_1003C0D54( *(void *)(a1 + 80),  "SELECT * FROM VO2MaxHistory WHERE estimatedVo2Max IS NOT NULL AND eligibleForHealthKit = 1 AND startTime > ? ORD ER BY startTime DESC LIMIT ?",  buf);
    }
    else {
      sub_1003C0D54( *(void *)(a1 + 80),  "SELECT * FROM VO2MaxHistory WHERE estimatedVo2Max IS NOT NULL AND startTime > ? ORDER BY startTime DESC LIMIT ?",  buf);
    }
    uint64_t v12 = *(void *)buf;
    v47[0] = *(void *)buf;
    *((void *)&v49 + 1) = 0LL;
    *((void *)&v55 + 1) = 0LL;
    __int128 v56 = 0uLL;
    unint64_t v13 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)buf);
    if (sub_1003C28BC(v13, 1, (int)a5))
    {
      unint64_t v14 = (sqlite3_stmt *)sub_100019240(v12);
      if (sub_1003C28BC(v14, 2, a4))
      {
        while (!sub_100405378(v47, (uint64_t)buf))
        {
          unint64_t v15 = a2[1];
          unint64_t v16 = (unint64_t)a2[2];
          if ((unint64_t)v15 >= v16)
          {
            unint64_t v24 = 0x8E38E38E38E38E39LL * ((v15 - *a2) >> 4);
            unint64_t v25 = v24 + 1;
            if (v24 + 1 > 0x1C71C71C71C71C7LL) {
              sub_100007008();
            }
            unint64_t v26 = 0x8E38E38E38E38E39LL * ((uint64_t)(v16 - (void)*a2) >> 4);
            if (2 * v26 > v25) {
              unint64_t v25 = 2 * v26;
            }
            if (v26 >= 0xE38E38E38E38E3LL) {
              unint64_t v27 = 0x1C71C71C71C71C7LL;
            }
            else {
              unint64_t v27 = v25;
            }
            if (v27) {
              __int128 v28 = (char *)sub_1002B4F00((uint64_t)(a2 + 2), v27);
            }
            else {
              __int128 v28 = 0LL;
            }
            __int128 v29 = &v28[144 * v24];
            *(_OWORD *)__int128 v29 = *(_OWORD *)buf;
            __int128 v30 = v49;
            __int128 v31 = v50;
            __int128 v32 = v52;
            *((_OWORD *)v29 + 3) = v51;
            *((_OWORD *)v29 + 4) = v32;
            *((_OWORD *)v29 + 1) = v30;
            *((_OWORD *)v29 + 2) = v31;
            __int128 v33 = v53;
            __int128 v34 = v54;
            __int128 v35 = v56;
            *((_OWORD *)v29 + 7) = v55;
            *((_OWORD *)v29 + 8) = v35;
            *((_OWORD *)v29 + 5) = v33;
            *((_OWORD *)v29 + 6) = v34;
            uint64_t v37 = *a2;
            BOOL v36 = a2[1];
            uint64_t v38 = v29;
            if (v36 != *a2)
            {
              do
              {
                *((_OWORD *)v38 - 9) = *((_OWORD *)v36 - 9);
                __int128 v39 = *((_OWORD *)v36 - 8);
                __int128 v40 = *((_OWORD *)v36 - 7);
                __int128 v41 = *((_OWORD *)v36 - 5);
                *((_OWORD *)v38 - 6) = *((_OWORD *)v36 - 6);
                *((_OWORD *)v38 - 5) = v41;
                *((_OWORD *)v38 - 8) = v39;
                *((_OWORD *)v38 - 7) = v40;
                __int128 v42 = *((_OWORD *)v36 - 4);
                __int128 v43 = *((_OWORD *)v36 - 3);
                __int128 v44 = *((_OWORD *)v36 - 1);
                *((_OWORD *)v38 - 2) = *((_OWORD *)v36 - 2);
                *((_OWORD *)v38 - 1) = v44;
                *((_OWORD *)v38 - 4) = v42;
                *((_OWORD *)v38 - 3) = v43;
                v38 -= 144;
                v36 -= 144;
              }

              while (v36 != v37);
              BOOL v36 = *a2;
            }

            __int128 v23 = v29 + 144;
            *a2 = v38;
            a2[1] = v29 + 144;
            a2[2] = &v28[144 * v27];
            if (v36) {
              operator delete(v36);
            }
          }

          else
          {
            *(_OWORD *)unint64_t v15 = *(_OWORD *)buf;
            __int128 v17 = v49;
            __int128 v18 = v50;
            __int128 v19 = v52;
            *((_OWORD *)v15 + 3) = v51;
            *((_OWORD *)v15 + 4) = v19;
            *((_OWORD *)v15 + 1) = v17;
            *((_OWORD *)v15 + 2) = v18;
            __int128 v20 = v53;
            __int128 v21 = v54;
            __int128 v22 = v56;
            *((_OWORD *)v15 + 7) = v55;
            *((_OWORD *)v15 + 8) = v22;
            *((_OWORD *)v15 + 5) = v20;
            *((_OWORD *)v15 + 6) = v21;
            __int128 v23 = v15 + 144;
          }

          a2[1] = v23;
        }
      }
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    return 100LL;
  }

  else
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101837250);
    }
    __int128 v10 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "VO2MaxHistory, DB not accessible", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_101837250);
      }
      LOWORD(v47[0]) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "VO2MaxHistory, DB not accessible",  v47,  2);
      __int128 v46 = (uint8_t *)v45;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMError CLVO2MaxOutputRecorderDb::querySinceTime(CFAbsoluteTime, std::vector<VO2MaxOutput> &, BOOL, int) const",  "%s\n",  v45);
      if (v46 != buf) {
        free(v46);
      }
    }

    return 109LL;
  }

void sub_10040591C(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100405948(uint64_t a1, const unsigned __int8 *a2, char **a3)
{
  if ((sub_100D8A92C(a1 + 72) & 1) != 0)
  {
    a3[1] = *a3;
    uuid_unparse(a2, out);
    sub_1003C0D54(*(void *)(a1 + 80), "SELECT * from VO2MaxHistory WHERE sessionId = ?", buf);
    uint64_t v6 = *(void *)buf;
    uint64_t v41 = *(void *)buf;
    *((void *)&v44 + 1) = 0LL;
    *((void *)&v50 + 1) = 0LL;
    __int128 v51 = 0uLL;
    __int128 v7 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)buf);
    if (sub_1003BC1F0(v7, 1, out))
    {
      while (!sub_100405378(&v41, (uint64_t)buf))
      {
        __int128 v8 = a3[1];
        unint64_t v9 = (unint64_t)a3[2];
        if ((unint64_t)v8 >= v9)
        {
          unint64_t v17 = 0x8E38E38E38E38E39LL * ((v8 - *a3) >> 4);
          unint64_t v18 = v17 + 1;
          if (v17 + 1 > 0x1C71C71C71C71C7LL) {
            sub_100007008();
          }
          unint64_t v19 = 0x8E38E38E38E38E39LL * ((uint64_t)(v9 - (void)*a3) >> 4);
          if (2 * v19 > v18) {
            unint64_t v18 = 2 * v19;
          }
          if (v19 >= 0xE38E38E38E38E3LL) {
            unint64_t v20 = 0x1C71C71C71C71C7LL;
          }
          else {
            unint64_t v20 = v18;
          }
          if (v20) {
            __int128 v21 = (char *)sub_1002B4F00((uint64_t)(a3 + 2), v20);
          }
          else {
            __int128 v21 = 0LL;
          }
          __int128 v22 = &v21[144 * v17];
          *(_OWORD *)__int128 v22 = *(_OWORD *)buf;
          __int128 v23 = v44;
          __int128 v24 = v45;
          __int128 v25 = v47;
          *((_OWORD *)v22 + 3) = v46;
          *((_OWORD *)v22 + 4) = v25;
          *((_OWORD *)v22 + 1) = v23;
          *((_OWORD *)v22 + 2) = v24;
          __int128 v26 = v48;
          __int128 v27 = v49;
          __int128 v28 = v51;
          *((_OWORD *)v22 + 7) = v50;
          *((_OWORD *)v22 + 8) = v28;
          *((_OWORD *)v22 + 5) = v26;
          *((_OWORD *)v22 + 6) = v27;
          __int128 v30 = *a3;
          __int128 v29 = a3[1];
          __int128 v31 = v22;
          if (v29 != *a3)
          {
            do
            {
              *((_OWORD *)v31 - 9) = *((_OWORD *)v29 - 9);
              __int128 v32 = *((_OWORD *)v29 - 8);
              __int128 v33 = *((_OWORD *)v29 - 7);
              __int128 v34 = *((_OWORD *)v29 - 5);
              *((_OWORD *)v31 - 6) = *((_OWORD *)v29 - 6);
              *((_OWORD *)v31 - 5) = v34;
              *((_OWORD *)v31 - 8) = v32;
              *((_OWORD *)v31 - 7) = v33;
              __int128 v35 = *((_OWORD *)v29 - 4);
              __int128 v36 = *((_OWORD *)v29 - 3);
              __int128 v37 = *((_OWORD *)v29 - 1);
              *((_OWORD *)v31 - 2) = *((_OWORD *)v29 - 2);
              *((_OWORD *)v31 - 1) = v37;
              *((_OWORD *)v31 - 4) = v35;
              *((_OWORD *)v31 - 3) = v36;
              v31 -= 144;
              v29 -= 144;
            }

            while (v29 != v30);
            __int128 v29 = *a3;
          }

          unint64_t v16 = v22 + 144;
          *a3 = v31;
          a3[1] = v22 + 144;
          a3[2] = &v21[144 * v20];
          if (v29) {
            operator delete(v29);
          }
        }

        else
        {
          *(_OWORD *)__int128 v8 = *(_OWORD *)buf;
          __int128 v10 = v44;
          __int128 v11 = v45;
          __int128 v12 = v47;
          *((_OWORD *)v8 + 3) = v46;
          *((_OWORD *)v8 + 4) = v12;
          *((_OWORD *)v8 + 1) = v10;
          *((_OWORD *)v8 + 2) = v11;
          __int128 v13 = v48;
          __int128 v14 = v49;
          __int128 v15 = v51;
          *((_OWORD *)v8 + 7) = v50;
          *((_OWORD *)v8 + 8) = v15;
          *((_OWORD *)v8 + 5) = v13;
          *((_OWORD *)v8 + 6) = v14;
          unint64_t v16 = v8 + 144;
        }

        a3[1] = v16;
      }
    }

    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    return 100LL;
  }

  else
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101837250);
    }
    uint64_t v38 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEBUG, "VO2MaxHistory, DB not accessible", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_101837250);
      }
      *(_WORD *)out = 0;
      __int128 v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "VO2MaxHistory, DB not accessible",  out,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CMError CLVO2MaxOutputRecorderDb::queryBySessionId(unsigned char *, std::vector<VO2MaxOutput> &) const",  "%s\n",  v40);
    }

    return 109LL;
  }

void sub_100405CF4(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100405D20(uint64_t a1)
{
  uint64_t v3 = v8;
  double v4 = (sqlite3_stmt *)sub_100019240(v8);
  int v5 = sqlite3_step(v4);
  if (v5 == 100)
  {
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v3);
    uint64_t v1 = sqlite3_column_int(v6, 0);
  }

  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  if (v5 != 100) {
    return 0xFFFFFFFFLL;
  }
  return v1;
}

void sub_100405DC0(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100405DE4(uint64_t a1)
{
  return sub_100405D20(a1 - 72);
}

void *sub_100405DEC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "VO2MaxHistory");
}

void *sub_100405DFC@<X0>(void *a1@<X8>)
{
  return sub_1010DDBC0(a1, "VO2MaxHistory");
}

uint64_t sub_100405E0C(uint64_t a1)
{
  uint64_t result = sub_1003C1048(*(void *)(a1 + 80));
  if ((_DWORD)result)
  {
    sub_100405E68(a1);
    return sub_1003B59A0( *(void *)(a1 + 80),  "VO2MaxHistory",  (const char **)&off_101837270,  (const std::string::value_type **)&off_101937DE8,  0);
  }

  return result;
}

uint64_t sub_100405E68(uint64_t a1)
{
  uint64_t result = sub_1003B747C(*(void *)(a1 + 80), "VO2MaxHistory");
  if ((_DWORD)result)
  {
    uint64_t v3 = 0LL;
    int v4 = 0;
    uint64_t v8 = "sessionType";
    do
    {
      uint64_t v41 = v8;
      int v42 = 5;
      __int16 v43 = 0;
      char v44 = 0;
      char v45 = 0;
      if ((sub_1003BC790(*(void *)(a1 + 80), "VO2MaxHistory", v8, (uint64_t)&v41) & 1) == 0)
      {
        sub_1003C0454(*(void *)(a1 + 80));
        sub_10000CE18((uint64_t)v37);
        unint64_t v9 = sub_10000CF44(&v38, (uint64_t)"ALTER TABLE VO2MaxHistory ADD COLUMN ", 37LL);
        size_t v10 = strlen(v8);
        __int128 v11 = sub_10000CF44(v9, (uint64_t)v8, v10);
        __int128 v12 = sub_10000CF44(v11, (uint64_t)" ", 1LL);
        __int128 v13 = (const char *)sub_1003BCC40((int)(&off_101837270)[v3 + 61]);
        size_t v14 = strlen(v13);
        __int128 v15 = sub_10000CF44(v12, (uint64_t)v13, v14);
        sub_10000CF44(v15, (uint64_t)";", 1LL);
        uint64_t v16 = *(void *)(a1 + 80);
        std::stringbuf::str(&v34, &v39);
        if ((v34.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          unint64_t v17 = &v34;
        }
        else {
          unint64_t v17 = (std::stringbuf::string_type *)v34.__r_.__value_.__r.__words[0];
        }
        sub_1003C0D54(v16, (char *)v17, &v32);
        uint64_t v18 = v32.__r_.__value_.__r.__words[0];
        v32.__r_.__value_.__r.__words[0] = 0LL;
        uint64_t v19 = *(void *)(a1 + 80);
        unint64_t v20 = (sqlite3_stmt *)sub_100019240(v18);
        sub_1003BB2BC(v19, v20);
        sub_10000CE18((uint64_t)&v34);
        if (!strcmp(v8, "eligibleForHealthKit") || !strcmp(v8, "eligibleForCalorimetry"))
        {
          __int128 v25 = sub_10000CF44(&v34.__r_.__value_.__l.__cap_, (uint64_t)"UPDATE VO2MaxHistory SET ", 25LL);
          size_t v26 = strlen(v8);
          __int128 v23 = sub_10000CF44(v25, (uint64_t)v8, v26);
          __int128 v24 = " = 1;";
        }

        else
        {
          __int128 v21 = sub_10000CF44(&v34.__r_.__value_.__l.__cap_, (uint64_t)"UPDATE VO2MaxHistory SET ", 25LL);
          size_t v22 = strlen(v8);
          __int128 v23 = sub_10000CF44(v21, (uint64_t)v8, v22);
          __int128 v24 = " = 0;";
        }

        sub_10000CF44(v23, (uint64_t)v24, 5LL);
        uint64_t v27 = *(void *)(a1 + 80);
        std::stringbuf::str(&v32, &v35);
        if ((v32.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int128 v28 = &v32;
        }
        else {
          __int128 v28 = (std::stringbuf::string_type *)v32.__r_.__value_.__r.__words[0];
        }
        sub_1003C0D54(v27, (char *)v28, &v33);
        uint64_t v29 = v33;
        uint64_t v33 = 0LL;
        uint64_t v30 = *(void *)(a1 + 80);
        __int128 v31 = (sqlite3_stmt *)sub_100019240(v29);
        sub_1003BB2BC(v30, v31);
        sub_1003C05BC(*(void *)(a1 + 80));
        if (v29) {
          (*(void (**)(uint64_t))(*(void *)v29 + 8LL))(v29);
        }
        v34.__r_.__value_.__r.__words[0] = v5;
        *(std::string::size_type *)((char *)v34.__r_.__value_.__r.__words + *(void *)(v5 - 24)) = v7;
        v34.__r_.__value_.__l.__cap_ = v6;
        std::streambuf::~streambuf(&v35);
        std::ios::~ios(&v36);
        if (v18) {
          (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
        }
        v37[0] = v5;
        *(void *)((char *)v37 + *(void *)(v5 - 24)) = v7;
        std::string::size_type v38 = v6;
        std::streambuf::~streambuf(&v39);
        std::ios::~ios(&v40);
        int v4 = 1;
      }

      uint64_t v8 = (&off_101837270)[v3 + 66];
      v3 += 6LL;
    }

    while (v3 != 42);
    uint64_t result = sub_1004068C8( a1,  "VO2MaxHistory",  (const char **)&off_101837270,  (const std::string::value_type **)&off_101937DE8);
  }

  return result;
}

void sub_100406270( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, void *a21, uint64_t a22, int a23, __int16 a24, char a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a21);
  if (v59) {
    (*(void (**)(uint64_t))(*(void *)v59 + 8LL))(v59);
  }
  sub_1011F8850((uint64_t)&a59);
  _Unwind_Resume(a1);
}

uint64_t sub_100406308(uint64_t a1)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_1003C0D54(*(void *)(a1 + 80), "DELETE FROM VO2MaxHistory", &v8);
    uint64_t v3 = v8;
    uint64_t v4 = *(void *)(a1 + 80);
    std::string::size_type v5 = (sqlite3_stmt *)sub_100019240(v8);
    sub_1003BB2BC(v4, v5);
    uint64_t v6 = *(void *)(a1 + 80);
    else {
      uint64_t v7 = *(void *)(v6 + 88);
    }
    uint64_t result = sub_1003C1EC0(v6, v7);
    if (v3) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
    }
  }

  return result;
}

void sub_10040639C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004063BC(uint64_t a1)
{
  return sub_100406308(a1 - 72);
}

uint64_t sub_1004063C4(uint64_t *a1, uint64_t a2)
{
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*a1 + 120))(a1, a2, 1LL);
    sub_1003C0D54(a1[10], "DELETE FROM VO2MaxHistory WHERE startTime > ?", &v11);
    uint64_t v5 = v11;
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v11);
    if (sub_1003B7480(v6, 1, *(double *)(a2 + 24)))
    {
      uint64_t v7 = a1[10];
      uint64_t v8 = (sqlite3_stmt *)sub_100019240(v5);
      sub_1003BB2BC(v7, v8);
    }

    uint64_t v9 = a1[10];
    else {
      uint64_t v10 = *(void *)(v9 + 88);
    }
    uint64_t result = sub_1003C1EC0(v9, v10);
    if (v5) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return result;
}

void sub_10040648C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004064AC(uint64_t a1, double a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_1003C0D54(*(void *)(a1 + 80), "UPDATE VO2MaxHistory SET startTime = startTime + ?", &v9);
    uint64_t v5 = v9;
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v9);
    uint64_t result = sub_1003B7480(v6, 1, a2);
    if ((_DWORD)result)
    {
      uint64_t v7 = *(void *)(a1 + 80);
      uint64_t v8 = (sqlite3_stmt *)sub_100019240(v5);
      uint64_t result = sub_1003BB2BC(v7, v8);
    }

    if (v5) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return result;
}

void sub_100406544(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100406564(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100D8A92C(a1 + 72);
  if ((_DWORD)result)
  {
    sub_1003C0D54( *(void *)(a1 + 80),  "INSERT INTO VO2MaxHistory (startTime, workoutType, estimatedVo2Max, durationInSeconds, hrMax, hrMin, sessionId, va riance, filteredVo2Max, sessionType, eligibleForHealthKit, eligibleForCalorimetry, numWorkoutsContrToEstimate, est imatedHRResponseParam, estimatedHRRecoveryParam, sessionVo2Max) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",  v24);
    uint64_t v5 = *(void *)v24;
    uuid_unparse((const unsigned __int8 *)(a2 + 72), v24);
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v5);
    uint64_t result = sub_1003B7480(v6, 1, *(double *)(a2 + 24));
    if ((_DWORD)result)
    {
      uint64_t v7 = (sqlite3_stmt *)sub_100019240(v5);
      uint64_t result = sub_1003C28BC(v7, 2, *(_DWORD *)(a2 + 40));
      if ((_DWORD)result)
      {
        uint64_t v8 = (sqlite3_stmt *)sub_100019240(v5);
        uint64_t result = sub_1003B7480(v8, 3, *(double *)(a2 + 32));
        if ((_DWORD)result)
        {
          uint64_t v9 = (sqlite3_stmt *)sub_100019240(v5);
          uint64_t result = sub_1003B7480(v9, 4, *(double *)(a2 + 48));
          if ((_DWORD)result)
          {
            uint64_t v10 = (sqlite3_stmt *)sub_100019240(v5);
            uint64_t result = sub_1003B7480(v10, 5, *(double *)(a2 + 56));
            if ((_DWORD)result)
            {
              uint64_t v11 = (sqlite3_stmt *)sub_100019240(v5);
              uint64_t result = sub_1003B7480(v11, 6, *(double *)(a2 + 64));
              if ((_DWORD)result)
              {
                __int128 v12 = (sqlite3_stmt *)sub_100019240(v5);
                uint64_t result = sub_1003BC1F0(v12, 7, v24);
                if ((_DWORD)result)
                {
                  __int128 v13 = (sqlite3_stmt *)sub_100019240(v5);
                  uint64_t result = sub_1003B7480(v13, 8, *(double *)(a2 + 88));
                  if ((_DWORD)result)
                  {
                    size_t v14 = (sqlite3_stmt *)sub_100019240(v5);
                    uint64_t result = sub_1003B7480(v14, 9, *(double *)(a2 + 96));
                    if ((_DWORD)result)
                    {
                      __int128 v15 = (sqlite3_stmt *)sub_100019240(v5);
                      uint64_t result = sub_1003C28BC(v15, 10, *(_DWORD *)(a2 + 104));
                      if ((_DWORD)result)
                      {
                        uint64_t v16 = (sqlite3_stmt *)sub_100019240(v5);
                        uint64_t result = sub_1003C28BC(v16, 11, *(unsigned __int8 *)(a2 + 108));
                        if ((_DWORD)result)
                        {
                          unint64_t v17 = (sqlite3_stmt *)sub_100019240(v5);
                          uint64_t result = sub_1003C28BC(v17, 12, *(unsigned __int8 *)(a2 + 109));
                          if ((_DWORD)result)
                          {
                            uint64_t v18 = (sqlite3_stmt *)sub_100019240(v5);
                            uint64_t result = sub_1003C2AF0(v18, 13, *(_DWORD *)(a2 + 112));
                            if ((_DWORD)result)
                            {
                              uint64_t v19 = (sqlite3_stmt *)sub_100019240(v5);
                              uint64_t result = sub_1003B7480(v19, 14, *(double *)(a2 + 120));
                              if ((_DWORD)result)
                              {
                                unint64_t v20 = (sqlite3_stmt *)sub_100019240(v5);
                                uint64_t result = sub_1003B7480(v20, 15, *(double *)(a2 + 128));
                                if ((_DWORD)result)
                                {
                                  __int128 v21 = (sqlite3_stmt *)sub_100019240(v5);
                                  uint64_t result = sub_1003B7480(v21, 16, *(double *)(a2 + 136));
                                  if ((_DWORD)result)
                                  {
                                    uint64_t v22 = *(void *)(a1 + 80);
                                    __int128 v23 = (sqlite3_stmt *)sub_100019240(v5);
                                    uint64_t result = sub_1003BB2BC(v22, v23);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    if (v5) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
    }
  }

  return result;
}

void sub_10040679C(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1004067C4()
{
  return 0LL;
}

uint64_t sub_1004067CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)src;
  uint64_t v7 = *(void *)src;
  uint64_t v5 = sub_100405378(&v7, a2);
  if (!(_DWORD)v5)
  {
    sub_100405344(a1, src);
    uuid_copy((unsigned __int8 *)(a2 + 8), src);
  }

  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return v5;
}

void sub_10040689C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004068C8(uint64_t a1, char *a2, const char **a3, const std::string::value_type **a4)
{
  if (!sub_1003B79FC(*(void *)(a1 + 80), a2))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018376C8);
    }
    uint64_t v8 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "#Notice %{public}s needs autoincrement migration",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018376C8);
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
      v131 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice %{public}s needs autoincrement migration",  &__p,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::migrateDbConstraints(const ch ar *, const CLSqliteDatabase::ColumnInfo *, const char **) [T = VO2MaxOutput, DataProtectionPolicy = CLActivityD B::ClassBDataProtectionPolicy]",  "%s\n",  (const char *)v131);
      if (v131 != buf) {
        free(v131);
      }
    }

    memset(&__p, 0, sizeof(__p));
    sub_1010DDBC0(buf, a2);
    uint64_t v9 = std::string::append(buf, "AutoIncr");
    __int128 v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    int64_t cap = v9->__r_.__value_.__l.__cap_;
    *(_OWORD *)v140 = v10;
    v9->__r_.__value_.__l.__size_ = 0LL;
    v9->__r_.__value_.__l.__cap_ = 0LL;
    v9->__r_.__value_.__r.__words[0] = 0LL;
    sub_1010DDBC0(buf, a2);
    uint64_t v11 = std::string::append(buf, "Index");
    __int128 v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    int64_t v139 = v11->__r_.__value_.__l.__cap_;
    *(_OWORD *)v138 = v12;
    v11->__r_.__value_.__l.__size_ = 0LL;
    v11->__r_.__value_.__l.__cap_ = 0LL;
    v11->__r_.__value_.__r.__words[0] = 0LL;
    sub_1003C0454(*(void *)(a1 + 80));
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      size_t size = __p.__r_.__value_.__l.__size_;
    }
    size_t v14 = buf;
    sub_1000392EC((uint64_t)buf, size + 21);
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
      size_t v14 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if (size)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v14, p_p, size);
    }

    strcpy((char *)v14 + size, "DROP TABLE IF EXISTS ");
    if (cap >= 0) {
      uint64_t v16 = v140;
    }
    else {
      uint64_t v16 = (void **)v140[0];
    }
    if (cap >= 0) {
      std::string::size_type v17 = HIBYTE(cap);
    }
    else {
      std::string::size_type v17 = (std::string::size_type)v140[1];
    }
    uint64_t v18 = std::string::append(buf, (const std::string::value_type *)v16, v17);
    std::string::size_type v19 = v18->__r_.__value_.__r.__words[0];
    v146.__r_.__value_.__r.__words[0] = v18->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v146.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v18->__r_.__value_.__r.__words[1] + 7);
    signed __int8 v20 = v18->__r_.__value_.__s.__size_;
    v18->__r_.__value_.__l.__size_ = 0LL;
    v18->__r_.__value_.__l.__cap_ = 0LL;
    v18->__r_.__value_.__r.__words[0] = 0LL;
    __p.__r_.__value_.__r.__words[0] = v19;
    __p.__r_.__value_.__l.__size_ = v146.__r_.__value_.__r.__words[0];
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v146.__r_.__value_.__r.__words + 7);
    __p.__r_.__value_.__s.__size_ = v20;
    if ((char)buf[0].__r_.__value_.__s.__size_ < 0)
    {
      operator delete(buf[0].__r_.__value_.__l.__data_);
      signed __int8 v20 = __p.__r_.__value_.__s.__size_;
      std::string::size_type v19 = __p.__r_.__value_.__r.__words[0];
    }

    if (v20 >= 0) {
      __int128 v21 = &__p;
    }
    else {
      __int128 v21 = (std::string *)v19;
    }
    sub_1003C0D54(*(void *)(a1 + 80), (char *)v21, buf);
    uint64_t v22 = (sqlite3_stmt *)sub_100019240((uint64_t)buf[0].__r_.__value_.__l.__data_);
    int v23 = sqlite3_step(v22);
    std::string::size_type v24 = buf[0].__r_.__value_.__r.__words[0];
    buf[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v24) {
      (*(void (**)(std::string::size_type))(*(void *)v24 + 8LL))(v24);
    }
    if (v23 != 101) {
      goto LABEL_234;
    }
    std::string::assign(&__p, "");
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t v25 = __p.__r_.__value_.__s.__size_;
    }
    else {
      size_t v25 = __p.__r_.__value_.__l.__size_;
    }
    size_t v26 = &v145;
    sub_1000392EC((uint64_t)&v145, v25 + 13);
    if ((v145.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      size_t v26 = (std::string *)v145.__r_.__value_.__r.__words[0];
    }
    if (v25)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v27 = &__p;
      }
      else {
        uint64_t v27 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v26, v27, v25);
    }

    strcpy((char *)v26 + v25, "CREATE TABLE ");
    if (cap >= 0) {
      __int128 v28 = v140;
    }
    else {
      __int128 v28 = (void **)v140[0];
    }
    if (cap >= 0) {
      std::string::size_type v29 = HIBYTE(cap);
    }
    else {
      std::string::size_type v29 = (std::string::size_type)v140[1];
    }
    uint64_t v30 = std::string::append(&v145, (const std::string::value_type *)v28, v29);
    __int128 v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v137.__r_.__value_.__l.__cap_ = v30->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v137.__r_.__value_.__l.__data_ = v31;
    v30->__r_.__value_.__l.__size_ = 0LL;
    v30->__r_.__value_.__l.__cap_ = 0LL;
    v30->__r_.__value_.__r.__words[0] = 0LL;
    std::stringbuf::string_type v32 = std::string::append(&v137, " (");
    __int128 v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    v146.__r_.__value_.__l.__cap_ = v32->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v146.__r_.__value_.__l.__data_ = v33;
    v32->__r_.__value_.__l.__size_ = 0LL;
    v32->__r_.__value_.__l.__cap_ = 0LL;
    v32->__r_.__value_.__r.__words[0] = 0LL;
    sub_1003BE030(a3, 1, 1, (uint64_t)&v136);
    if ((v136.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::stringbuf::string_type v34 = &v136;
    }
    else {
      std::stringbuf::string_type v34 = (std::string *)v136.__r_.__value_.__r.__words[0];
    }
    if ((v136.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v35 = v136.__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type v35 = v136.__r_.__value_.__l.__size_;
    }
    uint64_t v36 = std::string::append(&v146, (const std::string::value_type *)v34, v35);
    __int128 v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    buf[0].__r_.__value_.__l.__cap_ = v36->__r_.__value_.__l.__cap_;
    *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v37;
    v36->__r_.__value_.__l.__size_ = 0LL;
    v36->__r_.__value_.__l.__cap_ = 0LL;
    v36->__r_.__value_.__r.__words[0] = 0LL;
    std::string::size_type v38 = std::string::append(buf, ")");
    std::string::size_type v39 = v38->__r_.__value_.__r.__words[0];
    v143.__r_.__value_.__r.__words[0] = v38->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v143.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v38->__r_.__value_.__r.__words[1] + 7);
    unsigned __int8 v40 = v38->__r_.__value_.__s.__size_;
    v38->__r_.__value_.__l.__size_ = 0LL;
    v38->__r_.__value_.__l.__cap_ = 0LL;
    v38->__r_.__value_.__r.__words[0] = 0LL;
    __p.__r_.__value_.__r.__words[0] = v39;
    __p.__r_.__value_.__l.__size_ = v143.__r_.__value_.__r.__words[0];
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v143.__r_.__value_.__r.__words + 7);
    __p.__r_.__value_.__s.__size_ = v40;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v41 = &__p;
    }
    else {
      uint64_t v41 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(*(void *)(a1 + 80), (char *)v41, buf);
    int v42 = (sqlite3_stmt *)sub_100019240((uint64_t)buf[0].__r_.__value_.__l.__data_);
    int v43 = sqlite3_step(v42);
    std::string::size_type v44 = buf[0].__r_.__value_.__r.__words[0];
    buf[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v44) {
      (*(void (**)(std::string::size_type))(*(void *)v44 + 8LL))(v44);
    }
    if (v43 != 101) {
      goto LABEL_234;
    }
    sub_1003BE030(a3, 0, 0, (uint64_t)buf);
    std::string::assign(&__p, "");
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t v45 = __p.__r_.__value_.__s.__size_;
    }
    else {
      size_t v45 = __p.__r_.__value_.__l.__size_;
    }
    __int128 v46 = &v142;
    sub_1000392EC((uint64_t)&v142, v45 + 12);
    if ((v142.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      __int128 v46 = (std::string *)v142.__r_.__value_.__r.__words[0];
    }
    if (v45)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v47 = &__p;
      }
      else {
        __int128 v47 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v46, v47, v45);
    }

    strcpy((char *)v46 + v45, "INSERT INTO ");
    if (cap >= 0) {
      __int128 v48 = v140;
    }
    else {
      __int128 v48 = (void **)v140[0];
    }
    if (cap >= 0) {
      std::string::size_type v49 = HIBYTE(cap);
    }
    else {
      std::string::size_type v49 = (std::string::size_type)v140[1];
    }
    __int128 v50 = std::string::append(&v142, (const std::string::value_type *)v48, v49);
    __int128 v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
    v135.__r_.__value_.__l.__cap_ = v50->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v135.__r_.__value_.__l.__data_ = v51;
    v50->__r_.__value_.__l.__size_ = 0LL;
    v50->__r_.__value_.__l.__cap_ = 0LL;
    v50->__r_.__value_.__r.__words[0] = 0LL;
    __int128 v52 = std::string::append(&v135, " (");
    __int128 v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
    v143.__r_.__value_.__l.__cap_ = v52->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v53;
    v52->__r_.__value_.__l.__size_ = 0LL;
    v52->__r_.__value_.__l.__cap_ = 0LL;
    v52->__r_.__value_.__r.__words[0] = 0LL;
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int128 v54 = buf;
    }
    else {
      __int128 v54 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v55 = buf[0].__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type v55 = buf[0].__r_.__value_.__l.__size_;
    }
    __int128 v56 = std::string::append(&v143, (const std::string::value_type *)v54, v55);
    __int128 v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
    v136.__r_.__value_.__l.__cap_ = v56->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v57;
    v56->__r_.__value_.__l.__size_ = 0LL;
    v56->__r_.__value_.__l.__cap_ = 0LL;
    v56->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v58 = std::string::append(&v136, ") SELECT ");
    __int128 v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
    v145.__r_.__value_.__l.__cap_ = v58->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v145.__r_.__value_.__l.__data_ = v59;
    v58->__r_.__value_.__l.__size_ = 0LL;
    v58->__r_.__value_.__l.__cap_ = 0LL;
    v58->__r_.__value_.__r.__words[0] = 0LL;
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v60 = buf;
    }
    else {
      std::string::size_type v60 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v61 = buf[0].__r_.__value_.__s.__size_;
    }
    else {
      std::string::size_type v61 = buf[0].__r_.__value_.__l.__size_;
    }
    int v62 = std::string::append(&v145, (const std::string::value_type *)v60, v61);
    __int128 v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
    v137.__r_.__value_.__l.__cap_ = v62->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v137.__r_.__value_.__l.__data_ = v63;
    v62->__r_.__value_.__l.__size_ = 0LL;
    v62->__r_.__value_.__l.__cap_ = 0LL;
    v62->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v64 = std::string::append(&v137, " FROM ");
    __int128 v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
    v146.__r_.__value_.__l.__cap_ = v64->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v146.__r_.__value_.__l.__data_ = v65;
    v64->__r_.__value_.__l.__size_ = 0LL;
    v64->__r_.__value_.__l.__cap_ = 0LL;
    v64->__r_.__value_.__r.__words[0] = 0LL;
    int v66 = std::string::append(&v146, a2);
    std::string::size_type v67 = v66->__r_.__value_.__r.__words[0];
    v144[0] = v66->__r_.__value_.__l.__size_;
    *(void *)((char *)v144 + 7) = *(std::string::size_type *)((char *)&v66->__r_.__value_.__r.__words[1] + 7);
    unsigned __int8 v68 = v66->__r_.__value_.__s.__size_;
    v66->__r_.__value_.__l.__size_ = 0LL;
    v66->__r_.__value_.__l.__cap_ = 0LL;
    v66->__r_.__value_.__r.__words[0] = 0LL;
    __p.__r_.__value_.__r.__words[0] = v67;
    __p.__r_.__value_.__l.__size_ = v144[0];
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v144 + 7);
    __p.__r_.__value_.__s.__size_ = v68;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v69 = &__p;
    }
    else {
      uint64_t v69 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(*(void *)(a1 + 80), (char *)v69, &v146);
    uint64_t v70 = (sqlite3_stmt *)sub_100019240((uint64_t)v146.__r_.__value_.__l.__data_);
    int v71 = sqlite3_step(v70);
    std::string::size_type v72 = v146.__r_.__value_.__r.__words[0];
    v146.__r_.__value_.__r.__words[0] = 0LL;
    if (v72) {
      (*(void (**)(std::string::size_type))(*(void *)v72 + 8LL))(v72);
    }
    if (v71 != 101) {
      goto LABEL_234;
    }
    std::string::assign(&__p, "");
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t v73 = __p.__r_.__value_.__s.__size_;
    }
    else {
      size_t v73 = __p.__r_.__value_.__l.__size_;
    }
    __int16 v74 = buf;
    sub_1000392EC((uint64_t)buf, v73 + 11);
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
      __int16 v74 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if (v73)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::stringbuf v75 = &__p;
      }
      else {
        std::stringbuf v75 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v74, v75, v73);
    }

    strcpy((char *)v74 + v73, "DROP TABLE ");
    uint64_t v76 = std::string::append(buf, a2);
    std::string::size_type v77 = v76->__r_.__value_.__r.__words[0];
    v146.__r_.__value_.__r.__words[0] = v76->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v146.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v76->__r_.__value_.__r.__words[1] + 7);
    signed __int8 v78 = v76->__r_.__value_.__s.__size_;
    v76->__r_.__value_.__l.__size_ = 0LL;
    v76->__r_.__value_.__l.__cap_ = 0LL;
    v76->__r_.__value_.__r.__words[0] = 0LL;
    __p.__r_.__value_.__r.__words[0] = v77;
    __p.__r_.__value_.__l.__size_ = v146.__r_.__value_.__r.__words[0];
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v146.__r_.__value_.__r.__words + 7);
    __p.__r_.__value_.__s.__size_ = v78;
    if ((char)buf[0].__r_.__value_.__s.__size_ < 0)
    {
      operator delete(buf[0].__r_.__value_.__l.__data_);
      signed __int8 v78 = __p.__r_.__value_.__s.__size_;
      std::string::size_type v77 = __p.__r_.__value_.__r.__words[0];
    }

    if (v78 >= 0) {
      v79 = &__p;
    }
    else {
      v79 = (std::string *)v77;
    }
    sub_1003C0D54(*(void *)(a1 + 80), (char *)v79, buf);
    uint64_t v80 = (sqlite3_stmt *)sub_100019240((uint64_t)buf[0].__r_.__value_.__l.__data_);
    int v81 = sqlite3_step(v80);
    std::string::size_type v82 = buf[0].__r_.__value_.__r.__words[0];
    buf[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v82) {
      (*(void (**)(std::string::size_type))(*(void *)v82 + 8LL))(v82);
    }
    if (v81 != 101) {
      goto LABEL_234;
    }
    std::string::assign(&__p, "");
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      size_t v83 = __p.__r_.__value_.__s.__size_;
    }
    else {
      size_t v83 = __p.__r_.__value_.__l.__size_;
    }
    v84 = &v137;
    sub_1000392EC((uint64_t)&v137, v83 + 12);
    if ((v137.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      v84 = (std::string *)v137.__r_.__value_.__r.__words[0];
    }
    if (v83)
    {
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        v85 = &__p;
      }
      else {
        v85 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      memmove(v84, v85, v83);
    }

    strcpy((char *)v84 + v83, "ALTER TABLE ");
    if (cap >= 0) {
      v86 = v140;
    }
    else {
      v86 = (void **)v140[0];
    }
    if (cap >= 0) {
      std::string::size_type v87 = HIBYTE(cap);
    }
    else {
      std::string::size_type v87 = (std::string::size_type)v140[1];
    }
    v88 = std::string::append(&v137, (const std::string::value_type *)v86, v87);
    __int128 v89 = *(_OWORD *)&v88->__r_.__value_.__l.__data_;
    v146.__r_.__value_.__l.__cap_ = v88->__r_.__value_.__l.__cap_;
    *(_OWORD *)&v146.__r_.__value_.__l.__data_ = v89;
    v88->__r_.__value_.__l.__size_ = 0LL;
    v88->__r_.__value_.__l.__cap_ = 0LL;
    v88->__r_.__value_.__r.__words[0] = 0LL;
    v90 = std::string::append(&v146, " RENAME TO ");
    __int128 v91 = *(_OWORD *)&v90->__r_.__value_.__l.__data_;
    buf[0].__r_.__value_.__l.__cap_ = v90->__r_.__value_.__l.__cap_;
    *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v91;
    v90->__r_.__value_.__l.__size_ = 0LL;
    v90->__r_.__value_.__l.__cap_ = 0LL;
    v90->__r_.__value_.__r.__words[0] = 0LL;
    v92 = std::string::append(buf, a2);
    std::string::size_type v93 = v92->__r_.__value_.__r.__words[0];
    v145.__r_.__value_.__r.__words[0] = v92->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v145.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v92->__r_.__value_.__r.__words[1] + 7);
    unsigned __int8 v94 = v92->__r_.__value_.__s.__size_;
    v92->__r_.__value_.__l.__size_ = 0LL;
    v92->__r_.__value_.__l.__cap_ = 0LL;
    v92->__r_.__value_.__r.__words[0] = 0LL;
    __p.__r_.__value_.__r.__words[0] = v93;
    __p.__r_.__value_.__l.__size_ = v145.__r_.__value_.__r.__words[0];
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v145.__r_.__value_.__r.__words + 7);
    __p.__r_.__value_.__s.__size_ = v94;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v95 = &__p;
    }
    else {
      v95 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(*(void *)(a1 + 80), (char *)v95, buf);
    v96 = (sqlite3_stmt *)sub_100019240((uint64_t)buf[0].__r_.__value_.__l.__data_);
    int v97 = sqlite3_step(v96);
    std::string::size_type v98 = buf[0].__r_.__value_.__r.__words[0];
    buf[0].__r_.__value_.__r.__words[0] = 0LL;
    if (v98) {
      (*(void (**)(std::string::size_type))(*(void *)v98 + 8LL))(v98);
    }
    if (v97 != 101) {
      goto LABEL_234;
    }
    sub_1003BAFA4(a4, buf);
    std::string::size_type v99 = buf[0].__r_.__value_.__s.__size_;
    unsigned __int8 v100 = buf[0].__r_.__value_.__s.__size_;
    if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string::size_type v99 = buf[0].__r_.__value_.__l.__size_;
    }
    if (v99)
    {
      std::string::assign(&__p, "");
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        size_t v101 = __p.__r_.__value_.__s.__size_;
      }
      else {
        size_t v101 = __p.__r_.__value_.__l.__size_;
      }
      v102 = &v135;
      sub_1000392EC((uint64_t)&v135, v101 + 13);
      if ((v135.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        v102 = (std::string *)v135.__r_.__value_.__r.__words[0];
      }
      if (v101)
      {
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          v103 = &__p;
        }
        else {
          v103 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        memmove(v102, v103, v101);
      }

      strcpy((char *)v102 + v101, "CREATE INDEX ");
      if (v139 >= 0) {
        v104 = v138;
      }
      else {
        v104 = (void **)v138[0];
      }
      if (v139 >= 0) {
        std::string::size_type v105 = HIBYTE(v139);
      }
      else {
        std::string::size_type v105 = (std::string::size_type)v138[1];
      }
      v106 = std::string::append(&v135, (const std::string::value_type *)v104, v105);
      __int128 v107 = *(_OWORD *)&v106->__r_.__value_.__l.__data_;
      v143.__r_.__value_.__l.__cap_ = v106->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v107;
      v106->__r_.__value_.__l.__size_ = 0LL;
      v106->__r_.__value_.__l.__cap_ = 0LL;
      v106->__r_.__value_.__r.__words[0] = 0LL;
      v108 = std::string::append(&v143, " ON ");
      __int128 v109 = *(_OWORD *)&v108->__r_.__value_.__l.__data_;
      v136.__r_.__value_.__l.__cap_ = v108->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v109;
      v108->__r_.__value_.__l.__size_ = 0LL;
      v108->__r_.__value_.__l.__cap_ = 0LL;
      v108->__r_.__value_.__r.__words[0] = 0LL;
      v110 = std::string::append(&v136, a2);
      __int128 v111 = *(_OWORD *)&v110->__r_.__value_.__l.__data_;
      v145.__r_.__value_.__l.__cap_ = v110->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v145.__r_.__value_.__l.__data_ = v111;
      v110->__r_.__value_.__l.__size_ = 0LL;
      v110->__r_.__value_.__l.__cap_ = 0LL;
      v110->__r_.__value_.__r.__words[0] = 0LL;
      v112 = std::string::append(&v145, " (");
      __int128 v113 = *(_OWORD *)&v112->__r_.__value_.__l.__data_;
      v137.__r_.__value_.__l.__cap_ = v112->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v137.__r_.__value_.__l.__data_ = v113;
      v112->__r_.__value_.__l.__size_ = 0LL;
      v112->__r_.__value_.__l.__cap_ = 0LL;
      v112->__r_.__value_.__r.__words[0] = 0LL;
      if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
        v114 = buf;
      }
      else {
        v114 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
      }
      if ((buf[0].__r_.__value_.__s.__size_ & 0x80u) == 0) {
        std::string::size_type v115 = buf[0].__r_.__value_.__s.__size_;
      }
      else {
        std::string::size_type v115 = buf[0].__r_.__value_.__l.__size_;
      }
      v116 = std::string::append(&v137, (const std::string::value_type *)v114, v115);
      __int128 v117 = *(_OWORD *)&v116->__r_.__value_.__l.__data_;
      v146.__r_.__value_.__l.__cap_ = v116->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v146.__r_.__value_.__l.__data_ = v117;
      v116->__r_.__value_.__l.__size_ = 0LL;
      v116->__r_.__value_.__l.__cap_ = 0LL;
      v116->__r_.__value_.__r.__words[0] = 0LL;
      v118 = std::string::append(&v146, ")");
      std::string::size_type v119 = v118->__r_.__value_.__r.__words[0];
      v142.__r_.__value_.__r.__words[0] = v118->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v142.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v118->__r_.__value_.__r.__words[1] + 7);
      unsigned __int8 v120 = v118->__r_.__value_.__s.__size_;
      v118->__r_.__value_.__l.__size_ = 0LL;
      v118->__r_.__value_.__l.__cap_ = 0LL;
      v118->__r_.__value_.__r.__words[0] = 0LL;
      __p.__r_.__value_.__r.__words[0] = v119;
      __p.__r_.__value_.__l.__size_ = v142.__r_.__value_.__r.__words[0];
      *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v142.__r_.__value_.__r.__words + 7);
      __p.__r_.__value_.__s.__size_ = v120;
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        v121 = &__p;
      }
      else {
        v121 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      sub_1003C0D54(*(void *)(a1 + 80), (char *)v121, &v146);
      v122 = (sqlite3_stmt *)sub_100019240((uint64_t)v146.__r_.__value_.__l.__data_);
      int v123 = sqlite3_step(v122);
      std::string::size_type v124 = v146.__r_.__value_.__r.__words[0];
      v146.__r_.__value_.__r.__words[0] = 0LL;
      if (v124) {
        (*(void (**)(std::string::size_type))(*(void *)v124 + 8LL))(v124);
      }
      unsigned __int8 v100 = buf[0].__r_.__value_.__s.__size_;
    }

    else
    {
      int v123 = 101;
    }

    if ((v100 & 0x80) != 0) {
      operator delete(buf[0].__r_.__value_.__l.__data_);
    }
    if (v123 == 101)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018376C8);
      }
      v125 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
        _os_log_impl( (void *)&_mh_execute_header,  v125,  OS_LOG_TYPE_DEFAULT,  "#Notice %{public}s autoincrement migration succeeded",  (uint8_t *)buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018376C8);
        }
        LODWORD(v146.__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)v146.__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
        LODWORD(v134) = 12;
        v133 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice %{public}s autoincrement migration succeeded",  &v146,  v134);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::migrateDbConstraints(const char *, const CLSqliteDatabase::ColumnInfo *, const char **) [T = VO2MaxOutput, DataProtectionPolicy = CLActiv ityDB::ClassBDataProtectionPolicy]",  "%s\n",  (const char *)v133);
        if (v133 != buf) {
          free(v133);
        }
      }

      sub_1003C05BC(*(void *)(a1 + 80));
      char v126 = 0;
    }

    else
    {
LABEL_234:
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018376C8);
      }
      v127 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
        _os_log_impl( (void *)&_mh_execute_header,  v127,  OS_LOG_TYPE_FAULT,  "%{public}s autoincrement migration failed",  (uint8_t *)buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018376C8);
        }
        LODWORD(v146.__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)v146.__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
        LODWORD(v134) = 12;
        v132 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "%{public}s autoincrement migration failed",  &v146,  v134);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::migrateDbConstraints(const char *, const CLSqliteDatabase::ColumnInfo *, const char **) [T = VO2MaxOutput, DataProtectionPolicy = CLActiv ityDB::ClassBDataProtectionPolicy]",  "%s\n",  (const char *)v132);
        if (v132 != buf) {
          free(v132);
        }
      }

      sub_1003C0E18(*(void *)(a1 + 80));
      char v126 = 1;
    }

    if (SHIBYTE(v139) < 0) {
      operator delete(v138[0]);
    }
    if (SHIBYTE(cap) < 0) {
      operator delete(v140[0]);
    }
    if ((char)__p.__r_.__value_.__s.__size_ < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((v126 & 1) != 0) {
        goto LABEL_246;
      }
    }

    else if ((v126 & 1) != 0)
    {
      goto LABEL_246;
    }

    return 1LL;
  }

void sub_100407A60( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, void *a30, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, void *a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, void *a47, uint64_t a48, uint64_t a49, uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a60 < 0) {
    operator delete(a55);
  }
  _Unwind_Resume(a1);
}

double sub_100407D80(uint64_t a1, double a2)
{
  uint64_t v4 = 0LL;
  uint64_t v5 = 0LL;
  uint64_t v6 = 0LL;
  sub_10040553C(a1, (char **)&v4, 1, 1, a2);
  if (v5 != (char *)v4)
  {
    double v2 = v4[4];
LABEL_4:
    uint64_t v5 = (char *)v4;
    operator delete(v4);
    return v2;
  }

  double v2 = NAN;
  if (v5) {
    goto LABEL_4;
  }
  return v2;
}

void sub_100407DEC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100407E08(uint64_t a1, void **a2, double a3, double a4)
{
  if ((sub_100D8A92C(a1 + 72) & 1) != 0)
  {
    sub_1003C0D54( *(void *)(a1 + 80),  "SELECT * FROM VO2MaxHistory WHERE estimatedVo2Max IS NOT NULL AND startTime > ? AND startTime < ? ORDER BY startTime",  buf);
    uint64_t v8 = *(void *)buf;
    v44[0] = *(void *)buf;
    *((void *)&v46 + 1) = 0LL;
    *((void *)&v52 + 1) = 0LL;
    __int128 v53 = 0uLL;
    uint64_t v9 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)buf);
    if (sub_1003C28BC(v9, 1, (int)a3))
    {
      __int128 v10 = (sqlite3_stmt *)sub_100019240(v8);
      if (sub_1003C28BC(v10, 2, (int)a4))
      {
        while (!sub_100405378(v44, (uint64_t)buf))
        {
          uint64_t v11 = a2[1];
          unint64_t v12 = (unint64_t)a2[2];
          if ((unint64_t)v11 >= v12)
          {
            unint64_t v20 = 0x8E38E38E38E38E39LL * (((char *)v11 - (_BYTE *)*a2) >> 4);
            unint64_t v21 = v20 + 1;
            if (v20 + 1 > 0x1C71C71C71C71C7LL) {
              sub_100007008();
            }
            unint64_t v22 = 0x8E38E38E38E38E39LL * ((uint64_t)(v12 - (void)*a2) >> 4);
            if (2 * v22 > v21) {
              unint64_t v21 = 2 * v22;
            }
            if (v22 >= 0xE38E38E38E38E3LL) {
              unint64_t v23 = 0x1C71C71C71C71C7LL;
            }
            else {
              unint64_t v23 = v21;
            }
            if (v23) {
              std::string::size_type v24 = (char *)sub_1002B4F00((uint64_t)(a2 + 2), v23);
            }
            else {
              std::string::size_type v24 = 0LL;
            }
            size_t v25 = &v24[144 * v20];
            *(_OWORD *)size_t v25 = *(_OWORD *)buf;
            __int128 v26 = v46;
            __int128 v27 = v47;
            __int128 v28 = v49;
            *((_OWORD *)v25 + 3) = v48;
            *((_OWORD *)v25 + 4) = v28;
            *((_OWORD *)v25 + 1) = v26;
            *((_OWORD *)v25 + 2) = v27;
            __int128 v29 = v50;
            __int128 v30 = v51;
            __int128 v31 = v53;
            *((_OWORD *)v25 + 7) = v52;
            *((_OWORD *)v25 + 8) = v31;
            *((_OWORD *)v25 + 5) = v29;
            *((_OWORD *)v25 + 6) = v30;
            __int128 v33 = (char *)*a2;
            std::stringbuf::string_type v32 = (char *)a2[1];
            std::stringbuf::string_type v34 = v25;
            if (v32 != *a2)
            {
              do
              {
                *((_OWORD *)v34 - 9) = *((_OWORD *)v32 - 9);
                __int128 v35 = *((_OWORD *)v32 - 8);
                __int128 v36 = *((_OWORD *)v32 - 7);
                __int128 v37 = *((_OWORD *)v32 - 5);
                *((_OWORD *)v34 - 6) = *((_OWORD *)v32 - 6);
                *((_OWORD *)v34 - 5) = v37;
                *((_OWORD *)v34 - 8) = v35;
                *((_OWORD *)v34 - 7) = v36;
                __int128 v38 = *((_OWORD *)v32 - 4);
                __int128 v39 = *((_OWORD *)v32 - 3);
                __int128 v40 = *((_OWORD *)v32 - 1);
                *((_OWORD *)v34 - 2) = *((_OWORD *)v32 - 2);
                *((_OWORD *)v34 - 1) = v40;
                *((_OWORD *)v34 - 4) = v38;
                *((_OWORD *)v34 - 3) = v39;
                v34 -= 144;
                v32 -= 144;
              }

              while (v32 != v33);
              std::stringbuf::string_type v32 = (char *)*a2;
            }

            std::string::size_type v19 = v25 + 144;
            *a2 = v34;
            a2[1] = v25 + 144;
            a2[2] = &v24[144 * v23];
            if (v32) {
              operator delete(v32);
            }
          }

          else
          {
            _OWORD *v11 = *(_OWORD *)buf;
            __int128 v13 = v46;
            __int128 v14 = v47;
            __int128 v15 = v49;
            v11[3] = v48;
            v11[4] = v15;
            v11[1] = v13;
            v11[2] = v14;
            __int128 v16 = v50;
            __int128 v17 = v51;
            __int128 v18 = v53;
            v11[7] = v52;
            v11[8] = v18;
            v11[5] = v16;
            v11[6] = v17;
            std::string::size_type v19 = v11 + 9;
          }

          a2[1] = v19;
        }
      }
    }

    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
    return 100LL;
  }

  else
  {
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101837250);
    }
    uint64_t v41 = (os_log_s *)qword_1019344D8;
    if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEBUG, "VO2MaxHistory, DB not accessible", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344D0 != -1) {
        dispatch_once(&qword_1019344D0, &stru_101837250);
      }
      LOWORD(v44[0]) = 0;
      int v43 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "VO2MaxHistory, DB not accessible",  v44,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CMError CLVO2MaxOutputRecorderDb::queryVO2MaxOutputInTimeRange(CFAbsoluteTime, CFAbsoluteTime, std::vect or<VO2MaxOutput> &) const",  "%s\n",  v43);
    }

    return 109LL;
  }

void sub_1004081C0(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1004081EC(uint64_t a1, void **a2, double a3, double a4)
{
  return sub_100407E08(a1 - 448, a2, a3, a4);
}

uint64_t sub_1004081F4(void *a1, void **a2, double a3, double a4)
{
  uint64_t v8 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v54);
  if ((SHIBYTE(v55) & 0x80000000) == 0)
  {
    if (HIBYTE(v55)) {
      goto LABEL_3;
    }
LABEL_40:
    sub_101238830(v8);
    __break(1u);
  }

  __int128 v49 = v54[1];
  operator delete(v54[0]);
  if (!v49) {
    goto LABEL_40;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v54);
  uint64_t v9 = sub_10000CF44(&v55, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(__int128 *__return_ptr, void *))(*a1 + 64LL))(&v58, a1);
  if ((SBYTE7(v59) & 0x80u) == 0) {
    __int128 v10 = &v58;
  }
  else {
    __int128 v10 = (__int128 *)v58;
  }
  if ((SBYTE7(v59) & 0x80u) == 0) {
    uint64_t v11 = BYTE7(v59);
  }
  else {
    uint64_t v11 = *((void *)&v58 + 1);
  }
  unint64_t v12 = sub_10000CF44(v9, (uint64_t)v10, v11);
  sub_10000CF44(v12, (uint64_t)" WHERE startTime > ? and startTime <= ? ORDER BY rowid ASC", 58LL);
  if (SBYTE7(v59) < 0) {
    operator delete((void *)v58);
  }
  uint64_t v13 = a1[10];
  std::stringbuf::str((std::stringbuf::string_type *)&v58, &v56);
  if ((SBYTE7(v59) & 0x80u) == 0) {
    __int128 v14 = (char *)&v58;
  }
  else {
    __int128 v14 = (char *)v58;
  }
  sub_1003C0D54(v13, v14, &v52);
  uint64_t v15 = v52;
  uint64_t v52 = 0LL;
  uint64_t v53 = v15;
  if (SBYTE7(v59) < 0) {
    operator delete((void *)v58);
  }
  __int128 v16 = (sqlite3_stmt *)sub_100019240(v15);
  if (sub_1003B7480(v16, 1, a3) && (__int128 v17 = (sqlite3_stmt *)sub_100019240(v15), sub_1003B7480(v17, 2, a4)))
  {
    *((void *)&v59 + 1) = 0LL;
    *((void *)&v65 + 1) = 0LL;
    __int128 v66 = 0uLL;
    while (1)
    {
      uint64_t v18 = sub_1001BA11C((uint64_t)a1, &v53, (uint64_t)&v58);
      if ((_DWORD)v18) {
        break;
      }
      std::string::size_type v19 = a2[1];
      unint64_t v20 = (unint64_t)a2[2];
      if ((unint64_t)v19 >= v20)
      {
        unint64_t v28 = 0x8E38E38E38E38E39LL * (((char *)v19 - (_BYTE *)*a2) >> 4);
        unint64_t v29 = v28 + 1;
        if (v28 + 1 > 0x1C71C71C71C71C7LL) {
          sub_100007008();
        }
        unint64_t v30 = 0x8E38E38E38E38E39LL * ((uint64_t)(v20 - (void)*a2) >> 4);
        if (2 * v30 > v29) {
          unint64_t v29 = 2 * v30;
        }
        if (v30 >= 0xE38E38E38E38E3LL) {
          unint64_t v31 = 0x1C71C71C71C71C7LL;
        }
        else {
          unint64_t v31 = v29;
        }
        if (v31) {
          std::stringbuf::string_type v32 = (char *)sub_1002B4F00((uint64_t)(a2 + 2), v31);
        }
        else {
          std::stringbuf::string_type v32 = 0LL;
        }
        __int128 v33 = &v32[144 * v28];
        *(_OWORD *)__int128 v33 = v58;
        __int128 v34 = v59;
        __int128 v35 = v60;
        __int128 v36 = v62;
        *((_OWORD *)v33 + 3) = v61;
        *((_OWORD *)v33 + 4) = v36;
        *((_OWORD *)v33 + 1) = v34;
        *((_OWORD *)v33 + 2) = v35;
        __int128 v37 = v63;
        __int128 v38 = v64;
        __int128 v39 = v66;
        *((_OWORD *)v33 + 7) = v65;
        *((_OWORD *)v33 + 8) = v39;
        *((_OWORD *)v33 + 5) = v37;
        *((_OWORD *)v33 + 6) = v38;
        uint64_t v41 = (char *)*a2;
        __int128 v40 = (char *)a2[1];
        int v42 = v33;
        if (v40 != *a2)
        {
          do
          {
            *((_OWORD *)v42 - 9) = *((_OWORD *)v40 - 9);
            __int128 v43 = *((_OWORD *)v40 - 8);
            __int128 v44 = *((_OWORD *)v40 - 7);
            __int128 v45 = *((_OWORD *)v40 - 5);
            *((_OWORD *)v42 - 6) = *((_OWORD *)v40 - 6);
            *((_OWORD *)v42 - 5) = v45;
            *((_OWORD *)v42 - 8) = v43;
            *((_OWORD *)v42 - 7) = v44;
            __int128 v46 = *((_OWORD *)v40 - 4);
            __int128 v47 = *((_OWORD *)v40 - 3);
            __int128 v48 = *((_OWORD *)v40 - 1);
            *((_OWORD *)v42 - 2) = *((_OWORD *)v40 - 2);
            *((_OWORD *)v42 - 1) = v48;
            *((_OWORD *)v42 - 4) = v46;
            *((_OWORD *)v42 - 3) = v47;
            v42 -= 144;
            v40 -= 144;
          }

          while (v40 != v41);
          __int128 v40 = (char *)*a2;
        }

        __int128 v27 = v33 + 144;
        *a2 = v42;
        a2[1] = v33 + 144;
        a2[2] = &v32[144 * v31];
        if (v40) {
          operator delete(v40);
        }
      }

      else
      {
        *std::string::size_type v19 = v58;
        __int128 v21 = v59;
        __int128 v22 = v60;
        __int128 v23 = v62;
        v19[3] = v61;
        v19[4] = v23;
        v19[1] = v21;
        v19[2] = v22;
        __int128 v24 = v63;
        __int128 v25 = v64;
        __int128 v26 = v66;
        v19[7] = v65;
        v19[8] = v26;
        v19[5] = v24;
        v19[6] = v25;
        __int128 v27 = v19 + 9;
      }

      a2[1] = v27;
    }

    uint64_t v15 = v53;
  }

  else
  {
    uint64_t v18 = 2LL;
  }

  uint64_t v53 = 0LL;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
  }
  *(void **)((char *)v54
  uint64_t v55 = v50;
  std::streambuf::~streambuf(&v56);
  std::ios::~ios(&v57);
  return v18;
}

void sub_1004085D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_100408644(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v2 = a1 + 112;
  uint64_t v4 = v2 - 40;
  uint64_t v38 = v2;
  (*(void (**)(void))(v3 + 16))();
  if (sub_100D8A92C(v4))
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018376C8);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = (void *)(a1 + 88);
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      *(_DWORD *)int v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&v42[6] = "";
      __int16 v43 = 2082;
      __int128 v44 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Database is already opened., name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    if (*(void *)(a1 + 216))
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018376C8);
      }
      uint64_t v7 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v8 = *(void *)(a1 + 216);
        *(_DWORD *)std::stringbuf::string_type buf = 134349056;
        *(void *)int v42 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018376C8);
        }
        uint64_t v34 = *(void *)(a1 + 216);
        int v39 = 134349056;
        uint64_t v40 = v34;
        __int128 v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "In memory buffer should have been empty! Instead it had a size of %{public}lu.",  &v39,  12);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::setDatabaseAccessib le() [T = VO2MaxOutput, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v35);
      }
    }

    uint64_t v9 = 1LL;
    goto LABEL_63;
  }

  sub_1001BA070(a1);
  uint64_t v9 = sub_100D8A92C(v4);
  if ((_DWORD)v9)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018376C8);
    }
    __int128 v10 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = (void *)(a1 + 88);
      uint64_t v12 = *(void *)(a1 + 216);
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      *(_DWORD *)int v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&v42[6] = "";
      __int16 v43 = 2082;
      __int128 v44 = v11;
      __int16 v45 = 2049;
      uint64_t v46 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Inserting entries into database, name:%{public, location:escape_only}s, size:%{private}llu}",  buf,  0x26u);
    }

    sub_1003C0454(*(void *)(a1 + 80));
    unint64_t v13 = *(void *)(a1 + 208);
    uint64_t v14 = *(void *)(a1 + 184);
    uint64_t v15 = *(void *)(a1 + 192);
    __int128 v16 = (void *)(v14 + 8 * (v13 / 0x1C));
    unsigned int v37 = v9;
    if (v15 == v14) {
      unint64_t v17 = 0LL;
    }
    else {
      unint64_t v17 = *v16 + 144 * (v13 % 0x1C);
    }
    while (1)
    {
      if (v15 == v14)
      {
        unint64_t v23 = 0LL;
      }

      else
      {
        unint64_t v22 = *(void *)(a1 + 216) + *(void *)(a1 + 208);
        unint64_t v23 = *(void *)(v14 + 8 * (v22 / 0x1C)) + 144 * (v22 % 0x1C);
      }

      if (v17 == v23) {
        break;
      }
      if (qword_101934510 != -1) {
        dispatch_once(&qword_101934510, &stru_1018376E8);
      }
      __int128 v24 = (os_log_s *)qword_101934518;
      if (os_log_type_enabled((os_log_t)qword_101934518, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "Adding from buffer to db.", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934510 != -1) {
          dispatch_once(&qword_101934510, &stru_1018376E8);
        }
        LOWORD(v39) = 0;
        LODWORD(v36) = 2;
        __int128 v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934518,  2LL,  "Adding from buffer to db.",  &v39,  v36);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::setDatabaseAccessib le() [T = VO2MaxOutput, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v26);
      }

      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)a1 + 80LL))(a1, v17, 1LL);
      v17 += 144LL;
      if (v17 - *v16 == 4032)
      {
        unint64_t v25 = v16[1];
        ++v16;
        unint64_t v17 = v25;
      }

      uint64_t v14 = *(void *)(a1 + 184);
      uint64_t v15 = *(void *)(a1 + 192);
    }

    sub_1003C05BC(*(void *)(a1 + 80));
    uint64_t v9 = v37;
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018376C8);
    }
    uint64_t v18 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
    {
      std::string::size_type v19 = (void *)(a1 + 88);
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      *(_DWORD *)int v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&v42[6] = "";
      __int16 v43 = 2082;
      __int128 v44 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018376C8);
      }
    }

    unint64_t v20 = (os_log_s *)qword_1019344B8;
    if (os_signpost_enabled((os_log_t)qword_1019344B8))
    {
      __int128 v21 = (void *)(a1 + 88);
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      *(_DWORD *)int v42 = 0;
      *(_WORD *)&v42[4] = 2082;
      *(void *)&v42[6] = "";
      __int16 v43 = 2082;
      __int128 v44 = v21;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v20,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Unexpected error condition! Device has been unlocked but database remains unreadable!",  "{msg%{public}.0s:Unexpected error condition! Device has been unlocked but database remains unreadable!, name:%{public, location:escape_only}s}",  buf,  0x1Cu);
    }

    *(_BYTE *)(a1 + 128) = 1;
  }

  __int128 v27 = *(void ***)(a1 + 184);
  uint64_t v28 = *(void *)(a1 + 192);
  *(void *)(a1 + 216) = 0LL;
  unint64_t v29 = v28 - (void)v27;
  if (v29 >= 0x11)
  {
    do
    {
      operator delete(*v27);
      uint64_t v30 = *(void *)(a1 + 192);
      __int128 v27 = (void **)(*(void *)(a1 + 184) + 8LL);
      *(void *)(a1 + 184) = v27;
      unint64_t v29 = v30 - (void)v27;
    }

    while (v29 > 0x10);
  }

  if (v29 >> 3 == 1)
  {
    uint64_t v31 = 14LL;
  }

  else
  {
    if (v29 >> 3 != 2) {
      goto LABEL_61;
    }
    uint64_t v31 = 28LL;
  }

  *(void *)(a1 + 208) = v31;
LABEL_61:
  std::stringbuf::string_type v32 = *(void **)(a1 + 144);
  if (v32)
  {

    *(void *)(a1 + 144) = 0LL;
  }

void sub_100408D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

__n128 sub_100408DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a2 = *(_OWORD *)a3;
  __int128 v3 = *(_OWORD *)(a3 + 16);
  __int128 v4 = *(_OWORD *)(a3 + 32);
  __int128 v5 = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  __n128 result = *(__n128 *)(a3 + 80);
  __int128 v7 = *(_OWORD *)(a3 + 96);
  __int128 v8 = *(_OWORD *)(a3 + 128);
  *(_OWORD *)(a2 + 112) = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(a2 + 128) = v8;
  *(__n128 *)(a2 + 8sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = result;
  *(_OWORD *)(a2 + 96) = v7;
  return result;
}

id *sub_100408DE0(uint64_t a1, uint64_t a2, char a3)
{
  v33[0] = (id)os_transaction_create("CLActivityRecorderDb::sanitizeAndStoreRecordUL");
  v33[1] = 0LL;
  if (*(double *)(a1 + 248) > 0.0
    && (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136LL))(a1, a1 + 224, a2))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 72LL))(a1, a1 + 224, a2);
    return sub_1001BA1BC(v33);
  }

  if ((a3 & 1) == 0) {
    sub_1003C0454(*(void *)(a1 + 80));
  }
  double v43 = 0.0;
  uint64_t v44 = 0LL;
  uint64_t v45 = 0LL;
  uint64_t v46 = 0LL;
  int v6 = (*(uint64_t (**)(uint64_t, _BYTE *))(*(void *)a1 + 104LL))(a1, v42);
  if (v6 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

  else
  {
    if (v6)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018376C8);
      }
      uint64_t v14 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Failed to insert record due to failure from reading the most recent entry.",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018376C8);
        }
        LOWORD(v34) = 0;
        uint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  17LL,  "Failed to insert record due to failure from reading the most recent entry.",  &v34,  2);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRec ordUL(const T &, BOOL) [T = VO2MaxOutput, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v15);
      }

      goto LABEL_43;
    }

    double v7 = *(double *)(a2 + 24);
    double v8 = v43;
    double v9 = v7 - v43;
    if (v7 - v43 < 0.0) {
      double v9 = -(v7 - v43);
    }
    if (v9 > 604800.0)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018376C8);
      }
      __int128 v10 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a2 + 24);
        *(_DWORD *)std::stringbuf::string_type buf = 134349312;
        double v39 = v43;
        __int16 v40 = 2050;
        uint64_t v41 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018376C8);
        }
        uint64_t v27 = *(void *)(a2 + 24);
        int v34 = 134349312;
        double v35 = v43;
        __int16 v36 = 2050;
        uint64_t v37 = v27;
        uint64_t v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  0LL,  "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf",  &v34,  22);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRec ordUL(const T &, BOOL) [T = VO2MaxOutput, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v28);
      }

      CLWriteStackshot("Potential CM database inconsistency, time jump", 0LL);
      double v7 = *(double *)(a2 + 24);
      double v8 = v43;
    }

    if (v7 < v8)
    {
      if (v8 - v7 < 10.0)
      {
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018376C8);
        }
        uint64_t v12 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
        {
          double v13 = *(double *)(a2 + 24);
          *(_DWORD *)std::stringbuf::string_type buf = 134217984;
          double v39 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018376C8);
          }
          double v29 = *(double *)(a2 + 24);
          int v34 = 134217984;
          double v35 = v29;
          uint64_t v30 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the recent past.  Deleting records after %f.",  COERCE_DOUBLE(&v34));
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreR ecordUL(const T &, BOOL) [T = VO2MaxOutput, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v30);
        }

        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 88LL))(a1, a2);
        goto LABEL_42;
      }

      double v16 = v7 - v8;
      double v17 = *(float *)(a1 + 136);
      if (qword_1019344B0 != -1)
      {
        double v32 = *(float *)(a1 + 136);
        dispatch_once(&qword_1019344B0, &stru_1018376C8);
        double v17 = v32;
      }

      double v18 = v16 - v17;
      std::string::size_type v19 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        double v39 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018376C8);
        }
        int v34 = 134217984;
        double v35 = v18;
        uint64_t v31 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Entry being recorded has a startTime in the substantial past.  Shift records by %f.",  COERCE_DOUBLE(&v34));
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLActivityRecorderDb<VO2MaxOutput, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRec ordUL(const T &, BOOL) [T = VO2MaxOutput, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]",  "%s\n",  v31);
      }

      (*(void (**)(uint64_t, double))(*(void *)a1 + 96LL))(a1, v18);
    }

    (*(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(*(void *)a1 + 144LL))(a1, v42, a1 + 224, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120LL))(a1, a2, 1LL);
  }

void sub_100409548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_100409574(uint64_t a1)
{
  return sub_100408644(a1 - 72);
}

void sub_10040957C(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

uint64_t sub_1004095A8(uint64_t *a1, char **a2)
{
  __int128 v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v48);
  if ((SHIBYTE(v49) & 0x80000000) == 0)
  {
    if (HIBYTE(v49)) {
      goto LABEL_3;
    }
LABEL_43:
    sub_10123899C(v4);
    __break(1u);
  }

  uint64_t v45 = v48[1];
  operator delete(v48[0]);
  if (!v45) {
    goto LABEL_43;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    a2[1] = *a2;
    sub_10000CE18((uint64_t)v48);
    int v6 = sub_10000CF44(&v49, (uint64_t)"SELECT * from ", 14LL);
    (*(void (**)(__int128 *__return_ptr, uint64_t *))(*a1 + 64))(&v52, a1);
    if ((SBYTE7(v53) & 0x80u) == 0) {
      double v7 = &v52;
    }
    else {
      double v7 = (__int128 *)v52;
    }
    if ((SBYTE7(v53) & 0x80u) == 0) {
      uint64_t v8 = BYTE7(v53);
    }
    else {
      uint64_t v8 = *((void *)&v52 + 1);
    }
    double v9 = sub_10000CF44(v6, (uint64_t)v7, v8);
    sub_10000CF44(v9, (uint64_t)" ORDER BY id ASC", 16LL);
    if (SBYTE7(v53) < 0) {
      operator delete((void *)v52);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str((std::stringbuf::string_type *)&v52, &v50);
    if ((SBYTE7(v53) & 0x80u) == 0) {
      uint64_t v11 = (char *)&v52;
    }
    else {
      uint64_t v11 = (char *)v52;
    }
    sub_1003C0D54(v10, v11, &v46);
    uint64_t v12 = v46;
    uint64_t v46 = 0LL;
    uint64_t v47 = v12;
    if (SBYTE7(v53) < 0) {
      operator delete((void *)v52);
    }
    sub_1003C0454(a1[10]);
    *((void *)&v53 + 1) = 0LL;
    *((void *)&v59 + 1) = 0LL;
    __int128 v60 = 0uLL;
    while (!sub_1001BA11C((uint64_t)a1, &v47, (uint64_t)&v52))
    {
      double v13 = a2[1];
      unint64_t v14 = (unint64_t)a2[2];
      if ((unint64_t)v13 >= v14)
      {
        unint64_t v22 = 0x8E38E38E38E38E39LL * ((v13 - *a2) >> 4);
        unint64_t v23 = v22 + 1;
        if (v22 + 1 > 0x1C71C71C71C71C7LL) {
          sub_100007008();
        }
        unint64_t v24 = 0x8E38E38E38E38E39LL * ((uint64_t)(v14 - (void)*a2) >> 4);
        if (2 * v24 > v23) {
          unint64_t v23 = 2 * v24;
        }
        if (v24 >= 0xE38E38E38E38E3LL) {
          unint64_t v25 = 0x1C71C71C71C71C7LL;
        }
        else {
          unint64_t v25 = v23;
        }
        if (v25) {
          __int128 v26 = (char *)sub_1002B4F00((uint64_t)(a2 + 2), v25);
        }
        else {
          __int128 v26 = 0LL;
        }
        uint64_t v27 = &v26[144 * v22];
        *(_OWORD *)uint64_t v27 = v52;
        __int128 v28 = v53;
        __int128 v29 = v54;
        __int128 v30 = v56;
        *((_OWORD *)v27 + 3) = v55;
        *((_OWORD *)v27 + 4) = v30;
        *((_OWORD *)v27 + 1) = v28;
        *((_OWORD *)v27 + 2) = v29;
        __int128 v31 = v57;
        __int128 v32 = v58;
        __int128 v33 = v60;
        *((_OWORD *)v27 + 7) = v59;
        *((_OWORD *)v27 + 8) = v33;
        *((_OWORD *)v27 + 5) = v31;
        *((_OWORD *)v27 + 6) = v32;
        double v35 = *a2;
        int v34 = a2[1];
        __int16 v36 = v27;
        if (v34 != *a2)
        {
          do
          {
            *((_OWORD *)v36 - 9) = *((_OWORD *)v34 - 9);
            __int128 v37 = *((_OWORD *)v34 - 8);
            __int128 v38 = *((_OWORD *)v34 - 7);
            __int128 v39 = *((_OWORD *)v34 - 5);
            *((_OWORD *)v36 - 6) = *((_OWORD *)v34 - 6);
            *((_OWORD *)v36 - 5) = v39;
            *((_OWORD *)v36 - 8) = v37;
            *((_OWORD *)v36 - 7) = v38;
            __int128 v40 = *((_OWORD *)v34 - 4);
            __int128 v41 = *((_OWORD *)v34 - 3);
            __int128 v42 = *((_OWORD *)v34 - 1);
            *((_OWORD *)v36 - 2) = *((_OWORD *)v34 - 2);
            *((_OWORD *)v36 - 1) = v42;
            *((_OWORD *)v36 - 4) = v40;
            *((_OWORD *)v36 - 3) = v41;
            v36 -= 144;
            v34 -= 144;
          }

          while (v34 != v35);
          int v34 = *a2;
        }

        __int128 v21 = v27 + 144;
        *a2 = v36;
        a2[1] = v27 + 144;
        a2[2] = &v26[144 * v25];
        if (v34) {
          operator delete(v34);
        }
      }

      else
      {
        *(_OWORD *)double v13 = v52;
        __int128 v15 = v53;
        __int128 v16 = v54;
        __int128 v17 = v56;
        *((_OWORD *)v13 + 3) = v55;
        *((_OWORD *)v13 + 4) = v17;
        *((_OWORD *)v13 + 1) = v15;
        *((_OWORD *)v13 + 2) = v16;
        __int128 v18 = v57;
        __int128 v19 = v58;
        __int128 v20 = v60;
        *((_OWORD *)v13 + 7) = v59;
        *((_OWORD *)v13 + 8) = v20;
        *((_OWORD *)v13 + 5) = v18;
        *((_OWORD *)v13 + 6) = v19;
        __int128 v21 = v13 + 144;
      }

      a2[1] = v21;
    }

    sub_1003C05BC(a1[10]);
    uint64_t v43 = v47;
    uint64_t v47 = 0LL;
    if (v43) {
      (*(void (**)(uint64_t))(*(void *)v43 + 8LL))(v43);
    }
    *(void **)((char *)v48
    uint64_t v49 = v44;
    std::streambuf::~streambuf(&v50);
    return std::ios::~ios(&v51);
  }

  return result;
}

void sub_100409940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  sub_1011F8850((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1004099B0(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v23);
  if ((SHIBYTE(v24) & 0x80000000) == 0)
  {
    if (HIBYTE(v24)) {
      goto LABEL_3;
    }
LABEL_29:
    __int128 v20 = (_Unwind_Exception *)sub_101238B08(v4);
    sub_1011F8850((uint64_t)v23);
    _Unwind_Resume(v20);
  }

  __int128 v19 = v23[1];
  operator delete(v23[0]);
  if (!v19) {
    goto LABEL_29;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120LL))(a1, a2, 1LL);
    sub_10000CE18((uint64_t)v23);
    int v6 = sub_10000CF44(&v24, (uint64_t)"DELETE FROM ", 12LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" WHERE startTime > ?", 20LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v25);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v21);
    uint64_t v12 = v21;
    uint64_t v21 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, *(double *)(a2 + 24)))
    {
      uint64_t v14 = a1[10];
      __int128 v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    uint64_t v16 = a1[10];
    else {
      uint64_t v17 = *(void *)(v16 + 88);
    }
    sub_1003C1EC0(v16, v17);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v23
    uint64_t v24 = v18;
    std::streambuf::~streambuf(&v25);
    return std::ios::~ios(&v26);
  }

  return result;
}

uint64_t sub_100409C10(void *a1, double a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v21);
  if ((SHIBYTE(v22) & 0x80000000) == 0)
  {
    if (HIBYTE(v22)) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v18 = (_Unwind_Exception *)sub_101238C74(v4);
    sub_1011F8850((uint64_t)v21);
    _Unwind_Resume(v18);
  }

  uint64_t v17 = v21[1];
  operator delete(v21[0]);
  if (!v17) {
    goto LABEL_26;
  }
LABEL_3:
  uint64_t result = sub_100D8A92C(a1 + 9);
  if ((_DWORD)result)
  {
    sub_10000CE18((uint64_t)v21);
    int v6 = sub_10000CF44(&v22, (uint64_t)"UPDATE ", 7LL);
    (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t size = __p.__r_.__value_.__s.__size_;
    }
    else {
      uint64_t size = __p.__r_.__value_.__l.__size_;
    }
    double v9 = sub_10000CF44(v6, (uint64_t)p_p, size);
    sub_10000CF44(v9, (uint64_t)" SET startTime = startTime + ?", 30LL);
    uint64_t v10 = a1[10];
    std::stringbuf::str(&__p, &v23);
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v11 = &__p;
    }
    else {
      uint64_t v11 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v10, (char *)v11, &v19);
    uint64_t v12 = v19;
    uint64_t v19 = 0LL;
    double v13 = (sqlite3_stmt *)sub_100019240(v12);
    if (sub_1003B7480(v13, 1, a2))
    {
      uint64_t v14 = a1[10];
      __int128 v15 = (sqlite3_stmt *)sub_100019240(v12);
      sub_1003BB2BC(v14, v15);
    }

    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
    }
    *(void **)((char *)v21
    uint64_t v22 = v16;
    std::streambuf::~streambuf(&v23);
    return std::ios::~ios(&v24);
  }

  return result;
}

uint64_t sub_100409E48(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64LL))(v22);
  if ((SHIBYTE(v23) & 0x80000000) == 0)
  {
    if (HIBYTE(v23)) {
      goto LABEL_3;
    }
LABEL_25:
    uint64_t v17 = (_Unwind_Exception *)sub_101238DE0(v4);
    uint64_t v18 = v20;
    uint64_t v20 = 0LL;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
    }
    sub_1011F8850((uint64_t)v22);
    _Unwind_Resume(v17);
  }

  uint64_t v16 = v22[1];
  operator delete(v22[0]);
  if (!v16) {
    goto LABEL_25;
  }
LABEL_3:
  sub_10000CE18((uint64_t)v22);
  __int128 v5 = sub_10000CF44(&v23, (uint64_t)"SELECT * FROM ", 14LL);
  (*(void (**)(std::stringbuf::string_type *__return_ptr, void *))(*a1 + 64LL))(&__p, a1);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t size = __p.__r_.__value_.__s.__size_;
  }
  else {
    uint64_t size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v8 = sub_10000CF44(v5, (uint64_t)p_p, size);
  sub_10000CF44(v8, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28LL);
  uint64_t v9 = a1[10];
  std::stringbuf::str(&__p, &v24);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v10 = &__p;
  }
  else {
    uint64_t v10 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(v9, (char *)v10, &v19);
  uint64_t v11 = v19;
  uint64_t v19 = 0LL;
  uint64_t v20 = v11;
  uint64_t v12 = sub_1001BA11C((uint64_t)a1, &v20, a2);
  uint64_t v13 = v20;
  uint64_t v20 = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  *(void **)((char *)v22
  uint64_t v23 = v14;
  std::streambuf::~streambuf(&v24);
  std::ios::~ios(&v25);
  return v12;
}

void sub_10040A070(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_10040A09C(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  __int128 v3 = (void **)a1[2];
  a1[5] = 0LL;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      __int128 v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 14LL;
  }

  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 28LL;
  }

  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    double v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void sub_10040A130(id a1)
{
  qword_101934518 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

int32x2_t sub_10040A15C(uint64_t a1, char a2)
{
  *(void *)a1 = &off_101837718;
  *(void *)(a1 + 8) = 0x1E00000000LL;
  *(void *)(a1 + 376) = 0x1E00000000LL;
  *(_DWORD *)(a1 + 744) = 0;
  *(_BYTE *)(a1 + 748) = 0;
  *(_OWORD *)(a1 + 752) = 0u;
  *(_OWORD *)(a1 + 768) = 0u;
  *(_OWORD *)(a1 + 784) = 0u;
  *(_OWORD *)(a1 + 796) = 0u;
  *(_DWORD *)(a1 + 812) = 998445679;
  int32x2_t result = vdup_n_s32(0x3B83126Fu);
  *(int32x2_t *)(a1 + 816) = result;
  *(_BYTE *)(a1 + 824) = 0;
  *(_DWORD *)(a1 + 844) = 0;
  *(void *)(a1 + 848) = 0LL;
  *(_BYTE *)(a1 + 856) = 0;
  *(_BYTE *)(a1 + 857) = a2;
  *(_WORD *)(a1 + 858) = 0;
  return result;
}

double sub_10040A1C4(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 784) = 0u;
  return result;
}

void sub_10040A1F4(uint64_t a1, unint64_t a2)
{
  *(_DWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 376) = 0;
  *(_WORD *)(a1 + 744) = 0;
  *(_BYTE *)(a1 + 747) = 0;
  *(_OWORD *)(a1 + 752) = 0u;
  *(_OWORD *)(a1 + 768) = 0u;
  if (a2 < 0x6B49D200)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837788);
    }
    unint64_t v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      double v39 = (float)((float)a2 * 0.000001);
      __int16 v40 = 2048;
      double v41 = 1800.0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CMGyroBiasEstimator::reset: warm start [%f < %f]",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837788);
      }
      int v26 = 134218240;
      double v27 = (float)((float)a2 * 0.000001);
      __int16 v28 = 2048;
      double v29 = 1800.0;
      LODWORD(v25) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CMGyroBiasEstimator::reset: warm start [%f < %f]",  COERCE_DOUBLE(&v26),  v25);
      std::stringbuf v24 = (uint8_t *)v23;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CMGyroBiasEstimator::reset(const uint64_t)", "%s\n", v23);
      if (v24 != buf) {
        free(v24);
      }
    }

    *(float32x2_t *)(a1 + 812) = vadd_f32(*(float32x2_t *)(a1 + 812), 0LL);
    *(float *)(a1 + 82sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(float *)(a1 + 820) + 0.0;
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837788);
    }
    __int128 v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "CMGyroBiasEstimator::reset: cold start",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837788);
      }
      LOWORD(v26) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CMGyroBiasEstimator::reset: cold start",  &v26,  2);
      uint64_t v22 = (uint8_t *)v21;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CMGyroBiasEstimator::reset(const uint64_t)", "%s\n", v21);
      if (v22 != buf) {
        free(v22);
      }
    }

    *(_OWORD *)(a1 + 80sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = xmmword_1012E85B0;
    *(int32x2_t *)(a1 + 816) = vdup_n_s32(0x3B83126Fu);
    *(_BYTE *)(a1 + 824) = 0;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101837788);
  }
  uint64_t v6 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    double v7 = *(float *)(a1 + 800);
    double v8 = *(float *)(a1 + 804);
    double v9 = *(float *)(a1 + 808);
    double v10 = *(float *)(a1 + 812);
    double v11 = *(float *)(a1 + 816);
    double v12 = *(float *)(a1 + 820);
    *(_DWORD *)std::stringbuf::string_type buf = 134219264;
    double v39 = v7;
    __int16 v40 = 2048;
    double v41 = v8;
    __int16 v42 = 2048;
    double v43 = v9;
    __int16 v44 = 2048;
    double v45 = v10;
    __int16 v46 = 2048;
    double v47 = v11;
    __int16 v48 = 2048;
    double v49 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "CMGyroBiasEstimator::reset: dbias.x,%.2e,.y,%.2e,.z,%.2e,P.x,%.2e,.y,%.2e,.z,%.2e",  buf,  0x3Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837788);
    }
    double v13 = *(float *)(a1 + 800);
    double v14 = *(float *)(a1 + 804);
    double v15 = *(float *)(a1 + 808);
    double v16 = *(float *)(a1 + 812);
    double v17 = *(float *)(a1 + 816);
    double v18 = *(float *)(a1 + 820);
    int v26 = 134219264;
    double v27 = v13;
    __int16 v28 = 2048;
    double v29 = v14;
    __int16 v30 = 2048;
    double v31 = v15;
    __int16 v32 = 2048;
    double v33 = v16;
    __int16 v34 = 2048;
    double v35 = v17;
    __int16 v36 = 2048;
    double v37 = v18;
    LODWORD(v25) = 62;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CMGyroBiasEstimator::reset: dbias.x,%.2e,.y,%.2e,.z,%.2e,P.x,%.2e,.y,%.2e,.z,%.2e",  COERCE_DOUBLE(&v26),  v25);
    uint64_t v20 = (uint8_t *)v19;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CMGyroBiasEstimator::reset(const uint64_t)", "%s\n", v19);
    if (v20 != buf) {
      free(v20);
    }
  }

uint64_t sub_10040A77C(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 858) && *(_BYTE *)(a1 + 859)) {
    return 0LL;
  }
  sub_10040B364((unsigned __int16 *)(a1 + 376), a2);
  return 1LL;
}

uint64_t sub_10040A7B0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  if (*(_BYTE *)(a1 + 858) && *(_BYTE *)(a1 + 859)) {
    return 0LL;
  }
  if (*(_BYTE *)(a1 + 746))
  {
    if (*(_BYTE *)(a1 + 824))
    {
      uint64_t result = 0LL;
      *(_BYTE *)(a1 + 744) = 1;
      return result;
    }

    return 0LL;
  }

  sub_10040B364((unsigned __int16 *)(a1 + 8), a2);
  unint64_t v6 = *(void *)(a1 + 752);
  unint64_t v7 = *a3;
  v8.i32[0] = 833342583;
  if (v6)
  {
    BOOL v9 = v7 >= v6;
    unint64_t v10 = v7 - v6;
    if (v10 != 0 && v9) {
      *(float *)v8.i32 = (float)(int)(float)((float)((float)((float)v10 * 0.000001) / 0.02) + 0.5) * 0.000000005;
    }
  }

  *(void *)(a1 + 752) = v7;
  *(float32x2_t *)(a1 + 812) = vadd_f32((float32x2_t)vdup_lane_s32(v8, 0), *(float32x2_t *)(a1 + 812));
  *(float *)(a1 + 82sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(float *)v8.i32 + *(float *)(a1 + 820);
  if (!*(_BYTE *)(a1 + 824)) {
    return 0LL;
  }
  *(_BYTE *)(a1 + 744) = 1;
  if (*(_DWORD *)(a1 + 12) != *(unsigned __int16 *)(a1 + 10)
    || *(_BYTE *)(a1 + 857) && *(_DWORD *)(a1 + 380) != *(unsigned __int16 *)(a1 + 378))
  {
    return 0LL;
  }

  uint64_t result = sub_10040A8D4(a1);
  if ((_DWORD)result)
  {
    sub_10040ACEC((float32x2_t *)a1);
    return 1LL;
  }

  return result;
}

uint64_t sub_10040A8D4(uint64_t a1)
{
  uint64_t v2 = (unsigned __int16 *)(a1 + 8);
  float v3 = sub_10040B3D0((unsigned __int16 *)(a1 + 8), 0LL, *(unsigned __int16 *)(a1 + 10));
  float v5 = v4;
  float v7 = v6;
  sub_10040B820(v2, 0LL, *(unsigned __int16 *)(a1 + 10));
  float v9 = v8;
  *(float *)double v49 = v8;
  v49[1] = v10;
  void v49[2] = v11;
  sub_10040B820((unsigned __int16 *)(a1 + 376), 0LL, *(unsigned __int16 *)(a1 + 378));
  v48[0] = v12;
  v48[1] = v13;
  v48[2] = v14;
  float v15 = v3 - *(float *)(a1 + 832);
  float v16 = v5 - *(float *)(a1 + 836);
  float v17 = v7 - *(float *)(a1 + 840);
  float v46 = v15;
  *(float *)double v47 = v16;
  *(float *)&v47[1] = v17;
  float v18 = v16 - *(float *)(a1 + 804);
  float v19 = *(float *)(a1 + 808);
  v45[0] = v15 - *(float *)(a1 + 800);
  v45[1] = v18;
  v45[2] = v17 - v19;
  float v20 = -v9;
  if (v9 > 0.0) {
    float v20 = v9;
  }
  for (uint64_t i = 1LL; i != 3; ++i)
  {
    float v22 = *(float *)&v49[i];
    if (v22 <= 0.0) {
      float v22 = -v22;
    }
    if (v22 > v20) {
      float v20 = v22;
    }
  }

  if (v20 >= 0.0000025)
  {
    BOOL v25 = 0;
    float v26 = flt_1012E8568[*(_BYTE *)(a1 + 856) == 0];
    float v27 = 0.0001;
  }

  else
  {
    uint64_t v23 = 0LL;
    if (v15 <= 0.0) {
      float v15 = -v15;
    }
    do
    {
      float v24 = *(float *)&v47[v23];
      if (v24 <= 0.0) {
        float v24 = -v24;
      }
      if (v24 > v15) {
        float v15 = v24;
      }
      ++v23;
    }

    while (v23 != 2);
    BOOL v25 = v15 < 0.03;
    float v26 = flt_1012E8568[*(_BYTE *)(a1 + 856) == 0];
    float v27 = flt_1012E8570[v15 < 0.03];
  }

  char v28 = 0;
  for (unint64_t j = 0LL; j != 3; ++j)
  {
    if (*(_BYTE *)(a1 + 857))
    {
      float v30 = sub_1002B8AF0((uint64_t)&v46, j);
      if (v30 <= 0.0) {
        float v30 = -v30;
      }
      if (v30 < v26 && sub_1002B8AF0((uint64_t)v49, j) < 0.0000025)
      {
        float v31 = (float)((float)(sub_1002B8AF0((uint64_t)v49, j) + -0.00000048739) * 8.9291) + 0.00000076154;
        if (v31 >= 0.00000076154) {
          float v32 = v31;
        }
        else {
          float v32 = 0.00000076154;
        }
        float v33 = (float)((float)(sub_1002B8AF0((uint64_t)v48, j) + -0.0000005625) * 15.508) + 0.00000076154;
        if (v33 < 0.00000076154) {
          float v33 = 0.00000076154;
        }
        if (v32 <= v33) {
          float v34 = v33;
        }
        else {
          float v34 = v32;
        }
        float v35 = (float)((float)((float)(v34 * 0.5) / 0.00000076154) * 30.0) * 0.02;
        uint64_t v36 = *(void *)(a1 + 752);
        else {
          float v37 = 0.02 / (float)(v35 + 0.02);
        }
        goto LABEL_43;
      }
    }

    else
    {
      if (v25) {
        goto LABEL_36;
      }
      float v39 = sub_1002B8AF0((uint64_t)&v46, j);
      if (v39 <= 0.0) {
        float v39 = -v39;
      }
      if (v39 < v26 && sub_1002B8AF0((uint64_t)v49, j) < 0.00000125)
      {
LABEL_36:
        float v38 = *(float *)sub_1002BA24C(a1 + 812, j);
        float v37 = v38 / (float)(v27 + *(float *)sub_1002BA24C(a1 + 812, j));
        float v34 = 0.0;
LABEL_43:
        float v40 = sub_1002B8AF0((uint64_t)v45, j);
        double v41 = (float *)sub_1002BA24C(a1 + 800, j);
        float *v41 = *v41 + (float)(v37 * v40);
        *(float *)sub_1002BA24C(a1 + 812, j) = v42;
        uint64_t v43 = *(void *)(a1 + 752);
        *(void *)sub_10040B13C(a1 + 760, j) = v43;
        char v28 = 1;
        continue;
      }
    }
  }

  return v28 & 1;
}

void sub_10040ACEC(float32x2_t *a1)
{
  if (!a1[93].i8[1])
  {
    uint64_t v2 = 0LL;
    float v3 = a1[101].f32[1];
    if (v3 <= 0.0) {
      float v3 = -v3;
    }
    do
    {
      float v4 = a1[102].f32[v2];
      if (v4 <= 0.0) {
        float v4 = -v4;
      }
      if (v4 > v3) {
        float v3 = v4;
      }
      ++v2;
    }

    while (v2 != 2);
    a1[93].i8[1] = v3 < 0.000007;
    if (v3 < 0.000007)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837788);
      }
      float v5 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CMGyroBiasEstimator::feedGyro: converged!",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101837788);
        }
        v10[0] = 0;
        float v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CMGyroBiasEstimator::feedGyro: converged!",  v10,  2);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CMGyroBiasEstimator::notifyClients(uint64_t)", "%s\n", v9);
      }
    }
  }

  __int8 v6 = a1[103].i8[1];
  if (v6) {
    __int8 v6 = a1[93].i8[1] == 0;
  }
  a1[93].i8[3] = v6;
  float v7 = (void (*)(uint8_t *, __int32 *, float32x2_t *, void))a1[98];
  if (v7)
  {
    float v8 = a1[101].f32[0] + a1[105].f32[0];
    *(float32x2_t *)std::stringbuf::string_type buf = vadd_f32(a1[100], a1[104]);
    float v12 = v8;
    v7(buf, (__int32 *)&a1[101] + 1, a1 + 93, *(void *)&a1[99]);
  }

void sub_10040AF2C(float32x2_t *a1, float32x2_t *a2, __int8 a3, float32_t a4)
{
  a1[103].i8[0] = 1;
  a1[103].i8[1] = a3;
  a1[103].f32[1] = a4;
  a1[104] = *a2;
  a1[105].i32[0] = a2[1].i32[0];
  sub_10040ACEC(a1);
}

double sub_10040AF58(uint64_t a1)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101837788);
  }
  uint64_t v2 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "CMGyroBiasEstimator: biasFitReset", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837788);
    }
    v5[0] = 0;
    float v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "CMGyroBiasEstimator: biasFitReset",  v5,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CMGyroBiasEstimator::biasFitReset()", "%s\n", v4);
  }

  double result = 0.0;
  *(_OWORD *)(a1 + 80sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = xmmword_1012E85B0;
  *(int32x2_t *)(a1 + 816) = vdup_n_s32(0x3B83126Fu);
  *(_BYTE *)(a1 + 745) = 0;
  return result;
}

float sub_10040B108(float *a1, float *a2)
{
  a1[200] = a1[200] - *a2;
  a1[201] = a1[201] - a2[1];
  float result = a1[202] - a2[2];
  a1[202] = result;
  return result;
}

uint64_t sub_10040B13C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837788);
    }
    float v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 2048;
      uint64_t v15 = 3LL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMVector.h, line 277 ,invalid index %zu >= %zu.",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837788);
      }
      int v8 = 134218240;
      unint64_t v9 = a2;
      __int16 v10 = 2048;
      uint64_t v11 = 3LL;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMVector.h, line 277 ,invalid index %zu >= %zu.",  (size_t)&v8,  22);
      float v7 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "T &CMVector<unsigned long long, 3>::operator[](const size_t) [T = unsigned long long, N = 3]",  "%s\n",  v6);
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  return a1 + 8 * a2;
}

uint64_t sub_10040B314(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)(result + 784) = a2;
  *(void *)(result + 792) = a3;
  return result;
}

uint64_t sub_10040B320(uint64_t result, char a2)
{
  *(_BYTE *)(result + 748) = a2;
  return result;
}

void *sub_10040B328(void *result)
{
  void *result = &off_101837718;
  return result;
}

void sub_10040B338(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

unsigned __int16 *sub_10040B364(unsigned __int16 *result, uint64_t a2)
{
  unint64_t v2 = *((unsigned int *)result + 1);
  unint64_t v3 = *result + (unint64_t)result[1];
  if (v3 < v2) {
    unint64_t v2 = 0LL;
  }
  float v4 = &result[6 * (v3 - v2)];
  int v5 = *(_DWORD *)(a2 + 8);
  *((void *)v4 + 1) = *(void *)a2;
  *((_DWORD *)v4 + 4) = v5;
  unsigned int v6 = result[1];
  unint64_t v7 = *((unsigned int *)result + 1);
  if (v7 <= v6)
  {
    unint64_t v8 = *result + 1LL;
    if (v8 < v7) {
      LOWORD(v7) = 0;
    }
    void *result = v8 - v7;
  }

  else
  {
    result[1] = v6 + 1;
  }

  return result;
}

float sub_10040B3D0(unsigned __int16 *a1, unint64_t a2, unint64_t a3)
{
  if (!a1[1])
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837788);
    }
    unint64_t v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMVectorBuffer.h, line 93,mean() on empty buffer.",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837788);
      }
      v10[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMVectorBuffer.h, line 93,mean() on empty buffer.",  v10,  2);
      unint64_t v9 = (uint8_t *)v8;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Element CMVectorBufferBase<float, 3>::mean(size_t, size_t) const [T = float, N = 3]",  "%s\n",  v8);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  return sub_10040B59C(a1, a2, a3) / (float)(a3 - a2);
}

float sub_10040B59C(unsigned __int16 *a1, unint64_t a2, unint64_t a3)
{
  float v3 = 0.0;
  float v4 = 0.0;
  float v5 = 0.0;
  if (a2 < a3)
  {
    unint64_t v7 = a2;
    do
    {
      unint64_t v9 = (float *)sub_10040B624(a1, v7);
      float v3 = v3 + *v9;
      float v4 = v4 + v9[1];
      float v5 = v5 + v9[2];
      ++v7;
    }

    while (a3 != v7);
  }

  return v3;
}

uint64_t sub_10040B624(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837788);
    }
    unint64_t v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      unint64_t v16 = a2;
      __int16 v17 = 1024;
      int v18 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837788);
      }
      int v9 = *((_DWORD *)a1 + 1);
      int v11 = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 1024;
      int v14 = v9;
      __int16 v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQ ueue.h, line 233,i,%zu,capacity,%u.",  (size_t)&v11,  18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const T &CMQueue<CMVector<float, 3>>::operator[](const size_t) const [T = CMVector<float, 3>]",  "%s\n",  v10);
    }
  }

  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0LL;
  }
  return (uint64_t)&a1[6 * (v4 - v5) + 4];
}

float32x2_t *sub_10040B820(unsigned __int16 *a1, unint64_t a2, unint64_t a3)
{
  if (!a1[1])
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837788);
    }
    int v18 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_FAULT,  "Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMVectorBuffer.h, line 210,variance() on empty buffer.",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837788);
      }
      v23[0] = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMVectorBuffer.h, line 210,variance() on empty buffer.",  v23,  2);
      float v20 = (uint8_t *)v19;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const CMVector<T, N> CMVectorBufferBase<float, 3>::variance(size_t, size_t) const [T = float, N = 3]",  "%s\n",  v19);
      if (v20 != buf) {
        free(v20);
      }
    }
  }

  float v22 = 1.0 / (float)(a3 - a2);
  float result = (float32x2_t *)sub_10040B624(a1, a2);
  float v8 = v22;
  float32x2_t v9 = *result;
  float v10 = result[1].f32[0];
  float32x2_t v11 = vmul_n_f32(*result, v22);
  float v12 = v22 * v10;
  unint64_t v13 = a2 + 1;
  if (v13 < a3)
  {
    unint64_t v14 = v13;
    do
    {
      float result = (float32x2_t *)sub_10040B624(a1, v14);
      float v8 = v22;
      float32x2_t v11 = vadd_f32(v11, vmul_n_f32(*result, v22));
      float v12 = v12 + (float)(v22 * result[1].f32[0]);
      ++v14;
    }

    while (a3 != v14);
  }

  float32x2_t v15 = vsub_f32(v9, v11);
  *(float32x2_t *)&__int128 v7 = vmul_n_f32(vmul_f32(v15, v15), v8);
  float v16 = v8 * (float)((float)(v10 - v12) * (float)(v10 - v12));
  if (v13 < a3)
  {
    do
    {
      __int128 v21 = v7;
      float result = (float32x2_t *)sub_10040B624(a1, v13);
      *((void *)&v7 + 1) = *((void *)&v21 + 1);
      float32x2_t v17 = vsub_f32(*result, v11);
      *(float32x2_t *)&__int128 v7 = vadd_f32(*(float32x2_t *)&v21, vmul_n_f32(vmul_f32(v17, v17), v22));
      float v16 = v16 + (float)(v22 * (float)((float)(result[1].f32[0] - v12) * (float)(result[1].f32[0] - v12)));
      ++v13;
    }

    while (a3 != v13);
  }

  return result;
}

uint64_t sub_10040BAC0()
{
  if (qword_101995738 != -1) {
    dispatch_once(&qword_101995738, &stru_1018377A8);
  }
  return qword_1019A0FF8;
}

void sub_10040BB00(id a1)
{
  uint64_t v1 = (int64x2_t *)operator new(0x118uLL);
  sub_10040BB44(v1);
  qword_1019A0FF8 = (uint64_t)v1;
}

void sub_10040BB30(_Unwind_Exception *a1)
{
}

int64x2_t *sub_10040BB44(int64x2_t *a1)
{
  uint64_t v5 = 0x500000000LL;
  __int16 v6 = 1;
  if (SHIBYTE(v4) < 0)
  {
    sub_1010DD48C(&__p, v3[0], (unint64_t)v3[1]);
  }

  else
  {
    __int128 __p = *(_OWORD *)v3;
    uint64_t v8 = v4;
  }

  uint64_t v9 = 0LL;
  sub_10040EA5C(a1, (uint64_t)&v5);
  if (SHIBYTE(v8) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v4) < 0) {
    operator delete(v3[0]);
  }
  a1->i64[0] = (uint64_t)off_1018377D8;
  sub_1002E4C3C(&a1[16].u64[1], "CLTimeZoneDatabase", 0LL, 1LL);
  (*(void (**)(int64x2_t *))(a1->i64[0] + 24))(a1);
  return a1;
}

void sub_10040BC24( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10040BC7C(void *a1)
{
  *a1 = off_1018377D8;
  sub_1002E4CB0(a1 + 33);
  return sub_10040EB80(a1);
}

void sub_10040BCB0(void *a1)
{
  *a1 = off_1018377D8;
  sub_1002E4CB0(a1 + 33);
  unint64_t v2 = sub_10040EB80(a1);
  operator delete(v2);
}

uint64_t sub_10040BCE8(uint64_t a1)
{
  unint64_t v2 = sub_10000CF44(&v21, (uint64_t)"SELECT ", 7LL);
  size_t v3 = strlen("ROWID");
  uint64_t v4 = sub_10000CF44(v2, (uint64_t)"ROWID", v3);
  uint64_t v5 = sub_10000CF44(v4, (uint64_t)", ", 2LL);
  __int16 v6 = sub_10000CF44(v5, (uint64_t)"Latitude", 8LL);
  __int128 v7 = sub_10000CF44(v6, (uint64_t)", ", 2LL);
  uint64_t v8 = sub_10000CF44(v7, (uint64_t)"Longitude", 9LL);
  uint64_t v9 = sub_10000CF44(v8, (uint64_t)" FROM ", 6LL);
  size_t v10 = strlen("Names");
  float32x2_t v11 = sub_10000CF44(v9, (uint64_t)"Names", v10);
  float v12 = sub_10000CF44(v11, (uint64_t)" WHERE ", 7LL);
  size_t v13 = strlen("ZoneName");
  unint64_t v14 = sub_10000CF44(v12, (uint64_t)"ZoneName", v13);
  sub_10000CF44(v14, (uint64_t)"=?", 2LL);
  std::stringbuf::str(&__p, &v22);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  *(void *)(a1 + 176) = sub_1003BF158(a1 + 8, (char *)p_p);
  *(void *)(a1 + 184) = v16;
  memset(&__p, 0, sizeof(__p));
  std::string::operator=(&v22.__str_, &__p);
  sub_10023BE94((uint64_t)&v22);
  *(void *)((char *)v20
  uint64_t v21 = v17;
  std::streambuf::~streambuf(&v22);
  return std::ios::~ios(&v23);
}

void sub_10040BF08( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_10040BF3C(uint64_t a1, uint64_t a2, std::string *a3, double *a4)
{
  uint64_t v8 = a1 + 264;
  uint64_t v67 = a1 + 264;
  (*(void (**)(uint64_t))(*(void *)(a1 + 264) + 16LL))(a1 + 264);
  __int16 v68 = 256;
  __int128 v64 = 0LL;
  __int128 v65 = 0LL;
  uint64_t v66 = 0LL;
  uint64_t v9 = (sqlite3_int64 *)(a2 + 4);
  size_t v10 = (double *)(a2 + 12);
  *a4 = 0.0;
  if ((sub_10040EC40(a1, (double *)(a2 + 4), (double *)(a2 + 12), (sqlite3_int64 **)&v64) & 1) == 0)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837810);
    }
    float32x2_t v15 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      sqlite3_int64 v16 = *v9;
      double v17 = *v10;
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      sqlite3_int64 v78 = v16;
      __int16 v79 = 2048;
      double v80 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_FAULT,  "Couldn't get time zone for point <%+.8f,%+.8f>",  buf,  0x16u);
    }

    if (!sub_1002921D0(115, 0)) {
      goto LABEL_60;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837810);
    }
    sqlite3_int64 v18 = *v9;
    double v19 = *v10;
    int v69 = 134218240;
    sqlite3_int64 v70 = v18;
    __int16 v71 = 2048;
    double v72 = v19;
    LODWORD(v57) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Couldn't get time zone for point <%+.8f,%+.8f>",  COERCE_DOUBLE(&v69),  v57);
    uint64_t v21 = (uint8_t *)v20;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLTimeZoneDatabase::getTimeZoneAndDistance(const CLDaemonLocation &, std::string &, double &)",  "%s\n",  v20);
    goto LABEL_73;
  }

  if (v64 != v65)
  {
    if ((unint64_t)(v65 - (_BYTE *)v64) >= 0x11)
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837810);
      }
      float32x2_t v11 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        sqlite3_int64 v12 = *v9;
        double v13 = *v10;
        *(_DWORD *)std::stringbuf::string_type buf = 134218240;
        sqlite3_int64 v78 = v12;
        __int16 v79 = 2048;
        double v80 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning Point <%+.8f,%+.8f> in multiple time zone polygons",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101837810);
        }
        sqlite3_int64 v47 = *v9;
        double v48 = *v10;
        int v69 = 134218240;
        sqlite3_int64 v70 = v47;
        __int16 v71 = 2048;
        double v72 = v48;
        LODWORD(v57) = 22;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Point <%+.8f,%+.8f> in multiple time zone polygons",  COERCE_DOUBLE(&v69),  v57);
        std::stringbuf v50 = (uint8_t *)v49;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLTimeZoneDatabase::getTimeZoneAndDistance(const CLDaemonLocation &, std::string &, double &)",  "%s\n",  v49);
        if (v50 != buf) {
          free(v50);
        }
      }
    }

    uint64_t v14 = *((void *)v64 + 1);
    double v63 = *(double *)v64;
    *(void *)a4 = v14;
    goto LABEL_53;
  }

  std::stringbuf::string_type __p = 0LL;
  __int128 v61 = 0LL;
  uint64_t v62 = 0LL;
  double v22 = *(double *)(a2 + 20);
  if (v22 > 20000.0) {
    double v22 = 20000.0;
  }
  double v59 = v22;
  buf[0] = 1;
  uint64_t v23 = sub_10040EC70(a1, (double *)(a2 + 4), (double *)(a2 + 12), &v59, (sqlite3_int64 **)&__p, buf);
  if (!(_DWORD)v23 || (float v24 = (double *)__p, v61 == __p))
  {
    sub_10040CAC4(v23, a2, (uint64_t)a3, a4);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837810);
    }
    float v37 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sqlite3_int64 v38 = *v9;
      double v39 = *v10;
      if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        float v40 = a3;
      }
      else {
        float v40 = (std::string *)a3->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      sqlite3_int64 v78 = v38;
      __int16 v79 = 2048;
      double v80 = v39;
      __int16 v81 = 2080;
      uint64_t v82 = (uint64_t)v40;
      _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "Point <%+.8f,%+.8f> not in any time zone polygon; default time zone is %s, but we're not using it",
        buf,
        0x20u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_49;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837810);
    }
    sqlite3_int64 v51 = *v9;
    double v52 = *v10;
    if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      __int128 v53 = a3;
    }
    else {
      __int128 v53 = (std::string *)a3->__r_.__value_.__r.__words[0];
    }
    int v69 = 134218498;
    sqlite3_int64 v70 = v51;
    __int16 v71 = 2048;
    double v72 = v52;
    __int16 v73 = 2080;
    uint64_t v74 = (uint64_t)v53;
    LODWORD(v57) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Point <%+.8f,%+.8f> not in any time zone polygon; default time zone is %s, but we're not using it",
      COERCE_DOUBLE(&v69),
      v57,
      v58);
    uint64_t v36 = (uint8_t *)v54;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLTimeZoneDatabase::getTimeZoneAndDistance(const CLDaemonLocation &, std::string &, double &)",  "%s\n",  v54);
    goto LABEL_85;
  }

  sqlite3_int64 v25 = *(void *)__p;
  double v63 = *(double *)__p;
  double v26 = 1.79769313e308;
  do
  {
    double v27 = v24[1];
    if (v27 < v26)
    {
      sqlite3_int64 v25 = *(void *)v24;
      double v63 = *v24;
      double v26 = v27;
    }

    v24 += 2;
  }

  while (v24 != v61);
  if (v26 > 1000.0)
  {
    sub_10040CAC4(v23, a2, (uint64_t)a3, a4);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837810);
    }
    char v28 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      sqlite3_int64 v29 = *v9;
      double v30 = *v10;
      if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        float v31 = a3;
      }
      else {
        float v31 = (std::string *)a3->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 134218754;
      sqlite3_int64 v78 = v29;
      __int16 v79 = 2048;
      double v80 = v30;
      __int16 v81 = 2048;
      uint64_t v82 = *(void *)&v26;
      __int16 v83 = 2080;
      v84 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "Point <%+.8f,%+.8f> not in any time zone polygon; closest polygon is %f meters away; default time zone is %s, bu"
        "t we're not using it",
        buf,
        0x2Au);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_49;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837810);
    }
    sqlite3_int64 v32 = *v9;
    double v33 = *v10;
    if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      float v34 = a3;
    }
    else {
      float v34 = (std::string *)a3->__r_.__value_.__r.__words[0];
    }
    int v69 = 134218754;
    sqlite3_int64 v70 = v32;
    __int16 v71 = 2048;
    double v72 = v33;
    __int16 v73 = 2048;
    uint64_t v74 = *(void *)&v26;
    __int16 v75 = 2080;
    uint64_t v76 = v34;
    LODWORD(v57) = 42;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Point <%+.8f,%+.8f> not in any time zone polygon; closest polygon is %f meters away; default time zone is %s, but "
      "we're not using it",
      COERCE_DOUBLE(&v69),
      v57,
      *(double *)&v58,
      *(const char **)&v59);
    uint64_t v36 = (uint8_t *)v35;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLTimeZoneDatabase::getTimeZoneAndDistance(const CLDaemonLocation &, std::string &, double &)",  "%s\n",  v35);
LABEL_85:
    if (v36 != buf) {
      free(v36);
    }
LABEL_49:
    char v41 = 0;
    *a4 = 0.0;
    goto LABEL_50;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101837810);
  }
  double v45 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134218496;
    sqlite3_int64 v78 = v25;
    __int16 v79 = 2048;
    double v80 = v26;
    __int16 v81 = 2048;
    uint64_t v82 = ((char *)v61 - (_BYTE *)__p) >> 4;
    _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "Not in any polygons; falling back to closest nearby time zone ID %lld (distance %f, %ld possibilities)",
      buf,
      0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837810);
    }
    int v69 = 134218496;
    sqlite3_int64 v70 = v25;
    __int16 v71 = 2048;
    double v72 = v26;
    __int16 v73 = 2048;
    uint64_t v74 = ((char *)v61 - (_BYTE *)__p) >> 4;
    LODWORD(v57) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Not in any polygons; falling back to closest nearby time zone ID %lld (distance %f, %ld possibilities)",
      &v69,
      v57,
      v58);
    __int128 v56 = (uint8_t *)v55;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLTimeZoneDatabase::getTimeZoneAndDistance(const CLDaemonLocation &, std::string &, double &)",  "%s\n",  v55);
    if (v56 != buf) {
      free(v56);
    }
  }

  char v41 = 1;
LABEL_50:
  if (__p)
  {
    __int128 v61 = (double *)__p;
    operator delete(__p);
  }

  if ((v41 & 1) == 0) {
    goto LABEL_60;
  }
LABEL_53:
  if ((sub_100410154(a1, (sqlite3_int64 *)&v63, a3) & 1) != 0)
  {
    uint64_t v42 = 1LL;
    goto LABEL_61;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101837810);
  }
  uint64_t v43 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    sqlite3_int64 v78 = *(void *)&v63;
    _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_FAULT,  "Could not get time zone name for zone ID %{public}lld",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837810);
    }
    int v69 = 134349056;
    sqlite3_int64 v70 = *(void *)&v63;
    LODWORD(v57) = 12;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Could not get time zone name for zone ID %{public}lld",  &v69,  *(void *)&v57);
    uint64_t v21 = (uint8_t *)v46;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLTimeZoneDatabase::getTimeZoneAndDistance(const CLDaemonLocation &, std::string &, double &)",  "%s\n",  v46);
LABEL_73:
    if (v21 != buf) {
      free(v21);
    }
  }

void sub_10040CA58( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, char a20)
{
  if (__p) {
    operator delete(__p);
  }
  if (a17) {
    operator delete(a17);
  }
  sub_1011C52D0((uint64_t)&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_10040CAC4(uint64_t a1, uint64_t a2, uint64_t a3, double *a4)
{
  double v7 = *(double *)(a2 + 12);
  sub_10000CE18((uint64_t)v17);
  uint64_t v8 = sub_10000CF44(&v18, (uint64_t)"Etc/GMT", 7LL);
  int v9 = vcvtmd_s64_f64((v7 + 7.5) / 15.0);
  if (v9 >= 1) {
    size_t v10 = "-";
  }
  else {
    size_t v10 = "+";
  }
  float32x2_t v11 = sub_10000CF44(v8, (uint64_t)v10, 1LL);
  if (v9 >= 0) {
    uint64_t v12 = v9;
  }
  else {
    uint64_t v12 = -v9;
  }
  std::ostream::operator<<(v11, v12);
  std::stringbuf::str(&v16, &v19);
  *(std::stringbuf::string_type *)a3 = v16;
  double v13 = *(double *)(a2 + 12) + 7.5 - floor((*(double *)(a2 + 12) + 7.5) / 15.0) * 15.0;
  if (v13 > 15.0 - v13) {
    double v13 = 15.0 - v13;
  }
  *a4 = v13;
  *(void *)((char *)v17
  uint64_t v18 = v14;
  std::streambuf::~streambuf(&v19);
  std::ios::~ios(&v20);
  return 1LL;
}

void sub_10040CC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_10040CC44(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_10040CD54()
{
  uint64_t result = sub_1004F97F4();
  if ((result & 0x20) != 0)
  {
    uint64_t v1 = operator new(0x28uLL);
    uint64_t result = sub_10040CDE4((uint64_t)v1);
    qword_1019A1000 = (uint64_t)v1;
  }

  return result;
}

void sub_10040CD8C(_Unwind_Exception *a1)
{
}

uint64_t sub_10040CDA0()
{
  if (qword_101995740 != -1) {
    dispatch_once(&qword_101995740, &stru_101837830);
  }
  return qword_1019A1000;
}

uint64_t sub_10040CDE4(uint64_t a1)
{
  unint64_t v2 = (void *)sub_100506ACC(a1, 8);
  *unint64_t v2 = off_101837860;
  size_t v3 = (unsigned __int8 *)v2 + 36;
  *(_BYTE *)(a1 + 36) = sub_1004FCBEC();
  unsigned __int8 v6 = 1;
  sub_1012049AC((unsigned __int8 *)(a1 + 37), "EnableVisualLocalization", &v6, 0);
  sub_1012049AC(v5, "AlwaysOnDeviceMotion10", v3, 0);
  *(_BYTE *)(a1 + 36) = v5[1];
  sub_100506B30((uint64_t *)a1);
  return a1;
}

void sub_10040CE74(_Unwind_Exception *a1)
{
}

void sub_10040CE94(void *a1)
{
  uint64_t v1 = sub_100506AE4(a1);
  operator delete(v1);
}

BOOL sub_10040CEA8(uint64_t a1)
{
  return (sub_1004F97F4() & 0x20) != 0 && *(_BYTE *)(a1 + 36) != 0;
}

BOOL sub_10040CEE0(uint64_t a1)
{
  return (sub_1004F97F4() & 0x20) != 0 && *(_BYTE *)(a1 + 38) != 0;
}

unint64_t sub_10040CF18()
{
  return ((unint64_t)sub_1004F97F4() >> 5) & 1;
}

uint64_t sub_10040D660(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0LL;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        String = (void *)PBReaderReadString(a2);

        *(void *)(a1 + 56) = String;
        continue;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0LL;
        *(_WORD *)(a1 + 72) |= 8u;
        while (2)
        {
          uint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v20 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19;
            v17 |= (unint64_t)(v20 & 0x7F) << v15;
            if (v20 < 0)
            {
              v15 += 7;
              BOOL v10 = v16++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_82;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_82:
        uint64_t v56 = 32LL;
        goto LABEL_103;
      case 3u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v17 = 0LL;
        *(_WORD *)(a1 + 72) |= 0x10u;
        while (2)
        {
          uint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v25 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24;
            v17 |= (unint64_t)(v25 & 0x7F) << v21;
            if (v25 < 0)
            {
              v21 += 7;
              BOOL v10 = v22++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_86;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_86:
        uint64_t v56 = 36LL;
        goto LABEL_103;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v17 = 0LL;
        *(_WORD *)(a1 + 72) |= 0x100u;
        while (2)
        {
          uint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v29 = v28 + 1;
          if (v28 == -1 || v29 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v30 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29;
            v17 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              BOOL v10 = v27++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_90;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_90:
        uint64_t v56 = 64LL;
        goto LABEL_103;
      case 5u:
        *(_WORD *)(a1 + 72) |= 1u;
        unint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v31 <= 0xFFFFFFFFFFFFFFF7LL && v31 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v32 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v32 = 0LL;
        }

        uint64_t v57 = 8LL;
        goto LABEL_114;
      case 6u:
        *(_WORD *)(a1 + 72) |= 2u;
        unint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v33 <= 0xFFFFFFFFFFFFFFF7LL && v33 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v32 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v33 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v32 = 0LL;
        }

        uint64_t v57 = 16LL;
        goto LABEL_114;
      case 7u:
        *(_WORD *)(a1 + 72) |= 4u;
        unint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v34 <= 0xFFFFFFFFFFFFFFF7LL && v34 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v32 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34 + 8;
        }

        else
        {
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v32 = 0LL;
        }

        uint64_t v57 = 24LL;
LABEL_114:
        *(void *)(a1 + v57) = v32;
        continue;
      case 8u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v17 = 0LL;
        *(_WORD *)(a1 + 72) |= 0x80u;
        while (2)
        {
          uint64_t v37 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v39 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v37);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v38;
            v17 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              BOOL v10 = v36++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_94;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_94:
        uint64_t v56 = 48LL;
        goto LABEL_103;
      case 9u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v17 = 0LL;
        *(_WORD *)(a1 + 72) |= 0x40u;
        while (2)
        {
          uint64_t v42 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v44 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v42);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v43;
            v17 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              BOOL v10 = v41++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_98;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_98:
        uint64_t v56 = 44LL;
        goto LABEL_103;
      case 0xAu:
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v17 = 0LL;
        *(_WORD *)(a1 + 72) |= 0x20u;
        while (2)
        {
          uint64_t v47 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v49 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v47);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v48;
            v17 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              BOOL v10 = v46++ >= 9;
              if (v10)
              {
                LODWORD(v17) = 0;
                goto LABEL_102;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_102:
        uint64_t v56 = 40LL;
LABEL_103:
        *(_DWORD *)(a1 + v56) = v17;
        continue;
      case 0xBu:
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0LL;
        *(_WORD *)(a1 + 72) |= 0x200u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        continue;
    }

    while (1)
    {
      uint64_t v53 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v54 = v53 + 1;
      if (v53 == -1 || v54 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v55 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v53);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v54;
      v52 |= (unint64_t)(v55 & 0x7F) << v50;
      if ((v55 & 0x80) == 0) {
        goto LABEL_105;
      }
      v50 += 7;
      BOOL v10 = v51++ >= 9;
      if (v10)
      {
        uint64_t v52 = 0LL;
        goto LABEL_107;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_105:
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v52 = 0LL;
    }
LABEL_107:
    *(_BYTE *)(a1 + 68) = v52 != 0;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10040EA5C(int64x2_t *a1, uint64_t a2)
{
  a1->i64[0] = (uint64_t)off_101837928;
  char v4 = a1 + 9;
  sub_1003B35F4(&a1->u64[1], a2);
  sub_100B14CF0(v4, 0LL, 0LL);
  sub_100B14CF0((int64x2_t *)a1[10].i64, 0LL, 0LL);
  sub_100B14CF0((int64x2_t *)a1[11].i64, 0LL, 0LL);
  sub_100B14CF0((int64x2_t *)a1[12].i64, 0LL, 0LL);
  sub_100B14CF0((int64x2_t *)a1[13].i64, 0LL, 0LL);
  a1[14] = vdupq_n_s64(0x7FF8000000000000uLL);
  a1[15].i64[0] = (uint64_t)a1[15].i64;
  a1[15].i64[1] = (uint64_t)a1[15].i64;
  a1[16].i64[0] = 0LL;
  if (*(_BYTE *)(a2 + 8))
  {
    (*(void (**)(int64x2_t *))(a1->i64[0] + 24))(a1);
  }

  else
  {
    sub_101238F74();
    abort_report_np( "%s:%d: assertion failure in %s",  "/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Core/Utilities/CLPolygonDatabase.mm",  78,  "CLPolygonDatabase");
    __break(1u);
  }

void sub_10040EB5C(_Unwind_Exception *a1)
{
}

void *sub_10040EB80(void *a1)
{
  *a1 = off_101837928;
  unint64_t v2 = a1 + 1;
  sub_1001B4C40(a1 + 30);
  sub_1003B3930(v2);
  return a1;
}

void *sub_10040EBC0(void *a1)
{
  *a1 = off_101837928;
  unint64_t v2 = a1 + 1;
  sub_1001B4C40(a1 + 30);
  sub_1003B3930(v2);
  return a1;
}

void sub_10040EC00(void *a1)
{
  *a1 = off_101837928;
  unint64_t v2 = a1 + 1;
  sub_1001B4C40(a1 + 30);
  sub_1003B3930(v2);
  operator delete(a1);
}

uint64_t sub_10040EC40(uint64_t a1, double *a2, double *a3, sqlite3_int64 **a4)
{
  uint64_t v6 = 0LL;
  unsigned __int8 v5 = 0;
  return sub_10040EC70(a1, a2, a3, (double *)&v6, a4, &v5);
}

uint64_t sub_10040EC70( uint64_t a1, double *a2, double *a3, double *a4, sqlite3_int64 **a5, unsigned __int8 *a6)
{
  unint64_t v8 = a3;
  char v9 = a2;
  uint64_t v10 = a1;
  std::stringbuf::string_type __p = 0LL;
  uint64_t v57 = 0LL;
  uint64_t v58 = 0LL;
  if ((sub_10040F1DC(a1, a2, a3, a4, (char **)&__p) & 1) != 0)
  {
    a5[1] = *a5;
    int v11 = (sqlite3_int64 *)__p;
    if (__p == v57)
    {
      LOBYTE(v12) = 1;
      if (!__p) {
        return v12 & 1;
      }
      goto LABEL_43;
    }

    uint64_t v51 = (uint64_t)(a5 + 2);
    uint64_t v12 = 1LL;
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    uint64_t v14 = &OBJC_METACLASS___CLPrivacyManager.vtable;
    uint64_t v52 = v10;
    do
    {
      sqlite3_int64 v15 = *v11;
      sqlite3_int64 v55 = *v11;
      unsigned __int8 v53 = 0;
      if ((sub_10040F9FC(v10, &v55, (char *)&v53, (double *)&v54, *v9, *v8) & 1) != 0)
      {
        if (*a6 | v53)
        {
          sqlite3_int64 v16 = v54;
          uint64_t v18 = a5[1];
          unint64_t v17 = (unint64_t)a5[2];
          if ((unint64_t)v18 >= v17)
          {
            uint64_t v23 = v9;
            unint64_t v24 = v8;
            uint64_t v25 = v12;
            char v26 = a6;
            unsigned int v27 = v14;
            uint64_t v28 = p_vtable;
            unint64_t v29 = *a5;
            uint64_t v30 = ((char *)v18 - (char *)*a5) >> 4;
            unint64_t v31 = v30 + 1;
            uint64_t v32 = v17 - (void)v29;
            if (v32 >> 3 > v31) {
              unint64_t v31 = v32 >> 3;
            }
            else {
              unint64_t v33 = v31;
            }
            if (v33)
            {
              unint64_t v34 = (char *)sub_100037038(v51, v33);
              unint64_t v29 = *a5;
              uint64_t v18 = a5[1];
            }

            else
            {
              unint64_t v34 = 0LL;
            }

            char v35 = (sqlite3_int64 *)&v34[16 * v30];
            *char v35 = v15;
            v35[1] = v16;
            unsigned int v36 = v35;
            p_vtable = v28;
            if (v18 != v29)
            {
              do
              {
                *((_OWORD *)v36 - 1) = *((_OWORD *)v18 - 1);
                v36 -= 2;
                v18 -= 2;
              }

              while (v18 != v29);
              unint64_t v29 = *a5;
            }

            uint64_t v14 = v27;
            unint64_t v19 = v35 + 2;
            *a5 = v36;
            a5[1] = v35 + 2;
            a5[2] = (sqlite3_int64 *)&v34[16 * v33];
            a6 = v26;
            if (v29) {
              operator delete(v29);
            }
            uint64_t v12 = v25;
            unint64_t v8 = v24;
            char v9 = v23;
            uint64_t v10 = v52;
          }

          else
          {
            sqlite3_int64 *v18 = v15;
            v18[1] = v16;
            unint64_t v19 = v18 + 2;
          }

          a5[1] = v19;
        }
      }

      else
      {
        char v20 = (os_log_s *)v14[335];
        if (os_log_type_enabled(v20, OS_LOG_TYPE_FAULT))
        {
          double v21 = *v9;
          double v22 = *v8;
          *(_DWORD *)std::stringbuf::string_type buf = 134218496;
          double v66 = v21;
          __int16 v67 = 2048;
          double v68 = v22;
          __int16 v69 = 2048;
          sqlite3_int64 v70 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_FAULT,  "Couldn't determine if point <%+.8f,%+.8f> is in polygon %lld",  buf,  0x20u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          uint64_t v37 = v14[335];
          double v38 = *v9;
          double v39 = *v8;
          int v59 = 134218496;
          double v60 = v38;
          __int16 v61 = 2048;
          double v62 = v39;
          __int16 v63 = 2048;
          sqlite3_int64 v64 = v15;
          LODWORD(v5sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v37,  17LL,  "Couldn't determine if point <%+.8f,%+.8f> is in polygon %lld",  COERCE_DOUBLE(&v59),  v50,  v51);
          unsigned int v41 = (uint8_t *)v40;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLPolygonDatabase::polygonsAndDistancesForPointWithUncertainty(const double &, const double &, const do uble &, std::vector<std::pair<sqlite3_int64, double>> &, const BOOL &)",  "%s\n",  v40);
          if (v41 != buf) {
            free(v41);
          }
        }

        uint64_t v12 = 0LL;
      }

      ++v11;
    }

    while (v11 != v57);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    uint64_t v42 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      double v43 = *v9;
      double v44 = *v8;
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      double v66 = v43;
      __int16 v67 = 2048;
      double v68 = v44;
      _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_FAULT,  "Couldn't get list of candidates for point <%+.8f,%+.8f>",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      double v46 = *v9;
      double v47 = *v8;
      int v59 = 134218240;
      double v60 = v46;
      __int16 v61 = 2048;
      double v62 = v47;
      LODWORD(v5sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Couldn't get list of candidates for point <%+.8f,%+.8f>",  COERCE_DOUBLE(&v59),  v50);
      char v49 = (uint8_t *)v48;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLPolygonDatabase::polygonsAndDistancesForPointWithUncertainty(const double &, const double &, const double &, std::vector<std::pair<sqlite3_int64, double>> &, const BOOL &)",  "%s\n",  v48);
      if (v49 != buf) {
        free(v49);
      }
    }

    LOBYTE(v12) = 0;
  }

  int v11 = (sqlite3_int64 *)__p;
  if (__p)
  {
LABEL_43:
    uint64_t v57 = v11;
    operator delete(v11);
  }

  return v12 & 1;
}

void sub_10040F1AC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10040F1DC(uint64_t a1, double *a2, double *a3, double *a4, char **a5)
{
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101837958);
  }
  uint64_t v10 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    double v11 = *a2;
    double v12 = *a3;
    double v13 = *a4;
    *(_DWORD *)std::stringbuf::string_type buf = 134218496;
    double v72 = v11;
    __int16 v73 = 2048;
    double v74 = v12;
    __int16 v75 = 2048;
    double v76 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "Getting polygons for point <%+.8f,%+.8f> acc %.2f",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    double v46 = *a2;
    double v47 = *a3;
    double v48 = *a4;
    int v63 = 134218496;
    double v64 = v46;
    __int16 v65 = 2048;
    double v66 = v47;
    __int16 v67 = 2048;
    double v68 = v48;
    LODWORD(v56) = 32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Getting polygons for point <%+.8f,%+.8f> acc %.2f",  COERCE_DOUBLE(&v63),  v56,  v57);
    double v50 = (uint8_t *)v49;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::polygonCandidatesForPointWithUncertainty(const double &, const double &, const double &, s td::vector<sqlite3_int64> &)",  "%s\n",  v49);
    if (v50 != buf) {
      free(v50);
    }
  }

  a5[1] = *a5;
  uint64_t v14 = (uint64_t *)(a1 + 208);
  if (!sub_100B14D64(v14))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    unsigned int v36 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "#Warning fBoundingBoxesSelectNearbyStatement not available - rtree module missing or db unavailable",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    LOWORD(v63) = 0;
    LODWORD(v56) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning fBoundingBoxesSelectNearbyStatement not available - rtree module missing or db unavailable",  &v63,  *(void *)&v56);
    double v38 = (uint8_t *)v37;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::polygonCandidatesForPointWithUncertainty(const double &, const double &, const double &, s td::vector<sqlite3_int64> &)",  "%s\n",  v37);
    goto LABEL_67;
  }

  if (!sub_1002954D0(*a2, *a3))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    uint64_t v42 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      double v43 = *a2;
      double v44 = *a3;
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      double v72 = v43;
      __int16 v73 = 2048;
      double v74 = v44;
      _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "#Warning Ignoring bogus location <%+.8f,%+.8f>",  buf,  0x16u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    double v53 = *a2;
    double v54 = *a3;
    int v63 = 134218240;
    double v64 = v53;
    __int16 v65 = 2048;
    double v66 = v54;
    LODWORD(v56) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Ignoring bogus location <%+.8f,%+.8f>",  COERCE_DOUBLE(&v63),  v56);
    double v38 = (uint8_t *)v55;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::polygonCandidatesForPointWithUncertainty(const double &, const double &, const double &, s td::vector<sqlite3_int64> &)",  "%s\n",  v55);
LABEL_67:
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  double v15 = *a2;
  double v16 = *a3;
  double v61 = v16;
  double v62 = v15;
  double v59 = v16;
  double v60 = v15;
  if (*a4 > 0.0) {
    sub_100295604(&v62, &v61, &v60, &v59, v15, v16, *a4);
  }
  sub_100B14CF8(v14, &v58);
  unint64_t v17 = (sqlite3_stmt *)sub_100019240(v58);
  if (sub_1003B7480(v17, 1, v62)
    && (uint64_t v18 = (sqlite3_stmt *)sub_100019240(v58), sub_1003B7480(v18, 2, v60))
    && (unint64_t v19 = (sqlite3_stmt *)sub_100019240(v58), sub_1003B7480(v19, 3, v61))
    && (char v20 = (sqlite3_stmt *)sub_100019240(v58), sub_1003B7480(v20, 4, v59)))
  {
    while (1)
    {
      double v21 = (sqlite3_stmt *)sub_100019240(v58);
      if (sqlite3_step(v21) != 100) {
        break;
      }
      double v22 = (sqlite3_stmt *)sub_100019240(v58);
      int v23 = sqlite3_column_int(v22, 0);
      uint64_t v24 = v23;
      char v26 = a5[1];
      unint64_t v25 = (unint64_t)a5[2];
      if ((unint64_t)v26 >= v25)
      {
        uint64_t v28 = *a5;
        uint64_t v29 = (v26 - *a5) >> 3;
        unint64_t v30 = v29 + 1;
        uint64_t v31 = v25 - (void)v28;
        if (v31 >> 2 > v30) {
          unint64_t v30 = v31 >> 2;
        }
        else {
          unint64_t v32 = v30;
        }
        if (v32)
        {
          unint64_t v33 = (char *)sub_1000071BC((uint64_t)(a5 + 2), v32);
          uint64_t v28 = *a5;
          char v26 = a5[1];
        }

        else
        {
          unint64_t v33 = 0LL;
        }

        unint64_t v34 = &v33[8 * v29];
        *(void *)unint64_t v34 = v24;
        unsigned int v27 = v34 + 8;
        while (v26 != v28)
        {
          uint64_t v35 = *((void *)v26 - 1);
          v26 -= 8;
          *((void *)v34 - 1) = v35;
          v34 -= 8;
        }

        *a5 = v34;
        a5[1] = v27;
        a5[2] = &v33[8 * v32];
        if (v28) {
          operator delete(v28);
        }
      }

      else
      {
        *(void *)char v26 = v23;
        unsigned int v27 = v26 + 8;
      }

      a5[1] = v27;
    }

    uint64_t v40 = 1LL;
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    double v39 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218752;
      double v72 = v62;
      __int16 v73 = 2048;
      double v74 = v60;
      __int16 v75 = 2048;
      double v76 = v61;
      __int16 v77 = 2048;
      double v78 = v59;
      _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_FAULT,  "Could not bind <%+.8f,%+.8f> - <%+.8f,%+.8f>",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      int v63 = 134218752;
      double v64 = v62;
      __int16 v65 = 2048;
      double v66 = v60;
      __int16 v67 = 2048;
      double v68 = v61;
      __int16 v69 = 2048;
      double v70 = v59;
      LODWORD(v56) = 42;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Could not bind <%+.8f,%+.8f> - <%+.8f,%+.8f>",  COERCE_DOUBLE(&v63),  v56,  v57,  *(double *)&v58);
      uint64_t v52 = (uint8_t *)v51;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLPolygonDatabase::polygonCandidatesForPointWithUncertainty(const double &, const double &, const double &, std::vector<sqlite3_int64> &)",  "%s\n",  v51);
      if (v52 != buf) {
        free(v52);
      }
    }

    uint64_t v40 = 0LL;
  }

  uint64_t v41 = v58;
  uint64_t v58 = 0LL;
  if (v41) {
    (*(void (**)(uint64_t))(*(void *)v41 + 8LL))(v41);
  }
  return v40;
}

void sub_10040F9C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10040F9FC(uint64_t a1, sqlite3_int64 *a2, char *a3, double *a4, double a5, double a6)
{
  double v12 = (uint64_t *)(a1 + 192);
  if (!sub_100B14D64((void *)(a1 + 192)))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    uint64_t v14 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "#Warning fPointsSelectStatement not available - rtree module missing or db unavailable",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      LOWORD(v55) = 0;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning fPointsSelectStatement not available - rtree module missing or db unavailable",  &v55,  2);
      uint64_t v51 = (uint8_t *)v50;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::pointInPolygon(const sqlite3_int64 &, const double, const double, BOOL &, double &)",  "%s\n",  v50);
      if (v51 != buf) {
        free(v51);
      }
    }

    return 0LL;
  }

  if (*(double *)(a1 + 224) != a5 || *(double *)(a1 + 232) != a6)
  {
    *(double *)(a1 + 224) = a5;
    *(double *)(a1 + 232) = a6;
    sub_1001B4C40((void *)(a1 + 240));
LABEL_15:
    *a3 = 0;
    *a4 = -1.0;
    sub_100B14CF8(v12, &v54);
    double v16 = (sqlite3_stmt *)sub_100019240(v54);
    if (sub_1003C2D24(v16, 1, *a2))
    {
      unint64_t v17 = (sqlite3_stmt *)sub_100019240(v54);
      if (sqlite3_step(v17) == 100)
      {
        uint64_t v18 = (sqlite3_stmt *)sub_100019240(v54);
        double v19 = sqlite3_column_double(v18, 0);
        char v20 = (sqlite3_stmt *)sub_100019240(v54);
        double v21 = sqlite3_column_double(v20, 1);
        while (1)
        {
          do
          {
            double v22 = (sqlite3_stmt *)sub_100019240(v54);
            if (sqlite3_step(v22) != 100)
            {
              sqlite3_int64 v42 = *a2;
              char v43 = *a3;
              double v44 = *a4;
              char v45 = (double *)operator new(0x28uLL);
              float v45[3] = v44;
              *((_BYTE *)v45 + 32) = v43;
              double v46 = *(double ***)(a1 + 248);
              *(void *)char v45 = a1 + 240;
              *((void *)v45 + 1) = v46;
              *((void *)v45 + 2) = v42;
              const char *v46 = v45;
              uint64_t v47 = *(void *)(a1 + 256) + 1LL;
              *(void *)(a1 + 248) = v45;
              *(void *)(a1 + 256) = v47;
              uint64_t v15 = 1LL;
              goto LABEL_60;
            }

            int v23 = (sqlite3_stmt *)sub_100019240(v54);
            double v24 = sqlite3_column_double(v23, 0);
            unint64_t v25 = (sqlite3_stmt *)sub_100019240(v54);
            double v26 = sqlite3_column_double(v25, 1);
            double v27 = v26;
          }

          while (v24 == v19 && v26 == v21);
          if ((v19 > a5 && v24 < a5 || v19 < a5 && v24 > a5) && (v26 > a6 || v21 > a6)) {
            break;
          }
          if (v19 == a5 && v24 < a5 && v21 > a6 || v24 == a5 && v19 < a5 && v26 > a6) {
            goto LABEL_37;
          }
LABEL_38:
          double v29 = v24 - v19;
          double v30 = v27 - v21;
          double v31 = ((a6 - v21) * (v27 - v21) + (a5 - v19) * (v24 - v19)) / (v30 * v30 + v29 * v29);
          if (v31 <= 0.0)
          {
            double v32 = v19;
            double v33 = v21;
          }

          else
          {
            double v32 = v24;
            double v33 = v27;
            if (v31 < 1.0)
            {
              double v32 = v19 + v31 * v29;
              double v33 = v21 + v31 * v30;
            }
          }

          double v34 = sub_100D2EC74(a5, a6, v32, v33);
          if (*a4 >= 0.0)
          {
            double v21 = v27;
            double v19 = v24;
            if (v34 >= *a4) {
              continue;
            }
          }

          *a4 = v34;
          double v21 = v27;
          double v19 = v24;
        }

        if (v21 + (v26 - v21) * ((a5 - v19) / (v24 - v19)) <= a6) {
          goto LABEL_38;
        }
LABEL_37:
        *a3 ^= 1u;
        goto LABEL_38;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      uint64_t v40 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        sqlite3_int64 v41 = *a2;
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        sqlite3_int64 v58 = v41;
        _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "#Warning No points data found for polygon Id %lld",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2))
      {
LABEL_58:
        uint64_t v15 = 0LL;
LABEL_60:
        uint64_t v48 = v54;
        uint64_t v54 = 0LL;
        if (v48) {
          (*(void (**)(uint64_t))(*(void *)v48 + 8LL))(v48);
        }
        return v15;
      }

      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      sqlite3_int64 v52 = *a2;
      int v55 = 134217984;
      sqlite3_int64 v56 = v52;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning No points data found for polygon Id %lld",  &v55);
      double v39 = (uint8_t *)v53;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::pointInPolygon(const sqlite3_int64 &, const double, const double, BOOL &, double &)",  "%s\n",  v53);
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      uint64_t v35 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        sqlite3_int64 v36 = *a2;
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        sqlite3_int64 v58 = v36;
        _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "#Warning Could not bind %lld", buf, 0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_58;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      sqlite3_int64 v37 = *a2;
      int v55 = 134217984;
      sqlite3_int64 v56 = v37;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Could not bind %lld",  &v55);
      double v39 = (uint8_t *)v38;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::pointInPolygon(const sqlite3_int64 &, const double, const double, BOOL &, double &)",  "%s\n",  v38);
    }

    if (v39 != buf) {
      free(v39);
    }
    goto LABEL_58;
  }

  uint64_t v13 = *(void *)(a1 + 248);
  if (v13 == a1 + 240) {
    goto LABEL_15;
  }
  while (*(void *)(v13 + 16) != *a2)
  {
    uint64_t v13 = *(void *)(v13 + 8);
    if (v13 == a1 + 240) {
      goto LABEL_15;
    }
  }

  *a3 = *(_BYTE *)(v13 + 32);
  *a4 = *(double *)(v13 + 24);
  return 1LL;
}

void sub_100410104( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100410154(uint64_t a1, sqlite3_int64 *a2, std::string *a3)
{
  unsigned __int8 v5 = (uint64_t *)(a1 + 160);
  if (sub_100B14D64((void *)(a1 + 160)))
  {
    sub_100B14CF8(v5, &v27);
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v27);
    if (sub_1003C2D24(v6, 1, *a2))
    {
      uint64_t v7 = (sqlite3_stmt *)sub_100019240(v27);
      if (sqlite3_step(v7) == 100)
      {
        unint64_t v8 = (sqlite3_stmt *)sub_100019240(v27);
        char v9 = sqlite3_column_text(v8, 0);
        if (v9)
        {
          std::string::assign(a3, (const std::string::value_type *)v9);
          uint64_t v10 = 1LL;
          goto LABEL_34;
        }

        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101837958);
        }
        double v21 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_FAULT, "Could not get polygon name", buf, 2u);
        }

        if (!sub_1002921D0(115, 0))
        {
LABEL_33:
          uint64_t v10 = 0LL;
LABEL_34:
          uint64_t v22 = v27;
          uint64_t v27 = 0LL;
          if (v22) {
            (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
          }
          return v10;
        }

        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101837958);
        }
        LOWORD(v28) = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Could not get polygon name",  &v28,  2);
        double v16 = (uint8_t *)v26;
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLPolygonDatabase::getPolygonName(const sqlite3_int64 &, std::string &)",  "%s\n",  v26);
      }

      else
      {
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101837958);
        }
        unint64_t v17 = (os_log_s *)qword_101934A78;
        if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
        {
          sqlite3_int64 v18 = *a2;
          *(_DWORD *)std::stringbuf::string_type buf = 134217984;
          sqlite3_int64 v31 = v18;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#Warning No entry in names table for polygon ID %lld",  buf,  0xCu);
        }

        if (!sub_1002921D0(115, 2)) {
          goto LABEL_33;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101837958);
        }
        sqlite3_int64 v19 = *a2;
        int v28 = 134217984;
        sqlite3_int64 v29 = v19;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning No entry in names table for polygon ID %lld",  &v28);
        double v16 = (uint8_t *)v20;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::getPolygonName(const sqlite3_int64 &, std::string &)",  "%s\n",  v20);
      }
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      double v12 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        sqlite3_int64 v13 = *a2;
        *(_DWORD *)std::stringbuf::string_type buf = 134349056;
        sqlite3_int64 v31 = v13;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "Could not bind %{public}lld", buf, 0xCu);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_33;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      sqlite3_int64 v14 = *a2;
      int v28 = 134349056;
      sqlite3_int64 v29 = v14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Could not bind %{public}lld",  &v28,  12);
      double v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLPolygonDatabase::getPolygonName(const sqlite3_int64 &, std::string &)",  "%s\n",  v15);
    }

    if (v16 != buf) {
      free(v16);
    }
    goto LABEL_33;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101837958);
  }
  double v11 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning fNamesSelectStatement not available - rtree module missing or db unavailable",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    LOWORD(v28) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning fNamesSelectStatement not available - rtree module missing or db unavailable",  &v28,  2);
    unint64_t v25 = (uint8_t *)v24;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::getPolygonName(const sqlite3_int64 &, std::string &)",  "%s\n",  v24);
    if (v25 != buf) {
      free(v25);
    }
  }

  return 0LL;
}

void sub_100410730( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10041076C(uint64_t a1, char *a2, void *a3)
{
  unsigned __int8 v5 = (uint64_t *)(a1 + 176);
  if (sub_100B14D64((void *)(a1 + 176)))
  {
    sub_100B14CF8(v5, &v25);
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v25);
    if (a2[23] >= 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = *(char **)a2;
    }
    if (sub_1003BC1F0(v6, 1, v7))
    {
      unint64_t v8 = (sqlite3_stmt *)sub_100019240(v25);
      if (sqlite3_step(v8) == 100)
      {
        char v9 = (sqlite3_stmt *)sub_100019240(v25);
        *a3 = sqlite3_column_int(v9, 0);
        uint64_t v10 = 1LL;
        goto LABEL_37;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      unint64_t v17 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        if (a2[23] >= 0) {
          sqlite3_int64 v18 = a2;
        }
        else {
          sqlite3_int64 v18 = *(char **)a2;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        sqlite3_int64 v29 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "#Warning Polygon %s not found in names table",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2))
      {
LABEL_36:
        uint64_t v10 = 0LL;
LABEL_37:
        uint64_t v19 = v25;
        uint64_t v25 = 0LL;
        if (v19) {
          (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
        }
        return v10;
      }

      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      if (a2[23] >= 0) {
        int v23 = a2;
      }
      else {
        int v23 = *(char **)a2;
      }
      int v26 = 136315138;
      uint64_t v27 = v23;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Polygon %s not found in names table",  (const char *)&v26);
      double v16 = (uint8_t *)v24;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::getPolygonId(const std::string &, sqlite3_int64 &)",  "%s\n",  v24);
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      double v12 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        if (a2[23] >= 0) {
          sqlite3_int64 v13 = a2;
        }
        else {
          sqlite3_int64 v13 = *(char **)a2;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        sqlite3_int64 v29 = v13;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#Warning Could not bind %s", buf, 0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_36;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      if (a2[23] >= 0) {
        sqlite3_int64 v14 = a2;
      }
      else {
        sqlite3_int64 v14 = *(char **)a2;
      }
      int v26 = 136315138;
      uint64_t v27 = v14;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Could not bind %s",  (const char *)&v26);
      double v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::getPolygonId(const std::string &, sqlite3_int64 &)",  "%s\n",  v15);
    }

    if (v16 != buf) {
      free(v16);
    }
    goto LABEL_36;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101837958);
  }
  double v11 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning fNamesSelectOnNameStatement not available - rtree module missing or db unavailable",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    LOWORD(v26) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning fNamesSelectOnNameStatement not available - rtree module missing or db unavailable",  &v26,  2);
    uint64_t v22 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::getPolygonId(const std::string &, sqlite3_int64 &)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  return 0LL;
}

void sub_100410C5C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100410C90(uint64_t a1, char *a2, char **a3)
{
  a3[1] = *a3;
  unsigned __int8 v5 = (uint64_t *)(a1 + 176);
  if (sub_100B14D64((void *)(a1 + 176)))
  {
    sub_100B14CF8(v5, &v38);
    uint64_t v6 = (sqlite3_stmt *)sub_100019240(v38);
    if (a2[23] >= 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = *(char **)a2;
    }
    if (sub_1003BC1F0(v6, 1, v7))
    {
      while (1)
      {
        unint64_t v8 = (sqlite3_stmt *)sub_100019240(v38);
        if (sqlite3_step(v8) != 100) {
          break;
        }
        char v9 = (sqlite3_stmt *)sub_100019240(v38);
        int v10 = sqlite3_column_int(v9, 0);
        uint64_t v11 = v10;
        sqlite3_int64 v13 = a3[1];
        unint64_t v12 = (unint64_t)a3[2];
        if ((unint64_t)v13 >= v12)
        {
          uint64_t v15 = *a3;
          uint64_t v16 = (v13 - *a3) >> 3;
          unint64_t v17 = v16 + 1;
          uint64_t v18 = v12 - (void)v15;
          if (v18 >> 2 > v17) {
            unint64_t v17 = v18 >> 2;
          }
          else {
            unint64_t v19 = v17;
          }
          if (v19)
          {
            char v20 = (char *)sub_1000071BC((uint64_t)(a3 + 2), v19);
            uint64_t v15 = *a3;
            sqlite3_int64 v13 = a3[1];
          }

          else
          {
            char v20 = 0LL;
          }

          double v21 = &v20[8 * v16];
          *(void *)double v21 = v11;
          sqlite3_int64 v14 = v21 + 8;
          while (v13 != v15)
          {
            uint64_t v22 = *((void *)v13 - 1);
            v13 -= 8;
            *((void *)v21 - 1) = v22;
            v21 -= 8;
          }

          *a3 = v21;
          a3[1] = v14;
          a3[2] = &v20[8 * v19];
          if (v15) {
            operator delete(v15);
          }
        }

        else
        {
          *(void *)sqlite3_int64 v13 = v10;
          sqlite3_int64 v14 = v13 + 8;
        }

        a3[1] = v14;
      }

      if (a3[1] != *a3)
      {
        uint64_t v24 = 1LL;
        goto LABEL_55;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      double v30 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        if (a2[23] >= 0) {
          sqlite3_int64 v31 = a2;
        }
        else {
          sqlite3_int64 v31 = *(char **)a2;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        sqlite3_int64 v42 = v31;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "#Warning Polygon %s not found in names table",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2))
      {
LABEL_54:
        uint64_t v24 = 0LL;
LABEL_55:
        uint64_t v32 = v38;
        uint64_t v38 = 0LL;
        if (v32) {
          (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
        }
        return v24;
      }

      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      if (a2[23] >= 0) {
        sqlite3_int64 v36 = a2;
      }
      else {
        sqlite3_int64 v36 = *(char **)a2;
      }
      int v39 = 136315138;
      uint64_t v40 = v36;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Polygon %s not found in names table",  (const char *)&v39);
      sqlite3_int64 v29 = (uint8_t *)v37;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::polygonsForName(const std::string &, std::vector<sqlite3_int64> &)",  "%s\n",  v37);
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      uint64_t v25 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        if (a2[23] >= 0) {
          int v26 = a2;
        }
        else {
          int v26 = *(char **)a2;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        sqlite3_int64 v42 = v26;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#Warning Could not bind %s", buf, 0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_54;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      if (a2[23] >= 0) {
        uint64_t v27 = a2;
      }
      else {
        uint64_t v27 = *(char **)a2;
      }
      int v39 = 136315138;
      uint64_t v40 = v27;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Could not bind %s",  (const char *)&v39);
      sqlite3_int64 v29 = (uint8_t *)v28;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::polygonsForName(const std::string &, std::vector<sqlite3_int64> &)",  "%s\n",  v28);
    }

    if (v29 != buf) {
      free(v29);
    }
    goto LABEL_54;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101837958);
  }
  int v23 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "#Warning fNamesSelectOnNameStatement not available - rtree module missing or db unavailable",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    LOWORD(v39) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning fNamesSelectOnNameStatement not available - rtree module missing or db unavailable",  &v39,  2);
    uint64_t v35 = (uint8_t *)v34;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::polygonsForName(const std::string &, std::vector<sqlite3_int64> &)",  "%s\n",  v34);
    if (v35 != buf) {
      free(v35);
    }
  }

  return 0LL;
}

void sub_100411250( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100411290(uint64_t a1, char *a2, double *a3, double *a4, char *a5, double *a6)
{
  if ((sub_10041076C(a1, a2, &v18) & 1) != 0) {
    return sub_10040F9FC(a1, &v18, a5, a6, *a3, *a4);
  }
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101837958);
  }
  sqlite3_int64 v13 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    if (a2[23] >= 0) {
      sqlite3_int64 v14 = a2;
    }
    else {
      sqlite3_int64 v14 = *(char **)a2;
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136315138;
    uint64_t v22 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "#Warning No bounding box found for polygon %s",  buf,  0xCu);
  }

  uint64_t result = sub_1002921D0(115, 2);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    if (a2[23] >= 0) {
      uint64_t v15 = a2;
    }
    else {
      uint64_t v15 = *(char **)a2;
    }
    int v19 = 136315138;
    char v20 = v15;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning No bounding box found for polygon %s",  (const char *)&v19);
    unint64_t v17 = (uint8_t *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::pointInPolygon(const std::string &, const double &, const double &, BOOL &, double &)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
    return 0LL;
  }

  return result;
}

uint64_t sub_1004114A4(void *a1)
{
  unint64_t v2 = sub_10000CF44(&v62, (uint64_t)"SELECT ", 7LL);
  size_t v3 = sub_10000CF44(v2, (uint64_t)"MinimumLatitude", 15LL);
  char v4 = sub_10000CF44(v3, (uint64_t)", ", 2LL);
  unsigned __int8 v5 = sub_10000CF44(v4, (uint64_t)"MaximumLatitude", 15LL);
  uint64_t v6 = sub_10000CF44(v5, (uint64_t)", ", 2LL);
  uint64_t v7 = sub_10000CF44(v6, (uint64_t)"MinimumLongitude", 16LL);
  unint64_t v8 = sub_10000CF44(v7, (uint64_t)", ", 2LL);
  char v9 = sub_10000CF44(v8, (uint64_t)"MaximumLongitude", 16LL);
  int v10 = sub_10000CF44(v9, (uint64_t)" FROM ", 6LL);
  uint64_t v11 = sub_10000CF44(v10, (uint64_t)"BoundingBoxes", 13LL);
  unint64_t v12 = sub_10000CF44(v11, (uint64_t)" WHERE ", 7LL);
  sqlite3_int64 v13 = sub_10000CF44(v12, (uint64_t)"ROWID", 5LL);
  sub_10000CF44(v13, (uint64_t)"=?", 2LL);
  std::stringbuf::str(&__p, &v63);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  a1[18] = sub_1003BF158((uint64_t)(a1 + 1), (char *)p_p);
  a1[19] = v15;
  memset(&__p, 0, sizeof(__p));
  std::string::operator=(&v63.__str_, &__p);
  sub_10023BE94((uint64_t)&v63);
  uint64_t v16 = sub_10000CF44(&v62, (uint64_t)"SELECT ", 7LL);
  unint64_t v17 = sub_10000CF44(v16, (uint64_t)"ZoneName", 8LL);
  sqlite3_int64 v18 = sub_10000CF44(v17, (uint64_t)" FROM ", 6LL);
  int v19 = sub_10000CF44(v18, (uint64_t)"Names", 5LL);
  char v20 = sub_10000CF44(v19, (uint64_t)" WHERE ", 7LL);
  double v21 = sub_10000CF44(v20, (uint64_t)"ROWID", 5LL);
  sub_10000CF44(v21, (uint64_t)"=?", 2LL);
  std::stringbuf::str(&__p, &v63);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v22 = &__p;
  }
  else {
    uint64_t v22 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  a1[20] = sub_1003BF158((uint64_t)(a1 + 1), (char *)v22);
  a1[21] = v23;
  memset(&__p, 0, sizeof(__p));
  std::string::operator=(&v63.__str_, &__p);
  sub_10023BE94((uint64_t)&v63);
  uint64_t v24 = sub_10000CF44(&v62, (uint64_t)"SELECT ", 7LL);
  uint64_t v25 = sub_10000CF44(v24, (uint64_t)"ROWID", 5LL);
  int v26 = sub_10000CF44(v25, (uint64_t)" FROM ", 6LL);
  uint64_t v27 = sub_10000CF44(v26, (uint64_t)"Names", 5LL);
  int v28 = sub_10000CF44(v27, (uint64_t)" WHERE ", 7LL);
  sqlite3_int64 v29 = sub_10000CF44(v28, (uint64_t)"ZoneName", 8LL);
  sub_10000CF44(v29, (uint64_t)"=?", 2LL);
  std::stringbuf::str(&__p, &v63);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    double v30 = &__p;
  }
  else {
    double v30 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  a1[22] = sub_1003BF158((uint64_t)(a1 + 1), (char *)v30);
  a1[23] = v31;
  memset(&__p, 0, sizeof(__p));
  std::string::operator=(&v63.__str_, &__p);
  sub_10023BE94((uint64_t)&v63);
  uint64_t v32 = sub_10000CF44(&v62, (uint64_t)"SELECT ", 7LL);
  double v33 = sub_10000CF44(v32, (uint64_t)"Latitude", 8LL);
  double v34 = sub_10000CF44(v33, (uint64_t)", ", 2LL);
  uint64_t v35 = sub_10000CF44(v34, (uint64_t)"Longitude", 9LL);
  sqlite3_int64 v36 = sub_10000CF44(v35, (uint64_t)" FROM ", 6LL);
  sqlite3_int64 v37 = sub_10000CF44(v36, (uint64_t)"Points", 6LL);
  uint64_t v38 = sub_10000CF44(v37, (uint64_t)" WHERE ", 7LL);
  int v39 = sub_10000CF44(v38, (uint64_t)"ZoneID", 6LL);
  uint64_t v40 = sub_10000CF44(v39, (uint64_t)"=?", 2LL);
  sqlite3_int64 v41 = sub_10000CF44(v40, (uint64_t)" ORDER BY ", 10LL);
  sub_10000CF44(v41, (uint64_t)"PointID", 7LL);
  std::stringbuf::str(&__p, &v63);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    sqlite3_int64 v42 = &__p;
  }
  else {
    sqlite3_int64 v42 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  a1[24] = sub_1003BF158((uint64_t)(a1 + 1), (char *)v42);
  a1[25] = v43;
  memset(&__p, 0, sizeof(__p));
  std::string::operator=(&v63.__str_, &__p);
  sub_10023BE94((uint64_t)&v63);
  double v44 = sub_10000CF44(&v62, (uint64_t)"SELECT ", 7LL);
  char v45 = sub_10000CF44(v44, (uint64_t)"ROWID", 5LL);
  double v46 = sub_10000CF44(v45, (uint64_t)" FROM ", 6LL);
  uint64_t v47 = sub_10000CF44(v46, (uint64_t)"BoundingBoxes", 13LL);
  uint64_t v48 = sub_10000CF44(v47, (uint64_t)" WHERE ", 7LL);
  char v49 = sub_10000CF44(v48, (uint64_t)"MaximumLatitude", 15LL);
  double v50 = sub_10000CF44(v49, (uint64_t)">=? AND ", 8LL);
  uint64_t v51 = sub_10000CF44(v50, (uint64_t)"MinimumLatitude", 15LL);
  sqlite3_int64 v52 = sub_10000CF44(v51, (uint64_t)"<=? AND ", 8LL);
  double v53 = sub_10000CF44(v52, (uint64_t)"MaximumLongitude", 16LL);
  uint64_t v54 = sub_10000CF44(v53, (uint64_t)">=? AND ", 8LL);
  int v55 = sub_10000CF44(v54, (uint64_t)"MinimumLongitude", 16LL);
  sub_10000CF44(v55, (uint64_t)"<=?", 3LL);
  std::stringbuf::str(&__p, &v63);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    sqlite3_int64 v56 = &__p;
  }
  else {
    sqlite3_int64 v56 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  a1[26] = sub_1003BF158((uint64_t)(a1 + 1), (char *)v56);
  a1[27] = v57;
  memset(&__p, 0, sizeof(__p));
  std::string::operator=(&v63.__str_, &__p);
  sub_10023BE94((uint64_t)&v63);
  *(void *)((char *)v61
  uint64_t v62 = v58;
  std::streambuf::~streambuf(&v63);
  return std::ios::~ios(&v64);
}

void sub_100411AAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_100411B10(uint64_t a1, sqlite3_int64 *a2, double *a3, double *a4, double *a5, double *a6)
{
  uint64_t v11 = (uint64_t *)(a1 + 144);
  if (sub_100B14D64((void *)(a1 + 144)))
  {
    sub_100B14CF8(v11, &v33);
    unint64_t v12 = (sqlite3_stmt *)sub_100019240(v33);
    if (sub_1003C2D24(v12, 1, *a2))
    {
      sqlite3_int64 v13 = (sqlite3_stmt *)sub_100019240(v33);
      if (sqlite3_step(v13) == 100)
      {
        sqlite3_int64 v14 = (sqlite3_stmt *)sub_100019240(v33);
        *a3 = sqlite3_column_double(v14, 0);
        uint64_t v15 = (sqlite3_stmt *)sub_100019240(v33);
        *a5 = sqlite3_column_double(v15, 1);
        uint64_t v16 = (sqlite3_stmt *)sub_100019240(v33);
        *a4 = sqlite3_column_double(v16, 2);
        unint64_t v17 = (sqlite3_stmt *)sub_100019240(v33);
        *a6 = sqlite3_column_double(v17, 3);
        uint64_t v18 = 1LL;
        goto LABEL_25;
      }

      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      uint64_t v25 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        sqlite3_int64 v26 = *a2;
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        sqlite3_int64 v37 = v26;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "#Warning No bounding box found for polygon ID %lld",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2))
      {
LABEL_24:
        uint64_t v18 = 0LL;
LABEL_25:
        uint64_t v27 = v33;
        uint64_t v33 = 0LL;
        if (v27) {
          (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
        }
        return v18;
      }

      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      sqlite3_int64 v31 = *a2;
      int v34 = 134217984;
      sqlite3_int64 v35 = v31;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning No bounding box found for polygon ID %lld",  &v34);
      uint64_t v24 = (uint8_t *)v32;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::getPolygonBoundingBox(sqlite3_int64 &, double &, double &, double &, double &)",  "%s\n",  v32);
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      char v20 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
      {
        sqlite3_int64 v21 = *a2;
        *(_DWORD *)std::stringbuf::string_type buf = 134217984;
        sqlite3_int64 v37 = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "#Warning Could not bind polygon ID %lld",  buf,  0xCu);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_24;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101837958);
      }
      sqlite3_int64 v22 = *a2;
      int v34 = 134217984;
      sqlite3_int64 v35 = v22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Could not bind polygon ID %lld",  &v34);
      uint64_t v24 = (uint8_t *)v23;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::getPolygonBoundingBox(sqlite3_int64 &, double &, double &, double &, double &)",  "%s\n",  v23);
    }

    if (v24 != buf) {
      free(v24);
    }
    goto LABEL_24;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101837958);
  }
  int v19 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "#Warning fBoundingBoxesSelectStatement not available - rtree module missing or db unavailable",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101837958);
    }
    LOWORD(v34) = 0;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning fBoundingBoxesSelectStatement not available - rtree module missing or db unavailable",  &v34,  2);
    double v30 = (uint8_t *)v29;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLPolygonDatabase::getPolygonBoundingBox(sqlite3_int64 &, double &, double &, double &, double &)",  "%s\n",  v29);
    if (v30 != buf) {
      free(v30);
    }
  }

  return 0LL;
}

void sub_100412010( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8LL))(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100412044(uint64_t a1)
{
  return sub_1003B59A0(a1 + 8, "Names", (const char **)&off_1018378B8, 0LL, 0);
}

void sub_100412064(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_100412090(uint64_t a1)
{
  *(void *)a1 = off_101837988;
  unint64_t v2 = (void *)(a1 + 24);
  size_t v3 = (void *)(a1 + 8);
  char v4 = operator new(0x18uLL);
  void *v4 = &off_1018710F8;
  v4[1] = 0xBFF0000000000000LL;
  *((_DWORD *)v4 + 4) = 0;
  sub_1004138F0(v3, (uint64_t)v4);
  unsigned __int8 v5 = operator new(0x78uLL);
  sub_100E269FC((uint64_t)v5);
  sub_1004139B0(v2, (uint64_t)v5);
  uint64_t v6 = operator new(8uLL);
  void *v6 = &off_10186D0B0;
  sub_100413A70((void *)(a1 + 40), (uint64_t)v6);
  uint64_t v7 = operator new(0x38uLL);
  *uint64_t v7 = &off_101879360;
  sub_1004132C0((uint64_t)(v7 + 1));
  sub_100413B30((void *)(a1 + 56), (uint64_t)v7);
  unint64_t v8 = operator new(0x30uLL);
  *unint64_t v8 = &off_10182C918;
  sub_100FBF0C0((uint64_t)(v8 + 1), 1.3);
  sub_100413BF0((void *)(a1 + 72), (uint64_t)v8);
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  char v9 = operator new(8uLL);
  *char v9 = &off_1018379F0;
  sub_100413CB0((void *)(a1 + 104), (uint64_t)v9);
  int v10 = operator new(0xD8uLL);
  sub_1006E524C();
  sub_100413D70((void *)(a1 + 120), (uint64_t)v10);
  uint64_t v11 = operator new(8uLL);
  void *v11 = &off_1018506F0;
  sub_100413E30((void *)(a1 + 136), (uint64_t)v11);
  unint64_t v12 = operator new(0x10uLL);
  void *v12 = &off_101858A38;
  v12[1] = &off_101850008;
  sub_100413EF0((void *)(a1 + 152), (uint64_t)v12);
  sqlite3_int64 v13 = operator new(0x28uLL);
  ((void (*)(void))sub_100AF8B04)();
  sub_100413FB0((void *)(a1 + 168), (uint64_t)v13);
  sqlite3_int64 v14 = operator new(0x18uLL);
  sub_100E4670C();
  sub_100414070((void *)(a1 + 184), (uint64_t)v14);
  uint64_t v15 = operator new(0x28uLL);
  sub_100FBF0BC((uint64_t)v15);
  sub_100414130((void *)(a1 + 200), (uint64_t)v15);
  uint64_t v16 = operator new(0x18uLL);
  sub_100CCC884();
  sub_1004141F0((void *)(a1 + 216), (uint64_t)v16);
  unint64_t v17 = operator new(0xD0uLL);
  sub_1005C7B50();
  sub_1004142B0((void *)(a1 + 232), (uint64_t)v17);
  uint64_t v18 = operator new(0x10uLL);
  sub_1007FA7D0();
  sub_100414370((void *)(a1 + 248), (uint64_t)v18);
  int v19 = operator new(8uLL);
  *int v19 = &off_10182E0A0;
  sub_100414430((void *)(a1 + 264), (uint64_t)v19);
  char v20 = operator new(8uLL);
  *char v20 = &off_101850008;
  sub_1004144F0((void *)(a1 + 280), (uint64_t)v20);
  sqlite3_int64 v21 = operator new(8uLL);
  *sqlite3_int64 v21 = &off_101850378;
  sub_1004145B0((void *)(a1 + 296), (uint64_t)v21);
  sqlite3_int64 v22 = operator new(0x30uLL);
  *sqlite3_int64 v22 = &off_10186DA38;
  sub_100FBF0BC((uint64_t)(v22 + 1));
  sub_100414670((void *)(a1 + 312), (uint64_t)v22);
  uint64_t v23 = operator new(0x30uLL);
  *uint64_t v23 = &off_1018645C0;
  sub_100FBF0C0((uint64_t)(v23 + 1), 0.0);
  sub_100414730((void *)(a1 + 328), (uint64_t)v23);
  uint64_t v24 = operator new(0x60uLL);
  void *v24 = off_101831A08;
  sub_100FBF0C0((uint64_t)(v24 + 1), 1.3);
  sub_100AF8B04(v24 + 6);
  v24[11] = 0x4006666600000000LL;
  sub_1004147F0((void *)(a1 + 344), (uint64_t)v24);
  uint64_t v25 = operator new(8uLL);
  *uint64_t v25 = &off_101837A60;
  sub_1004148B0((void *)(a1 + 360), (uint64_t)v25);
  sqlite3_int64 v26 = operator new(0x30uLL);
  *sqlite3_int64 v26 = &off_10188A568;
  sub_100FBF0C0((uint64_t)(v26 + 1), 1.3);
  sub_100414970((void *)(a1 + 376), (uint64_t)v26);
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  return a1;
}

void sub_1004124D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23)
{
}

void sub_100412684()
{
}

void sub_10041268C()
{
}

void sub_100412694()
{
}

void sub_10041269C()
{
}

void sub_1004126A4()
{
}

void sub_1004126AC()
{
}

void sub_1004126B4()
{
}

void sub_1004126BC()
{
}

void sub_1004126C4()
{
}

void sub_1004126CC()
{
}

void sub_1004126D4()
{
}

void sub_1004126DC()
{
}

void sub_1004126E4()
{
}

void sub_1004126EC()
{
}

void sub_1004126F4()
{
}

void sub_1004126FC()
{
}

void sub_100412704()
{
}

void sub_10041270C()
{
}

void sub_100412714()
{
}

uint64_t sub_100412720@<X0>( void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, void *a5@<X8>, double a6@<D0>)
{
  int v11 = *(_DWORD *)(a4 + 1392);
  int v12 = *(_DWORD *)(a2 + 8);
  uint64_t result = sub_100FBFD6C(v12);
  if ((_DWORD)result)
  {
    uint64_t v15 = a1[21];
    uint64_t v14 = a1[22];
    goto LABEL_67;
  }

  if (v12 <= 15229)
  {
    if (v12 <= 2064)
    {
      if (v12 <= 2021)
      {
        if (v12 > 2009)
        {
          if (v12 == 2010)
          {
            uint64_t v15 = a1[31];
            uint64_t v14 = a1[32];
            goto LABEL_67;
          }

          if (v12 == 2020)
          {
            uint64_t v15 = a1[1];
            uint64_t v14 = a1[2];
            goto LABEL_67;
          }

          goto LABEL_83;
        }

        if (v12 == 6)
        {
          uint64_t v15 = a1[7];
          uint64_t v14 = a1[8];
          goto LABEL_67;
        }

        if (v12 != 65) {
          goto LABEL_83;
        }
        goto LABEL_63;
      }

      if (v12 > 2047)
      {
        if (v12 == 2048)
        {
          uint64_t v15 = a1[15];
          uint64_t v14 = a1[16];
          goto LABEL_67;
        }

        if (v12 == 2061)
        {
          uint64_t v15 = a1[5];
          uint64_t v14 = a1[6];
          goto LABEL_67;
        }

        goto LABEL_83;
      }

      if (v12 != 2022 && v12 != 2024) {
        goto LABEL_83;
      }
LABEL_53:
      uint64_t v15 = a1[39];
      uint64_t v14 = a1[40];
      goto LABEL_67;
    }

    if (v12 > 2149)
    {
      if (v12 > 11804)
      {
        if (v12 == 11805)
        {
          uint64_t v15 = a1[35];
          uint64_t v14 = a1[36];
          goto LABEL_67;
        }

        if (v12 == 15110)
        {
          uint64_t v15 = a1[47];
          uint64_t v14 = a1[48];
          goto LABEL_67;
        }

        goto LABEL_83;
      }

      if (v12 != 2150)
      {
        if (v12 == 3015)
        {
          uint64_t v15 = a1[9];
          uint64_t v14 = a1[10];
          goto LABEL_67;
        }

        goto LABEL_83;
      }
    }

    else
    {
      if (v12 <= 2100)
      {
        if (v12 == 2065)
        {
          uint64_t v15 = a1[29];
          uint64_t v14 = a1[30];
          goto LABEL_67;
        }

        if (v12 == 2071) {
          goto LABEL_32;
        }
        goto LABEL_83;
      }

      if (v12 != 2101)
      {
        if (v12 != 2105) {
          goto LABEL_83;
        }
        goto LABEL_53;
      }
    }

    uint64_t v15 = a1[37];
    uint64_t v14 = a1[38];
    goto LABEL_67;
  }

  if (v12 <= 15669)
  {
    if (v12 > 15459)
    {
      if (v12 > 15591)
      {
        if (v12 == 15592)
        {
LABEL_64:
          uint64_t v20 = a1[43];
          uint64_t v21 = 0x4090000000000100LL;
          goto LABEL_65;
        }

        int v19 = 15610;
      }

      else
      {
        if (v12 == 15460) {
          goto LABEL_63;
        }
        int v19 = 15560;
      }

      if (v12 != v19) {
        goto LABEL_83;
      }
      goto LABEL_63;
    }

    if ((v12 - 15230) > 0x19 || ((1 << (v12 - 126)) & 0x2100001) == 0)
    {
      int v18 = 15350;
LABEL_46:
      if (v12 != v18) {
        goto LABEL_83;
      }
      goto LABEL_64;
    }

BOOL sub_100412BBC(void *a1, double a2)
{
  uint64_t v2 = a1[50];
  if (a1[51] == v2) {
    return 0;
  }
  unint64_t v3 = a1[53];
  char v4 = (void *)(v2 + 8 * (v3 / 0x11));
  unint64_t v5 = a1[54] + v3;
  unint64_t v6 = *v4 + 232 * (v3 % 0x11);
  unint64_t v7 = *(void *)(v2 + 8 * (v5 / 0x11)) + 232 * (v5 % 0x11);
  if (v6 == v7)
  {
    return 0;
  }

  else
  {
    BOOL v8 = 0;
    double v9 = 1.79769313e308;
    do
    {
      uint64_t v10 = *(void *)(v6 + 16);
      if ((v10 & 0xFFFFFFFFFFFFFFFELL) == 2)
      {
        double v11 = *(double *)(v6 + 24);
        if (v11 > a2) {
          return v8;
        }
        double v12 = vabdd_f64(a2, v11);
        if (v12 < v9)
        {
          BOOL v8 = v10 == 2;
          double v9 = v12;
        }
      }

      v6 += 232LL;
      if (v6 - *v4 == 3944)
      {
        unint64_t v13 = v4[1];
        ++v4;
        unint64_t v6 = v13;
      }
    }

    while (v6 != v7);
  }

  return v8;
}

void *sub_100412C94@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(_DWORD *)(a2 + 1392))
  {
    uint64_t v4 = result[27];
    uint64_t v3 = result[28];
  }

  else
  {
    uint64_t v4 = result[25];
    uint64_t v3 = result[26];
  }

  *a3 = v4;
  a3[1] = v3;
  if (v3)
  {
    unint64_t v5 = (unint64_t *)(v3 + 8);
    do
      unint64_t v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  return result;
}

void sub_100412CC8(void *a1, uint64_t a2)
{
  uint64_t v4 = a1 + 49;
  sub_100412F18(a1 + 49, (__int128 *)a2);
  double Current = CFAbsoluteTimeGetCurrent();
  unint64_t v6 = a1[53];
  uint64_t v7 = a1[50];
  uint64_t v8 = a1[51];
  double v9 = (void *)(v7 + 8 * (v6 / 0x11));
  if (v8 == v7)
  {
    unint64_t v10 = 0LL;
    double v11 = a1 + 54;
  }

  else
  {
    unint64_t v10 = *(void *)(v7 + 8 * (v6 / 0x11)) + 232 * (v6 % 0x11);
    double v11 = a1 + 54;
    unint64_t v12 = *(void *)(a1[50] + 8 * ((a1[54] + v6) / 0x11)) + 232 * ((a1[54] + v6) % 0x11);
    if (v10 != v12)
    {
      while (vabdd_f64(Current, *(double *)(v10 + 24)) <= 1200.0)
      {
        v10 += 232LL;
        if (v10 - *v9 == 3944)
        {
          unint64_t v13 = v9[1];
          ++v9;
          unint64_t v10 = v13;
        }

        if (v10 == v12) {
          goto LABEL_17;
        }
      }
    }

    if (v10 == v12)
    {
LABEL_17:
      unint64_t v10 = *(void *)(a1[50] + 8 * ((a1[54] + v6) / 0x11)) + 232 * ((a1[54] + v6) % 0x11);
    }

    else
    {
      unint64_t v14 = v10;
      uint64_t v15 = v9;
      while (1)
      {
        v14 += 232LL;
        if (v14 - *v15 == 3944)
        {
          unint64_t v16 = v15[1];
          ++v15;
          unint64_t v14 = v16;
        }

        if (v14 == v12) {
          break;
        }
        if (vabdd_f64(Current, *(double *)(v14 + 24)) <= 1200.0)
        {
          __int128 v17 = *(_OWORD *)v14;
          __int128 v18 = *(_OWORD *)(v14 + 32);
          *(_OWORD *)(v10 + 16) = *(_OWORD *)(v14 + 16);
          *(_OWORD *)(v10 + 32) = v18;
          *(_OWORD *)unint64_t v10 = v17;
          __int128 v19 = *(_OWORD *)(v14 + 48);
          __int128 v20 = *(_OWORD *)(v14 + 64);
          __int128 v21 = *(_OWORD *)(v14 + 96);
          *(_OWORD *)(v10 + 8sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_OWORD *)(v14 + 80);
          *(_OWORD *)(v10 + 96) = v21;
          *(_OWORD *)(v10 + 48) = v19;
          *(_OWORD *)(v10 + 64) = v20;
          __int128 v22 = *(_OWORD *)(v14 + 112);
          __int128 v23 = *(_OWORD *)(v14 + 128);
          __int128 v24 = *(_OWORD *)(v14 + 160);
          *(_OWORD *)(v10 + 144) = *(_OWORD *)(v14 + 144);
          *(_OWORD *)(v10 + 16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v24;
          *(_OWORD *)(v10 + 112) = v22;
          *(_OWORD *)(v10 + 128) = v23;
          __int128 v25 = *(_OWORD *)(v14 + 176);
          __int128 v26 = *(_OWORD *)(v14 + 192);
          __int128 v27 = *(_OWORD *)(v14 + 208);
          *(void *)(v10 + 224) = *(void *)(v14 + 224);
          *(_OWORD *)(v10 + 192) = v26;
          *(_OWORD *)(v10 + 208) = v27;
          *(_OWORD *)(v10 + 176) = v25;
          v10 += 232LL;
          if (v10 - *v9 == 3944)
          {
            unint64_t v28 = v9[1];
            ++v9;
            unint64_t v10 = v28;
          }
        }
      }

      unint64_t v6 = a1[53];
      uint64_t v7 = a1[50];
      uint64_t v8 = a1[51];
    }
  }

  unint64_t v29 = v6 + *v11;
  double v30 = (char *)(v7 + 8 * (v29 / 0x11));
  if (v8 == v7) {
    uint64_t v31 = 0LL;
  }
  else {
    uint64_t v31 = (char *)(*(void *)v30 + 232 * (v29 % 0x11));
  }
  sub_100412FFC(v4, (char *)v9, (char *)v10, v30, v31);
  if ((unint64_t)(*(void *)(a2 + 16) - 13LL) <= 4)
  {
    uint64_t v32 = (void **)a1[50];
    uint64_t v33 = a1[51];
    a1[54] = 0LL;
    unint64_t v34 = v33 - (void)v32;
    if (v34 >= 0x11)
    {
      do
      {
        operator delete(*v32);
        uint64_t v35 = a1[51];
        uint64_t v32 = (void **)(a1[50] + 8LL);
        a1[50] = v32;
        unint64_t v34 = v35 - (void)v32;
      }

      while (v34 > 0x10);
    }

    if (v34 >> 3 == 1)
    {
      uint64_t v36 = 8LL;
    }

    else
    {
      if (v34 >> 3 != 2) {
        return;
      }
      uint64_t v36 = 17LL;
    }

    a1[53] = v36;
  }

__n128 sub_100412F18(void *a1, __int128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 2 * (v4 - v5) + ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100414A30(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x11)) + 232 * (v7 % 0x11);
  __int128 v9 = *a2;
  __int128 v10 = a2[2];
  *(_OWORD *)(v8 + 16) = a2[1];
  *(_OWORD *)(v8 + 32) = v10;
  *(_OWORD *)unint64_t v8 = v9;
  __int128 v11 = a2[3];
  __int128 v12 = a2[4];
  __int128 v13 = a2[6];
  *(_OWORD *)(v8 + 8sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = a2[5];
  *(_OWORD *)(v8 + 96) = v13;
  *(_OWORD *)(v8 + 48) = v11;
  *(_OWORD *)(v8 + 64) = v12;
  __int128 v14 = a2[7];
  __int128 v15 = a2[8];
  __int128 v16 = a2[10];
  *(_OWORD *)(v8 + 144) = a2[9];
  *(_OWORD *)(v8 + 16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v16;
  *(_OWORD *)(v8 + 112) = v14;
  *(_OWORD *)(v8 + 128) = v15;
  __n128 result = (__n128)a2[11];
  __int128 v18 = a2[12];
  __int128 v19 = a2[13];
  *(void *)(v8 + 224) = *((void *)a2 + 28);
  *(_OWORD *)(v8 + 192) = v18;
  *(_OWORD *)(v8 + 208) = v19;
  *(__n128 *)(v8 + 176) = result;
  ++a1[5];
  return result;
}

unint64_t sub_100412FFC(void *a1, char *a2, char *a3, char *a4, char *a5)
{
  if (a5 == a3) {
    uint64_t v6 = 0LL;
  }
  else {
    uint64_t v6 = 2 * (a4 - a2)
  }
       + ((a4 - a2) >> 3)
  unint64_t v7 = a1[4];
  uint64_t v8 = a1[1];
  __int128 v9 = (char **)(v8 + 8 * (v7 / 0x11));
  if (a1[2] == v8) {
    __int128 v10 = 0LL;
  }
  else {
    __int128 v10 = &(*v9)[232 * (v7 % 0x11)];
  }
  if (a3 == v10) {
    unint64_t v11 = 0LL;
  }
  else {
    unint64_t v11 = 2 * (a2 - (char *)v9)
  }
        + ((a2 - (char *)v9) >> 3)
  v24[0].n128_u64[0] = v8 + 8 * (v7 / 0x11);
  v24[0].n128_u64[1] = (unint64_t)v10;
  sub_100414E10(v24, v11);
  if (v6 >= 1)
  {
    __n128 v12 = v24[0];
    if (v11 <= (unint64_t)(a1[5] - v6) >> 1)
    {
      sub_100414E10(v24, v6);
      sub_100414EB8( v9,  v10,  (char **)v12.n128_u64[0],  (char *)v12.n128_u64[1],  v24[0].n128_u64[0],  (char *)v24[0].n128_u64[1],  v24);
      uint64_t v18 = a1[5] - v6;
      a1[4] += v6;
      a1[5] = v18;
    }

    else
    {
      sub_100414E10(v24, v6);
      __n128 v13 = v24[0];
      unint64_t v14 = a1[4] + a1[5];
      uint64_t v15 = a1[1];
      __int128 v16 = (_BYTE **)(v15 + 8 * (v14 / 0x11));
      if (a1[2] == v15) {
        __int128 v17 = 0LL;
      }
      else {
        __int128 v17 = &(*v16)[232 * (v14 % 0x11)];
      }
      v24[0] = v12;
      sub_100415064(v13.n128_u64[0], (_BYTE *)v13.n128_u64[1], v16, v17, (uint64_t)v24);
      a1[5] -= v6;
      while ((sub_100414DA0(a1, 1) & 1) != 0)
        ;
    }
  }

  unint64_t v19 = a1[4];
  uint64_t v20 = a1[1];
  __int128 v21 = (void *)(v20 + 8 * (v19 / 0x11));
  if (a1[2] == v20) {
    unint64_t v22 = 0LL;
  }
  else {
    unint64_t v22 = *v21 + 232 * (v19 % 0x11);
  }
  v24[0].n128_u64[0] = (unint64_t)v21;
  v24[0].n128_u64[1] = v22;
  sub_100414E10(v24, v11);
  return v24[0].n128_u64[0];
}

uint64_t sub_100413284@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 32);
  *a2 = *(void *)(result + 24);
  a2[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unint64_t *)(v2 + 8);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

void sub_1004132AC(void *a1)
{
  uint64_t v1 = sub_100413764(a1);
  operator delete(v1);
}

uint64_t sub_1004132C0(uint64_t a1)
{
  *(_BYTE *)a1 = 0;
  unsigned __int8 v3 = 0;
  sub_1012049AC((unsigned __int8 *)(a1 + 1), "fForceAssistedCyclingOverrideToTrue", &v3, 0);
  *(int64x2_t *)(a1 + 8) = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  *(_DWORD *)(a1 + 24) = 0;
  uuid_clear((unsigned __int8 *)(a1 + 28));
  return a1;
}

double sub_10041331C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101837A30);
  }
  unint64_t v4 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(_DWORD *)(a1 + 400);
    uint64_t v6 = *(void *)(a1 + 408);
    int v7 = *(_DWORD *)(a1 + 152);
    int v8 = *(_DWORD *)(a1 + 320);
    double v9 = *(float *)(a1 + 296);
    *(_DWORD *)std::stringbuf::string_type buf = 67110144;
    int v24 = v5;
    __int16 v25 = 2048;
    uint64_t v26 = v6;
    __int16 v27 = 1024;
    int v28 = v7;
    __int16 v29 = 1024;
    int v30 = v8;
    __int16 v31 = 2048;
    double v32 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Dummy, Static, step count: %d, step distance: %f, activity: %d, type: %d, vm: %f",  buf,  0x28u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101837A30);
    }
    uint64_t v11 = *(void *)(a1 + 408);
    int v12 = *(_DWORD *)(a1 + 152);
    int v13 = *(_DWORD *)(a1 + 320);
    double v14 = *(float *)(a1 + 296);
    LOWORD(v18) = 2048;
    *(void *)((char *)&v18 + 2) = v11;
    WORD5(v18) = 1024;
    HIDWORD(v18) = v12;
    __int16 v19 = 1024;
    int v20 = v13;
    __int16 v21 = 2048;
    double v22 = v14;
    LODWORD(v16) = 40;
    uint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "Dummy, Static, step count: %d, step distance: %f, activity: %d, type: %d, vm: %f",  &v17,  v16,  67110144,  (_DWORD)v18,  *((double *)&v18 + 1));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLMetsInfo CLNatalieDummyModel::computeMETS(const CLNatalieModelInput &)",  "%s\n",  v15);
  }

  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)&double result = 3LL;
  *(void *)(a2 + 32) = 3LL;
  return result;
}

void sub_10041355C(id a1)
{
  qword_1019344D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

double sub_100413588@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (qword_1019344D0 != -1) {
    dispatch_once(&qword_1019344D0, &stru_101837A30);
  }
  unint64_t v4 = (os_log_s *)qword_1019344D8;
  if (os_log_type_enabled((os_log_t)qword_1019344D8, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(_DWORD *)(a1 + 152);
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    int v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "ScubaDiving, Static, activity: %d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344D0 != -1) {
      dispatch_once(&qword_1019344D0, &stru_101837A30);
    }
    int v7 = *(_DWORD *)(a1 + 152);
    v9[0] = 67109120;
    v9[1] = v7;
    int v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344D8,  2LL,  "ScubaDiving, Static, activity: %d",  v9);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLMetsInfo CLCalorieScubaDivingModel::computeMETS(const CLNatalieModelInput &)",  "%s\n",  v8);
  }

  *(_OWORD *)a2 = xmmword_1012E8680;
  *(void *)(a2 + 16) = 0x40A8000000000000LL;
  *(void *)(a2 + 24) = 0LL;
  *(void *)&double result = 0x1500000003LL;
  *(void *)(a2 + 32) = 0x1500000003LL;
  return result;
}

void *sub_100413764(void *a1)
{
  *a1 = off_101837988;
  uint64_t v2 = (uint64_t)(a1 + 1);
  sub_10041385C(a1 + 49);
  sub_10000AE14((uint64_t)(a1 + 47));
  sub_10000AE14((uint64_t)(a1 + 45));
  sub_10000AE14((uint64_t)(a1 + 43));
  sub_10000AE14((uint64_t)(a1 + 41));
  sub_10000AE14((uint64_t)(a1 + 39));
  sub_10000AE14((uint64_t)(a1 + 37));
  sub_10000AE14((uint64_t)(a1 + 35));
  sub_10000AE14((uint64_t)(a1 + 33));
  sub_10000AE14((uint64_t)(a1 + 31));
  sub_10000AE14((uint64_t)(a1 + 29));
  sub_10000AE14((uint64_t)(a1 + 27));
  sub_10000AE14((uint64_t)(a1 + 25));
  sub_10000AE14((uint64_t)(a1 + 23));
  sub_10000AE14((uint64_t)(a1 + 21));
  sub_10000AE14((uint64_t)(a1 + 19));
  sub_10000AE14((uint64_t)(a1 + 17));
  sub_10000AE14((uint64_t)(a1 + 15));
  sub_10000AE14((uint64_t)(a1 + 13));
  sub_10000AE14((uint64_t)(a1 + 11));
  sub_10000AE14((uint64_t)(a1 + 9));
  sub_10000AE14((uint64_t)(a1 + 7));
  sub_10000AE14((uint64_t)(a1 + 5));
  sub_10000AE14((uint64_t)(a1 + 3));
  sub_10000AE14(v2);
  return a1;
}

uint64_t sub_10041385C(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  unsigned __int8 v3 = (void **)a1[2];
  a1[5] = 0LL;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      unsigned __int8 v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 8LL;
  }

  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 17LL;
  }

  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    int v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void *sub_1004138F0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837AB0;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100413938(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100413958(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100413970(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_1004139B0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837B28;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_1004139F8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100413A18(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100413A30(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100413A70(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837BA0;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100413AB8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100413AD8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100413AF0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100413B30(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837C18;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100413B78(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100413B98(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100413BB0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100413BF0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837C90;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100413C38(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100413C58(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100413C70(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100413CB0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837D08;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100413CF8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100413D18(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100413D30(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100413D70(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837D80;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100413DB8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100413DD8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100413DF0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100413E30(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837DF8;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100413E78(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100413E98(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100413EB0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100413EF0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837E70;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100413F38(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100413F58(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100413F70(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100413FB0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837EE8;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100413FF8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100414018(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100414030(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100414070(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837F60;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_1004140B8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004140D8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1004140F0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100414130(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101837FD8;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100414178(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100414198(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1004141B0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_1004141F0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101838050;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100414238(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100414258(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100414270(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_1004142B0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_1018380C8;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_1004142F8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100414318(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100414330(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100414370(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101838140;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_1004143B8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004143D8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1004143F0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100414430(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_1018381B8;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100414478(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100414498(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1004144B0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_1004144F0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101838230;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100414538(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100414558(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100414570(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_1004145B0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_1018382A8;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_1004145F8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100414618(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100414630(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100414670(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101838320;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_1004146B8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004146D8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1004146F0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100414730(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101838398;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100414778(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100414798(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1004147B0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_1004147F0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101838410;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_100414838(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100414858(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100414870(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_1004148B0(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101838488;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_1004148F8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100414918(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100414930(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void *sub_100414970(void *a1, uint64_t a2)
{
  *a1 = a2;
  unint64_t v4 = operator new(0x20uLL);
  void *v4 = &off_101838500;
  v4[1] = 0LL;
  v4[2] = 0LL;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_1004149B8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004149D8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1004149F0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

void sub_100414A30(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x11;
  unint64_t v4 = v2 - 17;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    int v7 = (void *)a1[1];
    int v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    double v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)int v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      unint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      sqlite3_int64 v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      int v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        int v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        sqlite3_int64 v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)sqlite3_int64 v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100414CF8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100414D44(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x11) {
    a2 = 1;
  }
  if (v2 < 0x22) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8LL;
    *(void *)(a1 + 32) -= 17LL;
  }

  return v4 ^ 1u;
}

uint64_t sub_100414DA0(void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0LL;
  }
  else {
    uint64_t v4 = 2 * (v2 - v3) + ((v2 - v3) >> 3) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x11) {
    a2 = 1;
  }
  if (v5 < 0x22) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8LL;
  }

  return v7 ^ 1u;
}

void *sub_100414E10(void *result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)*result;
    unint64_t v3 = a2 + 0x34F72C234F72C235LL * ((uint64_t)(result[1] - *(void *)*result) >> 3);
    if ((uint64_t)v3 < 1)
    {
      unint64_t v5 = 16 - v3;
      uint64_t v6 = &v2[-(v5 / 0x11)];
      float32x2_t *result = v6;
      unint64_t v4 = *v6 + 232 * (17 * (v5 / 0x11) - v5) + 3712;
    }

    else
    {
      float32x2_t *result = &v2[v3 / 0x11];
      unint64_t v4 = v2[v3 / 0x11] + 232 * (v3 % 0x11);
    }

    result[1] = v4;
  }

  return result;
}

__n128 sub_100414EB8@<Q0>( char **a1@<X1>, char *a2@<X2>, char **a3@<X3>, char *a4@<X4>, void *a5@<X5>, char *a6@<X6>, __n128 *a7@<X8>)
{
  if (a1 == a3)
  {
    __int16 v19 = a2;
    uint64_t v18 = a4;
    uint64_t v15 = a5;
    uint64_t v16 = a6;
  }

  else
  {
    uint64_t v13 = a3 - 1;
    uint64_t v12 = *a3;
    BOOL v14 = a4;
    uint64_t v15 = a5;
    uint64_t v16 = a6;
    while (1)
    {
      sub_100414F84(v12, v14, v15, v16, &v21);
      uint64_t v16 = (char *)v22.n128_u64[1];
      uint64_t v15 = (void *)v22.n128_u64[0];
      if (v13 == a1) {
        break;
      }
      uint64_t v17 = *v13--;
      uint64_t v12 = v17;
      BOOL v14 = v17 + 3944;
    }

    uint64_t v18 = *a1 + 3944;
    __int16 v19 = a2;
  }

  sub_100414F84(v19, v18, v15, v16, &v21);
  __n128 result = v22;
  a7->n128_u64[0] = (unint64_t)a3;
  a7->n128_u64[1] = (unint64_t)a4;
  a7[1] = result;
  return result;
}

void *sub_100414F84@<X0>(char *a1@<X1>, char *a2@<X2>, void *a3@<X3>, char *a4@<X4>, void *a5@<X8>)
{
  uint64_t v6 = a3;
  if (a1 == a2)
  {
    double v9 = a1;
  }

  else
  {
    double v9 = a2;
    uint64_t v10 = *a3;
    uint64_t v11 = a2;
    while (1)
    {
      uint64_t v12 = 0x34F72C234F72C235LL * ((uint64_t)&a4[-v10] >> 3);
      if (0x34F72C234F72C235LL * ((v11 - a1) >> 3) < v12) {
        uint64_t v12 = 0x34F72C234F72C235LL * ((v11 - a1) >> 3);
      }
      v11 -= 232 * v12;
      a4 -= 232 * v12;
      if (v12) {
        __n128 result = memmove(a4, v11, 232 * v12);
      }
      if (v11 == a1) {
        break;
      }
      uint64_t v14 = *--v6;
      uint64_t v10 = v14;
      a4 = (char *)(v14 + 3944);
    }

    if ((char *)(*v6 + 3944LL) == a4)
    {
      uint64_t v15 = (char *)v6[1];
      ++v6;
      a4 = v15;
    }
  }

  *a5 = v9;
  a5[1] = v6;
  a5[2] = a4;
  return result;
}

double sub_100415064(void *a1, _BYTE *a2, _BYTE **a3, _BYTE *a4, uint64_t a5)
{
  int v7 = *(void ***)a5;
  int v8 = *(char **)(a5 + 8);
  if (a1 != a3)
  {
    uint64_t v10 = a1 + 1;
    for (uint64_t i = (_BYTE *)(*a1 + 3944LL); ; uint64_t i = v12 + 3944)
    {
      sub_1004150F4(a2, v8, i, v7, &v14);
      int v8 = (char *)*((void *)&v15 + 1);
      int v7 = (void **)v15;
      *(void *)a5 = v15;
      *(void *)(a5 + 8) = v8;
      if (v10 == a3) {
        break;
      }
      uint64_t v12 = (_BYTE *)*v10++;
      a2 = v12;
    }

    a2 = *a3;
  }

  sub_1004150F4(a2, v8, a4, v7, &v14);
  double result = *(double *)&v15;
  *(_OWORD *)a5 = v15;
  return result;
}

void *sub_1004150F4@<X0>( _BYTE *__src@<X1>, char *__dst@<X4>, _BYTE *a3@<X2>, void **a4@<X3>, void *a5@<X8>)
{
  uint64_t v6 = a4;
  int v7 = __src;
  if (__src == a3)
  {
    double v9 = __src;
  }

  else
  {
    double v9 = a3;
    uint64_t v6 = a4 + 1;
    uint64_t v10 = (char *)*a4;
    while (1)
    {
      uint64_t v11 = 0x34F72C234F72C235LL * ((v10 - __dst + 3944) >> 3);
      uint64_t v12 = 0x34F72C234F72C235LL * ((v9 - v7) >> 3) >= v11 ? v11 : 0x34F72C234F72C235LL * ((v9 - v7) >> 3);
      if (v12) {
        double result = memmove(__dst, v7, 232 * v12);
      }
      v7 += 232 * v12;
      if (v7 == v9) {
        break;
      }
      uint64_t v14 = (char *)*v6++;
      uint64_t v10 = v14;
      __dst = v14;
    }

    __dst += 232 * v12;
    else {
      --v6;
    }
  }

  *a5 = v9;
  a5[1] = v6;
  a5[2] = __dst;
  return result;
}

void sub_100415284(id a1)
{
  qword_101995748 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLTimeManagerSilo");
}

uint64_t sub_100415338(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100415740;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101995758 != -1) {
    dispatch_once(&qword_101995758, block);
  }
  return qword_1019A1008;
}

void sub_100415540(uint64_t a1, unint64_t a2)
{
  double v2 = (double)a2 / 1000.0 - kCFAbsoluteTimeIntervalSince1970;
  if (vabdd_f64(v2, *(double *)&qword_101995760) > 600.0)
  {
    *(double *)&qword_101995760 = (double)a2 / 1000.0 - kCFAbsoluteTimeIntervalSince1970;
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101838750);
    }
    unint64_t v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134217984;
      double v8 = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Sending along GPS time %.2f to CoreTime",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101838750);
      }
      int v5 = 134217984;
      double v6 = v2;
      unint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Sending along GPS time %.2f to CoreTime",  COERCE_DOUBLE(&v5));
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTimeManager::setGpsTime(uint64_t)", "%s\n", v4);
    }

    TMSetSourceTime(type metadata for , v2, 0.1);
  }

const void *sub_100415740(uint64_t a1)
{
  double v2 = operator new(0x98uLL);
  double result = sub_10041578C(v2, *(void **)(a1 + 32));
  qword_1019A1008 = (uint64_t)v2;
  return result;
}

void sub_100415778(_Unwind_Exception *a1)
{
}

const void *sub_10041578C(const void *a1, void *a2)
{
  uint64_t v3 = sub_100415A68((uint64_t)a1, "CLTimeManager", a2);
  *(_BYTE *)(v3 + 109) = 1;
  unint64_t v4 = (BOOL *)(v3 + 109);
  *(void *)(v3 + 128) = 0LL;
  *(void *)uint64_t v3 = &off_101838598;
  *(void *)(v3 + 136) = 0LL;
  *(void *)(v3 + 144) = 0xBFF0000000000000LL;
  sub_1002F0B04(buf);
  sub_1002A6F64(*(uint64_t *)buf, "EnableProactiveBBTimeTransfer", v4);
  int v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      unint64_t v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_101838750);
  }
  double v8 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    BOOL v9 = *v4;
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "EnableProactiveBBTimeTransfer,%d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101838750);
    }
    BOOL v12 = *v4;
    v14[0] = 67109120;
    v14[1] = v12;
    uint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "EnableProactiveBBTimeTransfer,%d",  v14);
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLTimeManager::CLTimeManager(id<CLIntersiloUniverse>)", "%s\n", v13);
  }

  if (*v4)
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterAddObserver( DarwinNotifyCenter,  a1,  (CFNotificationCallback)sub_100415B04,  type metadata for Builtin.UnsafeValueBuffer,  0LL,  CFNotificationSuspensionBehaviorDeliverImmediately);
    sub_100415D24((uint64_t)a1);
  }

  return a1;
}

void sub_100415A18(_Unwind_Exception *a1)
{
  uint64_t v5 = *v3;
  *uint64_t v3 = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  sub_100415D5C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100415A68(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1018387A0;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 4sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_100415AE8(_Unwind_Exception *exception_object)
{
}

void sub_100415B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838730);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLTimeManager::onBBTimeActiveNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838730);
    }
    uint64_t v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      __int16 v19 = "";
      __int16 v20 = 2082;
      uint64_t v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLTimeManager::onBBTimeActiveNotification, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v15 = 0;
  }

  id v12 = [*(id *)(a2 + 32) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_100418FE0;
  v13[3] = &unk_10182D1B8;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_100415D04( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100415D24(uint64_t a1)
{
  else {
    sub_100415E88(a1);
  }
}

uint64_t sub_100415D5C(uint64_t a1)
{
  *(void *)a1 = off_1018387A0;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_100415DD0(uint64_t a1)
{
  *(void *)a1 = &off_101838598;
  if (*(_BYTE *)(a1 + 109)) {
    sub_100415E88(a1);
  }
  *(_BYTE *)(a1 + 108) = 1;
  sub_100416D9C((uint64_t *)(a1 + 136), 0LL);
  uint64_t v2 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  return sub_100415D5C(a1);
}

void sub_100415E40(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100415DD0(a1);
  operator delete(v1);
}

void sub_100415E54(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 109)) {
    sub_100415E88(a1);
  }
  *(_BYTE *)(a1 + 108) = 1;
}

void sub_100415E88(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + 136);
  if (*(void *)(a1 + 136))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101838750);
    }
    uint64_t v2 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Stopping proactive time", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101838750);
      }
      v4[0] = 0;
      uint64_t v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Stopping proactive time",  v4,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTimeManager::stopBBTimeActive()", "%s\n", v3);
    }
  }

  sub_100416D9C(v1, 0LL);
}

void *sub_10041602C@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_1004160A4()
{
  return 1LL;
}

uint64_t sub_1004160AC()
{
  return 1LL;
}

uint64_t sub_1004160B4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 136) == a2)
  {
    uint64_t v2 = a1;
    if (qword_101934A70 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    sub_1012392AC(qword_101934A70 == -1);
  }

  dispatch_once(&qword_101934A70, &stru_101838750);
LABEL_3:
  uint64_t v3 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Resuming proactive time", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101838750);
    }
    v6[0] = 0;
    uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Resuming proactive time",  v6,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTimeManager::onBBTimeActiveRetry(CLPersistentTimer *)", "%s\n", v5);
  }

  return sub_100416264(v2);
}

void sub_100416264(uint64_t a1)
{
  if (!*(void *)(a1 + 128))
  {
    sub_101239418();
    __break(1u);
LABEL_21:
    dispatch_once(&qword_101934880, &stru_101838770);
    goto LABEL_13;
  }

  uint64_t v1 = a1;
  double Current = CFAbsoluteTimeGetCurrent();
  double v4 = *(double *)(v1 + 144);
  if (v4 > 0.0 && v4 - Current < 1800.0 && Current < v4 + 900.0 + 5.0)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101838750);
    }
    uint64_t v5 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(void *)(v1 + 144);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      *(void *)&uint8_t buf[4] = v6;
      __int16 v25 = 2048;
      uint64_t v26 = 0x408C200000000000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Deferring proactive time, last attempt was at %f, which is less than minimum interval %f ago",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101838750);
      }
      uint64_t v18 = *(void *)(v1 + 144);
      *(_DWORD *)uint64_t v23 = 134218240;
      *(void *)&v23[4] = v18;
      *(_WORD *)&v23[12] = 2048;
      *(void *)&v23[14] = 0x408C200000000000LL;
      LODWORD(v2sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 22;
      __int16 v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Deferring proactive time, last attempt was at %f, which is less than minimum interval %f ago",  COERCE_DOUBLE(v23),  v20);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTimeManager::startBBTimeActiveJob()", "%s\n", v19);
      if (v19 != buf) {
        free(v19);
      }
    }

    unint64_t v7 = operator new(0x38uLL);
    sub_1010DDBC0(buf, "CLTimeManager::fBBRetryTimer");
    sub_1006B5FBC( v7,  buf,  sub_100416DC8,  v1,  *(void *)(v1 + 40),  1LL,  *(double *)(v1 + 144) + 1200.0,  1.79769313e308,  (*(double *)(v1 + 144) - Current + 900.0) / (*(double *)(v1 + 144) - Current + 1200.0));
    sub_100416D9C((uint64_t *)(v1 + 136), (uint64_t)v7);
    if (v27 < 0) {
      operator delete(*(void **)buf);
    }
    return;
  }

  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)uint64_t v23 = _Q0;
  *(_WORD *)&v23[16] = 0;
  *(void *)&v23[20] = 10LL;
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934880 != -1) {
    goto LABEL_21;
  }
LABEL_13:
  uint64_t v13 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#wigo,on,TimeManager", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    v22[0] = 0;
    int v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "#wigo,on,TimeManager",  v22,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTimeManager::startBBTimeActiveJob()", "%s\n", v17);
    if (v17 != buf) {
      free(v17);
    }
  }

  AnalyticsSendEventLazy(@"com.apple.locationd.position.GNSS.WIGO", &stru_101838668);
  [*(id *)(*(void *)(v1 + 128) + 16) register:*(void *)(*(void *)(v1 + 128) + 8) forNotification:0 registrationInfo:sub_100419014(v23)];
  *(double *)(v1 + 144) = Current;
  uint64_t v14 = operator new(0x38uLL);
  sub_1010DDBC0(buf, "CLTimeManager::fBBRetryTimer");
  sub_1006B5FBC(v14, buf, sub_100416DC8, v1, *(void *)(v1 + 40), 1LL, Current + 1200.0, 1.79769313e308, 0.75);
  sub_100416D9C((uint64_t *)(v1 + 136), (uint64_t)v14);
  if (v27 < 0) {
    operator delete(*(void **)buf);
  }
  uint64_t v15 = *(void *)(v1 + 128);
  uint64_t v16 = *(void **)(v1 + 40);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  v21[2] = sub_100416FA4;
  v21[3] = &unk_101830538;
  v21[4] = v1;
  v21[5] = v15;
  [v16 afterInterval:v21 async:18.0];
}

void sub_10041674C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  operator delete(v28);
  _Unwind_Resume(a1);
}

void sub_100416788(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 109))
  {
    if (sub_1004F83D4() && !*(void *)(a1 + 136))
    {
      if (!*(void *)(a1 + 128)) {
        sub_100A9E608();
      }
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101838750);
      }
      uint64_t v2 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Starting proactive time", buf, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_101838750);
        }
        v6[0] = 0;
        uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "Starting proactive time",  v6,  2);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTimeManager::startBBTimeActive()", "%s\n", v5);
      }

      sub_100416264(a1);
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101838750);
    }
    uint64_t v3 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "proactive time is NOT enabled", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101838750);
      }
      v6[0] = 0;
      double v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "proactive time is NOT enabled",  v6,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTimeManager::startBBTimeActive()", "%s\n", v4);
    }
  }

void sub_100416BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838730);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    uint64_t v5 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLTimeManager::onBBNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v5, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838730);
    }
    uint64_t v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v10 = 0;
      __int16 v11 = 2082;
      id v12 = "";
      __int16 v13 = 2082;
      uint64_t v14 = "activity";
      __int16 v15 = 2050;
      uint64_t v16 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLTimeManager::onBBNotification, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v8 = 0;
  }

  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_100416D80( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100416D9C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    double v4 = (void *)sub_1006B6010(v3);
    operator delete(v4);
  }

void sub_100416DC8(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838730);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    double v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLTimeManager::onBBTimeActiveRetry",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838730);
    }
    uint64_t v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      __int16 v11 = "";
      __int16 v12 = 2082;
      __int16 v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLTimeManager::onBBTimeActiveRetry, event:%{public, location:escape_only}s, this :%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  sub_1004160B4(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100416F78( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

NSDictionary *__cdecl sub_100416F98(id a1)
{
  return (NSDictionary *)&off_1018D6788;
}

void *sub_100416FA4(void *result)
{
  uint64_t v1 = result[4];
  if (*(void *)(v1 + 128) == result[5])
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_101838750);
    }
    uint64_t v2 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      if (*(void *)(v1 + 136)) {
        uint64_t v3 = "Pausing";
      }
      else {
        uint64_t v3 = "Stopped";
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      __int16 v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s proactive time", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_101838750);
      }
      if (*(void *)(v1 + 136)) {
        uint64_t v5 = "Pausing";
      }
      else {
        uint64_t v5 = "Stopped";
      }
      int v8 = 136315138;
      int v9 = v5;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "%s proactive time",  (const char *)&v8);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTimeManager::startBBTimeActiveJob()_block_invoke", "%s\n", v6);
    }

    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101838770);
    }
    double v4 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#wigo,off,TimeManager", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101838770);
      }
      LOWORD(v8) = 0;
      char v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  0LL,  "#wigo,off,TimeManager",  &v8,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTimeManager::startBBTimeActiveJob()_block_invoke", "%s\n", v7);
    }

    AnalyticsSendEventLazy(@"com.apple.locationd.position.GNSS.WIGO", &stru_101838688);
    return [*(id *)(*(void *)(v1 + 128) + 16) unregister:*(void *)(*(void *)(v1 + 128) + 8) forNotification:0];
  }

  return result;
}

NSDictionary *__cdecl sub_1004172E4(id a1)
{
  return (NSDictionary *)&off_1018D67B0;
}

void sub_1004172F0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  int v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLTimeManager");
  sub_1004173B8((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *int v8 = &off_1018386B8;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10041738C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1004173B8(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_101838880;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    __int16 v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_10041748C(uint64_t a1, uint64_t a2)
{
  HIDWORD(v14) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v14 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101838730);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        __int16 v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        double v20 = v11;
        __int16 v21 = 1026;
        int v22 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101838730);
        }
        __int16 v12 = (void *)(a1 + 8);
        int v15 = 136446466;
        uint64_t v16 = v12;
        __int16 v17 = 1026;
        int v18 = a2;
        LODWORD(v14) = 18;
        id v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                        &v15,
                        v14);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLTimeManager_Type::Notification, CLTimeManager_Type::NotificationData>::removeClient( int) [Notification_T = CLTimeManager_Type::Notification, NotificationData_T = CLTimeManager_Type::Notification Data, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
      }
    }
  }

uint64_t sub_100417700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101937EB8);
}

uint64_t sub_100417714(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)uint64_t v42 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          uint64_t v24 = (uint64_t *)v18;
        }
        else {
          uint64_t v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          __int16 v29 = (uint64_t *)v25;
        }
        else {
          __int16 v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v40 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)std::stringbuf::string_type buf = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        *(_DWORD *)std::stringbuf::string_type buf = 0;
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          uint64_t v36 = sub_100419130(buf);
          sub_1004191B0((_BYTE *)a1, (uint64_t)v42, (uint64_t)&v40, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v40 = a1 + 64;
        char v30 = byte_101937EB9;
        HIDWORD(v39) = v17;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v30;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        __int128 v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v39) = *a3;
        *(void *)std::stringbuf::string_type buf = (char *)&v39 + 4;
        unint64_t v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)std::stringbuf::string_type buf = &v41;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        *(_DWORD *)std::stringbuf::string_type buf = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v42 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838730);
  }
  uint64_t v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    int v15 = (void *)(a1 + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v46 = 1026;
    int v47 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838730);
    }
    sqlite3_int64 v37 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t v42 = 136446466;
    *(void *)&v42[4] = v37;
    __int16 v43 = 1026;
    int v44 = a2;
    LODWORD(v39) = 18;
    uint64_t v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                    v42,
                    v39);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLTimeManager_Type::Notification, CLTimeManager_Type::NotificationData>::registerForNotifi cation(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLTimeManager_Type::Notification , NotificationData_T = CLTimeManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    if (v38 != buf) {
      free(v38);
    }
    return 0LL;
  }

  return result;
}

BOOL sub_100417B70(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838730);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      __int16 v29 = v11;
      __int16 v30 = 1026;
      int v31 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101838730);
      }
      int v22 = (void *)(a1 + 8);
      int v24 = 136446466;
      uint64_t v25 = v22;
      __int16 v26 = 1026;
      int v27 = a2;
      BOOL v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                      &v24,
                      18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLTimeManager_Type::Notification, CLTimeManager_Type::NotificationData>::clientRegistere d(int, const Notification_T &) [Notification_T = CLTimeManager_Type::Notification, NotificationData_T = CLTimeMa nager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100417DF0(char *a1, int a2, int *a3)
{
  HIDWORD(v33) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                uint64_t v25 = (uint64_t *)v20;
              }
              else {
                uint64_t v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v33 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101838730);
              }
              __int16 v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v27 = a1 + 8;
                if (a1[31] < 0) {
                  int v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v43 >= 0) {
                  BOOL v28 = __p;
                }
                else {
                  BOOL v28 = (void **)__p[0];
                }
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v35 = 2082;
                uint64_t v36 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v43 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101838730);
                }
                __int16 v29 = a1 + 8;
                if (a1[31] < 0) {
                  __int16 v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v37 >= 0) {
                  int v31 = buf;
                }
                else {
                  int v31 = *(_BYTE **)buf;
                }
                int v38 = 136446466;
                uint64_t v39 = v29;
                __int16 v40 = 2082;
                int v41 = v31;
                LODWORD(v33) = 22;
                char v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                                &v38,
                                v33);
                if (v37 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLTimeManager_Type::Notification, CLTimeManager_Type::NotificationData>::unreg isterForNotification(int, const Notification_T &) [Notification_T = CLTimeManager_Type::Notification, NotificationData_T = CLTimeManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v32);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100418178(uint64_t a1, int *a2, _DWORD *a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 == v3) {
    return 0LL;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0LL;
  }
  int v11 = *(_DWORD **)(v7 + 64);
  if (!v11) {
    return 0LL;
  }
  *a3 = *v11;
  return 1LL;
}

uint64_t sub_1004181D8(uint64_t a1, int *a2, int *a3)
{
  int v6 = operator new(0x20uLL);
  v6[2] = 0LL;
  void *v6 = off_1018388C8;
  v6[1] = 0LL;
  int v7 = *a3;
  *((void *)&v14 + 1) = v6;
  *((_DWORD *)v6 + 6) = v7;
  *(void *)&__int128 v14 = v6 + 3;
  int v13 = *a2;
  int v15 = &v13;
  int v8 = sub_10023347C((uint64_t **)(a1 + 56), &v13, (uint64_t)&unk_1012CF090, &v15);
  sub_10005F550((uint64_t)(v8 + 8), &v14);
  BOOL v9 = (std::__shared_weak_count *)*((void *)&v14 + 1);
  if (*((void *)&v14 + 1))
  {
    BOOL v10 = (unint64_t *)(*((void *)&v14 + 1) + 8LL);
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  return 1LL;
}

void sub_1004182AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1004182C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  &v5,  a3,  a4,  0LL);
}

void sub_1004182F8(uint64_t a1, unsigned int *a2, _DWORD *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    BOOL v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838730);
    }
    unint64_t v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      BOOL v12 = (void *)(a1 + 8);
      int v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v66 = 2082;
      __int16 v67 = v12;
      __int16 v68 = 2050;
      __int16 v69 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    __int128 v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      __int128 v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)double v70 = &v70[8];
      memset(&v70[8], 0, 24);
      __int16 v71 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v70);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v69;
      if (v69)
      {
        p_shared_owners = (unint64_t *)&v69->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v71;
      if (v71)
      {
        uint64_t v25 = (unint64_t *)&v71->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v70, *(void **)&v70[8]);
    }

    if (a4)
    {
      int v27 = operator new(0x20uLL);
      v27[2] = 0LL;
      *int v27 = off_1018388C8;
      v27[1] = 0LL;
      *((_DWORD *)v27 + 6) = *a3;
      *(void *)std::stringbuf::string_type buf = v27 + 3;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      BOOL v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        __int16 v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    int v31 = sub_100419AFC(a3);
    if (a5 == -1)
    {
      sub_100419B7C((void *)a1, (int *)a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          char v37 = (uint64_t *)v33;
        }
        else {
          char v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v63 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      __int16 v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          char v43 = (unint64_t *)v38;
        }
        else {
          char v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          __int16 v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        uint64_t v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101838730);
        }
        int v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v70, a1, a2);
          if (v70[23] >= 0) {
            __int16 v46 = v70;
          }
          else {
            __int16 v46 = *(_BYTE **)v70;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&buf[14] = a5;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v70[23] & 0x80000000) != 0) {
            operator delete(*(void **)v70);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101838730);
          }
          int v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            uint64_t v49 = __p;
          }
          else {
            uint64_t v49 = (void **)__p[0];
          }
          *(_DWORD *)double v70 = 136315650;
          *(void *)&v70[4] = v47;
          *(_WORD *)&v70[12] = 1024;
          *(_DWORD *)&v70[14] = a5;
          *(_WORD *)&v70[18] = 2080;
          *(void *)&v70[20] = v49;
          uint64_t v50 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
                          v70,
                          28,
                          v59);
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLTimeManager_Type::Notification, CLTimeManager_Type::NotificationData>::notifyClien tsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLTimeMana ger_Type::Notification, NotificationData_T = CLTimeManager_Type::NotificationData, NotificationInfo_T = char , RegistrationInfo_T = char]",  "%s\n",  v50);
          if (v50 != buf) {
            free(v50);
          }
        }

        goto LABEL_83;
      }

      uint64_t v62 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v53 = v40[3].n128_i64[0];
      uint64_t v51 = v40 + 3;
      uint64_t v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v34 + 32);
      __int128 v55 = v51;
      do
      {
        int v56 = v52[1].n128_i32[3];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          uint64_t v58 = v52;
        }
        else {
          uint64_t v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          __int128 v55 = v52;
        }
        uint64_t v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_1004191B0((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v31);
    }

void sub_100418930( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_10041897C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838730);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      uint64_t v34 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101838730);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v29 = 136315138;
      unint64_t v30 = v4;
      int v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
                     (const char *)&v29);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLTimeManager_Type::Notification, CLTimeManager_Type::NotificationData>::listClients() [ Notification_T = CLTimeManager_Type::Notification, NotificationData_T = CLTimeManager_Type::NotificationData, No tificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838730);
    }
    int v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v7 = (void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      uint64_t v34 = v7;
      __int16 v35 = 2048;
      v36[0] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101838730);
      }
      uint64_t v25 = (void *)(a1 + 8);
      uint64_t v26 = *(void *)(a1 + 96);
      int v29 = 136315394;
      unint64_t v30 = v25;
      __int16 v31 = 2048;
      v32[0] = v26;
      int v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
                      (const char *)&v29,
                      22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLTimeManager_Type::Notification, CLTimeManager_Type::NotificationData>::listClients() [ Notification_T = CLTimeManager_Type::Notification, NotificationData_T = CLTimeManager_Type::NotificationData, No tificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v27);
    }

    BOOL v9 = *(void **)(a1 + 80);
    if (v9 != (void *)(a1 + 88))
    {
      BOOL v10 = (void *)(a1 + 8);
      do
      {
        unint64_t v11 = (void *)v9[5];
        if (v11 != v9 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101838730);
            }
            BOOL v12 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              int v13 = (void *)(a1 + 8);
              int v14 = *((_DWORD *)v9 + 8);
              int v15 = *((_DWORD *)v11 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              uint64_t v34 = v13;
              __int16 v35 = 1024;
              LODWORD(v36[0]) = v14;
              WORD2(v36[0]) = 1024;
              *(_DWORD *)((char *)v36 + 6) = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101838730);
              }
              BOOL v19 = (void *)(a1 + 8);
              int v20 = *((_DWORD *)v9 + 8);
              int v21 = *((_DWORD *)v11 + 7);
              int v29 = 136315650;
              unint64_t v30 = v19;
              __int16 v31 = 1024;
              LODWORD(v32[0]) = v20;
              WORD2(v32[0]) = 1024;
              *(_DWORD *)((char *)v32 + 6) = v21;
              int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                              (const char *)&v29,
                              24,
                              v28);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLTimeManager_Type::Notification, CLTimeManager_Type::NotificationData>::listCli ents() [Notification_T = CLTimeManager_Type::Notification, NotificationData_T = CLTimeManager_Type::Noti ficationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v22);
            }

            signed __int32 v16 = (void *)v11[1];
            if (v16)
            {
              do
              {
                int v17 = v16;
                signed __int32 v16 = (void *)*v16;
              }

              while (v16);
            }

            else
            {
              do
              {
                int v17 = (void *)v11[2];
                BOOL v18 = *v17 == (void)v11;
                unint64_t v11 = v17;
              }

              while (!v18);
            }

            unint64_t v11 = v17;
          }

          while (v17 != v9 + 6);
        }

        unint64_t v23 = (void *)v9[1];
        if (v23)
        {
          do
          {
            BOOL v24 = v23;
            unint64_t v23 = (void *)*v23;
          }

          while (v23);
        }

        else
        {
          do
          {
            BOOL v24 = (void *)v9[2];
            BOOL v18 = *v24 == (void)v9;
            BOOL v9 = v24;
          }

          while (!v18);
        }

        BOOL v9 = v24;
      }

      while (v24 != (void *)(a1 + 88));
    }
  }

void sub_100418F28(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1004190A4(a1);
  operator delete(v1);
}

void sub_100418F3C(uint64_t a1, int a2, void *a3)
{
  if (v5)
  {
    int v6 = a2;
    (*(void (**)(void, int *, uint64_t, void))(a1 + 24))(0LL, &v6, v5, *(void *)(a1 + 32));
  }

void sub_100418F88(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100418FB4(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100418FE0(uint64_t a1)
{
}

void sub_100418FE8(id a1)
{
  qword_101934888 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

CLCppContainer *sub_100419014(_OWORD *a1)
{
  uint64_t v2 = operator new(0x20uLL);
  __int128 v3 = a1[1];
  *uint64_t v2 = *a1;
  v2[1] = v3;
  uint64_t v5 = _NSConcreteStackBlock;
  uint64_t v6 = 3221225472LL;
  int v7 = sub_100419094;
  uint64_t v8 = &unk_10181D3D0;
  BOOL v9 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100419094(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

uint64_t sub_1004190A4(uint64_t a1)
{
  *(void *)a1 = &off_101838880;
  uint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *uint64_t v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

void sub_100419104(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

CLCppContainer *sub_100419130(_DWORD *a1)
{
  uint64_t v2 = operator new(4uLL);
  *uint64_t v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  uint64_t v6 = sub_10041928C;
  int v7 = &unk_10181D3D0;
  uint64_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

_BYTE *sub_1004191B0(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    int v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v14) = *(_DWORD *)(*(void *)a3 + 32LL);
    sub_10041929C(a4);
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)a3 + 80LL;
    BOOL v12 = (uint64_t **)(*(void *)a3 + 40LL);
    int v15 = (int *)(*(void *)a2 + 32LL);
    int v13 = sub_1004EF3D4(v12, v15, (uint64_t)&unk_1012CF090, &v15);
    BOOL result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v14,  v10,  v11,  v13 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v14);
    }
  }

  return result;
}

void sub_10041928C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_10041929C(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppEncodableDataContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0)
  {
    sub_100419314(a1);
  }

  else
  {
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
    if ((objc_opt_isKindOfClass(a1, v3) & 1) != 0) {
      sub_10041969C(a1);
    }
  }

void sub_100419314(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2)
  {
    sub_100419A48((uint64_t)&v7 + 7, a1);
    return;
  }

  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101838898);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012EA494LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934470 != -1) {
        dispatch_once(&qword_101934470, &stru_101838898);
      }
      LODWORD(v8) = 134218498;
      HIDWORD(v8) = (_DWORD)v2;
      LODWORD(v7) = 32;
      uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly beca use the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  v7,  v8);
LABEL_21:
      uint64_t v6 = (uint8_t *)v4;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLTimeManager_Type::NotificationData, Callba ck = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101838898);
    }
    uint64_t v5 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012EA494LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934470 != -1) {
        dispatch_once(&qword_101934470, &stru_101838898);
      }
      LODWORD(v8) = 134218498;
      HIDWORD(v8) = (_DWORD)v2;
      LODWORD(v7) = 32;
      uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly beca use the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  v7,  v8);
      goto LABEL_21;
    }
  }

id sub_10041969C(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101838898);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012EA494LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101838898);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101838898);
    }
    uint64_t v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012EA494LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_101838898);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  uint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLTimeManager_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

void sub_100419A48(uint64_t a1, void *a2)
{
  if ([a2 cppObjectPtr]
    || !objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D3410))
  {
    goto LABEL_5;
  }

  if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") == (id)4)
  {
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
LABEL_5:
    [a2 cppObjectPtr];
    return;
  }

  uint64_t v3 = (std::__shared_weak_count *)sub_101239594();
  sub_100419ABC(v3);
}

void sub_100419ABC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1018388C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100419AD0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1018388C8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

CLCppContainer *sub_100419AFC(_DWORD *a1)
{
  id v2 = operator new(4uLL);
  *id v2 = *a1;
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472LL;
  uint64_t v6 = sub_100419F50;
  uint64_t v7 = &unk_10181D3D0;
  uint64_t v8 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100419B7C(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        uint64_t v50 = v9;
        sub_10041929C(a3);
        (*(void (**)(void *, int *, uint64_t, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        unint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          signed __int32 v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v49 = v19;
              sub_1004191B0(a1, (uint64_t)&v49, (uint64_t)&v50, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              int v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  uint64_t v32 = (uint64_t *)v27;
                }
                else {
                  uint64_t v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  int v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              uint64_t v50 = v29;
              uint64_t v34 = v29[6];
              unint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                __int16 v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    __int16 v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      BOOL v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      BOOL v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      unint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  char v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      unint64_t v14 = v43;
                      char v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      unint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      __int16 v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              uint64_t v49 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101838730);
              }
              BOOL v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                uint64_t v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                int v56 = v25;
                __int16 v57 = 1026;
                int v58 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101838730);
                }
                uint64_t v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v51 = 136446466;
                uint64_t v52 = v45;
                __int16 v53 = 1026;
                int v54 = v46;
                LODWORD(v48) = 18;
                int v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                                &v51,
                                v48);
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLTimeManager_Type::Notification, CLTimeManager_Type::NotificationData>::invokeClients WithData(const Notification_T &, CLCppContainer *) [Notification_T = CLTimeManager_Type::Notification, NotificationData_T = CLTimeManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
              }
            }
          }

          while (v14 != v50 + 6);
        }
      }
    }
  }

void sub_100419F50(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_100419F60()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_100419FC4()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_10041A038(_Unwind_Exception *a1)
{
}

void sub_10041A0C4(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v4 = sub_10080E94C();
    sub_1007B8BEC((uint64_t)buf);
    sub_10080EF64(v4, (uint64_t *)buf);
    *(_DWORD *)std::stringbuf::string_type buf = 23;
    v28.i32[0] = 23;
    v28.i32[1] = sub_100FE4D78((int *)buf);
    uint64_t v5 = sub_100370E78();
    sub_10037F658(v5, &v28, (int *)(a1 + 5044), a2, 0);
    unsigned int v6 = 0;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v7 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v8 = [a2 hasDepartureDate];
      unsigned int v9 = [a2 hasArrivalDate];
      id v10 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
      *(_DWORD *)std::stringbuf::string_type buf = 67240963;
      LODWORD(v36) = v6;
      WORD2(v36) = 1026;
      *(_DWORD *)((char *)&v36 + 6) = v8;
      WORD5(v36) = 1025;
      HIDWORD(v36) = v9;
      LOWORD(v37) = 2081;
      *(void *)((char *)&v37 + 2) = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "LocationController,onVisit,isInsideVisit,%{public}d,hasDepartDate,%{public}d,hasArrivalDate,%{private}d,description,%{private}s",  buf,  0x1Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v23 = qword_101934838;
      unsigned int v24 = [a2 hasDepartureDate];
      unsigned int v25 = [a2 hasArrivalDate];
      id v26 = objc_msgSend(objc_msgSend(a2, "description"), "UTF8String");
      v28.i32[2] = 67240963;
      v28.i32[3] = v6;
      __int16 v29 = 1026;
      unsigned int v30 = v24;
      __int16 v31 = 1025;
      unsigned int v32 = v25;
      __int16 v33 = 2081;
      id v34 = v26;
      uint64_t v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v23,  0LL,  "LocationController,onVisit,isInsideVisit,%{public}d,hasDepartDate,%{public}d,hasArrivalDate,%{priv ate}d,description,%{private}s",  &v28.u64[1],  30);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::onVisit(const CLVisit *)", "%s\n", v27);
    }

    sub_100427678(a1, 12, v6);
    uint64_t v11 = *(void *)(a1 + 304);
    if (v11) {
      sub_100AF0DE0(v11, a2);
    }
    int v12 = v6 ^ 1;
    sub_100D8CA80(a1 + 5120, v12);
    *(_DWORD *)std::stringbuf::string_type buf = 0xFFFF;
    __int128 v36 = 0uLL;
    __int128 v37 = xmmword_1012E0070;
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v38 = _Q0;
    __int128 v39 = _Q0;
    __int128 v40 = _Q0;
    int v41 = 0;
    uint64_t v43 = 0LL;
    uint64_t v44 = 0LL;
    unint64_t v42 = 0xBFF0000000000000LL;
    int v45 = 0;
    unint64_t v46 = 0xBFF0000000000000LL;
    int v47 = 0x7FFFFFFF;
    uint64_t v49 = 0LL;
    uint64_t v50 = 0LL;
    uint64_t v48 = 0LL;
    char v51 = 0;
    __n128 v18 = sub_100D8BFC4(a1 + 5120, (uint64_t)buf);
    if ((v12 & 1) != 0)
    {
      uint64_t v22 = *(void *)(a1 + 288);
      if (v22) {
        (*(void (**)(uint64_t, __n128))(*(void *)v22 + 432LL))(v22, v18);
      }
    }

    else
    {
      sub_100439E70(a1, a2);
      uint64_t v19 = *(void *)(a1 + 288);
      if (v19) {
        (*(void (**)(uint64_t, void))(*(void *)v19 + 416LL))(v19, 0LL);
      }
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v20 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289026;
      LODWORD(v36) = 0;
      WORD2(v36) = 2082;
      *(void *)((char *)&v36 + 6) = "";
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:LocationController,slv,nil visit in onVisit()}",  buf,  0x12u);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
    }

    BOOL v21 = (os_log_s *)qword_101934838;
    if (os_signpost_enabled((os_log_t)qword_101934838))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289026;
      LODWORD(v36) = 0;
      WORD2(v36) = 2082;
      *(void *)((char *)&v36 + 6) = "";
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v21,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "LocationController,slv,nil visit in onVisit()",  "{msg%{public}.0s:LocationController,slv,nil visit in onVisit()}",  buf,  0x12u);
    }
  }

void sub_10041A664(id a1)
{
  qword_101995798 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLLocationControllerSilo");
}

uint64_t sub_10041A718(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10041C074;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_1019957A8 != -1) {
    dispatch_once(&qword_1019957A8, block);
  }
  return qword_1019A1010;
}

uint64_t sub_10041A8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)(a2 + 8);
  sub_100008390(a2, *(void **)(a2 + 8));
  *(void *)a2 = v4;
  *(void *)(a2 + 16) = 0LL;
  void *v4 = 0LL;
  uint64_t v5 = *(void **)(a1 + 240);
  if (v5 == (void *)(a1 + 248)) {
    goto LABEL_36;
  }
  char v6 = 0;
  do
  {
    if (!*((_BYTE *)v5 + 903)) {
      goto LABEL_17;
    }
    int v7 = *((_DWORD *)v5 + 224);
    if (v7 == 10)
    {
      if (*(_BYTE *)(a1 + 697)) {
        goto LABEL_16;
      }
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v13 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "Indoor provider active, but pipelined not activated",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        *(_WORD *)id v26 = 0;
        LODWORD(v25) = 2;
        unsigned int v9 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Indoor provider active, but pipelined not activated",  v26,  v25,  *(void *)v26);
        goto LABEL_32;
      }
    }

    else
    {
      if (v7 != 11 || *(_BYTE *)(a1 + 698))
      {
LABEL_16:
        *(_DWORD *)std::stringbuf::string_type buf = *((_DWORD *)v5 + 224);
        sub_10004A8FC((uint64_t **)a2, (int *)buf, buf);
        v6 |= *((_DWORD *)v5 + 224) == 1;
        goto LABEL_17;
      }

      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      unsigned int v8 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Wifi2 provider active, but pipelined not activated",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        *(_WORD *)id v26 = 0;
        LODWORD(v25) = 2;
        unsigned int v9 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Wifi2 provider active, but pipelined not activated",  v26,  v25,  *(void *)v26);
LABEL_32:
        unint64_t v14 = (uint8_t *)v9;
        sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLLocationController::getActiveTechs(std::set<int> &)", "%s\n", v9);
        if (v14 != buf) {
          free(v14);
        }
      }
    }

uint64_t sub_10041AF30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(double **)a2;
  *(void *)(a2 + 8) = *(void *)a2;
  char v6 = (char **)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if ((unint64_t)v4 >= v5)
  {
    uint64_t v8 = v5 - (void)v4;
    uint64_t v9 = v8 >> 2;
    else {
      unint64_t v10 = v9;
    }
    uint64_t v11 = sub_1000071BC((uint64_t)v6, v10);
    BOOL v12 = *(double **)a2;
    uint64_t v13 = *(double **)(a2 + 8);
    int v15 = &v11[v14];
    void *v11 = 0x3FF0000000000000LL;
    int v7 = v11 + 1;
    while (v13 != v12)
    {
      uint64_t v16 = *((void *)v13-- - 1);
      *--uint64_t v11 = v16;
    }

    *(void *)a2 = v11;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v15;
    if (v12) {
      operator delete(v12);
    }
  }

  else
  {
    double *v4 = 1.0;
    int v7 = v4 + 1;
  }

  *(void *)(a2 + 8) = v7;
  uint64_t v17 = sub_10080E94C();
  LODWORD(v131) = 1;
  double v18 = sub_10080EB58(v17, &v131);
  double v19 = v18;
  uint64_t v21 = *(double **)(a2 + 8);
  unint64_t v20 = *(void *)(a2 + 16);
  if ((unint64_t)v21 >= v20)
  {
    uint64_t v23 = *(double **)a2;
    uint64_t v24 = ((uint64_t)v21 - *(void *)a2) >> 3;
    unint64_t v25 = v24 + 1;
    uint64_t v26 = v20 - (void)v23;
    if (v26 >> 2 > v25) {
      unint64_t v25 = v26 >> 2;
    }
    else {
      unint64_t v27 = v25;
    }
    if (v27)
    {
      int v28 = (char *)sub_1000071BC((uint64_t)v6, v27);
      uint64_t v23 = *(double **)a2;
      uint64_t v21 = *(double **)(a2 + 8);
    }

    else
    {
      int v28 = 0LL;
    }

    __int16 v29 = (double *)&v28[8 * v24];
    int v30 = &v28[8 * v27];
    *__int16 v29 = v19;
    int v22 = v29 + 1;
    while (v21 != v23)
    {
      uint64_t v31 = *((void *)v21-- - 1);
      *((void *)v29-- - 1) = v31;
    }

    *(void *)a2 = v29;
    *(void *)(a2 + 8) = v22;
    *(void *)(a2 + 16) = v30;
    if (v23) {
      operator delete(v23);
    }
  }

  else
  {
    *uint64_t v21 = v18;
    int v22 = v21 + 1;
  }

  *(void *)(a2 + 8) = v22;
  uint64_t v32 = *(char **)(a2 + 16);
  if (*(void *)(a1 + 704))
  {
    if (v22 >= (double *)v32)
    {
      __int16 v35 = *(double **)a2;
      uint64_t v36 = ((uint64_t)v22 - *(void *)a2) >> 3;
      unint64_t v37 = v36 + 1;
      uint64_t v38 = v32 - (char *)v35;
      if (v38 >> 2 > v37) {
        unint64_t v37 = v38 >> 2;
      }
      else {
        unint64_t v39 = v37;
      }
      if (v39)
      {
        __int128 v40 = (char *)sub_1000071BC((uint64_t)v6, v39);
        __int16 v35 = *(double **)a2;
        int v22 = *(double **)(a2 + 8);
      }

      else
      {
        __int128 v40 = 0LL;
      }

      int v47 = &v40[8 * v36];
      uint64_t v32 = &v40[8 * v39];
      *(void *)int v47 = 0x3FF0000000000000LL;
      __int16 v33 = (unint64_t *)(v47 + 8);
      while (v22 != v35)
      {
        uint64_t v48 = *((void *)v22-- - 1);
        *((void *)v47 - 1) = v48;
        v47 -= 8;
      }

      *(void *)a2 = v47;
      *(void *)(a2 + 8) = v33;
      *(void *)(a2 + 16) = v32;
      if (v35)
      {
        operator delete(v35);
        uint64_t v32 = *v6;
      }
    }

    else
    {
      *int v22 = 1.0;
      __int16 v33 = (unint64_t *)(v22 + 1);
    }

    *(void *)(a2 + 8) = v33;
    if (v33 >= (unint64_t *)v32)
    {
      char v51 = *(double **)a2;
      uint64_t v52 = ((uint64_t)v33 - *(void *)a2) >> 3;
      unint64_t v53 = v52 + 1;
      uint64_t v54 = v32 - (char *)v51;
      if (v54 >> 2 > v53) {
        unint64_t v53 = v54 >> 2;
      }
      else {
        unint64_t v55 = v53;
      }
      if (v55)
      {
        int v56 = (char *)sub_1000071BC((uint64_t)v6, v55);
        char v51 = *(double **)a2;
        __int16 v33 = *(unint64_t **)(a2 + 8);
      }

      else
      {
        int v56 = 0LL;
      }

      __int16 v57 = (unint64_t *)&v56[8 * v52];
      uint64_t v32 = &v56[8 * v55];
      unint64_t v49 = *(void *)(a1 + 728);
      *__int16 v57 = v49;
      uint64_t v50 = (double *)(v57 + 1);
      while (v33 != (unint64_t *)v51)
      {
        unint64_t v58 = *--v33;
        HIDWORD(v49) = HIDWORD(v58);
        *--__int16 v57 = v58;
      }

      *(void *)a2 = v57;
      *(void *)(a2 + 8) = v50;
      *(void *)(a2 + 16) = v32;
      if (v51)
      {
        operator delete(v51);
        uint64_t v32 = *v6;
      }
    }

    else
    {
      unint64_t v49 = *(void *)(a1 + 728);
      unint64_t *v33 = v49;
      uint64_t v50 = (double *)(v33 + 1);
    }

    *(void *)(a2 + 8) = v50;
    LODWORD(v49) = *(_DWORD *)(a1 + 712);
    double v59 = (double)v49;
    if (v50 >= (double *)v32)
    {
      char v61 = *(double **)a2;
      uint64_t v62 = ((uint64_t)v50 - *(void *)a2) >> 3;
      unint64_t v63 = v62 + 1;
      uint64_t v64 = v32 - (char *)v61;
      if (v64 >> 2 > v63) {
        unint64_t v63 = v64 >> 2;
      }
      else {
        unint64_t v65 = v63;
      }
      if (v65)
      {
        __int16 v66 = (char *)sub_1000071BC((uint64_t)v6, v65);
        char v61 = *(double **)a2;
        uint64_t v50 = *(double **)(a2 + 8);
      }

      else
      {
        __int16 v66 = 0LL;
      }

      __int16 v67 = (double *)&v66[8 * v62];
      uint64_t v32 = &v66[8 * v65];
      *__int16 v67 = v59;
      double v60 = v67 + 1;
      while (v50 != v61)
      {
        uint64_t v68 = *((void *)v50-- - 1);
        *((void *)v67-- - 1) = v68;
      }

      *(void *)a2 = v67;
      *(void *)(a2 + 8) = v60;
      *(void *)(a2 + 16) = v32;
      if (v61)
      {
        operator delete(v61);
        uint64_t v32 = *v6;
      }
    }

    else
    {
      double *v50 = v59;
      double v60 = v50 + 1;
    }

    *(void *)(a2 + 8) = v60;
    if (v60 >= (double *)v32)
    {
      double v70 = *(double **)a2;
      uint64_t v71 = ((uint64_t)v60 - *(void *)a2) >> 3;
      unint64_t v72 = v71 + 1;
      uint64_t v73 = v32 - (char *)v70;
      if (v73 >> 2 > v72) {
        unint64_t v72 = v73 >> 2;
      }
      else {
        unint64_t v74 = v72;
      }
      if (v74)
      {
        __int16 v75 = (char *)sub_1000071BC((uint64_t)v6, v74);
        double v70 = *(double **)a2;
        double v60 = *(double **)(a2 + 8);
      }

      else
      {
        __int16 v75 = 0LL;
      }

      double v76 = &v75[8 * v71];
      __int16 v77 = &v75[8 * v74];
      *(void *)double v76 = *(void *)(a1 + 720);
      __int16 v69 = v76 + 8;
      while (v60 != v70)
      {
        uint64_t v78 = *((void *)v60-- - 1);
        *((void *)v76 - 1) = v78;
        v76 -= 8;
      }

      *(void *)a2 = v76;
      *(void *)(a2 + 8) = v69;
      *(void *)(a2 + 16) = v77;
      if (v70) {
        operator delete(v70);
      }
    }

    else
    {
      *double v60 = *(double *)(a1 + 720);
      __int16 v69 = v60 + 1;
    }

    *(void *)(a2 + 8) = v69;
    sub_10052A9E8(*(uint64_t **)(a1 + 704), &v132, &v131);
    double v80 = *(double **)(a2 + 8);
    __int16 v79 = *(double **)(a2 + 16);
    if (v80 >= v79)
    {
      uint64_t v82 = *(double **)a2;
      uint64_t v83 = ((uint64_t)v80 - *(void *)a2) >> 3;
      unint64_t v84 = v83 + 1;
      uint64_t v85 = (char *)v79 - (char *)v82;
      if (v85 >> 2 > v84) {
        unint64_t v84 = v85 >> 2;
      }
      else {
        unint64_t v86 = v84;
      }
      if (v86)
      {
        std::string::size_type v87 = (char *)sub_1000071BC((uint64_t)v6, v86);
        uint64_t v82 = *(double **)a2;
        double v80 = *(double **)(a2 + 8);
      }

      else
      {
        std::string::size_type v87 = 0LL;
      }

      v88 = (double *)&v87[8 * v83];
      __int16 v79 = (double *)&v87[8 * v86];
      double *v88 = v131;
      __int16 v81 = v88 + 1;
      while (v80 != v82)
      {
        uint64_t v89 = *((void *)v80-- - 1);
        *((void *)v88-- - 1) = v89;
      }

      *(void *)a2 = v88;
      *(void *)(a2 + 8) = v81;
      *(void *)(a2 + 16) = v79;
      if (v82)
      {
        operator delete(v82);
        __int16 v79 = (double *)*v6;
      }
    }

    else
    {
      *double v80 = v131;
      __int16 v81 = v80 + 1;
    }

    *(void *)(a2 + 8) = v81;
    double v90 = (double)v132;
    if (v81 < v79)
    {
      *__int16 v81 = v90;
      int v34 = v81 + 1;
      goto LABEL_122;
    }

    int v41 = *(double **)a2;
    uint64_t v92 = ((uint64_t)v81 - *(void *)a2) >> 3;
    unint64_t v93 = v92 + 1;
    uint64_t v94 = (char *)v79 - (char *)v41;
    if (v94 >> 2 > v93) {
      unint64_t v93 = v94 >> 2;
    }
    else {
      unint64_t v95 = v93;
    }
    if (v95)
    {
      v96 = (char *)sub_1000071BC((uint64_t)v6, v95);
      int v41 = *(double **)a2;
      __int16 v81 = *(double **)(a2 + 8);
    }

    else
    {
      v96 = 0LL;
    }

    int v97 = (double *)&v96[8 * v92];
    std::string::size_type v98 = &v96[8 * v95];
    *int v97 = v90;
    __int128 v91 = v97 + 1;
    while (v81 != v41)
    {
      uint64_t v99 = *((void *)v81-- - 1);
      *((void *)v97-- - 1) = v99;
    }
  }

  else
  {
    if (v22 < (double *)v32)
    {
      *int v22 = -1.0;
      int v34 = v22 + 1;
LABEL_122:
      __int128 v91 = v34;
      goto LABEL_141;
    }

    int v41 = *(double **)a2;
    uint64_t v42 = ((uint64_t)v22 - *(void *)a2) >> 3;
    unint64_t v43 = v42 + 1;
    uint64_t v44 = v32 - (char *)v41;
    if (v44 >> 2 > v43) {
      unint64_t v43 = v44 >> 2;
    }
    else {
      unint64_t v45 = v43;
    }
    if (v45)
    {
      unint64_t v46 = (char *)sub_1000071BC((uint64_t)v6, v45);
      int v41 = *(double **)a2;
      int v22 = *(double **)(a2 + 8);
    }

    else
    {
      unint64_t v46 = 0LL;
    }

    int v97 = (double *)&v46[8 * v42];
    std::string::size_type v98 = &v46[8 * v45];
    *int v97 = -1.0;
    __int128 v91 = v97 + 1;
    while (v22 != v41)
    {
      uint64_t v100 = *((void *)v22-- - 1);
      *((void *)v97-- - 1) = v100;
    }
  }

  *(void *)a2 = v97;
  *(void *)(a2 + 8) = v91;
  *(void *)(a2 + 16) = v98;
  if (v41) {
    operator delete(v41);
  }
LABEL_141:
  *(void *)(a2 + 8) = v91;
  size_t v101 = *v6;
  if (v91 >= (double *)*v6)
  {
    v103 = *(double **)a2;
    uint64_t v104 = ((uint64_t)v91 - *(void *)a2) >> 3;
    unint64_t v105 = v104 + 1;
    uint64_t v106 = v101 - (char *)v103;
    if (v106 >> 2 > v105) {
      unint64_t v105 = v106 >> 2;
    }
    else {
      unint64_t v107 = v105;
    }
    if (v107)
    {
      v108 = (char *)sub_1000071BC((uint64_t)v6, v107);
      v103 = *(double **)a2;
      __int128 v91 = *(double **)(a2 + 8);
    }

    else
    {
      v108 = 0LL;
    }

    __int128 v109 = &v108[8 * v104];
    size_t v101 = &v108[8 * v107];
    *(void *)__int128 v109 = 0xBFF0000000000000LL;
    v102 = (double *)(v109 + 8);
    while (v91 != v103)
    {
      uint64_t v110 = *((void *)v91-- - 1);
      *((void *)v109 - 1) = v110;
      v109 -= 8;
    }

    *(void *)a2 = v109;
    *(void *)(a2 + 8) = v102;
    *(void *)(a2 + 16) = v101;
    if (v103)
    {
      operator delete(v103);
      size_t v101 = *v6;
    }
  }

  else
  {
    *__int128 v91 = -1.0;
    v102 = v91 + 1;
  }

  *(void *)(a2 + 8) = v102;
  if (v102 >= (double *)v101)
  {
    v112 = *(double **)a2;
    uint64_t v113 = ((uint64_t)v102 - *(void *)a2) >> 3;
    unint64_t v114 = v113 + 1;
    uint64_t v115 = v101 - (char *)v112;
    if (v115 >> 2 > v114) {
      unint64_t v114 = v115 >> 2;
    }
    else {
      unint64_t v116 = v114;
    }
    if (v116)
    {
      __int128 v117 = (char *)sub_1000071BC((uint64_t)v6, v116);
      v112 = *(double **)a2;
      v102 = *(double **)(a2 + 8);
    }

    else
    {
      __int128 v117 = 0LL;
    }

    v118 = &v117[8 * v113];
    size_t v101 = &v117[8 * v116];
    *(void *)v118 = 0xBFF0000000000000LL;
    __int128 v111 = (double *)(v118 + 8);
    while (v102 != v112)
    {
      uint64_t v119 = *((void *)v102-- - 1);
      *((void *)v118 - 1) = v119;
      v118 -= 8;
    }

    *(void *)a2 = v118;
    *(void *)(a2 + 8) = v111;
    *(void *)(a2 + 16) = v101;
    if (v112)
    {
      operator delete(v112);
      size_t v101 = *v6;
    }
  }

  else
  {
    double *v102 = -1.0;
    __int128 v111 = v102 + 1;
  }

  *(void *)(a2 + 8) = v111;
  if (v111 < (double *)v101)
  {
    *__int128 v111 = -1.0;
    unsigned __int8 v120 = v111 + 1;
    goto LABEL_189;
  }

  v121 = *(double **)a2;
  uint64_t v122 = ((uint64_t)v111 - *(void *)a2) >> 3;
  unint64_t v123 = v122 + 1;
  if ((unint64_t)(v122 + 1) >> 61) {
LABEL_190:
  }
    sub_100007008();
  uint64_t v124 = v101 - (char *)v121;
  if (v124 >> 2 > v123) {
    unint64_t v123 = v124 >> 2;
  }
  else {
    unint64_t v125 = v123;
  }
  if (v125)
  {
    char v126 = (char *)sub_1000071BC((uint64_t)v6, v125);
    v121 = *(double **)a2;
    __int128 v111 = *(double **)(a2 + 8);
  }

  else
  {
    char v126 = 0LL;
  }

  v127 = &v126[8 * v122];
  uint64_t v128 = &v126[8 * v125];
  *(void *)v127 = 0xBFF0000000000000LL;
  unsigned __int8 v120 = v127 + 8;
  while (v111 != v121)
  {
    uint64_t v129 = *((void *)v111-- - 1);
    *((void *)v127 - 1) = v129;
    v127 -= 8;
  }

  *(void *)a2 = v127;
  *(void *)(a2 + 8) = v120;
  *(void *)(a2 + 16) = v128;
  if (v121) {
    operator delete(v121);
  }
LABEL_189:
  *(void *)(a2 + 8) = v120;
  return 1LL;
}

void sub_10041BBF0(uint64_t a1, uint64_t a2)
{
  int v4 = sub_1009830C8(a2);
  unint64_t v5 = (unsigned __int8 *)(a1 + 5000);
  if (*(unsigned __int8 *)(a1 + 5000) != v4)
  {
    unsigned __int8 *v5 = v4;
    objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLSimulationController"),  "isInEmegencyState:",  *v5);
  }

  uint64_t v6 = *(void *)(a1 + 288);
  __int128 v11 = *(_OWORD *)a2;
  int v12 = *(_DWORD *)(a2 + 16);
  (*(void (**)(uint64_t, __int128 *))(*(void *)v6 + 200LL))(v6, &v11);
  unsigned __int8 *v5 = sub_1009830C8(a2);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  int v7 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    int v8 = *v5;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v15 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "BaroAlt,LocCtrlOnEmergencyStateChange,isEmergency,%{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v9 = *v5;
    v13[0] = 67240192;
    v13[1] = v9;
    unint64_t v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "BaroAlt,LocCtrlOnEmergencyStateChange,isEmergency,%{public}d",  v13,  8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onEmergencyStateChange(CLEmergencyState)",  "%s\n",  v10);
  }

uint64_t sub_10041BE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v7);
  sub_10080EF64(v4, v7[0].i64);
  int v8 = 22;
  v7[0].i32[0] = 22;
  v7[0].i32[1] = sub_100FE4D78(&v8);
  uint64_t v5 = sub_100370E78();
  sub_10037EEC4(v5, v7, (int *)(a1 + 5044), a2);
  uint64_t result = *(void *)(a1 + 288);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40LL))(result, a2);
  }
  return result;
}

uint64_t sub_10041C074(uint64_t a1)
{
  id v2 = operator new(0x1698uLL);
  uint64_t result = sub_10041C0C0((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A1010 = (uint64_t)v2;
  return result;
}

void sub_10041C0AC(_Unwind_Exception *a1)
{
}

uint64_t sub_10041C0C0(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)sub_100479C24(a1, "controller", a2);
  void *v4 = off_101838938;
  sub_100D2D9A4((uint64_t)(v4 + 15));
  *(_OWORD *)(a1 + 168) = 0u;
  uint64_t v5 = a1 + 168;
  *(_WORD *)(a1 + 16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = -1;
  *(_BYTE *)(a1 + 216) = 1;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 20sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0u;
  *(void *)(a1 + 224) = 0xBFF0000000000000LL;
  *(void *)(a1 + 232) = 0LL;
  *(void *)(a1 + 248) = 0LL;
  *(void *)(a1 + 24sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = a1 + 248;
  *(void *)(a1 + 272) = 0LL;
  *(void *)(a1 + 264) = a1 + 272;
  *(void *)(a1 + 256) = 0LL;
  *(void *)(a1 + 28sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(void *)(a1 + 288) = 0LL;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_BYTE *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 32sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0u;
  *(_DWORD *)(a1 + 336) = 0;
  v276 = a2;
  sub_1006B911C(a1 + 344);
  *(void *)(a1 + 64sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_DWORD *)(a1 + 656) = 16842752;
  *(void *)(a1 + 66sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(_DWORD *)(a1 + 668) = -1;
  *(void *)(a1 + 672) = 0LL;
  *(_WORD *)(a1 + 696) = 0;
  *(_BYTE *)(a1 + 698) = 0;
  *(void *)(a1 + 704) = 0LL;
  *(_BYTE *)(a1 + 712) = 0;
  *(_BYTE *)(a1 + 744) = 0;
  *(_WORD *)(a1 + 752) = 0;
  sub_100D2D9A4(a1 + 760);
  *(_DWORD *)(a1 + 80sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0x1000000;
  *(void *)(a1 + 808) = 0xBFF0000000000000LL;
  *(void *)(a1 + 816) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 824) = 0;
  *(void *)(a1 + 832) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 84sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
  *(void *)(a1 + 848) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 856) = 0;
  *(void *)(a1 + 864) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 872) = 0;
  *(void *)(a1 + 88sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 888) = 0;
  *(_DWORD *)(v6 + 131) = 0;
  *(_OWORD *)(a1 + 896) = 0u;
  *(_OWORD *)(a1 + 912) = 0u;
  *(_OWORD *)(v6 + 162) = 0u;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 944) = _Q1;
  *(_OWORD *)(a1 + 96sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = _Q1;
  *(void *)(a1 + 976) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 984) = 0xFFFF;
  *(void *)(v6 + 236) = 0LL;
  *(void *)(v6 + 228) = 0LL;
  *(_OWORD *)(a1 + 1004) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 102sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = _Q1;
  *(_OWORD *)(a1 + 1036) = _Q1;
  *(_OWORD *)(a1 + 1052) = _Q1;
  *(_DWORD *)(a1 + 1068) = 0;
  *(void *)(a1 + 1072) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 1096) = 0;
  *(void *)(a1 + 108sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(void *)(a1 + 1088) = 0LL;
  *(void *)(a1 + 110sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 1108) = 0x7FFFFFFF;
  *(void *)(a1 + 1128) = 0LL;
  *(void *)(a1 + 1112) = 0LL;
  *(void *)(a1 + 112sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(_BYTE *)(a1 + 1136) = 0;
  *(_DWORD *)(a1 + 114sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0xFFFF;
  *(void *)(a1 + 1144) = 0LL;
  *(void *)(a1 + 1152) = 0LL;
  *(void *)(a1 + 116sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 1168) = xmmword_1012EA5D0;
  *(_OWORD *)(a1 + 1184) = _Q1;
  __int128 v278 = _Q1;
  *(_OWORD *)(a1 + 120sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = _Q1;
  *(void *)(a1 + 1216) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 1224) = 0;
  *(void *)(a1 + 1228) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 1252) = 0;
  *(void *)(a1 + 1236) = 0LL;
  *(void *)(a1 + 1244) = 0LL;
  *(void *)(a1 + 1256) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 1264) = 0x7FFFFFFF;
  *(_BYTE *)(a1 + 1292) = 0;
  *(void *)(a1 + 1276) = 0LL;
  *(void *)(a1 + 1284) = 0LL;
  *(void *)(a1 + 1268) = 0LL;
  sub_1001AA7BC(a1 + 1296);
  *(_OWORD *)(a1 + 1568) = 0u;
  *(_OWORD *)(a1 + 1552) = 0u;
  *(_OWORD *)(a1 + 1536) = 0u;
  *(_DWORD *)(a1 + 1583) = 0;
  sub_100246564(a1 + 1920);
  sub_100246564(a1 + 3448);
  *(_OWORD *)(a1 + 4976) = v278;
  *(void *)(a1 + 4992) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 500sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
  *(_OWORD *)(a1 + 5008) = 0u;
  *(_OWORD *)(a1 + 5024) = 0u;
  *(_WORD *)(a1 + 504sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 1;
  *(_DWORD *)std::stringbuf::string_type buf = 21;
  *(_DWORD *)(a1 + 5044) = 21;
  *(_DWORD *)(a1 + 5048) = sub_100FE4D78((int *)buf);
  *(_BYTE *)(a1 + 5064) = 0;
  *(_BYTE *)(a1 + 5072) = 0;
  *(_BYTE *)(a1 + 508sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
  *(_BYTE *)(a1 + 5084) = 0;
  *(_BYTE *)(a1 + 5088) = 0;
  v279 = (id *)(a1 + 5096);
  *(_OWORD *)(a1 + 5096) = 0u;
  *(_WORD *)(a1 + 5112) = 0;
  sub_100D8BFC0();
  uint64_t v12 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)buf);
  sub_10080EF64(v12, (uint64_t *)buf);
  id v13 = [*(id *)(a1 + 40) newTimer];
  *(void *)(a1 + 5056) = v13;
  if (v13)
  {
    v286[0] = _NSConcreteStackBlock;
    v286[1] = 3221225472LL;
    v286[2] = sub_10041FC74;
    v286[3] = &unk_10181D3D0;
    v286[4] = a1;
    [v13 setHandler:v286];
    [*(id *)(a1 + 5056) setNextFireDelay:0.0 interval:1.0];
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v14 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      uint64_t v15 = sub_10080E94C();
      LODWORD(context.version) = 1;
      double v16 = sub_10080EB58(v15, &context);
      uint64_t v17 = sub_10080E94C();
      double v18 = sub_10080EF30(v17);
      *(_DWORD *)std::stringbuf::string_type buf = 134349568;
      *(double *)&uint8_t buf[4] = v16;
      *(_WORD *)&_BYTE buf[12] = 2050;
      *(void *)&buf[14] = 0x3FF0000000000000LL;
      *(_WORD *)&buf[22] = 2050;
      *(double *)&buf[24] = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "LocationController,#time,starting heartbeat timer now,mct,%{public}.3f,interval_sec,%{public}.1f,propagation_us,%{public}.3f",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v19 = qword_101934838;
      double v20 = sub_1003713F0();
      uint64_t v21 = sub_10080E94C();
      double v22 = sub_10080EF30(v21);
      LODWORD(context.version) = 134349568;
      *(double *)((char *)&context.version + 4) = v20;
      WORD2(context.info) = 2050;
      *(void **)((char *)&context.info + 6) = (void *)0x3FF0000000000000LL;
      HIWORD(context.retain) = 2050;
      *(double *)&context.release = v22;
      uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v19,  1LL,  "LocationController,#time,starting heartbeat timer now,mct,%{public}.3f,interval_sec,%{public}.1f,p ropagation_us,%{public}.3f",  &context,  32);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v23);
LABEL_444:
      if (v23 != buf) {
        free(v23);
      }
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v24 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "LocationController,#time,failed to allocate heartbeat timer",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      LOWORD(context.version) = 0;
      uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  17LL,  "LocationController,#time,failed to allocate heartbeat timer",  &context,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v23);
      goto LABEL_444;
    }
  }

  sub_1002F0B04(buf);
  char v25 = *(_BYTE *)(a1 + 296);
  int v26 = sub_1002A6F64(*(uint64_t *)buf, "LocationControllerFilterUsageIsLegacy", (BOOL *)&context);
  char version = context.version;
  if (!v26) {
    char version = v25;
  }
  *(_BYTE *)(a1 + 296) = version;
  int v28 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    __int16 v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }

  sub_1002F0B04(buf);
  uint64_t v31 = *(void *)buf;
  int v32 = sub_100371640();
  int v33 = sub_1002A6F64(v31, "EnableLocationControllerRecorder", (BOOL *)&context);
  int v34 = LOBYTE(context.version) != 0;
  if (!v33) {
    int v34 = v32;
  }
  *(_BYTE *)(a1 + 5041) = v34;
  __int16 v35 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v36 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }

    int v34 = *(unsigned __int8 *)(a1 + 5041);
  }

  uint64_t v277 = a1 + 1536;
  if (v34)
  {
    uint64_t v38 = sub_100370E78();
    sub_100371644(v38);
    uint64_t v39 = sub_100370E78();
    sub_100371B44(v39);
    context.char version = 0x4024000000000000LL;
    sub_10041FF5C(a1, (double *)&context.version);
    uint64_t v40 = sub_100370E78();
    sub_10037301C(v40, *(unsigned __int8 *)(a1 + 296));
    sub_1002F0B04(buf);
    else {
      int v41 = -1;
    }
    uint64_t v42 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8])
    {
      unint64_t v43 = (unint64_t *)(*(void *)&buf[8] + 8LL);
      do
        unint64_t v44 = __ldaxr(v43);
      while (__stlxr(v44 - 1, v43));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
      }
    }

    if (v41 >= 1)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      unint64_t v45 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v41;
        _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_INFO,  "LocationController,enable client list recording interval,%d,sec",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        LODWORD(v287.version) = 67109120;
        HIDWORD(v287.version) = v41;
        v267 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "LocationController,enable client list recording interval,%d,sec",  &v287);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v267);
        if (v267 != buf) {
          free(v267);
        }
      }

      *(_DWORD *)(a1 + 508sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v41;
      *(_BYTE *)(a1 + 5084) = 1;
    }
  }

  if (*(_BYTE *)(a1 + 296))
  {
    unint64_t v46 = operator new(0xB08uLL);
    uint64_t v47 = *(void *)(a1 + 32);
    *(void *)std::stringbuf::string_type buf = &off_101838D30;
    *(void *)&uint8_t buf[8] = a1 + 32;
    *(void *)&buf[24] = buf;
    sub_100941BF4(v46, v47, buf);
  }

  else
  {
    unint64_t v46 = operator new(0xDE0uLL);
    uint64_t v48 = *(void *)(a1 + 32);
    *(void *)std::stringbuf::string_type buf = &off_101838DC0;
    *(void *)&uint8_t buf[8] = a1 + 32;
    *(void *)&buf[24] = buf;
    sub_1005F1E20(v46, v48, buf);
  }

  unint64_t v49 = *(void **)&buf[24];
  if (*(_BYTE **)&buf[24] == buf)
  {
    uint64_t v50 = 4LL;
    unint64_t v49 = buf;
  }

  else
  {
    if (!*(void *)&buf[24]) {
      goto LABEL_54;
    }
    uint64_t v50 = 5LL;
  }

  (*(void (**)(void))(*v49 + 8 * v50))();
LABEL_54:
  uint64_t v51 = *(void *)(a1 + 288);
  *(void *)(a1 + 288) = v46;
  if (v51) {
    (*(void (**)(uint64_t))(*(void *)v51 + 8LL))(v51);
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  uint64_t v52 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    int v53 = *(unsigned __int8 *)(a1 + 296);
    uint64_t v54 = sub_10080E94C();
    LODWORD(context.version) = 0;
    double v55 = sub_10080EB58(v54, &context);
    uint64_t v56 = sub_10080E94C();
    LODWORD(context.version) = 1;
    double v57 = sub_10080EB58(v56, &context);
    uint64_t v58 = sub_10080E94C();
    double v59 = sub_10080EF30(v58);
    *(_DWORD *)std::stringbuf::string_type buf = 67240960;
    *(_DWORD *)&uint8_t buf[4] = v53;
    *(_WORD *)&uint8_t buf[8] = 2050;
    *(double *)&buf[10] = v55;
    *(_WORD *)&buf[18] = 2050;
    *(double *)&buf[20] = v57;
    *(_WORD *)&_BYTE buf[28] = 2050;
    *(double *)&buf[30] = v59;
    _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "LocationController,constructed,LocationControllerFilterUsageIsLegacy,%{public}d,cfat,%{public}.3f,mct,%{public}.3f ,propagation_us,%{public}.3f",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v245 = qword_101934838;
    int v246 = *(unsigned __int8 *)(a1 + 296);
    double v247 = sub_10037FE24();
    double v248 = sub_1003713F0();
    uint64_t v249 = sub_10080E94C();
    double v250 = sub_10080EF30(v249);
    LODWORD(context.version) = 67240960;
    HIDWORD(context.version) = v246;
    LOWORD(context.info) = 2050;
    *(double *)((char *)&context.info + 2) = v247;
    WORD1(context.retain) = 2050;
    *(double *)((char *)&context.retain + 4) = v248;
    WORD2(context.release) = 2050;
    *(double *)((char *)&context.release + 6) = v250;
    LODWORD(v275) = 38;
    v251 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v245,  0LL,  "LocationController,constructed,LocationControllerFilterUsageIsLegacy,%{public}d,cfat,%{public}.3f,m ct,%{public}.3f,propagation_us,%{public}.3f",  &context,  v275);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v251);
    if (v251 != buf) {
      free(v251);
    }
  }

  sub_1002F0B04(buf);
  char v60 = sub_1002A82BC(*(uint64_t *)buf, "RescalePipelinedRadiusForComparisonOnly", (void *)(a1 + 672));
  char v61 = v60;
  uint64_t v62 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    unint64_t v63 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v64 = __ldaxr(v63);
    while (__stlxr(v64 - 1, v63));
    if (!v64)
    {
      ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
      std::__shared_weak_count::__release_weak(v62);
      if ((v61 & 1) != 0) {
        goto LABEL_67;
      }
      goto LABEL_66;
    }
  }

  if ((v60 & 1) == 0) {
LABEL_66:
  }
    *(void *)(a1 + 672) = 0LL;
LABEL_67:
  sub_1002F0B04(buf);
  char v65 = sub_1002A6F64(*(uint64_t *)buf, "DynamicLocationProviders", (BOOL *)(a1 + 216));
  char v66 = v65;
  __int16 v67 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v68 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v69 = __ldaxr(v68);
    while (__stlxr(v69 - 1, v68));
    if (!v69)
    {
      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
      std::__shared_weak_count::__release_weak(v67);
      if ((v66 & 1) != 0) {
        goto LABEL_73;
      }
      goto LABEL_72;
    }
  }

  if ((v65 & 1) == 0) {
LABEL_72:
  }
    *(_BYTE *)(a1 + 216) = 1;
LABEL_73:
  sub_1002F0B04(buf);
  char v70 = sub_1002A82BC(*(uint64_t *)buf, "ForcedHorizontalAccuracy", (void *)(a1 + 224));
  char v71 = v70;
  unint64_t v72 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_77;
  }
  uint64_t v73 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    unint64_t v74 = __ldaxr(v73);
  while (__stlxr(v74 - 1, v73));
  if (v74)
  {
LABEL_77:
    if ((v70 & 1) != 0) {
      goto LABEL_79;
    }
    goto LABEL_78;
  }

  ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
  std::__shared_weak_count::__release_weak(v72);
  if ((v71 & 1) == 0) {
LABEL_78:
  }
    *(void *)(a1 + 224) = 0xBFF0000000000000LL;
LABEL_79:
  sub_1002F0B04(buf);
  if (sub_1002A6F64(*(uint64_t *)buf, "DisableIntegrityMonitoring", (BOOL *)(a1 + 663)))
  {
    int v75 = *(unsigned __int8 *)(a1 + 663);
    double v76 = *(std::__shared_weak_count **)&buf[8];
    if (!*(void *)&buf[8]) {
      goto LABEL_84;
    }
    __int16 v77 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v78 = __ldaxr(v77);
    while (__stlxr(v78 - 1, v77));
    if (!v78)
    {
      ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
      std::__shared_weak_count::__release_weak(v76);
      if (!v75) {
        goto LABEL_106;
      }
    }

    else
    {
LABEL_84:
      if (!v75) {
        goto LABEL_106;
      }
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    __int16 v79 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_DEBUG, "Integrity Monitoring is Disabled", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      LOWORD(context.version) = 0;
      LODWORD(v275) = 2;
      double v80 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Integrity Monitoring is Disabled",  &context,  v275);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v80);
      if (v80 != buf) {
        free(v80);
      }
    }
  }

  else
  {
    __int16 v81 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8])
    {
      uint64_t v82 = (unint64_t *)(*(void *)&buf[8] + 8LL);
      do
        unint64_t v83 = __ldaxr(v82);
      while (__stlxr(v83 - 1, v82));
      if (!v83)
      {
        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
        std::__shared_weak_count::__release_weak(v81);
      }
    }
  }

LABEL_116:
  sub_1002F0B04(buf);
  int v90 = sub_1002A6F64(*(uint64_t *)buf, "UseLocationKFAsDefaultProvider", &v285);
  int v91 = v90;
  uint64_t v92 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    unint64_t v93 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v94 = __ldaxr(v93);
    while (__stlxr(v94 - 1, v93));
    if (!v94)
    {
      ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
      std::__shared_weak_count::__release_weak(v92);
      if (v91) {
        goto LABEL_121;
      }
LABEL_126:
      if (!*(_BYTE *)(a1 + 658)) {
        goto LABEL_137;
      }
      goto LABEL_127;
    }
  }

  if (!v90) {
    goto LABEL_126;
  }
LABEL_121:
  if (!v285)
  {
    *(_BYTE *)(a1 + 658) = 0;
    goto LABEL_137;
  }

  *(_BYTE *)(a1 + 658) = 1;
LABEL_127:
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  unint64_t v95 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v95, OS_LOG_TYPE_DEBUG, "UseLocationKFAsDefaultProvider is set", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    LOWORD(context.version) = 0;
    LODWORD(v275) = 2;
    v96 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "UseLocationKFAsDefaultProvider is set",  &context,  v275);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v96);
    if (v96 != buf) {
      free(v96);
    }
  }

            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101838C20);
            }
            double v76 = (os_log_s *)qword_101934838;
            if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
            {
              __int16 v77 = *(char *)(a1 + 160);
              unint64_t v78 = *(char *)(a1 + 161);
              *(_DWORD *)std::stringbuf::string_type buf = 67240448;
              *(_DWORD *)&uint8_t buf[4] = v77;
              *(_WORD *)&uint8_t buf[8] = 1026;
              *(_DWORD *)&buf[10] = v78;
              _os_log_impl( (void *)&_mh_execute_header,  v76,  OS_LOG_TYPE_DEBUG,  "After unregister,required granularity,%{public}d,active granularity,%{public}d",  buf,  0xEu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934830 != -1) {
                dispatch_once(&qword_101934830, &stru_101838C20);
              }
              unint64_t v107 = *(char *)(a1 + 160);
              unint64_t v108 = *(char *)(a1 + 161);
              *(_DWORD *)int v126 = 67240448;
              *(_DWORD *)&v126[4] = v107;
              *(_WORD *)&v126[8] = 1026;
              *(_DWORD *)&v126[10] = v108;
              LODWORD(v119) = 14;
              __int128 v109 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "After unregister,required granularity,%{public}d,active granularity,%{public}d",  v126,  v119);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationController::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v109);
              if (v109 != buf) {
                free(v109);
              }
            }

            goto LABEL_121;
          }

          int v28 = 0;
        }
      }

      *unint64_t v27 = v28;
      goto LABEL_95;
    case 3u:
    case 4u:
    case 6u:
    case 0xAu:
    case 0x27u:
      int v8 = *(int **)(a1 + 264);
      int v9 = (int *)(a1 + 272);
      if (v8 != (int *)(a1 + 272))
      {
        unint64_t v10 = a1 + 240;
        do
        {
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          __int128 v11 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v12 = *a2;
            id v13 = sub_10000C6DC(v10, v8 + 8);
            double v16 = v13[1];
            uint64_t v14 = v13 + 1;
            uint64_t v15 = v16;
            *(_DWORD *)std::stringbuf::string_type buf = 67240450;
            *(_DWORD *)&uint8_t buf[4] = v12;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = v15;
            _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "unregistering notification,%{public}d,with,location provider,%{public}s",  buf,  0x12u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101838C20);
            }
            double v20 = qword_101934838;
            uint64_t v21 = *a2;
            double v22 = sub_10000C6DC(v10, v8 + 8);
            char v25 = v22[1];
            uint64_t v23 = v22 + 1;
            uint64_t v24 = v25;
            *(_DWORD *)int v126 = 67240450;
            *(_DWORD *)&v126[4] = v21;
            *(_WORD *)&v126[8] = 2082;
            *(void *)&v126[10] = v24;
            LODWORD(v119) = 18;
            int v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v20,  2LL,  "unregistering notification,%{public}d,with,location provider,%{public}s",  v126,  v119);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationController::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v26);
            if (v26 != buf) {
              free(v26);
            }
          }

          [*(id *)(*((void *)v8 + 5) + 16) unregister:*(void *)(*((void *)v8 + 5) + 8) forNotification:*a2];
          uint64_t v17 = (int *)*((void *)v8 + 1);
          if (v17)
          {
            do
            {
              double v18 = v17;
              uint64_t v17 = *(int **)v17;
            }

            while (v17);
          }

          else
          {
            do
            {
              double v18 = (int *)*((void *)v8 + 2);
              _ZF = *(void *)v18 == (void)v8;
              int v8 = v18;
            }

            while (!_ZF);
          }

          int v8 = v18;
        }

        while (v18 != v9);
      }

      return 1LL;
    case 8u:
      if (*(_DWORD *)(a1 + 320))
      {
        *(void *)std::stringbuf::string_type buf = a1 + 320;
        unint64_t v46 = sub_10000C858((uint64_t **)(a1 + 264), (int *)(a1 + 320), (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        [(id)v46[5][2] unregister:v46[5][1] forNotification:8];
      }

    v15 += 174;
  }

  while (v15 != *(unsigned int **)&v16);
  (*(void (**)(uint64_t, void, void, void))(*(void *)a1 + 96LL))( a1,  v425,  HIDWORD(v425),  v426);
  int v111 = v494;
  v112 = v493;
  if (v494 == v493)
  {
    v130 = 0;
    double v131 = v494;
  }

  else
  {
    uint64_t v113 = 0LL;
    memset(v515, 0, 24);
    do
    {
      if (!*(_DWORD *)(v112 + 4))
      {
        if (v113 >= *(void *)&v515[16])
        {
          uint64_t v113 = sub_1004516BC((uint64_t *)v515, v112);
        }

        else
        {
          sub_100451820(v113, v112);
          *(_DWORD *)(v113 + 696) = *(_DWORD *)(v112 + 696);
          unint64_t v114 = *(_OWORD *)(v112 + 716);
          *(_OWORD *)(v113 + 70sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_OWORD *)(v112 + 700);
          *(_OWORD *)(v113 + 716) = v114;
          BOOL v115 = *(_OWORD *)(v112 + 732);
          char v116 = *(_OWORD *)(v112 + 748);
          char v117 = *(_OWORD *)(v112 + 780);
          *(_OWORD *)(v113 + 764) = *(_OWORD *)(v112 + 764);
          *(_OWORD *)(v113 + 78sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v117;
          *(_OWORD *)(v113 + 732) = v115;
          *(_OWORD *)(v113 + 748) = v116;
          v118 = *(_OWORD *)(v112 + 796);
          uint64_t v119 = *(_OWORD *)(v112 + 812);
          unint64_t v120 = *(_OWORD *)(v112 + 828);
          *(_OWORD *)(v113 + 84sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_OWORD *)(v112 + 840);
          *(_OWORD *)(v113 + 812) = v119;
          *(_OWORD *)(v113 + 828) = v120;
          *(_OWORD *)(v113 + 796) = v118;
          *(_BYTE *)(v113 + 856) = *(_BYTE *)(v112 + 856);
          v113 += 864LL;
        }

        *(void *)&v515[8] = v113;
      }

      v112 += 864LL;
    }

    while (v112 != v111);
    v121 = *(void *)v515;
    if (v113 == *(void *)v515)
    {
      int v132 = v493;
      v133 = v494;
      if (v493 == v494)
      {
        uint64_t v142 = v493;
      }

      else
      {
        while (1)
        {
          sub_100451820((uint64_t)buf, v132);
          v581 = *(_DWORD *)(v132 + 696);
          unint64_t v134 = *(_OWORD *)(v132 + 716);
          v582 = *(_OWORD *)(v132 + 700);
          v583 = v134;
          char v135 = *(_OWORD *)(v132 + 780);
          std::string v137 = *(_OWORD *)(v132 + 732);
          char v136 = *(_OWORD *)(v132 + 748);
          v586 = *(_OWORD *)(v132 + 764);
          v587 = v135;
          v584 = v137;
          v585 = v136;
          unint64_t v139 = *(_OWORD *)(v132 + 812);
          v138 = *(_OWORD *)(v132 + 828);
          v140 = *(_OWORD *)(v132 + 796);
          *(_OWORD *)&v590[12] = *(_OWORD *)(v132 + 840);
          v589 = v139;
          *(_OWORD *)v590 = v138;
          v588 = v140;
          BOOL v141 = *(unsigned __int8 *)(v132 + 856);
          v591 = *(_BYTE *)(v132 + 856);
          if (v580 < 0) {
            operator delete(v579);
          }
          if (*(void *)&v577[12])
          {
            v578 = *(void *)&v577[12];
            operator delete(*(void **)&v577[12]);
          }

          if (v141) {
            break;
          }
          v132 += 864LL;
          if (v132 == v133)
          {
            int v132 = v133;
            break;
          }
        }

        uint64_t v142 = v132;
        int v132 = v494;
        p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
      }

      v130 = v142 != v132;
    }

    else
    {
      while (1)
      {
        sub_100451820((uint64_t)buf, v121);
        v581 = *(_DWORD *)(v121 + 696);
        int v122 = *(_OWORD *)(v121 + 716);
        v582 = *(_OWORD *)(v121 + 700);
        v583 = v122;
        uint64_t v123 = *(_OWORD *)(v121 + 780);
        int v125 = *(_OWORD *)(v121 + 732);
        int v124 = *(_OWORD *)(v121 + 748);
        v586 = *(_OWORD *)(v121 + 764);
        v587 = v123;
        v584 = v125;
        v585 = v124;
        v127 = *(_OWORD *)(v121 + 812);
        int v126 = *(_OWORD *)(v121 + 828);
        uint64_t v128 = *(_OWORD *)(v121 + 796);
        *(_OWORD *)&v590[12] = *(_OWORD *)(v121 + 840);
        v589 = v127;
        *(_OWORD *)v590 = v126;
        v588 = v128;
        unint64_t v129 = *(unsigned __int8 *)(v121 + 856);
        v591 = *(_BYTE *)(v121 + 856);
        if (v580 < 0) {
          operator delete(v579);
        }
        if (*(void *)&v577[12])
        {
          v578 = *(void *)&v577[12];
          operator delete(*(void **)&v577[12]);
        }

        if (v129) {
          break;
        }
        v121 += 864LL;
        if (v121 == v113)
        {
          v121 = v113;
          break;
        }
      }

      v130 = v121 != *(void *)&v515[8];
      p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    }

    *(void *)std::stringbuf::string_type buf = v515;
    sub_100450F64((void ***)buf);
    double v131 = v493;
    int v111 = v494;
  }

  memset(&__p, 0, sizeof(__p));
  sub_1004519AC(&__p, v131, v111, 0x84BDA12F684BDA13LL * ((v111 - v131) >> 5));
  uint64_t v143 = 126
       - 2
       * __clz(0x84BDA12F684BDA13LL * ((uint64_t)(__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]) >> 5));
  if (__p.__r_.__value_.__l.__size_ == __p.__r_.__value_.__r.__words[0]) {
    uint64_t v144 = 0LL;
  }
  else {
    uint64_t v144 = v143;
  }
  sub_100451BF0((uint64_t)__p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_, v144, 1);
  uint64_t v145 = (os_log_s *)v8[267];
  if (os_log_type_enabled(v145, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v146 = 0x66FD0EB66FD0EB67LL * (((char *)v422[1] - (char *)*v422) >> 3);
    *(_DWORD *)std::stringbuf::string_type buf = 134349824;
    *(void *)&uint8_t buf[4] = v146;
    v573 = 2050;
    *(void *)v574 = 0x84BDA12F684BDA13LL * ((uint64_t)(v494 - v493) >> 5);
    *(_WORD *)&v574[8] = 2050;
    *(void *)&v574[10] = 0x84BDA12F684BDA13LL
                         * ((uint64_t)(__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]) >> 5);
    *(_WORD *)&v574[18] = 1026;
    *(_DWORD *)&v574[20] = v130;
    _os_log_impl( (void *)&_mh_execute_header,  v145,  OS_LOG_TYPE_DEFAULT,  "@CellFlow, counts, in, %{public}lu, sortIn, %{public}lu, sortOut, %{public}lu, shouldQuery, %{public}d",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    v340 = v8[267];
    v341 = 0x66FD0EB66FD0EB67LL * (((char *)v422[1] - (char *)*v422) >> 3);
    *(_DWORD *)v515 = 134349824;
    *(void *)&v515[4] = v341;
    *(_WORD *)&v515[12] = 2050;
    *(void *)&v515[14] = 0x84BDA12F684BDA13LL * ((uint64_t)(v494 - v493) >> 5);
    *(_WORD *)&v515[22] = 2050;
    *(void *)&v515[24] = 0x84BDA12F684BDA13LL
                         * ((uint64_t)(__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]) >> 5);
    *(_WORD *)&v515[32] = 1026;
    *(_DWORD *)&v515[34] = v130;
    LODWORD(v417) = 38;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v340,  0LL,  "@CellFlow, counts, in, %{public}lu, sortIn, %{public}lu, sortOut, %{public}lu, shouldQuery, %{public}d",  v515,  *(void *)&v417);
    v343 = (char *)v342;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, const C LCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v342);
    if (v343 != buf) {
      free(v343);
    }
  }

  uint64_t v148 = __p.__r_.__value_.__l.__size_;
  for (unint64_t j = (unsigned int *)__p.__r_.__value_.__r.__words[0];
        j != (unsigned int *)v148;
        p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24))
  {
    uint64_t v149 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      sub_100F591F4(j, (std::stringbuf::string_type *)buf);
      uint64_t v150 = v574[9];
      uint64_t v151 = *(_BYTE **)buf;
      sub_100832C64((uint64_t)(j + 175), (std::stringbuf::string_type *)v515);
      uint64_t v152 = buf;
      if (v150 < 0) {
        uint64_t v152 = v151;
      }
      if (v515[23] >= 0) {
        uint64_t v153 = v515;
      }
      else {
        uint64_t v153 = *(_BYTE **)v515;
      }
      *(_DWORD *)v530 = 136380931;
      *(void *)&v530[4] = v152;
      *(_WORD *)&v530[12] = 2081;
      *(void *)&v530[14] = v153;
      _os_log_impl( (void *)&_mh_execute_header,  v149,  OS_LOG_TYPE_DEBUG,  "CellMatch, preferred cell matches, in ascending order, %{private}s, %{private}s",  v530,  0x16u);
      if ((v515[23] & 0x80000000) != 0) {
        operator delete(*(void **)v515);
      }
      if ((v574[9] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101839590);
      }
      uint64_t v154 = qword_101934858;
      sub_100F591F4(j, (std::stringbuf::string_type *)v515);
      uint64_t v155 = v515[23];
      uint64_t v156 = *(_BYTE **)v515;
      sub_100832C64((uint64_t)(j + 175), (std::stringbuf::string_type *)v530);
      if (v155 >= 0) {
        uint64_t v157 = v515;
      }
      else {
        uint64_t v157 = v156;
      }
      uint64_t v158 = v530;
      if (v530[23] < 0) {
        uint64_t v158 = *(_BYTE **)v530;
      }
      *(_DWORD *)v567 = 136380931;
      *(void *)&v567[4] = v157;
      *(_WORD *)&v567[12] = 2081;
      *(void *)&v567[14] = v158;
      LODWORD(v417) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v154,  2LL,  "CellMatch, preferred cell matches, in ascending order, %{private}s, %{private}s",  v567,  *(void *)&v417);
      uint64_t v160 = v159;
      if ((v530[23] & 0x80000000) != 0) {
        operator delete(*(void **)v530);
      }
      if ((v515[23] & 0x80000000) != 0) {
        operator delete(*(void **)v515);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, const CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v160);
      if (v160 != buf) {
        free(v160);
      }
    }

    j += 216;
  }

  *(void *)&v567[12] = 0LL;
  *(void *)&v567[4] = 0LL;
  *(_OWORD *)&v567[20] = xmmword_1012E0070;
  *(_OWORD *)&v567[36] = v428;
  *(_OWORD *)&v567[52] = v428;
  *(_OWORD *)&v567[68] = v428;
  *(_DWORD *)v567 = 0xFFFF;
  *(_DWORD *)&v567[84] = 0;
  *(void *)&v567[88] = 0xBFF0000000000000LL;
  v568 = 0uLL;
  *(void *)((char *)&v569 + 4) = 0xBFF0000000000000LL;
  LODWORD(v569) = 0;
  HIDWORD(v569) = 0x7FFFFFFF;
  memset(v570, 0, 25);
  uint64_t v161 = (unsigned int *)*v422;
  *(_OWORD *)v530 = **v422;
  uint64_t v162 = *((_OWORD *)v161 + 1);
  int v163 = *((_OWORD *)v161 + 2);
  v164 = *((_OWORD *)v161 + 3);
  *(_OWORD *)&v530[60] = *(_OWORD *)(v161 + 15);
  *(_OWORD *)&v530[32] = v163;
  *(_OWORD *)&v530[48] = v164;
  *(_DWORD *)&v530[80] = v161[20];
  *(void *)&v530[88] = 0LL;
  v531 = 0uLL;
  v165 = (const void *)*((void *)v161 + 11);
  unint64_t v166 = *((void *)v161 + 12);
  *(_OWORD *)&v530[16] = v162;
  sub_10001B72C(&v530[88], v165, v166, (v166 - (uint64_t)v165) >> 2);
  BOOL v167 = *((_OWORD *)v161 + 16);
  uint64_t v168 = *((_OWORD *)v161 + 17);
  int v169 = *((_OWORD *)v161 + 18);
  *(_OWORD *)((char *)v542 + 12) = *(_OWORD *)(v161 + 75);
  v532 = *((_OWORD *)v161 + 7);
  v170 = *((_OWORD *)v161 + 8);
  uint64_t v171 = *((_OWORD *)v161 + 9);
  v172 = *((_OWORD *)v161 + 11);
  v534 = *((_OWORD *)v161 + 10);
  v535 = v172;
  v533[0] = v170;
  v533[1] = v171;
  v173 = *((_OWORD *)v161 + 12);
  v174 = *((_OWORD *)v161 + 13);
  v175 = *((_OWORD *)v161 + 15);
  v538 = *((_OWORD *)v161 + 14);
  v539 = v175;
  v536 = v173;
  v537 = v174;
  v541 = v168;
  v542[0] = v169;
  v540 = v167;
  uint64_t v176 = a1;
  if (*((char *)v161 + 343) < 0)
  {
    sub_1010DD48C(&__src, *((void **)v161 + 40), *((void *)v161 + 41));
  }

  else
  {
    uint64_t v177 = *((_OWORD *)v161 + 20);
    __src.__r_.__value_.__l.__cap_ = *((void *)v161 + 42);
    *(_OWORD *)&__src.__r_.__value_.__l.__data_ = v177;
  }

  uint64_t v178 = *(_OWORD *)(v161 + 86);
  uint64_t v179 = *(_OWORD *)(v161 + 94);
  v545 = *(_OWORD *)(v161 + 90);
  v546 = v179;
  v544 = v178;
  uint64_t v180 = *(_OWORD *)(v161 + 98);
  uint64_t v181 = *(_OWORD *)(v161 + 102);
  v182 = *(_OWORD *)(v161 + 110);
  v549 = *(_OWORD *)(v161 + 106);
  v550 = v182;
  v547 = v180;
  v548 = v181;
  uint64_t v183 = v161[126];
  uint64_t v184 = *(_OWORD *)(v161 + 114);
  uint64_t v185 = *(_OWORD *)(v161 + 122);
  v552 = *(_OWORD *)(v161 + 118);
  v553 = v185;
  v551 = v184;
  v554 = v183;
  v186 = *((_OWORD *)v161 + 32);
  uint64_t v187 = *((_OWORD *)v161 + 33);
  id v188 = *((_OWORD *)v161 + 35);
  v557 = *((_OWORD *)v161 + 34);
  v558 = v188;
  v555 = v186;
  v556 = v187;
  v189 = *((_OWORD *)v161 + 36);
  uint64_t v190 = *((_OWORD *)v161 + 37);
  v191 = *((_OWORD *)v161 + 39);
  v561 = *((_OWORD *)v161 + 38);
  v562 = v191;
  v559 = v189;
  v560 = v190;
  v192 = *((_OWORD *)v161 + 40);
  unint64_t v193 = *((_OWORD *)v161 + 41);
  uint64_t v194 = *((_OWORD *)v161 + 42);
  v566 = v161[172];
  v564 = v193;
  v565 = v194;
  v563 = v192;
  if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
  {
    uint64_t v195 = __p.__r_.__value_.__l.__size_ - 864;
    *(_OWORD *)v530 = *(_OWORD *)(__p.__r_.__value_.__l.__size_ - 864);
    uint64_t v196 = *(_OWORD *)(__p.__r_.__value_.__l.__size_ - 848);
    uint64_t v197 = *(_OWORD *)(__p.__r_.__value_.__l.__size_ - 832);
    uint64_t v198 = *(_OWORD *)(__p.__r_.__value_.__l.__size_ - 816);
    *(_OWORD *)&v530[60] = *(_OWORD *)(__p.__r_.__value_.__l.__size_ - 804);
    *(_OWORD *)&v530[32] = v197;
    *(_OWORD *)&v530[48] = v198;
    *(_OWORD *)&v530[16] = v196;
    *(_DWORD *)&v530[80] = *(_DWORD *)(__p.__r_.__value_.__l.__size_ - 784);
    if (v530 != (_BYTE *)(__p.__r_.__value_.__l.__size_ - 864)) {
      sub_10004C5F8( &v530[88],  *(char **)(__p.__r_.__value_.__l.__size_ - 776),  *(void *)(__p.__r_.__value_.__l.__size_ - 768),  (uint64_t)(*(void *)(__p.__r_.__value_.__l.__size_ - 768) - *(void *)(__p.__r_.__value_.__l.__size_ - 776)) >> 2);
    }
    v532 = *(_OWORD *)(v195 + 112);
    uint64_t v199 = *(_OWORD *)(v195 + 128);
    uint64_t v200 = *(_OWORD *)(v195 + 144);
    uint64_t v201 = *(_OWORD *)(v195 + 176);
    v534 = *(_OWORD *)(v195 + 160);
    v535 = v201;
    v533[0] = v199;
    v533[1] = v200;
    int v202 = *(_OWORD *)(v195 + 192);
    int v203 = *(_OWORD *)(v195 + 208);
    v204 = *(_OWORD *)(v195 + 240);
    v538 = *(_OWORD *)(v195 + 224);
    v539 = v204;
    v536 = v202;
    v537 = v203;
    v205 = *(_OWORD *)(v195 + 256);
    unint64_t v206 = *(_OWORD *)(v195 + 272);
    v207 = *(_OWORD *)(v195 + 288);
    *(_OWORD *)((char *)v542 + 12) = *(_OWORD *)(v195 + 300);
    v541 = v206;
    v542[0] = v207;
    v540 = v205;
    std::string::operator=(&__src, (const std::string *)(v195 + 320));
    int v208 = *(_OWORD *)(v195 + 344);
    id v209 = *(_OWORD *)(v195 + 376);
    v545 = *(_OWORD *)(v195 + 360);
    v546 = v209;
    v544 = v208;
    CFRunLoopSourceRef v210 = *(_OWORD *)(v195 + 392);
    v211 = *(_OWORD *)(v195 + 408);
    CFRunLoopSourceRef v212 = *(_OWORD *)(v195 + 440);
    v549 = *(_OWORD *)(v195 + 424);
    v550 = v212;
    v547 = v210;
    v548 = v211;
    v213 = *(_OWORD *)(v195 + 456);
    v214 = *(_OWORD *)(v195 + 472);
    v215 = *(_OWORD *)(v195 + 488);
    v554 = *(_DWORD *)(v195 + 504);
    v552 = v214;
    v553 = v215;
    v551 = v213;
    id v216 = *(_OWORD *)(v195 + 512);
    uint64_t v217 = *(_OWORD *)(v195 + 528);
    v218 = *(_OWORD *)(v195 + 560);
    v557 = *(_OWORD *)(v195 + 544);
    v558 = v218;
    v555 = v216;
    v556 = v217;
    uint64_t v219 = *(_OWORD *)(v195 + 576);
    uint64_t v220 = *(_OWORD *)(v195 + 592);
    uint64_t v221 = *(_OWORD *)(v195 + 624);
    v561 = *(_OWORD *)(v195 + 608);
    v562 = v221;
    v559 = v219;
    v560 = v220;
    id v222 = *(_OWORD *)(v195 + 640);
    v223 = *(_OWORD *)(v195 + 656);
    v224 = *(_OWORD *)(v195 + 672);
    v566 = *(_DWORD *)(v195 + 688);
    v564 = v223;
    v565 = v224;
    v563 = v222;
    uint64_t v225 = *(_OWORD *)(v195 + 716);
    *(_OWORD *)v567 = *(_OWORD *)(v195 + 700);
    *(_OWORD *)&v567[16] = v225;
    id v226 = *(_OWORD *)(v195 + 732);
    v227 = *(_OWORD *)(v195 + 748);
    id v228 = *(_OWORD *)(v195 + 780);
    *(_OWORD *)&v567[64] = *(_OWORD *)(v195 + 764);
    *(_OWORD *)&v567[80] = v228;
    *(_OWORD *)&v567[32] = v226;
    *(_OWORD *)&v567[48] = v227;
    v229 = *(_OWORD *)(v195 + 796);
    id v230 = *(_OWORD *)(v195 + 812);
    id v231 = *(_OWORD *)(v195 + 828);
    *(_OWORD *)&v570[12] = *(_OWORD *)(v195 + 840);
    v569 = v230;
    *(_OWORD *)v570 = v231;
    v568 = v229;
  }

  v490 = 0;
  double Current = (int)CFAbsoluteTimeGetCurrent();
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101839590);
  }
  v233 = Current % 10;
  v234 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    sub_100F58B68((uint64_t)v530, (std::stringbuf::string_type *)v515);
    v235 = v515[23];
    v236 = *(_BYTE **)v515;
    sub_100F58CE4((uint64_t)v530, (std::stringbuf::string_type *)v498);
    uint64_t v237 = v515;
    if (v235 < 0) {
      uint64_t v237 = v236;
    }
    if (v500[9] >= 0) {
      v238 = v498;
    }
    else {
      v238 = *(_BYTE **)v498;
    }
    uint64_t v239 = &v496;
    if ((v496.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v239 = (std::string *)v496.__r_.__value_.__r.__words[0];
    }
    v240 = &v497;
    if ((v497.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      v240 = (std::string *)v497.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136447747;
    *(void *)&uint8_t buf[4] = a2;
    v573 = 2082;
    *(void *)v574 = v237;
    *(_WORD *)&v574[8] = 2082;
    *(void *)&v574[10] = v238;
    *(_WORD *)&v574[18] = 2049;
    *(void *)&v574[20] = *(void *)&v567[20];
    *(_WORD *)&v574[28] = 2082;
    *(void *)&v574[30] = v239;
    *(_WORD *)&v574[38] = 2082;
    *(void *)&v574[40] = v240;
    *(_WORD *)&v574[48] = 1026;
    *(_DWORD *)v575 = v233;
    _os_log_impl( (void *)&_mh_execute_header,  v234,  OS_LOG_TYPE_DEBUG,  "UclpMetric, fixattempt, %{public}s, %{public}s, %{public}s, acc, %{private}.0f, %{public}s, %{public}s, submit10, %{public}d",  buf,  0x44u);
    if ((v500[9] & 0x80000000) != 0) {
      operator delete(*(void **)v498);
    }
    uint64_t v176 = a1;
    if ((v515[23] & 0x80000000) != 0) {
      operator delete(*(void **)v515);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101839590);
    }
    v344 = qword_101934858;
    sub_100F58B68((uint64_t)v530, (std::stringbuf::string_type *)v498);
    v345 = v500[9];
    v346 = *(_BYTE **)v498;
    sub_100F58CE4((uint64_t)v530, &v491);
    v347 = v498;
    if (v345 < 0) {
      v347 = v346;
    }
    if ((v491.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v348 = &v491;
    }
    else {
      v348 = (std::stringbuf::string_type *)v491.__r_.__value_.__r.__words[0];
    }
    v349 = &v496;
    if ((v496.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      v349 = (std::string *)v496.__r_.__value_.__r.__words[0];
    }
    v350 = &v497;
    if ((v497.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      v350 = (std::string *)v497.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)v515 = 136447747;
    *(void *)&v515[4] = a2;
    *(_WORD *)&v515[12] = 2082;
    *(void *)&v515[14] = v347;
    *(_WORD *)&v515[22] = 2082;
    *(void *)&v515[24] = v348;
    *(_WORD *)&v515[32] = 2049;
    *(void *)&v515[34] = *(void *)&v567[20];
    *(_WORD *)&v515[42] = 2082;
    *(void *)&v515[44] = v349;
    *(_WORD *)&v515[52] = 2082;
    *(void *)&v515[54] = v350;
    *(_WORD *)&v515[62] = 1026;
    *(_DWORD *)&v515[64] = v233;
    LODWORD(v417) = 68;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v344,  2LL,  "UclpMetric, fixattempt, %{public}s, %{public}s, %{public}s, acc, %{private}.0f, %{public}s, %{public}s, submit10, %{public}d",  v515,  *(void *)&v417);
    v352 = v351;
    uint64_t v176 = a1;
    if ((v500[9] & 0x80000000) != 0) {
      operator delete(*(void **)v498);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, const C LCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v352);
    if (v352 != buf) {
      free(v352);
    }
  }

  if (!v233)
  {
    v434[1] = 3321888768LL;
    v436 = *(_OWORD *)&v530[16];
    v437 = *(_OWORD *)&v530[32];
    v438[0] = *(_OWORD *)&v530[48];
    *(_OWORD *)((char *)v438 + 12) = *(_OWORD *)&v530[60];
    v434[0] = _NSConcreteStackBlock;
    v434[2] = sub_100450844;
    v434[3] = &unk_101839530;
    v434[4] = a2;
    v435 = *(_OWORD *)v530;
    v439 = *(_DWORD *)&v530[80];
    v442 = 0LL;
    v440 = 0LL;
    v441 = 0LL;
    sub_10001B72C(&v440, *(const void **)&v530[88], v531, (uint64_t)(v531 - *(void *)&v530[88]) >> 2);
    v452 = v540;
    v453 = v541;
    v454[0] = v542[0];
    *(_OWORD *)((char *)v454 + 12) = *(_OWORD *)((char *)v542 + 12);
    v450 = v538;
    v451 = v539;
    v448 = v536;
    v449 = v537;
    v444 = v533[0];
    v445 = v533[1];
    v446 = v534;
    v447 = v535;
    v443 = v532;
    else {
      v455 = __src;
    }
    v464 = v552;
    v465 = v553;
    v466 = v554;
    v460 = v548;
    v461 = v549;
    v462 = v550;
    v463 = v551;
    v456 = v544;
    v457 = v545;
    v458 = v546;
    v459 = v547;
    v475 = v563;
    v476 = v564;
    v477 = v565;
    v471 = v559;
    v472 = v560;
    v473 = v561;
    v474 = v562;
    v467 = v555;
    v468 = v556;
    v469 = v557;
    v470 = v558;
    v478 = v566;
    *(_OWORD *)&v489[12] = *(_OWORD *)&v570[12];
    v487 = v568;
    v488 = v569;
    *(_OWORD *)v489 = *(_OWORD *)v570;
    v483 = *(_OWORD *)&v567[32];
    v484 = *(_OWORD *)&v567[48];
    v485 = *(_OWORD *)&v567[64];
    v486 = *(_OWORD *)&v567[80];
    v481 = *(_OWORD *)v567;
    v482 = *(_OWORD *)&v567[16];
    else {
      v479 = v496;
    }
    else {
      v480 = v497;
    }
    AnalyticsSendEventLazy(@"com.apple.clx.cellloc.fixattempt", v434);
    if (v440)
    {
      v441 = v440;
      operator delete(v440);
    }
  }

  if (*(double *)&v567[20] < 0.0)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101839590);
    }
    uint64_t v241 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      sub_100F591F4((unsigned int *)v530, (std::stringbuf::string_type *)buf);
      v242 = v574[9] >= 0 ? buf : *(_BYTE **)buf;
      *(_DWORD *)v515 = 136380931;
      *(void *)&v515[4] = v242;
      *(_WORD *)&v515[12] = 1026;
      *(_DWORD *)&v515[14] = v490;
      _os_log_impl( (void *)&_mh_execute_header,  v241,  OS_LOG_TYPE_DEFAULT,  "@ClxCell, Fix, 0, ll, N/A, Unknown, %{private}s, querying, %{public}d",  v515,  0x12u);
      if ((v574[9] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101839590);
      }
      v353 = qword_101934858;
      sub_100F591F4((unsigned int *)v530, (std::stringbuf::string_type *)v515);
      if (v515[23] >= 0) {
        v354 = v515;
      }
      else {
        v354 = *(_BYTE **)v515;
      }
      *(_DWORD *)v498 = 136380931;
      *(void *)&v498[4] = v354;
      v499 = 1026;
      *(_DWORD *)v500 = v490;
      LODWORD(v417) = 18;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v353,  0LL,  "@ClxCell, Fix, 0, ll, N/A, Unknown, %{private}s, querying, %{public}d",  v498,  *(void *)&v417);
      v356 = v355;
      if ((v515[23] & 0x80000000) != 0) {
        operator delete(*(void **)v515);
      }
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, const CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v356);
      if (v356 != buf) {
        free(v356);
      }
    }

    v243 = 104LL;
    if (v490)
    {
      v244 = "alsquery";
    }

    else
    {
      v243 = 56LL;
      v244 = "nofix";
    }

    (*(void (**)(uint64_t, const char *))(*(void *)v176 + v243))(v176, v244);
    if (*(_DWORD *)&v530[8] == 10)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v176 + 48LL))(v176))
      {
        (*(void (**)(uint64_t, const char *))(*(void *)v176 + 80LL))(v176, "nr cell nofix");
      }

      else
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101839590);
        }
        v268 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          v269 = (*(uint64_t (**)(uint64_t))(*(void *)v176 + 48LL))(v176);
          *(_DWORD *)std::stringbuf::string_type buf = 67240192;
          *(_DWORD *)&uint8_t buf[4] = v269;
          _os_log_impl( (void *)&_mh_execute_header,  v268,  OS_LOG_TYPE_DEFAULT,  "CellFlow, skipreqwifi, locationclients, %{public}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101839590);
          }
          v270 = qword_101934858;
          v271 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48LL))(a1);
          *(_DWORD *)v515 = 67240192;
          *(_DWORD *)&v515[4] = v271;
          LODWORD(v417) = 8;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v270,  0LL,  "CellFlow, skipreqwifi, locationclients, %{public}d",  v515,  *(void *)&v417);
          v273 = (char *)v272;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, c onst CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v272);
          if (v273 != buf) {
            free(v273);
          }
          uint64_t v176 = a1;
        }
      }
    }

    goto LABEL_486;
  }

  uint64_t v245 = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (*(_DWORD *)&v530[8] == 6) {
    int v246 = *(_DWORD *)(sub_100450CD0((uint64_t)v530) + 56);
  }
  else {
    int v246 = -1;
  }
  double v247 = (*(uint64_t (**)(uint64_t, _BYTE *, _BYTE *))(*(void *)v176 + 112LL))(v176, v530, v567);
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101839590);
  }
  double v248 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    sub_100F591F4((unsigned int *)v530, (std::stringbuf::string_type *)v515);
    if (v515[23] >= 0) {
      uint64_t v249 = v515;
    }
    else {
      uint64_t v249 = *(_BYTE **)v515;
    }
    double v250 = *(void *)&v567[20];
    if ((v496.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v251 = &v496;
    }
    else {
      v251 = (std::string *)v496.__r_.__value_.__r.__words[0];
    }
    if ((v497.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v252 = &v497;
    }
    else {
      int v252 = (std::string *)v497.__r_.__value_.__r.__words[0];
    }
    sub_100F58B68((uint64_t)v530, (std::stringbuf::string_type *)v498);
    v253 = v500[9];
    int v254 = *(_BYTE **)v498;
    sub_100F58CE4((uint64_t)v530, &v491);
    v255 = v498;
    if (v253 < 0) {
      v255 = v254;
    }
    if ((v491.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v256 = &v491;
    }
    else {
      int v256 = (std::stringbuf::string_type *)v491.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136382723;
    *(void *)&uint8_t buf[4] = v249;
    v573 = 2049;
    *(void *)v574 = v250;
    *(_WORD *)&v574[8] = 2082;
    *(void *)&v574[10] = v251;
    *(_WORD *)&v574[18] = 2082;
    *(void *)&v574[20] = v252;
    *(_WORD *)&v574[28] = 2082;
    *(void *)&v574[30] = v255;
    *(_WORD *)&v574[38] = 2082;
    *(void *)&v574[40] = v256;
    *(_WORD *)&v574[48] = 1026;
    *(_DWORD *)v575 = v247;
    *(_WORD *)&v575[4] = 1026;
    *(_DWORD *)&v575[6] = v246;
    v576 = 2082;
    *(void *)v577 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v248,  OS_LOG_TYPE_DEFAULT,  "CellFlow, fix, %{private}s, acc, %{private}.0f, %{public}s, %{public}s, %{public}s, %{public}s, notify, %{public}d , deploymentType, %{public}d, %{public}s",  buf,  0x54u);
    uint64_t v176 = a1;
    uint64_t v245 = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if ((v500[9] & 0x80000000) != 0) {
      operator delete(*(void **)v498);
    }
    if ((v515[23] & 0x80000000) != 0) {
      operator delete(*(void **)v515);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101839590);
    }
    v357 = qword_101934858;
    sub_100F591F4((unsigned int *)v530, (std::stringbuf::string_type *)v498);
    if (v500[9] >= 0) {
      v358 = v498;
    }
    else {
      v358 = *(_BYTE **)v498;
    }
    v359 = *(void *)&v567[20];
    if ((v496.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v360 = &v496;
    }
    else {
      v360 = (std::string *)v496.__r_.__value_.__r.__words[0];
    }
    if ((v497.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v361 = &v497;
    }
    else {
      v361 = (std::string *)v497.__r_.__value_.__r.__words[0];
    }
    sub_100F58B68((uint64_t)v530, &v491);
    v362 = (char)v491.__r_.__value_.__s.__size_;
    v363 = v491.__r_.__value_.__r.__words[0];
    sub_100F58CE4((uint64_t)v530, &v433);
    v364 = &v491;
    if (v362 < 0) {
      v364 = (std::stringbuf::string_type *)v363;
    }
    if ((v433.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      v365 = &v433;
    }
    else {
      v365 = (std::stringbuf::string_type *)v433.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)v515 = 136382723;
    *(void *)&v515[4] = v358;
    *(_WORD *)&v515[12] = 2049;
    *(void *)&v515[14] = v359;
    *(_WORD *)&v515[22] = 2082;
    *(void *)&v515[24] = v360;
    *(_WORD *)&v515[32] = 2082;
    *(void *)&v515[34] = v361;
    *(_WORD *)&v515[42] = 2082;
    *(void *)&v515[44] = v364;
    *(_WORD *)&v515[52] = 2082;
    *(void *)&v515[54] = v365;
    *(_WORD *)&v515[62] = 1026;
    *(_DWORD *)&v515[64] = v247;
    *(_WORD *)&v515[68] = 1026;
    *(_DWORD *)&v515[70] = v246;
    *(_WORD *)&v515[74] = 2082;
    *(void *)&v515[76] = a2;
    LODWORD(v417) = 84;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v357,  0LL,  "CellFlow, fix, %{private}s, acc, %{private}.0f, %{public}s, %{public}s, %{public}s, %{public}s, notify, %{public}d , deploymentType, %{public}d, %{public}s",  v515,  *(void *)&v417);
    v367 = v366;
    uint64_t v176 = a1;
    uint64_t v245 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    if ((v500[9] & 0x80000000) != 0) {
      operator delete(*(void **)v498);
    }
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, const C LCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v367);
    if (v367 != buf) {
      free(v367);
    }
  }

  if ((v496.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    v257 = v496.__r_.__value_.__s.__size_;
  }
  else {
    v257 = v496.__r_.__value_.__l.__size_;
  }
  sub_1000392EC((uint64_t)buf, v257 + 1);
  if (v574[9] >= 0) {
    int v258 = buf;
  }
  else {
    int v258 = *(_BYTE **)buf;
  }
  if (v257)
  {
    if ((v496.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v259 = &v496;
    }
    else {
      int v259 = (std::string *)v496.__r_.__value_.__r.__words[0];
    }
    memmove(v258, v259, v257);
  }

  *(_WORD *)&v258[v257] = 58;
  if ((v497.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    v260 = &v497;
  }
  else {
    v260 = (std::string *)v497.__r_.__value_.__r.__words[0];
  }
  if ((v497.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    BOOL v261 = v497.__r_.__value_.__s.__size_;
  }
  else {
    BOOL v261 = v497.__r_.__value_.__l.__size_;
  }
  v262 = std::string::append((std::string *)buf, (const std::string::value_type *)v260, v261);
  int v263 = *(_OWORD *)&v262->__r_.__value_.__l.__data_;
  v491.__r_.__value_.__l.__cap_ = v262->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v491.__r_.__value_.__l.__data_ = v263;
  v262->__r_.__value_.__l.__size_ = 0LL;
  v262->__r_.__value_.__l.__cap_ = 0LL;
  v262->__r_.__value_.__r.__words[0] = 0LL;
  if ((v574[9] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  if (sub_10029286C(*(double *)&v567[4], *(double *)&v567[12]))
  {
    v266 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      v267 = &v491;
      if ((v491.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        v267 = (std::stringbuf::string_type *)v491.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136380931;
      *(void *)&uint8_t buf[4] = "cell, null";
      v573 = 2081;
      *(void *)v574 = v267;
      _os_log_impl( (void *)&_mh_execute_header,  v266,  OS_LOG_TYPE_DEBUG,  "ClxMetric, islands, %{private}s, %{private}s",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      v368 = &v491;
      if ((v491.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        v368 = (std::stringbuf::string_type *)v491.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)v515 = 136380931;
      *(void *)&v515[4] = "cell, null";
      *(_WORD *)&v515[12] = 2081;
      *(void *)&v515[14] = v368;
      LODWORD(v417) = 22;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "ClxMetric, islands, %{private}s, %{private}s",  v515,  *(void *)&v417);
      v370 = (char *)v369;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, const CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v369);
      if (v370 != buf) {
        free(v370);
      }
      uint64_t v176 = a1;
    }

    v431[0] = _NSConcreteStackBlock;
    v431[1] = 3321888768LL;
    v431[2] = sub_100450CF4;
    v431[3] = &unk_101839560;
    else {
      v432 = v491;
    }
    v264 = AnalyticsSendEventLazy(@"com.apple.clx.islands", v431);
  }

  v265.n128_u64[0] = *(void *)&v567[4];
  v264.n128_u64[0] = -1.0;
  v265.n128_u64[0] = *(void *)&v567[12];
  v274 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v275 = &v491;
    if ((v491.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v275 = (std::stringbuf::string_type *)v491.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type buf = 136380931;
    *(void *)&uint8_t buf[4] = "cell, sentinel";
    v573 = 2081;
    *(void *)v574 = v275;
    _os_log_impl( (void *)&_mh_execute_header,  v274,  OS_LOG_TYPE_DEBUG,  "ClxMetric, islands, %{private}s, %{private}s",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    v371 = &v491;
    if ((v491.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      v371 = (std::stringbuf::string_type *)v491.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)v515 = 136380931;
    *(void *)&v515[4] = "cell, sentinel";
    *(_WORD *)&v515[12] = 2081;
    *(void *)&v515[14] = v371;
    LODWORD(v417) = 22;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "ClxMetric, islands, %{private}s, %{private}s",  v515,  *(void *)&v417);
    v373 = (char *)v372;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, const C LCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v372);
    if (v373 != buf) {
      free(v373);
    }
    uint64_t v176 = a1;
  }

  v429[0] = _NSConcreteStackBlock;
  v429[1] = 3321888768LL;
  v429[2] = sub_100450DA8;
  v429[3] = &unk_101839560;
  else {
    v430 = v491;
  }
  v264 = AnalyticsSendEventLazy(@"com.apple.clx.islands", v429);
  if ((char)v430.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(v430.__r_.__value_.__l.__data_);
    if (v247)
    {
LABEL_384:
      if (*(_DWORD *)&v570[4] != 1)
      {
        v276 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v276,  OS_LOG_TYPE_FAULT,  "reference frame is not properly set",  buf,  2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          *(_WORD *)v515 = 0;
          LODWORD(v417) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  17LL,  "reference frame is not properly set",  v515,  *(void *)&v417);
          v414 = (char *)v413;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, c onst CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v413);
          if (v414 != buf) {
            free(v414);
          }
          uint64_t v176 = a1;
        }

        *(_DWORD *)&v570[4] = 1;
      }

      if (!*(_DWORD *)&v567[84])
      {
        uint64_t v277 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v277, OS_LOG_TYPE_ERROR, "confidence is not properly set", buf, 2u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          *(_WORD *)v515 = 0;
          LODWORD(v417) = 2;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  16LL,  "confidence is not properly set",  v515,  *(void *)&v417);
          v416 = (char *)v415;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, c onst CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v415);
          if (v416 != buf) {
            free(v416);
          }
          uint64_t v176 = a1;
        }

        *(_DWORD *)&v567[84] = 70;
      }

      __int128 v278 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        v279 = *(void *)&v567[4];
        v280 = *(void *)&v567[12];
        v281 = *(void *)&v567[20];
        sub_100F591F4((unsigned int *)v530, (std::stringbuf::string_type *)v515);
        if (v515[23] >= 0) {
          v282 = v515;
        }
        else {
          v282 = *(_BYTE **)v515;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 134284803;
        *(void *)&uint8_t buf[4] = v279;
        v573 = 2049;
        *(void *)v574 = v280;
        *(_WORD *)&v574[8] = 2050;
        *(void *)&v574[10] = v281;
        *(_WORD *)&v574[18] = 2081;
        *(void *)&v574[20] = v282;
        *(_WORD *)&v574[28] = 1026;
        *(_DWORD *)&v574[30] = v568;
        *(_WORD *)&v574[34] = 2050;
        *(void *)&v574[36] = *(void *)&v567[76];
        _os_log_impl( (void *)&_mh_execute_header,  v278,  OS_LOG_TYPE_DEFAULT,  "@ClxCell, Fix, 1, ll, %{private}.7f, %{private}.7f, acc, %{public}.2f, course, -1.0, key, %{private}s, type, % {public}d, timestamp, %{public}.3f",  buf,  0x3Au);
        if ((v515[23] & 0x80000000) != 0) {
          operator delete(*(void **)v515);
        }
        uint64_t v245 = &OBJC_METACLASS___CLPrivacyManager.vtable;
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        v374 = qword_101934858;
        v375 = *(void *)&v567[4];
        v376 = *(void *)&v567[12];
        v377 = *(void *)&v567[20];
        sub_100F591F4((unsigned int *)v530, (std::stringbuf::string_type *)v498);
        if (v500[9] >= 0) {
          v378 = v498;
        }
        else {
          v378 = *(_BYTE **)v498;
        }
        *(_DWORD *)v515 = 134284803;
        *(void *)&v515[4] = v375;
        *(_WORD *)&v515[12] = 2049;
        *(void *)&v515[14] = v376;
        *(_WORD *)&v515[22] = 2050;
        *(void *)&v515[24] = v377;
        *(_WORD *)&v515[32] = 2081;
        *(void *)&v515[34] = v378;
        *(_WORD *)&v515[42] = 1026;
        *(_DWORD *)&v515[44] = v568;
        *(_WORD *)&v515[48] = 2050;
        *(void *)&v515[50] = *(void *)&v567[76];
        LODWORD(v417) = 58;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v374,  0LL,  "@ClxCell, Fix, 1, ll, %{private}.7f, %{private}.7f, acc, %{public}.2f, course, -1.0, key, %{private}s, type, % {public}d, timestamp, %{public}.3f",  v515,  *(void *)&v417);
        v380 = v379;
        if ((v500[9] & 0x80000000) != 0) {
          operator delete(*(void **)v498);
        }
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, con st CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v380);
        if (v380 != buf) {
          free(v380);
        }
        uint64_t v176 = a1;
        uint64_t v245 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
      }

      *(double *)&v567[76] = a5;
      sub_100246564((uint64_t)v515);
      v516 = v568;
      v517 = v569;
      v518[0] = *(_OWORD *)v570;
      *(_OWORD *)((char *)v518 + 12) = *(_OWORD *)&v570[12];
      *(_OWORD *)&v515[32] = *(_OWORD *)&v567[32];
      *(_OWORD *)&v515[48] = *(_OWORD *)&v567[48];
      *(_OWORD *)&v515[64] = *(_OWORD *)&v567[64];
      *(_DWORD *)&v515[84] = *(_DWORD *)&v567[84];
      *(_OWORD *)v515 = *(_OWORD *)v567;
      *(_OWORD *)&v515[16] = *(_OWORD *)&v567[16];
      *(double *)&v515[76] = a5;
      *(void *)&v515[88] = 0xBFF0000000000000LL;
      v519 = 0LL;
      v520 = sub_101171D38();
      v523 = sub_101171D4C();
      v492 = 0;
      if (sub_1006D0314((float *)&v492, *(double *)&v567[4], *(double *)&v567[12]))
      {
        v522 = v492;
        v521 = 1;
      }

      if (qword_101934A90 != -1) {
        dispatch_once(&qword_101934A90, &stru_1018395D0);
      }
      char v283 = (os_log_s *)qword_101934A98;
      if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
      {
        std::string v284 = *(_OWORD *)&v515[4];
        BOOL v285 = *(void *)&v515[20];
        v286 = *(_DWORD *)&v515[84];
        CFRunLoopSourceContext v287 = *(void *)&v515[88];
        v288 = sub_100832C40(v516);
        v289 = v516;
        sub_100F57510((unsigned int *)v530, (std::stringbuf::string_type *)v498);
        if (v500[9] >= 0) {
          v290 = v498;
        }
        else {
          v290 = *(_BYTE **)v498;
        }
        *(_DWORD *)std::stringbuf::string_type buf = 136317954;
        *(void *)&uint8_t buf[4] = "Cell";
        v573 = 1024;
        *(_DWORD *)v574 = 1;
        *(_WORD *)&v574[4] = 2048;
        *(void *)&v574[6] = v284;
        *(_WORD *)&v574[14] = 2048;
        *(void *)&v574[16] = *((void *)&v284 + 1);
        *(_WORD *)&v574[24] = 2048;
        *(void *)&v574[26] = v285;
        *(_WORD *)&v574[34] = 1024;
        *(_DWORD *)&v574[36] = v286;
        *(_WORD *)&v574[40] = 2048;
        *(void *)&v574[42] = v287;
        *(_WORD *)v575 = 2080;
        *(void *)&v575[2] = v288;
        v576 = 1024;
        *(_DWORD *)v577 = v289;
        *(_WORD *)&v577[4] = 2080;
        *(void *)&v577[6] = v290;
        *(_WORD *)&v577[14] = 1024;
        *(_DWORD *)&v577[16] = -1;
        LOWORD(v578) = 1024;
        *(_DWORD *)((char *)&v578 + 2) = v518[0];
        _os_log_impl( (void *)&_mh_execute_header,  v283,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Confidence,%d,Lifespan,%.3f,SubType,%s,MatchLevel,%d,cell,%s,Transm it,%d,integrity,%d",  buf,  0x66u);
        if ((v500[9] & 0x80000000) != 0) {
          operator delete(*(void **)v498);
        }
        uint64_t v176 = a1;
        uint64_t v245 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
      }

      if (sub_1002921D0(117, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A90 != -1) {
          dispatch_once(&qword_101934A90, &stru_1018395D0);
        }
        v381 = qword_101934A98;
        v382 = *(void *)&v515[4];
        v383 = *(void *)&v515[12];
        v384 = *(void *)&v515[20];
        v385 = *(_DWORD *)&v515[84];
        v386 = *(void *)&v515[88];
        v387 = sub_100832C40(v516);
        v388 = v516;
        sub_100F57510((unsigned int *)v530, &v433);
        if ((v433.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          v389 = &v433;
        }
        else {
          v389 = (std::stringbuf::string_type *)v433.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)v498 = 136317954;
        *(void *)&v498[4] = "Cell";
        v499 = 1024;
        *(_DWORD *)v500 = 1;
        *(_WORD *)&v500[4] = 2048;
        *(void *)&v500[6] = v382;
        *(_WORD *)&v500[14] = 2048;
        *(void *)&v500[16] = v383;
        *(_WORD *)&v500[24] = 2048;
        *(void *)&v500[26] = v384;
        v501 = 1024;
        v502 = v385;
        v503 = 2048;
        v504 = v386;
        v505 = 2080;
        v506 = v387;
        v507 = 1024;
        v508 = v388;
        v509 = 2080;
        v510 = v389;
        v511 = 1024;
        v512 = -1;
        v513 = 1024;
        v514 = v518[0];
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v381,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Confidence,%d,Lifespan,%.3f,SubType,%s,MatchLevel,%d,cell,%s,Transm it,%d,integrity,%d",  v498,  102,  v418,  v419,  *(double *)&v420,  DWORD2(v420),  *(double *)&a2,  (const char *)v422,  (_DWORD)v423,  *((const char **)&v423 + 1),  (_DWORD)v424,  DWORD2(v424));
        v391 = v390;
        sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, con st CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v391);
        if (v391 != buf) {
          free(v391);
        }
        uint64_t v176 = a1;
        uint64_t v245 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
      }

      if (sub_100E575B0())
      {
        sub_1002A5370(buf);
        *(_DWORD *)v498 = v516;
        sub_1002AC220((uint64_t)buf, "cellMatch", v498);
        sub_1002AB3FC((uint64_t)buf, "query", &v490);
        sub_1002AC7B8((uint64_t)buf, "hAcc", &v567[20]);
        sub_100E57614((uint64_t)buf, (uint64_t)"locationd");
        sub_1002A5590(buf);
      }

      (*(void (**)(uint64_t, _BYTE *))(*(void *)v176 + 64LL))(v176, v515);

      v291 = v528;
      if (v528)
      {
        p_shared_owners = (unint64_t *)&v528->__shared_owners_;
        do
          v293 = __ldaxr(p_shared_owners);
        while (__stlxr(v293 - 1, p_shared_owners));
        if (!v293)
        {
          ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
          std::__shared_weak_count::__release_weak(v291);
        }
      }

      if (v527 < 0) {
        operator delete(v526);
      }
      v294 = v525;
      if (v525)
      {
        v295 = (unint64_t *)&v525->__shared_owners_;
        do
          v296 = __ldaxr(v295);
        while (__stlxr(v296 - 1, v295));
        if (!v296)
        {
          ((void (*)(std::__shared_weak_count *))v294->__on_zero_shared)(v294);
          std::__shared_weak_count::__release_weak(v294);
        }
      }

      v297 = v524;
      if (v524)
      {
        v298 = (unint64_t *)&v524->__shared_owners_;
        do
          v299 = __ldaxr(v298);
        while (__stlxr(v299 - 1, v298));
        if (!v299)
        {
          ((void (*)(std::__shared_weak_count *))v297->__on_zero_shared)(v297);
          std::__shared_weak_count::__release_weak(v297);
        }
      }
    }
  }

  else
  {
LABEL_383:
    if (v247) {
      goto LABEL_384;
    }
  }

  (*(void (**)(uint64_t, const char *, __n128, __n128))(*(void *)v176 + 104LL))(v176, "fix", v264, v265);
  if ((v568 & 0xFFFFFFFE) == 6)
  {
    v301 = (uint64_t)*v422;
    v300 = v422[1];
    if (*v422 == v300)
    {
      v307 = (uint64_t)*v422;
      v302 = (uint64_t)*v422;
    }

    else
    {
      v302 = (uint64_t)*v422;
      while (1)
      {
        v303 = *(_DWORD *)(v302 + 8);
        v304 = v303 > 7;
        v305 = (1 << v303) & 0x87;
        if (!v304 && v305 != 0) {
          break;
        }
        v302 += 696LL;
        if ((_OWORD *)v302 == v300)
        {
          v302 = (uint64_t)v422[1];
          break;
        }
      }

      v307 = (uint64_t)*v422;
      do
      {
        if (*(_DWORD *)(v307 + 8) == 3) {
          goto LABEL_454;
        }
        v307 += 696LL;
      }

      while ((_OWORD *)v307 != v300);
      v307 = (uint64_t)v422[1];
LABEL_454:
      while (*(_DWORD *)(v301 + 8) != 6)
      {
        v301 += 696LL;
        if ((_OWORD *)v301 == v300)
        {
          v301 = (uint64_t)v422[1];
          break;
        }
      }
    }

    v308 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      v309 = ((char *)v422[1] - (char *)*v422) >> 3;
      *(_DWORD *)std::stringbuf::string_type buf = 134349824;
      *(void *)&uint8_t buf[4] = 0x66FD0EB66FD0EB67LL * v309;
      v573 = 1026;
      *(_DWORD *)v574 = v302 != (void)v300;
      *(_WORD *)&v574[4] = 1026;
      *(_DWORD *)&v574[6] = v307 != (void)v300;
      *(_WORD *)&v574[10] = 1026;
      *(_DWORD *)&v574[12] = v301 != (void)v300;
      _os_log_impl( (void *)&_mh_execute_header,  v308,  OS_LOG_TYPE_DEFAULT,  "@CellLoc, tiledl, cells, %{public}lu, gsm, %{public}d, cdma, %{public}d, lte, %{public}d",  buf,  0x1Eu);
    }

    v310 = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101839590);
      }
      v392 = ((char *)v422[1] - (char *)*v422) >> 3;
      *(_DWORD *)v515 = 134349824;
      *(void *)&v515[4] = 0x66FD0EB66FD0EB67LL * v392;
      *(_WORD *)&v515[12] = 1026;
      *(_DWORD *)&v515[14] = v302 != (void)v300;
      *(_WORD *)&v515[18] = 1026;
      *(_DWORD *)&v515[20] = v307 != (void)v300;
      *(_WORD *)&v515[24] = 1026;
      *(_DWORD *)&v515[26] = v301 != (void)v300;
      LODWORD(v417) = 30;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@CellLoc, tiledl, cells, %{public}lu, gsm, %{public}d, cdma, %{public}d, lte, %{public}d",  v515,  *(void *)&v417);
      v394 = (char *)v393;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, const CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v393);
      if (v394 != buf) {
        free(v394);
      }
      uint64_t v176 = a1;
      v310 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    }

    if ((_OWORD *)v302 != v300)
    {
      v311 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        v312 = *(void *)&v567[4];
        v313 = *(void *)&v567[12];
        v314 = sub_100F59508(v302);
        *(_DWORD *)std::stringbuf::string_type buf = 134218496;
        *(void *)&uint8_t buf[4] = v312;
        v573 = 2048;
        *(void *)v574 = v313;
        *(_WORD *)&v574[8] = 2048;
        *(void *)&v574[10] = v314;
        _os_log_impl( (void *)&_mh_execute_header,  v311,  OS_LOG_TYPE_DEBUG,  "CellLoc, requestDownload, GSM, %.8f, %.8f, seckey, %llu",  buf,  0x20u);
      }

      v310 = &OBJC_METACLASS___CLPrivacyManager.vtable;
      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101839590);
        }
        v395 = qword_101934858;
        v396 = *(void *)&v567[4];
        v397 = *(void *)&v567[12];
        v398 = sub_100F59508(v302);
        *(_DWORD *)v515 = 134218496;
        *(void *)&v515[4] = v396;
        *(_WORD *)&v515[12] = 2048;
        *(void *)&v515[14] = v397;
        *(_WORD *)&v515[22] = 2048;
        *(void *)&v515[24] = v398;
        LODWORD(v417) = 32;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v395,  2LL,  "CellLoc, requestDownload, GSM, %.8f, %.8f, seckey, %llu",  COERCE_DOUBLE(v515),  v417,  *(void *)&v418);
        v400 = (char *)v399;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, con st CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v399);
        if (v400 != buf) {
          free(v400);
        }
        uint64_t v176 = a1;
        v310 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
      }

      v315 = *(double *)&v567[4];
      v316 = *(double *)&v567[12];
      v317 = sub_100F59508(v302);
      (*(void (**)(uint64_t, uint64_t, uint64_t, double, double))(*(void *)v176 + 88LL))( v176,  3LL,  v317,  v315,  v316);
    }

    if ((_OWORD *)v307 != v300)
    {
      v318 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        v319 = *(void *)&v567[4];
        v320 = *(void *)&v567[12];
        v321 = sub_100F59508(v307);
        *(_DWORD *)std::stringbuf::string_type buf = 134218496;
        *(void *)&uint8_t buf[4] = v319;
        v573 = 2048;
        *(void *)v574 = v320;
        *(_WORD *)&v574[8] = 2048;
        *(void *)&v574[10] = v321;
        _os_log_impl( (void *)&_mh_execute_header,  v318,  OS_LOG_TYPE_DEBUG,  "CellLoc, requestDownload, CDMA, %.8f, %.8f, seckey, %llu",  buf,  0x20u);
        v310 = &OBJC_METACLASS___CLPrivacyManager.vtable;
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        v401 = qword_101934858;
        v402 = *(void *)&v567[4];
        v403 = *(void *)&v567[12];
        v404 = sub_100F59508(v307);
        *(_DWORD *)v515 = 134218496;
        *(void *)&v515[4] = v402;
        *(_WORD *)&v515[12] = 2048;
        *(void *)&v515[14] = v403;
        *(_WORD *)&v515[22] = 2048;
        *(void *)&v515[24] = v404;
        LODWORD(v417) = 32;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v401,  2LL,  "CellLoc, requestDownload, CDMA, %.8f, %.8f, seckey, %llu",  COERCE_DOUBLE(v515),  v417,  *(void *)&v418);
        v406 = (char *)v405;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, con st CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v405);
        if (v406 != buf) {
          free(v406);
        }
        uint64_t v176 = a1;
        v310 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
      }

      v322 = *(double *)&v567[4];
      v323 = *(double *)&v567[12];
      v324 = sub_100F59508(v307);
      (*(void (**)(uint64_t, uint64_t, uint64_t, double, double))(*(void *)v176 + 88LL))( v176,  5LL,  v324,  v322,  v323);
    }

    if ((_OWORD *)v301 != v300)
    {
      v325 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
      {
        v326 = *(void *)&v567[4];
        v327 = *(void *)&v567[12];
        v328 = sub_100F59508(v301);
        *(_DWORD *)std::stringbuf::string_type buf = 134218496;
        *(void *)&uint8_t buf[4] = v326;
        v573 = 2048;
        *(void *)v574 = v327;
        *(_WORD *)&v574[8] = 2048;
        *(void *)&v574[10] = v328;
        _os_log_impl( (void *)&_mh_execute_header,  v325,  OS_LOG_TYPE_DEBUG,  "CellLoc, requestDownload, LTE, %.8f, %.8f, seckey, %llu",  buf,  0x20u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        v407 = qword_101934858;
        v408 = *(void *)&v567[4];
        v409 = *(void *)&v567[12];
        v410 = sub_100F59508(v301);
        *(_DWORD *)v515 = 134218496;
        *(void *)&v515[4] = v408;
        *(_WORD *)&v515[12] = 2048;
        *(void *)&v515[14] = v409;
        *(_WORD *)&v515[22] = 2048;
        *(void *)&v515[24] = v410;
        LODWORD(v417) = 32;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v407,  2LL,  "CellLoc, requestDownload, LTE, %.8f, %.8f, seckey, %llu",  COERCE_DOUBLE(v515),  v417,  *(void *)&v418);
        v412 = (char *)v411;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, con st CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v411);
        if (v412 != buf) {
          free(v412);
        }
        uint64_t v176 = a1;
      }

      v329 = *(double *)&v567[4];
      v330 = *(double *)&v567[12];
      v331 = sub_100F59508(v301);
      (*(void (**)(uint64_t, uint64_t, uint64_t, double, double))(*(void *)v176 + 88LL))( v176,  4LL,  v331,  v329,  v330);
    }
  }

  *(float *)&uint64_t v6 = self->_firstCatherine;
  objc_msgSend( v3,  "setObject:forKey:",  +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v6),  @"firstCatherine");
  has = self->_has;
  if ((*(_BYTE *)&has & 4) == 0)
  {
LABEL_94:
    if ((*(_BYTE *)&has & 8) == 0) {
      goto LABEL_95;
    }
    goto LABEL_118;
  }

            if (qword_101934970 != -1) {
              dispatch_once(&qword_101934970, &stru_10185AF60);
            }
            uint64_t v73 = (os_log_s *)qword_101934978;
            if (os_log_type_enabled((os_log_t)qword_101934978, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 68289794;
              *(_DWORD *)&uint8_t buf[4] = 0;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              *(_WORD *)&buf[18] = 2114;
              *(void *)&buf[20] = v150;
              *(_WORD *)&_BYTE buf[28] = 2114;
              *(void *)&buf[30] = v24;
              *(_WORD *)&buf[38] = 2114;
              *(void *)&buf[40] = v13;
              _os_log_impl( (void *)&_mh_execute_header,  v73,  OS_LOG_TYPE_FAULT,  "{msg%{public}.0s:Failed bundle-path masquerading attempt, NaturalKeyPath:%{public, location: escape_only}@, NewBundlePath:%{public, location:escape_only}@, NewLimitingBundleId:%{public, loc ation:escape_only}@}",  buf,  0x30u);
              if (qword_101934970 != -1) {
                dispatch_once(&qword_101934970, &stru_10185AF60);
              }
            }

            unint64_t v74 = (os_log_s *)qword_101934978;
            if (os_signpost_enabled((os_log_t)qword_101934978))
            {
              *(_DWORD *)std::stringbuf::string_type buf = 68289794;
              *(_DWORD *)&uint8_t buf[4] = 0;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              *(_WORD *)&buf[18] = 2114;
              uint64_t v4 = (CLClientKeyPath *)v150;
              *(void *)&buf[20] = v150;
              *(_WORD *)&_BYTE buf[28] = 2114;
              *(void *)&buf[30] = v24;
              *(_WORD *)&buf[38] = 2114;
              *(void *)&buf[40] = v13;
              _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v74,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "Failed bundle-path masquerading attempt",  "{msg%{public}.0s:Failed bundle-path masquerading attempt, NaturalKeyPath:%{public, location: escape_only}@, NewBundlePath:%{public, location:escape_only}@, NewLimitingBundleId:%{public, loc ation:escape_only}@}",  buf,  0x30u);
LABEL_123:
              int v28 = 0;
              __int16 v29 = 0;
              unint64_t v30 = 0LL;
              uint64_t v153 = 1;
              goto LABEL_124;
            }

                PBReaderRecallMark(a2, v69);
              }

              else
              {
                unint64_t v63 = 0;
                unint64_t v64 = 0;
                char v65 = 0LL;
                while (1)
                {
                  char v66 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
                  if (v66 == -1LL || v66 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                    break;
                  }
                  __int16 v67 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v66);
                  *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v66 + 1;
                  v65 |= (unint64_t)(v67 & 0x7F) << v63;
                  if ((v67 & 0x80) == 0) {
                    goto LABEL_160;
                  }
                  v63 += 7;
                  int v9 = v64++ >= 9;
                  if (v9)
                  {
                    uint64_t v68 = 0LL;
                    goto LABEL_163;
                  }
                }

                *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_160:
                if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
                  uint64_t v68 = 0LL;
                }
                else {
                  uint64_t v68 = v65;
                }
LABEL_163:
                PBRepeatedInt32Add(a1 + 8, v68);
              }

  *(_DWORD *)(a1 + 396) |= 0x40000u;
  int v41 = *(void **)(a1 + 144);
  if (!v41)
  {
    int v41 = operator new(0x18uLL);
    v41[1] = 0LL;
    v41[2] = 0LL;
    double *v41 = off_101875780;
    *(void *)(a1 + 144) = v41;
  }

  uint64_t v42 = *(void *)(a2 + 144);
  if (!v42) {
    uint64_t v42 = *(void *)(qword_1019A1D38 + 144);
  }
  sub_100BB96B4((uint64_t)v41, v42);
  int v7 = *(_DWORD *)(a2 + 396);
  if ((v7 & 0x80000) == 0)
  {
LABEL_101:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_126;
  }

    uint64_t v123 = 1;
    uint64_t v128 = 1;
    goto LABEL_117;
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101879178);
  }
  uint64_t v21 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v125;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "TILE: checkDownloadSchedule, numOfActiveDownloads, %d, not scheduling more",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101879178);
    }
    *(_DWORD *)int v132 = 67109120;
    *(_DWORD *)&v132[4] = v125;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "TILE: checkDownloadSchedule, numOfActiveDownloads, %d, not scheduling more",  v132);
    int v9 = (char *)v22;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLTilesManager::checkDownloadSchedule(CFAbsoluteTime)", "%s\n", v22);
    goto LABEL_264;
  }

          double v55 = v22;
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLDigitalElevationModel::readCLDEMTileFromFile(CLDEMTile &, const std::string &, BOOL &)",  "%s\n",  v23);
LABEL_117:
          if (v55 != buf) {
            free(v55);
          }
          goto LABEL_13;
        }

        bzero(buf, 0x65CuLL);
        if (qword_101934880 != -1) {
          dispatch_once(&qword_101934880, &stru_10187F990);
        }
        unint64_t v72 = qword_101934888;
        if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v73 = a2;
        }
        else {
          uint64_t v73 = (const std::string *)a2->__r_.__value_.__r.__words[0];
        }
        unint64_t v74 = *__error();
        unint64_t v78 = 136315394;
        __int16 v79 = v73;
        double v80 = 1024;
        LODWORD(v81) = v74;
        LODWORD(v75) = 18;
        int v41 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v72,  16LL,  "#Error,DEM,can't stat,%s,errno,%d",  &v78,  v75);
      }
    }

    else
    {
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10187F990);
      }
      uint64_t v39 = (os_log_s *)qword_101934888;
      if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_ERROR,  "#Error,DEM,CLCommonSetFileProtectionClass,fail",  buf,  2u);
      }

      if (!sub_1002921D0(115, 0)) {
        goto LABEL_100;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_10187F990);
      }
      LOWORD(v88.st_dev) = 0;
      LODWORD(v75) = 2;
      int v41 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  16LL,  "#Error,DEM,CLCommonSetFileProtectionClass,fail",  &v88,  v75);
    }

    uint64_t v38 = v40;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLDigitalElevationModel::readCLDEMTileFromFile(CLDEMTile &, const std::string &, BOOL &)",  "%s\n",  v41);
LABEL_160:
    if (v38 != buf) {
      free(v38);
    }
    goto LABEL_100;
  }

  if (qword_101934880 != -1) {
    dispatch_once(&qword_101934880, &stru_10187F990);
  }
  uint64_t v12 = (os_log_s *)qword_101934888;
  if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_ERROR))
  {
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      id v13 = a2;
    }
    else {
      id v13 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    uint64_t v14 = *__error();
    *(_DWORD *)std::stringbuf::string_type buf = 136446466;
    *(void *)int v90 = v13;
    *(_WORD *)&v90[8] = 1026;
    LODWORD(st_size) = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "#Error,DEM,Unable to load %{public}s,errno,%{public}d",  buf,  0x12u);
  }

  __int128 v11 = 0LL;
  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_10187F990);
    }
    char v66 = qword_101934888;
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) != 0) {
      a2 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    __int16 v67 = *__error();
    v88.st_dev = 136446466;
    *(void *)&v88.st_mode = a2;
    WORD2(v88.st_ino) = 1026;
    *(_DWORD *)((char *)&v88.st_ino + 6) = v67;
    LODWORD(v75) = 18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v66,  16LL,  "#Error,DEM,Unable to load %{public}s,errno,%{public}d",  &v88,  v75);
    unint64_t v69 = (uint8_t *)v68;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "static BOOL CLDigitalElevationModel::readCLDEMTileFromFile(CLDEMTile &, const std::string &, BOOL &)",  "%s\n",  v68);
    if (v69 != buf) {
      free(v69);
    }
    return 0LL;
  }

  return v11;
}

  if (sub_100869780(a1 + 1408))
  {
    char v61 = *(_OWORD *)(a1 + 1552);
    *(_OWORD *)(a3 + 5072) = *(_OWORD *)(a1 + 1536);
    *(_OWORD *)(a3 + 5088) = v61;
    *(_OWORD *)(a3 + 5104) = *(_OWORD *)(a1 + 1568);
    uint64_t v62 = *(_OWORD *)(a1 + 1488);
    *(_OWORD *)(a3 + 5008) = *(_OWORD *)(a1 + 1472);
    *(_OWORD *)(a3 + 5024) = v62;
    unint64_t v63 = *(_OWORD *)(a1 + 1520);
    *(_OWORD *)(a3 + 504sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_OWORD *)(a1 + 1504);
    *(_OWORD *)(a3 + 5056) = v63;
    unint64_t v64 = *(_OWORD *)(a1 + 1424);
    *(_OWORD *)(a3 + 4944) = *(_OWORD *)(a1 + 1408);
    *(_OWORD *)(a3 + 496sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v64;
    char v65 = *(_OWORD *)(a1 + 1456);
    *(_OWORD *)(a3 + 4976) = *(_OWORD *)(a1 + 1440);
    *(void *)(a3 + 512sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(void *)(a1 + 1584);
    *(_OWORD *)(a3 + 4992) = v65;
  }

  *(void *)(a3 + 816) = *(void *)(a1 + 5968);
  *(_BYTE *)(a3 + 824) = *(_BYTE *)(a1 + 5976);
  std::string::operator=((std::string *)(a3 + 832), (const std::string *)(a1 + 5984));
  char v66 = *(_OWORD *)(a1 + 6024);
  __int16 v67 = *(_OWORD *)(a1 + 6056);
  *(_OWORD *)(a3 + 888) = *(_OWORD *)(a1 + 6040);
  *(_OWORD *)(a3 + 904) = v67;
  *(_OWORD *)(a3 + 916) = *(_OWORD *)(a1 + 6068);
  *(_OWORD *)(a3 + 856) = *(_OWORD *)(a1 + 6008);
  *(_OWORD *)(a3 + 872) = v66;
  std::string::operator=((std::string *)(a3 + 936), (const std::string *)(a1 + 6088));
  uint64_t v68 = v103;
  *(_OWORD *)(a3 + 6216) = v104;
  unint64_t v69 = v106;
  *(_OWORD *)(a3 + 6232) = v105;
  *(_OWORD *)(a3 + 6248) = v69;
  char v70 = v102;
  *(_OWORD *)(a3 + 6168) = v101;
  *(_OWORD *)(a3 + 6184) = v70;
  *(_OWORD *)(a3 + 620sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v68;
  *(_OWORD *)(a3 + 6257) = *(__int128 *)((char *)v4 + 89);
  if (SHIBYTE(v117) < 0) {
    operator delete((void *)v116);
  }
  if (SHIBYTE(v111) < 0) {
    operator delete((void *)v110);
  }
  if (SHIBYTE(v127) < 0) {
    operator delete((void *)v126);
  }
  if (SHIBYTE(v121) < 0) {
    operator delete((void *)v120);
  }
}

  uint64_t result = *(float *)(a2 + 176);
  v5 |= 0x200000000uLL;
  *id v2 = v5;
  *(_BYTE *)(a1 + 324) = v6;
  *(float *)(a1 + 176) = result;
  int v7 = *v3;
  if ((*v3 & 0x10000000000LL) == 0)
  {
LABEL_51:
    if ((v7 & 0x100000000LL) == 0) {
      goto LABEL_52;
    }
    goto LABEL_118;
  }

  PB::TextFormatter::format(this, "lgArclengthXYBiggestImpact", *(float *)(a1 + 232));
  uint64_t v6 = *v5;
  int v7 = *(_BYTE *)(a1 + 324);
  if ((*v5 & 0x1000000000000LL) == 0)
  {
LABEL_50:
    if ((v6 & 0x2000000000000LL) == 0) {
      goto LABEL_51;
    }
    goto LABEL_118;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176), 0x2Eu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x10000000000LL) == 0)
  {
LABEL_51:
    if ((v6 & 0x100000000LL) == 0) {
      goto LABEL_52;
    }
    goto LABEL_118;
  }

  uint64_t result = *(float *)(a2 + 48);
  v5 |= 0x200uLL;
  *id v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 48) = result;
  uint64_t v4 = *v3;
  int v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100) == 0)
  {
LABEL_43:
    if ((v4 & 4) == 0) {
      goto LABEL_44;
    }
    goto LABEL_118;
  }

  PB::TextFormatter::format(this, "hasAudioInEpoch", *(_BYTE *)(a1 + 268));
  uint64_t v6 = *v5;
  int v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 2) == 0)
  {
LABEL_42:
    if ((v7 & 4) == 0) {
      goto LABEL_43;
    }
    goto LABEL_118;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 0x25u);
  uint64_t v5 = *v4;
  uint64_t v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20) == 0)
  {
LABEL_42:
    if ((v5 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_118;
  }

  uint64_t result = *(float *)(a2 + 124);
  v5 |= 0x10000000uLL;
  *id v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 124) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_36:
    if ((v4 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_118;
  }

  PB::TextFormatter::format(this, "kIsAudioRO", *(_BYTE *)(a1 + 310));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_118;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0xCEu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_36:
    if ((v5 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_118;
  }

  uint64_t result = *(float *)(a2 + 272);
  v5 |= 0x400000000000000uLL;
  *id v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 272) = result;
  uint64_t v4 = *v3;
  int v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x400000000000LL) == 0)
  {
LABEL_11:
    if ((v4 & 0x200000000000LL) == 0) {
      goto LABEL_12;
    }
    goto LABEL_118;
  }

  PB::TextFormatter::format(this, "escalationCandidate", *(_BYTE *)(a1 + 317));
  int v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x80) == 0)
  {
LABEL_15:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_118;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 272), 6u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400000000000LL) == 0)
  {
LABEL_11:
    if ((v5 & 0x200000000000LL) == 0) {
      goto LABEL_12;
    }
    goto LABEL_118;
  }

  unint64_t v43 = *(_BYTE *)(a2 + 202);
  unint64_t v44 = v4 >> 16;
  v4 |= 0x8000uLL;
  *(void *)(result + 204) = v3;
  *(_BYTE *)(result + 214) = v44;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 202) = v43;
  uint64_t v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  id v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000000000LL) == 0)
  {
LABEL_38:
    if ((v2 & 0x80000000000LL) == 0) {
      goto LABEL_39;
    }
    goto LABEL_118;
  }

  PB::TextFormatter::format(this, "kEnergyMetRO1", *(_BYTE *)(a1 + 186));
  uint64_t v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 1) == 0)
  {
LABEL_37:
    if ((v5 & 0x20) == 0) {
      goto LABEL_38;
    }
    goto LABEL_118;
  }

  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0x3F6u);
  uint64_t v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40) == 0)
  {
LABEL_38:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_118;
  }

          *(_DWORD *)(a1 + 6sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v60;
          goto LABEL_131;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v15 & 7, 0) & 1) == 0) {
            return 0LL;
          }
          goto LABEL_131;
      }
    }

    uint64_t v19 = 0;
    double v20 = 0;
    uint64_t v15 = 0LL;
    if (v4 > v5) {
      uint64_t v5 = v4;
    }
    while (v5 != v4)
    {
      uint64_t v21 = v4 + 1;
      double v22 = *(_BYTE *)(v12 + v4);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      uint64_t v4 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        uint64_t v15 = 0LL;
        goto LABEL_21;
      }
    }

    uint64_t v6 = 1;
    *((_BYTE *)this + 24) = 1;
  }

  return v6 == 0;
}

LABEL_355:
  *(void *)(a1 + 5016) =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLAnalyticsLogger");
  id v226 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLOutdoorService");
  *(void *)(a1 + 5024) = v226;
  objc_msgSend(v226, "registerDelegate:inSilo:", *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 32), "silo"));
  [*(id *)(a1 + 5024) setDelegateEntityName:"CLLocationController"];
  v227 = -[CLVisitNotificationAdapter initWithLocationController:]( objc_alloc(&OBJC_CLASS___CLVisitNotificationAdapter),  "initWithLocationController:",  a1);
  id *v279 = v227;
  if (v227)
  {
    id v228 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLRoutineMonitor");
    *(void *)(a1 + 5104) = v228;
    if (v228)
    {
      objc_msgSend(v228, "registerDelegate:inSilo:", *(void *)(a1 + 5096), objc_msgSend(*(id *)(a1 + 32), "silo"));
      [*(id *)(a1 + 5104) setDelegateEntityName:"LocationController"];
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      v229 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v229,  OS_LOG_TYPE_DEFAULT,  "LocationController,leeching visits",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        LOWORD(v292[0]) = 0;
        LODWORD(v275) = 2;
        v268 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationController,leeching visits",  v292,  v275);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v268);
        if (v268 != buf) {
          free(v268);
        }
      }

      [*(id *)(a1 + 5104) startLeechingVisitsForClient:*(void *)(a1 + 5096)];
      id v230 = objc_alloc(&OBJC_CLASS___RTStoredVisitFetchOptions);
      id v231 = objc_msgSend( v230,  "initWithAscending:confidence:dateInterval:labelVisit:limit:",  0,  +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", RTVisitConfidenceHigh),  0,  1,  &off_1018D3428);
      v232 = *(void **)(a1 + 5104);
      v280[0] = _NSConcreteStackBlock;
      v280[1] = 3221225472LL;
      v280[2] = sub_100422120;
      v280[3] = &unk_101838AD8;
      v280[4] = a1;
      [v232 fetchStoredVisitsWithOptions:v231 withReply:v280];
    }

    else
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      v235 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v235,  OS_LOG_TYPE_INFO,  "LocationController,routine monitor proxy invalid",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        LOWORD(v292[0]) = 0;
        LODWORD(v275) = 2;
        v274 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "LocationController,routine monitor proxy invalid",  v292,  v275);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v274);
        if (v274 != buf) {
          free(v274);
        }
        v175 = (int *)(a1 + 320);
      }

      id *v279 = 0LL;
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v233 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v233,  OS_LOG_TYPE_INFO,  "LocationController,routine monitor invalid",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      LOWORD(v292[0]) = 0;
      LODWORD(v275) = 2;
      v234 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "LocationController,routine monitor invalid",  v292,  v275);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v234);
      if (v234 != buf) {
        free(v234);
      }
    }
  }

  if (sub_1004FD554())
  {
    v236 = operator new(0x288uLL);
    uint64_t v237 = *(void *)(a1 + 32);
    *(void *)std::stringbuf::string_type buf = &off_101838F60;
    *(void *)&uint8_t buf[8] = a1;
    *(void *)&buf[24] = buf;
    v292[0] = &off_101838FF0;
    v292[1] = a1;
    v293 = v292;
    sub_100AEE68C(v236, v237, buf, v292);
    v238 = v293;
    if (v293 == v292)
    {
      uint64_t v239 = 4LL;
      v238 = v292;
    }

    else
    {
      if (!v293) {
        goto LABEL_384;
      }
      uint64_t v239 = 5LL;
    }

    (*(void (**)(void))(*v238 + 8 * v239))();
LABEL_384:
    v240 = *(void **)&buf[24];
    if (*(_BYTE **)&buf[24] == buf)
    {
      uint64_t v241 = 4LL;
      v240 = buf;
    }

    else
    {
      if (!*(void *)&buf[24])
      {
LABEL_389:
        sub_10043B1D0((uint64_t *)(a1 + 304), (uint64_t)v236);
        goto LABEL_390;
      }

      uint64_t v241 = 5LL;
    }

    (*(void (**)(void))(*v240 + 8 * v241))();
    goto LABEL_389;
  }

LABEL_390:
  (*(void (**)(uint64_t))(*(void *)a1 + 208LL))(a1);
  if (*v175)
  {
    *(void *)std::stringbuf::string_type buf = v175;
    v242 = sub_10000C858((uint64_t **)(a1 + 264), v175, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
    [(id)v242[5][2] register:v242[5][1] forNotification:43 registrationInfo:0];
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101838C40);
    }
    v243 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v243,  OS_LOG_TYPE_DEBUG,  "GPSODOM, kNotificationGnssRhythmicBatchedLocation registered",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101838C40);
      }
      LOWORD(v292[0]) = 0;
      LODWORD(v275) = 2;
      v265 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934888,  2LL,  "GPSODOM, kNotificationGnssRhythmicBatchedLocation registered",  v292,  v275);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)",  "%s\n",  v265);
      if (v265 != buf) {
        free(v265);
      }
    }
  }

  return a1;
}

            if (qword_1019345D0 != -1) {
              dispatch_once(&qword_1019345D0, &stru_10184D4F8);
            }
            int v90 = (os_log_s *)qword_1019345D8;
            if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)std::stringbuf::string_type buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v90,  OS_LOG_TYPE_DEBUG,  "CLFitnessTrackingAllDayAWD: Increasing NumAlertCanceledBecauseOfOffWristPost",  buf,  2u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019345D0 != -1) {
                dispatch_once(&qword_1019345D0, &stru_10184D4F8);
              }
              LOWORD(v31sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
              LODWORD(v309) = 2;
              _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019345D8,  2LL,  "CLFitnessTrackingAllDayAWD: Increasing NumAlertCanceledBecauseOfOffWristPost",  &v310,  v309);
              v268 = (uint8_t *)v267;
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLFallNotifier::trackCancelationReason(const uint64_t, const uint32_t, const CMSPUFall_Types::FallCancelReason)",  "%s\n",  v267);
              if (v268 != buf) {
                free(v268);
              }
            }

            int v91 = sub_1008D9630();
            sub_100738350(v91);
            int v75 = 1;
            goto LABEL_396;
          }

void sub_10041F74C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17, uint64_t a18, uint64_t a19, uint64_t *a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, void *__p, uint64_t a37, int a38, __int16 a39, char a40, char a41)
{
  if (a41 < 0) {
    operator delete(__p);
  }
  sub_10042241C(a11);
  sub_10043ADBC(a12);
  uint64_t v44 = *(void *)(v41 + 1576);
  *(void *)(v41 + 1576) = 0LL;
  if (v44) {
    (*(void (**)(uint64_t))(*(void *)v44 + 8LL))(v44);
  }
  uint64_t v45 = *(void *)(v41 + 1568);
  *(void *)(v41 + 1568) = 0LL;
  if (v45) {
    (*(void (**)(uint64_t))(*(void *)v45 + 8LL))(v45);
  }
  uint64_t v46 = *(void *)(v41 + 1560);
  *(void *)(v41 + 156sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  if (v46) {
    (*(void (**)(uint64_t))(*(void *)v46 + 8LL))(v46);
  }
  uint64_t v47 = *(void *)(v41 + 1552);
  *(void *)(v41 + 1552) = 0LL;
  if (v47) {
    (*(void (**)(uint64_t))(*(void *)v47 + 8LL))(v47);
  }
  uint64_t v48 = *(void *)(v41 + 1544);
  *(void *)(v41 + 1544) = 0LL;
  if (v48) {
    (*(void (**)(uint64_t))(*(void *)v48 + 8LL))(v48);
  }
  uint64_t v49 = *a20;
  *a20 = 0LL;
  if (v49) {
    (*(void (**)(uint64_t))(*(void *)v49 + 8LL))(v49);
  }
  sub_10042AFBC(a17, 0LL);
  uint64_t v50 = *(void *)(v41 + 624);
  *(void *)(v41 + 624) = 0LL;
  if (v50) {
    (*(void (**)(uint64_t))(*(void *)v50 + 8LL))(v50);
  }
  sub_1006BB230(a13);
  sub_10043B1D0(a16, 0LL);
  uint64_t v51 = *(void *)(v41 + 288);
  *(void *)(v41 + 288) = 0LL;
  if (v51) {
    (*(void (**)(uint64_t))(*(void *)v51 + 8LL))(v51);
  }
  sub_10043B178(a18, *(void **)(v41 + 272));
  sub_10043B0E4(a14, *(void **)(v41 + 248));
  uint64_t v52 = *(void *)(v41 + 208);
  *(void *)(v41 + 208) = 0LL;
  if (v52) {
    (*(void (**)(uint64_t))(*(void *)v52 + 8LL))(v52);
  }
  uint64_t v53 = *(void *)(v41 + 200);
  *(void *)(v41 + 20sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  if (v53) {
    (*(void (**)(uint64_t))(*(void *)v53 + 8LL))(v53);
  }
  uint64_t v54 = *(void *)(v41 + 192);
  *(void *)(v41 + 192) = 0LL;
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8LL))(v54);
  }
  uint64_t v55 = *(void *)(v41 + 184);
  *(void *)(v41 + 184) = 0LL;
  if (v55) {
    (*(void (**)(uint64_t))(*(void *)v55 + 8LL))(v55);
  }
  uint64_t v56 = *(void *)(v41 + 176);
  *(void *)(v41 + 176) = 0LL;
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8LL))(v56);
  }
  uint64_t v57 = *v42;
  uint64_t *v42 = 0LL;
  if (v57) {
    (*(void (**)(uint64_t))(*(void *)v57 + 8LL))(v57);
  }
  sub_10047A1C0(v41);
  _Unwind_Resume(a1);
}

void sub_10041FC74(uint64_t a1)
{
}

void sub_10041FC7C(void *a1)
{
  uint64_t v2 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)buf);
  sub_10080EF64(v2, (uint64_t *)buf);
  uint64_t v3 = (__n128 *)sub_10080E94C();
  sub_10080ED44(v3, v12);
  uint64_t v4 = sub_100370E78();
  sub_100372334(v4, (uint64_t)v12);
  uint64_t v5 = a1 + 634;
  if (*((_BYTE *)a1 + 5072) && v12[0].n128_f64[0] > *((double *)a1 + 633))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v6 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf[0]) = 134349056;
      *(double *)((char *)buf + 4) = v12[0].n128_f64[0];
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "#locctl,#rec,triggered client list record at time,mct,%{public}.3f",  (uint8_t *)buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      int v13 = 134349056;
      unint64_t v14 = v12[0].n128_u64[0];
      __int128 v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "#locctl,#rec,triggered client list record at time,mct,%{public}.3f",  &v13,  12);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::handleHeartbeatRequest()", "%s\n", v11);
    }

    uint64_t v7 = sub_100370E78();
    sub_100439B20(a1, buf);
    sub_100372A58(v7, buf);
    sub_10043BEA0((uint64_t)buf, *(void **)&buf[1]);
    if (*v5) {
      _BYTE *v5 = 0;
    }
  }

  if (*((_BYTE *)a1 + 5084) && !((int)v12[0].n128_f64[0] % *((_DWORD *)a1 + 1270)))
  {
    uint64_t v8 = sub_100370E78();
    sub_100439B20(a1, buf);
    sub_100372A58(v8, buf);
    sub_10043BEA0((uint64_t)buf, *(void **)&buf[1]);
  }

  char v9 = *((_BYTE *)a1 + 1872) == 0;
  uint64_t v10 = sub_10080E94C();
  LODWORD(buf[0]) = 1;
  buf[0] = sub_10080EB58(v10, buf);
  sub_1001AA21C((uint64_t)(a1 + 95), v9, buf);
}

void sub_10041FF38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, void *a18)
{
}

void sub_10041FF5C(uint64_t a1, double *a2)
{
  if (*a2 >= 0.0)
  {
    uint64_t v4 = sub_10080E94C();
    *(_DWORD *)std::stringbuf::string_type buf = 1;
    double v5 = sub_10080EB58(v4, buf);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v6 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      double v7 = v5 + *a2;
      *(_DWORD *)std::stringbuf::string_type buf = 134349312;
      double v15 = v7;
      __int16 v16 = 2050;
      double v17 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "#locctl,#rec,requested client list record at time,mct,%{public}.3f,now,%{public}.3f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      double v8 = v5 + *a2;
      int v10 = 134349312;
      double v11 = v8;
      __int16 v12 = 2050;
      double v13 = v5;
      char v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "#locctl,#rec,requested client list record at time,mct,%{public}.3f,now,%{public}.3f",  &v10,  22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::recordClientListWithDelaySec(const CFTimeInterval &)",  "%s\n",  v9);
    }

    *(double *)(a1 + 5064) = v5 + *a2;
    *(_BYTE *)(a1 + 5072) = 1;
  }

void sub_100420178(__int32 a1, int *a2, char *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onStatusNotification, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100426F18(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100420340( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100420360(__int32 a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onWifiServiceNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onWifiServiceNotification, event:%{public, location:escape_on ly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100427F98(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100420528( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100420548(int a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onClientNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onClientNotification, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100438E28(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100420710( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100420730(__int32 a1, int *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onDataProtectionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onDataProtectionNotification, event:%{public, location:escape _only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100428270(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1004208F8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100420918(int a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onBluetoothNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onBluetoothNotification, event:%{public, location:escape_only }s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004284AC(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100420AE0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100420B00(int a1, int *a2, char *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onCompanionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onCompanionNotification, event:%{public, location:escape_only }s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100428598(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100420CC8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100420CE8(int a1, int *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onMotionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onMotionNotification, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10042290C(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100420EB0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100420ED0(int a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onAppNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onAppNotification, event:%{public, location:escape_only}s,  this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10042285C(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100421098( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004210B8(int a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onMotionStateObserverNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onMotionStateObserverNotification, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004229F8(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100421280( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004212A0(int a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onMotionStateMediatorNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onMotionStateMediatorNotification, event:%{public, location:e scape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100422AA8(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100421468( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100421488(int a1, int *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onSignalEnvironmentNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onSignalEnvironmentNotification, event:%{public, location:esc ape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100422B58(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100421650( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100421670(int a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    double v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onTelephonyNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    char v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onTelephonyNotification, event:%{public, location:escape_only }s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100422458(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100421838( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100421858(uint64_t a1)
{
}

void sub_100421860(uint64_t a1)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  uint64_t v2 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 68289026;
    int v11 = 0;
    __int16 v12 = 2082;
    int v13 = "";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:catch-all location unavailable timer fired}",  buf,  0x12u);
  }

  [*(id *)(a1 + 648) setNextFireDelay:1.79769313e308];
  if (*(unsigned __int8 *)(a1 + 160) == 255)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    double v5 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Location unavailable timer fired,required granularity is none,ignoring",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      LOWORD(v9[0]) = 0;
      uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Location unavailable timer fired,required granularity is none,ignoring",  v9,  2,  v9[0]);
      goto LABEL_23;
    }
  }

  else if (objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLDaemonStatus"),  "syncgetIsSleeping"))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v3 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning,Location unavailable fired while sleeping",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      LOWORD(v9[0]) = 0;
      uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationController,#Warning,Location unavailable fired while sleeping",  v9,  2,  v9[0]);
LABEL_23:
      uint64_t v6 = (uint8_t *)v4;
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::onLocationUnavailableTimer()", "%s\n", v4);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    *(_DWORD *)std::stringbuf::string_type buf = 9;
    sub_10042D6DC(a1, (int *)buf, 1LL);
    *(_DWORD *)std::stringbuf::string_type buf = 2;
    if (sub_100247620(a1, (int *)buf, 1LL)
      || (*(_DWORD *)std::stringbuf::string_type buf = 1, sub_100247620(a1, (int *)buf, 1LL))
      || (*(_DWORD *)std::stringbuf::string_type buf = 0, sub_100247620(a1, (int *)buf, 1LL)))
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      double v7 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Location unavailable timer fired, restart with fine granularity as client still wants location",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        LOWORD(v9[0]) = 0;
        double v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Location unavailable timer fired, restart with fine granularity as client still wants location",  v9,  2);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::onLocationUnavailableTimer()", "%s\n", v8);
      }

      buf[0] = 1;
      sub_100425280(a1, (char *)buf);
    }
  }

void sub_100421D30(uint64_t a1)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v2 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::sendTechStatusNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v2, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    uint64_t v3 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      int v11 = "";
      __int16 v12 = 2082;
      int v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::sendTechStatusNotification, event:%{public, location:escape_o nly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  id v4 = [*(id *)(a1 + 32) silo];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10043AD84;
  unsigned __int8 v5[3] = &unk_10181D3D0;
  v5[4] = a1;
  [v4 sync:v5];
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100421F08( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_activity_scope_state_s state, char a15)
{
  if (a15) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100421F28(uint64_t a1)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v2 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::checkActiveProviders",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v2, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    uint64_t v3 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      int v11 = "";
      __int16 v12 = 2082;
      int v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a1;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::checkActiveProviders, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  id v4 = [*(id *)(a1 + 32) silo];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10043AD88;
  unsigned __int8 v5[3] = &unk_10181D3D0;
  v5[4] = a1;
  [v4 sync:v5];
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100422100( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_activity_scope_state_s state, char a15)
{
  if (a15) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100422120(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    id v4 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2114;
      uint64_t v16 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:LocationController,error fetching visits, error:%{public, location:escape_only}@}",  buf,  0x1Cu);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
    }

    double v5 = (os_log_s *)qword_101934838;
    if (os_signpost_enabled((os_log_t)qword_101934838))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289282;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2114;
      uint64_t v16 = a3;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v5,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "LocationController,error fetching visits",  "{msg%{public}.0s:LocationController,error fetching visits, error:%{public, location:escape_only}@}",  buf,  0x1Cu);
    }
  }

  else
  {
    uint64_t v6 = *(void *)(a1 + 32);
    char v7 = -[CLVisit initWithVisit:]([CLVisit alloc], "initWithVisit:", [a2 firstObject]);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    double v8 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "LocationController,fetched most recent visit",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      v10[0] = 0;
      int v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "LocationController,fetched most recent visit",  v10,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationController::CLLocationController(id<CLIntersiloUniverse>)_block_invoke",  "%s\n",  v9);
    }

    sub_10041A0C4(v6, v7);
  }

uint64_t sub_10042241C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 344);
  if (v2)
  {
    *(void *)(a1 + 352) = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_100422458(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  HIDWORD(v18) = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)buf);
  sub_10080EF64(v7, buf);
  LODWORD(buf[0]) = 11;
  HIDWORD(v17) = 11;
  LODWORD(v18) = sub_100FE4D78((int *)buf);
  uint64_t v8 = sub_100370E78();
  LODWORD(buf[0]) = 4;
  sub_10037A5E8(v8, (unsigned int *)buf, (int32x4_t *)((char *)&v17 + 4), (int *)(a1 + 5044), (int *)&v18 + 1, a3);
  int v9 = (const void *)sub_100320878(a3);
  if (CFEqual(v9, kCTRegistrationStatusChangedNotification))
  {
    uint64_t result = (uint64_t)objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLTelephonyService"),  "syncgetIsRegisteredOnCell");
    if ((result & 1) != 0) {
      return result;
    }
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v11 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "device lost registration - no longer has active cell",  (uint8_t *)buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return (*(uint64_t (**)(void, int *, uint64_t))(**(void **)(a1 + 288) + 64LL))( *(void *)(a1 + 288),  a3,  a4);
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    LOWORD(v17) = 0;
    LODWORD(v16) = 2;
    int v12 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "device lost registration - no longer has active cell",  &v17,  v16,  v17,  v18);
    goto LABEL_24;
  }

  __int16 v13 = (const void *)sub_100320878(a3);
  uint64_t result = CFEqual(v13, kCTCallStatusChangeNotification);
  if ((_DWORD)result)
  {
    HIBYTE(v16) = 1;
    uint64_t result = (uint64_t)objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLTelephonyService"),  "syncgetActiveCall:",  (char *)&v16 + 7);
    if ((_DWORD)result)
    {
      if (HIBYTE(v16))
      {
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        __int16 v14 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          LOWORD(buf[0]) = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "device on active call - no longer has active cell",  (uint8_t *)buf,  2u);
        }

        if (!sub_1002921D0(115, 2)) {
          return (*(uint64_t (**)(void, int *, uint64_t))(**(void **)(a1 + 288) + 64LL))( *(void *)(a1 + 288),  a3,  a4);
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        LOWORD(v17) = 0;
        LODWORD(v16) = 2;
        int v12 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "device on active call - no longer has active cell",  &v17,  v16,  v17,  v18);
LABEL_24:
        __int16 v15 = (uint8_t *)v12;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const C LTelephonyService_Type::NotificationData &)",  "%s\n",  v12);
        return (*(uint64_t (**)(void, int *, uint64_t))(**(void **)(a1 + 288) + 64LL))( *(void *)(a1 + 288),  a3,  a4);
      }
    }
  }

  return result;
}

uint64_t sub_1004227C8(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v7);
  sub_10080EF64(v4, v7[0].i64);
  int v8 = 26;
  v7[0].i32[0] = 26;
  v7[0].i32[1] = sub_100FE4D78(&v8);
  uint64_t v5 = sub_100370E78();
  sub_10037FE4C(v5, v7, (int *)(a1 + 5044), a2);
  uint64_t result = *(void *)(a1 + 288);
  if (result) {
    return (*(uint64_t (**)(uint64_t, int *))(*(void *)result + 80LL))(result, a2);
  }
  return result;
}

uint64_t sub_10042285C(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v10 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v11);
  sub_10080EF64(v7, v11[0].i64);
  int v12 = 12;
  v11[0].i32[0] = 12;
  v11[0].i32[1] = sub_100FE4D78(&v12);
  uint64_t v8 = sub_100370E78();
  int v12 = 4;
  sub_10037B194(v8, (unsigned int *)&v12, v11, (int *)(a1 + 5044), &v10, a3, a4);
  return (*(uint64_t (**)(void, int *, uint64_t))(**(void **)(a1 + 288) + 72LL))( *(void *)(a1 + 288),  a3,  a4);
}

void sub_10042290C(uint64_t a1, int a2, int *a3, int *a4)
{
  int v11 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v12);
  sub_10080EF64(v7, v12[0].i64);
  int v13 = 8;
  v12[0].i32[0] = 8;
  v12[0].i32[1] = sub_100FE4D78(&v13);
  uint64_t v8 = sub_100370E78();
  int v13 = 4;
  sub_1003791DC(v8, (unsigned int *)&v13, v12, (int *)(a1 + 5044), &v11, a3, (uint64_t)a4);
  uint64_t v9 = *(void *)(a1 + 288);
  if (v9) {
    (*(void (**)(uint64_t, int *, int *))(*(void *)v9 + 16LL))(v9, a3, a4);
  }
  int v10 = *(unsigned __int8 **)(a1 + 304);
  if (v10) {
    sub_100AF2510(v10, a3, a4);
  }
  sub_1001A824C(a1 + 760, (uint64_t)a3, a4);
  sub_100D8E23C(a1 + 5120, a3, a4);
}

uint64_t sub_1004229F8(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v10 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v11);
  sub_10080EF64(v7, v11[0].i64);
  int v12 = 9;
  v11[0].i32[0] = 9;
  v11[0].i32[1] = sub_100FE4D78(&v12);
  uint64_t v8 = sub_100370E78();
  int v12 = 4;
  sub_10037786C(v8, (unsigned int *)&v12, v11, (int *)(a1 + 5044), &v10, a3, a4);
  return (*(uint64_t (**)(void, int *, uint64_t))(**(void **)(a1 + 288) + 24LL))( *(void *)(a1 + 288),  a3,  a4);
}

uint64_t sub_100422AA8(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v10 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v11);
  sub_10080EF64(v7, v11[0].i64);
  int v12 = 25;
  v11[0].i32[0] = 25;
  v11[0].i32[1] = sub_100FE4D78(&v12);
  uint64_t v8 = sub_100370E78();
  int v12 = 4;
  sub_100378504(v8, (unsigned int *)&v12, v11, (int *)(a1 + 5044), &v10, a3, a4);
  return (*(uint64_t (**)(void, int *, uint64_t))(**(void **)(a1 + 288) + 32LL))( *(void *)(a1 + 288),  a3,  a4);
}

uint64_t sub_100422B58(uint64_t a1, int a2, int *a3, int *a4)
{
  int v10 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v11);
  sub_10080EF64(v7, v11[0].i64);
  int v12 = 10;
  v11[0].i32[0] = 10;
  v11[0].i32[1] = sub_100FE4D78(&v12);
  uint64_t v8 = sub_100370E78();
  int v12 = 4;
  sub_100379BC0(v8, (unsigned int *)&v12, v11, (int *)(a1 + 5044), &v10, a3, a4);
  return (*(uint64_t (**)(void, int *, int *))(**(void **)(a1 + 288) + 56LL))( *(void *)(a1 + 288),  a3,  a4);
}

uint64_t sub_100422C08(uint64_t a1)
{
  *(void *)a1 = off_101838938;
  if (*(_BYTE *)(a1 + 1584)) {
    [*(id *)(*(void *)(a1 + 1536) + 16) unregister:*(void *)(*(void *)(a1 + 1536) + 8) forNotification:1];
  }
  if (*(_BYTE *)(a1 + 1585)) {
    [*(id *)(*(void *)(a1 + 1536) + 16) unregister:*(void *)(*(void *)(a1 + 1536) + 8) forNotification:2];
  }
  uint64_t v2 = *(void *)(a1 + 1536);
  *(void *)(a1 + 1536) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 1568);
  if (v3)
  {
    [*(id *)(v3 + 16) unregister:*(void *)(v3 + 8) forNotification:4];
    [*(id *)(*(void *)(a1 + 1568) + 16) unregister:*(void *)(*(void *)(a1 + 1568) + 8) forNotification:9];
    [*(id *)(*(void *)(a1 + 1568) + 16) unregister:*(void *)(*(void *)(a1 + 1568) + 8) forNotification:3];
    [*(id *)(*(void *)(a1 + 1568) + 16) unregister:*(void *)(*(void *)(a1 + 1568) + 8) forNotification:1];
    uint64_t v4 = *(void *)(a1 + 1568);
    *(void *)(a1 + 1568) = 0LL;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
  }

  if (*(void *)(a1 + 1544))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v5 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "LocationController,unregistered from motion state observer",  (uint8_t *)buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      v37[0] = 0;
      int v34 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "LocationController,unregistered from motion state observer",  v37,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual CLLocationController::~CLLocationController()", "%s\n", v34);
    }

    [*(id *)(*(void *)(a1 + 1544) + 16) unregister:*(void *)(*(void *)(a1 + 1544) + 8) forNotification:0];
    uint64_t v6 = *(void *)(a1 + 1544);
    *(void *)(a1 + 1544) = 0LL;
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
  }

  if (*(void *)(a1 + 1552))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v7 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "LocationController,unregistered from motion state mediator",  (uint8_t *)buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      v37[0] = 0;
      LODWORD(v36) = 2;
      __int16 v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "LocationController,unregistered from motion state mediator",  v37,  v36);
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual CLLocationController::~CLLocationController()", "%s\n", v35);
    }

    [*(id *)(*(void *)(a1 + 1552) + 16) unregister:*(void *)(*(void *)(a1 + 1552) + 8) forNotification:0];
    [*(id *)(*(void *)(a1 + 1552) + 16) unregister:*(void *)(*(void *)(a1 + 1552) + 8) forNotification:2];
    uint64_t v8 = *(void *)(a1 + 1552);
    *(void *)(a1 + 1552) = 0LL;
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
    }
  }

  uint64_t v9 = *(void *)(a1 + 1560);
  if (v9)
  {
    [*(id *)(v9 + 16) unregister:*(void *)(v9 + 8) forNotification:0];
    uint64_t v10 = *(void *)(a1 + 1560);
    *(void *)(a1 + 156sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
  }

  uint64_t v11 = *(void *)(a1 + 1576);
  if (v11)
  {
    sub_100320874(buf, kCTRegistrationStatusChangedNotification);
    [*(id *)(v11 + 16) unregister:*(void *)(v11 + 8) forNotification:sub_100320924(buf)];
    uint64_t v12 = *(void *)(a1 + 1576);
    sub_100320874(buf, kCTCallStatusChangeNotification);
    [*(id *)(v12 + 16) unregister:*(void *)(v12 + 8) forNotification:sub_100320924(buf)];
    uint64_t v13 = *(void *)(a1 + 1576);
    *(void *)(a1 + 1576) = 0LL;
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
    }
  }

  uint64_t v14 = *(void *)(a1 + 168);
  if (v14)
  {
    [*(id *)(v14 + 16) unregister:*(void *)(v14 + 8) forNotification:2];
    [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:3];
    [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:6];
    [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:8];
    [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:15];
    [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:7];
    [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:13];
    [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:10];
    uint64_t v15 = *(void *)(a1 + 168);
    *(void *)(a1 + 168) = 0LL;
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
    }
  }

  uint64_t v16 = *(void **)(a1 + 5032);
  if (v16)
  {

    *(void *)(a1 + 5032) = 0LL;
  }

  uint64_t v17 = *(void **)(a1 + 5104);
  if (v17 && *(void *)(a1 + 5096))
  {
    objc_msgSend(v17, "stopLeechingVisitsForClient:");
    uint64_t v17 = *(void **)(a1 + 5104);
  }

  *(void *)(a1 + 5104) = 0LL;
  *(void *)(a1 + 5096) = 0LL;
  sub_100008390(a1 + 5688, *(void **)(a1 + 5696));
  uint64_t v18 = *(void **)(a1 + 5464);
  if (v18)
  {
    *(void *)(a1 + 5472) = v18;
    operator delete(v18);
  }

  sub_10043ADBC(a1 + 1920);
  uint64_t v19 = *(void *)(a1 + 1576);
  *(void *)(a1 + 1576) = 0LL;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  uint64_t v20 = *(void *)(a1 + 1568);
  *(void *)(a1 + 1568) = 0LL;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8LL))(v20);
  }
  uint64_t v21 = *(void *)(a1 + 1560);
  *(void *)(a1 + 156sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
  }
  uint64_t v22 = *(void *)(a1 + 1552);
  *(void *)(a1 + 1552) = 0LL;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  uint64_t v23 = *(void *)(a1 + 1544);
  *(void *)(a1 + 1544) = 0LL;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
  }
  uint64_t v24 = *(void *)(a1 + 1536);
  *(void *)(a1 + 1536) = 0LL;
  if (v24) {
    (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
  }
  sub_10042AFBC((uint64_t *)(a1 + 704), 0LL);
  uint64_t v25 = *(void *)(a1 + 624);
  *(void *)(a1 + 624) = 0LL;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
  }
  sub_1006BB230(a1 + 344);
  sub_10043B1D0((uint64_t *)(a1 + 304), 0LL);
  uint64_t v26 = *(void *)(a1 + 288);
  *(void *)(a1 + 288) = 0LL;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
  }
  sub_10043B178(a1 + 264, *(void **)(a1 + 272));
  sub_10043B0E4(a1 + 240, *(void **)(a1 + 248));
  uint64_t v27 = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = 0LL;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
  }
  uint64_t v28 = *(void *)(a1 + 200);
  *(void *)(a1 + 20sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  if (v28) {
    (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
  }
  uint64_t v29 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0LL;
  if (v29) {
    (*(void (**)(uint64_t))(*(void *)v29 + 8LL))(v29);
  }
  uint64_t v30 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = 0LL;
  if (v30) {
    (*(void (**)(uint64_t))(*(void *)v30 + 8LL))(v30);
  }
  uint64_t v31 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0LL;
  if (v31) {
    (*(void (**)(uint64_t))(*(void *)v31 + 8LL))(v31);
  }
  uint64_t v32 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = 0LL;
  if (v32) {
    (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
  }
  sub_10047A1C0(a1);
  return a1;
}

void sub_100423324(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_100423334(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100422C08(a1);
  operator delete(v1);
}

uint64_t sub_100423348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = 0;
  if (*(void *)(a1 + 5032))
  {
    if (*(double *)(a3 + 384) <= 0.0 && *(_DWORD *)(a2 + 132) != 2)
    {
      double v8 = *(double *)(a2 + 20);
      int v46 = 0;
      uint64_t v45 = 0LL;
      *(_DWORD *)uint64_t v32 = 0xFFFF;
      *(_OWORD *)&v32[4] = 0uLL;
      *(_OWORD *)&v32[20] = xmmword_1012E0070;
      __asm { FMOV            V0.2D, #-1.0 }

      *(_OWORD *)&v32[36] = _Q0;
      *(_OWORD *)&v32[52] = _Q0;
      *(_OWORD *)&v32[68] = _Q0;
      *(_DWORD *)&v32[84] = 0;
      __int128 v33 = 0uLL;
      *(void *)&v32[88] = 0xBFF0000000000000LL;
      LODWORD(v34) = 0;
      *(void *)((char *)&v34 + 4) = 0xBFF0000000000000LL;
      HIDWORD(v34) = 0x7FFFFFFF;
      memset(v35, 0, 25);
      uint64_t v13 = (void *)sub_100869DC8(&v36);
      __int128 v14 = *(_OWORD *)(a2 + 112);
      __int128 v33 = *(_OWORD *)(a2 + 96);
      __int128 v34 = v14;
      *(_OWORD *)__int16 v35 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)&v35[12] = *(_OWORD *)(a2 + 140);
      __int128 v15 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)&v32[32] = *(_OWORD *)(a2 + 32);
      *(_OWORD *)&v32[48] = v15;
      __int128 v16 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)&v32[64] = *(_OWORD *)(a2 + 64);
      *(_OWORD *)&v32[80] = v16;
      __int128 v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)a2;
      *(_OWORD *)&v32[16] = v17;
      memcpy(v13, (const void *)a3, 0x201uLL);
      sub_1000F2F30(&v37, (uint64_t *)(a3 + 520));
      __int128 v18 = *(_OWORD *)(a3 + 616);
      __int128 v43 = *(_OWORD *)(a3 + 600);
      *(_OWORD *)uint64_t v44 = v18;
      *(void *)&v44[13] = *(void *)(a3 + 629);
      __int128 v19 = *(_OWORD *)(a3 + 552);
      __int128 v39 = *(_OWORD *)(a3 + 536);
      __int128 v40 = v19;
      __int128 v20 = *(_OWORD *)(a3 + 584);
      __int128 v41 = *(_OWORD *)(a3 + 568);
      __int128 v42 = v20;
      unsigned int v21 = [*(id *)(a1 + 5032) syncgetAltitude:v32 rel:&v46 undulation:&v45];
      char v22 = v21;
      if (v21)
      {
        char v3 = (*(uint64_t (**)(void, uint64_t, uint64_t, _BYTE *))(**(void **)(a1 + 288) + 192LL))( *(void *)(a1 + 288),  a2,  a3,  v32);
      }

      else
      {
        __int128 v23 = *(_OWORD *)(a2 + 112);
        __int128 v54 = *(_OWORD *)(a2 + 96);
        __int128 v55 = v23;
        v56[0] = *(_OWORD *)(a2 + 128);
        *(_OWORD *)((char *)v56 + 12) = *(_OWORD *)(a2 + 140);
        __int128 v24 = *(_OWORD *)(a2 + 48);
        __int128 v50 = *(_OWORD *)(a2 + 32);
        __int128 v51 = v24;
        __int128 v25 = *(_OWORD *)(a2 + 80);
        __int128 v52 = *(_OWORD *)(a2 + 64);
        __int128 v53 = v25;
        __int128 v26 = *(_OWORD *)(a2 + 16);
        __int128 v48 = *(_OWORD *)a2;
        __int128 v49 = v26;
        uint64_t v27 = *(void **)(a1 + 5032);
        v47[0] = _NSConcreteStackBlock;
        v47[1] = 3221225472LL;
        _DWORD v47[2] = sub_10043B640;
        v47[3] = &unk_101839070;
        objc_msgSend( v27,  "downloadIfNeeded:signalQuality:allowCenterOverCellular:",   objc_msgSend( v47,  "copy",  *(void *)v32,  *(void *)&v32[8],  *(_OWORD *)&v32[16],  *(_OWORD *)&v32[32],  *(_OWORD *)&v32[48],  *(_OWORD *)&v32[64],  *(void *)&v32[80],  *(void *)&v32[88],  v33,  v34,  *(_OWORD *)v35,  *(void *)&v35[16],  *(void *)&v35[24]),  0,  0);
      }

      uint64_t v28 = v38;
      if (v38)
      {
        p_shared_owners = (unint64_t *)&v38->__shared_owners_;
        do
          unint64_t v30 = __ldaxr(p_shared_owners);
        while (__stlxr(v30 - 1, p_shared_owners));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }

      if ((v22 & 1) == 0) {
LABEL_18:
      }
        char v3 = 0;
    }
  }

  return v3 & 1;
}

void sub_1004235D0(_Unwind_Exception *a1)
{
}

uint64_t sub_1004235E8(uint64_t a1, int a2, int *a3, uint64_t *a4)
{
  int v32 = a2;
  int v6 = *a3;
  uint64_t v7 = *(void *)(a1 + 64);
  if (!v7) {
    goto LABEL_21;
  }
  uint64_t v10 = a1 + 64;
  do
  {
    int v11 = *(_DWORD *)(v7 + 32);
    BOOL v12 = v11 < v6;
    if (v11 >= v6) {
      uint64_t v13 = (uint64_t *)v7;
    }
    else {
      uint64_t v13 = (uint64_t *)(v7 + 8);
    }
    if (!v12) {
      uint64_t v10 = v7;
    }
    uint64_t v7 = *v13;
  }

  while (*v13);
  if (v10 == a1 + 64) {
    goto LABEL_21;
  }
  if (v6 < *(_DWORD *)(v10 + 32)) {
    goto LABEL_21;
  }
  uint64_t v16 = *(void *)(v10 + 48);
  uint64_t v14 = v10 + 48;
  uint64_t v15 = v16;
  if (!v16) {
    goto LABEL_21;
  }
  __int128 v17 = (uint64_t **)(v14 - 8);
  uint64_t v18 = v14;
  do
  {
    int v19 = *(_DWORD *)(v15 + 32);
    BOOL v20 = v19 < a2;
    if (v19 >= a2) {
      unsigned int v21 = (uint64_t *)v15;
    }
    else {
      unsigned int v21 = (uint64_t *)(v15 + 8);
    }
    if (!v20) {
      uint64_t v18 = v15;
    }
    uint64_t v15 = *v21;
  }

  while (*v21);
  if (v18 != v14 && *(_DWORD *)(v18 + 32) <= a2)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    __int128 v25 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(void *)std::stringbuf::string_type buf = &v32;
      id v26 = objc_msgSend( sub_10023311C((uint64_t **)(a1 + 80), &v32, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[8],  "description");
      uint64_t v27 = *a3;
      *(void *)std::stringbuf::string_type buf = &v32;
      uint64_t v28 = sub_100246B14(v17, &v32, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5];
      uint64_t v29 = *a4;
      *(_DWORD *)std::stringbuf::string_type buf = 68290306;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v34 = 2082;
      __int16 v35 = "";
      __int16 v36 = 1026;
      int v37 = a2;
      __int16 v38 = 2114;
      id v39 = v26;
      __int16 v40 = 2050;
      uint64_t v41 = v27;
      __int16 v42 = 2050;
      __int128 v43 = v28;
      __int16 v44 = 2050;
      uint64_t v45 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:LocationController,updateRegistrationInfoForClient, id:%{public}d, client:%{pub lic, location:escape_only}@, notification:%{public, location:CLLocationProvider_Type::Notification}lld, fr om desiredAccuracy:%{public}.1f, to desiredAccuracy:%{public}.1f}",  buf,  0x40u);
    }

    *(void *)std::stringbuf::string_type buf = &v32;
    unint64_t v30 = sub_100246B14(v17, &v32, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
    __int128 v31 = *(_OWORD *)a4;
    *(_OWORD *)((char *)v30 + 52) = *(_OWORD *)((char *)a4 + 12);
    *(_OWORD *)(v30 + 5) = v31;
    int v6 = *a3;
    uint64_t v22 = 1LL;
  }

  else
  {
LABEL_21:
    uint64_t v22 = 0LL;
  }

  if (v6 == 15 || v6 == 0) {
    sub_100423864((uint64_t **)a1, a3);
  }
  return v22;
}

uint64_t **sub_100423864(uint64_t **result, int *a2)
{
  if (*a2 == 15 || *a2 == 0)
  {
    uint64_t v3 = (uint64_t)result;
    if (*((_DWORD *)result + 80))
    {
      *(void *)&__int128 v10 = result + 40;
      uint64_t result = sub_10043B674(result + 30, (int *)result + 80, (uint64_t)&unk_1012CF090, (_DWORD **)&v10);
      if (*((_BYTE *)result + 903))
      {
        __asm { FMOV            V0.2D, #-1.0 }

        __int128 v10 = _Q0;
        __int16 v11 = 0;
        int v13 = 0;
        int v12 = sub_10047D7E8(v3, *a2);
        uint64_t v14 = (_DWORD *)(v3 + 320);
        uint64_t v9 = sub_10000C858((uint64_t **)(v3 + 264), (int *)(v3 + 320), (uint64_t)&unk_1012CF090, &v14)[5];
        LODWORD(v14) = 0;
        return (uint64_t **)sub_10047DC04((uint64_t)v9, (unsigned int *)&v14, &v10);
      }
    }
  }

  return result;
}

uint64_t sub_10042392C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  a1[5088] = 1;
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101938048);
}

BOOL sub_10042394C(uint64_t a1, __int32 a2, int *a3, __int128 *a4)
{
  v24.i32[2] = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)buf);
  sub_10080EF64(v7, (uint64_t *)buf);
  *(_DWORD *)std::stringbuf::string_type buf = 1;
  v24.i32[0] = 1;
  v24.i32[1] = sub_100FE4D78((int *)buf);
  int v8 = *(unsigned __int8 *)(a1 + 5088);
  uint64_t v9 = sub_100370E78();
  __int128 v10 = (int *)(a1 + 5044);
  *(_DWORD *)std::stringbuf::string_type buf = 2;
  if (v8) {
    sub_10037D7EC(v9, (unsigned int *)buf, &v24, v10, &v24.i32[2], a3);
  }
  else {
    sub_10037E110(v9, (unsigned int *)buf, &v24, v10, &v24.i32[2], a3, (uint64_t)a4);
  }
  *(_BYTE *)(a1 + 5088) = 0;
  BOOL v11 = sub_10023FEB8(a1, v24.i32[2], a3, a4);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  int v12 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    __int32 v13 = v24.i32[2];
    *(void *)std::stringbuf::string_type buf = &v24.i64[1];
    id v14 = objc_msgSend( sub_10023311C((uint64_t **)(a1 + 80), &v24.i32[2], (uint64_t)&unk_1012CF090, (_DWORD **)buf)[8],  "description");
    uint64_t v15 = *a3;
    *(_DWORD *)std::stringbuf::string_type buf = 68289794;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v29 = 2082;
    unint64_t v30 = "";
    __int16 v31 = 1026;
    __int32 v32 = v13;
    __int16 v33 = 2114;
    id v34 = v14;
    __int16 v35 = 2050;
    uint64_t v36 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:LocationController,registration, id:%{public}d, client:%{public, location:escape_ only}@, notification:%{public, location:CLLocationProvider_Type::Notification}lld}",  buf,  0x2Cu);
  }

  if (!*a3)
  {
    if (qword_101934880 != -1) {
      dispatch_once(&qword_101934880, &stru_101838C40);
    }
    uint64_t v16 = (os_log_s *)qword_101934888;
    if (os_log_type_enabled((os_log_t)qword_101934888, OS_LOG_TYPE_DEFAULT))
    {
      __int32 v17 = v24.i32[2];
      *(void *)std::stringbuf::string_type buf = &v24.i64[1];
      uint64_t v18 = (const char *)objc_msgSend( objc_msgSend( sub_10023311C((uint64_t **)(a1 + 80), &v24.i32[2], (uint64_t)&unk_1012CF090, (_DWORD **)buf)[8],  "description"),  "UTF8String");
      *(_DWORD *)std::stringbuf::string_type buf = 67240450;
      *(_DWORD *)&uint8_t buf[4] = v17;
      __int16 v29 = 2082;
      unint64_t v30 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "#wigo,on,LocationController,%{public}d,%{public}s",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934880 != -1) {
        dispatch_once(&qword_101934880, &stru_101838C40);
      }
      uint64_t v20 = qword_101934888;
      __int32 v21 = v24.i32[2];
      __int128 v25 = &v24.i32[2];
      id v22 = objc_msgSend( objc_msgSend( sub_10023311C((uint64_t **)(a1 + 80), &v24.i32[2], (uint64_t)&unk_1012CF090, &v25)[8],  "description"),  "UTF8String");
      LODWORD(v25) = 67240450;
      HIDWORD(v25) = v21;
      __int16 v26 = 2082;
      id v27 = v22;
      __int128 v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v20,  0LL,  "#wigo,on,LocationController,%{public}d,%{public}s",  &v25,  18,  v24.i64[0]);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationController::registerForNotification(int, const CLLocationProvider_Type::Notification &, c onst CLLocationProvider_Type::RegInfo &)",  "%s\n",  v23);
    }

    AnalyticsSendEventLazy(@"com.apple.locationd.position.GNSS.WIGO", &stru_101838AF8);
  }

  sub_100423D4C((uint64_t **)a1, a3);
  return v11;
}

NSDictionary *__cdecl sub_100423D40(id a1)
{
  return (NSDictionary *)&off_1018D67D8;
}

uint64_t **sub_100423D4C(uint64_t **result, int *a2)
{
  if (*a2 == 15 || *a2 == 0)
  {
    uint64_t v4 = result;
    int v5 = *a2;
    uint64_t result = (uint64_t **)sub_100247620((uint64_t)result, &v5, 1LL);
  }

  return result;
}

BOOL sub_100423DA8(uint64_t a1, int a2, int *a3)
{
  v14.i32[2] = a2;
  BOOL v5 = 1LL;
  if (sub_100245A50(a1, a2, a3))
  {
    uint64_t v6 = sub_10080E94C();
    sub_1007B8BEC((uint64_t)buf);
    sub_10080EF64(v6, (uint64_t *)buf);
    *(_DWORD *)std::stringbuf::string_type buf = 1;
    v14.i32[0] = 1;
    v14.i32[1] = sub_100FE4D78((int *)buf);
    uint64_t v7 = sub_100370E78();
    *(_DWORD *)std::stringbuf::string_type buf = 3;
    sub_10037D7EC(v7, (unsigned int *)buf, &v14, (int *)(a1 + 5044), &v14.i32[2], a3);
    BOOL v5 = sub_1002406A8((char *)a1, v14.i32[2], a3);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v8 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      __int32 v9 = v14.i32[2];
      *(void *)std::stringbuf::string_type buf = &v14.i64[1];
      __int128 v10 = sub_10023311C((uint64_t **)(a1 + 80), &v14.i32[2], (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      id v11 = objc_msgSend(v10[8], "description", v14.i64[0]);
      uint64_t v12 = *a3;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v16 = 2082;
      __int32 v17 = "";
      __int16 v18 = 1026;
      __int32 v19 = v9;
      __int16 v20 = 2114;
      id v21 = v11;
      __int16 v22 = 2050;
      uint64_t v23 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:LocationController,unregistration, id:%{public}d, client:%{public, location:esc ape_only}@, notification:%{public, location:CLLocationProvider_Type::Notification}lld}",  buf,  0x2Cu);
    }

    if (*a3 == 15 || !*a3)
    {
      *(_DWORD *)std::stringbuf::string_type buf = *a3;
    }
  }

  return v5;
}

uint64_t sub_100423FA0(uint64_t a1, unsigned int *a2)
{
  if (*a2 >= 3) {
    char v4 = -1;
  }
  else {
    char v4 = 2 - *(_BYTE *)a2;
  }
  int v5 = v4;
  char v112 = v4;
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  uint64_t v7 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v8 = *a2;
    __int32 v9 = sub_10100D9D8(*a2);
    *(_DWORD *)std::stringbuf::string_type buf = 67240706;
    *(_DWORD *)&uint8_t buf[4] = v8;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = v9;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLIENT:registerForNotificationInternal,notification,%{public}d,%{public}s,granularity,%{public}d",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v102 = qword_101934838;
    unsigned int v103 = *a2;
    int v104 = sub_10100D9D8(*a2);
    *(_DWORD *)uint64_t v113 = 67240706;
    *(_DWORD *)&v113[4] = v103;
    *(_WORD *)&v113[8] = 2082;
    *(void *)&v113[10] = v104;
    *(_WORD *)&v113[18] = 1026;
    *(_DWORD *)&v113[20] = v5;
    int v105 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v102,  2LL,  "CLIENT:registerForNotificationInternal,notification,%{public}d,%{public}s,granularity,%{public}d",  v113,  24);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationController::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v105);
    if (v105 != buf) {
      free(v105);
    }
  }

  switch(*a2)
  {
    case 0u:
    case 1u:
    case 2u:
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      __int16 v29 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        int v30 = *(char *)(a1 + 160);
        int v31 = *(char *)(a1 + 161);
        *(_DWORD *)std::stringbuf::string_type buf = 67240448;
        *(_DWORD *)&uint8_t buf[4] = v30;
        *(_WORD *)&uint8_t buf[8] = 1026;
        *(_DWORD *)&buf[10] = v31;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "Before register,required granularity,%{public}d,active granularity,%{public}d",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        int v106 = *(char *)(a1 + 160);
        int v107 = *(char *)(a1 + 161);
        *(_DWORD *)uint64_t v113 = 67240448;
        *(_DWORD *)&v113[4] = v106;
        *(_WORD *)&v113[8] = 1026;
        *(_DWORD *)&v113[10] = v107;
        LODWORD(v11sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 14;
        unint64_t v108 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Before register,required granularity,%{public}d,active granularity,%{public}d",  v113,  v110);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationController::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v108);
        if (v108 != buf) {
          free(v108);
        }
      }

      *(_DWORD *)std::stringbuf::string_type buf = 0xFFFF;
      *(void *)&_BYTE buf[12] = 0LL;
      *(void *)&uint8_t buf[4] = 0LL;
      *(_OWORD *)&buf[20] = xmmword_1012E0070;
      __asm { FMOV            V0.2D, #-1.0 }

      __int128 v122 = _Q0;
      __int128 v123 = _Q0;
      __int128 v124 = _Q0;
      int v125 = 0;
      uint64_t v127 = 0LL;
      uint64_t v128 = 0LL;
      unint64_t v126 = 0xBFF0000000000000LL;
      unint64_t v130 = 0xBFF0000000000000LL;
      int v129 = 0;
      int v131 = 0x7FFFFFFF;
      uint64_t v133 = 0LL;
      uint64_t v134 = 0LL;
      uint64_t v132 = 0LL;
      char v135 = 0;
      uint64_t v36 = *(void *)(a1 + 288);
      if (v36
        && (*(unsigned int (**)(uint64_t, _BYTE *))(*(void *)v36 + 128LL))(v36, buf)
        && *(double *)&buf[20] > 0.0)
      {
        *(_DWORD *)uint64_t v113 = 0;
        int v37 = sub_100247620(a1, (int *)v113, 1LL);
        LODWORD(v117) = 1;
        int v38 = sub_100247620(a1, (int *)&v117, 1LL);
        int v111 = 2;
        int v39 = sub_100247620(a1, &v111, 1LL);
        sub_100D90840(a1 + 5120, (int *)a2, v37, v38, v39, *(double *)&buf[20]);
      }

      goto LABEL_48;
    case 3u:
    case 4u:
    case 6u:
    case 0xAu:
    case 0x27u:
      __int128 v10 = *(int **)(a1 + 264);
      id v11 = (int *)(a1 + 272);
      if (v10 != (int *)(a1 + 272))
      {
        uint64_t v12 = a1 + 240;
        do
        {
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          __int32 v13 = (os_log_s *)p_vtable[263];
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
          {
            unsigned int v14 = *a2;
            uint64_t v15 = sub_10000C6DC(v12, v10 + 8);
            uint64_t v18 = v15[1];
            __int16 v16 = v15 + 1;
            uint64_t v17 = v18;
            *(_DWORD *)std::stringbuf::string_type buf = 67240450;
            *(_DWORD *)&uint8_t buf[4] = v14;
            p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = v17;
            _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "registering notification,%{public}d,location provider,%{public}s",  buf,  0x12u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101838C20);
            }
            __int16 v22 = p_vtable[263];
            unsigned int v23 = *a2;
            int32x4_t v24 = sub_10000C6DC(v12, v10 + 8);
            uint64_t v27 = v24[1];
            __int128 v25 = v24 + 1;
            uint64_t v26 = v27;
            *(_DWORD *)uint64_t v113 = 67240450;
            *(_DWORD *)&v113[4] = v23;
            *(_WORD *)&v113[8] = 2082;
            *(void *)&v113[10] = v26;
            LODWORD(v11sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 18;
            uint64_t v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "registering notification,%{public}d,location provider,%{public}s",  v113,  v110);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationController::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v28);
            if (v28 != buf) {
              free(v28);
            }
            p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
          }

          [*(id *)(*((void *)v10 + 5) + 16) register:*(void *)(*((void *)v10 + 5) + 8) forNotification:*a2 registrationInfo:0];
          __int32 v19 = (int *)*((void *)v10 + 1);
          if (v19)
          {
            do
            {
              __int16 v20 = v19;
              __int32 v19 = *(int **)v19;
            }

            while (v19);
          }

          else
          {
            do
            {
              __int16 v20 = (int *)*((void *)v10 + 2);
              _ZF = *(void *)v20 == (void)v10;
              __int128 v10 = v20;
            }

            while (!_ZF);
          }

          __int128 v10 = v20;
        }

        while (v20 != v11);
      }

      return 1LL;
    case 8u:
      if (*(_DWORD *)(a1 + 320))
      {
        *(void *)std::stringbuf::string_type buf = a1 + 320;
        __int16 v40 = sub_10000C858((uint64_t **)(a1 + 264), (int *)(a1 + 320), (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        [(id)v40[5][2] register:v40[5][1] forNotification:8 registrationInfo:0];
      }

void sub_100425280(uint64_t a1, char *a2)
{
  if (*(char *)(a1 + 161) < *a2)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    char v4 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      int v5 = *a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      *(_DWORD *)__int32 v32 = 0;
      *(_WORD *)&v32[4] = 2082;
      *(void *)&v32[6] = "";
      __int16 v33 = 1026;
      int v34 = v5;
      __int16 v35 = 2050;
      double v36 = sub_100425654(a1);
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Starting all location providers up to threshold, threshold:%{public}d, desiredAcc uracy:%{public}f}",  buf,  0x22u);
    }

    int v6 = *a2;
    if (v6 <= 2)
    {
      uint64_t v7 = (void *)(a1 + 248);
      while (1)
      {
        unsigned int v8 = *(void **)(a1 + 240);
        if (v8 != v7)
        {
          char v9 = 0;
          do
          {
            int v10 = *((char *)v8 + 900);
            if (v10 <= *(char *)(a1 + 161) || v10 > (char)v6)
            {
              if (qword_101934830 != -1) {
                dispatch_once(&qword_101934830, &stru_101838C20);
              }
              id v11 = (os_log_s *)qword_101934838;
              if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v12 = v8 + 6;
                int v13 = *(char *)(a1 + 160);
                int v14 = *(char *)(a1 + 161);
                *(_DWORD *)std::stringbuf::string_type buf = 136446722;
                *(void *)__int32 v32 = v12;
                *(_WORD *)&v32[8] = 1026;
                *(_DWORD *)&v32[10] = v13;
                __int16 v33 = 1026;
                int v34 = v14;
                _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Not starting location provider,%{public}s,fRequiredLocationGranularity,%{public}d,fActiveLocationGranu larity,%{public}d",  buf,  0x18u);
              }

              if (sub_1002921D0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_101934830 != -1) {
                  dispatch_once(&qword_101934830, &stru_101838C20);
                }
                uint64_t v18 = v8 + 6;
                int v19 = *(char *)(a1 + 160);
                int v20 = *(char *)(a1 + 161);
                int v25 = 136446722;
                uint64_t v26 = v18;
                __int16 v27 = 1026;
                int v28 = v19;
                __int16 v29 = 1026;
                int v30 = v20;
                LODWORD(v24) = 24;
                id v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Not starting location provider,%{public}s,fRequiredLocationGranularity,%{public}d,fActiv eLocationGranularity,%{public}d",  &v25,  v24);
                sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::startLocation(const Granularity &)",  "%s\n",  v21);
              }
            }

            else
            {
              sub_10042B190(a1, *((_DWORD *)v8 + 10));
              char v9 = 1;
            }

            uint64_t v15 = (void *)v8[1];
            if (v15)
            {
              do
              {
                __int16 v16 = v15;
                uint64_t v15 = (void *)*v15;
              }

              while (v15);
            }

            else
            {
              do
              {
                __int16 v16 = (void *)v8[2];
                BOOL v17 = *v16 == (void)v8;
                unsigned int v8 = v16;
              }

              while (!v17);
            }

            unsigned int v8 = v16;
          }

          while (v16 != v7);
          if ((v9 & 1) != 0) {
            break;
          }
        }

        int v6 = (char)(v6 + 1);
        if (v6 >= 3) {
          goto LABEL_38;
        }
      }

      sub_10042AFE8(a1);
      if (v6 == 2)
      {
        sub_1001A91EC(a1 + 760);
        LOBYTE(v6) = 2;
      }
    }

float sub_100425654(uint64_t a1)
{
  *(_DWORD *)std::stringbuf::string_type buf = 0;
  int v2 = sub_100247620(a1, (int *)buf, 1LL);
  *(_DWORD *)std::stringbuf::string_type buf = 1;
  int v3 = sub_100247620(a1, (int *)buf, 1LL);
  *(_DWORD *)std::stringbuf::string_type buf = 2;
  int v4 = sub_100247620(a1, (int *)buf, 1LL);
  float v5 = 1000.0;
  if (!v4) {
    float v5 = -1.0;
  }
  if (v3) {
    float v5 = 100.0;
  }
  if (v2) {
    float v6 = 1.0;
  }
  else {
    float v6 = v5;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  uint64_t v7 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240960;
    BOOL v18 = v2 != 0;
    __int16 v19 = 1026;
    BOOL v20 = v3 != 0;
    __int16 v21 = 1026;
    BOOL v22 = v4 != 0;
    __int16 v23 = 2050;
    double v24 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "CLIENT:hasClients,%{public}d,hasFineClients,%{public}d,hasCoarseClients,%{public}d,desiredAccuracy,%{public}.1lf",  buf,  0x1Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v10[0] = 67240960;
    v10[1] = v2 != 0;
    __int16 v11 = 1026;
    BOOL v12 = v3 != 0;
    __int16 v13 = 1026;
    BOOL v14 = v4 != 0;
    __int16 v15 = 2050;
    double v16 = v6;
    char v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CLIENT:hasClients,%{public}d,hasFineClients,%{public}d,hasCoarseClients,%{public}d,desiredAccuracy,%{public}.1lf",  v10,  30);
    sub_10029211C("Generic", 1LL, 0, 2LL, "float CLLocationController::getDesiredAccuracy()", "%s\n", v9);
  }

  return v6;
}

uint64_t sub_100425904(uint64_t a1, unsigned int *a2)
{
  if (*a2 >= 3) {
    unsigned __int8 v4 = -1;
  }
  else {
    unsigned __int8 v4 = 2 - *(_BYTE *)a2;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  float v5 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v6 = *a2;
    uint64_t v7 = sub_10100D9D8(*a2);
    *(_DWORD *)std::stringbuf::string_type buf = 67240706;
    *(_DWORD *)&uint8_t buf[4] = v6;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = v7;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = (char)v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLIENT:unregisterForNotificationInternal,notification,%{public}d,%{public}s,granularity,%{public}d",  buf,  0x18u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v103 = qword_101934838;
    unsigned int v104 = *a2;
    int v105 = sub_10100D9D8(*a2);
    *(_DWORD *)unint64_t v126 = 67240706;
    *(_DWORD *)&v126[4] = v104;
    *(_WORD *)&v126[8] = 2082;
    *(void *)&v126[10] = v105;
    *(_WORD *)&v126[18] = 1026;
    *(_DWORD *)&v126[20] = (char)v4;
    int v106 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v103,  2LL,  "CLIENT:unregisterForNotificationInternal,notification,%{public}d,%{public}s,granularity,%{public}d",  v126,  24);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationController::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v106);
    if (v106 != buf) {
      free(v106);
    }
  }

  switch(*a2)
  {
    case 0u:
    case 1u:
    case 2u:
      __int16 v27 = (char *)(a1 + 160);
      *(_BYTE *)(a1 + 16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = -1;
      *(_DWORD *)std::stringbuf::string_type buf = 0;
      if (sub_100247620(a1, (int *)buf, 1LL))
      {
        char v28 = 2;
      }

      else
      {
        *(_DWORD *)std::stringbuf::string_type buf = 1;
        if (sub_100247620(a1, (int *)buf, 1LL))
        {
          char v28 = 1;
        }

        else
        {
          *(_DWORD *)std::stringbuf::string_type buf = 2;
          if (!sub_100247620(a1, (int *)buf, 1LL))
          {
LABEL_95:
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101838C20);
            }
            unint64_t v63 = (os_log_s *)qword_101934838;
            if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
            {
              unsigned int v64 = *a2;
              int v65 = *v27;
              *(_DWORD *)std::stringbuf::string_type buf = 67240448;
              *(_DWORD *)&uint8_t buf[4] = v64;
              *(_WORD *)&uint8_t buf[8] = 1026;
              *(_DWORD *)&buf[10] = v65;
              _os_log_impl( (void *)&_mh_execute_header,  v63,  OS_LOG_TYPE_DEBUG,  "Unregistered for notification,%{public}d,new required location granularity,%{public}d",  buf,  0xEu);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934830 != -1) {
                dispatch_once(&qword_101934830, &stru_101838C20);
              }
              unsigned int v110 = *a2;
              int v111 = *v27;
              *(_DWORD *)unint64_t v126 = 67240448;
              *(_DWORD *)&v126[4] = v110;
              *(_WORD *)&v126[8] = 1026;
              *(_DWORD *)&v126[10] = v111;
              LODWORD(v119) = 14;
              char v112 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Unregistered for notification,%{public}d,new required location granularity,%{public}d",  v126,  v119);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationController::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v112);
              if (v112 != buf) {
                free(v112);
              }
            }

            if (*v27 != v4)
            {
              sub_100426D64(a1, (_BYTE *)(a1 + 160));
              if (v4 != 255)
              {
                if (v4 == 2 && *(_BYTE *)(a1 + 5041) && *(_BYTE *)(sub_100370E78() + 24))
                {
                  sub_1002F0B04(buf);
                  double v66 = sub_1002A82BC( *(uint64_t *)buf,  "LocationControllerRecorderFileAgeThresholdSeconds",  v126)
                      ? *(double *)v126
                      : 21600.0;
                  sub_10000AE14((uint64_t)buf);
                  double v67 = sub_1003713F0();
                  double v68 = v67 - *(double *)(sub_100370E78() + 32);
                  if (v68 > v66)
                  {
                    if (qword_101934830 != -1) {
                      dispatch_once(&qword_101934830, &stru_101838C20);
                    }
                    uint64_t v69 = (os_log_s *)qword_101934838;
                    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
                    {
                      double v70 = sub_1003713F0();
                      uint64_t v71 = sub_10080E94C();
                      double v72 = sub_10080EF30(v71);
                      *(_DWORD *)std::stringbuf::string_type buf = 134349568;
                      *(double *)&uint8_t buf[4] = v70;
                      *(_WORD *)&_BYTE buf[12] = 2050;
                      *(double *)&buf[14] = v68;
                      *(_WORD *)&buf[22] = 2050;
                      double v129 = v72;
                      _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEFAULT,  "#locctl,#rec,refreshing the recording file,mct,%{public}.3f,seconds since last,%{public}.2f,prop agation_us,%{public}.3f",  buf,  0x20u);
                    }

                    if (sub_1002921D0(115, 2))
                    {
                      bzero(buf, 0x65CuLL);
                      if (qword_101934830 != -1) {
                        dispatch_once(&qword_101934830, &stru_101838C20);
                      }
                      uint64_t v114 = qword_101934838;
                      double v115 = sub_1003713F0();
                      uint64_t v116 = sub_10080E94C();
                      double v117 = sub_10080EF30(v116);
                      *(_DWORD *)unint64_t v126 = 134349568;
                      *(double *)&v126[4] = v115;
                      *(_WORD *)&v126[12] = 2050;
                      *(double *)&v126[14] = v68;
                      *(_WORD *)&v126[22] = 2050;
                      double v127 = v117;
                      LODWORD(v119) = 32;
                      __int16 v118 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v114,  0LL,  "#locctl,#rec,refreshing the recording file,mct,%{public}.3f,seconds since last,%{ public}.2f,propagation_us,%{public}.3f",  v126,  v119);
                      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationController::unregisterForNotificationInternal(const CLLocationProvider_Ty pe::Notification &)",  "%s\n",  v118);
                      if (v118 != buf) {
                        free(v118);
                      }
                    }

                    uint64_t v73 = sub_100370E78();
                    sub_10037141C(v73);
                    uint64_t v74 = sub_100370E78();
                    sub_100371644(v74);
                    uint64_t v75 = sub_100370E78();
                    sub_100371B44(v75);
                    *(void *)std::stringbuf::string_type buf = 0x4000000000000000LL;
                    sub_10041FF5C(a1, (double *)buf);
                  }
                }

                *(_BYTE *)(a1 + 161) = -1;
                sub_100425280(a1, (char *)(a1 + 160));
              }
            }

void sub_100426CA4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_100426D64(uint64_t a1, _BYTE *a2)
{
  int v4 = (char)*a2;
  if (v4 != 2 && v4 < *(char *)(a1 + 161))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    float v5 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      int v6 = (char)*a2;
      v15[0] = 68289282;
      v15[1] = 0;
      __int16 v16 = 2082;
      BOOL v17 = "";
      __int16 v18 = 1026;
      int v19 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Stopping all location providers above threshold, threshold:%{public}d}",  (uint8_t *)v15,  0x18u);
    }

    uint64_t v7 = *(void **)(a1 + 240);
    if (v7 != (void *)(a1 + 248))
    {
      char v8 = 0;
      do
      {
        int v9 = *((char *)v7 + 900);
        if (v9 <= *(char *)(a1 + 161) && v9 > (char)*a2)
        {
          sub_10042BF8C(a1, *((_DWORD *)v7 + 10));
          char v8 = 1;
        }

        __int16 v11 = (void *)v7[1];
        if (v11)
        {
          do
          {
            unsigned int v12 = v11;
            __int16 v11 = (void *)*v11;
          }

          while (v11);
        }

        else
        {
          do
          {
            unsigned int v12 = (void *)v7[2];
            BOOL v13 = *v12 == (void)v7;
            uint64_t v7 = v12;
          }

          while (!v13);
        }

        uint64_t v7 = v12;
      }

      while (v12 != (void *)(a1 + 248));
      if ((v8 & 1) != 0) {
        sub_10042AFE8(a1);
      }
    }

    int v14 = *a2;
    if (v14 == 255)
    {
      [*(id *)(a1 + 648) setNextFireDelay:1.79769313e308];
      LOBYTE(v14) = *a2;
    }

    *(_BYTE *)(a1 + 161) = v14;
  }

void sub_100426F18(uint64_t a1, __int32 a2, int *a3, char *a4)
{
  v33.i32[2] = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)buf);
  sub_10080EF64(v7, (uint64_t *)buf);
  *(_DWORD *)std::stringbuf::string_type buf = 2;
  v33.i32[0] = 2;
  v33.i32[1] = sub_100FE4D78((int *)buf);
  uint64_t v8 = sub_100370E78();
  *(_DWORD *)std::stringbuf::string_type buf = 4;
  sub_100373608(v8, (unsigned int *)buf, &v33, (int *)(a1 + 5044), &v33.i32[2], a3, a4);
  (*(void (**)(void, int *, char *))(**(void **)(a1 + 288) + 48LL))(*(void *)(a1 + 288), a3, a4);
  switch(*a3)
  {
    case 2:
      *(_BYTE *)(a1 + 666) = 1;
      sub_100427678(a1, 1, 1);
      if (*(unsigned __int8 *)(a1 + 161) != 255)
      {
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        int v9 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "Device going to sleep,stop location unavailable timer",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          v33.i16[6] = 0;
          __int16 v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Device going to sleep,stop location unavailable timer",  (char *)&v33.u64[1] + 4,  2);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaem onStatus_Type::NotificationData &)",  "%s\n",  v27);
        }

        [*(id *)(a1 + 648) setNextFireDelay:1.79769313e308];
      }

      goto LABEL_40;
    case 3:
      *(_BYTE *)(a1 + 666) = 0;
      sub_100427678(a1, 1, 0);
      if (*(unsigned __int8 *)(a1 + 161) != 255)
      {
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        BOOL v17 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v18 = sub_10080E94C();
          *(_DWORD *)std::stringbuf::string_type buf = 0;
          double v19 = sub_10080EB58(v18, buf) + 15.0;
          uint64_t v20 = sub_10080E94C();
          double v21 = sub_10080EF30(v20);
          *(_DWORD *)std::stringbuf::string_type buf = 134349312;
          double v38 = v19;
          __int16 v39 = 2050;
          double v40 = v21;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "LocationController,Device wake setting location unavailable timer to fire at %{public}.3f,propagation_us,%{public}.3f",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          uint64_t v28 = qword_101934838;
          double v29 = sub_10037FE24() + 15.0;
          uint64_t v30 = sub_10080E94C();
          double v31 = sub_10080EF30(v30);
          v33.i32[3] = 134349312;
          double v34 = v29;
          __int16 v35 = 2050;
          double v36 = v31;
          __int32 v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v28,  2LL,  "LocationController,Device wake setting location unavailable timer to fire at %{public}.3f,prop agation_us,%{public}.3f",  (char *)&v33.u64[1] + 4,  22);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaem onStatus_Type::NotificationData &)",  "%s\n",  v32);
        }

        [*(id *)(a1 + 648) setNextFireDelay:15.0];
      }

      sub_10042794C(a1);
      goto LABEL_40;
    case 6:
      int v14 = *((_DWORD *)a4 + 1) == 0;
      uint64_t v15 = a1;
      int v16 = 3;
      goto LABEL_39;
    case 7:
      sub_1001A9378(a1 + 760, a4[9] == 0);
      sub_100D8FC20(a1 + 5120, a4[9] == 0);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      BOOL v22 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        int v23 = a4[9];
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        LODWORD(v38) = v23;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "#LCStats,battery charging,%{public}d",  buf,  8u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_40;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      int v24 = a4[9];
      v33.i32[3] = 67240192;
      LODWORD(v34) = v24;
      BOOL v13 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#LCStats,battery charging,%{public}d",  (char *)&v33.u64[1] + 4,  8);
      goto LABEL_35;
    case 8:
      int v14 = *a4;
      uint64_t v15 = a1;
      int v16 = 5;
      goto LABEL_39;
    case 10:
      int v14 = *a4 == 0;
      uint64_t v15 = a1;
      int v16 = 11;
      goto LABEL_39;
    case 13:
      goto LABEL_40;
    case 15:
      int v14 = *a4;
      uint64_t v15 = a1;
      int v16 = 7;
LABEL_39:
      sub_100427678(v15, v16, v14);
      goto LABEL_40;
    default:
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        int v11 = *a3;
        *(_DWORD *)std::stringbuf::string_type buf = 67240192;
        LODWORD(v38) = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "LocationController,onStatusNotification,#Warning,Unhandled status notification,%{public}u",  buf,  8u);
      }

      if (!sub_1002921D0(115, 2)) {
        goto LABEL_40;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      int v12 = *a3;
      v33.i32[3] = 67240192;
      LODWORD(v34) = v12;
      BOOL v13 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationController,onStatusNotification,#Warning,Unhandled status notification,%{public}u",  (char *)&v33.u64[1] + 4,  8);
LABEL_35:
      uint64_t v25 = (uint8_t *)v13;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonSt atus_Type::NotificationData &)",  "%s\n",  v13);
      if (v25 != buf) {
        free(v25);
      }
LABEL_40:
      uint64_t v26 = *(void *)(a1 + 304);
      if (v26) {
        sub_100AF1AB8(v26, a3, (unsigned __int8 *)a4);
      }
      return;
  }

void sub_100427678(uint64_t a1, int a2, int a3)
{
  uint64_t v7 = a1 + 24LL * a2;
  if (*(unsigned __int8 *)(v7 + 1608) != a3 || *(double *)(a1 + 24LL * a2 + 1616) < 1.0)
  {
    uint64_t v8 = sub_10080E94C();
    *(_DWORD *)std::stringbuf::string_type buf = 0;
    double v9 = sub_10080EB58(v8, buf);
    uint64_t v10 = a1 + 24LL * a2;
    double v11 = *(double *)(v10 + 1616);
    if (v11 >= 1.0) {
      double v12 = v9 - v11;
    }
    else {
      double v12 = -1.0;
    }
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101838C80);
    }
    BOOL v13 = (uint64_t *)(v7 + 1600);
    int v14 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *v13;
      uint64_t v16 = sub_10080E94C();
      double v17 = sub_10080EF30(v16);
      *(_DWORD *)std::stringbuf::string_type buf = 136447234;
      uint64_t v35 = v15;
      __int16 v36 = 1026;
      int v37 = a3;
      __int16 v38 = 2050;
      double v39 = v12;
      __int16 v40 = 2050;
      double v41 = v9;
      __int16 v42 = 2050;
      double v43 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "@ClxEvent, %{public}s, %{public}d, delta, %{public}.1f, now, %{public}.3f, propagation_us,%{public}.3f",  buf,  0x30u);
    }

    uint64_t v18 = (_BYTE *)(v7 + 1608);
    double v19 = (double *)(v10 + 1616);
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101838C80);
      }
      uint64_t v20 = qword_101934858;
      uint64_t v21 = *v13;
      uint64_t v22 = sub_10080E94C();
      int v24 = 136447234;
      uint64_t v25 = v21;
      __int16 v26 = 1026;
      int v27 = a3;
      __int16 v28 = 2050;
      double v29 = v12;
      __int16 v30 = 2050;
      double v31 = v9;
      __int16 v32 = 2050;
      double v33 = sub_10080EF30(v22);
      int v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v20,  0LL,  "@ClxEvent, %{public}s, %{public}d, delta, %{public}.1f, now, %{public}.3f, propagation_us,%{public}.3f",  &v24,  48);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::handleStateEvent(NegativeEvent, BOOL)",  "%s\n",  v23);
    }

    _BYTE *v18 = a3;
    *double v19 = v9;
    if (a2 == 11 || a2 == 4) {
      sub_100439540(a1);
    }
  }

void sub_10042794C(uint64_t a1)
{
  uint64_t v2 = sub_10080E94C();
  *(_DWORD *)std::stringbuf::string_type __p = 0;
  double v3 = sub_10080EB58(v2, __p);
  if (v3 - *(double *)(a1 + 1912) >= 900.0)
  {
    *(double *)(a1 + 1912) = v3;
    sub_1004F2598();
    sub_1004F5DC4((uint64_t)__p);
    if (v52[9] >= 0) {
      int v4 = __p;
    }
    else {
      int v4 = *(char **)__p;
    }
    sub_1010DDBC0(&v42, v4);
    if ((v52[9] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
    std::string::size_type size = v42.__r_.__value_.__s.__size_;
    if ((v42.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      std::string::size_type size = v42.__r_.__value_.__l.__size_;
    }
    if (!size) {
      std::string::assign(&v42, "Local");
    }
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101838C80);
    }
    uint64_t v7 = &OBJC_METACLASS___CLPrivacyManager.vtable;
    uint64_t v8 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      sub_1004F2598();
      double v9 = v43;
      sub_1004F54FC((uint64_t)v43);
      if (v45[9] < 0) {
        double v9 = *(_BYTE **)v43;
      }
      uint64_t v10 = sub_1004F2598();
      sub_1004F58C8(v10, (uint64_t)v40);
      if (v41 >= 0) {
        double v11 = v40;
      }
      else {
        double v11 = (void **)v40[0];
      }
      double v12 = &v42;
      if ((v42.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        double v12 = (std::string *)v42.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::stringbuf::string_type __p = 136446979;
      *(void *)&__p[4] = v9;
      __int16 v51 = 2081;
      *(void *)uint64_t v52 = v11;
      *(_WORD *)&v52[8] = 2082;
      *(void *)&v52[10] = v12;
      *(_WORD *)&v52[18] = 1026;
      *(_DWORD *)&v52[20] = 10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "@ClxVersion, Timer, os, %{public}s, model, %{private}s, build, %{public}s, triage, %{public}d",  __p,  0x26u);
      if (v41 < 0) {
        operator delete(v40[0]);
      }
      if ((v45[9] & 0x80000000) != 0) {
        operator delete(*(void **)v43);
      }
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101838C80);
      }
      uint64_t v31 = qword_101934858;
      sub_1004F2598();
      __int16 v32 = v40;
      sub_1004F54FC((uint64_t)v40);
      if (v41 < 0) {
        __int16 v32 = (void **)v40[0];
      }
      uint64_t v33 = sub_1004F2598();
      sub_1004F58C8(v33, (uint64_t)v38);
      if (v39 >= 0) {
        double v34 = v38;
      }
      else {
        double v34 = (void **)v38[0];
      }
      uint64_t v35 = &v42;
      if ((v42.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v35 = (std::string *)v42.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)double v43 = 136446979;
      *(void *)&v43[4] = v32;
      __int16 v44 = 2081;
      *(void *)uint64_t v45 = v34;
      *(_WORD *)&v45[8] = 2082;
      *(void *)&v45[10] = v35;
      *(_WORD *)&v45[18] = 1026;
      *(_DWORD *)&v45[20] = 10;
      __int16 v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v31,  0LL,  "@ClxVersion, Timer, os, %{public}s, model, %{private}s, build, %{public}s, triage, %{public}d",  v43,  38);
      if (v39 < 0) {
        operator delete(v38[0]);
      }
      if (v41 < 0) {
        operator delete(v40[0]);
      }
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::checkStateLogging()", "%s\n", v36);
      if (v36 != __p) {
        free(v36);
      }
    }

    for (uint64_t i = 0LL; i != 312; i += 24LL)
    {
      uint64_t v14 = a1 + i;
      double v15 = *(double *)(a1 + i + 1616);
      if (v3 - v15 > 900.0)
      {
        if (v15 >= 1.0) {
          double v16 = v3 - v15;
        }
        else {
          double v16 = -1.0;
        }
        double v17 = (os_log_s *)v7[267];
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v18 = p_vtable;
          uint64_t v19 = *(void *)(v14 + 1600);
          int v20 = *(unsigned __int8 *)(a1 + i + 1608);
          uint64_t v21 = *(void *)(v14 + 1616);
          uint64_t v22 = sub_10080E94C();
          double v23 = sub_10080EF30(v22);
          *(_DWORD *)std::stringbuf::string_type __p = 136447490;
          *(void *)&__p[4] = v19;
          __int16 v51 = 1026;
          *(_DWORD *)uint64_t v52 = v20;
          *(_WORD *)&v52[4] = 2050;
          *(void *)&v52[6] = v21;
          *(_WORD *)&v52[14] = 2050;
          *(double *)&v52[16] = v16;
          __int16 v53 = 2050;
          double v54 = v3;
          __int16 v55 = 2050;
          double v56 = v23;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "@ClxSnapshot, %{public}s, %{public}d, last, %{public}.1f, delta, %{public}.1f, now, %{public}.3f, propagatio n_us, %{public}.3f",  __p,  0x3Au);
          p_vtable = v18;
          uint64_t v7 = &OBJC_METACLASS___CLPrivacyManager.vtable;
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(__p, 0x65CuLL);
          int v24 = v7[267];
          uint64_t v25 = *(void *)(v14 + 1600);
          int v26 = *(unsigned __int8 *)(a1 + i + 1608);
          uint64_t v27 = *(void *)(v14 + 1616);
          uint64_t v28 = sub_10080E94C();
          double v29 = sub_10080EF30(v28);
          *(_DWORD *)double v43 = 136447490;
          *(void *)&v43[4] = v25;
          __int16 v44 = 1026;
          *(_DWORD *)uint64_t v45 = v26;
          *(_WORD *)&v45[4] = 2050;
          *(void *)&v45[6] = v27;
          *(_WORD *)&v45[14] = 2050;
          *(double *)&v45[16] = v16;
          __int16 v46 = 2050;
          double v47 = v3;
          __int16 v48 = 2050;
          double v49 = v29;
          LODWORD(v37) = 58;
          __int16 v30 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v24,  0LL,  "@ClxSnapshot, %{public}s, %{public}d, last, %{public}.1f, delta, %{public}.1f, now, %{public}. 3f, propagation_us, %{public}.3f",  v43,  v37);
          sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::checkStateLogging()", "%s\n", v30);
          uint64_t v7 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
          if (v30 != __p) {
            free(v30);
          }
        }
      }
    }
  }

void sub_100427F18( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, uint64_t a30, int a31, __int16 a32, char a33, char a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, int a42, __int16 a43, char a44, char a45)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100427F98(uint64_t a1, __int32 a2, int *a3, uint64_t a4)
{
  v18.i32[2] = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)buf);
  sub_10080EF64(v7, (uint64_t *)buf);
  *(_DWORD *)std::stringbuf::string_type buf = 4;
  v18.i32[0] = 4;
  v18.i32[1] = sub_100FE4D78((int *)buf);
  uint64_t v8 = sub_100370E78();
  *(_DWORD *)std::stringbuf::string_type buf = 4;
  sub_100374C24(v8, (unsigned int *)buf, &v18, (int *)(a1 + 5044), &v18.i32[2], a3, (char *)a4);
  int v9 = *a3;
  if (*a3 != 7)
  {
    if (v9 != 6)
    {
      if (v9 == 1)
      {
        sub_100427678(a1, 0, *(_BYTE *)a4 == 0);
      }

      else
      {
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        BOOL v13 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
        {
          int v14 = *a3;
          *(_DWORD *)std::stringbuf::string_type buf = 67240192;
          *(_DWORD *)&uint8_t buf[4] = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "LocationController,onWifiServiceNotification,#Warning,Unhandled status notification,%{public}u",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          int v16 = *a3;
          v18.i32[3] = 67240192;
          int v19 = v16;
          double v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationController,onWifiServiceNotification,#Warning,Unhandled status notification,%{public}u",  (char *)&v18.u64[1] + 4,  8);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onWifiServiceNotification(int, const CLWifiService_Type::Notification &, const CL WifiService_Type::NotificationData &)",  "%s\n",  v17);
        }
      }

      goto LABEL_19;
    }

    if (*(_BYTE *)(a4 + 96)) {
      BOOL v10 = *(_DWORD *)(a4 + 48) <= 0;
    }
    else {
      BOOL v10 = 1;
    }
    int v11 = !v10;
    sub_100427678(a1, 4, v11 ^ 1);
    sub_1006B9560(a1 + 344, v11);
  }

  uint64_t v12 = *(void *)(a1 + 288);
  if (v12) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v12 + 408LL))(v12, a4);
  }
LABEL_19:
  uint64_t v15 = *(void *)(a1 + 304);
  if (v15) {
    sub_100AF29D0(v15, a3, a4);
  }
  sub_100A6DC54((char *)(a1 + 752), a3, a4);
  sub_1001A8B60(a1 + 760, a3, a4);
}

void sub_100428270(uint64_t a1, __int32 a2, int *a3, int *a4)
{
  v13.i32[2] = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)buf);
  sub_10080EF64(v7, (uint64_t *)buf);
  *(_DWORD *)std::stringbuf::string_type buf = 5;
  v13.i32[0] = 5;
  v13.i32[1] = sub_100FE4D78((int *)buf);
  uint64_t v8 = sub_100370E78();
  *(_DWORD *)std::stringbuf::string_type buf = 4;
  sub_100375728(v8, (unsigned int *)buf, &v13, (int *)(a1 + 5044), &v13.i32[2], a3, a4);
  if (*a3)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v9 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = *a3;
      *(_DWORD *)std::stringbuf::string_type buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "LocationController,onDataProtectionNotification,#Warning,Unhandled status notification,%{public}u",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      int v11 = *a3;
      v13.i32[3] = 67240192;
      int v14 = v11;
      uint64_t v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationController,onDataProtectionNotification,#Warning,Unhandled status notification,%{public}u",  (char *)&v13.u64[1] + 4,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notification &, const CLDataProtectionManager_Type::NotificationData &)",  "%s\n",  v12);
    }
  }

  else
  {
    sub_100427678(a1, 2, *a4 != 1);
  }

void sub_1004284AC(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v13 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v14);
  sub_10080EF64(v7, v14[0].i64);
  int v15 = 6;
  v14[0].i32[0] = 6;
  v14[0].i32[1] = sub_100FE4D78(&v15);
  uint64_t v8 = sub_100370E78();
  int v15 = 4;
  sub_100376450(v8, (unsigned int *)&v15, v14, (int *)(a1 + 5044), &v13, a3, a4);
  int v9 = *a3;
  if (*a3 == 9)
  {
    BOOL v12 = *(_BYTE *)(a4 + 113) == 0;
    uint64_t v10 = a1;
    int v11 = 8;
  }

  else if (v9 == 5)
  {
    uint64_t v10 = a1;
    int v11 = 9;
    BOOL v12 = 0;
  }

  else
  {
    if (v9 != 4) {
      return;
    }
    uint64_t v10 = a1;
    int v11 = 9;
    BOOL v12 = 1;
  }

  sub_100427678(v10, v11, v12);
}

void sub_100428598(uint64_t a1, int a2, int *a3, char *a4)
{
  int v9 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v10);
  sub_10080EF64(v7, v10[0].i64);
  int v11 = 7;
  v10[0].i32[0] = 7;
  v10[0].i32[1] = sub_100FE4D78(&v11);
  uint64_t v8 = sub_100370E78();
  int v11 = 4;
  sub_100376DB4(v8, (unsigned int *)&v11, v10, (int *)(a1 + 5044), &v9, a3, a4);
  if (*a3 == 5) {
    sub_100427678(a1, 10, *a4 == 0);
  }
}

void sub_100428654(uint64_t a1)
{
  if (__p[23] >= 0) {
    uint64_t v2 = __p;
  }
  else {
    uint64_t v2 = *(char **)__p;
  }
  sub_1010DDBC0(&v153, v2);
  if ((__p[23] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
  std::string::size_type size = v153.__r_.__value_.__s.__size_;
  if ((v153.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    std::string::size_type size = v153.__r_.__value_.__l.__size_;
  }
  if (!size) {
    std::string::assign(&v153, "Local");
  }
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101838C80);
  }
  int v4 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    sub_1004F2598();
    sub_1004F54FC((uint64_t)v154);
    if (v154[23] >= 0) {
      float v5 = v154;
    }
    else {
      float v5 = *(_BYTE **)v154;
    }
    uint64_t v6 = sub_1004F2598();
    sub_1004F58C8(v6, (uint64_t)v151);
    if (v152 >= 0) {
      uint64_t v7 = v151;
    }
    else {
      uint64_t v7 = (void **)v151[0];
    }
    uint64_t v8 = &v153;
    if ((v153.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v8 = (std::string *)v153.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type __p = 136446979;
    *(void *)&__p[4] = v5;
    *(_WORD *)&_BYTE __p[12] = 2081;
    *(void *)&__p[14] = v7;
    *(_WORD *)&__p[22] = 2082;
    uint64_t v160 = v8;
    LOWORD(v161[0]) = 1026;
    *(_DWORD *)((char *)v161 + 2) = 10;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "@ClxVersion, Init, os, %{public}s, model, %{private}s, build, %{public}s, triage, %{public}d",  __p,  0x26u);
    if (v152 < 0) {
      operator delete(v151[0]);
    }
    if ((v154[23] & 0x80000000) != 0) {
      operator delete(*(void **)v154);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101838C80);
    }
    uint64_t v135 = qword_101934858;
    sub_1004F2598();
    char v136 = v151;
    sub_1004F54FC((uint64_t)v151);
    if (v152 < 0) {
      char v136 = (void **)v151[0];
    }
    uint64_t v137 = sub_1004F2598();
    sub_1004F58C8(v137, (uint64_t)v149);
    if (v150 >= 0) {
      v138 = v149;
    }
    else {
      v138 = (void **)v149[0];
    }
    unint64_t v139 = &v153;
    if ((v153.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      unint64_t v139 = (std::string *)v153.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t v154 = 136446979;
    *(void *)&v154[4] = v136;
    *(_WORD *)&v154[12] = 2081;
    *(void *)&v154[14] = v138;
    *(_WORD *)&v154[22] = 2082;
    uint64_t v155 = (__n128 (*)(__n128 *, __n128 *))v139;
    LOWORD(v156) = 1026;
    *(_DWORD *)((char *)&v156 + 2) = 10;
    v140 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v135,  0LL,  "@ClxVersion, Init, os, %{public}s, model, %{private}s, build, %{public}s, triage, %{public}d",  v154,  38);
    if (v150 < 0) {
      operator delete(v149[0]);
    }
    if (v152 < 0) {
      operator delete(v151[0]);
    }
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLLocationController::start()", "%s\n", v140);
    if (v140 != __p) {
      free(v140);
    }
  }

  CFRunLoopSourceSignal(*(CFRunLoopSourceRef *)(a1 + 680));
  int v9 = (__CFRunLoop *)sub_10029228C();
  CFRunLoopWakeUp(v9);
  if (!*(_BYTE *)(a1 + 656))
  {
    *(_DWORD *)(a1 + 312) = objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "isServiceEnabled:",  @"CLWifiLocationProvider");
    sub_1004F2598();
    if (sub_1004FA71C())
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v10 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type __p = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "CELL_LOC:choosing CLUnifiedCellLocationProvider",  __p,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        *(_WORD *)uint64_t v154 = 0;
        LODWORD(v143) = 2;
        uint64_t v142 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "CELL_LOC:choosing CLUnifiedCellLocationProvider",  v154,  v143);
        sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLLocationController::start()", "%s\n", v142);
        if (v142 != __p) {
          free(v142);
        }
      }

      v148[0] = _NSConcreteStackBlock;
      v148[1] = 3221225472LL;
      v148[2] = sub_100429E2C;
      v148[3] = &unk_101838B18;
      v148[4] = a1;
      sub_100A3177C((uint64_t)v148);
    }

    else
    {
      *(_DWORD *)(a1 + 316) = 0;
    }

    v147[0] = _NSConcreteStackBlock;
    v147[1] = 3221225472LL;
    v147[2] = sub_100429E44;
    v147[3] = &unk_101838B18;
    v147[4] = a1;
    sub_1004DA468((uint64_t)v147);
    v146[0] = _NSConcreteStackBlock;
    v146[1] = 3221225472LL;
    v146[2] = sub_100429E5C;
    v146[3] = &unk_101838B18;
    v146[4] = a1;
    sub_1006DB678((uint64_t)v146);
  }

  id v11 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLGnssProvider");
  *(void *)(a1 + 64sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v11;
  if (v11) {
    *(_DWORD *)(a1 + 32sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 4;
  }
  if (*(_DWORD *)(a1 + 312))
  {
    id v12 = objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLWifiLocationProvider"),  "syncgetName");
    if (v12)
    {
      sub_1010DDBC0(v154, (char *)[v12 UTF8String]);
      int v13 = *(_DWORD *)(a1 + 312);
      sub_1010DDBC0(v151, "CLWifiLocationProvider");
      sub_10043AE9C((uint64_t)__p, v13, (__int128 *)v154, (__int128 *)v151, 4, 1, 1);
      v149[0] = (void *)(a1 + 312);
      int v14 = sub_10043B674((uint64_t **)(a1 + 240), (int *)(a1 + 312), (uint64_t)&unk_1012CF090, (_DWORD **)v149);
      *((_DWORD *)v14 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_DWORD *)__p;
      int v15 = (void **)(v14 + 6);
      v14[8] = (uint64_t *)v160;
      *(_OWORD *)int v15 = *(_OWORD *)&__p[8];
      HIBYTE(v16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
      __p[8] = 0;
      int v16 = (void **)(v14 + 9);
      v14[11] = v162;
      *(_OWORD *)int v16 = *(_OWORD *)v161;
      HIBYTE(v162) = 0;
      LOBYTE(v161[0]) = 0;
      __int128 v17 = v164;
      *((_OWORD *)v14 + 6) = v163;
      *((_OWORD *)v14 + 7) = v17;
      __int128 v18 = v168;
      __int128 v19 = v167;
      __int128 v20 = v166;
      *((_OWORD *)v14 + 8) = v165;
      *((_OWORD *)v14 + 9) = v20;
      __int128 v21 = *(_OWORD *)((char *)v171 + 12);
      __int128 v22 = v171[0];
      __int128 v23 = v170;
      *((_OWORD *)v14 + 12) = v169;
      *((_OWORD *)v14 + 13) = v23;
      *((_OWORD *)v14 + 14) = v22;
      *(_OWORD *)((char *)v14 + 236) = v21;
      *((_OWORD *)v14 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v19;
      *((_OWORD *)v14 + 11) = v18;
      memcpy(v14 + 32, v172, 0x201uLL);
      sub_10005F550((uint64_t)(v14 + 97), &v173);
      __int128 v24 = v176;
      __int128 v25 = v175;
      *(_OWORD *)(v14 + 99) = v174;
      int v26 = *(uint64_t **)&v179[13];
      __int128 v27 = *(_OWORD *)v179;
      __int128 v28 = v178;
      *(_OWORD *)(v14 + 105) = v177;
      *(_OWORD *)(v14 + 107) = v28;
      *(_OWORD *)(v14 + 109) = v27;
      *(uint64_t **)((char *)v14 + 885) = v26;
      *(_OWORD *)(v14 + 101) = v25;
      *(_OWORD *)(v14 + 103) = v24;
      *((_OWORD *)v14 + 56) = v180;
      double v29 = (std::__shared_weak_count *)*((void *)&v173 + 1);
      if (*((void *)&v173 + 1))
      {
        __int16 v30 = (unint64_t *)(*((void *)&v173 + 1) + 8LL);
        do
          unint64_t v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }

      if (SHIBYTE(v162) < 0) {
        operator delete(v161[0]);
      }
      if (SHIBYTE(v160) < 0) {
        operator delete(*(void **)&__p[8]);
      }
      if (v152 < 0) {
        operator delete(v151[0]);
      }
      sub_100445DB4((uint64_t)"CLLocationController", (uint64_t)sub_100429E74, a1, *(void **)(a1 + 32), v151);
      *(void *)std::stringbuf::string_type __p = a1 + 312;
      __int16 v32 = sub_10000C858((uint64_t **)(a1 + 264), (int *)(a1 + 312), (uint64_t)&unk_1012CF090, (_DWORD **)__p);
      uint64_t v33 = (uint64_t *)v151[0];
      v151[0] = 0LL;
      double v34 = v32[5];
      v32[5] = v33;
      if (v34)
      {
        (*(void (**)(uint64_t *))(*v34 + 8))(v34);
        uint64_t v35 = v151[0];
        v151[0] = 0LL;
        if (v35) {
          (*(void (**)(void *))(*(void *)v35 + 8LL))(v35);
        }
      }

      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      __int16 v36 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::stringbuf::string_type __p = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "starting CLWifiLocationProvider", __p, 2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        LOWORD(v151[0]) = 0;
        LODWORD(v143) = 2;
        BOOL v141 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "starting CLWifiLocationProvider",  v151,  v143);
        sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLLocationController::start()", "%s\n", v141);
        if (v141 != __p) {
          free(v141);
        }
      }

      *(void *)std::stringbuf::string_type __p = a1 + 312;
      uint64_t v37 = sub_10000C858((uint64_t **)(a1 + 264), (int *)(a1 + 312), (uint64_t)&unk_1012CF090, (_DWORD **)__p);
      sub_10047DC38((uint64_t)v37[5]);
      if ((v154[23] & 0x80000000) != 0) {
        operator delete(*(void **)v154);
      }
    }
  }

  if (*(_DWORD *)(a1 + 316))
  {
    id v38 = objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLUnifiedCellLocationProvider"),  "syncgetName");
    if (v38)
    {
      sub_1010DDBC0(v154, (char *)[v38 UTF8String]);
      int v39 = *(_DWORD *)(a1 + 316);
      sub_1010DDBC0(v151, "CLUnifiedCellLocationProvider");
      sub_10043AE9C((uint64_t)__p, v39, (__int128 *)v154, (__int128 *)v151, 6, 0, -1);
      v149[0] = (void *)(a1 + 316);
      __int16 v40 = sub_10043B674((uint64_t **)(a1 + 240), (int *)(a1 + 316), (uint64_t)&unk_1012CF090, (_DWORD **)v149);
      *((_DWORD *)v40 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_DWORD *)__p;
      char v41 = (void **)(v40 + 6);
      v40[8] = (uint64_t *)v160;
      *(_OWORD *)char v41 = *(_OWORD *)&__p[8];
      HIBYTE(v16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
      __p[8] = 0;
      std::string v42 = (void **)(v40 + 9);
      v40[11] = v162;
      *(_OWORD *)std::string v42 = *(_OWORD *)v161;
      HIBYTE(v162) = 0;
      LOBYTE(v161[0]) = 0;
      __int128 v43 = v164;
      *((_OWORD *)v40 + 6) = v163;
      *((_OWORD *)v40 + 7) = v43;
      __int128 v44 = v168;
      __int128 v45 = v167;
      __int128 v46 = v166;
      *((_OWORD *)v40 + 8) = v165;
      *((_OWORD *)v40 + 9) = v46;
      __int128 v47 = *(_OWORD *)((char *)v171 + 12);
      __int128 v48 = v171[0];
      __int128 v49 = v170;
      *((_OWORD *)v40 + 12) = v169;
      *((_OWORD *)v40 + 13) = v49;
      *((_OWORD *)v40 + 14) = v48;
      *(_OWORD *)((char *)v40 + 236) = v47;
      *((_OWORD *)v40 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v45;
      *((_OWORD *)v40 + 11) = v44;
      memcpy(v40 + 32, v172, 0x201uLL);
      sub_10005F550((uint64_t)(v40 + 97), &v173);
      __int128 v50 = v176;
      __int128 v51 = v175;
      *(_OWORD *)(v40 + 99) = v174;
      uint64_t v52 = *(uint64_t **)&v179[13];
      __int128 v53 = *(_OWORD *)v179;
      __int128 v54 = v178;
      *(_OWORD *)(v40 + 105) = v177;
      *(_OWORD *)(v40 + 107) = v54;
      *(_OWORD *)(v40 + 109) = v53;
      *(uint64_t **)((char *)v40 + 885) = v52;
      *(_OWORD *)(v40 + 101) = v51;
      *(_OWORD *)(v40 + 103) = v50;
      *((_OWORD *)v40 + 56) = v180;
      __int16 v55 = (std::__shared_weak_count *)*((void *)&v173 + 1);
      if (*((void *)&v173 + 1))
      {
        double v56 = (unint64_t *)(*((void *)&v173 + 1) + 8LL);
        do
          unint64_t v57 = __ldaxr(v56);
        while (__stlxr(v57 - 1, v56));
        if (!v57)
        {
          ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
          std::__shared_weak_count::__release_weak(v55);
        }
      }

      if (SHIBYTE(v162) < 0) {
        operator delete(v161[0]);
      }
      if (SHIBYTE(v160) < 0) {
        operator delete(*(void **)&__p[8]);
      }
      if (v152 < 0) {
        operator delete(v151[0]);
      }
      sub_100A316B0((uint64_t)"CLLocationController", (uint64_t)sub_10042A0A4, a1, *(void **)(a1 + 32), v151);
      *(void *)std::stringbuf::string_type __p = a1 + 316;
      uint64_t v58 = sub_10000C858((uint64_t **)(a1 + 264), (int *)(a1 + 316), (uint64_t)&unk_1012CF090, (_DWORD **)__p);
      uint64_t v59 = (uint64_t *)v151[0];
      v151[0] = 0LL;
      uint64_t v60 = v58[5];
      v58[5] = v59;
      if (v60)
      {
        (*(void (**)(uint64_t *))(*v60 + 8))(v60);
        uint64_t v61 = v151[0];
        v151[0] = 0LL;
        if (v61) {
          (*(void (**)(void *))(*(void *)v61 + 8LL))(v61);
        }
      }

      *(void *)std::stringbuf::string_type __p = a1 + 316;
      int v62 = sub_10000C858((uint64_t **)(a1 + 264), (int *)(a1 + 316), (uint64_t)&unk_1012CF090, (_DWORD **)__p);
      sub_10047DC38((uint64_t)v62[5]);
      if ((v154[23] & 0x80000000) != 0) {
        operator delete(*(void **)v154);
      }
    }
  }

  int v63 = *(_DWORD *)(a1 + 320);
  if (v63)
  {
    sub_1010DDBC0(v154, "gps");
    sub_1010DDBC0(v151, "CLGnssProvider");
    sub_10043AE9C((uint64_t)__p, v63, (__int128 *)v154, (__int128 *)v151, 1, 2, 2);
    v149[0] = (void *)(a1 + 320);
    unsigned int v64 = sub_10043B674((uint64_t **)(a1 + 240), (int *)(a1 + 320), (uint64_t)&unk_1012CF090, (_DWORD **)v149);
    *((_DWORD *)v64 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_DWORD *)__p;
    int v65 = (void **)(v64 + 6);
    v64[8] = (uint64_t *)v160;
    *(_OWORD *)int v65 = *(_OWORD *)&__p[8];
    HIBYTE(v16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
    __p[8] = 0;
    double v66 = (void **)(v64 + 9);
    v64[11] = v162;
    *(_OWORD *)double v66 = *(_OWORD *)v161;
    HIBYTE(v162) = 0;
    LOBYTE(v161[0]) = 0;
    __int128 v67 = v164;
    *((_OWORD *)v64 + 6) = v163;
    *((_OWORD *)v64 + 7) = v67;
    __int128 v68 = v168;
    __int128 v69 = v167;
    __int128 v70 = v166;
    *((_OWORD *)v64 + 8) = v165;
    *((_OWORD *)v64 + 9) = v70;
    __int128 v71 = *(_OWORD *)((char *)v171 + 12);
    __int128 v72 = v171[0];
    __int128 v73 = v170;
    *((_OWORD *)v64 + 12) = v169;
    *((_OWORD *)v64 + 13) = v73;
    *((_OWORD *)v64 + 14) = v72;
    *(_OWORD *)((char *)v64 + 236) = v71;
    *((_OWORD *)v64 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v69;
    *((_OWORD *)v64 + 11) = v68;
    memcpy(v64 + 32, v172, 0x201uLL);
    sub_10005F550((uint64_t)(v64 + 97), &v173);
    __int128 v74 = v176;
    __int128 v75 = v175;
    *(_OWORD *)(v64 + 99) = v174;
    double v76 = *(uint64_t **)&v179[13];
    __int128 v77 = *(_OWORD *)v179;
    __int128 v78 = v178;
    *(_OWORD *)(v64 + 105) = v177;
    *(_OWORD *)(v64 + 107) = v78;
    *(_OWORD *)(v64 + 109) = v77;
    *(uint64_t **)((char *)v64 + 885) = v76;
    *(_OWORD *)(v64 + 101) = v75;
    *(_OWORD *)(v64 + 103) = v74;
    *((_OWORD *)v64 + 56) = v180;
    uint64_t v79 = (std::__shared_weak_count *)*((void *)&v173 + 1);
    if (*((void *)&v173 + 1))
    {
      double v80 = (unint64_t *)(*((void *)&v173 + 1) + 8LL);
      do
        unint64_t v81 = __ldaxr(v80);
      while (__stlxr(v81 - 1, v80));
      if (!v81)
      {
        ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
        std::__shared_weak_count::__release_weak(v79);
      }
    }

    if (SHIBYTE(v162) < 0) {
      operator delete(v161[0]);
    }
    if (SHIBYTE(v160) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    if (v152 < 0) {
      operator delete(v151[0]);
    }
    if ((v154[23] & 0x80000000) != 0) {
      operator delete(*(void **)v154);
    }
    sub_100A9E630();
  }

  if (*(_DWORD *)(a1 + 328))
  {
    *(void *)uint64_t v154 = 0LL;
    *(void *)&v154[8] = v154;
    *(void *)&v154[16] = 0x4812000000LL;
    uint64_t v155 = sub_10042A65C;
    uint64_t v156 = sub_10042A678;
    __int128 v157 = 0u;
    __int128 v158 = 0u;
    v145[0] = _NSConcreteStackBlock;
    v145[1] = 3221225472LL;
    v145[2] = sub_10042A68C;
    v145[3] = &unk_101838B40;
    v145[4] = v154;
    sub_1004DA468((uint64_t)v145);
    int v82 = *(_DWORD *)(a1 + 328);
    uint64_t v83 = *(void *)&v154[8];
    sub_1010DDBC0(v151, "CLAccessoryLocationProvider");
    sub_10043AE9C((uint64_t)__p, v82, (__int128 *)(v83 + 48), (__int128 *)v151, 3, 2, 5);
    v149[0] = (void *)(a1 + 328);
    int v84 = sub_10043B674((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_1012CF090, (_DWORD **)v149);
    *((_DWORD *)v84 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_DWORD *)__p;
    uint64_t v85 = (void **)(v84 + 6);
    v84[8] = (uint64_t *)v160;
    *(_OWORD *)uint64_t v85 = *(_OWORD *)&__p[8];
    HIBYTE(v16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
    __p[8] = 0;
    uint64_t v86 = (void **)(v84 + 9);
    v84[11] = v162;
    *(_OWORD *)uint64_t v86 = *(_OWORD *)v161;
    HIBYTE(v162) = 0;
    LOBYTE(v161[0]) = 0;
    __int128 v87 = v164;
    *((_OWORD *)v84 + 6) = v163;
    *((_OWORD *)v84 + 7) = v87;
    __int128 v88 = v168;
    __int128 v89 = v167;
    __int128 v90 = v166;
    *((_OWORD *)v84 + 8) = v165;
    *((_OWORD *)v84 + 9) = v90;
    __int128 v91 = *(_OWORD *)((char *)v171 + 12);
    __int128 v92 = v171[0];
    __int128 v93 = v170;
    *((_OWORD *)v84 + 12) = v169;
    *((_OWORD *)v84 + 13) = v93;
    *((_OWORD *)v84 + 14) = v92;
    *(_OWORD *)((char *)v84 + 236) = v91;
    *((_OWORD *)v84 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v89;
    *((_OWORD *)v84 + 11) = v88;
    memcpy(v84 + 32, v172, 0x201uLL);
    sub_10005F550((uint64_t)(v84 + 97), &v173);
    __int128 v94 = v176;
    __int128 v95 = v175;
    *(_OWORD *)(v84 + 99) = v174;
    v96 = *(uint64_t **)&v179[13];
    __int128 v97 = *(_OWORD *)v179;
    __int128 v98 = v178;
    *(_OWORD *)(v84 + 105) = v177;
    *(_OWORD *)(v84 + 107) = v98;
    *(_OWORD *)(v84 + 109) = v97;
    *(uint64_t **)((char *)v84 + 885) = v96;
    *(_OWORD *)(v84 + 101) = v95;
    *(_OWORD *)(v84 + 103) = v94;
    *((_OWORD *)v84 + 56) = v180;
    uint64_t v99 = (std::__shared_weak_count *)*((void *)&v173 + 1);
    if (*((void *)&v173 + 1))
    {
      int v100 = (unint64_t *)(*((void *)&v173 + 1) + 8LL);
      do
        unint64_t v101 = __ldaxr(v100);
      while (__stlxr(v101 - 1, v100));
      if (!v101)
      {
        ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
        std::__shared_weak_count::__release_weak(v99);
      }
    }

    if (SHIBYTE(v162) < 0) {
      operator delete(v161[0]);
    }
    if (SHIBYTE(v160) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    if (v152 < 0) {
      operator delete(v151[0]);
    }
    sub_1004DA39C((uint64_t)"CLLocationController", (uint64_t)sub_10042A474, a1, *(void **)(a1 + 32), v151);
    *(void *)std::stringbuf::string_type __p = a1 + 328;
    uint64_t v102 = sub_10000C858((uint64_t **)(a1 + 264), (int *)(a1 + 328), (uint64_t)&unk_1012CF090, (_DWORD **)__p);
    uint64_t v103 = (uint64_t *)v151[0];
    v151[0] = 0LL;
    unsigned int v104 = v102[5];
    v102[5] = v103;
    if (v104)
    {
      (*(void (**)(uint64_t *))(*v104 + 8))(v104);
      int v105 = v151[0];
      v151[0] = 0LL;
      if (v105) {
        (*(void (**)(void *))(*(void *)v105 + 8LL))(v105);
      }
    }

    *(void *)std::stringbuf::string_type __p = a1 + 328;
    int v106 = sub_10000C858((uint64_t **)(a1 + 264), (int *)(a1 + 328), (uint64_t)&unk_1012CF090, (_DWORD **)__p);
    sub_10047DC38((uint64_t)v106[5]);
    _Block_object_dispose(v154, 8);
    if (SHIBYTE(v158) < 0) {
      operator delete(*((void **)&v157 + 1));
    }
  }

  if (*(_DWORD *)(a1 + 332))
  {
    *(void *)uint64_t v154 = 0LL;
    *(void *)&v154[8] = v154;
    *(void *)&v154[16] = 0x4812000000LL;
    uint64_t v155 = sub_10042A65C;
    uint64_t v156 = sub_10042A678;
    __int128 v157 = 0u;
    __int128 v158 = 0u;
    v144[0] = _NSConcreteStackBlock;
    v144[1] = 3221225472LL;
    void v144[2] = sub_10042A8F4;
    v144[3] = &unk_101838B40;
    v144[4] = v154;
    sub_1006DB678((uint64_t)v144);
    int v107 = *(_DWORD *)(a1 + 332);
    uint64_t v108 = *(void *)&v154[8];
    sub_1010DDBC0(v151, "CLSimulatedLocationProvider");
    sub_10043AE9C((uint64_t)__p, v107, (__int128 *)(v108 + 48), (__int128 *)v151, 0, 0, -1);
    v149[0] = (void *)(a1 + 332);
    __int128 v109 = sub_10043B674((uint64_t **)(a1 + 240), (int *)(a1 + 332), (uint64_t)&unk_1012CF090, (_DWORD **)v149);
    *((_DWORD *)v109 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_DWORD *)__p;
    unsigned int v110 = (void **)(v109 + 6);
    v109[8] = (uint64_t *)v160;
    *(_OWORD *)unsigned int v110 = *(_OWORD *)&__p[8];
    HIBYTE(v16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
    __p[8] = 0;
    int v111 = (void **)(v109 + 9);
    v109[11] = v162;
    *(_OWORD *)int v111 = *(_OWORD *)v161;
    HIBYTE(v162) = 0;
    LOBYTE(v161[0]) = 0;
    __int128 v112 = v164;
    *((_OWORD *)v109 + 6) = v163;
    *((_OWORD *)v109 + 7) = v112;
    __int128 v113 = v168;
    __int128 v114 = v167;
    __int128 v115 = v166;
    *((_OWORD *)v109 + 8) = v165;
    *((_OWORD *)v109 + 9) = v115;
    __int128 v116 = *(_OWORD *)((char *)v171 + 12);
    __int128 v117 = v171[0];
    __int128 v118 = v170;
    *((_OWORD *)v109 + 12) = v169;
    *((_OWORD *)v109 + 13) = v118;
    *((_OWORD *)v109 + 14) = v117;
    *(_OWORD *)((char *)v109 + 236) = v116;
    *((_OWORD *)v109 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v114;
    *((_OWORD *)v109 + 11) = v113;
    memcpy(v109 + 32, v172, 0x201uLL);
    sub_10005F550((uint64_t)(v109 + 97), &v173);
    __int128 v119 = v176;
    __int128 v120 = v175;
    *(_OWORD *)(v109 + 99) = v174;
    uint64_t v121 = *(uint64_t **)&v179[13];
    __int128 v122 = *(_OWORD *)v179;
    __int128 v123 = v178;
    *(_OWORD *)(v109 + 105) = v177;
    *(_OWORD *)(v109 + 107) = v123;
    *(_OWORD *)(v109 + 109) = v122;
    *(uint64_t **)((char *)v109 + 885) = v121;
    *(_OWORD *)(v109 + 101) = v120;
    *(_OWORD *)(v109 + 103) = v119;
    *((_OWORD *)v109 + 56) = v180;
    __int16 v124 = (std::__shared_weak_count *)*((void *)&v173 + 1);
    if (*((void *)&v173 + 1))
    {
      int v125 = (unint64_t *)(*((void *)&v173 + 1) + 8LL);
      do
        unint64_t v126 = __ldaxr(v125);
      while (__stlxr(v126 - 1, v125));
      if (!v126)
      {
        ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
        std::__shared_weak_count::__release_weak(v124);
      }
    }

    if (SHIBYTE(v162) < 0) {
      operator delete(v161[0]);
    }
    if (SHIBYTE(v160) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    if (v152 < 0) {
      operator delete(v151[0]);
    }
    sub_1006DB5AC((uint64_t)"CLLocationController", (uint64_t)sub_10042A70C, a1, *(void **)(a1 + 32), v151);
    *(void *)std::stringbuf::string_type __p = a1 + 332;
    double v127 = sub_10000C858((uint64_t **)(a1 + 264), (int *)(a1 + 332), (uint64_t)&unk_1012CF090, (_DWORD **)__p);
    uint64_t v128 = (uint64_t *)v151[0];
    v151[0] = 0LL;
    double v129 = v127[5];
    v127[5] = v128;
    if (v129)
    {
      (*(void (**)(uint64_t *))(*v129 + 8))(v129);
      unint64_t v130 = v151[0];
      v151[0] = 0LL;
      if (v130) {
        (*(void (**)(void *))(*(void *)v130 + 8LL))(v130);
      }
    }

    *(void *)std::stringbuf::string_type __p = a1 + 332;
    int v131 = sub_10000C858((uint64_t **)(a1 + 264), (int *)(a1 + 332), (uint64_t)&unk_1012CF090, (_DWORD **)__p);
    sub_10047DC38((uint64_t)v131[5]);
    _Block_object_dispose(v154, 8);
    if (SHIBYTE(v158) < 0) {
      operator delete(*((void **)&v157 + 1));
    }
  }

  if (objc_msgSend( objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLLoiLocationProvider"),  "syncgetName"))
  {
    sub_100B3B548((uint64_t)"CLLoiLocationOverride", (uint64_t)sub_10042A974, a1, *(void **)(a1 + 32), __p);
    uint64_t v132 = *(void *)__p;
    *(void *)std::stringbuf::string_type __p = 0LL;
    uint64_t v133 = *(void *)(a1 + 624);
    *(void *)(a1 + 624) = v132;
    if (v133)
    {
      (*(void (**)(uint64_t))(*(void *)v133 + 8LL))(v133);
      uint64_t v134 = *(void *)__p;
      *(void *)std::stringbuf::string_type __p = 0LL;
      if (v134) {
        (*(void (**)(uint64_t))(*(void *)v134 + 8LL))(v134);
      }
    }

    sub_10047DC38(*(void *)(a1 + 624));
    [*(id *)(*(void *)(a1 + 624) + 16) register:*(void *)(*(void *)(a1 + 624) + 8) forNotification:0 registrationInfo:0];
    [*(id *)(*(void *)(a1 + 624) + 16) register:*(void *)(*(void *)(a1 + 624) + 8) forNotification:9 registrationInfo:0];
  }

  [*(id *)(a1 + 5024) registerForUpdates:*(void *)(a1 + 32)];
  [*(id *)(a1 + 632) setHarvestingEnabled:1];
}

void sub_100429C60( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, void *a39, uint64_t a40, uint64_t a41, uint64_t a42, void *__p, uint64_t a44, int a45, __int16 a46, char a47, char a48)
{
  if (a48 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100429E2C(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(*(void *)(result + 32) + 316LL) = 2 * (a2 != 0);
  return result;
}

uint64_t sub_100429E44(uint64_t result, uint64_t a2)
{
  if (a2) {
    int v2 = 6;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(*(void *)(result + 32) + 328LL) = v2;
  return result;
}

uint64_t sub_100429E5C(uint64_t result, uint64_t a2)
{
  if (a2) {
    int v2 = 7;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(*(void *)(result + 32) + 332LL) = v2;
  return result;
}

void sub_100429E74(int a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onWifiNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      __int128 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onWifiNotification, event:%{public, location:escape_only}s,  this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004370D4(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10042A03C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10042A05C(uint64_t a1)
{
  return a1;
}

void sub_10042A0A4(int a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onCellNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      __int128 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onCellNotification, event:%{public, location:escape_only}s,  this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10043719C(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10042A26C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10042A28C(__int32 a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onGpsNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      __int128 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onGpsNotification, event:%{public, location:escape_only}s,  this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100437248(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10042A454( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10042A474(__int32 a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onAccessoryNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      __int128 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onAccessoryNotification, event:%{public, location:escape_only }s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100437938(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10042A63C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_10042A65C(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a1[3] = result;
  a2[3].n128_u64[1] = 0LL;
  a2[4].n128_u64[0] = 0LL;
  a2[3].n128_u64[0] = 0LL;
  return result;
}

void sub_10042A678(uint64_t a1)
{
}

double sub_10042A68C(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C(&v6, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 24);
  }

  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8LL);
  uint64_t v4 = v3 + 48;
  double result = *(double *)&v6;
  *(_OWORD *)uint64_t v4 = v6;
  *(void *)(v4 + 16) = v7;
  return result;
}

void sub_10042A70C(int a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onSimulatedNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      __int128 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onSimulatedNotification, event:%{public, location:escape_only }s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10043828C(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10042A8D4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

double sub_10042A8F4(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C(&v6, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 24);
  }

  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8LL);
  uint64_t v4 = v3 + 48;
  double result = *(double *)&v6;
  *(_OWORD *)uint64_t v4 = v6;
  *(void *)(v4 + 16) = v7;
  return result;
}

void sub_10042A974(unsigned int a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101838BE0);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLLocationController::onLoiNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101838BE0);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      __int128 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLLocationController::onLoiNotification, event:%{public, location:escape_only}s,  this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100438338(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10042AB3C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10042AB5C(uint64_t a1)
{
  *(void *)(a1 + 648) = 0LL;
  uint64_t v2 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  id v6 = [*(id *)(a1 + 32) vendor];
  uint64_t v7 = *(int **)(a1 + 264);
  if (v7 != (int *)(a1 + 272))
  {
    id v8 = v6;
    do
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      int v9 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v10 = sub_10000C6DC(a1 + 240, v7 + 8);
        uint64_t v13 = v10[1];
        char v11 = v10 + 1;
        uint64_t v12 = v13;
        *(_DWORD *)std::stringbuf::string_type buf = 136446210;
        uint64_t v39 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "shutting down %{public}s location provider",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        uint64_t v25 = qword_101934838;
        int v26 = sub_10000C6DC(a1 + 240, v7 + 8);
        uint64_t v29 = v26[1];
        __int128 v27 = v26 + 1;
        uint64_t v28 = v29;
        int v36 = 136446210;
        uint64_t v37 = v28;
        LODWORD(v34) = 12;
        __int16 v30 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v25,  2LL,  "shutting down %{public}s location provider",  &v36,  v34);
        sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLLocationController::shutdown()", "%s\n", v30);
      }

      __int16 v14 = sub_10000C6DC(a1 + 240, v7 + 8);
      uint64_t v17 = v14[4];
      int v15 = v14 + 4;
      uint64_t v16 = v17;
      else {
        __int16 v18 = (uint64_t *)v16;
      }
      uint64_t v19 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v18);
      id v20 = +[CLSilo main](&OBJC_CLASS___CLSilo, "main");
      v35[0] = _NSConcreteStackBlock;
      v35[1] = 3221225472LL;
      v35[2] = sub_10042AFB0;
      v35[3] = &unk_10181A328;
      v35[4] = v8;
      v35[5] = v19;
      [v20 async:v35];
      uint64_t v21 = *((void *)v7 + 5);
      *((void *)v7 + 5) = 0LL;
      if (v21) {
        (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
      }
      __int128 v22 = (int *)*((void *)v7 + 1);
      if (v22)
      {
        do
        {
          __int128 v23 = v22;
          __int128 v22 = *(int **)v22;
        }

        while (v22);
      }

      else
      {
        do
        {
          __int128 v23 = (int *)*((void *)v7 + 2);
          BOOL v24 = *(void *)v23 == (void)v7;
          uint64_t v7 = v23;
        }

        while (!v24);
      }

      uint64_t v7 = v23;
    }

    while (v23 != (int *)(a1 + 272));
  }

  *(void *)(a1 + 64sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  uint64_t v31 = *(void *)(a1 + 624);
  if (v31)
  {
    [*(id *)(v31 + 16) unregister:*(void *)(v31 + 8) forNotification:0];
    [*(id *)(*(void *)(a1 + 624) + 16) unregister:*(void *)(*(void *)(a1 + 624) + 8) forNotification:9];
    objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "retireServiceWithName:", @"CLLoiLocationProvider");
    uint64_t v32 = *(void *)(a1 + 624);
    *(void *)(a1 + 624) = 0LL;
    if (v32) {
      (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
    }
  }

  [*(id *)(a1 + 632) setHarvestingEnabled:0];
  [*(id *)(a1 + 632) shutdown];

  *(void *)(a1 + 632) = 0LL;
  [*(id *)(a1 + 1592) invalidate];

  *(void *)(a1 + 1592) = 0LL;
  [*(id *)(a1 + 5008) stopMonitoringEmergencyState:CLISP_ME_TOKEN];

  sub_10042AFBC((uint64_t *)(a1 + 704), 0LL);
  *(void *)(a1 + 5016) = 0LL;
  uint64_t v33 = *(void **)(a1 + 5024);
  if (v33)
  {
    [v33 unregisterForUpdates:*(void *)(a1 + 32)];

    *(void *)(a1 + 5024) = 0LL;
  }

id sub_10042AFB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) retireServiceWithName:*(void *)(a1 + 40)];
}

void sub_10042AFBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_10052A948();
    operator delete(v4);
  }

void sub_10042AFE8(uint64_t a1)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  uint64_t v2 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#techstatus,signalling", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v5[0] = 0;
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#techstatus,signalling",  v5,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::signalTechStatusChanged()", "%s\n", v4);
  }

  CFRunLoopSourceSignal(*(CFRunLoopSourceRef *)(a1 + 680));
  CFRunLoopSourceSignal(*(CFRunLoopSourceRef *)(a1 + 688));
  uint64_t v3 = (__CFRunLoop *)sub_10029228C();
  CFRunLoopWakeUp(v3);
}

void sub_10042B190(uint64_t a1, int a2)
{
  int v60 = a2;
  *((void *)&v56 + 1) = 0xBFF0000000000000LL;
  __int16 v57 = 0;
  int v58 = 0;
  int v59 = 0;
  double v4 = sub_100425654(a1);
  *(double *)&__int128 v56 = v4;
  if (a2)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v5 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(void *)std::stringbuf::string_type buf = &v60;
      id v6 = sub_10000C858((uint64_t **)(a1 + 264), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5];
      *(void *)std::stringbuf::string_type buf = &v60;
      uint64_t v7 = sub_10043B674((uint64_t **)(a1 + 240), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      id v8 = v7 + 6;
      *(_DWORD *)std::stringbuf::string_type buf = 134349570;
      *(void *)&uint8_t buf[4] = v6;
      __int16 v67 = 2050;
      double v68 = v4;
      __int16 v69 = 2082;
      __int128 v70 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "CLIENT:startLocation,registerForNotification,start reg info,client,%{public}p,desiredAccuracy,%{public}.1lf,name,%{public}s",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v38 = qword_101934838;
      *(void *)uint64_t v61 = &v60;
      uint64_t v39 = sub_10000C858((uint64_t **)(a1 + 264), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)v61)[5];
      *(void *)uint64_t v61 = &v60;
      __int16 v40 = sub_10043B674((uint64_t **)(a1 + 240), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)v61);
      char v41 = v40 + 6;
      *(_DWORD *)uint64_t v61 = 134349570;
      *(void *)&v61[4] = v39;
      __int16 v62 = 2050;
      double v63 = v4;
      __int16 v64 = 2082;
      int v65 = v41;
      std::string v42 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v38,  2LL,  "CLIENT:startLocation,registerForNotification,start reg info,client,%{public}p,desiredAccuracy,%{pu blic}.1lf,name,%{public}s",  v61,  32);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::startLocationProvider(LocationProvider)",  "%s\n",  v42);
      if (v42 != buf) {
        free(v42);
      }
    }

    int v9 = (uint64_t **)(a1 + 240);
    *(void *)std::stringbuf::string_type buf = &v60;
    if (*((_BYTE *)sub_10043B674((uint64_t **)(a1 + 240), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 903)
      || (*(void *)std::stringbuf::string_type buf = &v60,
          *((double *)sub_10043B674((uint64_t **)(a1 + 240), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 113) > 0.0))
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101838C80);
      }
      uint64_t v10 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning, starting already active provider",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101838C80);
        }
        *(_WORD *)uint64_t v61 = 0;
        LODWORD(v55) = 2;
        __int128 v43 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "LocationController,#Warning, starting already active provider",  v61,  v55);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::startLocationProvider(LocationProvider)",  "%s\n",  v43);
        if (v43 != buf) {
          free(v43);
        }
      }
    }

    if (*(_BYTE *)(a1 + 656))
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      char v11 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        *(void *)std::stringbuf::string_type buf = &v60;
        uint64_t v12 = sub_10043B674((uint64_t **)(a1 + 240), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        uint64_t v13 = v12 + 6;
        *(_DWORD *)std::stringbuf::string_type buf = 136446210;
        *(void *)&uint8_t buf[4] = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "registering location provider,%{public}s,as a bystander only",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        uint64_t v44 = qword_101934838;
        *(void *)uint64_t v61 = &v60;
        __int128 v45 = sub_10043B674((uint64_t **)(a1 + 240), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)v61);
        __int128 v46 = v45 + 6;
        *(_DWORD *)uint64_t v61 = 136446210;
        *(void *)&v61[4] = v46;
        LODWORD(v55) = 12;
        __int128 v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v44,  2LL,  "registering location provider,%{public}s,as a bystander only",  v61,  v55);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::startLocationProvider(LocationProvider)",  "%s\n",  v47);
        if (v47 != buf) {
          free(v47);
        }
      }

      *(void *)std::stringbuf::string_type buf = &v60;
      __int16 v14 = sub_10000C858((uint64_t **)(a1 + 264), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5];
      uint64_t v16 = v14[1];
      int v15 = (void *)v14[2];
      uint64_t v17 = 4LL;
      __int16 v18 = 0LL;
    }

    else
    {
      int v21 = v60;
      if (v60 == *(_DWORD *)(a1 + 320))
      {
        int v58 = sub_10047D7E8(a1, 0);
        int v21 = v60;
      }

      if (v21 == *(_DWORD *)(a1 + 336)) {
        int v59 = 1;
      }
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101838C80);
      }
      __int128 v22 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        *(void *)std::stringbuf::string_type buf = &v60;
        __int128 v23 = sub_10043B674((uint64_t **)(a1 + 240), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        BOOL v24 = v23 + 6;
        float v25 = sub_100425654(a1);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        *(void *)&uint8_t buf[4] = v24;
        __int16 v67 = 2050;
        double v68 = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "@ClxProvider, start, %{public}s, desiredAccuracy, %{public}.1f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101838C80);
        }
        uint64_t v48 = qword_101934858;
        *(void *)uint64_t v61 = &v60;
        __int128 v49 = sub_10043B674((uint64_t **)(a1 + 240), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)v61);
        __int128 v50 = v49 + 6;
        float v51 = sub_100425654(a1);
        *(_DWORD *)uint64_t v61 = 136446466;
        *(void *)&v61[4] = v50;
        __int16 v62 = 2050;
        double v63 = v51;
        LODWORD(v55) = 22;
        uint64_t v52 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  0LL,  "@ClxProvider, start, %{public}s, desiredAccuracy, %{public}.1f",  v61,  v55);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::startLocationProvider(LocationProvider)",  "%s\n",  v52);
        if (v52 != buf) {
          free(v52);
        }
      }

      if (v60 == *(_DWORD *)(a1 + 312))
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101838C80);
        }
        int v26 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "WlpReg, 1, loccontroller", buf, 2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101838C80);
          }
          *(_WORD *)uint64_t v61 = 0;
          LODWORD(v55) = 2;
          __int128 v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WlpReg, 1, loccontroller",  v61,  v55);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::startLocationProvider(LocationProvider)",  "%s\n",  v53);
          if (v53 != buf) {
            free(v53);
          }
        }
      }

      if (v60 == *(_DWORD *)(a1 + 316))
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101838C80);
        }
        __int128 v27 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "UclpReg, 1, loccontroller", buf, 2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101838C80);
          }
          *(_WORD *)uint64_t v61 = 0;
          LODWORD(v55) = 2;
          __int128 v54 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "UclpReg, 1, loccontroller",  v61,  v55);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::startLocationProvider(LocationProvider)",  "%s\n",  v54);
          if (v54 != buf) {
            free(v54);
          }
        }
      }

      *(void *)std::stringbuf::string_type buf = &v60;
      uint64_t v28 = sub_10000C858((uint64_t **)(a1 + 264), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5];
      [(id)v28[2] register:v28[1] forNotification:0 registrationInfo:sub_100419014(&v56)];
      *(void *)std::stringbuf::string_type buf = &v60;
      uint64_t v29 = sub_10000C858((uint64_t **)(a1 + 264), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5];
      __int16 v18 = sub_100419014(&v56);
      uint64_t v16 = v29[1];
      int v15 = (void *)v29[2];
      uint64_t v17 = 9LL;
    }

    [v15 register:v16 forNotification:v17 registrationInfo:v18];
    if (v60 == *(_DWORD *)(a1 + 320))
    {
      *(void *)std::stringbuf::string_type buf = &v60;
      __int16 v30 = sub_10000C858((uint64_t **)(a1 + 264), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      [(id)v30[5][2] register:v30[5][1] forNotification:26 registrationInfo:0];
      *(void *)std::stringbuf::string_type buf = &v60;
      uint64_t v31 = sub_10000C858((uint64_t **)(a1 + 264), &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      [(id)v31[5][2] register:v31[5][1] forNotification:18 registrationInfo:0];
      uint64_t v32 = *(void *)(a1 + 304);
      if (v32) {
        sub_100AF2BAC(v32);
      }
    }

    if (v60 == *(_DWORD *)(a1 + 328))
    {
      uint64_t v33 = (uint64_t **)(a1 + 264);
      *(void *)std::stringbuf::string_type buf = &v60;
      uint64_t v34 = sub_10000C858(v33, &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      [(id)v34[5][2] register:v34[5][1] forNotification:20 registrationInfo:0];
      *(void *)std::stringbuf::string_type buf = &v60;
      uint64_t v35 = sub_10000C858(v33, &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      [(id)v35[5][2] register:v35[5][1] forNotification:21 registrationInfo:0];
    }

    *(void *)std::stringbuf::string_type buf = &v60;
    *((_BYTE *)sub_10043B674(v9, &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 902) = 0;
    *(void *)std::stringbuf::string_type buf = &v60;
    *((_BYTE *)sub_10043B674(v9, &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 903) = 1;
    uint64_t v36 = sub_10080E94C();
    *(_DWORD *)std::stringbuf::string_type buf = 1;
    double v37 = sub_10080EB58(v36, buf);
    *(void *)std::stringbuf::string_type buf = &v60;
    *((double *)sub_10043B674(v9, &v60, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 113) = v37;
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v19 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "LocationController,#Warning,startLocation when provider is None",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      *(_WORD *)uint64_t v61 = 0;
      id v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationController,#Warning,startLocation when provider is None",  v61,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::startLocationProvider(LocationProvider)",  "%s\n",  v20);
      if (v20 != buf) {
        free(v20);
      }
    }
  }

void sub_10042BF8C(uint64_t a1, int a2)
{
  int v50 = a2;
  if (a2)
  {
    if (*(_BYTE *)(a1 + 656))
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v3 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        *(void *)std::stringbuf::string_type buf = &v50;
        double v4 = sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        uint64_t v5 = v4 + 6;
        *(_DWORD *)std::stringbuf::string_type buf = 136315138;
        *(void *)&uint8_t buf[4] = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Unregistering %s location provider as bystander",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        uint64_t v37 = qword_101934838;
        *(void *)float v51 = &v50;
        uint64_t v38 = sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)v51);
        uint64_t v39 = v38 + 6;
        *(_DWORD *)float v51 = 136315138;
        *(void *)&v51[4] = v39;
        __int16 v40 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v37,  2LL,  "Unregistering %s location provider as bystander",  v51);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::stopLocationProvider(LocationProvider)",  "%s\n",  v40);
        if (v40 != buf) {
          free(v40);
        }
      }

      *(void *)std::stringbuf::string_type buf = &v50;
      id v6 = sub_10000C858((uint64_t **)(a1 + 264), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      [(id)v6[5][2] unregister:v6[5][1] forNotification:4];
    }

    else
    {
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101838C80);
      }
      int v9 = (os_log_s *)qword_101934858;
      if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
      {
        *(void *)std::stringbuf::string_type buf = &v50;
        uint64_t v10 = sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        char v11 = v10 + 6;
        float v12 = sub_100425654(a1);
        *(_DWORD *)std::stringbuf::string_type buf = 136380931;
        *(void *)&uint8_t buf[4] = v11;
        __int16 v55 = 2050;
        *(double *)__int128 v56 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "@ClxProvider, stop, %{private}s, desiredAccuracy, %{public}.1f",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101838C80);
        }
        uint64_t v41 = qword_101934858;
        *(void *)float v51 = &v50;
        std::string v42 = sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)v51);
        __int128 v43 = v42 + 6;
        float v44 = sub_100425654(a1);
        *(_DWORD *)float v51 = 136380931;
        *(void *)&v51[4] = v43;
        __int16 v52 = 2050;
        double v53 = v44;
        __int128 v45 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v41,  0LL,  "@ClxProvider, stop, %{private}s, desiredAccuracy, %{public}.1f",  v51,  22);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::stopLocationProvider(LocationProvider)",  "%s\n",  v45);
        if (v45 != buf) {
          free(v45);
        }
      }

      if (v50 == *(_DWORD *)(a1 + 312))
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101838C80);
        }
        uint64_t v13 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "WlpReg, 0, loccontroller", buf, 2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101838C80);
          }
          *(_WORD *)float v51 = 0;
          LODWORD(v48) = 2;
          __int128 v46 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WlpReg, 0, loccontroller",  v51,  v48);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::stopLocationProvider(LocationProvider)",  "%s\n",  v46);
          if (v46 != buf) {
            free(v46);
          }
        }
      }

      if (v50 == *(_DWORD *)(a1 + 316))
      {
        if (qword_101934850 != -1) {
          dispatch_once(&qword_101934850, &stru_101838C80);
        }
        __int16 v14 = (os_log_s *)qword_101934858;
        if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "UclpReg, 0, loccontroller", buf, 2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934850 != -1) {
            dispatch_once(&qword_101934850, &stru_101838C80);
          }
          *(_WORD *)float v51 = 0;
          LODWORD(v48) = 2;
          __int128 v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "UclpReg, 0, loccontroller",  v51,  v48);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::stopLocationProvider(LocationProvider)",  "%s\n",  v47);
          if (v47 != buf) {
            free(v47);
          }
        }
      }

      *(void *)std::stringbuf::string_type buf = &v50;
      int v15 = sub_10000C858((uint64_t **)(a1 + 264), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      [(id)v15[5][2] unregister:v15[5][1] forNotification:0];
      *(void *)std::stringbuf::string_type buf = &v50;
      uint64_t v16 = sub_10000C858((uint64_t **)(a1 + 264), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      [(id)v16[5][2] unregister:v16[5][1] forNotification:9];
      int v17 = v50;
      if (v50 == *(_DWORD *)(a1 + 320))
      {
        *(void *)std::stringbuf::string_type buf = &v50;
        __int16 v18 = sub_10000C858((uint64_t **)(a1 + 264), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        [(id)v18[5][2] unregister:v18[5][1] forNotification:26];
        *(void *)std::stringbuf::string_type buf = &v50;
        uint64_t v19 = sub_10000C858((uint64_t **)(a1 + 264), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        [(id)v19[5][2] unregister:v19[5][1] forNotification:18];
        int v17 = v50;
      }

      if (v17 == *(_DWORD *)(a1 + 328))
      {
        *(void *)std::stringbuf::string_type buf = &v50;
        id v20 = sub_10000C858((uint64_t **)(a1 + 264), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        [(id)v20[5][2] unregister:v20[5][1] forNotification:20];
        *(void *)std::stringbuf::string_type buf = &v50;
        int v21 = sub_10000C858((uint64_t **)(a1 + 264), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        [(id)v21[5][2] unregister:v21[5][1] forNotification:21];
        uint64_t v22 = *(void *)(a1 + 304);
        if (v22) {
          sub_100AF2BAC(v22);
        }
      }

      *(void *)std::stringbuf::string_type buf = &v50;
      *((_BYTE *)sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 902) = 1;
      *(void *)std::stringbuf::string_type buf = &v50;
      *((_BYTE *)sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 903) = 0;
      *(void *)std::stringbuf::string_type buf = &v50;
      sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[113] = 0LL;
      *(void *)std::stringbuf::string_type buf = &v50;
      if (*((double *)sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 23) < 0.0)
      {
        uint64_t v23 = sub_10080E94C();
        *(_DWORD *)std::stringbuf::string_type buf = 0;
        double v24 = sub_10080EB58(v23, buf);
        *(void *)std::stringbuf::string_type buf = &v50;
        *(double *)((char *)sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 172) = v24;
        *(void *)std::stringbuf::string_type buf = &v50;
        sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[23] = 0LL;
        sub_100246564((uint64_t)buf);
        int v49 = 0;
        int v25 = (*(uint64_t (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, &v49, buf);
        else {
          int v26 = 0;
        }
        if (v26 == 1)
        {
          int v27 = v57;
          *(void *)float v51 = &v50;
          if (v27 == *((_DWORD *)sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, (_DWORD **)v51)
                      + 48))
          {
            *(double *)&v56[31] = v24;
            *(void *)&v56[37] = 0LL;
            *(_DWORD *)float v51 = 0;
            (*(void (**)(uint64_t, _BYTE *, _BYTE *))(*(void *)a1 + 136LL))(a1, v51, buf);
            *(_DWORD *)float v51 = 2;
            (*(void (**)(uint64_t, _BYTE *, _BYTE *))(*(void *)a1 + 136LL))(a1, v51, buf);
            *(_DWORD *)float v51 = 1;
            (*(void (**)(uint64_t, _BYTE *, _BYTE *))(*(void *)a1 + 136LL))(a1, v51, buf);
            *(_DWORD *)float v51 = 3;
            (*(void (**)(uint64_t, _BYTE *, _BYTE *))(*(void *)a1 + 136LL))(a1, v51, buf);
            *(_DWORD *)float v51 = 4;
            (*(void (**)(uint64_t, _BYTE *, _BYTE *))(*(void *)a1 + 136LL))(a1, v51, buf);
            *(_DWORD *)float v51 = 39;
            (*(void (**)(uint64_t, _BYTE *, _BYTE *))(*(void *)a1 + 136LL))(a1, v51, buf);
          }
        }

        uint64_t v28 = v62;
        if (v62)
        {
          p_shared_owners = (unint64_t *)&v62->__shared_owners_;
          do
            unint64_t v30 = __ldaxr(p_shared_owners);
          while (__stlxr(v30 - 1, p_shared_owners));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }

        if (v61 < 0) {
          operator delete(v60);
        }
        uint64_t v31 = v59;
        if (v59)
        {
          uint64_t v32 = (unint64_t *)&v59->__shared_owners_;
          do
            unint64_t v33 = __ldaxr(v32);
          while (__stlxr(v33 - 1, v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }

        uint64_t v34 = v58;
        if (v58)
        {
          uint64_t v35 = (unint64_t *)&v58->__shared_owners_;
          do
            unint64_t v36 = __ldaxr(v35);
          while (__stlxr(v36 - 1, v35));
          if (!v36)
          {
            ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
            std::__shared_weak_count::__release_weak(v34);
          }
        }
      }
    }
  }

  else
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v7 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "LocationController,#Warning,stopLocation when provider is None",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      *(_WORD *)float v51 = 0;
      id v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationController,#Warning,stopLocation when provider is None",  v51,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::stopLocationProvider(LocationProvider)",  "%s\n",  v8);
      if (v8 != buf) {
        free(v8);
      }
    }
  }

void sub_10042CBD8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

_BYTE *sub_10042CC1C()
{
  unsigned __int8 v0 = (_BYTE *)qword_101938040;
  if (!qword_101938040)
  {
    unsigned __int8 v0 = operator new(2uLL);
    *(_WORD *)unsigned __int8 v0 = 0;
    sub_1004F2598();
    *unsigned __int8 v0 = sub_1004F8A40();
    v0[1] = 0;
    qword_101938040 = (uint64_t)v0;
  }

  return v0;
}

void sub_10042CC6C(_Unwind_Exception *a1)
{
}

void sub_10042CC80(uint64_t a1, _BYTE *a2, char a3)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  id v6 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    int v7 = (char)*a2;
    int v8 = *(unsigned __int8 *)(a1 + 667);
    *(_DWORD *)std::stringbuf::string_type buf = 67240448;
    int v46 = v7;
    __int16 v47 = 1026;
    int v48 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Stopping all location providers that are worse than kDynamicLocationProvider %{public}d,KeepGpsOnWithAccessory,%{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v37 = (char)*a2;
    int v38 = *(unsigned __int8 *)(a1 + 667);
    int v41 = 67240448;
    int v42 = v37;
    __int16 v43 = 1026;
    int v44 = v38;
    uint64_t v39 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "Stopping all location providers that are worse than kDynamicLocationProvider %{public}d,KeepGpsOnWit hAccessory,%{public}d",  &v41,  14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::stopLessDesirableProviders(const DynamicLocationProvider &, BOOL)",  "%s\n",  v39);
  }

  int v9 = *(void **)(a1 + 240);
  if (v9 != (void *)(a1 + 248))
  {
    char v10 = 0;
    while (1)
    {
      if (*((_DWORD *)v9 + 8))
      {
        int v11 = *((char *)v9 + 901);
        int v12 = (char)*a2;
        BOOL v13 = v11 == -1 || *((_BYTE *)v9 + 903) == 0;
        if (!v13 && v11 < v12) {
          break;
        }
      }

void sub_10042D338(uint64_t a1, char *a2)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  double v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a2;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v21 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "lost location from kDynamicLocationProvider,%{public}d,restarting all worse providers",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v15 = *a2;
    int v18 = 67240192;
    int v19 = v15;
    int v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "lost location from kDynamicLocationProvider,%{public}d,restarting all worse providers",  &v18,  8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::restartLessDesirableProviders(const DynamicLocationProvider &)",  "%s\n",  v16);
  }

  id v6 = *(void **)(a1 + 240);
  if (v6 != (void *)(a1 + 248))
  {
    char v7 = 0;
    do
    {
      if (*((_DWORD *)v6 + 8)) {
        BOOL v8 = *((_BYTE *)v6 + 903) == 0;
      }
      else {
        BOOL v8 = 0;
      }
      if (v8 && *((char *)v6 + 901) < *a2)
      {
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        int v9 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          int v10 = *((char *)v6 + 901);
          *(_DWORD *)std::stringbuf::string_type buf = 67240192;
          int v21 = v10;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "restarting worse location provider kDynamicLocationProvider,%{public}d",  buf,  8u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          int v13 = *((char *)v6 + 901);
          int v18 = 67240192;
          int v19 = v13;
          LODWORD(v17) = 8;
          __int16 v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "restarting worse location provider kDynamicLocationProvider,%{public}d",  &v18,  v17);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::restartLessDesirableProviders(const DynamicLocationProvider &)",  "%s\n",  v14);
        }

        sub_10042B190(a1, *((_DWORD *)v6 + 8));
        char v7 = 1;
      }

      int v11 = (void *)v6[1];
      if (v11)
      {
        do
        {
          int v12 = v11;
          int v11 = (void *)*v11;
        }

        while (v11);
      }

      else
      {
        do
        {
          int v12 = (void *)v6[2];
          BOOL v8 = *v12 == (void)v6;
          id v6 = v12;
        }

        while (!v8);
      }

      id v6 = v12;
    }

    while (v12 != (void *)(a1 + 248));
    if ((v7 & 1) != 0) {
      sub_10042AFE8(a1);
    }
  }

void sub_10042D6DC(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = 1;
  v9[0] = 1;
  v9[1] = sub_100FE4D78(&v10);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = sub_100370E78();
  int v10 = 4;
  int v8 = v6;
  sub_10037BCF4(v7, (unsigned int *)&v10, (int32x4_t *)(a1 + 5044), v9, &v8, a2);
  sub_100245D90(a1, (uint64_t)a2, a3, 0xFFFFFFFFLL);
}

uint64_t sub_10042D76C(uint64_t a1, int a2)
{
  int v91 = a2;
  uint64_t v3 = (uint64_t **)(a1 + 248);
  uint64_t v2 = *(void *)(a1 + 248);
  if (!v2) {
    goto LABEL_11;
  }
  uint64_t v4 = a1;
  int v5 = (uint64_t ***)(a1 + 240);
  uint64_t v6 = a1 + 248;
  do
  {
    int v7 = *(_DWORD *)(v2 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v2;
    }
    else {
      int v9 = (uint64_t *)(v2 + 8);
    }
    if (!v8) {
      uint64_t v6 = v2;
    }
    uint64_t v2 = *v9;
  }

  while (*v9);
  if ((uint64_t **)v6 == v3 || *(_DWORD *)(v6 + 32) > a2)
  {
LABEL_11:
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v10 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "LocationController,notifyLocationUnavailable,could not find provider from list",  buf,  2u);
    }

    uint64_t v11 = 0LL;
    if (!sub_1002921D0(115, 0)) {
      return v11;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    *(_WORD *)__int128 v92 = 0;
    __int16 v64 = (_BYTE *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  17LL,  "LocationController,notifyLocationUnavailable,could not find provider from list",  v92,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLocationController::notifyLocationUnavailable(LocationProvider)",  "%s\n");
    goto LABEL_114;
  }

  if (!*(_BYTE *)(v6 + 903))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    char v61 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      __int16 v62 = (void *)(v6 + 48);
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      *(void *)&uint8_t buf[4] = v62;
      _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEBUG,  "LocationController,notifyLocationUnavailable,Got location unavailable notification for non-active provider,%{public}s,ignoring",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    id v63 = (void *)(v6 + 48);
    *(_DWORD *)__int128 v92 = 136446210;
    *(void *)&v92[4] = v63;
    uint64_t v60 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationController,notifyLocationUnavailable,Got location unavailable notification for non-active provider,% {public}s,ignoring",  v92,  12);
LABEL_90:
    __int16 v64 = (_BYTE *)v60;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::notifyLocationUnavailable(LocationProvider)",  "%s\n");
LABEL_114:
    if (v64 != buf) {
      free(v64);
    }
    return 0LL;
  }

  *(_BYTE *)(v6 + 902) = 1;
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  __int16 v14 = &OBJC_METACLASS___CLPrivacyManager.vtable;
  int v15 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v16 = (void *)(v6 + 48);
    *(_DWORD *)std::stringbuf::string_type buf = 136446210;
    *(void *)&uint8_t buf[4] = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "LocationController,notifyLocationUnavailable,Got location unavailable notification for location provider,%{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    __int128 v73 = (void *)(v6 + 48);
    *(_DWORD *)__int128 v92 = 136446210;
    *(void *)&v92[4] = v73;
    __int128 v74 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationController,notifyLocationUnavailable,Got location unavailable notification for location provider,%{public}s",  v92,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::notifyLocationUnavailable(LocationProvider)",  "%s\n",  v74);
    if (v74 != buf) {
      free(v74);
    }
  }

  if (*(_BYTE *)(v4 + 216)) {
    sub_10042D338(v4, (char *)(v6 + 901));
  }
  *(void *)std::stringbuf::string_type buf = &v91;
  if (*((double *)sub_10043B674(v3 - 1, &v91, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 23) < 0.0)
  {
    uint64_t v17 = sub_10080E94C();
    *(_DWORD *)std::stringbuf::string_type buf = 0;
    double v18 = sub_10080EB58(v17, buf);
    *(void *)std::stringbuf::string_type buf = &v91;
    double v19 = v18 - *(double *)((char *)sub_10043B674(v3 - 1, &v91, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 172);
    double v20 = 15.0;
    if (qword_101934830 != -1)
    {
      dispatch_once(&qword_101934830, &stru_101838C20);
      double v20 = 15.0;
    }

    double v21 = v19 + v20;
    uint64_t v22 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(void *)std::stringbuf::string_type buf = &v91;
      uint64_t v23 = sub_10043B674(v3 - 1, &v91, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      int v24 = v23 + 6;
      *(void *)std::stringbuf::string_type buf = &v91;
      int v25 = sub_10043B674(v3 - 1, &v91, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[23];
      *(_DWORD *)std::stringbuf::string_type buf = 136446722;
      *(void *)&uint8_t buf[4] = v24;
      *(_WORD *)&_BYTE buf[12] = 2050;
      *(void *)&buf[14] = v25;
      *(_WORD *)&buf[22] = 2050;
      *(double *)&_BYTE buf[24] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "LocationController,notifyLocationUnavailable,setting provider %{public}s location to expire,curr_lifespan,%{publ ic}.1lf,new_lifespan,%{public}.1lf",  buf,  0x20u);
      p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v75 = qword_101934838;
      *(void *)__int128 v92 = &v91;
      double v76 = sub_10043B674(v3 - 1, &v91, (uint64_t)&unk_1012CF090, (_DWORD **)v92);
      __int128 v77 = v76 + 6;
      *(void *)__int128 v92 = &v91;
      __int128 v78 = sub_10043B674(v3 - 1, &v91, (uint64_t)&unk_1012CF090, (_DWORD **)v92)[23];
      *(_DWORD *)__int128 v92 = 136446722;
      *(void *)&v92[4] = v77;
      *(_WORD *)&v92[12] = 2050;
      *(void *)&v92[14] = v78;
      *(_WORD *)&v92[22] = 2050;
      *(double *)&v92[24] = v21;
      LODWORD(v89) = 32;
      uint64_t v79 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v75,  2LL,  "LocationController,notifyLocationUnavailable,setting provider %{public}s location to expire,curr_l ifespan,%{public}.1lf,new_lifespan,%{public}.1lf",  v92,  v89);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::notifyLocationUnavailable(LocationProvider)",  "%s\n",  v79);
      if (v79 != buf) {
        free(v79);
      }
      p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
    }

    *(void *)std::stringbuf::string_type buf = &v91;
    *((double *)sub_10043B674(v3 - 1, &v91, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 23) = v21;
  }

  int v26 = *v5;
  if (*v5 != v3)
  {
    int v27 = 0;
    int v28 = 0;
    double v29 = 0.0;
    uint64_t v90 = v4;
    do
    {
      if (!*((_BYTE *)v26 + 902) && *((char *)v26 + 900) <= *(char *)(v4 + 161) && *(double *)((char *)v26 + 116) > 0.0)
      {
        unint64_t v30 = (os_log_s *)v14[263];
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
        {
          int v31 = v27;
          int v32 = v26 + 6;
          int v33 = v28;
          int v34 = v14;
          uint64_t v35 = *(uint64_t *)((char *)v26 + 100);
          uint64_t v36 = *(uint64_t *)((char *)v26 + 108);
          int v37 = v26[23];
          uint64_t v38 = sub_10080E94C();
          *(_DWORD *)std::stringbuf::string_type buf = 0;
          double v39 = sub_10080EB58(v38, buf) - *(double *)((char *)v26 + 172);
          uint64_t v40 = sub_10080E94C();
          double v41 = sub_10080EF30(v40);
          *(_DWORD *)std::stringbuf::string_type buf = 136447491;
          *(void *)&uint8_t buf[4] = v32;
          *(_WORD *)&_BYTE buf[12] = 2049;
          *(void *)&buf[14] = v35;
          *(_WORD *)&buf[22] = 2049;
          *(void *)&_BYTE buf[24] = v36;
          __int16 v100 = 2050;
          unint64_t v101 = v37;
          __int16 v102 = 2050;
          double v103 = v39;
          __int16 v104 = 2050;
          double v105 = v41;
          _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "LocationController,notifyLocationUnavailable,provider,%{public}s,still available,lat,%{private}.7lf,lon,%{pr ivate}.7lf,lifespan,%{public}.1lf,age,%{public}.3fs,propagation_us,%{public}.3f",  buf,  0x3Eu);
          __int16 v14 = v34;
          p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
          int v27 = v31;
          int v28 = v33;
          uint64_t v4 = v90;
        }

        if (sub_1002921D0(115, 2))
        {
          int v47 = v28;
          int v48 = v27;
          bzero(buf, 0x65CuLL);
          uint64_t v49 = qword_101934838;
          int v50 = v26 + 6;
          uint64_t v51 = *(uint64_t *)((char *)v26 + 100);
          uint64_t v52 = *(uint64_t *)((char *)v26 + 108);
          double v53 = v26[23];
          double v54 = sub_10037FE24() - *(double *)((char *)v26 + 172);
          uint64_t v55 = sub_10080E94C();
          double v56 = sub_10080EF30(v55);
          *(_DWORD *)__int128 v92 = 136447491;
          *(void *)&v92[4] = v50;
          *(_WORD *)&v92[12] = 2049;
          *(void *)&v92[14] = v51;
          *(_WORD *)&v92[22] = 2049;
          *(void *)&v92[24] = v52;
          __int16 v93 = 2050;
          __int128 v94 = v53;
          __int16 v95 = 2050;
          double v96 = v54;
          __int16 v97 = 2050;
          double v98 = v56;
          LODWORD(v89) = 62;
          int v57 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v49,  2LL,  "LocationController,notifyLocationUnavailable,provider,%{public}s,still available,lat,%{private }.7lf,lon,%{private}.7lf,lifespan,%{public}.1lf,age,%{public}.3fs,propagation_us,%{public}.3f",  v92,  v89);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::notifyLocationUnavailable(LocationProvider)",  "%s\n",  v57);
          if (v57 != buf) {
            free(v57);
          }
          __int16 v14 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
          p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
          int v27 = v48;
          int v28 = v47;
        }

        ++v27;
        double v42 = *((double *)v26 + 23);
        if (v29 < v42) {
          double v43 = *((double *)v26 + 23);
        }
        else {
          double v43 = v29;
        }
        if (v42 >= 0.0) {
          double v29 = v43;
        }
        else {
          int v28 = 1;
        }
      }

      int v44 = v26[1];
      if (v44)
      {
        do
        {
          __int128 v45 = (uint64_t **)v44;
          int v44 = (uint64_t *)*v44;
        }

        while (v44);
      }

      else
      {
        do
        {
          __int128 v45 = (uint64_t **)v26[2];
          BOOL v46 = *v45 == (uint64_t *)v26;
          int v26 = v45;
        }

        while (!v46);
      }

      int v26 = v45;
    }

    while (v45 != v3);
    if (!((v27 == 0) | v28 & 1))
    {
      __int16 v69 = (os_log_s *)v14[263];
      if (os_log_type_enabled(v69, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::stringbuf::string_type buf = 67240704;
        *(_DWORD *)&uint8_t buf[4] = v27;
        *(_WORD *)&uint8_t buf[8] = 2050;
        *(double *)&buf[10] = v29;
        *(_WORD *)&buf[18] = 2050;
        *(void *)&buf[20] = 0x402E000000000000LL;
        _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_INFO,  "LocationController,notifyLocationUnavailable,location available from %{public}d providers,setting location una vailable timer next delay to %{public}.1f plus deadline %{public}.1f sec",  buf,  0x1Cu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        double v80 = v14[263];
        *(_DWORD *)__int128 v92 = 67240704;
        *(_DWORD *)&v92[4] = v27;
        *(_WORD *)&v92[8] = 2050;
        *(double *)&v92[10] = v29;
        *(_WORD *)&v92[18] = 2050;
        *(void *)&v92[20] = 0x402E000000000000LL;
        LODWORD(v89) = 28;
        unint64_t v81 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v80,  1LL,  "LocationController,notifyLocationUnavailable,location available from %{public}d providers,settin g location unavailable timer next delay to %{public}.1f plus deadline %{public}.1f sec",  v92,  v89);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::notifyLocationUnavailable(LocationProvider)",  "%s\n",  v81);
        if (v81 != buf) {
          free(v81);
        }
      }

      [*(id *)(v4 + 648) setNextFireDelay:v29 + 15.0];
      return 0LL;
    }

    if (v27)
    {
      int v58 = (os_log_s *)v14[263];
      if (os_log_type_enabled(v58, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEBUG,  "LocationController,notifyLocationUnavailable,Infinite lifespan location available; not starting location unavailable timer",
          buf,
          2u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      int v59 = v14[263];
      *(_WORD *)__int128 v92 = 0;
      LODWORD(v89) = 2;
      uint64_t v60 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v59,  2LL,  "LocationController,notifyLocationUnavailable,Infinite lifespan location available; not starting location u"
              "navailable timer",
              v92,
              v89);
      goto LABEL_90;
    }
  }

  int v65 = p_vtable[262];
  if (*(char *)(v4 + 161) <= 0)
  {
    __int128 v70 = (os_log_s *)v14[263];
    if (os_log_type_enabled(v70, OS_LOG_TYPE_INFO))
    {
      int v71 = *(char *)(v4 + 160);
      int v72 = *(char *)(v4 + 161);
      *(_DWORD *)std::stringbuf::string_type buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v71;
      *(_WORD *)&uint8_t buf[8] = 1026;
      *(_DWORD *)&buf[10] = v72;
      _os_log_impl( (void *)&_mh_execute_header,  v70,  OS_LOG_TYPE_INFO,  "LocationController,notifyLocationUnavailable,Required granularity,%{public}d,not achievable with active granular ity,%{public}d,starting fine",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      uint64_t v85 = v14[263];
      int v86 = *(char *)(v4 + 160);
      int v87 = *(char *)(v4 + 161);
      *(_DWORD *)__int128 v92 = 67240448;
      *(_DWORD *)&v92[4] = v86;
      *(_WORD *)&v92[8] = 1026;
      *(_DWORD *)&v92[10] = v87;
      LODWORD(v89) = 14;
      __int128 v88 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v85,  1LL,  "LocationController,notifyLocationUnavailable,Required granularity,%{public}d,not achievable with a ctive granularity,%{public}d,starting fine",  v92,  v89);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::notifyLocationUnavailable(LocationProvider)",  "%s\n",  v88);
      if (v88 != buf) {
        free(v88);
      }
    }

    buf[0] = 1;
    sub_100425280(v4, buf);
    return 0LL;
  }

  double v66 = (os_log_s *)v14[263];
  if (os_log_type_enabled(v66, OS_LOG_TYPE_INFO))
  {
    uint64_t v67 = sub_10080E94C();
    *(_DWORD *)std::stringbuf::string_type buf = 1;
    double v68 = sub_10080EB58(v67, buf);
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    *(double *)&uint8_t buf[4] = v68;
    _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_INFO,  "LocationController,notifyLocationUnavailable,No location is available from any provider,notifying clients of locat ion unavailable,now,%{public}.3f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    int v82 = v14[263];
    double v83 = sub_1003713F0();
    *(_DWORD *)__int128 v92 = 134349056;
    *(double *)&v92[4] = v83;
    LODWORD(v89) = 12;
    int v84 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v82,  1LL,  "LocationController,notifyLocationUnavailable,No location is available from any provider,notifying cl ients of location unavailable,now,%{public}.3f",  v92,  v89);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::notifyLocationUnavailable(LocationProvider)",  "%s\n",  v84);
    if (v84 != buf) {
      free(v84);
    }
  }

  [*(id *)(v4 + 648) setNextFireDelay:1.79769313e308];
  *(_DWORD *)std::stringbuf::string_type buf = 9;
  uint64_t v11 = 1LL;
  sub_10042D6DC(v4, (int *)buf, 1LL);
  return v11;
}

uint64_t sub_10042E784(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if (*(_DWORD *)(a1 + 232) != 1) {
    return 0LL;
  }
  LODWORD(v4) = *(_DWORD *)sub_100F4CD8C();
  LODWORD(v5) = *((_DWORD *)sub_100F4CD8C() + 1);
  double v9 = *(double *)(a3 + 172);
  uint64_t v10 = sub_10080E94C();
  *(_DWORD *)std::stringbuf::string_type buf = 1;
  double v11 = sub_10080EB58(v10, buf) - *(double *)(a2 + 904);
  if (v11 <= 0.0) {
    return 0LL;
  }
  double v12 = (double)v4;
  double v13 = (double)v5;
  double v14 = vabdd_f64(a4, v9);
  double v15 = *(double *)(a3 + 116);
  double v16 = *(double *)(a2 + 116);
  BOOL v17 = v11 < v12 && v14 < v13;
  if (!v17 || v15 >= v16) {
    return 0LL;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  double v20 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v21 = sub_10080E94C();
    double v22 = sub_10080EF30(v21);
    *(_DWORD *)std::stringbuf::string_type buf = 134350592;
    double v41 = v11;
    __int16 v42 = 2050;
    double v43 = v12;
    __int16 v44 = 2050;
    double v45 = v14;
    __int16 v46 = 2050;
    double v47 = v13;
    __int16 v48 = 2050;
    double v49 = v16;
    __int16 v50 = 2050;
    double v51 = v15;
    __int16 v52 = 2050;
    double v53 = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Ignored: GPS warmup,runtime,%{public}.1fs,thresh,%{public}.1fs,age,%{public}.1fs,thresh,%{public}.1fs,gacc,%{publi c}.1fm,wacc,%{public}fm,propagation_us,%{public}.3f",  buf,  0x48u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v23 = qword_101934838;
    uint64_t v24 = sub_10080E94C();
    int v26 = 134350592;
    double v27 = v11;
    __int16 v28 = 2050;
    double v29 = v12;
    __int16 v30 = 2050;
    double v31 = v14;
    __int16 v32 = 2050;
    double v33 = v13;
    __int16 v34 = 2050;
    double v35 = v16;
    __int16 v36 = 2050;
    double v37 = v15;
    __int16 v38 = 2050;
    double v39 = sub_10080EF30(v24);
    int v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v23,  0LL,  "Ignored: GPS warmup,runtime,%{public}.1fs,thresh,%{public}.1fs,age,%{public}.1fs,thresh,%{public}.1f s,gacc,%{public}.1fm,wacc,%{public}fm,propagation_us,%{public}.3f",  &v26,  72);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldUseWifiWhileGpsConverging(const CFAbsoluteTime, const ProvidersMap::iterator, con st ProvidersMap::iterator) const",  "%s\n",  v25);
  }

  return 1LL;
}

uint64_t sub_10042EA48(uint64_t a1, int a2, uint64_t a3, double a4)
{
  int v262 = a2;
  if (!a2)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    double v33 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "LocationController,#Warning, not notifying clients when provider is None",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    *(_WORD *)int v263 = 0;
    __int16 v28 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationController,#Warning, not notifying clients when provider is None",  v263,  2);
    goto LABEL_294;
  }

  uint64_t v9 = a1 + 248;
  uint64_t v8 = *(void *)(a1 + 248);
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v10 = a1 + 248;
  uint64_t v11 = *(void *)(a1 + 248);
  do
  {
    int v12 = *(_DWORD *)(v11 + 32);
    BOOL v13 = v12 < a2;
    if (v12 >= a2) {
      double v14 = (uint64_t *)v11;
    }
    else {
      double v14 = (uint64_t *)(v11 + 8);
    }
    if (!v13) {
      uint64_t v10 = v11;
    }
    uint64_t v11 = *v14;
  }

  while (*v14);
  if (v10 == v9 || *(_DWORD *)(v10 + 32) > a2) {
LABEL_12:
  }
    uint64_t v10 = a1 + 248;
  double v15 = (int *)(a1 + 232);
  if (!v8) {
    goto LABEL_23;
  }
  int v16 = *v15;
  uint64_t v17 = a1 + 248;
  uint64_t v18 = *(void *)(a1 + 248);
  do
  {
    int v19 = *(_DWORD *)(v18 + 32);
    BOOL v20 = v19 < v16;
    if (v19 >= v16) {
      uint64_t v21 = (uint64_t *)v18;
    }
    else {
      uint64_t v21 = (uint64_t *)(v18 + 8);
    }
    if (!v20) {
      uint64_t v17 = v18;
    }
    uint64_t v18 = *v21;
  }

  while (*v21);
  if (v17 == v9 || v16 < *(_DWORD *)(v17 + 32)) {
LABEL_23:
  }
    uint64_t v17 = a1 + 248;
  if (!v8) {
    goto LABEL_34;
  }
  int v22 = *(_DWORD *)(a1 + 236);
  uint64_t v23 = a1 + 248;
  do
  {
    int v24 = *(_DWORD *)(v8 + 32);
    BOOL v25 = v24 < v22;
    if (v24 >= v22) {
      int v26 = (uint64_t *)v8;
    }
    else {
      int v26 = (uint64_t *)(v8 + 8);
    }
    if (!v25) {
      uint64_t v23 = v8;
    }
    uint64_t v8 = *v26;
  }

  while (*v26);
  if (v23 == v9 || v22 < *(_DWORD *)(v23 + 32)) {
LABEL_34:
  }
    uint64_t v23 = a1 + 248;
  if (objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLDaemonStatus"),  "syncgetIsSleeping")
    && !*(_BYTE *)(v10 + 903))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    double v45 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "LocationController,#Warning, not notifying clients when device is sleeping",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    *(_WORD *)int v263 = 0;
    __int16 v28 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationController,#Warning, not notifying clients when device is sleeping",  v263,  2);
    goto LABEL_294;
  }

  if (a2 == 4 && sub_10042E784(a1, v10, v17, a4))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    double v27 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "LocationController,#Warning, not notifying clients in WiFi to GPS transition",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    *(_WORD *)int v263 = 0;
    __int16 v28 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationController,#Warning, not notifying clients in WiFi to GPS transition",  v263,  2);
LABEL_294:
    uint64_t v148 = (char *)v28;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v28);
    if (v148 == buf) {
      return 0LL;
    }
LABEL_295:
    free(v148);
    return 0LL;
  }

  v260 = (uint64_t **)(v9 - 8);
  double v29 = *(double *)(a1 + 672);
  double v30 = sub_100431358(v10 + 96, v29);
  double v31 = sub_100431358(v23 + 96, v29);
  uint64_t v255 = v17 + 96;
  double v32 = sub_100431358(v17 + 96, v29);
  BOOL v259 = *(_DWORD *)(a1 + 328) == a2 && *(_DWORD *)(v10 + 228) == 2;
  if (*v15 && *v15 != a2 && !*(_BYTE *)(v10 + 903))
  {
    int v34 = *(char *)(v10 + 900);
    if (v34 <= *(char *)(v17 + 900) && a4 - *(double *)(v17 + 172) < *(double *)(v17 + 184))
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      double v35 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v36 = *(void *)(v10 + 100);
        double v37 = *(const char **)(v10 + 108);
        *(void *)std::stringbuf::string_type buf = &v262;
        __int16 v38 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        double v39 = v38 + 6;
        *(_DWORD *)std::stringbuf::string_type buf = 134284035;
        *(void *)&uint8_t buf[4] = v36;
        *(_WORD *)&_BYTE buf[12] = 2049;
        std::string v284 = v37;
        __int16 v285 = 2082;
        v286 = v39;
        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "Got,lat,%{private}.7f,lon,%{private}.7f,for non-active location provider,%{public}s,ignoring",  buf,  0x20u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v40 = qword_101934838;
      uint64_t v41 = *(void *)(v10 + 100);
      __int16 v42 = *(const char **)(v10 + 108);
      *(void *)int v263 = &v262;
      double v43 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
      __int16 v44 = v43 + 6;
LABEL_232:
      *(_DWORD *)int v263 = 134284035;
      *(void *)&v263[4] = v41;
      *(_WORD *)&v263[12] = 2049;
      v264 = v42;
      __int16 v265 = 2082;
      v266 = v44;
      uint64_t v148 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v40,  2LL,  "Got,lat,%{private}.7f,lon,%{private}.7f,for non-active location provider,%{public}s,ignoring",  v263,  32);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v148);
      if (v148 == buf) {
        return 0LL;
      }
      goto LABEL_295;
    }

    if (v34 <= 0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v142 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v143 = *(void *)(v10 + 100);
        uint64_t v144 = *(const char **)(v10 + 108);
        *(void *)std::stringbuf::string_type buf = &v262;
        uint64_t v145 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        uint64_t v146 = v145 + 6;
        *(_DWORD *)std::stringbuf::string_type buf = 134284035;
        *(void *)&uint8_t buf[4] = v143;
        *(_WORD *)&_BYTE buf[12] = 2049;
        std::string v284 = v144;
        __int16 v285 = 2082;
        v286 = v146;
        _os_log_impl( (void *)&_mh_execute_header,  v142,  OS_LOG_TYPE_DEBUG,  "Got,lat,%{private}.7f,lon,%{private}.7f,for non-active location provider,%{public}s,ignoring",  buf,  0x20u);
      }

      if (!sub_1002921D0(115, 2)) {
        return 0LL;
      }
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v40 = qword_101934838;
      uint64_t v41 = *(void *)(v10 + 100);
      __int16 v42 = *(const char **)(v10 + 108);
      *(void *)int v263 = &v262;
      uint64_t v147 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
      __int16 v44 = v147 + 6;
      goto LABEL_232;
    }
  }

  uint64_t v256 = v10 + 96;
  uint64_t v258 = a3;
  BOOL v261 = (int *)(a1 + 236);
  double v48 = *(double *)(v10 + 172);
  if (a4 - v48 < 0.0)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    double v49 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v50 = *(void *)(v10 + 100);
      double v51 = *(const char **)(v10 + 108);
      *(void *)std::stringbuf::string_type buf = &v262;
      __int16 v52 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      double v53 = v52 + 6;
      double v54 = a4 - *(double *)(v10 + 172);
      *(_DWORD *)std::stringbuf::string_type buf = 134284547;
      *(void *)&uint8_t buf[4] = v50;
      *(_WORD *)&_BYTE buf[12] = 2049;
      std::string v284 = v51;
      __int16 v285 = 2082;
      v286 = v53;
      __int16 v287 = 2050;
      double v288 = v54;
      __int16 v289 = 2050;
      *(double *)v290 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning,Got future,lat,%{private}.7f,lon,%{private}.7f,from provider,%{public}s,age,%{public }.3fs,correcting to,%{public}.3fs",  buf,  0x34u);
      double v15 = (int *)(a1 + 232);
      a3 = v258;
    }

    if (sub_1002921D0(115, 2))
    {
      v253 = v15;
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v184 = qword_101934838;
      uint64_t v185 = *(void *)(v10 + 100);
      v186 = *(const char **)(v10 + 108);
      *(void *)int v263 = &v262;
      uint64_t v187 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
      id v188 = v187 + 6;
      double v189 = a4 - *(double *)(v10 + 172);
      *(_DWORD *)int v263 = 134284547;
      *(void *)&v263[4] = v185;
      *(_WORD *)&v263[12] = 2049;
      v264 = v186;
      __int16 v265 = 2082;
      v266 = v188;
      __int16 v267 = 2050;
      double v268 = v189;
      __int16 v269 = 2050;
      *(double *)v270 = a4;
      uint64_t v190 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v184,  0LL,  "LocationController,#Warning,Got future,lat,%{private}.7f,lon,%{private}.7f,from provider,%{public }s,age,%{public}.3fs,correcting to,%{public}.3fs",  v263,  52);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v190);
      if (v190 != buf) {
        free(v190);
      }
      double v15 = v253;
      a3 = v258;
    }

    *(double *)(v10 + 172) = a4;
    double v48 = a4;
  }

  double v55 = *(double *)(v10 + 184);
  if (v55 >= 0.0 && vabdd_f64(a4, v48) > v55)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    double v56 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(void *)std::stringbuf::string_type buf = &v262;
      int v57 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      int v58 = v57 + 6;
      int v59 = *(const char **)(v10 + 100);
      uint64_t v60 = *(void **)(v10 + 108);
      double v61 = a4 - *(double *)(v10 + 172);
      uint64_t v62 = *(void *)(v10 + 184);
      *(_DWORD *)std::stringbuf::string_type buf = 136447235;
      *(void *)&uint8_t buf[4] = v58;
      *(_WORD *)&_BYTE buf[12] = 2049;
      std::string v284 = v59;
      __int16 v285 = 2049;
      v286 = v60;
      __int16 v287 = 2050;
      double v288 = v61;
      __int16 v289 = 2050;
      *(void *)v290 = v62;
      _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEBUG,  "expiredLocation,provider,%{public}s,lat,%{private}.7lf,lon,%{private}.7lf,age,%{public}.3fs,lifespan,%{public}.1 fs,(not throwing away)",  buf,  0x34u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v200 = qword_101934838;
      *(void *)int v263 = &v262;
      uint64_t v201 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
      int v202 = v201 + 6;
      int v203 = *(const char **)(v10 + 100);
      v204 = *(void **)(v10 + 108);
      double v205 = a4 - *(double *)(v10 + 172);
      uint64_t v206 = *(void *)(v10 + 184);
      *(_DWORD *)int v263 = 136447235;
      *(void *)&v263[4] = v202;
      *(_WORD *)&v263[12] = 2049;
      v264 = v203;
      __int16 v265 = 2049;
      v266 = v204;
      __int16 v267 = 2050;
      double v268 = v205;
      __int16 v269 = 2050;
      *(void *)v270 = v206;
      LODWORD(v252) = 52;
      v207 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v200,  2LL,  "expiredLocation,provider,%{public}s,lat,%{private}.7lf,lon,%{private}.7lf,age,%{public}.3fs,lifes pan,%{public}.1fs,(not throwing away)",  v263,  v252);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v207);
      if (v207 != buf) {
        free(v207);
      }
      a3 = v258;
    }
  }

  if (*(_BYTE *)(v10 + 903))
  {
    id v63 = (_DWORD *)(a1 + 236);
    if (!*v261
      || *v261 != v262 && *(_DWORD *)(v23 + 180) <= *(_DWORD *)(v10 + 180)
      || (double v64 = *(double *)(v23 + 184), v64 >= 0.0) && v64 + *(double *)(v23 + 172) < a4)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      int v65 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
      {
        *(void *)std::stringbuf::string_type buf = &v262;
        double v66 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        uint64_t v67 = v66 + 6;
        int v68 = *(_DWORD *)(a3 + 84);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        *(void *)&uint8_t buf[4] = v67;
        *(_WORD *)&_BYTE buf[12] = 1026;
        LODWORD(v284) = v68;
        _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEBUG,  "current most confident provider,%{public}s,conf,%{public}d",  buf,  0x12u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        uint64_t v191 = qword_101934838;
        *(void *)int v263 = &v262;
        v192 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
        unint64_t v193 = v192 + 6;
        int v194 = *(_DWORD *)(v258 + 84);
        *(_DWORD *)int v263 = 136446466;
        *(void *)&v263[4] = v193;
        *(_WORD *)&v263[12] = 1026;
        LODWORD(v264) = v194;
        LODWORD(v252) = 18;
        uint64_t v195 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v191,  2LL,  "current most confident provider,%{public}s,conf,%{public}d",  v263,  v252);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v195);
        if (v195 != buf) {
          free(v195);
        }
        id v63 = (_DWORD *)(a1 + 236);
      }

      *id v63 = v262;
      uint64_t v23 = v10;
    }
  }

  else
  {
    id v63 = (_DWORD *)(a1 + 236);
  }

  if (!*v15) {
    goto LABEL_155;
  }
  int v69 = *(_DWORD *)(a1 + 328);
  BOOL v70 = v259;
  if (v262 != v69) {
    BOOL v70 = 0;
  }
  if (v70) {
    goto LABEL_155;
  }
  if (v262 != *v15)
  {
    double v71 = *(double *)(v17 + 184);
    if (v71 < 0.0 || a4 - *(double *)(v17 + 172) <= v71)
    {
      if (*(_DWORD *)(v10 + 180) <= *(_DWORD *)(v17 + 180))
      {
        sub_100D2DCA4((double *)(a1 + 120), v256, v255);
        double v118 = v117;
        if (v30 >= v32)
        {
          int v87 = v15;
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          uint64_t v151 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
          {
            *(void *)std::stringbuf::string_type buf = &v262;
            char v152 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
            std::string v153 = v152 + 6;
            uint64_t v154 = *(const char **)(v10 + 100);
            uint64_t v155 = *(void **)(v10 + 108);
            int v156 = *(_DWORD *)(v10 + 180);
            *(void *)std::stringbuf::string_type buf = v87;
            __int128 v157 = sub_10043B674(v260, v87, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
            __int128 v158 = v157 + 6;
            uint64_t v159 = *(void *)(v17 + 100);
            uint64_t v160 = *(void *)(v17 + 108);
            int v161 = *(_DWORD *)(v17 + 180);
            *(_DWORD *)std::stringbuf::string_type buf = 136317699;
            *(void *)&uint8_t buf[4] = v153;
            *(_WORD *)&_BYTE buf[12] = 2049;
            std::string v284 = v154;
            __int16 v285 = 2049;
            v286 = v155;
            __int16 v287 = 2050;
            double v288 = v30;
            __int16 v289 = 1026;
            *(_DWORD *)v290 = v156;
            *(_WORD *)&v290[4] = 2082;
            *(void *)&v290[6] = v158;
            __int16 v291 = 2049;
            uint64_t v292 = v159;
            __int16 v293 = 2049;
            uint64_t v294 = v160;
            __int16 v295 = 2050;
            double v296 = v32;
            __int16 v297 = 1026;
            int v298 = v161;
            __int16 v299 = 2050;
            double v300 = v118;
            _os_log_impl( (void *)&_mh_execute_header,  v151,  OS_LOG_TYPE_DEBUG,  "new,%s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{public}d,coarser than current,%{publ ic}s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{public}d,distance,%{public}.2f,discarding",  buf,  0x68u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_275;
          }
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          uint64_t v162 = qword_101934838;
          *(void *)int v263 = &v262;
          __int128 v163 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
          __int128 v164 = v163 + 6;
          __int128 v165 = *(const char **)(v10 + 100);
          __int128 v166 = *(void **)(v10 + 108);
          int v167 = *(_DWORD *)(v10 + 180);
          *(void *)int v263 = v87;
          __int128 v168 = sub_10043B674(v260, v87, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
          __int128 v169 = v168 + 6;
          uint64_t v170 = *(void *)(v17 + 100);
          uint64_t v171 = *(void *)(v17 + 108);
          int v172 = *(_DWORD *)(v17 + 180);
          *(_DWORD *)int v263 = 136317699;
          *(void *)&v263[4] = v164;
          *(_WORD *)&v263[12] = 2049;
          v264 = v165;
          __int16 v265 = 2049;
          v266 = v166;
          __int16 v267 = 2050;
          double v268 = v30;
          __int16 v269 = 1026;
          *(_DWORD *)v270 = v167;
          *(_WORD *)&v270[4] = 2082;
          *(void *)&v270[6] = v169;
          __int16 v271 = 2049;
          uint64_t v272 = v170;
          __int16 v273 = 2049;
          uint64_t v274 = v171;
          __int16 v275 = 2050;
          double v276 = v32;
          __int16 v277 = 1026;
          int v278 = v172;
          __int16 v279 = 2050;
          double v280 = v118;
          LODWORD(v252) = 104;
          BOOL v141 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v162,  2LL,  "new,%s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{public}d,coarser than current,%{public}s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{ public}d,distance,%{public}.2f,discarding",  v263,  v252);
        }

        else
        {
          uint64_t v46 = 1LL;
          if (v117 < 5000.0 || v117 < v32 * 4.0) {
            goto LABEL_156;
          }
          int v87 = v15;
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          __int128 v119 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
          {
            *(void *)std::stringbuf::string_type buf = &v262;
            __int128 v120 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
            uint64_t v121 = v120 + 6;
            __int128 v122 = *(const char **)(v10 + 100);
            __int128 v123 = *(void **)(v10 + 108);
            int v124 = *(_DWORD *)(v10 + 180);
            *(void *)std::stringbuf::string_type buf = v87;
            int v125 = sub_10043B674(v260, v87, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
            unint64_t v126 = v125 + 6;
            uint64_t v127 = *(void *)(v17 + 100);
            uint64_t v128 = *(void *)(v17 + 108);
            int v129 = *(_DWORD *)(v17 + 180);
            *(_DWORD *)std::stringbuf::string_type buf = 136317699;
            *(void *)&uint8_t buf[4] = v121;
            *(_WORD *)&_BYTE buf[12] = 2049;
            std::string v284 = v122;
            __int16 v285 = 2049;
            v286 = v123;
            __int16 v287 = 2050;
            double v288 = v30;
            __int16 v289 = 1026;
            *(_DWORD *)v290 = v124;
            *(_WORD *)&v290[4] = 2082;
            *(void *)&v290[6] = v126;
            __int16 v291 = 2049;
            uint64_t v292 = v127;
            __int16 v293 = 2049;
            uint64_t v294 = v128;
            __int16 v295 = 2050;
            double v296 = v32;
            __int16 v297 = 1026;
            int v298 = v129;
            __int16 v299 = 2050;
            double v300 = v118;
            _os_log_impl( (void *)&_mh_execute_header,  v119,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning,new,%s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{public}d ,conflicts with current,%{public}s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{public}d ,distance,%{public}.2f,discarding",  buf,  0x68u);
          }

          if (!sub_1002921D0(115, 2)) {
            goto LABEL_275;
          }
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          uint64_t v130 = qword_101934838;
          *(void *)int v263 = &v262;
          int v131 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
          uint64_t v132 = v131 + 6;
          uint64_t v133 = *(const char **)(v10 + 100);
          uint64_t v134 = *(void **)(v10 + 108);
          int v135 = *(_DWORD *)(v10 + 180);
          *(void *)int v263 = v87;
          char v136 = sub_10043B674(v260, v87, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
          uint64_t v137 = v136 + 6;
          uint64_t v138 = *(void *)(v17 + 100);
          uint64_t v139 = *(void *)(v17 + 108);
          int v140 = *(_DWORD *)(v17 + 180);
          *(_DWORD *)int v263 = 136317699;
          *(void *)&v263[4] = v132;
          *(_WORD *)&v263[12] = 2049;
          v264 = v133;
          __int16 v265 = 2049;
          v266 = v134;
          __int16 v267 = 2050;
          double v268 = v30;
          __int16 v269 = 1026;
          *(_DWORD *)v270 = v135;
          *(_WORD *)&v270[4] = 2082;
          *(void *)&v270[6] = v137;
          __int16 v271 = 2049;
          uint64_t v272 = v138;
          __int16 v273 = 2049;
          uint64_t v274 = v139;
          __int16 v275 = 2050;
          double v276 = v32;
          __int16 v277 = 1026;
          int v278 = v140;
          __int16 v279 = 2050;
          double v280 = v118;
          LODWORD(v252) = 104;
          BOOL v141 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v130,  0LL,  "LocationController,#Warning,new,%s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public} .2f,conf,%{public}d,conflicts with current,%{public}s,lat,%{private}.7lf,lon,%{private} .7lf,hunc,%{public}.2f,conf,%{public}d,distance,%{public}.2f,discarding",  v263,  v252);
        }
      }

      else
      {
        if (v262 == v69) {
          goto LABEL_155;
        }
        sub_100D2DCA4((double *)(a1 + 120), v256, v255);
        if (v30 <= v32) {
          goto LABEL_155;
        }
        double v86 = v85;
        if (v85 > 5000.0 && v85 > v30 * 4.0 && *(_DWORD *)(v10 + 180) - *(_DWORD *)(v17 + 180) >= 5)
        {
          int v87 = v15;
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          __int128 v88 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
          {
            *(void *)std::stringbuf::string_type buf = &v262;
            uint64_t v89 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
            uint64_t v90 = v89 + 6;
            int v91 = *(const char **)(v10 + 100);
            __int128 v92 = *(void **)(v10 + 108);
            int v93 = *(_DWORD *)(v10 + 180);
            *(void *)std::stringbuf::string_type buf = v87;
            __int128 v94 = sub_10043B674(v260, v87, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
            __int16 v95 = v94 + 6;
            uint64_t v96 = *(void *)(v17 + 100);
            uint64_t v97 = *(void *)(v17 + 108);
            int v98 = *(_DWORD *)(v17 + 180);
            *(_DWORD *)std::stringbuf::string_type buf = 136448771;
            *(void *)&uint8_t buf[4] = v90;
            *(_WORD *)&_BYTE buf[12] = 2049;
            std::string v284 = v91;
            __int16 v285 = 2049;
            v286 = v92;
            __int16 v287 = 2050;
            double v288 = v30;
            __int16 v289 = 1026;
            *(_DWORD *)v290 = v93;
            *(_WORD *)&v290[4] = 2082;
            *(void *)&v290[6] = v95;
            __int16 v291 = 2049;
            uint64_t v292 = v96;
            __int16 v293 = 2049;
            uint64_t v294 = v97;
            __int16 v295 = 2050;
            double v296 = v32;
            __int16 v297 = 1026;
            int v298 = v98;
            __int16 v299 = 2050;
            double v300 = v86;
            _os_log_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning,new,%{public}s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{ public}d,conflicts with current,%{public}s lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{ public}d,distance,%{public}.2f,notifying",  buf,  0x68u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101838C20);
            }
            uint64_t v240 = qword_101934838;
            *(void *)int v263 = &v262;
            uint64_t v241 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
            v242 = v241 + 6;
            v243 = *(const char **)(v10 + 100);
            v244 = *(void **)(v10 + 108);
            int v245 = *(_DWORD *)(v10 + 180);
            *(void *)int v263 = v87;
            int v246 = sub_10043B674(v260, v87, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
            double v247 = v246 + 6;
            uint64_t v248 = *(void *)(v17 + 100);
            uint64_t v249 = *(void *)(v17 + 108);
            int v250 = *(_DWORD *)(v17 + 180);
            *(_DWORD *)int v263 = 136448771;
            *(void *)&v263[4] = v242;
            *(_WORD *)&v263[12] = 2049;
            v264 = v243;
            __int16 v265 = 2049;
            v266 = v244;
            __int16 v267 = 2050;
            double v268 = v30;
            __int16 v269 = 1026;
            *(_DWORD *)v270 = v245;
            *(_WORD *)&v270[4] = 2082;
            *(void *)&v270[6] = v247;
            __int16 v271 = 2049;
            uint64_t v272 = v248;
            __int16 v273 = 2049;
            uint64_t v274 = v249;
            __int16 v275 = 2050;
            double v276 = v32;
            __int16 v277 = 1026;
            int v278 = v250;
            __int16 v279 = 2050;
            double v280 = v86;
            LODWORD(v252) = 104;
            v251 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v240,  0LL,  "LocationController,#Warning,new,%{public}s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{pub lic}.2f,conf,%{public}d,conflicts with current,%{public}s lat,%{private}.7lf,lon,%{private} .7lf,hunc,%{public}.2f,conf,%{public}d,distance,%{public}.2f,notifying",  v263,  v252);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::N otificationData &)",  "%s\n",  v251);
            if (v251 != buf) {
              free(v251);
            }
          }

          uint64_t v46 = 1LL;
          goto LABEL_276;
        }

        int v87 = v15;
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        __int128 v173 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          *(void *)std::stringbuf::string_type buf = &v262;
          __int128 v174 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
          __int128 v175 = v174 + 6;
          __int128 v176 = *(const char **)(v10 + 100);
          __int128 v177 = *(void **)(v10 + 108);
          int v178 = *(_DWORD *)(v10 + 180);
          *(void *)std::stringbuf::string_type buf = v87;
          uint64_t v179 = sub_10043B674(v260, v87, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
          __int128 v180 = v179 + 6;
          uint64_t v181 = *(void *)(v17 + 100);
          uint64_t v182 = *(void *)(v17 + 108);
          int v183 = *(_DWORD *)(v17 + 180);
          *(_DWORD *)std::stringbuf::string_type buf = 136317699;
          *(void *)&uint8_t buf[4] = v175;
          *(_WORD *)&_BYTE buf[12] = 2049;
          std::string v284 = v176;
          __int16 v285 = 2049;
          v286 = v177;
          __int16 v287 = 2050;
          double v288 = v30;
          __int16 v289 = 1026;
          *(_DWORD *)v290 = v178;
          *(_WORD *)&v290[4] = 2082;
          *(void *)&v290[6] = v180;
          __int16 v291 = 2049;
          uint64_t v292 = v181;
          __int16 v293 = 2049;
          uint64_t v294 = v182;
          __int16 v295 = 2050;
          double v296 = v32;
          __int16 v297 = 1026;
          int v298 = v183;
          __int16 v299 = 2050;
          double v300 = v86;
          _os_log_impl( (void *)&_mh_execute_header,  v173,  OS_LOG_TYPE_DEBUG,  "new,%s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{public}d,coarser and agrees with curre nt,%{public}s, lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{public}d,distance,%{public}.2f,discarding",  buf,  0x68u);
        }

        if (!sub_1002921D0(115, 2))
        {
LABEL_275:
          uint64_t v46 = 0LL;
LABEL_276:
          double v15 = v87;
          goto LABEL_156;
        }

        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        uint64_t v228 = qword_101934838;
        *(void *)int v263 = &v262;
        v229 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
        id v230 = v229 + 6;
        id v231 = *(const char **)(v10 + 100);
        v232 = *(void **)(v10 + 108);
        int v233 = *(_DWORD *)(v10 + 180);
        *(void *)int v263 = v87;
        v234 = sub_10043B674(v260, v87, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
        v235 = v234 + 6;
        uint64_t v236 = *(void *)(v17 + 100);
        uint64_t v237 = *(void *)(v17 + 108);
        int v238 = *(_DWORD *)(v17 + 180);
        *(_DWORD *)int v263 = 136317699;
        *(void *)&v263[4] = v230;
        *(_WORD *)&v263[12] = 2049;
        v264 = v231;
        __int16 v265 = 2049;
        v266 = v232;
        __int16 v267 = 2050;
        double v268 = v30;
        __int16 v269 = 1026;
        *(_DWORD *)v270 = v233;
        *(_WORD *)&v270[4] = 2082;
        *(void *)&v270[6] = v235;
        __int16 v271 = 2049;
        uint64_t v272 = v236;
        __int16 v273 = 2049;
        uint64_t v274 = v237;
        __int16 v275 = 2050;
        double v276 = v32;
        __int16 v277 = 1026;
        int v278 = v238;
        __int16 v279 = 2050;
        double v280 = v86;
        LODWORD(v252) = 104;
        BOOL v141 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v228,  2LL,  "new,%s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{public}d,coarser an d agrees with current,%{public}s, lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f ,conf,%{public}d,distance,%{public}.2f,discarding",  v263,  v252);
      }

      uint64_t v239 = (char *)v141;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v141);
      if (v239 != buf) {
        free(v239);
      }
      goto LABEL_275;
    }
  }

  if (v262 == *v63)
  {
LABEL_155:
    uint64_t v46 = 1LL;
    goto LABEL_156;
  }

  sub_100D2DCA4((double *)(a1 + 120), v256, v23 + 96);
  double v73 = v72;
  uint64_t v46 = 1LL;
  if (v72 > 5000.0
    && v72 > v30 * 4.0
    && v72 > v31 * 4.0
    && v72 > (*(double *)(v10 + 172) - *(double *)(v23 + 172)) * 50.0
    && *(_DWORD *)(v23 + 180) - *(_DWORD *)(v10 + 180) >= 5)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    __int128 v74 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(void *)std::stringbuf::string_type buf = &v262;
      uint64_t v75 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      double v76 = v75 + 6;
      __int128 v77 = *(const char **)(v10 + 100);
      __int128 v78 = *(void **)(v10 + 108);
      int v257 = *(_DWORD *)(v10 + 180);
      *(void *)std::stringbuf::string_type buf = a1 + 236;
      uint64_t v79 = sub_10043B674(v260, v261, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      double v80 = v79 + 6;
      uint64_t v81 = *(void *)(v23 + 100);
      uint64_t v82 = *(void *)(v23 + 108);
      int v83 = *(_DWORD *)(v23 + 180);
      double v84 = a4 - *(double *)(v23 + 172);
      *(_DWORD *)std::stringbuf::string_type buf = 136449027;
      *(void *)&uint8_t buf[4] = v76;
      *(_WORD *)&_BYTE buf[12] = 2049;
      std::string v284 = v77;
      __int16 v285 = 2049;
      v286 = v78;
      __int16 v287 = 2050;
      double v288 = v30;
      __int16 v289 = 1026;
      *(_DWORD *)v290 = v257;
      *(_WORD *)&v290[4] = 2082;
      *(void *)&v290[6] = v80;
      __int16 v291 = 2049;
      uint64_t v292 = v81;
      __int16 v293 = 2049;
      uint64_t v294 = v82;
      __int16 v295 = 2050;
      double v296 = v31;
      __int16 v297 = 1026;
      int v298 = v83;
      __int16 v299 = 2050;
      double v300 = v84;
      __int16 v301 = 2050;
      double v302 = v73;
      _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning,new,%{public}s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{public }d,conflicts with confident,%{public}s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2f,conf,%{public}d,a ge,%{public}.3f,distance,%{public}.2f,discarding",  buf,  0x72u);
    }

    if (sub_1002921D0(115, 2))
    {
      int v254 = v15;
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v214 = qword_101934838;
      *(void *)int v263 = &v262;
      v215 = sub_10043B674(v260, &v262, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
      id v216 = v215 + 6;
      uint64_t v217 = *(const char **)(v10 + 100);
      v218 = *(void **)(v10 + 108);
      int v219 = *(_DWORD *)(v10 + 180);
      *(void *)int v263 = a1 + 236;
      uint64_t v220 = sub_10043B674(v260, v261, (uint64_t)&unk_1012CF090, (_DWORD **)v263);
      uint64_t v221 = v220 + 6;
      uint64_t v222 = *(void *)(v23 + 100);
      uint64_t v223 = *(void *)(v23 + 108);
      int v224 = *(_DWORD *)(v23 + 180);
      double v225 = a4 - *(double *)(v23 + 172);
      *(_DWORD *)int v263 = 136449027;
      *(void *)&v263[4] = v216;
      *(_WORD *)&v263[12] = 2049;
      v264 = v217;
      __int16 v265 = 2049;
      v266 = v218;
      __int16 v267 = 2050;
      double v268 = v30;
      __int16 v269 = 1026;
      *(_DWORD *)v270 = v219;
      *(_WORD *)&v270[4] = 2082;
      *(void *)&v270[6] = v221;
      __int16 v271 = 2049;
      uint64_t v272 = v222;
      __int16 v273 = 2049;
      uint64_t v274 = v223;
      __int16 v275 = 2050;
      double v276 = v31;
      __int16 v277 = 1026;
      int v278 = v224;
      __int16 v279 = 2050;
      double v280 = v225;
      __int16 v281 = 2050;
      double v282 = v73;
      LODWORD(v252) = 114;
      id v226 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v214,  0LL,  "LocationController,#Warning,new,%{public}s,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.2 f,conf,%{public}d,conflicts with confident,%{public}s,lat,%{private}.7lf,lon,%{private}.7lf,hunc, %{public}.2f,conf,%{public}d,age,%{public}.3f,distance,%{public}.2f,discarding",  v263,  v252);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::shouldNotify(CFAbsoluteTime, LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v226);
      if (v226 != buf) {
        free(v226);
      }
      uint64_t v46 = 0LL;
      double v15 = v254;
    }

    else
    {
      uint64_t v46 = 0LL;
    }
  }

double sub_100431358(uint64_t a1, double a2)
{
  int v2 = *(_DWORD *)(a1 + 128);
  double v3 = *(double *)(a1 + 20);
  int v4 = *(_DWORD *)(a1 + 96);
  if (v4 == 10 && v2 == 75 && v3 > 0.0)
  {
    double result = v3 * a2;
    double v6 = 0.038;
    goto LABEL_9;
  }

  if (v4 == 11 && v2 == 75 && v3 > 0.0)
  {
    double result = v3 * a2;
    double v6 = 0.042;
LABEL_9:
    if (result <= v6) {
      return v6;
    }
    return result;
  }

  double result = 20.0;
  if (v3 >= 20.0 || v3 <= 0.0 || v4 != 4) {
    return *(double *)(a1 + 20);
  }
  return result;
}

uint64_t sub_1004313D8(uint64_t a1, int a2)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  double v3 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "unsupported location type,%{public}d", buf, 8u);
  }

  BOOL v4 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v4)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v7[0] = 67240192;
    v7[1] = a2;
    double v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "unsupported location type,%{public}d",  v7,  8);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLLocationController::isLocationTypeSupported(CLLocationType)",  "%s\n",  v6);
    return 0LL;
  }

  return result;
}

uint64_t sub_1004315A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v9 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 288) + 104LL))(*(void *)(a1 + 288), a3);
  if ((v9 & 1) != 0)
  {
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 288) + 120LL))(*(void *)(a1 + 288), a2);
    *a5 = 1;
    if (*(double *)(a2 + 20) > 0.0)
    {
      if (qword_101934A90 != -1) {
        dispatch_once(&qword_101934A90, &stru_101838CA0);
      }
      uint64_t v10 = (os_log_s *)qword_101934A98;
      if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v11 = *(void *)(a2 + 4);
        uint64_t v45 = *(void *)(a2 + 12);
        uint64_t v50 = *(void *)(a2 + 20);
        unsigned int v12 = *(_DWORD *)(a2 + 96);
        double v48 = sub_100832C40(v12);
        uint64_t v56 = *(void *)(a2 + 44);
        uint64_t v58 = *(void *)(a2 + 60);
        int v60 = *(_DWORD *)(a2 + 84);
        uint64_t v62 = *(void *)(a2 + 88);
        uint64_t v64 = *(void *)(a2 + 76);
        uint64_t v13 = sub_10080E94C();
        *(_DWORD *)std::stringbuf::string_type buf = 0;
        double v14 = sub_10080EB58(v13, buf) - *(double *)(a2 + 76);
        uint64_t v15 = *(void *)(a2 + 28);
        uint64_t v16 = *(void *)(a2 + 36);
        uint64_t v17 = *(void *)(a2 + 52);
        uint64_t v43 = *(void *)(a2 + 68);
        uint64_t v44 = *(void *)(a3 + 184);
        int v46 = *(_DWORD *)(a2 + 128);
        int v52 = *(_DWORD *)(a2 + 132);
        int v54 = *(_DWORD *)(a2 + 136);
        uint64_t v18 = sub_10080E94C();
        double v19 = sub_10080EF30(v18);
        *(_DWORD *)std::stringbuf::string_type buf = 136320515;
        *(void *)__int128 v109 = "CL-filtered";
        *(_WORD *)&v109[8] = 1024;
        *(_DWORD *)&v109[10] = 0;
        __int16 v110 = 2048;
        uint64_t v111 = v11;
        __int16 v112 = 2048;
        uint64_t v113 = v45;
        __int16 v114 = 2048;
        uint64_t v115 = v50;
        __int16 v116 = 1026;
        unsigned int v117 = v12;
        __int16 v118 = 2082;
        __int128 v119 = v48;
        __int16 v120 = 2050;
        uint64_t v121 = v56;
        __int16 v122 = 2050;
        uint64_t v123 = v58;
        __int16 v124 = 1026;
        int v125 = v60;
        __int16 v126 = 2050;
        uint64_t v127 = v62;
        __int16 v128 = 2050;
        uint64_t v129 = v64;
        __int16 v130 = 2050;
        double v131 = v14;
        __int16 v132 = 2049;
        uint64_t v133 = v15;
        __int16 v134 = 2050;
        uint64_t v135 = v16;
        __int16 v136 = 2050;
        uint64_t v137 = v17;
        __int16 v138 = 2050;
        uint64_t v139 = v43;
        __int16 v140 = 2050;
        uint64_t v141 = v44;
        __int16 v142 = 1026;
        int v143 = v46;
        __int16 v144 = 1026;
        int v145 = v52;
        __int16 v146 = 1026;
        int v147 = v54;
        __int16 v148 = 2050;
        double v149 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%{public}d,%{public}s,Speed,%{public}.2f,Course,%{public}.2f,C onfidence,%{public}d,Lifespan,%{public}.3f,LocationTimestamp,%{public}.3f,Age,%{public}.3f,Altitude,%{private} .3f,AltitudeAccuracy,%{public}.3f,SpeedAccuracy,%{public}.3f,CourseAccuracy,%{public}.1f,timestampGps,%{public }.3lf,integrity,%{public}d,referenceFrame,%{public}d,rawReferenceFrame,%{public}d,propagation_us,%{public}.3f",  buf,  0xC6u);
      }

      if (sub_1002921D0(117, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A90 != -1) {
          dispatch_once(&qword_101934A90, &stru_101838CA0);
        }
        uint64_t v65 = qword_101934A98;
        uint64_t v20 = *(void *)(a2 + 4);
        uint64_t v21 = *(void *)(a2 + 12);
        uint64_t v22 = *(void *)(a2 + 20);
        unsigned int v23 = *(_DWORD *)(a2 + 96);
        int v24 = sub_100832C40(v23);
        uint64_t v25 = *(void *)(a2 + 44);
        uint64_t v26 = *(void *)(a2 + 60);
        int v49 = *(_DWORD *)(a2 + 84);
        uint64_t v53 = *(void *)(a2 + 88);
        double v57 = *(double *)(a2 + 76);
        double v27 = sub_10037FE24() - v57;
        uint64_t v47 = *(void *)(a2 + 28);
        uint64_t v51 = *(void *)(a2 + 36);
        uint64_t v55 = *(void *)(a2 + 52);
        uint64_t v59 = *(void *)(a2 + 68);
        uint64_t v28 = *(void *)(a3 + 184);
        int v29 = *(_DWORD *)(a2 + 128);
        int v30 = *(_DWORD *)(a2 + 132);
        int v31 = *(_DWORD *)(a2 + 136);
        int v61 = v29;
        int v63 = v30;
        uint64_t v32 = sub_10080E94C();
        int v66 = 136320515;
        *(void *)uint64_t v67 = "CL-filtered";
        *(_WORD *)&v67[8] = 1024;
        *(_DWORD *)&v67[10] = 0;
        __int16 v68 = 2048;
        uint64_t v69 = v20;
        __int16 v70 = 2048;
        uint64_t v71 = v21;
        __int16 v72 = 2048;
        uint64_t v73 = v22;
        __int16 v74 = 1026;
        unsigned int v75 = v23;
        __int16 v76 = 2082;
        __int128 v77 = v24;
        __int16 v78 = 2050;
        uint64_t v79 = v25;
        __int16 v80 = 2050;
        uint64_t v81 = v26;
        __int16 v82 = 1026;
        int v83 = v49;
        __int16 v84 = 2050;
        uint64_t v85 = v53;
        __int16 v86 = 2050;
        double v87 = v57;
        __int16 v88 = 2050;
        double v89 = v27;
        __int16 v90 = 2049;
        uint64_t v91 = v47;
        __int16 v92 = 2050;
        uint64_t v93 = v51;
        __int16 v94 = 2050;
        uint64_t v95 = v55;
        __int16 v96 = 2050;
        uint64_t v97 = v59;
        __int16 v98 = 2050;
        uint64_t v99 = v28;
        __int16 v100 = 1026;
        int v101 = v61;
        __int16 v102 = 1026;
        int v103 = v63;
        __int16 v104 = 1026;
        int v105 = v31;
        __int16 v106 = 2050;
        double v107 = sub_10080EF30(v32);
        double v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v65,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%{public}d,%{public}s,Speed,%{public}.2f,Course, %{public}.2f,Confidence,%{public}d,Lifespan,%{public}.3f,LocationTimestamp,%{public}.3f,Age,%{pu blic}.3f,Altitude,%{private}.3f,AltitudeAccuracy,%{public}.3f,SpeedAccuracy,%{public}.3f,CourseA ccuracy,%{public}.1f,timestampGps,%{public}.3lf,integrity,%{public}d,referenceFrame,%{public}d,r awReferenceFrame,%{public}d,propagation_us,%{public}.3f",  &v66,  198);
        sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "BOOL CLLocationController::updateLegacyLCLocationFilter(CLDaemonLocation &, const CLLocationProvider_Type::Not ificationData &, const LocationProvider &, BOOL &)",  "%s\n",  v33);
      }
    }
  }

  else if (*(_BYTE *)(a1 + 658))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v34 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      int v35 = *(_DWORD *)(a3 + 96);
      uint64_t v36 = *(void *)(a3 + 100);
      uint64_t v37 = *(void *)(a3 + 108);
      *(_DWORD *)std::stringbuf::string_type buf = 67240705;
      *(_DWORD *)__int128 v109 = v35;
      *(_WORD *)&v109[4] = 2049;
      *(void *)&v109[6] = v36;
      __int16 v110 = 2049;
      uint64_t v111 = v37;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_INFO,  "location rejected by KF,%{public}d,lat,%{private}.7lf,lon,%{private}.7lf",  buf,  0x1Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      int v39 = *(_DWORD *)(a3 + 96);
      uint64_t v40 = *(void *)(a3 + 100);
      uint64_t v41 = *(void *)(a3 + 108);
      int v66 = 67240705;
      *(_DWORD *)uint64_t v67 = v39;
      *(_WORD *)&v67[4] = 2049;
      *(void *)&v67[6] = v40;
      __int16 v68 = 2049;
      uint64_t v69 = v41;
      __int16 v42 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "location rejected by KF,%{public}d,lat,%{private}.7lf,lon,%{private}.7lf",  &v66,  28);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::updateLegacyLCLocationFilter(CLDaemonLocation &, const CLLocationProvider_Type::Notif icationData &, const LocationProvider &, BOOL &)",  "%s\n",  v42);
    }

    *a5 = 0;
  }

  return v9;
}

uint64_t sub_100431C74(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xE) {
    return 1LL;
  }
  else {
    return dword_1012EAD14[a2];
  }
}

BOOL sub_100431C94(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  int v5 = *a4;
  *a4 = 0;
  *(void *)(a2 + 96) = 0LL;
  *(void *)(a2 + 104) = 0LL;
  *(_DWORD *)(a2 + 112) = 0;
  *(void *)(a2 + 136) = 0LL;
  *(void *)(a2 + 144) = 0LL;
  *(void *)(a2 + 128) = 0LL;
  *(_BYTE *)(a2 + 152) = 0;
  *(_DWORD *)a2 = 0xFFFF;
  *(void *)(a2 + 12) = 0LL;
  *(void *)(a2 + 4) = 0LL;
  *(_OWORD *)(a2 + 2sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a2 + 36) = _Q0;
  *(_OWORD *)(a2 + 52) = _Q0;
  *(_OWORD *)(a2 + 68) = _Q0;
  *(_DWORD *)(a2 + 84) = 0;
  *(void *)(a2 + 88) = 0xBFF0000000000000LL;
  *(void *)(a2 + 116) = 0xBFF0000000000000LL;
  *(_DWORD *)(a2 + 124) = 0x7FFFFFFF;
  unsigned int v11 = *(_DWORD *)(a3 + 96);
  if (!v11)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v29 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "#Warning, LCFusion, not notifying clients when provider type is Unknown",  buf,  2u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v31 = qword_101934838;
      *(_WORD *)char v152 = 0;
      LODWORD(v128) = 2;
      uint64_t v32 = "#Warning, LCFusion, not notifying clients when provider type is Unknown";
      goto LABEL_77;
    }

    return result;
  }

  int v15 = sub_100431C74(a1, v11);
  int v151 = v15;
  uint64_t v17 = a1 + 248;
  uint64_t v16 = *(void *)(a1 + 248);
  if (!v16) {
    goto LABEL_12;
  }
  uint64_t v18 = a1 + 248;
  uint64_t v19 = *(void *)(a1 + 248);
  do
  {
    int v20 = *(_DWORD *)(v19 + 32);
    BOOL v21 = v20 < v15;
    if (v20 >= v15) {
      uint64_t v22 = (uint64_t *)v19;
    }
    else {
      uint64_t v22 = (uint64_t *)(v19 + 8);
    }
    if (!v21) {
      uint64_t v18 = v19;
    }
    uint64_t v19 = *v22;
  }

  while (*v22);
  if (v18 == v17 || v15 < *(_DWORD *)(v18 + 32)) {
LABEL_12:
  }
    uint64_t v18 = a1 + 248;
  int v148 = v5;
  unsigned int v23 = (int *)(a1 + 232);
  if (!v16)
  {
    int v24 = *v23;
LABEL_33:
    uint64_t v25 = a1 + 248;
    goto LABEL_34;
  }

  int v24 = *v23;
  uint64_t v25 = a1 + 248;
  do
  {
    int v26 = *(_DWORD *)(v16 + 32);
    BOOL v27 = v26 < v24;
    if (v26 >= v24) {
      uint64_t v28 = (uint64_t *)v16;
    }
    else {
      uint64_t v28 = (uint64_t *)(v16 + 8);
    }
    if (!v27) {
      uint64_t v25 = v16;
    }
    uint64_t v16 = *v28;
  }

  while (*v28);
  if (v25 == v17 || v24 < *(_DWORD *)(v25 + 32)) {
    goto LABEL_33;
  }
LABEL_34:
  BOOL v33 = 0;
  if (v24 && v15 != v24)
  {
    if (*(_BYTE *)(v18 + 903))
    {
      BOOL v33 = 0;
      goto LABEL_49;
    }

    int v145 = (uint64_t **)(a1 + 240);
    int v34 = *(char *)(v18 + 900);
    if (v34 <= *(char *)(v25 + 900))
    {
      uint64_t v35 = sub_10080E94C();
      *(_DWORD *)std::stringbuf::string_type buf = 0;
      double v36 = sub_10080EB58(v35, buf) - *(double *)(v25 + 172);
      double v37 = *(double *)(v25 + 184);
      BOOL v33 = v36 < v37;
      if (v36 < v37)
      {
        if (v151 != 1)
        {
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          __int16 v82 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
          {
            *(void *)std::stringbuf::string_type buf = &v151;
            int v83 = sub_10043B674(v145, &v151, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
            __int16 v84 = v83 + 6;
            uint64_t v85 = *(void *)(v18 + 100);
            uint64_t v86 = *(void *)(v18 + 108);
            *(void *)std::stringbuf::string_type buf = a1 + 232;
            double v87 = sub_10043B674(v145, v23, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
            __int16 v88 = v87 + 6;
            uint64_t v89 = *(void *)(v18 + 172);
            uint64_t v90 = sub_10080E94C();
            double v91 = sub_10080EF30(v90);
            *(_DWORD *)std::stringbuf::string_type buf = 136447491;
            *(void *)&uint8_t buf[4] = v84;
            __int16 v186 = 2049;
            *(void *)uint64_t v187 = v85;
            *(_WORD *)&v187[8] = 2049;
            *(void *)&v187[10] = v86;
            *(_WORD *)&v187[18] = 2082;
            *(void *)&v187[20] = v88;
            *(_WORD *)&v187[28] = 2050;
            *(void *)&v187[30] = v89;
            *(_WORD *)&v187[38] = 2050;
            *(double *)&v187[40] = v91;
            _os_log_impl( (void *)&_mh_execute_header,  v82,  OS_LOG_TYPE_DEBUG,  "LCFusion,got non-active location provider,%{public}s,lat,%{private}.7f,lon,%{private}.7f,ignoring,in favor of,%{public}s,mct,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x3Eu);
          }

          BOOL result = sub_1002921D0(115, 2);
          if (!result) {
            return result;
          }
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          uint64_t v75 = qword_101934838;
          *(void *)char v152 = &v151;
          __int16 v92 = sub_10043B674(v145, &v151, (uint64_t)&unk_1012CF090, (_DWORD **)v152);
          uint64_t v93 = v92 + 6;
          uint64_t v94 = *(void *)(v18 + 100);
          uint64_t v95 = *(void *)(v18 + 108);
          *(void *)char v152 = a1 + 232;
          __int16 v96 = sub_10043B674(v145, v23, (uint64_t)&unk_1012CF090, (_DWORD **)v152);
          uint64_t v97 = v96 + 6;
          uint64_t v98 = *(void *)(v18 + 172);
          uint64_t v99 = sub_10080E94C();
          double v100 = sub_10080EF30(v99);
          *(_DWORD *)char v152 = 136447491;
          *(void *)&v152[4] = v93;
          __int16 v153 = 2049;
          *(void *)uint64_t v154 = v94;
          *(_WORD *)&v154[8] = 2049;
          *(void *)&v154[10] = v95;
          *(_WORD *)&v154[18] = 2082;
          *(void *)&v154[20] = v97;
          *(_WORD *)&v154[28] = 2050;
          *(void *)&v154[30] = v98;
          *(_WORD *)&v154[38] = 2050;
          *(double *)&v154[40] = v100;
          LODWORD(v128) = 62;
          uint64_t v32 = "LCFusion,got non-active location provider,%{public}s,lat,%{private}.7f,lon,%{private}.7f,ignoring,in fav"
                "or of,%{public}s,mct,%{public}.3f,propagation_us,%{public}.3f";
          goto LABEL_109;
        }

        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        __int16 v38 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v39 = *(void *)(v18 + 100);
          uint64_t v40 = *(void *)(v18 + 108);
          *(_DWORD *)std::stringbuf::string_type buf = 134283777;
          *(void *)&uint8_t buf[4] = v39;
          __int16 v186 = 2049;
          *(void *)uint64_t v187 = v40;
          _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEBUG,  "LCFusion, got non-active wifi lat,%{private}.7f,lon,%{private}.7f, Consuming in LCFusion ",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          uint64_t v125 = *(void *)(v18 + 100);
          uint64_t v126 = *(void *)(v18 + 108);
          *(_DWORD *)char v152 = 134283777;
          *(void *)&v152[4] = v125;
          __int16 v153 = 2049;
          *(void *)uint64_t v154 = v126;
          uint64_t v127 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LCFusion, got non-active wifi lat,%{private}.7f,lon,%{private}.7f, Consuming in LCFusion ",  v152,  22);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::updateFusionLCLocationFilter(CLDaemonLocation &, const CLLocationProvider_Type::N otificationData &, BOOL &)",  "%s\n",  v127);
          if (v127 != buf) {
            free(v127);
          }
        }
      }

      LOBYTE(v34) = *(_BYTE *)(v18 + 900);
    }

    else
    {
      BOOL v33 = 0;
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    __int16 v68 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v69 = *(void *)(v18 + 100);
      uint64_t v70 = *(void *)(v18 + 108);
      *(void *)std::stringbuf::string_type buf = &v151;
      uint64_t v71 = sub_10043B674(v145, &v151, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
      __int16 v72 = v71 + 6;
      uint64_t v73 = sub_10080E94C();
      double v74 = sub_10080EF30(v73);
      *(_DWORD *)std::stringbuf::string_type buf = 134284291;
      *(void *)&uint8_t buf[4] = v69;
      __int16 v186 = 2049;
      *(void *)uint64_t v187 = v70;
      *(_WORD *)&v187[8] = 2082;
      *(void *)&v187[10] = v72;
      *(_WORD *)&v187[18] = 2050;
      *(double *)&v187[20] = v74;
      _os_log_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_DEBUG,  "LCFusion Got,lat,%{private}.7f,lon,%{private}.7f,for non-active location provider,%{public}s,ignoring coarse gra nularity,propagation_us,%{public}.3f",  buf,  0x2Au);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (!result) {
      return result;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v75 = qword_101934838;
    uint64_t v76 = *(void *)(v18 + 100);
    uint64_t v77 = *(void *)(v18 + 108);
    *(void *)char v152 = &v151;
    __int16 v78 = sub_10043B674(v145, &v151, (uint64_t)&unk_1012CF090, (_DWORD **)v152);
    uint64_t v79 = v78 + 6;
    uint64_t v80 = sub_10080E94C();
    double v81 = sub_10080EF30(v80);
    *(_DWORD *)char v152 = 134284291;
    *(void *)&v152[4] = v76;
    __int16 v153 = 2049;
    *(void *)uint64_t v154 = v77;
    *(_WORD *)&v154[8] = 2082;
    *(void *)&v154[10] = v79;
    *(_WORD *)&v154[18] = 2050;
    *(double *)&v154[20] = v81;
    LODWORD(v128) = 42;
    uint64_t v32 = "LCFusion Got,lat,%{private}.7f,lon,%{private}.7f,for non-active location provider,%{public}s,ignoring coarse g"
          "ranularity,propagation_us,%{public}.3f";
LABEL_109:
    uint64_t v31 = v75;
LABEL_77:
    uint64_t v67 = (char *)_os_log_send_and_compose_impl(2LL, 0LL, buf, 1628LL, &_mh_execute_header, v31, 2LL, v32, v152, v128);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::updateFusionLCLocationFilter(CLDaemonLocation &, const CLLocationProvider_Type::Notific ationData &, BOOL &)",  "%s\n",  v67);
    if (v67 != buf) {
      free(v67);
    }
    return 0LL;
  }

BOOL sub_100432D44(uint64_t a1, int a2, uint64_t a3)
{
  char v169 = 0;
  sub_100246C40((uint64_t)&v152, a3);
  if (*(_BYTE *)(a1 + 663)
    || *(_BYTE *)(a1 + 664)
    || !(*(unsigned int (**)(void, __int128 *))(**(void **)(a1 + 288) + 368LL))( *(void *)(a1 + 288),  &v152))
  {
    int v10 = 1;
    goto LABEL_14;
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  double v6 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    int v7 = *(_DWORD *)(a3 + 96);
    uint64_t v8 = *(void *)(a3 + 4);
    uint64_t v9 = *(void *)(a3 + 12);
    *(_DWORD *)std::stringbuf::string_type buf = 67240705;
    *(_DWORD *)&uint8_t buf[4] = v7;
    *(_WORD *)&uint8_t buf[8] = 2049;
    *(void *)&buf[10] = v8;
    *(_WORD *)&buf[18] = 2049;
    *(void *)&buf[20] = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "location rejected by IM,locationType,%{public}d,lat,%{private}.7lf,lon,%{private}.7lf",  buf,  0x1Cu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v112 = *(_DWORD *)(a3 + 96);
    uint64_t v113 = *(void *)(a3 + 4);
    uint64_t v114 = *(void *)(a3 + 12);
    *(_DWORD *)__int16 v188 = 67240705;
    *(_DWORD *)&v188[4] = v112;
    *(_WORD *)&v188[8] = 2049;
    *(void *)&v188[10] = v113;
    *(_WORD *)&v188[18] = 2049;
    *(void *)&v188[20] = v114;
    uint64_t v115 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "location rejected by IM,locationType,%{public}d,lat,%{private}.7lf,lon,%{private}.7lf",  v188,  28);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::notifyLocation(LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v115);
    if (v115 != buf) {
      free(v115);
    }
  }

  if (*(_BYTE *)(a1 + 657))
  {
    int v10 = 0;
    goto LABEL_14;
  }

  int v10 = 0;
  BOOL v11 = 0LL;
  if (!*(_BYTE *)(a1 + 296))
  {
LABEL_14:
    sub_100434740(a1, (uint64_t)&v152);
    if (v10) {
      sub_100434AF0(a1, (uint64_t)&v152);
    }
    if (!*(_BYTE *)(a1 + 296))
    {
      LODWORD(v160[0]) = *(_DWORD *)(a3 + 128);
      *(void *)((char *)&v153 + 4) = *(void *)(a3 + 20);
    }

    sub_10043503C((int *)a1, (uint64_t)&v152);
    uint64_t v12 = sub_10080E94C();
    *(_DWORD *)std::stringbuf::string_type buf = 0;
    double v13 = sub_10080EB58(v12, buf);
    int v14 = sub_10042EA48(a1, a2, (uint64_t)&v152, v13);
    char v169 = v14;
    *(_DWORD *)int v148 = 0xFFFF;
    *(_OWORD *)&v148[4] = 0uLL;
    *(_OWORD *)&v148[20] = xmmword_1012E0070;
    __asm { FMOV            V0.2D, #-1.0 }

    *(_OWORD *)&v148[36] = _Q0;
    *(_OWORD *)&v148[52] = _Q0;
    __int128 v139 = _Q0;
    *(_OWORD *)&v148[68] = _Q0;
    *(_DWORD *)&v148[84] = 0;
    __int128 v149 = 0uLL;
    *(void *)&v148[88] = 0xBFF0000000000000LL;
    *(void *)((char *)&v150 + 4) = 0xBFF0000000000000LL;
    LODWORD(v15sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
    HIDWORD(v15sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0x7FFFFFFF;
    memset(v151, 0, 25);
    if (a2 == 7)
    {
      int v21 = *(_BYTE *)(a1 + 665) ? 0 : v14;
      if (v21 == 1)
      {
        __int128 v150 = v159;
        *(_OWORD *)int v151 = v160[0];
        *(_OWORD *)&v151[12] = *(_OWORD *)((char *)v160 + 12);
        *(_OWORD *)&v148[48] = v155;
        *(_OWORD *)&v148[64] = v156;
        *(_OWORD *)&v148[80] = v157;
        __int128 v149 = v158;
        int v22 = 1;
        *(_OWORD *)int v148 = v152;
        *(_OWORD *)&v148[16] = v153;
        *(_OWORD *)&v148[32] = v154;
        goto LABEL_33;
      }
    }

    if (*(_BYTE *)(a1 + 296)) {
      int v23 = v14;
    }
    else {
      int v23 = 0;
    }
    if (v23 == 1)
    {
      int v24 = sub_1004315A8(a1, (uint64_t)v148, (uint64_t)&v152, v15, &v169);
    }

    else
    {
      if (*(_BYTE *)(a1 + 296))
      {
        int v22 = 0;
        goto LABEL_33;
      }

      int v24 = sub_100431C94(a1, (uint64_t)v148, (uint64_t)&v152, &v169);
    }

    int v22 = v24;
LABEL_33:
    uint64_t v25 = *(void **)(a1 + 1592);
    if (v25)
    {
      if ([v25 feedLocation:a3])
      {
        double v26 = -1.0;
        if (*(void *)(a1 + 1592))
        {
          unsigned int v27 = +[CLLocationDerivedSpeedEstimator isSupportedForDerivedSpeedEstimate]( &OBJC_CLASS___CLLocationDerivedSpeedEstimator,  "isSupportedForDerivedSpeedEstimate");
          double v28 = -1.0;
          double v29 = -1.0;
          if (v27)
          {
            [*(id *)(a1 + 1592) currentEstimate];
            double v26 = v30;
          }
        }

        else
        {
          double v28 = -1.0;
          double v29 = -1.0;
        }

        unint64_t v165 = *(void *)&v26;
        *(double *)&__int128 v166 = v28;
        *((double *)&v166 + 1) = v29;
        if (v169) {
          goto LABEL_44;
        }
        if (!*(_BYTE *)(a1 + 657))
        {
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          __int16 v88 = (os_log_s *)qword_101934838;
          if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)std::stringbuf::string_type buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning not notifying location with location derived speed",  buf,  2u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934830 != -1) {
              dispatch_once(&qword_101934830, &stru_101838C20);
            }
            *(_WORD *)__int16 v188 = 0;
            LODWORD(v116) = 2;
            uint64_t v89 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationController,#Warning not notifying location with location derived speed",  v188,  v116);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::notifyLocation(LocationProvider, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v89);
            if (v89 != buf) {
              free(v89);
            }
          }
        }
      }

      else
      {
        unint64_t v165 = 0xBFF0000000000000LL;
        __int128 v166 = v139;
      }
    }

    if (!v169 && !*(_BYTE *)(a1 + 657))
    {
LABEL_145:
      sub_10042794C(a1);
      if (v169) {
        BOOL v11 = 1LL;
      }
      else {
        BOOL v11 = *(_BYTE *)(a1 + 657) != 0;
      }
      goto LABEL_148;
    }

LABEL_148:
  __int16 v78 = v167;
  if (v167)
  {
    uint64_t v79 = (unint64_t *)&v167->__shared_owners_;
    do
      unint64_t v80 = __ldaxr(v79);
    while (__stlxr(v80 - 1, v79));
    if (!v80)
    {
      ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
      std::__shared_weak_count::__release_weak(v78);
    }
  }

  if (v164 < 0) {
    operator delete(v163);
  }
  double v81 = v162;
  if (v162)
  {
    __int16 v82 = (unint64_t *)&v162->__shared_owners_;
    do
      unint64_t v83 = __ldaxr(v82);
    while (__stlxr(v83 - 1, v82));
    if (!v83)
    {
      ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
      std::__shared_weak_count::__release_weak(v81);
    }
  }

  __int16 v84 = v161;
  if (v161)
  {
    uint64_t v85 = (unint64_t *)&v161->__shared_owners_;
    do
      unint64_t v86 = __ldaxr(v85);
    while (__stlxr(v86 - 1, v85));
    if (!v86)
    {
      ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
      std::__shared_weak_count::__release_weak(v84);
    }
  }

  return v11;
}

  uint64_t v41 = *(void *)(v5 + 296);
  if (!v41) {
    uint64_t v41 = *(void *)(qword_1019A1D38 + 296);
  }
  BOOL result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage( (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x41,  v41,  a2,  a4);
  double v36 = *(_DWORD *)(v5 + 400);
  if ((v36 & 0x80) == 0)
  {
LABEL_132:
    if ((v36 & 0x100) == 0) {
      goto LABEL_157;
    }
    goto LABEL_154;
  }

  unint64_t v77 = *(void *)(a1 + 160);
  if (!v77) {
    unint64_t v77 = *(void *)(qword_1019A1D38 + 160);
  }
  if ((*(_BYTE *)(v77 + 20) & 1) == 0)
  {
    __int16 v78 = 0;
    *(_DWORD *)(v77 + 16) = 0;
LABEL_153:
    unint64_t v80 = 1;
    goto LABEL_155;
  }

  uint64_t v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64( *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v77 + 8),  a2);
  __int16 v78 = v79 + 1;
  *(_DWORD *)(v77 + 16) = v79 + 1;
  unint64_t v80 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback( (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v79 + 1),  a2);
LABEL_155:
  v4 += v78 + v80 + 2;
  double v3 = *(_DWORD *)(a1 + 396);
  if ((v3 & 0x200000) == 0)
  {
LABEL_119:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_162;
  }

  BOOL result = *(float *)(a2 + 204);
  v5 |= 0x1000000000000uLL;
  *int v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 204) = result;
  BOOL v4 = *v3;
  int v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x4000000000000LL) == 0)
  {
LABEL_75:
    if ((v4 & 0x800000000000000LL) == 0) {
      goto LABEL_76;
    }
    goto LABEL_150;
  }

  PB::TextFormatter::format(this, "numShortAudio", *(_DWORD *)(a1 + 248));
  double v6 = *v5;
  int v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000000000000LL) == 0)
  {
LABEL_74:
    if ((v6 & 0x2000000000000000LL) == 0) {
      goto LABEL_75;
    }
    goto LABEL_150;
  }

  BOOL result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 248), 0x45u);
  int v5 = *v4;
  if ((v4[1] & 0x400) == 0)
  {
LABEL_74:
    if ((v5 & 0x4000000000000000LL) == 0) {
      goto LABEL_75;
    }
    goto LABEL_150;
  }

  BOOL result = *(float *)(a2 + 164);
  v5 |= 0x4000000000uLL;
  *int v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(_BYTE *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 164) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  BOOL v4 = *v3;
  if ((*v3 & 0x40000000000LL) == 0)
  {
LABEL_68:
    if ((v4 & 0x2000000000000LL) == 0) {
      goto LABEL_69;
    }
    goto LABEL_150;
  }

  PB::TextFormatter::format(this, "lowSenseWithoutAudioParBaroNormThreshold", *(float *)(a1 + 228));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  double v6 = *v5;
  if ((*v5 & 0x80000000000000LL) == 0)
  {
LABEL_67:
    if ((v6 & 0x100000000000000LL) == 0) {
      goto LABEL_68;
    }
    goto LABEL_150;
  }

  BOOL result = PB::Writer::write(this, *(float *)(v3 + 164), 0x102u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  int v5 = *v4;
  if ((*v4 & 0x40000000000LL) == 0)
  {
LABEL_68:
    if ((v5 & 0x2000000000000LL) == 0) {
      goto LABEL_69;
    }
    goto LABEL_150;
  }

  double v37 = *(_BYTE *)(a2 + 349);
  v6 |= 0x4000000000uLL;
  *int v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_BYTE *)(a1 + 349) = v37;
  BOOL v4 = *v3;
  int v7 = *(void *)(a2 + 364);
  if ((v7 & 0x400000000LL) == 0)
  {
LABEL_43:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_150;
  }

  PB::TextFormatter::format(this, "maxPulse", *(float *)(a1 + 120));
  int v7 = *v5;
  double v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x200000) == 0)
  {
LABEL_47:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_150;
  }

  BOOL result = PB::Writer::write(this, *(_BYTE *)(v3 + 349), 0x132u);
  int v5 = *v4;
  double v6 = v4[1];
  if ((v6 & 0x400000000LL) == 0)
  {
LABEL_43:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_150;
  }

  __int16 v82 = *(_BYTE *)(a2 + 191);
  unint64_t v83 = v4 >> 16;
  v4 |= 0x10uLL;
  *(void *)(result + 204) = v3;
  *(_BYTE *)(result + 214) = v83;
  *(_WORD *)(result + 212) = v4;
  *(_BYTE *)(result + 191) = v82;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  int v2 = *(void *)(a2 + 204);
  if ((v2 & 0x200000) == 0)
  {
LABEL_70:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_150;
  }

  PB::TextFormatter::format(this, "maxRMS1", *(float *)(a1 + 132));
  double v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  int v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_69:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_150;
  }

  BOOL result = PB::Writer::write(this, *(float *)(v3 + 104), 0x4B6u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  BOOL v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000000LL) == 0)
  {
LABEL_70:
    if ((v4 & 0x1000000000000LL) == 0) {
      goto LABEL_71;
    }
    goto LABEL_150;
  }

        *(_DWORD *)(a1 + 4sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v51;
        goto LABEL_158;
      case 5u:
        *(_BYTE *)(a1 + 64) |= 0x80u;
        __n128 v54 = *((void *)this + 1);
        if (v54 >= *((void *)this + 2))
        {
          uint64_t v57 = 0;
          *((_BYTE *)this + 24) = 1;
        }

        else
        {
          uint64_t v55 = v54 + 1;
          double v56 = *(unsigned __int8 *)(*(void *)this + v54);
          *((void *)this + 1) = v55;
          uint64_t v57 = v56 != 0;
        }

        *(_BYTE *)(a1 + 6sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v57;
        goto LABEL_158;
      case 6u:
        *(_BYTE *)(a1 + 64) |= 0x10u;
        uint64_t v58 = *((void *)this + 1);
        uint64_t v59 = *((void *)this + 2);
        uint64_t v60 = *(void *)this;
        if (v58 <= 0xFFFFFFFFFFFFFFF5LL && v58 + 10 <= v59)
        {
          unint64_t v61 = 0;
          uint64_t v62 = 0;
          double v63 = 0LL;
          do
          {
            unint64_t v64 = v58 + 1;
            *((void *)this + 1) = v58 + 1;
            int v65 = *(_BYTE *)(v60 + v58);
            v63 |= (unint64_t)(v65 & 0x7F) << v61;
            if ((v65 & 0x80) == 0) {
              goto LABEL_151;
            }
            v61 += 7;
            uint64_t v58 = v64;
            uint64_t v15 = v62++ > 8;
          }

          while (!v15);
LABEL_115:
          LODWORD(v63) = 0;
          goto LABEL_151;
        }

        uint64_t v101 = 0;
        uint64_t v102 = 0;
        double v63 = 0LL;
        if (v59 <= v58) {
          uint64_t v59 = *((void *)this + 1);
        }
        while (2)
        {
          if (v59 == v58)
          {
            LODWORD(v63) = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            double v103 = v58 + 1;
            double v104 = *(_BYTE *)(v60 + v58);
            *((void *)this + 1) = v103;
            v63 |= (unint64_t)(v104 & 0x7F) << v101;
            if (v104 < 0)
            {
              v101 += 7;
              uint64_t v58 = v103;
              uint64_t v15 = v102++ > 8;
              if (v15) {
                goto LABEL_115;
              }
              continue;
            }

            if (*((_BYTE *)this + 24)) {
              LODWORD(v63) = 0;
            }
          }

          break;
        }

void sub_100434698( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_100434740(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0xFFFFFFFE) == 0xA)
  {
    uint64_t v25 = 0LL;
    double v26 = 0LL;
    unint64_t v27 = 0LL;
    goto LABEL_8;
  }

  if ((v4 & 0xFFFFFFF7) == 1 && *(_BYTE *)(a1 + 5000) != 0)
  {
    uint64_t v25 = 0LL;
    double v26 = 0LL;
    unint64_t v27 = 0LL;
    float v6 = *(double *)(a2 + 36);
    LODWORD(v22) = 188;
    *(float *)int v23 = v6;
    int v24 = 4;
    double v26 = (_DWORD *)sub_10043B8B8(&v25, &v22);
    sub_10043AFF4((uint64_t)v23);
LABEL_8:
    if (sub_1004354FC(a1))
    {
      sub_100435794(a1, (_DWORD *)(a1 + 312), a2);
      double v28 = (_DWORD *)(a1 + 312);
      LODWORD(v22) = 186;
      *(float *)int v23 = v7;
      int v24 = 4;
      uint64_t v8 = v26;
      if ((unint64_t)v26 >= v27)
      {
        uint64_t v9 = (_DWORD *)sub_10043B8B8(&v25, &v22);
      }

      else
      {
        *double v26 = 186;
        uint64_t v9 = v8 + 10;
        sub_10043B9BC((uint64_t)(v8 + 2), (uint64_t)v23);
      }

      double v26 = v9;
      sub_10043AFF4((uint64_t)v23);
      double v28 = (_DWORD *)(a1 + 312);
      int v12 = *((_DWORD *)sub_10043B674((uint64_t **)(a1 + 240), (int *)(a1 + 312), (uint64_t)&unk_1012CF090, &v28) + 48);
      LODWORD(v22) = 184;
      v23[0] = v12;
      int v24 = 0;
      BOOL v11 = v26;
    }

    else
    {
      int v10 = *(_DWORD *)(a2 + 96);
      LODWORD(v22) = 184;
      v23[0] = v10;
      int v24 = 0;
      BOOL v11 = v26;
      if ((unint64_t)v26 < v27)
      {
LABEL_15:
        _DWORD *v11 = 184;
        double v13 = v11 + 10;
        sub_10043B9BC((uint64_t)(v11 + 2), (uint64_t)v23);
LABEL_17:
        double v26 = v13;
        sub_10043AFF4((uint64_t)v23);
        float v14 = *(double *)(a2 + 36);
        LODWORD(v22) = 185;
        *(float *)int v23 = v14;
        int v24 = 4;
        uint64_t v15 = v26;
        if ((unint64_t)v26 >= v27)
        {
          uint64_t v16 = (_DWORD *)sub_10043B8B8(&v25, &v22);
        }

        else
        {
          *double v26 = 185;
          uint64_t v16 = v15 + 10;
          sub_10043B9BC((uint64_t)(v15 + 2), (uint64_t)v23);
        }

        double v26 = v16;
        sub_10043AFF4((uint64_t)v23);
        LODWORD(v28) = 0;
        BOOL v17 = sub_100D79854((float64_t *)(a2 + 4), (double *)(a2 + 12), &v28);
        LODWORD(v22) = 189;
        v23[0] = v17;
        int v24 = 0;
        uint64_t v18 = v26;
        if ((unint64_t)v26 >= v27)
        {
          uint64_t v19 = (_DWORD *)sub_10043B8B8(&v25, &v22);
        }

        else
        {
          *double v26 = 189;
          uint64_t v19 = v18 + 10;
          sub_10043B9BC((uint64_t)(v18 + 2), (uint64_t)v23);
        }

        double v26 = v19;
        sub_10043AFF4((uint64_t)v23);
        int v20 = *(void **)(a1 + 5016);
        memset(v21, 0, sizeof(v21));
        sub_10043BC44(v21, v25, (uint64_t)v26, 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v26 - v25) >> 3));
        [v20 setMeasurements:sub_100435878(v21)];
        int v22 = (void **)v21;
        sub_10043B844(&v22);
        int v22 = (void **)&v25;
        sub_10043B844(&v22);
        return;
      }
    }

    double v13 = (_DWORD *)sub_10043B8B8(&v25, &v22);
    goto LABEL_17;
  }

void sub_100434A80( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  a13 = (void **)&a18;
  sub_10043B844(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_100434AF0(uint64_t a1, uint64_t a2)
{
  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_101838CA0);
  }
  int v4 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a2 + 4);
    uint64_t v33 = *(void *)(a2 + 12);
    uint64_t v37 = *(void *)(a2 + 20);
    unsigned int v6 = *(_DWORD *)(a2 + 96);
    uint64_t v35 = sub_100832C40(v6);
    uint64_t v43 = *(void *)(a2 + 44);
    uint64_t v47 = *(void *)(a2 + 60);
    int v49 = *(_DWORD *)(a2 + 84);
    uint64_t v51 = *(void *)(a2 + 88);
    uint64_t v53 = *(void *)(a2 + 76);
    uint64_t v7 = sub_10080E94C();
    *(_DWORD *)std::stringbuf::string_type buf = 0;
    double v8 = sub_10080EB58(v7, buf) - *(double *)(a2 + 76);
    uint64_t v9 = *(void *)(a2 + 28);
    uint64_t v10 = *(void *)(a2 + 36);
    uint64_t v11 = *(void *)(a2 + 52);
    uint64_t v31 = *(void *)(a2 + 68);
    uint64_t v32 = *(void *)(a2 + 184);
    double v12 = *(float *)(a2 + 476);
    int v39 = *(_DWORD *)(a2 + 472);
    int v13 = *(_DWORD *)(a2 + 128);
    int v41 = *(_DWORD *)(a2 + 132);
    int v45 = *(_DWORD *)(a2 + 136);
    uint64_t v14 = sub_10080E94C();
    double v15 = sub_10080EF30(v14);
    *(_DWORD *)std::stringbuf::string_type buf = 136321027;
    double v104 = "CL-prefiltered";
    __int16 v105 = 1024;
    int v106 = 0;
    __int16 v107 = 2048;
    uint64_t v108 = v5;
    __int16 v109 = 2048;
    uint64_t v110 = v33;
    __int16 v111 = 2048;
    uint64_t v112 = v37;
    __int16 v113 = 1026;
    unsigned int v114 = v6;
    __int16 v115 = 2082;
    uint64_t v116 = v35;
    __int16 v117 = 2050;
    uint64_t v118 = v43;
    __int16 v119 = 2050;
    uint64_t v120 = v47;
    __int16 v121 = 1026;
    int v122 = v49;
    __int16 v123 = 2050;
    uint64_t v124 = v51;
    __int16 v125 = 2050;
    uint64_t v126 = v53;
    __int16 v127 = 2050;
    double v128 = v8;
    __int16 v129 = 2049;
    uint64_t v130 = v9;
    __int16 v131 = 2050;
    uint64_t v132 = v10;
    __int16 v133 = 2050;
    uint64_t v134 = v11;
    __int16 v135 = 2050;
    uint64_t v136 = v31;
    __int16 v137 = 2050;
    uint64_t v138 = v32;
    __int16 v139 = 1026;
    int v140 = v13;
    __int16 v141 = 2049;
    double v142 = v12;
    __int16 v143 = 1026;
    int v144 = v39;
    __int16 v145 = 1024;
    int v146 = v41;
    __int16 v147 = 1024;
    int v148 = v45;
    __int16 v149 = 2050;
    double v150 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%{public}d,%{public}s,Speed,%{public}.2f,Course,%{public}.2f,Confi dence,%{public}d,Lifespan,%{public}.3f,LocationTimestamp,%{public}.3f,Age,%{public}.3f,Altitude,%{private}.3f,Alti tudeAccuracy,%{public}.3f,SpeedAccuracy,%{public}.3f,CourseAccuracy,%{public}.1f,timestampGps,%{public}.3lf,integr ity,%{public}d,undulation,%{private}.3lf,undulationModel,%{public}d,referenceFrame,%d,rawReferenceFrame,%d,propaga tion_us,%{public}.3f",  buf,  0xD6u);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    uint64_t v30 = a1;
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_101838CA0);
    }
    uint64_t v54 = qword_101934A98;
    uint64_t v17 = *(void *)(a2 + 4);
    uint64_t v18 = *(void *)(a2 + 12);
    uint64_t v19 = *(void *)(a2 + 20);
    unsigned int v20 = *(_DWORD *)(a2 + 96);
    int v21 = sub_100832C40(v20);
    uint64_t v22 = *(void *)(a2 + 44);
    uint64_t v23 = *(void *)(a2 + 60);
    int v24 = *(_DWORD *)(a2 + 84);
    uint64_t v36 = *(void *)(a2 + 88);
    double v42 = *(double *)(a2 + 76);
    double v25 = sub_10037FE24() - v42;
    uint64_t v26 = *(void *)(a2 + 28);
    uint64_t v34 = *(void *)(a2 + 36);
    uint64_t v40 = *(void *)(a2 + 52);
    uint64_t v44 = *(void *)(a2 + 68);
    uint64_t v46 = *(void *)(a2 + 184);
    double v27 = *(float *)(a2 + 476);
    int v48 = *(_DWORD *)(a2 + 472);
    int v38 = *(_DWORD *)(a2 + 128);
    int v50 = *(_DWORD *)(a2 + 132);
    int v52 = *(_DWORD *)(a2 + 136);
    uint64_t v28 = sub_10080E94C();
    int v55 = 136321027;
    double v56 = "CL-prefiltered";
    __int16 v57 = 1024;
    int v58 = 0;
    __int16 v59 = 2048;
    uint64_t v60 = v17;
    __int16 v61 = 2048;
    uint64_t v62 = v18;
    __int16 v63 = 2048;
    uint64_t v64 = v19;
    __int16 v65 = 1026;
    unsigned int v66 = v20;
    __int16 v67 = 2082;
    uint64_t v68 = v21;
    __int16 v69 = 2050;
    uint64_t v70 = v22;
    __int16 v71 = 2050;
    uint64_t v72 = v23;
    __int16 v73 = 1026;
    int v74 = v24;
    __int16 v75 = 2050;
    uint64_t v76 = v36;
    __int16 v77 = 2050;
    double v78 = v42;
    __int16 v79 = 2050;
    double v80 = v25;
    __int16 v81 = 2049;
    uint64_t v82 = v26;
    __int16 v83 = 2050;
    uint64_t v84 = v34;
    __int16 v85 = 2050;
    uint64_t v86 = v40;
    __int16 v87 = 2050;
    uint64_t v88 = v44;
    __int16 v89 = 2050;
    uint64_t v90 = v46;
    __int16 v91 = 1026;
    int v92 = v38;
    __int16 v93 = 2049;
    double v94 = v27;
    __int16 v95 = 1026;
    int v96 = v48;
    __int16 v97 = 1024;
    int v98 = v50;
    __int16 v99 = 1024;
    int v100 = v52;
    __int16 v101 = 2050;
    double v102 = sub_10080EF30(v28);
    double v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v54,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%{public}d,%{public}s,Speed,%{public}.2f,Course,%{pu blic}.2f,Confidence,%{public}d,Lifespan,%{public}.3f,LocationTimestamp,%{public}.3f,Age,%{public}.3f ,Altitude,%{private}.3f,AltitudeAccuracy,%{public}.3f,SpeedAccuracy,%{public}.3f,CourseAccuracy,%{pu blic}.1f,timestampGps,%{public}.3lf,integrity,%{public}d,undulation,%{private}.3lf,undulationModel,% {public}d,referenceFrame,%d,rawReferenceFrame,%d,propagation_us,%{public}.3f",  &v55,  214);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLLocationController::notifyPrefilteredLocation(const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v29);
    a1 = v30;
  }

  *(_DWORD *)std::stringbuf::string_type buf = 33;
  return (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  a2,  1LL,  0xFFFFFFFFLL,  0LL);
}

int *sub_10043503C(int *result, uint64_t a2)
{
  if ((*(_DWORD *)(a2 + 96) & 0xFFFFFFF7) == 1)
  {
    double v3 = result;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v4 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a2 + 76);
      uint64_t v6 = *(void *)(a2 + 160);
      uint64_t v7 = *(void *)(a2 + 168);
      uint64_t v9 = *(void *)(a2 + 176);
      uint64_t v8 = *(void *)(a2 + 184);
      uint64_t v10 = *(void *)(a2 + 4);
      uint64_t v11 = *(void *)(a2 + 12);
      uint64_t v12 = *(void *)(a2 + 20);
      uint64_t v13 = *(void *)(a2 + 28);
      uint64_t v14 = *(void *)(a2 + 36);
      uint64_t v15 = *(void *)(a2 + 44);
      uint64_t v16 = *(void *)(a2 + 52);
      uint64_t v17 = *(void *)(a2 + 60);
      uint64_t v18 = *(void *)(a2 + 68);
      *(_DWORD *)std::stringbuf::string_type buf = 134352385;
      uint64_t v63 = v5;
      __int16 v64 = 2050;
      uint64_t v65 = v8;
      __int16 v66 = 2050;
      uint64_t v67 = v6;
      __int16 v68 = 2050;
      uint64_t v69 = v7;
      __int16 v70 = 2050;
      uint64_t v71 = v9;
      __int16 v72 = 2049;
      uint64_t v73 = v10;
      __int16 v74 = 2049;
      uint64_t v75 = v11;
      __int16 v76 = 2050;
      uint64_t v77 = v12;
      __int16 v78 = 2049;
      uint64_t v79 = v13;
      __int16 v80 = 2050;
      uint64_t v81 = v14;
      __int16 v82 = 2050;
      uint64_t v83 = v15;
      __int16 v84 = 2050;
      uint64_t v85 = v16;
      __int16 v86 = 2050;
      uint64_t v87 = v17;
      __int16 v88 = 2050;
      uint64_t v89 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "GPSODOM,timestamp,%{public}.3lf,timestampGps,%{public}.3lf,odometer,%{public}.3lf,deltaDist,%{public}.3lf,deltaD istUnc,%{public}.3lf,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.1lf,alt,%{private}.3lf,vunc,%{public}. 1lf,speed,%{public}.3lf,sunc,%{public}.3lf,course,%{public}.3lf,cunc,%{public}.3lf",  buf,  0x8Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v19 = *(void *)(a2 + 76);
      uint64_t v20 = *(void *)(a2 + 160);
      uint64_t v21 = *(void *)(a2 + 168);
      uint64_t v23 = *(void *)(a2 + 176);
      uint64_t v22 = *(void *)(a2 + 184);
      uint64_t v24 = *(void *)(a2 + 4);
      uint64_t v25 = *(void *)(a2 + 12);
      uint64_t v26 = *(void *)(a2 + 20);
      uint64_t v27 = *(void *)(a2 + 28);
      uint64_t v28 = *(void *)(a2 + 36);
      uint64_t v29 = *(void *)(a2 + 44);
      uint64_t v30 = *(void *)(a2 + 52);
      uint64_t v31 = *(void *)(a2 + 60);
      uint64_t v32 = *(void *)(a2 + 68);
      int v34 = 134352385;
      uint64_t v35 = v19;
      __int16 v36 = 2050;
      uint64_t v37 = v22;
      __int16 v38 = 2050;
      uint64_t v39 = v20;
      __int16 v40 = 2050;
      uint64_t v41 = v21;
      __int16 v42 = 2050;
      uint64_t v43 = v23;
      __int16 v44 = 2049;
      uint64_t v45 = v24;
      __int16 v46 = 2049;
      uint64_t v47 = v25;
      __int16 v48 = 2050;
      uint64_t v49 = v26;
      __int16 v50 = 2049;
      uint64_t v51 = v27;
      __int16 v52 = 2050;
      uint64_t v53 = v28;
      __int16 v54 = 2050;
      uint64_t v55 = v29;
      __int16 v56 = 2050;
      uint64_t v57 = v30;
      __int16 v58 = 2050;
      uint64_t v59 = v31;
      __int16 v60 = 2050;
      uint64_t v61 = v32;
      uint64_t v33 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "GPSODOM,timestamp,%{public}.3lf,timestampGps,%{public}.3lf,odometer,%{public}.3lf,deltaDist,%{publ ic}.3lf,deltaDistUnc,%{public}.3lf,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.1lf,alt,%{ private}.3lf,vunc,%{public}.1lf,speed,%{public}.3lf,sunc,%{public}.3lf,course,%{public}.3lf,cunc,%{public}.3lf",  &v34,  142);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::gpsOdometerHelper(const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v33);
    }

    BOOL result = *(int **)(a2 + 800);
    if (result && (BOOL result = (int *)sub_100CBED60(result), (unint64_t)result > 1)
      || *(double *)(a2 + 160) >= 0.0 && *(double *)(a2 + 168) >= 0.0 && *(double *)(a2 + 176) >= 0.0)
    {
      *(_DWORD *)std::stringbuf::string_type buf = 23;
      return (int *)(*(uint64_t (**)(int *, uint8_t *, uint64_t, uint64_t, uint64_t, void))(*(void *)v3 + 152LL))( v3,  buf,  a2,  1LL,  0xFFFFFFFFLL,  0LL);
    }
  }

  return result;
}

NSDictionary *sub_1004353AC(uint64_t a1)
{
  v4[0] = @"client";
  v3[0] = @"provider";
  v3[1] = @"flow";
  uint64_t v1 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", *(void *)(a1 + 32));
  v3[2] = @"island";
  v4[1] = v1;
  v4[2] = @"null";
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

NSDictionary *sub_100435454(uint64_t a1)
{
  v4[0] = @"client";
  v3[0] = @"provider";
  v3[1] = @"flow";
  uint64_t v1 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", *(void *)(a1 + 32));
  v3[2] = @"island";
  v4[1] = v1;
  v4[2] = @"sentinel";
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

uint64_t sub_1004354FC(uint64_t a1)
{
  uint64_t v2 = sub_10080E94C();
  *(_DWORD *)std::stringbuf::string_type buf = 1;
  double v3 = sub_10080EB58(v2, buf);
  int v4 = (uint64_t **)(a1 + 240);
  uint64_t v5 = (int *)(a1 + 312);
  *(void *)std::stringbuf::string_type buf = v5;
  double v6 = *((double *)sub_10043B674(v4, v5, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 75);
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  double v7 = v3 - v6;
  uint64_t v8 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v9 = sub_10080E94C();
    double v10 = sub_10080EF30(v9);
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    *(double *)&uint8_t buf[4] = v7;
    __int16 v21 = 2050;
    double v22 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "LocationController,isWiFiLocationProviderValidAndFresh,age,%.3f,propagation_us,%{public}.3f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v13 = qword_101934838;
    uint64_t v14 = sub_10080E94C();
    int v16 = 134218240;
    double v17 = v7;
    __int16 v18 = 2050;
    double v19 = sub_10080EF30(v14);
    uint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v13,  2LL,  "LocationController,isWiFiLocationProviderValidAndFresh,age,%.3f,propagation_us,%{public}.3f",  &v16,  22);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLLocationController::isWiFiLocationProviderValidAndFresh()",  "%s\n",  v15);
    if (v15 != buf) {
      free(v15);
    }
  }

  *(void *)std::stringbuf::string_type buf = v5;
  uint64_t v11 = sub_10043B674(v4, v5, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
  uint64_t result = sub_100869800((uint64_t)(v11 + 12));
  if ((_DWORD)result)
  {
    if (v7 >= *((double *)sub_100F4BF20() + 55))
    {
      return 0LL;
    }

    else
    {
      *(void *)std::stringbuf::string_type buf = v5;
      return *(double *)((char *)sub_10043B674(v4, v5, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 132) < 20.0;
    }
  }

  return result;
}

uint64_t **sub_100435794(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_OWORD *)(a3 + 704) = *(_OWORD *)(a3 + 28);
  *(double *)(a3 + 72sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(float *)(a3 + 476);
  *(_DWORD *)(a3 + 728) = *(_DWORD *)(a3 + 472);
  uint64_t v5 = (uint64_t **)(a1 + 240);
  double v7 = a2;
  double v7 = a2;
  *(void *)(a3 + 36) = *(uint64_t **)((char *)sub_10043B674(v5, a2, (uint64_t)&unk_1012CF090, &v7) + 132);
  double v7 = a2;
  *(_DWORD *)(a3 + 476) = *((_DWORD *)sub_10043B674(v5, a2, (uint64_t)&unk_1012CF090, &v7) + 143);
  double v7 = a2;
  uint64_t result = sub_10043B674(v5, a2, (uint64_t)&unk_1012CF090, &v7);
  *(_DWORD *)(a3 + 472) = *((_DWORD *)result + 142);
  return result;
}

id sub_100435878(uint64_t *a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768LL;
  v3[2] = sub_10043BBCC;
  void v3[3] = &unk_1018390D0;
  memset(v4, 0, sizeof(v4));
  sub_10043BC44(v4, *a1, a1[1], 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3));
  id v1 = [v3 copy];
  uint64_t v5 = (void **)v4;
  sub_10043B844(&v5);
  return v1;
}

void sub_100435914(_Unwind_Exception *a1)
{
  *(void *)(v2 - 24) = v1;
  sub_10043B844((void ***)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t sub_10043592C(uint64_t a1, uint64_t a2)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  int v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = sub_10080E94C();
    *(_DWORD *)std::stringbuf::string_type buf = 0;
    double v6 = sub_10080EB58(v5, buf);
    double v7 = sub_100832C40(*(_DWORD *)(a2 + 96));
    uint64_t v8 = *(void *)(a2 + 504);
    uint64_t v9 = *(void *)(a1 + 3952);
    uint64_t v10 = *(void *)(a1 + 2424);
    uint64_t v11 = sub_10080E94C();
    double v12 = sub_10080EF30(v11);
    *(_DWORD *)std::stringbuf::string_type buf = 134350338;
    double v36 = v6;
    __int16 v37 = 2082;
    __int16 v38 = v7;
    __int16 v39 = 2050;
    uint64_t v40 = v8;
    __int16 v41 = 2050;
    uint64_t v42 = v9;
    __int16 v43 = 2050;
    uint64_t v44 = v10;
    __int16 v45 = 2050;
    double v46 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "%{public}.1lf,DeadReckoning,%{public}s,%{public}.2lf,Propagating solution,lastGPSTime,%{public}.2lf,lastAccessoryT ime,%{public}.2lf,propagation_us,%{public}.3f",  buf,  0x3Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v15 = qword_101934838;
    double v16 = sub_10037FE24();
    double v17 = sub_100832C40(*(_DWORD *)(a2 + 96));
    uint64_t v18 = *(void *)(a2 + 504);
    uint64_t v19 = *(void *)(a1 + 3952);
    uint64_t v20 = *(void *)(a1 + 2424);
    uint64_t v21 = sub_10080E94C();
    int v23 = 134350338;
    double v24 = v16;
    __int16 v25 = 2082;
    uint64_t v26 = v17;
    __int16 v27 = 2050;
    uint64_t v28 = v18;
    __int16 v29 = 2050;
    uint64_t v30 = v19;
    __int16 v31 = 2050;
    uint64_t v32 = v20;
    __int16 v33 = 2050;
    double v34 = sub_10080EF30(v21);
    double v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v15,  2LL,  "%{public}.1lf,DeadReckoning,%{public}s,%{public}.2lf,Propagating solution,lastGPSTime,%{public}.2lf, lastAccessoryTime,%{public}.2lf,propagation_us,%{public}.3f",  &v23,  62);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::publishPropagatedCoordinates(CLLocationProvider_Type::NotificationData &)",  "%s\n",  v22);
  }

  double v13 = sub_100B10E50(a1 + 1920, *(_DWORD *)(a2 + 96), a2);
  uint64_t result = (*(uint64_t (**)(void, uint64_t, double))(**(void **)(a1 + 288) + 176LL))( *(void *)(a1 + 288),  a2,  v13);
  if ((_DWORD)result)
  {
    *(_BYTE *)(a2 + 516) = 1;
    *(_DWORD *)(a2 + 696) = 1;
    *(_DWORD *)std::stringbuf::string_type buf = 27;
    return (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  a2,  0LL,  0xFFFFFFFFLL,  0LL);
  }

  return result;
}

void sub_100435C10(_BYTE *a1, uint64_t a2)
{
  if (a1[659] && (a1[660] || a1[661]) && sub_100B1050C((uint64_t)(a1 + 1920), *(double *)(a2 + 504)))
  {
    sub_100246C40((uint64_t)v13, a2);
    int v14 = 1;
    sub_10043592C((uint64_t)a1, (uint64_t)v13);

    int v4 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        unint64_t v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }

    if (v18 < 0) {
      operator delete(__p);
    }
    double v7 = v16;
    if (v16)
    {
      uint64_t v8 = (unint64_t *)&v16->__shared_owners_;
      do
        unint64_t v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }

    uint64_t v10 = v15;
    if (v15)
    {
      uint64_t v11 = (unint64_t *)&v15->__shared_owners_;
      do
        unint64_t v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }

void sub_100435D4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100435D60(uint64_t a1, int *a2, uint64_t a3, int a4)
{
  *(_DWORD *)std::stringbuf::string_type buf = 1;
  v88[0] = 1;
  v88[1] = sub_100FE4D78((int *)buf);
  uint64_t v8 = *(void *)(a1 + 96);
  uint64_t v9 = sub_100370E78();
  *(_DWORD *)std::stringbuf::string_type buf = 4;
  int v89 = v8;
  sub_10037C614(v9, (unsigned int *)buf, (int32x4_t *)(a1 + 5044), v88, &v89, a2, a3);
  if (!*a2)
  {
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_101838CA0);
    }
    uint64_t v10 = (os_log_s *)qword_101934A98;
    if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v48 = *(void *)(a3 + 4);
      uint64_t v54 = *(void *)(a3 + 12);
      uint64_t v60 = *(void *)(a3 + 20);
      unsigned int v11 = *(_DWORD *)(a3 + 96);
      __int16 v52 = sub_100832C40(v11);
      uint64_t v58 = *(void *)(a3 + 44);
      uint64_t v64 = *(void *)(a3 + 60);
      int v68 = *(_DWORD *)(a3 + 84);
      uint64_t v72 = *(void *)(a3 + 88);
      uint64_t v76 = *(void *)(a3 + 28);
      uint64_t v80 = *(void *)(a3 + 36);
      uint64_t v84 = *(void *)(a3 + 76);
      uint64_t v12 = sub_10080E94C();
      *(_DWORD *)std::stringbuf::string_type buf = 0;
      double v13 = sub_10080EB58(v12, buf) - *(double *)(a3 + 76);
      uint64_t v14 = *(void *)(a3 + 184);
      uint64_t v15 = *(void *)(a3 + 52);
      int v86 = a4;
      uint64_t v16 = *(void *)(a3 + 68);
      int v17 = *(_DWORD *)(a3 + 124);
      int v46 = *(_DWORD *)(a3 + 128);
      uint64_t v50 = *(void *)(a3 + 100);
      uint64_t v56 = *(void *)(a3 + 108);
      uint64_t v62 = *(void *)(a3 + 116);
      int v66 = *(_DWORD *)(a3 + 132);
      int v70 = *(_DWORD *)(a3 + 136);
      int v74 = *(unsigned __int8 *)(a3 + 516);
      int v78 = *(_DWORD *)(a3 + 696);
      int v82 = *(_DWORD *)(a3 + 140);
      uint64_t v18 = sub_10080E94C();
      double v19 = sub_10080EF30(v18);
      *(_DWORD *)std::stringbuf::string_type buf = 136322306;
      *(void *)int v146 = "CL";
      *(_WORD *)&v146[8] = 1024;
      *(_DWORD *)&v146[10] = 1;
      *(_WORD *)&v146[14] = 2048;
      *(void *)&v146[16] = v48;
      *(_WORD *)&v146[24] = 2048;
      *(void *)&v146[26] = v54;
      *(_WORD *)&v146[34] = 2048;
      *(void *)&v146[36] = v60;
      __int16 v147 = 1024;
      unsigned int v148 = v11;
      __int16 v149 = 2080;
      double v150 = v52;
      __int16 v151 = 2048;
      uint64_t v152 = v58;
      __int16 v153 = 2048;
      uint64_t v154 = v64;
      __int16 v155 = 1024;
      int v156 = v68;
      __int16 v157 = 2048;
      uint64_t v158 = v72;
      __int16 v159 = 2048;
      uint64_t v160 = v76;
      __int16 v161 = 2048;
      uint64_t v162 = v80;
      __int16 v163 = 2048;
      uint64_t v164 = v84;
      __int16 v165 = 2048;
      double v166 = v13;
      __int16 v167 = 2048;
      uint64_t v168 = v14;
      __int16 v169 = 1024;
      int v170 = v17;
      __int16 v171 = 2048;
      uint64_t v172 = v15;
      __int16 v173 = 2048;
      uint64_t v174 = v16;
      a4 = v86;
      __int16 v175 = 1024;
      int v176 = v46;
      __int16 v177 = 2048;
      uint64_t v178 = v50;
      __int16 v179 = 2048;
      uint64_t v180 = v56;
      __int16 v181 = 2048;
      uint64_t v182 = v62;
      __int16 v183 = 1024;
      int v184 = v66;
      __int16 v185 = 1024;
      int v186 = v70;
      __int16 v187 = 1024;
      int v188 = v74;
      __int16 v189 = 1024;
      int v190 = v78;
      __int16 v191 = 1024;
      int v192 = v82;
      __int16 v193 = 2050;
      double v194 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%d,%s,Speed,%.2f,Course,%.2f,Confidence,%d,Lifespan,%.3f,Altitud e,%.1f,AltitudeAccuracy,%.1f,LocationTimestamp,%.3f,Age,%.3f,timestampGps,%.3lf,floor,%d,SpeedAccuracy,%.3lf,Cou rseAccuracy,%.1lf,integrity,%d,rawLat,%.7lf,rawLon,%.7lf,rawCourse,%.2f,refFrame,%d,rawRefFrame,%d,propagated,%d ,gnssContent,%d,signalEnv,%d,propagation_us,%{public}.3f",  buf,  0xFCu);
    }

    if (sub_1002921D0(117, 2))
    {
      bzero(buf, 0x65CuLL);
      int v87 = a4;
      if (qword_101934A90 != -1) {
        dispatch_once(&qword_101934A90, &stru_101838CA0);
      }
      uint64_t v85 = qword_101934A98;
      uint64_t v30 = *(void *)(a3 + 4);
      uint64_t v31 = *(void *)(a3 + 12);
      uint64_t v32 = *(void *)(a3 + 20);
      unsigned int v33 = *(_DWORD *)(a3 + 96);
      double v34 = sub_100832C40(v33);
      uint64_t v45 = *(void *)(a3 + 44);
      uint64_t v47 = *(void *)(a3 + 60);
      int v51 = *(_DWORD *)(a3 + 84);
      uint64_t v55 = *(void *)(a3 + 88);
      uint64_t v57 = *(void *)(a3 + 28);
      uint64_t v61 = *(void *)(a3 + 36);
      double v65 = *(double *)(a3 + 76);
      double v35 = sub_10037FE24() - v65;
      uint64_t v53 = *(void *)(a3 + 184);
      uint64_t v59 = *(void *)(a3 + 52);
      uint64_t v63 = *(void *)(a3 + 68);
      int v49 = *(_DWORD *)(a3 + 124);
      int v67 = *(_DWORD *)(a3 + 128);
      uint64_t v69 = *(void *)(a3 + 100);
      uint64_t v71 = *(void *)(a3 + 108);
      uint64_t v73 = *(void *)(a3 + 116);
      int v75 = *(_DWORD *)(a3 + 132);
      int v77 = *(_DWORD *)(a3 + 136);
      int v79 = *(unsigned __int8 *)(a3 + 516);
      int v81 = *(_DWORD *)(a3 + 696);
      int v83 = *(_DWORD *)(a3 + 140);
      uint64_t v36 = sub_10080E94C();
      double v37 = sub_10080EF30(v36);
      int v89 = 136322306;
      double v90 = COERCE_DOUBLE("CL");
      __int16 v91 = 1024;
      *(_DWORD *)int v92 = 1;
      *(_WORD *)&v92[4] = 2048;
      *(void *)&v92[6] = v30;
      __int16 v93 = 2048;
      uint64_t v94 = v31;
      __int16 v95 = 2048;
      uint64_t v96 = v32;
      __int16 v97 = 1024;
      unsigned int v98 = v33;
      __int16 v99 = 2080;
      int v100 = v34;
      __int16 v101 = 2048;
      uint64_t v102 = v45;
      __int16 v103 = 2048;
      uint64_t v104 = v47;
      __int16 v105 = 1024;
      int v106 = v51;
      __int16 v107 = 2048;
      uint64_t v108 = v55;
      __int16 v109 = 2048;
      uint64_t v110 = v57;
      __int16 v111 = 2048;
      uint64_t v112 = v61;
      __int16 v113 = 2048;
      double v114 = v65;
      __int16 v115 = 2048;
      double v116 = v35;
      __int16 v117 = 2048;
      uint64_t v118 = v53;
      __int16 v119 = 1024;
      int v120 = v49;
      __int16 v121 = 2048;
      uint64_t v122 = v59;
      __int16 v123 = 2048;
      uint64_t v124 = v63;
      __int16 v125 = 1024;
      int v126 = v67;
      __int16 v127 = 2048;
      uint64_t v128 = v69;
      __int16 v129 = 2048;
      uint64_t v130 = v71;
      __int16 v131 = 2048;
      uint64_t v132 = v73;
      __int16 v133 = 1024;
      int v134 = v75;
      __int16 v135 = 1024;
      int v136 = v77;
      __int16 v137 = 1024;
      int v138 = v79;
      __int16 v139 = 1024;
      int v140 = v81;
      __int16 v141 = 1024;
      int v142 = v83;
      __int16 v143 = 2050;
      double v144 = v37;
      __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v85,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%d,%s,Speed,%.2f,Course,%.2f,Confidence,%d,Lifespa n,%.3f,Altitude,%.1f,AltitudeAccuracy,%.1f,LocationTimestamp,%.3f,Age,%.3f,timestampGps,%.3lf,floo r,%d,SpeedAccuracy,%.3lf,CourseAccuracy,%.1lf,integrity,%d,rawLat,%.7lf,rawLon,%.7lf,rawCourse,%.2 f,refFrame,%d,rawRefFrame,%d,propagated,%d,gnssContent,%d,signalEnv,%d,propagation_us,%{public}.3f",  &v89,  252);
      sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "virtual void CLLocationController::notifyClientsWithData(const CLLocationProvider_Type::Notification &, const CL LocationProvider_Type::NotificationData &, BOOL, int, BOOL)",  "%s\n",  v38);
      a4 = v87;
    }

    if (qword_101934980 != -1) {
      dispatch_once(&qword_101934980, &stru_101838D00);
    }
    id v20 = (os_log_s *)qword_101934988;
    if (os_log_type_enabled((os_log_t)qword_101934988, OS_LOG_TYPE_INFO))
    {
      uint64_t v21 = *a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289795;
      *(_WORD *)&v146[4] = 2082;
      *(_DWORD *)int v146 = 0;
      *(void *)&v146[6] = "";
      *(_WORD *)&v146[14] = 1040;
      *(_DWORD *)&v146[16] = 156;
      *(_WORD *)&v146[20] = 2097;
      *(void *)&v146[22] = a3;
      *(_WORD *)&v146[30] = 2050;
      *(void *)&v146[32] = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:Notifying clients with location, location:%{private, location:CLClientLocation}.*P, notification:%{public, location:CLLocationProvider_Type::Notification}lld}",  buf,  0x2Cu);
    }

    double v22 = *(double *)(a3 + 88);
    if (v22 >= 0.0)
    {
      double v23 = v22 + *(double *)(a3 + 76);
      uint64_t v24 = sub_10080E94C();
      *(_DWORD *)std::stringbuf::string_type buf = 0;
      if (v23 < sub_10080EB58(v24, buf))
      {
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        __int16 v25 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v26 = sub_10080E94C();
          *(_DWORD *)std::stringbuf::string_type buf = 0;
          double v27 = sub_10080EB58(v26, buf) - *(double *)(a3 + 76);
          uint64_t v28 = sub_10080E94C();
          double v29 = sub_10080EF30(v28);
          *(_DWORD *)std::stringbuf::string_type buf = 134349312;
          *(double *)int v146 = v27;
          *(_WORD *)&v146[8] = 2050;
          *(double *)&v146[10] = v29;
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning,Notifying clients of an already-expired location,age,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          uint64_t v39 = qword_101934838;
          double v40 = sub_10037FE24() - *(double *)(a3 + 76);
          uint64_t v41 = sub_10080E94C();
          double v42 = sub_10080EF30(v41);
          int v89 = 134349312;
          double v90 = v40;
          __int16 v91 = 2050;
          *(double *)int v92 = v42;
          LODWORD(v44) = 22;
          __int16 v43 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v39,  0LL,  "LocationController,#Warning,Notifying clients of an already-expired location,age,%{public}.3f, propagation_us,%{public}.3f",  &v89,  v44);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationController::notifyClientsWithData(const CLLocationProvider_Type::Notification &, cons t CLLocationProvider_Type::NotificationData &, BOOL, int, BOOL)",  "%s\n",  v43);
        }
      }
    }
  }

  sub_10047B624((char *)a1, a2, a3, a4, 0xFFFFFFFFLL, 0);
}

uint64_t sub_10043667C(uint64_t a1, uint64_t a2)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  int v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(int **)(a2 + 800);
    if (v5) {
      uint64_t v5 = (int *)sub_100CBED60(v5);
    }
    *(_DWORD *)std::stringbuf::string_type buf = 134349056;
    double v13 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "GPSODOM,Batched locations obtained,size,%{public}zu",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v7 = qword_101934838;
    uint64_t v8 = *(int **)(a2 + 800);
    if (v8) {
      uint64_t v8 = (int *)sub_100CBED60(v8);
    }
    int v10 = 134349056;
    unsigned int v11 = v8;
    uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v7,  1LL,  "GPSODOM,Batched locations obtained,size,%{public}zu",  &v10,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onRhythmicGnssBatchedLocationsUpdate(const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v9);
  }

  *(_DWORD *)std::stringbuf::string_type buf = 23;
  return (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  a2,  1LL,  0xFFFFFFFFLL,  0LL);
}

void sub_100436870(uint64_t a1, int a2, uint64_t a3, unsigned int *a4, uint64_t a5)
{
  int v50 = a2;
  sub_100246C40((uint64_t)v39, a5);
  uint64_t v9 = *a4;
  if (v9 <= 0x27)
  {
    if (((1LL << v9) & 0x8000000019LL) != 0)
    {
      sub_100436B90(a1, a5);
      int v51 = &v50;
      int v10 = sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, &v51);
      __int128 v11 = *(_OWORD *)(a5 + 16);
      *((_OWORD *)v10 + 6) = *(_OWORD *)a5;
      *((_OWORD *)v10 + 7) = v11;
      __int128 v12 = *(_OWORD *)(a5 + 32);
      __int128 v13 = *(_OWORD *)(a5 + 48);
      __int128 v14 = *(_OWORD *)(a5 + 80);
      *((_OWORD *)v10 + 1sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_OWORD *)(a5 + 64);
      *((_OWORD *)v10 + 11) = v14;
      *((_OWORD *)v10 + 8) = v12;
      *((_OWORD *)v10 + 9) = v13;
      __int128 v15 = *(_OWORD *)(a5 + 96);
      __int128 v16 = *(_OWORD *)(a5 + 112);
      __int128 v17 = *(_OWORD *)(a5 + 128);
      *(_OWORD *)((char *)v10 + 236) = *(_OWORD *)(a5 + 140);
      *((_OWORD *)v10 + 13) = v16;
      *((_OWORD *)v10 + 14) = v17;
      *((_OWORD *)v10 + 12) = v15;
      int v51 = &v50;
      uint64_t v18 = sub_10043B674((uint64_t **)(a1 + 240), &v50, (uint64_t)&unk_1012CF090, &v51);
      memcpy(v18 + 32, (const void *)(a5 + 160), 0x201uLL);
      sub_1000F2F30(v18 + 97, (uint64_t *)(a5 + 680));
      __int128 v20 = *(_OWORD *)(a5 + 712);
      __int128 v19 = *(_OWORD *)(a5 + 728);
      *(_OWORD *)(v18 + 99) = *(_OWORD *)(a5 + 696);
      *(_OWORD *)(v18 + 101) = v20;
      *(_OWORD *)(v18 + 103) = v19;
      __int128 v22 = *(_OWORD *)(a5 + 760);
      __int128 v21 = *(_OWORD *)(a5 + 776);
      __int128 v23 = *(_OWORD *)(a5 + 744);
      *(uint64_t **)((char *)v18 + 885) = *(uint64_t **)(a5 + 789);
      *(_OWORD *)(v18 + 107) = v22;
      *(_OWORD *)(v18 + 109) = v21;
      *(_OWORD *)(v18 + 105) = v23;
      sub_100432D44(a1, v50, a5);
      sub_100B10760(a1 + 1920, a5);
    }

    else if (v9 == 9)
    {
      sub_10042D76C(a1, a2);
    }

    else if (v9 == 22)
    {
      uint64_t v24 = *(void *)(a1 + 288);
      if (v24)
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)v24 + 384LL))(v24, a5);
        (*(void (**)(void, _BYTE *))(**(void **)(a1 + 288) + 392LL))(*(void *)(a1 + 288), v39);
      }

      double v25 = -1.0;
      if (sub_100437044(a1, v41) && *(void *)(a1 + 1592))
      {
        unsigned int v26 = +[CLLocationDerivedSpeedEstimator isSupportedForDerivedSpeedEstimate]( &OBJC_CLASS___CLLocationDerivedSpeedEstimator,  "isSupportedForDerivedSpeedEstimate");
        double v27 = -1.0;
        double v28 = -1.0;
        if (v26)
        {
          [*(id *)(a1 + 1592) currentEstimate];
          double v25 = v29;
        }
      }

      else
      {
        double v27 = -1.0;
        double v28 = -1.0;
      }

      double v45 = v25;
      double v46 = v27;
      double v47 = v28;
      LODWORD(v51) = 22;
      (*(void (**)(uint64_t, int **, _BYTE *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v51,  v39,  0LL,  0xFFFFFFFFLL,  0LL);
    }
  }

  uint64_t v30 = v48;
  if (v48)
  {
    p_shared_owners = (unint64_t *)&v48->__shared_owners_;
    do
      unint64_t v32 = __ldaxr(p_shared_owners);
    while (__stlxr(v32 - 1, p_shared_owners));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }

  if (v44 < 0) {
    operator delete(__p);
  }
  unsigned int v33 = v42;
  if (v42)
  {
    double v34 = (unint64_t *)&v42->__shared_owners_;
    do
      unint64_t v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }

  uint64_t v36 = v40;
  if (v40)
  {
    double v37 = (unint64_t *)&v40->__shared_owners_;
    do
      unint64_t v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }

void sub_100436B74(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100436B90(uint64_t a1, uint64_t a2)
{
  if (qword_101934A90 != -1) {
    dispatch_once(&qword_101934A90, &stru_101838CA0);
  }
  int v4 = (os_log_s *)qword_101934A98;
  if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v29 = *(void *)(a2 + 4);
    uint64_t v32 = *(void *)(a2 + 12);
    uint64_t v36 = *(void *)(a2 + 20);
    unsigned int v5 = *(_DWORD *)(a2 + 96);
    uint64_t v30 = sub_100832C40(v5);
    uint64_t v34 = *(void *)(a2 + 44);
    uint64_t v38 = *(void *)(a2 + 60);
    int v40 = *(_DWORD *)(a2 + 84);
    uint64_t v42 = *(void *)(a2 + 88);
    uint64_t v44 = *(void *)(a2 + 76);
    uint64_t v6 = sub_10080E94C();
    *(_DWORD *)std::stringbuf::string_type buf = 0;
    double v7 = sub_10080EB58(v6, buf) - *(double *)(a2 + 76);
    uint64_t v8 = *(void *)(a2 + 28);
    uint64_t v9 = *(void *)(a2 + 36);
    uint64_t v10 = *(void *)(a2 + 52);
    uint64_t v11 = *(void *)(a2 + 68);
    uint64_t v12 = *(void *)(a2 + 184);
    uint64_t v46 = a1;
    int v13 = *(_DWORD *)(a2 + 128);
    uint64_t v14 = sub_10080E94C();
    double v15 = sub_10080EF30(v14);
    *(_DWORD *)std::stringbuf::string_type buf = 136320002;
    int v89 = "CL-unfiltered";
    __int16 v90 = 1024;
    int v91 = 0;
    __int16 v92 = 2048;
    uint64_t v93 = v29;
    __int16 v94 = 2048;
    uint64_t v95 = v32;
    __int16 v96 = 2048;
    uint64_t v97 = v36;
    __int16 v98 = 1024;
    unsigned int v99 = v5;
    __int16 v100 = 2080;
    __int16 v101 = v30;
    __int16 v102 = 2048;
    uint64_t v103 = v34;
    __int16 v104 = 2048;
    uint64_t v105 = v38;
    __int16 v106 = 1024;
    int v107 = v40;
    __int16 v108 = 2048;
    uint64_t v109 = v42;
    __int16 v110 = 2048;
    uint64_t v111 = v44;
    __int16 v112 = 2048;
    double v113 = v7;
    __int16 v114 = 2048;
    uint64_t v115 = v8;
    __int16 v116 = 2048;
    uint64_t v117 = v9;
    __int16 v118 = 2048;
    uint64_t v119 = v10;
    __int16 v120 = 2048;
    uint64_t v121 = v11;
    __int16 v122 = 2048;
    uint64_t v123 = v12;
    __int16 v124 = 1024;
    int v125 = v13;
    a1 = v46;
    __int16 v126 = 2050;
    double v127 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%d,%s,Speed,%.2f,Course,%.2f,Confidence,%d,Lifespan,%.3f,LocationT imestamp,%.3f,Age,%.3f,Altitude,%.1f,AltitudeAccuracy,%.1f,SpeedAccuracy,%.3f,CourseAccuracy,%.1f,timestampGps,%.3 lf,integrity,%d,propagation_us,%{public}.3f",  buf,  0xBAu);
  }

  if (sub_1002921D0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    uint64_t v47 = a1;
    if (qword_101934A90 != -1) {
      dispatch_once(&qword_101934A90, &stru_101838CA0);
    }
    uint64_t v45 = qword_101934A98;
    uint64_t v17 = *(void *)(a2 + 4);
    uint64_t v18 = *(void *)(a2 + 12);
    uint64_t v19 = *(void *)(a2 + 20);
    unsigned int v20 = *(_DWORD *)(a2 + 96);
    __int128 v21 = sub_100832C40(v20);
    uint64_t v22 = *(void *)(a2 + 44);
    uint64_t v23 = *(void *)(a2 + 60);
    int v24 = *(_DWORD *)(a2 + 84);
    uint64_t v35 = *(void *)(a2 + 88);
    double v39 = *(double *)(a2 + 76);
    double v25 = sub_10037FE24() - v39;
    uint64_t v26 = *(void *)(a2 + 28);
    uint64_t v31 = *(void *)(a2 + 36);
    uint64_t v33 = *(void *)(a2 + 52);
    uint64_t v37 = *(void *)(a2 + 68);
    uint64_t v41 = *(void *)(a2 + 184);
    int v43 = *(_DWORD *)(a2 + 128);
    uint64_t v27 = sub_10080E94C();
    int v48 = 136320002;
    id v49 = "CL-unfiltered";
    __int16 v50 = 1024;
    int v51 = 0;
    __int16 v52 = 2048;
    uint64_t v53 = v17;
    __int16 v54 = 2048;
    uint64_t v55 = v18;
    __int16 v56 = 2048;
    uint64_t v57 = v19;
    __int16 v58 = 1024;
    unsigned int v59 = v20;
    __int16 v60 = 2080;
    uint64_t v61 = v21;
    __int16 v62 = 2048;
    uint64_t v63 = v22;
    __int16 v64 = 2048;
    uint64_t v65 = v23;
    __int16 v66 = 1024;
    int v67 = v24;
    __int16 v68 = 2048;
    uint64_t v69 = v35;
    __int16 v70 = 2048;
    double v71 = v39;
    __int16 v72 = 2048;
    double v73 = v25;
    __int16 v74 = 2048;
    uint64_t v75 = v26;
    __int16 v76 = 2048;
    uint64_t v77 = v31;
    __int16 v78 = 2048;
    uint64_t v79 = v33;
    __int16 v80 = 2048;
    uint64_t v81 = v37;
    __int16 v82 = 2048;
    uint64_t v83 = v41;
    __int16 v84 = 1024;
    int v85 = v43;
    __int16 v86 = 2050;
    double v87 = sub_10080EF30(v27);
    double v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v45,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%d,%s,Speed,%.2f,Course,%.2f,Confidence,%d,Lifespan, %.3f,LocationTimestamp,%.3f,Age,%.3f,Altitude,%.1f,AltitudeAccuracy,%.1f,SpeedAccuracy,%.3f,CourseAc curacy,%.1f,timestampGps,%.3lf,integrity,%d,propagation_us,%{public}.3f",  &v48,  186);
    sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "void CLLocationController::notifyUnfilteredLocation(const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v28);
    a1 = v47;
  }

  *(_DWORD *)std::stringbuf::string_type buf = 10;
  return (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  a2,  1LL,  0xFFFFFFFFLL,  0LL);
}

uint64_t sub_100437044(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 1592) && (uint64_t v4 = sub_100CBED60(a2)) != 0)
  {
    uint64_t v5 = v4;
    unint64_t v6 = 0LL;
    int v7 = 0;
    do
      v7 |= objc_msgSend( *(id *)(a1 + 1592),  "feedLocation:",  v9,  sub_100CBE5DC((uint64_t)a2, v6++, (uint64_t)v9).n128_f64[0]);
    while (v5 != v6);
  }

  else
  {
    LOBYTE(v7) = 0;
  }

  return v7 & 1;
}

void sub_1004370D4(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v10 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v11);
  sub_10080EF64(v7, v11[0].i64);
  int v12 = 13;
  v11[0].i32[0] = 13;
  v11[0].i32[1] = sub_100FE4D78(&v12);
  uint64_t v8 = sub_100370E78();
  int v12 = 4;
  sub_10037C614(v8, (unsigned int *)&v12, v11, (int *)(a1 + 5044), &v10, a3, a4);
  sub_100436870(a1, *(_DWORD *)(a1 + 312), v9, (unsigned int *)a3, a4);
  sub_100A6DF6C((unsigned __int8 *)(a1 + 752), a4);
  sub_1001A6C6C(a1 + 760, a3, a4);
}

void sub_10043719C(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v10 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v11);
  sub_10080EF64(v7, v11[0].i64);
  int v12 = 14;
  v11[0].i32[0] = 14;
  v11[0].i32[1] = sub_100FE4D78(&v12);
  uint64_t v8 = sub_100370E78();
  int v12 = 4;
  sub_10037C614(v8, (unsigned int *)&v12, v11, (int *)(a1 + 5044), &v10, a3, a4);
  sub_100436870(a1, *(_DWORD *)(a1 + 316), v9, (unsigned int *)a3, a4);
}

void sub_100437248(uint64_t a1, __int32 a2, int *a3, uint64_t a4)
{
  v23.i32[2] = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)&buf);
  sub_10080EF64(v7, &buf);
  LODWORD(buf) = 15;
  v23.i32[0] = 15;
  v23.i32[1] = sub_100FE4D78((int *)&buf);
  uint64_t v8 = sub_100370E78();
  LODWORD(buf) = 4;
  sub_10037C614(v8, (unsigned int *)&buf, &v23, (int *)(a1 + 5044), &v23.i32[2], a3, a4);
  int v9 = *a3;
  if (*a3 <= 25)
  {
    if (v9 == 11)
    {
      sub_10043757C(a1, a4 + 816);
      return;
    }

    if (v9 == 18)
    {
      sub_100437774(a1, (unsigned int *)(a4 + 840));
      return;
    }

    goto LABEL_11;
  }

  if (v9 == 26)
  {
    sub_100435C10((_BYTE *)a1, a4);
    return;
  }

  if (v9 != 41)
  {
    if (v9 == 43)
    {
      sub_10043667C(a1, a4);
      return;
    }

void sub_10043757C(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a2 == 1)
  {
    int v4 = *(unsigned __int8 *)(a2 + 4);
    int v5 = *(unsigned __int8 *)(a1 + 696);
    *(_BYTE *)(a1 + 696) = v4;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    unint64_t v6 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *(unsigned __int8 *)(a2 + 4);
      *(_DWORD *)uint64_t buf = 67240192;
      int v12 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Got notification gps active state,%{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      int v8 = *(unsigned __int8 *)(a2 + 4);
      v10[0] = 67240192;
      v10[1] = v8;
      int v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Got notification gps active state,%{public}d",  v10,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onGpsActiveNotification(const CLLocationProvider_Type::TechnologyStatus &)",  "%s\n",  v9);
    }

    if (v4 != v5) {
      sub_10042AFE8(a1);
    }
    sub_1001A756C(a1 + 760, *(unsigned __int8 *)(a1 + 696), v4 != v5);
  }

void sub_100437774(uint64_t a1, unsigned int *a2)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  double v3 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    *(_DWORD *)uint64_t buf = 67240192;
    int v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Got notification signal quality,%{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v5 = *a2;
    v7[0] = 67240192;
    v7[1] = v5;
    unint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Got notification signal quality,%{public}d",  v7,  8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onGpsSignalQualityNotification(const CLLocationProvider_Type::SignalQuality &)",  "%s\n",  v6);
  }

void sub_100437938(uint64_t a1, __int32 a2, int *a3, uint64_t a4)
{
  v75.i32[2] = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)buf);
  sub_10080EF64(v7, (uint64_t *)buf);
  *(_DWORD *)uint64_t buf = 18;
  v75.i32[0] = 18;
  v75.i32[1] = sub_100FE4D78((int *)buf);
  uint64_t v8 = sub_100370E78();
  *(_DWORD *)uint64_t buf = 4;
  sub_10037C614(v8, (unsigned int *)buf, &v75, (int *)(a1 + 5044), &v75.i32[2], a3, a4);
  if (*a3 == 21)
  {
    *(_DWORD *)uint64_t buf = 21;
    (*(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  a4,  1LL,  0xFFFFFFFFLL,  0LL);
  }

  else if (*a3 == 20)
  {
    LOBYTE(v66) = 0;
    v67[0] = 0xBFF0000000000000LL;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t *, void *))(**(void **)(a1 + 288) + 224LL))( *(void *)(a1 + 288),  a4 + 856,  a4 + 848,  &v66,  v67);
    if ((_BYTE)v66)
    {
      sub_100246564((uint64_t)buf);
      uint64_t v101 = v67[0];
      uint64_t v102 = *(void *)(a4 + 856);
      v75.i32[3] = 20;
      (*(void (**)(uint64_t, __int8 *, _BYTE *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v75.i8[12],  buf,  1LL,  0xFFFFFFFFLL,  0LL);

      int v9 = v105;
      if (v105)
      {
        p_shared_owners = (unint64_t *)&v105->__shared_owners_;
        do
          unint64_t v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }

      if (v104 < 0) {
        operator delete(__p);
      }
      int v12 = v100;
      if (v100)
      {
        uint64_t v13 = (unint64_t *)&v100->__shared_owners_;
        do
          unint64_t v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }

      int v15 = v99;
      if (v99)
      {
        uint64_t v16 = (unint64_t *)&v99->__shared_owners_;
        do
          unint64_t v17 = __ldaxr(v16);
        while (__stlxr(v17 - 1, v16));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
    }

    if (*(double *)(a4 + 848) >= 0.0 && sub_100B10244((double *)(a1 + 1920), *(double *)(a4 + 864)))
    {
      sub_100246564((uint64_t)buf);
      uint64_t v94 = *(void *)(a4 + 856);
      double v93 = *(double *)(a4 + 848);
      int v95 = 3;
      uint64_t v98 = *(void *)(a4 + 864);
      uint64_t v97 = *(void *)(a4 + 872);
      uint64_t v96 = v94;
      sub_10043592C(a1, (uint64_t)buf);

      uint64_t v18 = v105;
      if (v105)
      {
        uint64_t v19 = (unint64_t *)&v105->__shared_owners_;
        do
          unint64_t v20 = __ldaxr(v19);
        while (__stlxr(v20 - 1, v19));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }

      if (v104 < 0) {
        operator delete(__p);
      }
      int v21 = v100;
      if (v100)
      {
        uint64_t v22 = (unint64_t *)&v100->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(v22);
        while (__stlxr(v23 - 1, v22));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      int v24 = v99;
      if (v99)
      {
        __int16 v25 = (unint64_t *)&v99->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
    }

    sub_1001A9054(a1 + 760);
  }

  else
  {
    uint64_t v27 = *(void *)(a1 + 288);
    if (v27) {
      (*(void (**)(uint64_t, int *, uint64_t))(*(void *)v27 + 440LL))(v27, a3, a4);
    }
    sub_100246C40((uint64_t)v67, a4);
    *(void *)uint64_t buf = a1 + 320;
    if (*(double *)((char *)sub_10043B674( (uint64_t **)(a1 + 240),  (int *)(a1 + 320),  (uint64_t)&unk_1012CF090,  (_DWORD **)buf)
                   + 116) > 0.0)
    {
      uint64_t v29 = sub_10080E94C();
      *(_DWORD *)uint64_t buf = 0;
      double v30 = sub_10080EB58(v29, buf);
      *(void *)uint64_t buf = a1 + 320;
      double v31 = v30
          - *(double *)((char *)sub_10043B674( (uint64_t **)(a1 + 240),  (int *)(a1 + 320),  (uint64_t)&unk_1012CF090,  (_DWORD **)buf)
                      + 172);
      if (v31 >= 0.0 && v31 < 4.0)
      {
        *(void *)uint64_t buf = a1 + 320;
        uint64_t v66 = *(uint64_t *)((char *)sub_10043B674( (uint64_t **)(a1 + 240),  (int *)(a1 + 320),  (uint64_t)&unk_1012CF090,  (_DWORD **)buf)
                         + 100);
        *(void *)uint64_t buf = a1 + 320;
        uint64_t v65 = *(uint64_t *)((char *)sub_10043B674( (uint64_t **)(a1 + 240),  (int *)(a1 + 320),  (uint64_t)&unk_1012CF090,  (_DWORD **)buf)
                         + 108);
        *(void *)uint64_t buf = a1 + 320;
        if (*(double *)((char *)sub_10043B674( (uint64_t **)(a1 + 240),  (int *)(a1 + 320),  (uint64_t)&unk_1012CF090,  (_DWORD **)buf)
                       + 148) > 0.0)
        {
          *(void *)uint64_t buf = a1 + 320;
          if (*(double *)((char *)sub_10043B674( (uint64_t **)(a1 + 240),  (int *)(a1 + 320),  (uint64_t)&unk_1012CF090,  (_DWORD **)buf)
                         + 164) > 0.0)
          {
            *(void *)uint64_t buf = a1 + 320;
            double v33 = *(double *)((char *)sub_10043B674( (uint64_t **)(a1 + 240),  (int *)(a1 + 320),  (uint64_t)&unk_1012CF090,  (_DWORD **)buf)
                            + 100);
            *(void *)uint64_t buf = a1 + 320;
            double v34 = *(double *)((char *)sub_10043B674( (uint64_t **)(a1 + 240),  (int *)(a1 + 320),  (uint64_t)&unk_1012CF090,  (_DWORD **)buf)
                            + 108);
            *(void *)uint64_t buf = a1 + 320;
            double v35 = *(double *)((char *)sub_10043B674( (uint64_t **)(a1 + 240),  (int *)(a1 + 320),  (uint64_t)&unk_1012CF090,  (_DWORD **)buf)
                            + 140);
            *(void *)uint64_t buf = a1 + 320;
            __int16 v36 = sub_10043B674((uint64_t **)(a1 + 240), (int *)(a1 + 320), (uint64_t)&unk_1012CF090, (_DWORD **)buf);
            sub_1002953C8((double *)&v66, (double *)&v65, v33, v34, v31, v35, *(double *)((char *)v36 + 156));
          }
        }

        v67[60] = v66;
        v67[61] = v65;
        *(void *)uint64_t buf = a1 + 320;
        uint64_t v68 = *(uint64_t *)((char *)sub_10043B674( (uint64_t **)(a1 + 240),  (int *)(a1 + 320),  (uint64_t)&unk_1012CF090,  (_DWORD **)buf)
                         + 116);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        uint64_t v37 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v38 = v65;
          uint64_t v39 = v66;
          uint64_t v40 = v68;
          uint64_t v41 = sub_10080E94C();
          double v42 = sub_10080EF30(v41);
          *(_DWORD *)uint64_t buf = 134284545;
          *(void *)&uint8_t buf[4] = v39;
          __int16 v86 = 2049;
          uint64_t v87 = v38;
          __int16 v88 = 2050;
          uint64_t v89 = v40;
          __int16 v90 = 2048;
          double v91 = v31;
          __int16 v92 = 2050;
          double v93 = v42;
          _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "Accessory,propagated on-device GPS,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.1lf,dt,%.3f,propagat ion_us,%{public}.3f",  buf,  0x34u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          uint64_t v58 = qword_101934838;
          uint64_t v59 = v65;
          uint64_t v60 = v66;
          uint64_t v61 = v68;
          uint64_t v62 = sub_10080E94C();
          double v63 = sub_10080EF30(v62);
          v75.i32[3] = 134284545;
          uint64_t v76 = v60;
          __int16 v77 = 2049;
          uint64_t v78 = v59;
          __int16 v79 = 2050;
          uint64_t v80 = v61;
          __int16 v81 = 2048;
          double v82 = v31;
          __int16 v83 = 2050;
          double v84 = v63;
          __int16 v64 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v58,  2LL,  "Accessory,propagated on-device GPS,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.1lf,dt ,%.3f,propagation_us,%{public}.3f",  (char *)&v75.u64[1] + 4,  52);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onAccessoryNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v64);
          if (v64 != buf) {
            free(v64);
          }
        }
      }
    }

    int v43 = *a3;
    if (!*a3)
    {
      if ((*(_DWORD *)(a4 + 792) & 0xFFFFFFFE) == 2)
      {
        uint64_t v44 = sub_10042CC1C();
        if (v44)
        {
          if (!v44[1] || !*v44)
          {
            uint64_t v45 = *(void *)(a1 + 288);
            int v46 = v45 ? (*(uint64_t (**)(uint64_t))(*(void *)v45 + 448LL))(v45) : 0x7FFFFFFF;
            uint64_t v47 = *(void *)(a1 + 304);
            if (v47)
            {
            }
          }
        }
      }

      int v43 = *a3;
    }

    if (v43 == 9)
    {
      uint64_t v48 = *(void *)(a1 + 304);
      if (v48) {
        sub_100AF2BAC(v48);
      }
    }

    sub_100436870(a1, *(_DWORD *)(a1 + 328), v28, (unsigned int *)a3, (uint64_t)v67);

    id v49 = v73;
    if (v73)
    {
      __int16 v50 = (unint64_t *)&v73->__shared_owners_;
      do
        unint64_t v51 = __ldaxr(v50);
      while (__stlxr(v51 - 1, v50));
      if (!v51)
      {
        ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
        std::__shared_weak_count::__release_weak(v49);
      }
    }

    if (v72 < 0) {
      operator delete(v71);
    }
    __int16 v52 = v70;
    if (v70)
    {
      uint64_t v53 = (unint64_t *)&v70->__shared_owners_;
      do
        unint64_t v54 = __ldaxr(v53);
      while (__stlxr(v54 - 1, v53));
      if (!v54)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }

    uint64_t v55 = v69;
    if (v69)
    {
      __int16 v56 = (unint64_t *)&v69->__shared_owners_;
      do
        unint64_t v57 = __ldaxr(v56);
      while (__stlxr(v57 - 1, v56));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
  }

void sub_100438228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

void sub_10043828C(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v10 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v11);
  sub_10080EF64(v7, v11[0].i64);
  int v12 = 19;
  v11[0].i32[0] = 19;
  v11[0].i32[1] = sub_100FE4D78(&v12);
  uint64_t v8 = sub_100370E78();
  int v12 = 4;
  sub_10037C614(v8, (unsigned int *)&v12, v11, (int *)(a1 + 5044), &v10, a3, a4);
  sub_100436870(a1, *(_DWORD *)(a1 + 332), v9, (unsigned int *)a3, a4);
}

void sub_100438338(uint64_t a1, unsigned int a2, int *a3, uint64_t a4)
{
  unsigned int v9 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)v10);
  sub_10080EF64(v7, v10[0].i64);
  int v11 = 20;
  v10[0].i32[0] = 20;
  v10[0].i32[1] = sub_100FE4D78(&v11);
  uint64_t v8 = sub_100370E78();
  int v11 = 4;
  sub_10037C614(v8, (unsigned int *)&v11, v10, (int *)(a1 + 5044), (int *)&v9, a3, a4);
  sub_1006B9120(a1 + 344, v9, a3, a4);
}

uint64_t sub_1004383E4(uint64_t a1, uint64_t a2)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  int v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Setting simulation to %{public}d for all location providers",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v17[0] = 67240192;
    v17[1] = a2;
    int v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "Setting simulation to %{public}d for all location providers",  v17,  8);
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLLocationController::setSimulationEnabled(BOOL)", "%s\n", v15);
  }

  int v5 = *(void **)(a1 + 240);
  if (v5 != (void *)(a1 + 248))
  {
    __asm { FMOV            V0.2D, #-1.0 }

    __int128 v16 = _Q0;
    do
    {
      if (*((_DWORD *)v5 + 8))
      {
        *((_DWORD *)v5 + 24) = 0xFFFF;
        *(void *)((char *)v5 + 108) = 0LL;
        *(void *)((char *)v5 + 10sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
        *(_OWORD *)((char *)v5 + 116) = xmmword_1012E0070;
        *(_OWORD *)((char *)v5 + 132) = v16;
        *(_OWORD *)((char *)v5 + 148) = v16;
        *(_OWORD *)((char *)v5 + 164) = v16;
        *((_DWORD *)v5 + 45) = 0;
        v5[24] = 0LL;
        v5[25] = 0LL;
        v5[23] = 0xBFF0000000000000LL;
        *((_DWORD *)v5 + 52) = 0;
        *(void *)((char *)v5 + 212) = 0xBFF0000000000000LL;
        *((_DWORD *)v5 + 55) = 0x7FFFFFFF;
        v5[29] = 0LL;
        v5[30] = 0LL;
        v5[28] = 0LL;
        *((_BYTE *)v5 + 248) = 0;
        *(void *)uint64_t buf = v5 + 5;
        int v11 = sub_10000C858((uint64_t **)(a1 + 264), (int *)v5 + 10, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_10047DC40((uint64_t)v11[5], a2);
      }

      int v12 = (void *)v5[1];
      if (v12)
      {
        do
        {
          uint64_t v13 = v12;
          int v12 = (void *)*v12;
        }

        while (v12);
      }

      else
      {
        do
        {
          uint64_t v13 = (void *)v5[2];
          _ZF = *v13 == (void)v5;
          int v5 = v13;
        }

        while (!_ZF);
      }

      int v5 = v13;
    }

    while (v13 != (void *)(a1 + 248));
  }

  (*(void (**)(void))(**(void **)(a1 + 288) + 96LL))(*(void *)(a1 + 288));
  *(_BYTE *)(a1 + 664) = a2;
  *(_DWORD *)uint64_t buf = 0;
  (*(void (**)(uint64_t, uint8_t *))(*(void *)a1 + 120LL))(a1, buf);
  *(_DWORD *)uint64_t buf = 9;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint8_t *))(*(void *)a1 + 120LL))(a1, buf);
  *(void *)(a1 + 232) = 0LL;
  return result;
}

void sub_1004386D4()
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  unsigned __int8 v0 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "#techstatus,posting notification", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v3[0] = 0;
    uint64_t v2 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#techstatus,posting notification",  v3,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::sendTechStatusNotification()", "%s\n", v2);
  }

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, CLTechStatusChangedNotification, 0LL, 0LL, 0);
}

void sub_100438878(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 240);
  if (v2 == (void *)(a1 + 248))
  {
    int v3 = 0;
  }

  else
  {
    do
    {
      int v3 = *((_BYTE *)v2 + 903) != 0;
      if (*((_BYTE *)v2 + 903)) {
        break;
      }
      int v4 = (void *)v2[1];
      if (v4)
      {
        do
        {
          int v5 = v4;
          int v4 = (void *)*v4;
        }

        while (v4);
      }

      else
      {
        do
        {
          int v5 = (void *)v2[2];
          BOOL v6 = *v5 == (void)v2;
          uint64_t v2 = v5;
        }

        while (!v6);
      }

      uint64_t v2 = v5;
    }

    while (v5 != (void *)(a1 + 248));
  }

  if (*(unsigned __int8 *)(a1 + 662) != v3)
  {
    *(_BYTE *)(a1 + 662) = v3;
    sub_100246564((uint64_t)v18);
    unsigned __int8 v21 = *(_BYTE *)(a1 + 662);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v7 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 67240192;
      int v28 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Notifying clients of providers active update to %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      v26[0] = 67240192;
      v26[1] = v21;
      unint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "Notifying clients of providers active update to %{public}d",  v26,  8);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::checkActiveProviders()", "%s\n", v17);
    }

    *(_DWORD *)uint64_t buf = 11;
    (*(void (**)(uint64_t, uint8_t *, _BYTE *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  v18,  0LL,  0xFFFFFFFFLL,  0LL);

    uint64_t v8 = v24;
    if (v24)
    {
      p_shared_owners = (unint64_t *)&v24->__shared_owners_;
      do
        unint64_t v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }

    if (v23 < 0) {
      operator delete(__p);
    }
    int v11 = v20;
    if (v20)
    {
      int v12 = (unint64_t *)&v20->__shared_owners_;
      do
        unint64_t v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }

    unint64_t v14 = v19;
    if (v19)
    {
      int v15 = (unint64_t *)&v19->__shared_owners_;
      do
        unint64_t v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
  }

void sub_100438B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_100438BC0(uint64_t a1)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  uint64_t v2 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning,Clearing all location data from the controller",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v13[0] = 0;
    int v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationController,#Warning,Clearing all location data from the controller",  v13,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::clearAllLocationData()", "%s\n", v12);
  }

  (*(void (**)(uint64_t))(*(void *)a1 + 304LL))(a1);
  (*(void (**)(void))(**(void **)(a1 + 288) + 96LL))(*(void *)(a1 + 288));
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(a1 + 288) + 144LL))(*(void *)(a1 + 288));
  int v4 = *(void **)(a1 + 240);
  if (v4 != (void *)(a1 + 248))
  {
    __asm { FMOV            V1.2D, #-1.0 }

    do
    {
      if (*((_DWORD *)v4 + 8))
      {
        *((_DWORD *)v4 + 24) = 0xFFFF;
        *(void *)((char *)v4 + 108) = 0LL;
        *(void *)((char *)v4 + 10sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
        *(_OWORD *)((char *)v4 + 116) = xmmword_1012E0070;
        *(_OWORD *)((char *)v4 + 132) = _Q1;
        *(_OWORD *)((char *)v4 + 148) = _Q1;
        *(_OWORD *)((char *)v4 + 164) = _Q1;
        *((_DWORD *)v4 + 45) = 0;
        v4[24] = 0LL;
        v4[25] = 0LL;
        v4[23] = 0xBFF0000000000000LL;
        *((_DWORD *)v4 + 52) = 0;
        *(void *)((char *)v4 + 212) = 0xBFF0000000000000LL;
        *((_DWORD *)v4 + 55) = 0x7FFFFFFF;
        v4[29] = 0LL;
        v4[30] = 0LL;
        v4[28] = 0LL;
        *((_BYTE *)v4 + 248) = 0;
      }

      unint64_t v10 = (void *)v4[1];
      if (v10)
      {
        do
        {
          int v11 = v10;
          unint64_t v10 = (void *)*v10;
        }

        while (v10);
      }

      else
      {
        do
        {
          int v11 = (void *)v4[2];
          _ZF = *v11 == (void)v4;
          int v4 = v11;
        }

        while (!_ZF);
      }

      int v4 = v11;
    }

    while (v11 != (void *)(a1 + 248));
  }

  return result;
}

void sub_100438E28(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v28 = a2;
  uint64_t v7 = sub_10080E94C();
  sub_1007B8BEC((uint64_t)buf);
  sub_10080EF64(v7, (uint64_t *)buf);
  *(_DWORD *)uint64_t buf = 3;
  v27[0] = 3;
  v27[1] = sub_100FE4D78((int *)buf);
  uint64_t v8 = sub_100370E78();
  *(_DWORD *)uint64_t buf = 4;
  sub_100373EF4(v8, (unsigned int *)buf, (int32x4_t *)v27, (int *)(a1 + 5044), &v28, a3, a4);
  if (*a3 == 4)
  {
    int v13 = *(_DWORD *)(a4 + 188);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    unint64_t v14 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v30 = 2082;
      double v31 = "";
      __int16 v32 = 1026;
      BOOL v33 = v13 == 1;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:LocationController,Location Services, enabled:%{public}d}",  buf,  0x18u);
    }

    if (*(_BYTE *)(a1 + 5041) && v13 == 1)
    {
      if (*(_BYTE *)(sub_100370E78() + 24))
      {
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        int v15 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "#locctl,#rec,session already open,no-op",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934830 != -1) {
            dispatch_once(&qword_101934830, &stru_101838C20);
          }
          v26[0] = 0;
          unint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "#locctl,#rec,session already open,no-op",  v26,  2);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onClientNotification(int, const CLClientManager_Type::Notification &, const CLCli entManager_Type::NotificationData &)",  "%s\n",  v16);
        }
      }

      else
      {
        uint64_t v18 = sub_100370E78();
        sub_100371644(v18);
        uint64_t v19 = sub_100370E78();
        sub_100371B44(v19);
        *(void *)uint64_t buf = 0x4000000000000000LL;
        sub_10041FF5C(a1, (double *)buf);
      }
    }

    else if (*(_BYTE *)(a1 + 5041) && v13 != 1)
    {
      uint64_t v17 = sub_100370E78();
      sub_10037141C(v17);
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    unint64_t v20 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning,Location Services state changed,clearing local cache",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      v26[0] = 0;
      LODWORD(v25) = 2;
      int v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationController,#Warning,Location Services state changed,clearing local cache",  v26,  v25);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientM anager_Type::NotificationData &)",  "%s\n",  v24);
    }

    sub_100427678(a1, 6, *(_DWORD *)(a4 + 188) != 1);
    sub_100438BC0(a1);
    uint64_t v21 = *(void *)(a1 + 304);
    if (v21) {
      sub_100AF2758(v21, v13 == 1);
    }
  }

  else if (!*a3)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    unsigned int v9 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "LocationController,#Warning,Location Services reset,clearing local cache",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      v26[0] = 0;
      uint64_t v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationController,#Warning,Location Services reset,clearing local cache",  v26,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientM anager_Type::NotificationData &)",  "%s\n",  v22);
    }

    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101838C80);
    }
    unint64_t v10 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "@ClxNotify, LpReset, 0", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_101838C80);
      }
      v26[0] = 0;
      LODWORD(v25) = 2;
      char v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "@ClxNotify, LpReset, 0",  v26,  v25);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientM anager_Type::NotificationData &)",  "%s\n",  v23);
    }

    sub_100438BC0(a1);
    id v11 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLClientManager");
    if (byte_101995797 >= 0) {
      int v12 = &qword_101995780;
    }
    else {
      int v12 = (uint64_t *)qword_101995780;
    }
    objc_msgSend( v11,  "resetNotificationConsumedForIdentifier:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  }

void sub_100439540(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 1872)) {
    int v2 = 1;
  }
  else {
    int v2 = *(_BYTE *)(a1 + 1704) == 0;
  }
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  int v3 = (_BYTE *)(a1 + 5112);
  int v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 67240192;
    int v15 = v2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "LocationController,gnss debounce benefit low:%{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    v13[0] = 67240192;
    v13[1] = v2;
    id v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationController,gnss debounce benefit low:%{public}d",  v13,  8);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::tickGnssDebounce()", "%s\n", v11);
  }

  if (*v3 != v2)
  {
    *int v3 = v2;
    if (*(_DWORD *)(a1 + 320))
    {
      int v5 = (int *)(a1 + 320);
      if (*(_BYTE *)(a1 + 5113) || ((v2 ^ 1) & 1) != 0)
      {
        char v9 = v2;
        if (!*(_BYTE *)(a1 + 5113)) {
          char v9 = 1;
        }
        if ((v9 & 1) == 0)
        {
          unint64_t v10 = sub_10000C6DC(a1 + 264, v5);
          [*(id *)(*v10 + 16) unregister:*(void *)(*v10 + 8) forNotification:44];
          *(_BYTE *)(a1 + 5113) = 0;
        }
      }

      else
      {
        BOOL v6 = sub_10000C6DC(a1 + 264, v5);
        [*(id *)(*v6 + 16) register:*(void *)(*v6 + 8) forNotification:44 registrationInfo:0];
        *(_BYTE *)(a1 + 5113) = 1;
      }
    }

    else
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v7 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "LocationController,GpsProvider not available for Gnss debounce notification",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        LOWORD(v13[0]) = 0;
        LODWORD(v12) = 2;
        uint64_t v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationController,GpsProvider not available for Gnss debounce notification",  v13,  v12);
        sub_10029211C("Generic", 1LL, 0, 2LL, "void CLLocationController::tickGnssDebounce()", "%s\n", v8);
      }
    }
  }

void sub_1004398BC(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 728);
  if (vabdd_f64(*(double *)(a2 + 16), v2) >= 1.0)
  {
    if (*(_BYTE *)(a1 + 744)) {
      *(_BYTE *)(a1 + 744) = 0;
    }
    __int128 v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 712) = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 728) = v4;
    *(_BYTE *)(a1 + 744) = 1;
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v5 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v6 = *(_DWORD *)(a1 + 712);
      uint64_t v7 = *(void *)(a1 + 720);
      uint64_t v8 = *(void *)(a1 + 728);
      uint64_t v9 = sub_10080E94C();
      *(_DWORD *)uint64_t buf = 67241216;
      int v26 = v6;
      __int16 v27 = 2050;
      uint64_t v28 = v7;
      __int16 v29 = 2050;
      uint64_t v30 = v8;
      __int16 v31 = 2050;
      double v32 = v2;
      __int16 v33 = 2050;
      double v34 = sub_10080EF30(v9);
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "LocationController,gnssPredictedAvailability,%{public}d,probability,%{public}.3f,timestamp,%{public}.3f,lastPred ictionTimestamp,%{public}.3f,propagation_us,%{public}.3f",  buf,  0x30u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v10 = qword_101934838;
      int v11 = *(_DWORD *)(a1 + 712);
      uint64_t v12 = *(void *)(a1 + 720);
      uint64_t v13 = *(void *)(a1 + 728);
      uint64_t v14 = sub_10080E94C();
      v16[0] = 67241216;
      v16[1] = v11;
      __int16 v17 = 2050;
      uint64_t v18 = v12;
      __int16 v19 = 2050;
      uint64_t v20 = v13;
      __int16 v21 = 2050;
      double v22 = v2;
      __int16 v23 = 2050;
      double v24 = sub_10080EF30(v14);
      int v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  2LL,  "LocationController,gnssPredictedAvailability,%{public}d,probability,%{public}.3f,timestamp,%{publi c}.3f,lastPredictionTimestamp,%{public}.3f,propagation_us,%{public}.3f",  v16,  48);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::predictedGnssAvailabilityCallback(const CLGnssAvailabilityPredictor::Output &)",  "%s\n",  v15);
    }
  }

void sub_100439B20(void *a1@<X0>, void *a2@<X8>)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  __int128 v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = a1[12];
    *(_DWORD *)uint64_t buf = 134217984;
    *(void *)uint64_t v18 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "LocationController,requested client list,size,%zu",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v13 = (void *)a1[12];
    LODWORD(__p[0]) = 134217984;
    *(void **)((char *)__p + 4) = v13;
    uint64_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationController,requested client list,size,%zu",  (size_t)__p);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLLocationControllerRecorder_Types::ClientList CLLocationController::getLocationControllerClients() const",  "%s\n",  v14);
  }

  a2[2] = 0LL;
  a2[1] = 0LL;
  *a2 = a2 + 1;
  int v6 = (void *)a1[10];
  if (v6 != a1 + 11)
  {
    do
    {
      sub_1010DDBC0(__p, (char *)objc_msgSend(objc_msgSend((id)v6[8], "description"), "UTF8String"));
      *(_DWORD *)uint64_t buf = *((_DWORD *)v6 + 8);
      if (SHIBYTE(v16) < 0)
      {
        sub_1010DD48C(&v18[1], __p[0], (unint64_t)__p[1]);
        uint64_t v20 = 0LL;
        uint64_t v21 = 0LL;
        __int16 v19 = &v20;
        if (SHIBYTE(v16) < 0) {
          operator delete(__p[0]);
        }
      }

      else
      {
        *(_OWORD *)&v18[1] = *(_OWORD *)__p;
        *(void *)&v18[5] = v16;
        uint64_t v20 = 0LL;
        uint64_t v21 = 0LL;
        __int16 v19 = &v20;
      }

      uint64_t v7 = (int *)v6[5];
      if (v7 != (int *)(v6 + 6))
      {
        do
        {
          sub_10004A8FC(&v19, v7 + 7, v7 + 7);
          uint64_t v8 = (int *)*((void *)v7 + 1);
          if (v8)
          {
            do
            {
              uint64_t v9 = v8;
              uint64_t v8 = *(int **)v8;
            }

            while (v8);
          }

          else
          {
            do
            {
              uint64_t v9 = (int *)*((void *)v7 + 2);
              BOOL v10 = *(void *)v9 == (void)v7;
              uint64_t v7 = v9;
            }

            while (!v10);
          }

          uint64_t v7 = v9;
        }

        while (v9 != (int *)(v6 + 6));
      }

      sub_10043BEE8((uint64_t)a2, (int *)buf, (uint64_t)buf);
      sub_10043B0A8((uint64_t)buf);
      int v11 = (void *)v6[1];
      if (v11)
      {
        do
        {
          uint64_t v12 = v11;
          int v11 = (void *)*v11;
        }

        while (v11);
      }

      else
      {
        do
        {
          uint64_t v12 = (void *)v6[2];
          BOOL v10 = *v12 == (void)v6;
          int v6 = v12;
        }

        while (!v10);
      }

      int v6 = v12;
    }

    while (v12 != a1 + 11);
  }

void sub_100439E24( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
}

void sub_100439E70(uint64_t a1, void *a2)
{
  if (a2 && *(void *)(a1 + 5104) && [a2 _placeInference])
  {
    if (objc_msgSend(objc_msgSend(a2, "_placeInference"), "_loiIdentifier"))
    {
      objc_msgSend(*(id *)(a1 + 5104), "fetchLocationOfInterestWithIdentifier:withReply:");
    }

    else
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      __int128 v4 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "LocationController,updateCAHomeLoiFromVisit,invalid loi identifier",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        v6[0] = 0;
        uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  16LL,  "LocationController,updateCAHomeLoiFromVisit,invalid loi identifier",  v6,  2);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationController::updateCAHomeLoiFromVisit(const CLVisit *)",  "%s\n",  v5);
      }
    }
  }

void sub_10043A06C(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v5 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 68289539;
      *(_DWORD *)__int16 v86 = 0;
      *(_WORD *)&v86[4] = 2082;
      *(void *)&v86[6] = "";
      *(_WORD *)&v86[14] = 2113;
      *(void *)&v86[16] = v6;
      *(_WORD *)&v86[24] = 2114;
      *(void *)&v86[26] = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:LocationController,updateCAHomeLoiFromVisit,error fetching LOI, loiIdentifier:%{pri vate, location:escape_only}@, error:%{public, location:escape_only}@}",  buf,  0x26u);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
    }

    uint64_t v7 = qword_101934838;
    if (os_signpost_enabled((os_log_t)qword_101934838))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 68289539;
      *(_DWORD *)__int16 v86 = 0;
      *(_WORD *)&v86[4] = 2082;
      *(void *)&v86[6] = "";
      *(_WORD *)&v86[14] = 2113;
      *(void *)&v86[16] = v8;
      *(_WORD *)&v86[24] = 2114;
      *(void *)&v86[26] = a3;
      uint64_t v9 = "LocationController,updateCAHomeLoiFromVisit,error fetching LOI";
      BOOL v10 = "{msg%{public}.0s:LocationController,updateCAHomeLoiFromVisit,error fetching LOI, loiIdentifier:%"
            "{private, location:escape_only}@, error:%{public, location:escape_only}@}";
      int v11 = (os_log_s *)v7;
      uint32_t v12 = 38;
LABEL_9:
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v11,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  v9,  v10,  buf,  v12);
    }
  }

  else
  {
    if (a2)
    {
      uint64_t v14 = *(void *)(a1 + 48);
      int v15 = objc_alloc(&OBJC_CLASS___CLVisit);
      objc_msgSend(objc_msgSend(a2, "location"), "latitude");
      CLLocationDegrees v17 = v16;
      objc_msgSend(objc_msgSend(a2, "location"), "longitude");
      CLLocationCoordinate2D v19 = CLLocationCoordinate2DMake(v17, v18);
      objc_msgSend(objc_msgSend(a2, "location"), "horizontalUncertainty");
      uint64_t v21 =  -[CLVisit initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:placeInference:]( v15,  "initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:placeInference:",  [*(id *)(a1 + 40) arrivalDate],  objc_msgSend(*(id *)(a1 + 40), "departureDate"),  objc_msgSend(*(id *)(a1 + 40), "detectionDate"),  objc_msgSend(*(id *)(a1 + 40), "_placeInference"),  v19.latitude,  v19.longitude,  v20);
      *(_DWORD *)uint64_t buf = 23;
      v55[0] = 23;
      v55[1] = sub_100FE4D78((int *)buf);
      uint64_t v22 = sub_100370E78();
      sub_10037F658(v22, (int32x4_t *)v55, (int *)(v14 + 5044), v21, 1);
      if ([a2 type])
      {
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        __int16 v23 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
        {
          unsigned int v24 = [a2 type];
          *(_DWORD *)uint64_t buf = 67109120;
          *(_DWORD *)__int16 v86 = v24;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "LocationController,updateCAHomeLoiFromVisit,place type is not home,%d",  buf,  8u);
        }

        if (!sub_1002921D0(115, 2)) {
          return;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        uint64_t v25 = qword_101934838;
        unsigned int v26 = [a2 type];
        int v66 = 67109120;
        LODWORD(v67) = v26;
        __int16 v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v25,  2LL,  "LocationController,updateCAHomeLoiFromVisit,place type is not home,%d",  &v66);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::updateCAHomeLoiFromVisit(const CLVisit *)_block_invoke",  "%s\n",  v27);
      }

      else
      {
        if (!objc_msgSend(objc_msgSend(a2, "visits"), "count")) {
          return;
        }
        [a2 confidence];
        if (v32 < 0.0) {
          return;
        }
        int v66 = 0xFFFF;
        __int128 v70 = xmmword_1012EA5D0;
        __asm { FMOV            V0.2D, #-1.0 }

        __int128 v71 = _Q0;
        __int128 v72 = _Q0;
        unint64_t v73 = 0xBFF0000000000000LL;
        int v74 = 0;
        uint64_t v76 = 0LL;
        uint64_t v77 = 0LL;
        unint64_t v75 = 0xBFF0000000000000LL;
        unint64_t v79 = 0xBFF0000000000000LL;
        int v78 = 0;
        int v80 = 0x7FFFFFFF;
        uint64_t v82 = 0LL;
        uint64_t v83 = 0LL;
        uint64_t v81 = 0LL;
        char v84 = 0;
        objc_msgSend(objc_msgSend(a2, "location"), "latitude");
        uint64_t v67 = v38;
        objc_msgSend(objc_msgSend(a2, "location"), "longitude");
        uint64_t v68 = v39;
        objc_msgSend(objc_msgSend(a2, "location"), "horizontalUncertainty");
        uint64_t v69 = v40;
        __n128 v41 = sub_100D8BFC4(v14 + 5120, (uint64_t)&v66);
        uint64_t v42 = *(void *)(v14 + 288);
        if (v42) {
          (*(void (**)(uint64_t, uint64_t, __n128))(*(void *)v42 + 416LL))(v42, 1LL, v41);
        }
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        int v43 = (os_log_s *)qword_101934838;
        if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
        {
          uint64_t v44 = v67;
          uint64_t v45 = v68;
          uint64_t v46 = v69;
          uint64_t v47 = sub_10080E94C();
          double v48 = sub_10080EF30(v47);
          *(_DWORD *)uint64_t buf = 136381699;
          *(void *)__int16 v86 = "home";
          *(_WORD *)&v86[8] = 2049;
          *(void *)&v86[10] = v44;
          *(_WORD *)&v86[18] = 2049;
          *(void *)&v86[20] = v45;
          *(_WORD *)&v86[28] = 2050;
          *(void *)&v86[30] = v46;
          __int16 v87 = 2050;
          double v88 = v48;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_INFO,  "LocationController,updateCAHomeLoiFromVisit,LOI %{private}s location latitude,%{private}.7f,longitude,%{priv ate}.7f,acc,%{public}.2f,propagation_us,%{public}.3f",  buf,  0x34u);
        }

        if (!sub_1002921D0(115, 2)) {
          return;
        }
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101838C20);
        }
        uint64_t v49 = qword_101934838;
        uint64_t v50 = v67;
        uint64_t v51 = v68;
        uint64_t v52 = v69;
        uint64_t v53 = sub_10080E94C();
        double v54 = sub_10080EF30(v53);
        int v56 = 136381699;
        unint64_t v57 = "home";
        __int16 v58 = 2049;
        uint64_t v59 = v50;
        __int16 v60 = 2049;
        uint64_t v61 = v51;
        __int16 v62 = 2050;
        uint64_t v63 = v52;
        __int16 v64 = 2050;
        double v65 = v54;
        __int16 v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v49,  1LL,  "LocationController,updateCAHomeLoiFromVisit,LOI %{private}s location latitude,%{private}.7f,long itude,%{private}.7f,acc,%{public}.2f,propagation_us,%{public}.3f",  &v56,  52);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::updateCAHomeLoiFromVisit(const CLVisit *)_block_invoke",  "%s\n",  v27);
      }

      free(v27);
      return;
    }

    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    uint64_t v28 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_ERROR))
    {
      uint64_t v29 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)__int16 v86 = 0;
      *(_WORD *)&v86[4] = 2082;
      *(void *)&v86[6] = "";
      *(_WORD *)&v86[14] = 2113;
      *(void *)&v86[16] = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:LocationController,updateCAHomeLoiFromVisit,received nil LOI, loiIdentifier:%{priva te, location:escape_only}@}",  buf,  0x1Cu);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
    }

    uint64_t v30 = qword_101934838;
    if (os_signpost_enabled((os_log_t)qword_101934838))
    {
      uint64_t v31 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)__int16 v86 = 0;
      *(_WORD *)&v86[4] = 2082;
      *(void *)&v86[6] = "";
      *(_WORD *)&v86[14] = 2113;
      *(void *)&v86[16] = v31;
      uint64_t v9 = "LocationController,updateCAHomeLoiFromVisit,received nil LOI";
      BOOL v10 = "{msg%{public}.0s:LocationController,updateCAHomeLoiFromVisit,received nil LOI, loiIdentifier:%{p"
            "rivate, location:escape_only}@}";
      int v11 = (os_log_s *)v30;
      uint32_t v12 = 28;
      goto LABEL_9;
    }
  }

void sub_10043A870(uint64_t a1, void *a2)
{
  if ([a2 referenceFrame] != (id)1)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v3 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 67240192;
      unsigned int v9 = [a2 referenceFrame];
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_FAULT,  "LocationController,onBackgroundInertialOdometryState, unsupported reference frame: %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101838C20);
      }
      uint64_t v4 = qword_101934838;
      v7[0] = 67240192;
      v7[1] = [a2 referenceFrame];
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v4,  17LL,  "LocationController,onBackgroundInertialOdometryState, unsupported reference frame: %{public}d",  v7,  8);
      uint64_t v6 = (uint8_t *)v5;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLLocationController::onBackgroundInertialOdometryState(const CMOdometry *)",  "%s\n",  v5);
      if (v6 != buf) {
        free(v6);
      }
    }
  }

uint64_t sub_10043AA3C(uint64_t a1, uint64_t a2)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_101838C20);
  }
  uint64_t v4 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(_DWORD *)(a2 + 1512);
    uint64_t v6 = *(void *)(a2 + 1520);
    *(_DWORD *)uint64_t buf = 67240448;
    int v15 = v5;
    __int16 v16 = 2050;
    uint64_t v17 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "#CLProactiveLoc,ntfy,sess start,%{public}d,gnss usage sec,%{public}0.2f",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_101838C20);
    }
    int v8 = *(_DWORD *)(a2 + 1512);
    uint64_t v9 = *(void *)(a2 + 1520);
    v11[0] = 67240448;
    v11[1] = v8;
    __int16 v12 = 2050;
    uint64_t v13 = v9;
    BOOL v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "#CLProactiveLoc,ntfy,sess start,%{public}d,gnss usage sec,%{public}0.2f",  v11,  18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLLocationController::onProactiveLocationSessionNotification(const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v10);
  }

  *(_DWORD *)uint64_t buf = 46;
  return (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  a2,  1LL,  0xFFFFFFFFLL,  0LL);
}

void sub_10043AC3C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  int v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLLocationController");
  sub_10047D890((uint64_t)v8, (uint64_t *)__p, a3, a1, a2);
  *int v8 = &off_101838B98;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10043ACD4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_10043AD00(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_10043AD2C(id a1)
{
  qword_101934498 = (uint64_t)os_log_create("com.apple.locationd.Position", "TrackRun");
}

void sub_10043AD58(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_10043AD88(uint64_t a1)
{
}

void sub_10043AD90(id a1)
{
  qword_101934888 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_10043ADBC(uint64_t a1)
{
  sub_10000AE14(a1 + 1160);
  sub_10000AE14(a1 + 800);
  sub_10000AE14(a1 + 680);
  return a1;
}

void sub_10043AE44(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_10043AE70(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_10043AE9C(uint64_t a1, int a2, __int128 *a3, __int128 *a4, int a5, char a6, char a7)
{
  *(_DWORD *)a1 = a2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 8), *(void **)a3, *((void *)a3 + 1));
  }

  else
  {
    __int128 v12 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v12;
  }

  uint64_t v13 = (_BYTE *)(a1 + 32);
  if (*((char *)a4 + 23) < 0)
  {
    sub_1010DD48C(v13, *(void **)a4, *((void *)a4 + 1));
  }

  else
  {
    __int128 v14 = *a4;
    *(void *)(a1 + 48) = *((void *)a4 + 2);
    *(_OWORD *)uint64_t v13 = v14;
  }

  *(_DWORD *)(a1 + 56) = 0xFFFF;
  *(void *)(a1 + 68) = 0LL;
  *(void *)(a1 + 6sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(_OWORD *)(a1 + 76) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 92) = _Q0;
  *(_OWORD *)(a1 + 108) = _Q0;
  *(_OWORD *)(a1 + 124) = _Q0;
  *(_DWORD *)(a1 + 14sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
  *(void *)(a1 + 152) = 0LL;
  *(void *)(a1 + 16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(void *)(a1 + 144) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 168) = 0;
  *(void *)(a1 + 172) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 18sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0x7FFFFFFF;
  *(void *)(a1 + 192) = 0LL;
  *(void *)(a1 + 20sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(void *)(a1 + 184) = 0LL;
  *(_BYTE *)(a1 + 208) = 0;
  sub_100869DC8(a1 + 216);
  *(_DWORD *)(a1 + 856) = a5;
  *(_BYTE *)(a1 + 86sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = a6;
  *(_BYTE *)(a1 + 861) = a7;
  *(_WORD *)(a1 + 862) = 1;
  *(void *)(a1 + 864) = 0LL;
  return a1;
}

void sub_10043AFAC(_Unwind_Exception *exception_object)
{
}

void sub_10043AFC8(id a1)
{
  qword_101934A98 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

uint64_t sub_10043AFF4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v2 != -1) {
    ((void (*)(char *, uint64_t))*(&off_101838CC0 + v2))(&v4, a1);
  }
  *(_DWORD *)(a1 + 24) = -1;
  return a1;
}

void sub_10043B064(uint64_t a1, uint64_t a2)
{
}

void sub_10043B07C(id a1)
{
  qword_101934988 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

uint64_t sub_10043B0A8(uint64_t a1)
{
  return a1;
}

void sub_10043B0E4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10043B0E4(a1, *a2);
    sub_10043B0E4(a1, a2[1]);
    sub_10043B12C((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_10043B12C(uint64_t a1)
{
}

void sub_10043B178(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10043B178(a1, *a2);
    sub_10043B178(a1, a2[1]);
    uint64_t v4 = a2[5];
    a2[5] = 0LL;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
    }
    operator delete(a2);
  }

void sub_10043B1D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_100AEEB74();
    operator delete(v4);
  }

void *sub_10043B204(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_101838D30;
  result[1] = v3;
  return result;
}

uint64_t sub_10043B238(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_101838D30;
  a2[1] = v2;
  return result;
}

id sub_10043B254(uint64_t a1)
{
  return objc_msgSend( objc_msgSend(objc_msgSend(**(id **)(a1 + 8), "vendor"), "proxyForService:", @"CLClientManager"),  "syncgetNonSystemLocationClientKeys");
}

uint64_t sub_10043B27C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_10043B2B8()
{
}

void *sub_10043B2CC(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_101838DC0;
  result[1] = v3;
  return result;
}

uint64_t sub_10043B300(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_101838DC0;
  a2[1] = v2;
  return result;
}

id sub_10043B31C(uint64_t a1)
{
  return objc_msgSend( objc_msgSend(objc_msgSend(**(id **)(a1 + 8), "vendor"), "proxyForService:", @"CLClientManager"),  "syncgetNonSystemLocationClientKeys");
}

uint64_t sub_10043B344(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_10043B380()
{
}

void *sub_10043B394(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_101838E40;
  result[1] = v3;
  return result;
}

uint64_t sub_10043B3C8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_101838E40;
  a2[1] = v2;
  return result;
}

uint64_t sub_10043B3E4(uint64_t a1, int *a2)
{
  return sub_1004227C8(*(void *)(a1 + 8), a2);
}

uint64_t sub_10043B3EC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_10043B428()
{
}

void *sub_10043B43C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_101838ED0;
  result[1] = v3;
  return result;
}

uint64_t sub_10043B470(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_101838ED0;
  a2[1] = v2;
  return result;
}

void sub_10043B48C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10043B494(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_10043B4D0()
{
}

void *sub_10043B4E4(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_101838F60;
  result[1] = v3;
  return result;
}

uint64_t sub_10043B518(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_101838F60;
  a2[1] = v2;
  return result;
}

uint64_t sub_10043B534(uint64_t a1, uint64_t a2)
{
  return sub_10043AA3C(*(void *)(a1 + 8), a2);
}

uint64_t sub_10043B53C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_10043B578()
{
}

void *sub_10043B58C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_101838FF0;
  result[1] = v3;
  return result;
}

uint64_t sub_10043B5C0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_101838FF0;
  a2[1] = v2;
  return result;
}

uint64_t sub_10043B5DC(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 8) + 288LL);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 424LL))(result);
  }
  return result;
}

uint64_t sub_10043B5F8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_10043B634()
{
}

__n128 sub_10043B640@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 112) = v2;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a2 + 14sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = *(_OWORD *)(a1 + 172);
  __int128 v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 48) = v3;
  __int128 v4 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 8sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  __int128 v6 = *(_OWORD *)(a1 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v6;
  return result;
}

uint64_t **sub_10043B674(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  __int128 v6 = a1[1];
  int v8 = a1 + 1;
  uint64_t v9 = a1 + 1;
  if (v6)
  {
    int v10 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (uint64_t **)v6;
        int v11 = *((_DWORD *)v6 + 8);
        if (v10 >= v11) {
          break;
        }
        __int128 v6 = *v9;
        int v8 = v9;
        if (!*v9) {
          goto LABEL_9;
        }
      }

      if (v11 >= v10) {
        break;
      }
      __int128 v6 = v9[1];
      if (!v6)
      {
        int v8 = v9 + 1;
        goto LABEL_9;
      }
    }
  }

  else
  {
LABEL_9:
    __int128 v12 = (uint64_t *)operator new(0x390uLL);
    v14[1] = v7;
    *((_DWORD *)v12 + 8) = **a4;
    sub_10043B75C((uint64_t)(v12 + 5));
    char v15 = 1;
    sub_1000085FC(a1, (uint64_t)v9, v8, v12);
    v14[0] = 0LL;
    sub_10043B800((uint64_t)v14, 0LL);
    return (uint64_t **)v12;
  }

  return v9;
}

uint64_t sub_10043B75C(uint64_t a1)
{
  *(_DWORD *)a1 = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 4sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0u;
  *(_DWORD *)(a1 + 56) = 0xFFFF;
  *(void *)(a1 + 68) = 0LL;
  *(void *)(a1 + 6sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(_OWORD *)(a1 + 76) = xmmword_1012E0070;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 92) = _Q0;
  *(_OWORD *)(a1 + 108) = _Q0;
  *(_OWORD *)(a1 + 124) = _Q0;
  *(_DWORD *)(a1 + 14sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0;
  *(void *)(a1 + 152) = 0LL;
  *(void *)(a1 + 16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(void *)(a1 + 144) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 168) = 0;
  *(void *)(a1 + 172) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 18sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0x7FFFFFFF;
  *(void *)(a1 + 184) = 0LL;
  *(void *)(a1 + 192) = 0LL;
  *(_BYTE *)(a1 + 208) = 0;
  *(void *)(a1 + 20sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  sub_100869DC8(a1 + 216);
  *(_DWORD *)(a1 + 856) = 0;
  *(_DWORD *)(a1 + 86sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 1;
  *(void *)(a1 + 864) = 0LL;
  return a1;
}

void sub_10043B800(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_10043B12C((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

void sub_10043B844(void ***a1)
{
  uint64_t v1 = *a1;
  __int128 v2 = (char *)**a1;
  if (v2)
  {
    __int128 v4 = (char *)v1[1];
    int v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        __int128 v6 = v4 - 40;
        sub_10043AFF4((uint64_t)(v4 - 32));
        __int128 v4 = v6;
      }

      while (v6 != v2);
      int v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

uint64_t sub_10043B8B8(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x666666666666666LL) {
    sub_100007008();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x333333333333333LL) {
    unint64_t v9 = 0x666666666666666LL;
  }
  else {
    unint64_t v9 = v5;
  }
  _DWORD v14[4] = a1 + 2;
  if (v9) {
    int v10 = (char *)sub_100100EF8(v7, v9);
  }
  else {
    int v10 = 0LL;
  }
  int v11 = &v10[40 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v14[3] = &v10[40 * v9];
  *(_DWORD *)int v11 = *a2;
  sub_10043B9BC((uint64_t)(v11 + 8), (uint64_t)(a2 + 2));
  void v14[2] = v11 + 40;
  sub_10043BAEC(a1, v14);
  uint64_t v12 = a1[1];
  sub_10043BB7C((uint64_t)v14);
  return v12;
}

void sub_10043B9A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10043B9BC(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 24) = -1;
  sub_10043B9F0(a1, a2);
  return a1;
}

uint64_t sub_10043B9F0(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(result + 24);
  if ((_DWORD)v4 != -1) {
    __n128 result = ((uint64_t (*)(char *, uint64_t))*(&off_101838CC0 + v4))(&v7, result);
  }
  *(_DWORD *)(v3 + 24) = -1;
  uint64_t v5 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v5 != -1)
  {
    __n128 result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_101839090[v5])(&v6, v3, a2);
    *(_DWORD *)(v3 + 24) = v5;
  }

  return result;
}

void sub_10043BA7C(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  *a2 = *a3;
}

void sub_10043BA88(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

void sub_10043BA94(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

void sub_10043BAA0(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  *a2 = *a3;
}

float sub_10043BAAC(uint64_t a1, _DWORD *a2, float *a3)
{
  float result = *a3;
  *a2 = *(_DWORD *)a3;
  return result;
}

double sub_10043BAB8(uint64_t a1, void *a2, double *a3)
{
  double result = *a3;
  *a2 = *(void *)a3;
  return result;
}

__n128 sub_10043BAC4(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  a3->n128_u64[1] = 0LL;
  a3[1].n128_u64[0] = 0LL;
  a3->n128_u64[0] = 0LL;
  return result;
}

void sub_10043BAE0(uint64_t a1, _BYTE *a2, _BYTE *a3)
{
  *a2 = *a3;
}

uint64_t *sub_10043BAEC(uint64_t *result, void *a2)
{
  uint64_t v3 = result;
  uint64_t v5 = *result;
  uint64_t v4 = result[1];
  uint64_t v6 = a2[1];
  while (v4 != v5)
  {
    int v7 = *(_DWORD *)(v4 - 40);
    v4 -= 40LL;
    *(_DWORD *)(v6 - 4sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v7;
    v6 -= 40LL;
    __n128 result = (uint64_t *)sub_10043B9BC(v6 + 8, v4 + 8);
  }

  a2[1] = v6;
  uint64_t v8 = *v3;
  *uint64_t v3 = v6;
  a2[1] = v8;
  uint64_t v9 = v3[1];
  v3[1] = a2[2];
  a2[2] = v9;
  uint64_t v10 = v3[2];
  v3[2] = a2[3];
  a2[3] = v10;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10043BB7C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
    sub_10043AFF4(i - 32);
  }

  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *sub_10043BBCC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  return sub_10043BC44( a2,  *(void *)(a1 + 32),  *(void *)(a1 + 40),  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 40) - *(void *)(a1 + 32)) >> 3));
}

void *sub_10043BBF4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 4sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  __int128 v2 = (void *)(a1 + 32);
  v2[2] = 0LL;
  return sub_10043BC44( v2,  *(void *)(a2 + 32),  *(void *)(a2 + 40),  0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3));
}

void sub_10043BC1C(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 32);
  sub_10043B844(&v1);
}

void *sub_10043BC44(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_10031C270(result, a4);
    __n128 result = (void *)sub_10043BCC8((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }

  return result;
}

void sub_10043BCA8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_10043B844(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_10043BCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0LL;
    do
    {
      *(_DWORD *)(a4 + v7) = *(_DWORD *)(a2 + v7);
      sub_10043BD50(a4 + v7 + 8, a2 + v7 + 8);
      v7 += 40LL;
    }

    while (a2 + v7 != a3);
    a4 += v7;
  }

  return a4;
}

void sub_10043BD2C(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 32;
    do
    {
      sub_10043AFF4(v4 + v2);
      v2 -= 40LL;
    }

    while (v2);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_10043BD50(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 24) = -1;
  sub_10043BD94(a1, a2);
  return a1;
}

void sub_10043BD80(_Unwind_Exception *a1)
{
}

uint64_t sub_10043BD94(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(result + 24);
  if ((_DWORD)v4 != -1) {
    __n128 result = ((uint64_t (*)(char *, uint64_t))*(&off_101838CC0 + v4))(&v7, result);
  }
  *(_DWORD *)(v3 + 24) = -1;
  uint64_t v5 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v5 != -1)
  {
    __n128 result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_101839100[v5])(&v6, v3, a2);
    *(_DWORD *)(v3 + 24) = v5;
  }

  return result;
}

void sub_10043BE20(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  *a2 = *a3;
}

void sub_10043BE2C(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

void sub_10043BE38(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

void sub_10043BE44(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  *a2 = *a3;
}

float sub_10043BE50(uint64_t a1, _DWORD *a2, float *a3)
{
  float result = *a3;
  *a2 = *(_DWORD *)a3;
  return result;
}

double sub_10043BE5C(uint64_t a1, void *a2, double *a3)
{
  double result = *a3;
  *a2 = *(void *)a3;
  return result;
}

void *sub_10043BE68(int a1, void *__dst, __int128 *a3)
{
  __int128 v3 = *a3;
  __dst[2] = *((void *)a3 + 2);
  *(_OWORD *)__dst = v3;
  return result;
}

void sub_10043BE94(uint64_t a1, _BYTE *a2, _BYTE *a3)
{
  *a2 = *a3;
}

void sub_10043BEA0(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10043BEA0(a1, *a2);
    sub_10043BEA0(a1, a2[1]);
    sub_10043B0A8((uint64_t)(a2 + 4));
    operator delete(a2);
  }

uint64_t *sub_10043BEE8(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    int v6 = *a2;
    while (1)
    {
      while (1)
      {
        char v7 = (uint64_t *)v4;
        int v8 = *(_DWORD *)(v4 + 32);
        if (v6 >= v8) {
          break;
        }
        uint64_t v4 = *v7;
        uint64_t v5 = (uint64_t **)v7;
        if (!*v7) {
          goto LABEL_10;
        }
      }

      if (v8 >= v6) {
        break;
      }
      uint64_t v4 = v7[1];
      if (!v4)
      {
        uint64_t v5 = (uint64_t **)(v7 + 1);
        goto LABEL_10;
      }
    }
  }

  else
  {
    char v7 = (uint64_t *)(a1 + 8);
LABEL_10:
    sub_10043BFA8(a1, a3, (uint64_t)v10);
    sub_1000085FC((uint64_t **)a1, (uint64_t)v7, v5, v10[0]);
    char v7 = v10[0];
    v10[0] = 0LL;
    sub_10043C09C((uint64_t)v10, 0LL);
  }

  return v7;
}

uint64_t *sub_10043BFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0x58uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  double result = sub_10043C014(v5, (uint64_t)v6 + 32, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10043BFFC(_Unwind_Exception *a1)
{
}

uint64_t *sub_10043C014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a2 = *(_DWORD *)a3;
  uint64_t v5 = (_BYTE *)(a2 + 8);
  if (*(char *)(a3 + 31) < 0)
  {
    sub_1010DD48C(v5, *(void **)(a3 + 8), *(void *)(a3 + 16));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a3 + 8);
    *(void *)(a2 + 24) = *(void *)(a3 + 24);
    *(_OWORD *)uint64_t v5 = v6;
  }

  return sub_100381B04((uint64_t *)(a2 + 32), a3 + 32);
}

void sub_10043C080(_Unwind_Exception *exception_object)
{
}

void sub_10043C09C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16)) {
      sub_10043B0A8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }

void sub_10043C0E0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936068);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936068))
    {
      qword_101936050 = 0LL;
      *(void *)algn_101936058 = 0LL;
      qword_101936060 = 0LL;
      __cxa_atexit((void (*)(void *))sub_1001BA3E4, &qword_101936050, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936068);
    }
  }

void sub_10043C144()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936118);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936118))
    {
      std::__shared_mutex_base::__shared_mutex_base(&stru_101936070);
      __cxa_atexit((void (*)(void *))sub_1001BA414, &stru_101936070, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936118);
    }
  }

void sub_10043C1B8(_Unwind_Exception *a1)
{
}

void sub_10043C1D0()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_1012EA600;
      v1[3] = unk_1012EA610;
      v1[4] = xmmword_1012EA620;
      v1[0] = xmmword_1012EA5E0;
      v1[1] = unk_1012EA5F0;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_10043C2A4(_Unwind_Exception *a1)
{
}

void sub_10043C2BC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_10043C358(_Unwind_Exception *a1)
{
}

void sub_10043C370()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      _WORD *v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_10043C3FC(_Unwind_Exception *a1)
{
}

uint64_t sub_10043C414()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101995780, (void *)&_mh_execute_header);
}

void sub_10043C534(id a1)
{
  qword_1019957B0 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLWifiLocationProviderSilo");
}

uint64_t sub_10043C5E8(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10043D098;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_1019957D0 != -1) {
    dispatch_once(&qword_1019957D0, block);
  }
  return qword_1019A1018;
}

void sub_10043C988(uint64_t a1, uint64_t a2)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  uint64_t v4 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, emergencyState", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v6 = 0;
    uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, emergencyState",  &v6,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::handleEmergencyStateChange(CLEmergencyState)",  "%s\n",  v5);
  }

  BOOL v8 = sub_1009830C8(a2);
  int v7 = 23;
  sub_10043EA28(a1, (uint64_t)&v7);
  sub_1002DDAD8((uint64_t)&v7);
}

void sub_10043CB44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_10043CBD0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10043CBE4(uint64_t a1, uint64_t *a2)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  uint64_t v4 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 136446210;
    *(void *)&uint8_t buf[4] = sub_1004970A0(a2);
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, entry, requestLocationUpdate, %{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v7 = qword_101934868;
    int v20 = 136446210;
    uint64_t v21 = sub_1004970A0(a2);
    BOOL v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v7,  2LL,  "@WifiLogic, entry, requestLocationUpdate, %{public}s",  &v20,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWifiLocationProvider::requestLocationUpdate(const CLWifiLocationUpdateRequest &)",  "%s\n",  v8);
    if (v8 != buf) {
      free(v8);
    }
  }

  sub_100446100((uint64_t)buf, a2);
  uint64_t v10 = *(void *)buf;
  char v11 = buf[8];
  uint64_t v13 = v24;
  __int128 v12 = v23;
  __int128 v23 = 0uLL;
  *(_OWORD *)&v17[12] = *(_OWORD *)((char *)v28 + 12);
  *(_OWORD *)uint64_t v17 = v28[0];
  __int128 v16 = v27;
  __int128 v15 = v26;
  __int128 v14 = v25;
  uint64_t v19 = v30;
  __int128 v18 = __p;
  uint64_t v24 = 0LL;
  __int128 __p = 0uLL;
  uint64_t v30 = 0LL;
  int v9 = 24;
  char v5 = sub_10043EA28(a1, &v9);
  sub_1002DDAD8((uint64_t)&v9);
  if (SHIBYTE(v30) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v24) < 0) {
    operator delete((void *)v23);
  }
  return v5 & 1;
}

void sub_10043CE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_10043D070(id a1)
{
  if ((sub_1004F64FC() & 2) != 0) {
    byte_1019957C0 = 1;
  }
}

uint64_t sub_10043D098(uint64_t a1)
{
  uint64_t v2 = operator new(0xE68uLL);
  uint64_t result = sub_10043D0E4((uint64_t)v2, *(void **)(a1 + 32));
  qword_1019A1018 = (uint64_t)v2;
  return result;
}

void sub_10043D0D0(_Unwind_Exception *a1)
{
}

uint64_t sub_10043D0E4(uint64_t a1, void *a2)
{
  uint64_t v4 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      unint64_t v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }

  uint64_t v7 = (std::__shared_weak_count *)*((void *)&v13 + 1);
  if (*((void *)&v13 + 1))
  {
    BOOL v8 = (unint64_t *)(*((void *)&v13 + 1) + 8LL);
    do
      unint64_t v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }

  return a1;
}

void sub_10043D1AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

uint64_t sub_10043D1D0(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  uint64_t v7 = (void *)sub_100479C24(a1, "wifi", a2);
  *uint64_t v7 = off_101839190;
  v7[15] = *a3;
  BOOL v8 = v7 + 15;
  uint64_t v9 = a3[1];
  v7[16] = v9;
  if (v9)
  {
    uint64_t v10 = (unint64_t *)(v9 + 8);
    do
      unint64_t v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }

  *(void *)(a1 + 16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  *(void *)(a1 + 136) = 0LL;
  *(void *)(a1 + 144) = 0LL;
  *(_BYTE *)(a1 + 152) = 0;
  sub_100446BC4(a4, &v76);
  *(_OWORD *)int v74 = v76;
  __int128 v76 = 0uLL;
  sub_1010DDBC0(buf, "");
  sub_100445F04(a1 + 168, v74, (__int128 *)buf);
  __int128 v12 = (std::__shared_weak_count *)v74[1];
  if (v74[1])
  {
    __int128 v13 = (unint64_t *)(v74[1] + 8);
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  __int128 v15 = (std::__shared_weak_count *)*((void *)&v76 + 1);
  if (*((void *)&v76 + 1))
  {
    __int128 v16 = (unint64_t *)(*((void *)&v76 + 1) + 8LL);
    do
      unint64_t v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

  uint64_t v67 = sub_1002E06EC(a1 + 224);
  uint64_t v68 = a1 + 168;
  uint64_t v69 = a1 + 3680;
  uint64_t v70 = a1;
  nullsub_10(a1 + 3680);
  for (uint64_t i = 0LL; i != 7; ++i)
  {
    uint64_t v19 = (&off_1018393D0)[i];
    sub_1002F0B04(buf);
    int v20 = sub_1002A6F64(*(uint64_t *)buf, v19, v75);
    int v21 = v20;
    uint64_t v22 = *(std::__shared_weak_count **)&buf[8];
    if (!*(void *)&buf[8]) {
      goto LABEL_21;
    }
    __int128 v23 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      if (!v21) {
        continue;
      }
    }

    else
    {
LABEL_21:
      if (!v20) {
        continue;
      }
    }

    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int128 v25 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 136315138;
      *(void *)&uint8_t buf[4] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "%s is deprecated. setting this has no effect",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      LODWORD(v76) = 136315138;
      *(void *)((char *)&v76 + 4) = v19;
      __int128 v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "%s is deprecated. setting this has no effect",  (const char *)&v76);
      sub_10029211C("Generic", 1LL, 0, 0LL, "void errorOnDeprecatedDefaultWrites()", "%s\n", v26);
    }
  }

  uint64_t v27 = 0LL;
  while (2)
  {
    uint64_t v28 = (&off_101839408)[v27];
    sub_1002F0B04(buf);
    int v29 = sub_1002A82BC(*(uint64_t *)buf, v28, v75);
    int v30 = v29;
    uint64_t v31 = *(std::__shared_weak_count **)&buf[8];
    if (!*(void *)&buf[8]) {
      goto LABEL_39;
    }
    double v32 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
      if (v30)
      {
LABEL_40:
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101839340);
        }
        double v34 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)uint64_t buf = 136315138;
          *(void *)&uint8_t buf[4] = v28;
          _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_ERROR,  "%s is deprecated. setting this has no effect",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_101839340);
          }
          LODWORD(v76) = 136315138;
          *(void *)((char *)&v76 + 4) = v28;
          double v35 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "%s is deprecated. setting this has no effect",  (const char *)&v76);
          sub_10029211C("Generic", 1LL, 0, 0LL, "void errorOnDeprecatedDefaultWrites()", "%s\n", v35);
        }
      }
    }

    else
    {
LABEL_39:
      if (v29) {
        goto LABEL_40;
      }
    }

    if (++v27 != 3) {
      continue;
    }
    break;
  }

  uint64_t v36 = 0LL;
  while (2)
  {
    uint64_t v37 = (&off_101839420)[v36];
    sub_1002F0B04(buf);
    int v38 = sub_1002A7CB0(*(uint64_t *)buf, v37, v75);
    int v39 = v38;
    uint64_t v40 = *(std::__shared_weak_count **)&buf[8];
    if (!*(void *)&buf[8]) {
      goto LABEL_57;
    }
    __n128 v41 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
      if (v39)
      {
LABEL_58:
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101839340);
        }
        int v43 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)uint64_t buf = 136315138;
          *(void *)&uint8_t buf[4] = v37;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_ERROR,  "%s is deprecated. setting this has no effect",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_101839340);
          }
          LODWORD(v76) = 136315138;
          *(void *)((char *)&v76 + 4) = v37;
          uint64_t v44 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "%s is deprecated. setting this has no effect",  (const char *)&v76);
          sub_10029211C("Generic", 1LL, 0, 0LL, "void errorOnDeprecatedDefaultWrites()", "%s\n", v44);
        }
      }
    }

    else
    {
LABEL_57:
      if (v38) {
        goto LABEL_58;
      }
    }

    if (++v36 != 2) {
      continue;
    }
    break;
  }

  v75[0] = 0;
  sub_1002F0B04(buf);
  sub_1002A6F64(*(uint64_t *)buf, "ClearAls", v75);
  uint64_t v45 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    uint64_t v46 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v47 = __ldaxr(v46);
    while (__stlxr(v47 - 1, v46));
    if (!v47)
    {
      ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
      std::__shared_weak_count::__release_weak(v45);
    }
  }

  if (v75[0])
  {
    sub_100F7EEE4((void *)*a4);
    sub_100F7CF18(*a4);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    double v48 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEBUG, "WlpMetric, ClearAls", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      LOWORD(v76) = 0;
      __int16 v64 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "WlpMetric, ClearAls",  &v76,  2,  v67,  v68,  v8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationProvider::CLWifiLocationProvider(id<CLIntersiloUniverse>, std::shared_ptr<IExternal>, std::shared_ ptr<CLWifiAccessPointLocationService>)",  "%s\n",  v64);
    }
  }

  id v49 = [*(id *)(v70 + 40) newTimer];
  *(void *)(v70 + 136) = v49;
  v73[0] = _NSConcreteStackBlock;
  v73[1] = 3221225472LL;
  _DWORD v73[2] = sub_10043DE60;
  v73[3] = &unk_10181D3D0;
  v73[4] = v70;
  [v49 setHandler:v73];
  id v50 = [*(id *)(v70 + 40) newTimer];
  *(void *)(v70 + 144) = v50;
  v72[0] = _NSConcreteStackBlock;
  v72[1] = 3221225472LL;
  v72[2] = sub_10043E030;
  v72[3] = &unk_10181D3D0;
  v72[4] = v70;
  [v50 setHandler:v72];
  nullsub_10(v69);
  BOOL v71 = 0;
  sub_1002F0B04(buf);
  int v51 = sub_1002A6F64(*(uint64_t *)buf, "AlwaysAlsRequestEverything", &v71);
  if (v71) {
    int v52 = v51;
  }
  else {
    int v52 = 0;
  }
  uint64_t v53 = *(std::__shared_weak_count **)&buf[8];
  if (!*(void *)&buf[8]) {
    goto LABEL_89;
  }
  double v54 = (unint64_t *)(*(void *)&buf[8] + 8LL);
  do
    unint64_t v55 = __ldaxr(v54);
  while (__stlxr(v55 - 1, v54));
  if (!v55)
  {
    ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
    std::__shared_weak_count::__release_weak(v53);
    if (v52) {
LABEL_90:
    }
      *(_BYTE *)(v70 + 36sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 1;
  }

  else
  {
LABEL_89:
    if (v52) {
      goto LABEL_90;
    }
  }

  sub_1009CDF88(buf);
  sub_1009CE6B4(*(uint64_t *)buf);
  int v56 = *(std::__shared_weak_count **)&buf[8];
  if (*(void *)&buf[8])
  {
    unint64_t v57 = (unint64_t *)(*(void *)&buf[8] + 8LL);
    do
      unint64_t v58 = __ldaxr(v57);
    while (__stlxr(v58 - 1, v57));
    if (!v58)
    {
      ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
      std::__shared_weak_count::__release_weak(v56);
    }
  }

  sub_100A315EC((uint64_t)sub_10043E200, v70, *(void **)(v70 + 32), buf);
  uint64_t v59 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v60 = *(void *)(v70 + 160);
  *(void *)(v70 + 16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = v59;
  if (v60)
  {
    (*(void (**)(uint64_t))(*(void *)v60 + 8LL))(v60);
    uint64_t v61 = *(void *)buf;
    *(void *)uint64_t buf = 0LL;
    if (v61) {
      (*(void (**)(uint64_t))(*(void *)v61 + 8LL))(v61);
    }
    uint64_t v59 = *(void *)(v70 + 160);
  }

  if (v59)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v62 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_DEFAULT,  "@WifiLogic, registering for leeched Cell location notification",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      LOWORD(v76) = 0;
      LODWORD(v66) = 2;
      double v65 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiLogic, registering for leeched Cell location notification",  &v76,  v66);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationProvider::CLWifiLocationProvider(id<CLIntersiloUniverse>, std::shared_ptr<IExternal>, std::shared_ ptr<CLWifiAccessPointLocationService>)",  "%s\n",  v65);
    }

    [*(id *)(*(void *)(v70 + 160) + 16) register:*(void *)(*(void *)(v70 + 160) + 8) forNotification:5 registrationInfo:0];
  }

  return v70;
}

void sub_10043DD5C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17 = *(void *)(a16 + 160);
  *(void *)(a16 + 16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
  }
  sub_10000AE14(a13);
  sub_10047A1C0(a16);
  _Unwind_Resume(a1);
}

void sub_10043DE60(uint64_t a1)
{
}

void sub_10043DE68(uint64_t a1)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  uint64_t v2 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, clienttimer", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v4 = 0;
    __int128 v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, clienttimer",  &v4,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiLocationProvider::onClientTimer()", "%s\n", v3);
  }

  v5[0] = 27;
  sub_10043EA28(a1, (uint64_t)v5);
  sub_1002DDAD8((uint64_t)v5);
}

void sub_10043E014( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
}

void sub_10043E030(uint64_t a1)
{
}

void sub_10043E038(uint64_t a1)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  uint64_t v2 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, wsbtimer", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v4 = 0;
    __int128 v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, wsbtimer",  &v4,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiLocationProvider::onWsbTimer()", "%s\n", v3);
  }

  v5[0] = 28;
  sub_10043EA28(a1, (uint64_t)v5);
  sub_1002DDAD8((uint64_t)v5);
}

void sub_10043E1E4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
}

void sub_10043E200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839320);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    BOOL v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLWifiLocationProvider::onCellLocationProviderNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839320);
    }
    uint64_t v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int128 v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLWifiLocationProvider::onCellLocationProviderNotification, event:%{public, locatio n:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10043E694(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10043E3B0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10043E3D0(uint64_t a1)
{
  return sub_10000AE14(a1);
}

uint64_t sub_10043E408(uint64_t a1)
{
  *(void *)a1 = off_101839190;
  sub_10047A1E0(a1);
  (*(void (**)(void))(**(void **)(a1 + 120) + 16LL))(*(void *)(a1 + 120));
  [*(id *)(a1 + 136) invalidate];
  [*(id *)(a1 + 144) invalidate];

  *(void *)(a1 + 136) = 0LL;
  *(void *)(a1 + 144) = 0LL;
  nullsub_10(a1 + 3680);
  if (*(void *)(a1 + 160))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v2 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "@WifiLogic, unregistering for leeched Cell location notification",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      v6[0] = 0;
      char v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiLogic, unregistering for leeched Cell location notification",  v6,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual CLWifiLocationProvider::~CLWifiLocationProvider()", "%s\n", v5);
    }

    [*(id *)(*(void *)(a1 + 160) + 16) unregister:*(void *)(*(void *)(a1 + 160) + 8) forNotification:5];
  }

  nullsub_10(a1 + 3680);
  sub_1002E1244(a1 + 224);
  sub_10000AE14(a1 + 184);
  sub_10000AE14(a1 + 168);
  uint64_t v3 = *(void *)(a1 + 160);
  *(void *)(a1 + 16sub_100222B94(v55, (uint64_t)"CLLocationDatabase::clearLocationsByAge", 0) = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10000AE14(a1 + 120);
  sub_10047A1C0(a1);
  return a1;
}

void sub_10043E670(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_10043E680(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10043E408(a1);
  operator delete(v1);
}

void sub_10043E694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  uint64_t v6 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    sub_100869A44(a4, (std::stringbuf::string_type *)&__p);
    uint64_t v7 = (SBYTE7(v49) & 0x80u) == 0 ? &__p : (__int128 *)__p;
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, Cell location notification received, %{private}s",  (uint8_t *)&buf,  0xCu);
    if (SBYTE7(v49) < 0) {
      operator delete((void *)__p);
    }
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&__p, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v23 = qword_101934868;
    sub_100869A44(a4, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v46 = 136380675;
    unint64_t v47 = p_buf;
    __int128 v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  v23,  2LL,  "@WifiLogic, Cell location notification received, %{private}s",  &v46,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onCellLocationProviderNotification(int, const CLLocationProvider_Type::Notification & , const CLLocationProvider_Type::NotificationData &)",  "%s\n",  v25);
  }

  __int128 v8 = *(_OWORD *)(a4 + 112);
  __int128 v54 = *(_OWORD *)(a4 + 96);
  __int128 v55 = v8;
  v56[0] = *(_OWORD *)(a4 + 128);
  *(_OWORD *)((char *)v56 + 12) = *(_OWORD *)(a4 + 140);
  __int128 v9 = *(_OWORD *)(a4 + 48);
  __int128 v50 = *(_OWORD *)(a4 + 32);
  __int128 v51 = v9;
  __int128 v10 = *(_OWORD *)(a4 + 80);
  __int128 v52 = *(_OWORD *)(a4 + 64);
  __int128 v53 = v10;
  __int128 v11 = *(_OWORD *)(a4 + 16);
  __int128 __p = *(_OWORD *)a4;
  __int128 v49 = v11;
  memcpy(v57, (const void *)(a4 + 160), sizeof(v57));
  uint64_t v12 = *(void *)(a4 + 680);
  uint64_t v13 = *(void *)(a4 + 688);
  if (v13)
  {
    __int16 v14 = (unint64_t *)(v13 + 8);
    do
      unint64_t v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }

  uint64_t v16 = a4 + 696;
  __int128 v17 = *(_OWORD *)(v16 + 80);
  __int128 v64 = *(_OWORD *)(v16 + 64);
  v65[0] = v17;
  *(void *)((char *)v65 + 13) = *(void *)(v16 + 93);
  __int128 v18 = *(_OWORD *)(v16 + 16);
  __int128 v60 = *(_OWORD *)v16;
  __int128 v61 = v18;
  __int128 v19 = *(_OWORD *)(v16 + 48);
  __int128 v62 = *(_OWORD *)(v16 + 32);
  __int128 v63 = v19;
  __int128 v27 = __p;
  __int128 v28 = v49;
  __int128 v31 = v52;
  __int128 v32 = v53;
  __int128 v29 = v50;
  __int128 v30 = v51;
  *(_OWORD *)((char *)v35 + 12) = *(_OWORD *)((char *)v56 + 12);
  v35[0] = v56[0];
  __int128 v33 = v54;
  __int128 v34 = v55;
  memcpy(v36, v57, sizeof(v36));
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  uint64_t v58 = 0LL;
  uint64_t v59 = 0LL;
  *(void *)&v44[13] = *(void *)(v16 + 93);
  __int128 v20 = *(_OWORD *)(v16 + 80);
  __int128 v43 = *(_OWORD *)(v16 + 64);
  *(_OWORD *)uint64_t v44 = v20;
  __int128 v21 = *(_OWORD *)(v16 + 16);
  __int128 v39 = *(_OWORD *)v16;
  __int128 v40 = v21;
  __int128 v22 = *(_OWORD *)(v16 + 32);
  __int128 v42 = *(_OWORD *)(v16 + 48);
  __int128 v41 = v22;
  int v26 = 16;
  sub_10043EA28(a1, (uint64_t)&v26);
  sub_1002DDAD8((uint64_t)&v26);
}

void sub_10043EA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_10043EA28(uint64_t a1, uint64_t a2)
{
  v18[0] = 0;
  sub_1002E06EC((uint64_t)v19);
  sub_100446E68((uint64_t)v18, a2);
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  uint64_t v4 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    char v5 = sub_100446354(v18);
    int v14 = 136446210;
    unint64_t v15 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "@WifiLogic, handleInput, %{public}s",  (uint8_t *)&v14,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v14, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v8 = qword_101934868;
    __int128 v9 = sub_100446354(v18);
    int v16 = 136446210;
    __int128 v17 = v9;
    __int128 v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v14,  1628LL,  &_mh_execute_header,  v8,  0LL,  "@WifiLogic, handleInput, %{public}s",  &v16,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationProvider::HandleEventResults CLWifiLocationProvider::handleEvent(CL::Wifi1::Events::EventUnion)",  "%s\n",  v10);
  }

  sub_1004464F0((uint64_t)v12, a1 + 224);
  sub_100442B6C(a1, (uint64_t)v12, (uint64_t)&v14);
  sub_100442CA8((uint64_t)v19, (uint64_t)&v14);
  sub_1002E1244((uint64_t)&v14);
  sub_1002E1244((uint64_t)v12);
  sub_100CCCF44(a1 + 168, (uint64_t)v18, (uint64_t)&v14);
  sub_1004468D0((uint64_t)v11, (uint64_t)&v14);
  uint64_t v6 = sub_100443054(a1, (uint64_t)v11);
  sub_100446B00((uint64_t)v11);
  sub_100446B00((uint64_t)&v14);
  sub_1002E1244((uint64_t)v19);
  sub_1002DDAD8((uint64_t)v18);
  sub_1001BA1BC(v13);
  return v6;
}

void sub_10043ED3C(_Unwind_Exception *a1)
{
}

void sub_10043EDB0(void *a1, int a2)
{
  if (a2) {
    sub_100006BB8(a1);
  }
  JUMPOUT(0x10043EDA8LL);
}

void sub_10043EDC0()
{
}

void sub_10043EDC8()
{
}

uint64_t sub_10043EDD0(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v1 = *(void *)(a1 + 64);
  if (!v1) {
    goto LABEL_11;
  }
  uint64_t v3 = a1 + 64;
  do
  {
    int v4 = *(_DWORD *)(v1 + 32);
    BOOL v5 = v4 < 0;
    if (v4 >= 0) {
      uint64_t v6 = (uint64_t *)v1;
    }
    else {
      uint64_t v6 = (uint64_t *)(v1 + 8);
    }
    if (!v5) {
      uint64_t v3 = v1;
    }
    uint64_t v1 = *v6;
  }

  while (*v6);
  if (v3 == v2 || *(int *)(v3 + 32) >= 1) {
LABEL_11:
  }
    uint64_t v3 = a1 + 64;
  int v14 = 0;
  uint64_t result = sub_100247620(a1, &v14, 1LL);
  if ((_DWORD)result)
  {
    if (v3 != v2)
    {
      uint64_t v8 = *(double **)(v3 + 40);
      if (v8 != (double *)(v3 + 48))
      {
        float v9 = 10000.0;
        do
        {
          float v10 = v8[5];
          if (v9 >= v10) {
            float v9 = v8[5];
          }
          __int128 v11 = (double *)*((void *)v8 + 1);
          if (v11)
          {
            do
            {
              uint64_t v12 = v11;
              __int128 v11 = *(double **)v11;
            }

            while (v11);
          }

          else
          {
            do
            {
              uint64_t v12 = (double *)*((void *)v8 + 2);
              BOOL v13 = *(void *)v12 == (void)v8;
              uint64_t v8 = v12;
            }

            while (!v13);
          }

          uint64_t v8 = v12;
        }

        while (v12 != (double *)(v3 + 48));
      }
    }
  }

  return result;
}

uint64_t sub_10043EEB8(uint64_t a1, unsigned int *a2)
{
  if (*a2 > 0x16 || ((1 << *a2) & 0x400019) == 0)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    int v16 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      __int128 v17 = sub_10100D9D8(*a2);
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      uint64_t v36 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "@WifiLoc, miscregister, %{public}s", buf, 0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_18;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v21 = qword_101934868;
    __int128 v22 = sub_10100D9D8(*a2);
    int v27 = 136446210;
    __int128 v28 = v22;
    unint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v21,  2LL,  "@WifiLoc, miscregister, %{public}s",  &v27,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLWifiLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v15);
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    BOOL v5 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = sub_10100D9D8(*a2);
      *(_DWORD *)std::stringbuf::string_type buf = 0;
      int v7 = sub_100247620(a1, (int *)buf, 1LL);
      *(_DWORD *)std::stringbuf::string_type buf = 3;
      int v8 = sub_100247620(a1, (int *)buf, 1LL);
      *(_DWORD *)std::stringbuf::string_type buf = 4;
      int v9 = sub_100247620(a1, (int *)buf, 1LL);
      *(_DWORD *)std::stringbuf::string_type buf = 136446978;
      uint64_t v36 = v6;
      __int16 v37 = 1026;
      int v38 = v7;
      __int16 v39 = 1026;
      int v40 = v8;
      __int16 v41 = 1026;
      int v42 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "@WifiLogic, entry, register, notification, %{public}s, lsb, %{public}d, %{public}d, %{public}d",  buf,  0x1Eu);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_18;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v10 = qword_101934868;
    __int128 v11 = sub_10100D9D8(*a2);
    int v27 = 0;
    int v12 = sub_100247620(a1, &v27, 1LL);
    int v27 = 3;
    int v13 = sub_100247620(a1, &v27, 1LL);
    int v27 = 4;
    int v14 = sub_100247620(a1, &v27, 1LL);
    int v27 = 136446978;
    __int128 v28 = v11;
    __int16 v29 = 1026;
    int v30 = v12;
    __int16 v31 = 1026;
    int v32 = v13;
    __int16 v33 = 1026;
    int v34 = v14;
    unint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  0LL,  "@WifiLogic, entry, register, notification, %{public}s, lsb, %{public}d, %{public}d, %{public}d",  &v27,  30);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLWifiLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v15);
  }

void sub_10043F56C(_Unwind_Exception *a1)
{
}

uint64_t sub_10043F5A0(uint64_t a1, unsigned int *a2)
{
  v45[0] = 0;
  if (*a2 > 0x16 || ((1 << *a2) & 0x400019) == 0)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    int v16 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      __int128 v17 = sub_10100D9D8(*a2);
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      int v38 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEBUG,  "@WifiLoc, miscunregister, %{public}s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      uint64_t v22 = qword_101934868;
      uint64_t v23 = sub_10100D9D8(*a2);
      int v29 = 136446210;
      int v30 = v23;
      unint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v22,  2LL,  "@WifiLoc, miscunregister, %{public}s",  &v29,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLWifiLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v15);
      goto LABEL_44;
    }
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    BOOL v5 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = sub_10100D9D8(*a2);
      int v29 = 0;
      int v7 = sub_100247620(a1, &v29, 1LL);
      int v29 = 3;
      int v8 = sub_100247620(a1, &v29, 1LL);
      int v29 = 4;
      int v9 = sub_100247620(a1, &v29, 1LL);
      *(_DWORD *)std::stringbuf::string_type buf = 136446978;
      int v38 = v6;
      __int16 v39 = 1026;
      int v40 = v7;
      __int16 v41 = 1026;
      int v42 = v8;
      __int16 v43 = 1026;
      int v44 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "@WifiLogic, entry, unregister, notification, %{public}s, lsb, %{public}d, %{public}d, %{public}d",  buf,  0x1Eu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      uint64_t v10 = qword_101934868;
      __int128 v11 = sub_10100D9D8(*a2);
      int v27 = 0;
      int v12 = sub_100247620(a1, &v27, 1LL);
      int v27 = 3;
      int v13 = sub_100247620(a1, &v27, 1LL);
      int v27 = 4;
      int v14 = sub_100247620(a1, &v27, 1LL);
      int v29 = 136446978;
      int v30 = v11;
      __int16 v31 = 1026;
      int v32 = v12;
      __int16 v33 = 1026;
      int v34 = v13;
      __int16 v35 = 1026;
      int v36 = v14;
      unint64_t v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v10,  0LL,  "@WifiLogic, entry, unregister, notification, %{public}s, lsb, %{public}d, %{public}d, %{public}d",  &v29,  30);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLWifiLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v15);
LABEL_44:
    }
  }

  unsigned int v18 = *a2;
  if (!*a2)
  {
LABEL_21:
    *(_DWORD *)std::stringbuf::string_type buf = 0;
    if (!sub_100247620(a1, (int *)buf, 1LL))
    {
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 96LL))(*(void *)(a1 + 120), 7LL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      __int128 v19 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "@WifiEntry, unregister for odometer notification",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101839340);
        }
        LOWORD(v29) = 0;
        LODWORD(v26) = 2;
        uint64_t v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiEntry, unregister for odometer notification",  &v29,  v26);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLWifiLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v24);
      }
    }

    *(_DWORD *)std::stringbuf::string_type buf = 0;
    if (!sub_100247620(a1, (int *)buf, 1LL))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 3;
      if (!sub_100247620(a1, (int *)buf, 1LL))
      {
        (*(void (**)(void, void))(**(void **)(a1 + 120) + 72LL))(*(void *)(a1 + 120), 0LL);
        *(_DWORD *)std::stringbuf::string_type buf = 22;
        if (!sub_100247620(a1, (int *)buf, 1LL))
        {
          (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 80LL))(*(void *)(a1 + 120), 3LL);
          (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 80LL))(*(void *)(a1 + 120), 1LL);
          (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 88LL))(*(void *)(a1 + 120), 6LL);
        }

        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101839340);
        }
        __int128 v20 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "@WifiEntry, noregistrants", buf, 2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_101839340);
          }
          LOWORD(v29) = 0;
          LODWORD(v26) = 2;
          __int16 v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiEntry, noregistrants",  &v29,  v26);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLWifiLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)",  "%s\n",  v25);
        }
      }
    }

    *(_DWORD *)std::stringbuf::string_type buf = *a2;
    sub_1004477A8(v45, (int *)buf);
    sub_1002E13A0((uint64_t)v28, (uint64_t)v45);
    sub_10043EA28(a1, (uint64_t)v28);
    sub_1002DDAD8((uint64_t)v28);
    goto LABEL_40;
  }

  if (v18 != 22)
  {
    if (v18 != 3) {
      goto LABEL_40;
    }
    goto LABEL_21;
  }

  (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 64LL))(*(void *)(a1 + 120), 12LL);
  *(_DWORD *)std::stringbuf::string_type buf = 0;
  if (!sub_100247620(a1, (int *)buf, 1LL))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 3;
    if (!sub_100247620(a1, (int *)buf, 1LL))
    {
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 80LL))(*(void *)(a1 + 120), 3LL);
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 80LL))(*(void *)(a1 + 120), 2LL);
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 80LL))(*(void *)(a1 + 120), 1LL);
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 88LL))(*(void *)(a1 + 120), 6LL);
    }
  }

void sub_10043FDCC(_Unwind_Exception *a1)
{
}

id sub_10043FE44(uint64_t a1)
{
  return [*(id *)(a1 + 144) invalidate];
}

void sub_10043FE80(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  v75[0] = 0;
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  int v7 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    int v8 = sub_10099EBB4(*a3);
    *(_DWORD *)std::stringbuf::string_type buf = 136446210;
    *(void *)&uint8_t buf[4] = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, entry, wifiNotify, %{public}s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v27 = qword_101934868;
    __int128 v28 = sub_10099EBB4(*a3);
    *(_DWORD *)__int128 v63 = 136446210;
    *(void *)&v63[4] = v28;
    int v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v27,  2LL,  "@WifiLogic, entry, wifiNotify, %{public}s",  v63,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService _Type::NotificationData &)",  "%s\n",  v29);
    if (v29 != buf) {
      free(v29);
    }
  }

  switch(*a3)
  {
    case 1:
      *(_DWORD *)std::stringbuf::string_type buf = *(_BYTE *)a4 == 0;
      sub_100447CA0(v75, (int *)buf);
      goto LABEL_87;
    case 2:
      sub_1004478B4(v75);
      goto LABEL_87;
    case 3:
      if (*(_BYTE *)(a4 + 96) && *(int *)(a4 + 48) >= 1)
      {
        sub_100351790((uint64_t)v63, a4 + 8);
      }

      else
      {
        v63[0] = 0;
        char v65 = 0;
      }

      __int128 v20 = (void *)(a4 + 112);
      uint64_t v21 = *(void *)(a4 + 104);
      sub_10044624C((uint64_t)v51, *(void **)(a4 + 112), *(void **)(a4 + 120));
      v51[5] = v21;
      char v22 = *(_BYTE *)(a4 + 1);
      sub_1000C6980(v47, (uint64_t)v63);
      sub_1004462C4((uint64_t)buf, v51, v22, (uint64_t)v47);
      sub_100447DBC(v75, (uint64_t *)buf);
      if (v74 && v71 < 0) {
        operator delete(v70);
      }
      sub_1002DDBC0((uint64_t)buf);
      if (v50 && v49 < 0) {
        operator delete(v48);
      }
      sub_1002DDBC0((uint64_t)v51);
      sub_100680668(buf);
      sub_100681494(*(uint64_t *)buf, v20);
      uint64_t v23 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        uint64_t v24 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v25 = __ldaxr(v24);
        while (__stlxr(v25 - 1, v24));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }

      if (v65 && v64 < 0) {
        operator delete(*(void **)&v63[8]);
      }
      goto LABEL_87;
    case 4:
      sub_100447FA8(v75);
      goto LABEL_87;
    case 5:
      buf[0] = *(_BYTE *)(a4 + 1);
      sub_1004479B0((uint64_t)v75, buf);
      goto LABEL_87;
    case 6:
      sub_100440C48(buf);
      sub_1004480A4(v75, (uint64_t)buf);
      if (v72 && v67 < 0) {
        operator delete(*(void **)&buf[8]);
      }
      sub_100351790((uint64_t)v43, a4 + 8);
      sub_1000C6980(buf, (uint64_t)v43);
      sub_1004480A4(v75, (uint64_t)buf);
      if (v72 && v67 < 0) {
        operator delete(*(void **)&buf[8]);
      }
      if (!v46 || (v45 & 0x80000000) == 0) {
        goto LABEL_32;
      }
      int v9 = v44;
      goto LABEL_31;
    case 7:
      sub_100440C48(buf);
      sub_100448204(v75, (uint64_t)buf);
      if (v72 && v67 < 0) {
        operator delete(*(void **)&buf[8]);
      }
      sub_100351790((uint64_t)v39, a4 + 8);
      sub_1000C6980(buf, (uint64_t)v39);
      sub_100448204(v75, (uint64_t)buf);
      if (v72 && v67 < 0) {
        operator delete(*(void **)&buf[8]);
      }
      if (!v42 || (v41 & 0x80000000) == 0) {
        goto LABEL_32;
      }
      int v9 = v40;
LABEL_31:
      operator delete(v9);
LABEL_32:
      sub_100440CBC(a3, a4);
      goto LABEL_87;
    case 12:
      uint64_t v58 = 0LL;
      uint64_t v59 = 0LL;
      uint64_t v60 = 0LL;
      sub_1002DE3C8( &v58,  *(void *)(a4 + 112),  *(void *)(a4 + 120),  0x2E8BA2E8BA2E8BA3LL * ((uint64_t)(*(void *)(a4 + 120) - *(void *)(a4 + 112)) >> 3));
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      uint64_t v10 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v12 = v58;
        uint64_t v11 = v59;
        int v13 = sub_10099EC00(*(_DWORD *)(a4 + 140));
        *(_DWORD *)std::stringbuf::string_type buf = 134218242;
        *(void *)&uint8_t buf[4] = 0x2E8BA2E8BA2E8BA3LL * ((v11 - v12) >> 3);
        *(_WORD *)&_BYTE buf[12] = 2082;
        *(void *)&_BYTE buf[14] = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "@Wsb, NotificationScanCache, aps, %zu, source, %{public}s",  buf,  0x16u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101839340);
        }
        uint64_t v30 = qword_101934868;
        uint64_t v32 = v58;
        uint64_t v31 = v59;
        __int16 v33 = sub_10099EC00(*(_DWORD *)(a4 + 140));
        *(_DWORD *)__int128 v63 = 134218242;
        *(void *)&v63[4] = 0x2E8BA2E8BA2E8BA3LL * ((v31 - v32) >> 3);
        *(_WORD *)&v63[12] = 2082;
        *(void *)&v63[14] = v33;
        LODWORD(v38) = 22;
        int v34 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v30,  2LL,  "@Wsb, NotificationScanCache, aps, %zu, source, %{public}s",  v63,  v38);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiSer vice_Type::NotificationData &)",  "%s\n",  v34);
        if (v34 != buf) {
          free(v34);
        }
      }

      sub_100680668(v63);
      int v14 = *(void **)v63;
      memset(v57, 0, sizeof(v57));
      sub_1002DE3C8(v57, v58, v59, 0x2E8BA2E8BA2E8BA3LL * ((v59 - v58) >> 3));
      sub_100440AEC((uint64_t)buf, v57, *(_DWORD *)(a4 + 140));
      sub_1006810C0(v14, (uint64_t)buf);
      if (v73 && v69 < 0) {
        operator delete(v68);
      }
      __int128 v61 = (void **)buf;
      sub_100023498(&v61);
      __int128 v61 = (void **)v57;
      sub_100023498(&v61);
      unint64_t v15 = *(std::__shared_weak_count **)&v63[8];
      if (*(void *)&v63[8])
      {
        int v16 = (unint64_t *)(*(void *)&v63[8] + 8LL);
        do
          unint64_t v17 = __ldaxr(v16);
        while (__stlxr(v17 - 1, v16));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }

      if (sub_100CD9924(*(_DWORD *)(a4 + 140)))
      {
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101839340);
        }
        unsigned int v18 = (os_log_s *)qword_101934868;
        if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
        {
          __int128 v19 = sub_10099EC00(*(_DWORD *)(a4 + 140));
          *(_DWORD *)std::stringbuf::string_type buf = 136446210;
          *(void *)&uint8_t buf[4] = v19;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "@Wsb, ignoring NotificationScanCache source %{public}s",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934860 != -1) {
            dispatch_once(&qword_101934860, &stru_101839340);
          }
          uint64_t v35 = qword_101934868;
          int v36 = sub_10099EC00(*(_DWORD *)(a4 + 140));
          *(_DWORD *)__int128 v63 = 136446210;
          *(void *)&v63[4] = v36;
          LODWORD(v38) = 12;
          __int16 v37 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v35,  2LL,  "@Wsb, ignoring NotificationScanCache source %{public}s",  v63,  v38);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiS ervice_Type::NotificationData &)",  "%s\n",  v37);
          if (v37 != buf) {
            free(v37);
          }
        }

        *(void *)std::stringbuf::string_type buf = &v58;
        sub_100023498((void ***)buf);
      }

      else
      {
        if (*(_BYTE *)(a4 + 96) && *(int *)(a4 + 48) >= 1)
        {
          sub_100351790((uint64_t)v63, a4 + 8);
        }

        else
        {
          v63[0] = 0;
          char v65 = 0;
        }

        memset(v56, 0, sizeof(v56));
        sub_1002DE3C8(v56, v58, v59, 0x2E8BA2E8BA2E8BA3LL * ((v59 - v58) >> 3));
        int v26 = *(_DWORD *)(a4 + 140);
        sub_1000C6980(v52, (uint64_t)v63);
        sub_1004461DC((uint64_t)buf, (uint64_t)v56, v26, (uint64_t)v52);
        sub_100447ACC(v75, (uint64_t)buf);
        if (v73 && v69 < 0) {
          operator delete(v68);
        }
        __int128 v61 = (void **)buf;
        sub_100023498(&v61);
        if (v55 && v54 < 0) {
          operator delete(v53);
        }
        __int128 v61 = (void **)v56;
        sub_100023498(&v61);
        if (v65 && v64 < 0) {
          operator delete(*(void **)&v63[8]);
        }
        *(void *)std::stringbuf::string_type buf = &v58;
        sub_100023498((void ***)buf);
LABEL_87:
        sub_100448364((uint64_t)v62, (uint64_t)v75);
        sub_10043EA28(a1, (uint64_t)v62);
        sub_1002DDAD8((uint64_t)v62);
      }

void sub_100440880( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x5A0] = (unint64_t)&a72;
  sub_100023498((void ***)&STACK[0x5A0]);
  sub_1002DDAD8((uint64_t)&STACK[0xC00]);
  _Unwind_Resume(a1);
}

uint64_t sub_100440AEC(uint64_t a1, uint64_t *a2, int a3)
{
  v6[0] = 0;
  char v9 = 0;
  sub_1004461DC(a1, (uint64_t)v10, a3, (uint64_t)v6);
  if (v9 && v8 < 0) {
    operator delete(__p);
  }
  uint64_t v11 = (void **)v10;
  sub_100023498(&v11);
  return a1;
}

void sub_100440B90( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23)
{
  if (a23)
  {
    if (a15 < 0) {
      operator delete(__p);
    }
  }

  *(void *)(v23 - 24) = v23 - 48;
  sub_100023498((void ***)(v23 - 24));
  _Unwind_Resume(a1);
}

uint64_t sub_100440BC4(uint64_t a1)
{
  uint64_t v3 = (void **)a1;
  sub_100023498(&v3);
  return a1;
}

uint64_t sub_100440C10(uint64_t a1)
{
  return sub_1002DDBC0(a1);
}

_BYTE *sub_100440C48(_BYTE *a1)
{
  v3[0] = 0;
  char v6 = 0;
  sub_1000C6980(a1, (uint64_t)v3);
  if (v6 && v5 < 0) {
    operator delete(__p);
  }
  return a1;
}

void sub_100440C98( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23)
{
  if (a23)
  {
    if (a15 < 0) {
      operator delete(__p);
    }
  }

  _Unwind_Resume(exception_object);
}

void sub_100440CBC(int *a1, uint64_t a2)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  int v4 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    char v5 = sub_10099EBB4(*a1);
    sub_10099EA10(a2 + 8, __p);
    char v6 = (__p[0].__r_.__value_.__s.__size_ & 0x80u) == 0
       ? __p
       : (std::stringbuf::string_type *)__p[0].__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v5;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "@WifiLogic, wifi notification %{private}s, associated state, %{private}s",  (uint8_t *)&buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v7 = qword_101934868;
    char v8 = sub_10099EBB4(*a1);
    sub_10099EA10(a2 + 8, &buf);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    int v12 = 136380931;
    int v13 = v8;
    __int16 v14 = 2081;
    unint64_t v15 = p_buf;
    uint64_t v10 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v7,  0LL,  "@WifiLogic, wifi notification %{private}s, associated state, %{private}s",  &v12,  22);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void logAssociatedStateFromWifiNotification(const CLWifiService_Type::Notification &, const CLWifiService_Type::No tificationData &)",  "%s\n",  (const char *)v10);
    if (v10 != __p) {
      free(v10);
    }
  }

void sub_100440F08(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  uint64_t v7 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *a3;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    LODWORD(v42) = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, entry, odometer, %{public}d,",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    int v19 = *a3;
    int v33 = 67240192;
    LODWORD(v34) = v19;
    __int128 v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, odometer, %{public}d,",  &v33,  8);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onOdometerNotification(int, const CLOdometerNotifier_Type::Notification &, const CLOd ometerNotifier_Type::NotificationData &)",  "%s\n",  v20);
  }

  if (*a3 == 7)
  {
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v10 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = *(void *)(a4 + 8);
      int v12 = *(_DWORD *)(a4 + 16);
      int v13 = *(_DWORD *)(a4 + 20);
      *(_DWORD *)std::stringbuf::string_type buf = 134349824;
      uint64_t v42 = v11;
      __int16 v43 = 1026;
      int v44 = v12;
      __int16 v45 = 1026;
      int v46 = v13;
      __int16 v47 = 2050;
      CFAbsoluteTime v48 = Current;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "received odometer update entry,startTime,%{public}lf,elevationAscended,%{public}u,elevationDescended,%{public}u, now,%{public}.lf",  buf,  0x22u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      uint64_t v21 = *(void *)(a4 + 8);
      int v22 = *(_DWORD *)(a4 + 16);
      int v23 = *(_DWORD *)(a4 + 20);
      int v33 = 134349824;
      uint64_t v34 = v21;
      __int16 v35 = 1026;
      int v36 = v22;
      __int16 v37 = 1026;
      int v38 = v23;
      __int16 v39 = 2050;
      CFAbsoluteTime v40 = Current;
      LODWORD(v29) = 34;
      uint64_t v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "received odometer update entry,startTime,%{public}lf,elevationAscended,%{public}u,elevationDescend ed,%{public}u,now,%{public}.lf",  &v33,  v29);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onOdometerNotification(int, const CLOdometerNotifier_Type::Notification &, const CL OdometerNotifier_Type::NotificationData &)",  "%s\n",  v24);
    }

    double v14 = *(double *)(a4 + 8);
    if ((*(void *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v14 < 0.0)
    {
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_101839430);
      }
      unint64_t v15 = (os_log_s *)qword_101934838;
      if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_INFO))
      {
        uint64_t v16 = *(void *)(a4 + 8);
        int v17 = *(_DWORD *)(a4 + 16);
        int v18 = *(_DWORD *)(a4 + 20);
        *(_DWORD *)std::stringbuf::string_type buf = 134349568;
        uint64_t v42 = v16;
        __int16 v43 = 1026;
        int v44 = v17;
        __int16 v45 = 1026;
        int v46 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "#Warning,received invalid elevation entry,startTime,%{public}lf,elevationAscended,%{public}u,elevationDescended,%{public}u",  buf,  0x18u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934830 != -1) {
          dispatch_once(&qword_101934830, &stru_101839430);
        }
        uint64_t v25 = *(void *)(a4 + 8);
        int v26 = *(_DWORD *)(a4 + 16);
        int v27 = *(_DWORD *)(a4 + 20);
        int v33 = 134349568;
        uint64_t v34 = v25;
        __int16 v35 = 1026;
        int v36 = v26;
        __int16 v37 = 1026;
        int v38 = v27;
        LODWORD(v29) = 24;
        __int128 v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  1LL,  "#Warning,received invalid elevation entry,startTime,%{public}lf,elevationAscended,%{public}u,ele vationDescended,%{public}u",  &v33,  v29);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onOdometerNotification(int, const CLOdometerNotifier_Type::Notification &, const CLOdometerNotifier_Type::NotificationData &)",  "%s\n",  v28);
      }
    }

    else
    {
      double v31 = (float)((float)(uint64_t)(*(unsigned int *)(a4 + 16) - (unint64_t)*(unsigned int *)(a4 + 20)) / 100.0);
      double v32 = v14;
      int v30 = 18;
      sub_10043EA28(a1, (uint64_t)&v30);
      sub_1002DDAD8((uint64_t)&v30);
    }
  }

void sub_100441458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_100441474(uint64_t a1, uint64_t a2, _DWORD *a3, _DWORD *a4)
{
  v12[0] = 0;
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  uint64_t v7 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, motion", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v9 = 0;
    int v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, motion",  &v9,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onMotionNotification(int, const CLMotionState_Type::Notification &, const CLMotionSta te_Type::NotificationData &)",  "%s\n",  v8);
  }

  if (!*a3)
  {
    *(_DWORD *)std::stringbuf::string_type buf = *a4;
    sub_100448674(v12, (int *)buf);
    sub_100448364((uint64_t)v10, (uint64_t)v12);
    sub_10043EA28(a1, (uint64_t)v10);
    sub_1002DDAD8((uint64_t)v10);
  }

  sub_1002DDAD8((uint64_t)v12);
}

void sub_10044165C(_Unwind_Exception *a1)
{
}

void sub_100441688(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  char v6 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, signalEnvironment", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v8 = 0;
    uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, signalEnvironment",  &v8,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onSignalEnvironmentNotification(int, const CLSignalEnvironmentProvider_Type::Notifica tion &, const CLSignalEnvironmentProvider_Type::NotificationData &)",  "%s\n",  v7);
  }

  int v9[2] = *a4;
  v9[0] = 15;
  sub_10043EA28(a1, (uint64_t)v9);
  sub_1002DDAD8((uint64_t)v9);
}

void sub_100441840( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
}

void sub_10044185C(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  v18[0] = 0;
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  uint64_t v7 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, clientNotify", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v15 = 0;
    int v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, clientNotify",  &v15,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientM anager_Type::NotificationData &)",  "%s\n",  v12);
  }

  if (*a3 == 4)
  {
    *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(a4 + 188) == 1;
    sub_100448778(v18, (int *)buf);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v10 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "@WifiLogic, entry, event, location services toggle",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      __int16 v15 = 0;
      LODWORD(v14) = 2;
      int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiLogic, entry, event, location services toggle",  &v15,  v14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClien tManager_Type::NotificationData &)",  "%s\n",  v13);
    }

    if (*(_DWORD *)(a4 + 188) == 1) {
      goto LABEL_28;
    }
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    uint64_t v11 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "@WifiLogic, #Warning Location Services disabled, clearing database entries",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2))
    {
LABEL_27:
      sub_100441E1C();
LABEL_28:
      sub_100448364((uint64_t)v16, (uint64_t)v18);
      sub_10043EA28(a1, (uint64_t)v16);
      sub_1002DDAD8((uint64_t)v16);
      goto LABEL_29;
    }

    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v15 = 0;
    LODWORD(v14) = 2;
    __int16 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiLogic, #Warning Location Services disabled, clearing database entries",  &v15,  v14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientM anager_Type::NotificationData &)",  "%s\n",  v9);
LABEL_41:
    goto LABEL_27;
  }

  if (!*a3)
  {
    *(_DWORD *)std::stringbuf::string_type buf = 2;
    sub_100448778(v18, (int *)buf);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v8 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "@WifiLogic, entry, event, privacy reset",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      goto LABEL_27;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v15 = 0;
    LODWORD(v14) = 2;
    __int16 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiLogic, entry, event, privacy reset",  &v15,  v14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientM anager_Type::NotificationData &)",  "%s\n",  v9);
    goto LABEL_41;
  }

void sub_100441DE0(_Unwind_Exception *a1)
{
}

void sub_100441E1C()
{
  unsigned __int8 v0 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      unint64_t v2 = __ldaxr(p_shared_owners);
    while (__stlxr(v2 - 1, p_shared_owners));
    if (!v2)
    {
      ((void (*)(std::__shared_weak_count *))v0->__on_zero_shared)(v0);
      std::__shared_weak_count::__release_weak(v0);
    }
  }

void sub_100441E84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100441E98(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  v13[0] = 0;
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  uint64_t v7 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, alsNotify", (uint8_t *)buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int16 v10 = 0;
    __int16 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, alsNotify",  &v10,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Notification &, const CLNetworkLocationProvider_Type::NotificationData &)",  "%s\n",  v9);
  }

  int v8 = *a3;
  if (*a3 == 1)
  {
    *(void *)std::stringbuf::string_type buf = *(void *)a4;
    sub_100448A98((uint64_t)v13, buf);
    goto LABEL_13;
  }

  if (v8 == 2)
  {
    if (!*(_DWORD *)(a4 + 4))
    {
      buf[0] = *(_DWORD *)a4;
      sub_10044898C(v13, buf);
    }

    goto LABEL_13;
  }

  if (v8 == 3)
  {
    buf[0] = *(_DWORD *)a4;
    sub_100448888(v13, buf);
LABEL_13:
    sub_100448364((uint64_t)v11, (uint64_t)v13);
    sub_10043EA28(a1, (uint64_t)v11);
    sub_1002DDAD8((uint64_t)v11);
  }

  sub_1002DDAD8((uint64_t)v13);
}

void sub_1004420CC(_Unwind_Exception *a1)
{
}

void sub_100442100(uint64_t a1, uint64_t a2, int *a3, int32x2_t *a4)
{
  v23[0] = 0;
  int v6 = *a3;
  if (*a3 > 14)
  {
    if (v6 == 15)
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      uint64_t v11 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        int v12 = a4->u8[0];
        buf.i32[0] = 67240192;
        buf.i32[1] = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, entry, batterysaver, %{public}d",  (uint8_t *)&buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101839340);
        }
        __int32 v17 = a4->u8[0];
        int v20 = 67240192;
        __int32 v21 = v17;
        int v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, batterysaver, %{public}d",  &v20,  8);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaem onStatus_Type::NotificationData &)",  "%s\n",  v18);
      }

      buf.i8[0] = a4->i8[0];
      sub_100448CA8((uint64_t)v23, &buf);
      goto LABEL_30;
    }

    if (v6 == 16)
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      __int16 v9 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        buf.i16[0] = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, entry, heartbeat",  (uint8_t *)&buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101839340);
        }
        LOWORD(v2sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
        __int16 v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, heartbeat",  &v20,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaem onStatus_Type::NotificationData &)",  "%s\n",  v15);
      }

      sub_100448E8C(v23);
      goto LABEL_30;
    }
  }

  else
  {
    if (v6 == 3)
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      __int16 v10 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        buf.i16[0] = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, entry, wake",  (uint8_t *)&buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101839340);
        }
        LOWORD(v2sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
        uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, wake",  &v20,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaem onStatus_Type::NotificationData &)",  "%s\n",  v16);
      }

      sub_100448DAC(v23);
      goto LABEL_30;
    }

    if (v6 == 6)
    {
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      uint64_t v7 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        __int32 v8 = a4->i32[1];
        buf.i32[0] = 67240192;
        buf.i32[1] = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, entry, reach, %{public}d",  (uint8_t *)&buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_101839340);
        }
        __int32 v13 = a4->i32[1];
        int v20 = 67240192;
        __int32 v21 = v13;
        uint64_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, reach, %{public}d",  &v20,  8);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaem onStatus_Type::NotificationData &)",  "%s\n",  v14);
      }

      int32x2_t buf = vrev64_s32(*a4);
      sub_100448BA4((uint64_t)v23, &buf);
LABEL_30:
      sub_100448364((uint64_t)v19, (uint64_t)v23);
      sub_10043EA28(a1, (uint64_t)v19);
      sub_1002DDAD8((uint64_t)v19);
    }
  }

  sub_1002DDAD8((uint64_t)v23);
}

void sub_10044270C(_Unwind_Exception *a1)
{
}

void sub_100442750(uint64_t a1, uint64_t a2, _DWORD *a3, uint8_t *a4)
{
  v14[0] = 0;
  if (*a3 == 5)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    int v6 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *a4;
      *(_DWORD *)int32x2_t buf = 67240192;
      int v13 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, entry, companionnearby, %{public}d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      int v8 = *a4;
      v11[0] = 67240192;
      v11[1] = v8;
      __int16 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, entry, companionnearby, %{public}d",  v11,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)",  "%s\n",  v9);
    }

    sub_1004F2598();
    if (sub_1001B9A1C())
    {
      buf[0] = *a4;
      sub_100448F6C((uint64_t)v14, buf);
      sub_100448364((uint64_t)v10, (uint64_t)v14);
      sub_10043EA28(a1, (uint64_t)v10);
      sub_1002DDAD8((uint64_t)v10);
    }
  }

  sub_1002DDAD8((uint64_t)v14);
}

void sub_10044295C(_Unwind_Exception *a1)
{
}

void sub_100442988(uint64_t a1, uint64_t a2, _DWORD *a3, __int128 *a4)
{
  if (*a3 == 5)
  {
    __int128 v23 = a4[6];
    __int128 v24 = a4[7];
    *(_OWORD *)uint64_t v25 = a4[8];
    *(_OWORD *)&v25[12] = *(__int128 *)((char *)a4 + 140);
    __int128 v19 = a4[2];
    __int128 v20 = a4[3];
    __int128 v21 = a4[4];
    __int128 v22 = a4[5];
    __int128 v17 = *a4;
    __int128 v18 = a4[1];
    memcpy(v26, a4 + 10, sizeof(v26));
    uint64_t v6 = *((void *)a4 + 85);
    uint64_t v7 = *((void *)a4 + 86);
    if (v7)
    {
      int v8 = (unint64_t *)(v7 + 8);
      do
        unint64_t v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }

    __int16 v10 = (__int128 *)((char *)a4 + 696);
    __int128 v11 = v10[5];
    __int128 v33 = v10[4];
    *(_OWORD *)uint64_t v34 = v11;
    *(void *)&v34[13] = *(void *)((char *)v10 + 93);
    __int128 v12 = v10[1];
    __int128 v29 = *v10;
    __int128 v30 = v12;
    __int128 v13 = v10[3];
    __int128 v31 = v10[2];
    __int128 v32 = v13;
    __int128 v37 = v18;
    __int128 v36 = v17;
    __int128 v41 = v22;
    __int128 v40 = v21;
    __int128 v39 = v20;
    __int128 v38 = v19;
    *(_OWORD *)((char *)v44 + 12) = *(_OWORD *)&v25[12];
    v44[0] = *(_OWORD *)v25;
    __int128 v43 = v24;
    __int128 v42 = v23;
    memcpy(v45, v26, sizeof(v45));
    uint64_t v46 = v6;
    uint64_t v47 = v7;
    uint64_t v27 = 0LL;
    uint64_t v28 = 0LL;
    *(void *)&v53[13] = *(void *)((char *)v10 + 93);
    __int128 v14 = v10[5];
    __int128 v52 = v10[4];
    *(_OWORD *)__int128 v53 = v14;
    __int128 v15 = v10[1];
    __int128 v48 = *v10;
    __int128 v49 = v15;
    __int128 v16 = v10[2];
    __int128 v51 = v10[3];
    __int128 v50 = v16;
    int v35 = 16;
    sub_10043EA28(a1, (uint64_t)&v35);
    sub_1002DDAD8((uint64_t)&v35);
  }

void sub_100442B50(_Unwind_Exception *a1)
{
}

uint64_t sub_100442B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(double *)(a2 + 3368) = (*(double (**)(void))(**(void **)(a1 + 120) + 184LL))(*(void *)(a1 + 120));
  [*(id *)(a1 + 136) nextFireTime];
  *(void *)(a2 + 3376) = v6;
  int v12 = 0;
  int v7 = sub_100247620(a1, &v12, 1LL);
  int v12 = 3;
  int v8 = sub_100247620(a1, &v12, 1LL);
  int v12 = 4;
  int v9 = sub_100247620(a1, &v12, 1LL);
  int v12 = 22;
  int v10 = sub_100247620(a1, &v12, 1LL);
  sub_10043EDD0(a1);
  *(_DWORD *)(a2 + 3384) = v7;
  *(_DWORD *)(a2 + 3388) = v8;
  *(_DWORD *)(a2 + 3392) = v9;
  *(_DWORD *)(a2 + 3396) = v10;
  *(_DWORD *)(a2 + 340sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 1176256512;
  *(_BYTE *)(a2 + 3404) = (*(uint64_t (**)(void))(**(void **)(a1 + 120) + 216LL))(*(void *)(a1 + 120));
  *(_BYTE *)(a2 + 3405) = (*(uint64_t (**)(void))(**(void **)(a1 + 120) + 224LL))(*(void *)(a1 + 120));
  *(_BYTE *)(a2 + 3406) = (*(uint64_t (**)(void))(**(void **)(a1 + 120) + 232LL))(*(void *)(a1 + 120));
  return sub_1004464F0(a3, a2);
}

uint64_t sub_100442CA8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v4 = *(_OWORD *)(a2 + 16);
  __int128 v5 = *(_OWORD *)(a2 + 32);
  __int128 v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  __int128 v7 = *(_OWORD *)(a2 + 80);
  __int128 v8 = *(_OWORD *)(a2 + 96);
  __int128 v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v7;
  sub_10005F550(a1 + 144, (__int128 *)(a2 + 144));
  sub_10005F550(a1 + 160, (__int128 *)(a2 + 160));
  sub_10005F550(a1 + 176, (__int128 *)(a2 + 176));
  sub_100351804(a1 + 192, a2 + 192);
  *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
  sub_10005F550(a1 + 296, (__int128 *)(a2 + 296));
  __int128 v10 = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 328) = v10;
  __int128 v11 = *(_OWORD *)(a2 + 392);
  __int128 v13 = *(_OWORD *)(a2 + 344);
  __int128 v12 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v11;
  *(_OWORD *)(a1 + 344) = v13;
  *(_OWORD *)(a1 + 36sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v12;
  __int128 v15 = *(_OWORD *)(a2 + 424);
  __int128 v14 = *(_OWORD *)(a2 + 440);
  __int128 v16 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 452) = *(_OWORD *)(a2 + 452);
  *(_OWORD *)(a1 + 424) = v15;
  *(_OWORD *)(a1 + 44sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v14;
  *(_OWORD *)(a1 + 408) = v16;
  memcpy((void *)(a1 + 472), (const void *)(a2 + 472), 0x201uLL);
  sub_10005F550(a1 + 992, (__int128 *)(a2 + 992));
  __int128 v17 = *(_OWORD *)(a2 + 1008);
  __int128 v18 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 104sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1008) = v17;
  *(_OWORD *)(a1 + 1024) = v18;
  __int128 v19 = *(_OWORD *)(a2 + 1056);
  __int128 v20 = *(_OWORD *)(a2 + 1072);
  __int128 v21 = *(_OWORD *)(a2 + 1088);
  *(void *)(a1 + 1101) = *(void *)(a2 + 1101);
  *(_OWORD *)(a1 + 1088) = v21;
  *(_OWORD *)(a1 + 1072) = v20;
  *(_OWORD *)(a1 + 1056) = v19;
  __int128 v23 = *(_OWORD *)(a2 + 1224);
  __int128 v22 = *(_OWORD *)(a2 + 1240);
  __int128 v24 = *(_OWORD *)(a2 + 1208);
  *(_OWORD *)(a1 + 1252) = *(_OWORD *)(a2 + 1252);
  *(_OWORD *)(a1 + 1224) = v23;
  *(_OWORD *)(a1 + 124sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v22;
  *(_OWORD *)(a1 + 1208) = v24;
  __int128 v26 = *(_OWORD *)(a2 + 1144);
  __int128 v25 = *(_OWORD *)(a2 + 1160);
  __int128 v27 = *(_OWORD *)(a2 + 1192);
  *(_OWORD *)(a1 + 1176) = *(_OWORD *)(a2 + 1176);
  *(_OWORD *)(a1 + 1192) = v27;
  *(_OWORD *)(a1 + 1144) = v26;
  *(_OWORD *)(a1 + 116sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v25;
  __int128 v28 = *(_OWORD *)(a2 + 1128);
  *(_OWORD *)(a1 + 1112) = *(_OWORD *)(a2 + 1112);
  *(_OWORD *)(a1 + 1128) = v28;
  memcpy((void *)(a1 + 1272), (const void *)(a2 + 1272), 0x201uLL);
  sub_10005F550(a1 + 1792, (__int128 *)(a2 + 1792));
  __int128 v29 = *(_OWORD *)(a2 + 1840);
  __int128 v30 = *(_OWORD *)(a2 + 1824);
  *(_OWORD *)(a1 + 1808) = *(_OWORD *)(a2 + 1808);
  *(_OWORD *)(a1 + 1824) = v30;
  *(_OWORD *)(a1 + 184sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v29;
  __int128 v31 = *(_OWORD *)(a2 + 1872);
  __int128 v32 = *(_OWORD *)(a2 + 1888);
  uint64_t v33 = *(void *)(a2 + 1901);
  *(_OWORD *)(a1 + 1856) = *(_OWORD *)(a2 + 1856);
  *(void *)(a1 + 1901) = v33;
  *(_OWORD *)(a1 + 1888) = v32;
  *(_OWORD *)(a1 + 1872) = v31;
  sub_10005F550(a1 + 1912, (__int128 *)(a2 + 1912));
  memcpy((void *)(a1 + 1928), (const void *)(a2 + 1928), 0x170uLL);
  memcpy((void *)(a1 + 2296), (const void *)(a2 + 2296), 0x201uLL);
  sub_10005F550(a1 + 2816, (__int128 *)(a2 + 2816));
  __int128 v34 = *(_OWORD *)(a2 + 2864);
  __int128 v35 = *(_OWORD *)(a2 + 2848);
  *(_OWORD *)(a1 + 2832) = *(_OWORD *)(a2 + 2832);
  *(_OWORD *)(a1 + 2848) = v35;
  *(_OWORD *)(a1 + 2864) = v34;
  __int128 v36 = *(_OWORD *)(a2 + 2896);
  __int128 v37 = *(_OWORD *)(a2 + 2912);
  uint64_t v38 = *(void *)(a2 + 2925);
  *(_OWORD *)(a1 + 288sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 2880);
  *(void *)(a1 + 2925) = v38;
  *(_OWORD *)(a1 + 2912) = v37;
  *(_OWORD *)(a1 + 2896) = v36;
  char v39 = *(_BYTE *)(a2 + 2944);
  *(void *)(a1 + 2936) = *(void *)(a2 + 2936);
  *(_BYTE *)(a1 + 2944) = v39;
  char v40 = *(_BYTE *)(a2 + 2960);
  *(void *)(a1 + 2952) = *(void *)(a2 + 2952);
  *(_BYTE *)(a1 + 296sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v40;
  __int128 v41 = (void **)(a1 + 2968);
  __int128 v42 = *(_OWORD *)(a2 + 2968);
  *(void *)(a1 + 2984) = *(void *)(a2 + 2984);
  *(_OWORD *)__int128 v41 = v42;
  *(_BYTE *)(a2 + 2991) = 0;
  *(_BYTE *)(a2 + 2968) = 0;
  __int128 v43 = *(_OWORD *)(a2 + 3052);
  __int128 v44 = *(_OWORD *)(a2 + 3040);
  __int128 v45 = *(_OWORD *)(a2 + 3024);
  *(_OWORD *)(a1 + 3008) = *(_OWORD *)(a2 + 3008);
  *(_OWORD *)(a1 + 3024) = v45;
  *(_OWORD *)(a1 + 304sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v44;
  *(_OWORD *)(a1 + 3052) = v43;
  *(_OWORD *)(a1 + 2992) = *(_OWORD *)(a2 + 2992);
  uint64_t v46 = (void **)(a1 + 3072);
  __int128 v47 = *(_OWORD *)(a2 + 3072);
  *(void *)(a1 + 3088) = *(void *)(a2 + 3088);
  *(_OWORD *)uint64_t v46 = v47;
  *(_BYTE *)(a2 + 3095) = 0;
  *(_BYTE *)(a2 + 3072) = 0;
  __int128 v49 = *(_OWORD *)(a2 + 3176);
  __int128 v48 = *(_OWORD *)(a2 + 3192);
  __int128 v50 = *(_OWORD *)(a2 + 3160);
  *(_OWORD *)(a1 + 3144) = *(_OWORD *)(a2 + 3144);
  *(_OWORD *)(a1 + 316sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v50;
  *(_OWORD *)(a1 + 3176) = v49;
  *(_OWORD *)(a1 + 3192) = v48;
  __int128 v52 = *(_OWORD *)(a2 + 3112);
  __int128 v51 = *(_OWORD *)(a2 + 3128);
  *(_OWORD *)(a1 + 3096) = *(_OWORD *)(a2 + 3096);
  *(_OWORD *)(a1 + 3112) = v52;
  *(_OWORD *)(a1 + 3128) = v51;
  __int128 v53 = *(_OWORD *)(a2 + 3208);
  __int128 v54 = *(_OWORD *)(a2 + 3224);
  __int128 v55 = *(_OWORD *)(a2 + 3240);
  *(_BYTE *)(a1 + 3256) = *(_BYTE *)(a2 + 3256);
  *(_OWORD *)(a1 + 3224) = v54;
  *(_OWORD *)(a1 + 324sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v55;
  *(_OWORD *)(a1 + 3208) = v53;
  sub_1002DE844((void ***)(a1 + 3264));
  *(_OWORD *)(a1 + 3264) = *(_OWORD *)(a2 + 3264);
  *(void *)(a1 + 328sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 3280);
  *(void *)(a2 + 328sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(_OWORD *)(a2 + 3264) = 0u;
  sub_10001CDA0(a1 + 3288, (uint64_t *)(a2 + 3288));
  __int128 v56 = *(_OWORD *)(a2 + 3328);
  *(void *)(a1 + 3344) = *(void *)(a2 + 3344);
  *(_OWORD *)(a1 + 3328) = v56;
  __int128 v57 = *(_OWORD *)(a2 + 3352);
  __int128 v58 = *(_OWORD *)(a2 + 3368);
  __int128 v59 = *(_OWORD *)(a2 + 3384);
  *(void *)(a1 + 3399) = *(void *)(a2 + 3399);
  *(_OWORD *)(a1 + 3368) = v58;
  *(_OWORD *)(a1 + 3384) = v59;
  *(_OWORD *)(a1 + 3352) = v57;
  sub_10005F550(a1 + 3408, (__int128 *)(a2 + 3408));
  __int128 v60 = *(_OWORD *)(a2 + 3433);
  *(_OWORD *)(a1 + 3424) = *(_OWORD *)(a2 + 3424);
  *(_OWORD *)(a1 + 3433) = v60;
  return a1;
}

uint64_t sub_100443054(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a2 + 1312))
  {
    int v5 = sub_10043CBE4(a1, (uint64_t *)(a2 + 1168));
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int128 v6 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t v200 = 67240192;
      *(_DWORD *)&v200[4] = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, decision, newUpdate, didStart, %{public}d",  v200,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(v200, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      *(_DWORD *)__int128 __p = 67240192;
      *(_DWORD *)&__p[4] = v5;
      __int128 v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v200,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, decision, newUpdate, didStart, %{public}d",  __p,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationProvider::HandleEventResults CLWifiLocationProvider::handleLogicOutput(CL::Wifi1::Output)",  "%s\n",  v7);
      if (v7 != v200) {
        free(v7);
      }
    }
  }

  else
  {
    int v5 = 0;
  }

  if (*(_BYTE *)(a2 + 1344))
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int128 v8 = (void *)(a2 + 1320);
    __int128 v9 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_INFO))
    {
      __int128 v10 = (void *)(a2 + 1320);
      *(_DWORD *)uint64_t v200 = 136446210;
      *(void *)&v200[4] = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "@WsbReproc, reason, %{public}s", v200, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(v200, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      *(_DWORD *)__int128 __p = 136446210;
      *(void *)&__p[4] = v8;
      LODWORD(v151) = 12;
      __int16 v122 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v200,  1628LL,  &_mh_execute_header,  qword_101934868,  1LL,  "@WsbReproc, reason, %{public}s",  __p,  v151);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationProvider::HandleEventResults CLWifiLocationProvider::handleLogicOutput(CL::Wifi1::Output)",  "%s\n",  v122);
      if (v122 != v200) {
        free(v122);
      }
    }

    v199[0] = 29;
    sub_10043EA28(a1, v199);
    sub_1002DDAD8((uint64_t)v199);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int128 v11 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v200 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "@WifiLogic, decision, reprocWsb", v200, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(v200, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      *(_WORD *)__int128 __p = 0;
      LODWORD(v151) = 2;
      uint64_t v123 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v200,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, decision, reprocWsb",  __p,  v151);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationProvider::HandleEventResults CLWifiLocationProvider::handleLogicOutput(CL::Wifi1::Output)",  "%s\n",  v123);
      if (v123 != v200) {
        free(v123);
      }
    }
  }

  if (*(_BYTE *)(a2 + 48))
  {
    __int128 v12 = *(void **)(a2 + 16);
    memset(__p, 0, 24);
    unint64_t v13 = 0LL;
    if (v12)
    {
      __int128 v14 = v12;
      do
      {
        ++v13;
        __int128 v14 = (void *)*v14;
      }

      while (v14);
    }

    sub_100449070(__p, v12, 0LL, v13);
    unsigned int v15 = (*(uint64_t (**)(void, _BYTE *, void, void, uint64_t))(**(void **)(a1 + 120) + 160LL))( *(void *)(a1 + 120),  __p,  *(unsigned __int8 *)(a2 + 40),  *(unsigned __int8 *)(a2 + 41),  a2 + 44);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int128 v16 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v200 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "@WifiLogic, decision, alsreq", v200, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(v200, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      LOWORD(v156) = 0;
      LODWORD(v151) = 2;
      __int16 v124 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v200,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, decision, alsreq",  &v156,  v151);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationProvider::HandleEventResults CLWifiLocationProvider::handleLogicOutput(CL::Wifi1::Output)",  "%s\n",  v124);
      if (v124 != v200) {
        free(v124);
      }
    }

    uint64_t v198 = v15;
    int v197 = 21;
    sub_10043EA28(a1, &v197);
    sub_1002DDAD8((uint64_t)&v197);
    if (*(void *)__p)
    {
      *(void *)&__p[8] = *(void *)__p;
      operator delete(*(void **)__p);
    }
  }

  if (*(_BYTE *)(a2 + 104))
  {
    __int128 v17 = *(void **)(a2 + 72);
    memset(__p, 0, 24);
    unint64_t v18 = 0LL;
    if (v17)
    {
      __int128 v19 = v17;
      do
      {
        ++v18;
        __int128 v19 = (void *)*v19;
      }

      while (v19);
    }

    sub_100449070(__p, v17, 0LL, v18);
    unint64_t v196 = (*(unsigned int (**)(void, _BYTE *, uint64_t, void, uint64_t))(**(void **)(a1 + 120) + 160LL))( *(void *)(a1 + 120),  __p,  1LL,  0LL,  a2 + 96) | (unint64_t)&_mh_execute_header;
    int v195 = 21;
    sub_10043EA28(a1, &v195);
    sub_1002DDAD8((uint64_t)&v195);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int128 v20 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t v200 = 134349056;
      *(void *)&v200[4] = (uint64_t)(*(void *)&__p[8] - *(void *)__p) >> 3;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "@WifiLogic, decision, alswsb, aps, %{public}lu",  v200,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(v200, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      int v156 = 134349056;
      uint64_t v157 = (uint64_t)(*(void *)&__p[8] - *(void *)__p) >> 3;
      LODWORD(v151) = 12;
      int v125 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v200,  1628LL,  &_mh_execute_header,  qword_101934868,  2LL,  "@WifiLogic, decision, alswsb, aps, %{public}lu",  &v156,  v151);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationProvider::HandleEventResults CLWifiLocationProvider::handleLogicOutput(CL::Wifi1::Output)",  "%s\n",  v125);
      if (v125 != v200) {
        free(v125);
      }
    }

    if (*(void *)__p)
    {
      *(void *)&__p[8] = *(void *)__p;
      operator delete(*(void **)__p);
    }
  }

  if (!*(_BYTE *)(a2 + 200))
  {
    HIDWORD(v152) = v5;
    goto LABEL_80;
  }

  uint64_t v21 = *(void *)(a1 + 120);
  char v22 = *(_BYTE *)(a2 + 112);
  int v23 = *(_DWORD *)(a2 + 128);
  int v24 = *(unsigned __int8 *)(a2 + 132);
  if (*(char *)(a2 + 159) < 0)
  {
    sub_1010DD48C(__dst, *(void **)(a2 + 136), *(void *)(a2 + 144));
  }

  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a2 + 136);
    double v154 = *(double *)(a2 + 152);
  }

  char v25 = *(_BYTE *)(a2 + 192);
  if (v25)
  {
    memset(v200, 0, 24);
    sub_10001B72C( v200,  *(const void **)(a2 + 168),  *(void *)(a2 + 176),  (uint64_t)(*(void *)(a2 + 176) - *(void *)(a2 + 168)) >> 2);
    char v25 = 1;
  }

  else
  {
    v200[0] = 0;
  }

  v200[24] = v25;
  HIDWORD(v152) = (*(uint64_t (**)(uint64_t, void, BOOL, BOOL, void **, _BYTE *))(*(void *)v21 + 144LL))( v21,  v22,  v23 == 1,  v24 != 0,  __dst,  v200);
  if (v200[24] && *(void *)v200)
  {
    *(void *)&v200[8] = *(void *)v200;
    operator delete(*(void **)v200);
  }

  if (SHIBYTE(v154) < 0) {
    operator delete(__dst[0]);
  }
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_101839340);
  }
  __int128 v26 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
  {
    int v27 = *(char *)(a2 + 112);
    __int128 v28 = "normal";
    int v29 = *(unsigned __int8 *)(a2 + 132);
    if (*(_DWORD *)(a2 + 128) == 1) {
      __int128 v28 = "low";
    }
    *(_DWORD *)uint64_t v200 = 68290050;
    if (v29) {
      __int128 v30 = "low";
    }
    else {
      __int128 v30 = "default";
    }
    *(_DWORD *)&v200[4] = 0;
    *(_WORD *)&v200[8] = 2082;
    *(void *)&v200[10] = "";
    *(_WORD *)&v200[18] = 1026;
    *(_DWORD *)&v200[20] = v27;
    *(_WORD *)&v200[24] = 2082;
    *(void *)&v200[26] = v28;
    *(_WORD *)&v200[34] = 2082;
    *(void *)&v200[36] = v30;
    *(_WORD *)&v200[44] = 1026;
    *(_DWORD *)&v200[46] = HIDWORD(v152);
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:requesting wifi scan, scan_type:%{public}d, priority:%{public, location:escape_on ly}s, latency:%{public, location:escape_only}s, scan_request_successful:%{public}hhd}",  v200,  0x32u);
    uint64_t v31 = qword_101934860;
    if (((v5 ^ 1 | HIDWORD(v152)) & 1) != 0) {
      goto LABEL_75;
    }
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
LABEL_72:
    __int128 v32 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v200 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_ERROR,  "value of didStartScan being reset to false after successfully beginning a scan",  v200,  2u);
    }

    BOOL v33 = sub_1002921D0(115, 0);
    uint64_t v31 = qword_101934860;
    if (v33)
    {
      bzero(v200, 0x65CuLL);
      if (v31 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      *(_WORD *)__int128 __p = 0;
      LODWORD(v152) = 2;
      double v150 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  v200,  1628LL,  &_mh_execute_header,  qword_101934868,  16LL,  "value of didStartScan being reset to false after successfully beginning a scan",  __p,  v152);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "CLWifiLocationProvider::HandleEventResults CLWifiLocationProvider::handleLogicOutput(CL::Wifi1::Output)",  "%s\n",  v150);
      if (v150 != v200) {
        free(v150);
      }
      uint64_t v31 = qword_101934860;
    }

void sub_100445958( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, void *__p)
{
}

id sub_100445A4C(uint64_t a1, double a2, double a3)
{
  if (a3 == 1.79769313e308)
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    __int128 v7 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "@WifiFlow, nexttimer, off", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      LOWORD(v10[0]) = 0;
      __int128 v6 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiFlow, nexttimer, off",  v10,  2,  v10[0]);
      goto LABEL_19;
    }
  }

  else
  {
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_101839340);
    }
    int v5 = (os_log_s *)qword_101934868;
    if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int32x2_t buf = 67240192;
      int v12 = (int)a3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "@WifiFlow, nexttimer, %{public}d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_101839340);
      }
      LODWORD(v10[0]) = 67240192;
      HIDWORD(v10[0]) = (int)a3;
      __int128 v6 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiFlow, nexttimer, %{public}d",  v10,  8,  v10[0]);
LABEL_19:
      __int128 v9 = (uint8_t *)v6;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationProvider::scheduleNextTimer(CFAbsoluteTime, CFTimeInterval)",  "%s\n",  v6);
      if (v9 != buf) {
        free(v9);
      }
    }
  }

  return [*(id *)(a1 + 136) setNextFireDelay:a3];
}

void sub_100445CF0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  __int128 v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLWifiLocationProvider");
  sub_10047D890((uint64_t)v8, (uint64_t *)__p, a3, a1, a2);
  *__int128 v8 = &off_1018392D8;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100445D88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_100445DB4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  char v10 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLWifiLocationProvider");
  sub_10047D8C8((uint64_t)v10, a1, (uint64_t *)__p, a4, a2, a3);
  *char v10 = &off_1018392D8;
  *a5 = v10;
  if (v12 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100445E54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_100445E80(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100445EAC(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_100445ED8(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_100445F04(uint64_t a1, uint64_t *a2, __int128 *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v16 = *a2;
  __int128 v17 = (std::__shared_weak_count *)v6;
  if (v6)
  {
    __int128 v7 = (unint64_t *)(v6 + 8);
    do
      unint64_t v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }

  sub_1007FAF70((void *)a1, &v16);
  __int128 v9 = v17;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  sub_100446014(a2, &v15);
  *(_OWORD *)(a1 + 16) = v15;
  char v12 = (_BYTE *)(a1 + 32);
  if (*((char *)a3 + 23) < 0)
  {
    sub_1010DD48C(v12, *(void **)a3, *((void *)a3 + 1));
  }

  else
  {
    __int128 v13 = *a3;
    *(void *)(a1 + 48) = *((void *)a3 + 2);
    *(_OWORD *)char v12 = v13;
  }

  return a1;
}

void sub_100445FE4(_Unwind_Exception *a1)
{
}

void *sub_100446014@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  double v4 = operator new(0x90uLL);
  uint64_t result = sub_10044606C(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100446058(_Unwind_Exception *a1)
{
}

void *sub_10044606C(void *a1, uint64_t *a2)
{
  a1[2] = 0LL;
  *a1 = off_101839390;
  a1[1] = 0LL;
  sub_100C58EA4((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_1004460A4(_Unwind_Exception *a1)
{
}

void sub_1004460B8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101839390;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1004460CC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101839390;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_1004460F0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_100446100(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(void *)a1 = v4;
  if (*((char *)a2 + 39) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 16), (void *)a2[2], a2[3]);
  }

  else
  {
    __int128 v5 = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(_OWORD *)(a1 + 16) = v5;
  }

  *(_OWORD *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 5);
  __int128 v6 = *(_OWORD *)(a2 + 7);
  __int128 v7 = *(_OWORD *)(a2 + 9);
  __int128 v8 = *(_OWORD *)(a2 + 11);
  *(_OWORD *)(a1 + 10sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)a2 + 100);
  *(_OWORD *)(a1 + 88) = v8;
  *(_OWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 56) = v6;
  __int128 v9 = (_BYTE *)(a1 + 120);
  if (*((char *)a2 + 143) < 0)
  {
    sub_1010DD48C(v9, (void *)a2[15], a2[16]);
  }

  else
  {
    __int128 v10 = *(_OWORD *)(a2 + 15);
    *(void *)(a1 + 136) = a2[17];
    *(_OWORD *)__int128 v9 = v10;
  }

  return a1;
}

void sub_1004461C0(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1004461DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)a2 = 0LL;
  *(void *)(a2 + 8) = 0LL;
  *(void *)(a2 + 16) = 0LL;
  *(_DWORD *)(a1 + 24) = a3;
  sub_1000C6980((_BYTE *)(a1 + 32), a4);
  return a1;
}

void sub_100446234(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10044624C(uint64_t a1, void *a2, void *a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a2 != a3)
  {
    __int128 v5 = a2;
    do
    {
      sub_1002DDF18(a1, v5, (uint64_t)v5);
      v5 += 11;
    }

    while (v5 != a3);
  }

  return a1;
}

void sub_1004462B0(_Unwind_Exception *a1)
{
}

uint64_t sub_1004462C4(uint64_t a1, uint64_t *a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_10001B9CC(a1, a2);
  *(void *)(v8 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a2[5];
  *(_BYTE *)(v8 + 48) = a3;
  sub_1000C6980((_BYTE *)(v8 + 56), a4);
  return a1;
}

void sub_100446314(_Unwind_Exception *a1)
{
}

void sub_100446328(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

const char *sub_100446354(int *a1)
{
  int v1 = *a1 ^ (*a1 >> 31);
  uint64_t result = "None";
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = "Wifi::ScanReady";
      break;
    case 2:
      uint64_t result = "Wifi::ScanError";
      break;
    case 3:
      uint64_t result = "Wifi::ScanBusy";
      break;
    case 4:
      uint64_t result = "Wifi::Power";
      break;
    case 5:
      uint64_t result = "Wifi::LinkStatus";
      break;
    case 6:
      uint64_t result = "Wifi::Roam";
      break;
    case 7:
      uint64_t result = "Wifi::Scan";
      break;
    case 8:
      uint64_t result = "Wifi::Wsb";
      break;
    case 9:
      uint64_t result = "System::Privacy";
      break;
    case 10:
      uint64_t result = "System::Reachability";
      break;
    case 11:
      uint64_t result = "System::CoarseMotion";
      break;
    case 12:
      uint64_t result = "System::BatterySaverMode";
      break;
    case 13:
      uint64_t result = "System::DeviceWake";
      break;
    case 14:
      uint64_t result = "System::CompanionNearby";
      break;
    case 15:
      uint64_t result = "System::SignalEnvironment";
      break;
    case 16:
      uint64_t result = "System::LeechLocation";
      break;
    case 17:
      uint64_t result = "System::MetricHeartbeat";
      break;
    case 18:
      uint64_t result = "System::Elevation";
      break;
    case 19:
      uint64_t result = "Network::AlsError";
      break;
    case 20:
      uint64_t result = "Network::AlsFinished";
      break;
    case 21:
      uint64_t result = "Network::AlsRequestResult";
      break;
    case 22:
      uint64_t result = "Network::AlsAllUnknown";
      break;
    case 23:
      uint64_t result = "Client::EmergencyState";
      break;
    case 24:
      uint64_t result = "Client::LocationRequest";
      break;
    case 25:
      uint64_t result = "Client::Registration";
      break;
    case 26:
      uint64_t result = "Client::Unregistration";
      break;
    case 27:
      uint64_t result = "Client::UpdateTimer";
      break;
    case 28:
      uint64_t result = "Client::WsbTimer";
      break;
    case 29:
      uint64_t result = "ReprocessWifiScanBuffer";
      break;
    default:
      sub_1002DDAB0();
  }

  return result;
}

uint64_t sub_1004464F0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v4 = *(_OWORD *)(a2 + 16);
  __int128 v5 = *(_OWORD *)(a2 + 32);
  __int128 v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  __int128 v7 = *(_OWORD *)(a2 + 80);
  __int128 v8 = *(_OWORD *)(a2 + 96);
  __int128 v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v7;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a2 + 144) = 0LL;
  *(void *)(a2 + 152) = 0LL;
  *(_OWORD *)(a1 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 160);
  *(void *)(a2 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(void *)(a2 + 168) = 0LL;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a2 + 176) = 0LL;
  *(void *)(a2 + 184) = 0LL;
  *(_BYTE *)(a1 + 192) = 0;
  *(_BYTE *)(a1 + 28sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  if (*(_BYTE *)(a2 + 280))
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    __int128 v10 = *(_OWORD *)(a2 + 200);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(_OWORD *)(a1 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v10;
    *(void *)(a2 + 208) = 0LL;
    *(void *)(a2 + 216) = 0LL;
    *(void *)(a2 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
    __int128 v11 = *(_OWORD *)(a2 + 224);
    __int128 v12 = *(_OWORD *)(a2 + 240);
    __int128 v13 = *(_OWORD *)(a2 + 256);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(_OWORD *)(a1 + 24sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v12;
    *(_OWORD *)(a1 + 256) = v13;
    *(_OWORD *)(a1 + 224) = v11;
    *(_BYTE *)(a1 + 28sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 1;
  }

  *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
  uint64_t v14 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v14;
  *(_OWORD *)(a2 + 296) = 0u;
  __int128 v15 = *(_OWORD *)(a2 + 392);
  __int128 v17 = *(_OWORD *)(a2 + 344);
  __int128 v16 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v15;
  *(_OWORD *)(a1 + 344) = v17;
  *(_OWORD *)(a1 + 36sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v16;
  __int128 v19 = *(_OWORD *)(a2 + 424);
  __int128 v18 = *(_OWORD *)(a2 + 440);
  __int128 v20 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 452) = *(_OWORD *)(a2 + 452);
  *(_OWORD *)(a1 + 424) = v19;
  *(_OWORD *)(a1 + 44sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v18;
  *(_OWORD *)(a1 + 408) = v20;
  __int128 v21 = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 328) = v21;
  memcpy((void *)(a1 + 472), (const void *)(a2 + 472), 0x201uLL);
  *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
  *(_OWORD *)(a2 + 992) = 0u;
  __int128 v22 = *(_OWORD *)(a2 + 1040);
  __int128 v23 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v23;
  *(_OWORD *)(a1 + 104sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v22;
  __int128 v24 = *(_OWORD *)(a2 + 1056);
  uint64_t v25 = *(void *)(a2 + 1101);
  __int128 v26 = *(_OWORD *)(a2 + 1072);
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1072) = v26;
  *(void *)(a1 + 1101) = v25;
  *(_OWORD *)(a1 + 1056) = v24;
  __int128 v27 = *(_OWORD *)(a2 + 1128);
  *(_OWORD *)(a1 + 1112) = *(_OWORD *)(a2 + 1112);
  *(_OWORD *)(a1 + 1128) = v27;
  __int128 v29 = *(_OWORD *)(a2 + 1224);
  __int128 v28 = *(_OWORD *)(a2 + 1240);
  __int128 v30 = *(_OWORD *)(a2 + 1208);
  *(_OWORD *)(a1 + 1252) = *(_OWORD *)(a2 + 1252);
  *(_OWORD *)(a1 + 1224) = v29;
  *(_OWORD *)(a1 + 124sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v28;
  *(_OWORD *)(a1 + 1208) = v30;
  __int128 v32 = *(_OWORD *)(a2 + 1144);
  __int128 v31 = *(_OWORD *)(a2 + 1160);
  __int128 v33 = *(_OWORD *)(a2 + 1192);
  *(_OWORD *)(a1 + 1176) = *(_OWORD *)(a2 + 1176);
  *(_OWORD *)(a1 + 1192) = v33;
  *(_OWORD *)(a1 + 1144) = v32;
  *(_OWORD *)(a1 + 116sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v31;
  memcpy((void *)(a1 + 1272), (const void *)(a2 + 1272), 0x201uLL);
  *(_OWORD *)(a1 + 1792) = *(_OWORD *)(a2 + 1792);
  *(_OWORD *)(a2 + 1792) = 0u;
  __int128 v34 = *(_OWORD *)(a2 + 1840);
  __int128 v35 = *(_OWORD *)(a2 + 1824);
  *(_OWORD *)(a1 + 1808) = *(_OWORD *)(a2 + 1808);
  *(_OWORD *)(a1 + 1824) = v35;
  *(_OWORD *)(a1 + 184sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v34;
  __int128 v36 = *(_OWORD *)(a2 + 1856);
  uint64_t v37 = *(void *)(a2 + 1901);
  __int128 v38 = *(_OWORD *)(a2 + 1888);
  *(_OWORD *)(a1 + 1872) = *(_OWORD *)(a2 + 1872);
  *(_OWORD *)(a1 + 1888) = v38;
  *(void *)(a1 + 1901) = v37;
  *(_OWORD *)(a1 + 1856) = v36;
  *(void *)(a1 + 1912) = *(void *)(a2 + 1912);
  *(void *)(a1 + 192sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 1920);
  *(_OWORD *)(a2 + 1912) = 0u;
  memcpy((void *)(a1 + 1928), (const void *)(a2 + 1928), 0x170uLL);
  memcpy((void *)(a1 + 2296), (const void *)(a2 + 2296), 0x201uLL);
  *(_OWORD *)(a1 + 2816) = *(_OWORD *)(a2 + 2816);
  *(_OWORD *)(a2 + 2816) = 0u;
  __int128 v39 = *(_OWORD *)(a2 + 2864);
  __int128 v40 = *(_OWORD *)(a2 + 2848);
  *(_OWORD *)(a1 + 2832) = *(_OWORD *)(a2 + 2832);
  *(_OWORD *)(a1 + 2848) = v40;
  *(_OWORD *)(a1 + 2864) = v39;
  __int128 v41 = *(_OWORD *)(a2 + 2880);
  uint64_t v42 = *(void *)(a2 + 2925);
  __int128 v43 = *(_OWORD *)(a2 + 2912);
  *(_OWORD *)(a1 + 2896) = *(_OWORD *)(a2 + 2896);
  *(_OWORD *)(a1 + 2912) = v43;
  *(void *)(a1 + 2925) = v42;
  *(_OWORD *)(a1 + 288sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v41;
  uint64_t v44 = *(void *)(a2 + 2936);
  *(_BYTE *)(a1 + 2944) = *(_BYTE *)(a2 + 2944);
  *(void *)(a1 + 2936) = v44;
  char v45 = *(_BYTE *)(a2 + 2960);
  *(void *)(a1 + 2952) = *(void *)(a2 + 2952);
  *(_BYTE *)(a1 + 296sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v45;
  uint64_t v46 = *(void *)(a2 + 2984);
  *(_OWORD *)(a1 + 2968) = *(_OWORD *)(a2 + 2968);
  *(void *)(a1 + 2984) = v46;
  *(void *)(a2 + 2984) = 0LL;
  *(_OWORD *)(a2 + 2968) = 0u;
  *(_OWORD *)(a1 + 2992) = *(_OWORD *)(a2 + 2992);
  __int128 v47 = *(_OWORD *)(a2 + 3008);
  __int128 v48 = *(_OWORD *)(a2 + 3024);
  __int128 v49 = *(_OWORD *)(a2 + 3040);
  *(_OWORD *)(a1 + 3052) = *(_OWORD *)(a2 + 3052);
  *(_OWORD *)(a1 + 304sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v49;
  *(_OWORD *)(a1 + 3024) = v48;
  *(_OWORD *)(a1 + 3008) = v47;
  uint64_t v50 = *(void *)(a2 + 3088);
  *(_OWORD *)(a1 + 3072) = *(_OWORD *)(a2 + 3072);
  *(void *)(a1 + 3088) = v50;
  *(void *)(a2 + 3088) = 0LL;
  *(_OWORD *)(a2 + 3072) = 0u;
  __int128 v51 = *(_OWORD *)(a2 + 3096);
  __int128 v52 = *(_OWORD *)(a2 + 3128);
  *(_OWORD *)(a1 + 3112) = *(_OWORD *)(a2 + 3112);
  *(_OWORD *)(a1 + 3128) = v52;
  *(_OWORD *)(a1 + 3096) = v51;
  __int128 v53 = *(_OWORD *)(a2 + 3144);
  __int128 v54 = *(_OWORD *)(a2 + 3160);
  __int128 v55 = *(_OWORD *)(a2 + 3192);
  *(_OWORD *)(a1 + 3176) = *(_OWORD *)(a2 + 3176);
  *(_OWORD *)(a1 + 3192) = v55;
  *(_OWORD *)(a1 + 3144) = v53;
  *(_OWORD *)(a1 + 316sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v54;
  __int128 v56 = *(_OWORD *)(a2 + 3208);
  __int128 v57 = *(_OWORD *)(a2 + 3224);
  __int128 v58 = *(_OWORD *)(a2 + 3240);
  *(_BYTE *)(a1 + 3256) = *(_BYTE *)(a2 + 3256);
  *(_OWORD *)(a1 + 3224) = v57;
  *(_OWORD *)(a1 + 324sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v58;
  *(_OWORD *)(a1 + 3208) = v56;
  *(void *)(a1 + 328sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(_OWORD *)(a1 + 3264) = 0u;
  *(_OWORD *)(a1 + 3264) = *(_OWORD *)(a2 + 3264);
  *(void *)(a1 + 328sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 3280);
  *(_OWORD *)(a2 + 3264) = 0u;
  *(void *)(a2 + 328sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  sub_10001B9CC(a1 + 3288, (uint64_t *)(a2 + 3288));
  __int128 v59 = *(_OWORD *)(a2 + 3328);
  *(void *)(a1 + 3344) = *(void *)(a2 + 3344);
  *(_OWORD *)(a1 + 3328) = v59;
  __int128 v60 = *(_OWORD *)(a2 + 3352);
  __int128 v61 = *(_OWORD *)(a2 + 3368);
  __int128 v62 = *(_OWORD *)(a2 + 3384);
  *(void *)(a1 + 3399) = *(void *)(a2 + 3399);
  *(_OWORD *)(a1 + 3368) = v61;
  *(_OWORD *)(a1 + 3384) = v62;
  *(_OWORD *)(a1 + 3352) = v60;
  *(_OWORD *)(a1 + 3408) = *(_OWORD *)(a2 + 3408);
  *(_OWORD *)(a2 + 3408) = 0u;
  __int128 v63 = *(_OWORD *)(a2 + 3424);
  *(_OWORD *)(a1 + 3433) = *(_OWORD *)(a2 + 3433);
  *(_OWORD *)(a1 + 3424) = v63;
  return a1;
}

uint64_t sub_1004468D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1002E2300(a1, a2);
  sub_1002E2368(v4 + 56, a2 + 56);
  sub_1002E22AC((_BYTE *)(a1 + 112), a2 + 112);
  __int128 v5 = *(_OWORD *)(a2 + 208);
  __int128 v6 = *(_OWORD *)(a2 + 224);
  __int128 v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 24sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  *(_OWORD *)(a1 + 208) = v5;
  *(_OWORD *)(a1 + 224) = v6;
  __int128 v8 = *(_OWORD *)(a2 + 272);
  __int128 v9 = *(_OWORD *)(a2 + 288);
  __int128 v10 = *(_OWORD *)(a2 + 304);
  *(_DWORD *)(a1 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_DWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 288) = v9;
  *(_OWORD *)(a1 + 304) = v10;
  *(_OWORD *)(a1 + 272) = v8;
  *(_BYTE *)(a1 + 328) = 0;
  *(_BYTE *)(a1 + 1128) = 0;
  if (*(_BYTE *)(a2 + 1128))
  {
    __int128 v11 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v11;
    __int128 v12 = *(_OWORD *)(a2 + 360);
    __int128 v13 = *(_OWORD *)(a2 + 376);
    __int128 v14 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v14;
    *(_OWORD *)(a1 + 36sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v12;
    *(_OWORD *)(a1 + 376) = v13;
    __int128 v15 = *(_OWORD *)(a2 + 424);
    __int128 v16 = *(_OWORD *)(a2 + 440);
    __int128 v17 = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 468) = *(_OWORD *)(a2 + 468);
    *(_OWORD *)(a1 + 44sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v16;
    *(_OWORD *)(a1 + 456) = v17;
    *(_OWORD *)(a1 + 424) = v15;
    memcpy((void *)(a1 + 488), (const void *)(a2 + 488), 0x201uLL);
    *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
    uint64_t v18 = *(void *)(a2 + 1016);
    *(void *)(a1 + 1016) = v18;
    if (v18)
    {
      __int128 v19 = (unint64_t *)(v18 + 8);
      do
        unint64_t v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
    }

    __int128 v21 = *(_OWORD *)(a2 + 1024);
    __int128 v22 = *(_OWORD *)(a2 + 1040);
    *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
    *(_OWORD *)(a1 + 104sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v22;
    *(_OWORD *)(a1 + 1024) = v21;
    __int128 v23 = *(_OWORD *)(a2 + 1072);
    __int128 v24 = *(_OWORD *)(a2 + 1088);
    __int128 v25 = *(_OWORD *)(a2 + 1104);
    *(void *)(a1 + 1117) = *(void *)(a2 + 1117);
    *(_OWORD *)(a1 + 1104) = v25;
    *(_OWORD *)(a1 + 1088) = v24;
    *(_OWORD *)(a1 + 1072) = v23;
    *(_BYTE *)(a1 + 1128) = 1;
  }

  sub_1002E23D0(a1 + 1136, a2 + 1136);
  sub_1002E2474((_BYTE *)(a1 + 1168), a2 + 1168);
  sub_1002E24C8(a1 + 1320, (__int128 *)(a2 + 1320));
  sub_1002E2510(a1 + 1352, a2 + 1352);
  return a1;
}

void sub_100446A5C(_Unwind_Exception *a1)
{
  if (*(_BYTE *)(v1 + 1160))
  {
    __int128 v8 = *v4;
    if (*v4)
    {
      *(void *)(v1 + 1144) = v8;
      operator delete(v8);
    }
  }

  if (*(_BYTE *)(v1 + 1128)) {
    sub_10000AE14(v1 + 1008);
  }
  sub_1002E11F4(v3);
  if (*(_BYTE *)(v1 + 104)) {
    sub_100019CEC(v2);
  }
  if (*(_BYTE *)(v1 + 48)) {
    sub_100019CEC(v1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100446B00(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 1160))
  {
    uint64_t v2 = *(void **)(a1 + 1136);
    if (v2)
    {
      *(void *)(a1 + 1144) = v2;
      operator delete(v2);
    }
  }

  if (*(_BYTE *)(a1 + 1128)) {
    sub_10000AE14(a1 + 1008);
  }
  sub_1002E11F4(a1 + 112);
  if (*(_BYTE *)(a1 + 104)) {
    sub_100019CEC(a1 + 56);
  }
  if (*(_BYTE *)(a1 + 48)) {
    sub_100019CEC(a1);
  }
  return a1;
}

void sub_100446B98(id a1)
{
  qword_101934A98 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

void *sub_100446BC4@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x30uLL);
  uint64_t result = sub_100446C1C(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100446C08(_Unwind_Exception *a1)
{
}

void *sub_100446C1C(void *a1, uint64_t *a2)
{
  a1[2] = 0LL;
  *a1 = off_101839480;
  a1[1] = 0LL;
  sub_100446CC4((uint64_t)&v4, a1 + 3, a2);
  return a1;
}

void sub_100446C68(_Unwind_Exception *a1)
{
}

void sub_100446C7C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_101839480;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100446C90(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_101839480;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100446CB4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_100446CC4(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v3 = a3[1];
  uint64_t v9 = *a3;
  __int128 v10 = (std::__shared_weak_count *)v3;
  if (v3)
  {
    char v4 = (unint64_t *)(v3 + 8);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

  sub_10070A138(a2, &v9);
  __int128 v6 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      unint64_t v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }

void sub_100446D48( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100446D5C(int *a1, int *a2)
{
  char v4 = a2;
  if ((sub_100446E08(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 25;
    sub_100446E68((uint64_t)a1, (uint64_t)v5);
    sub_1002DDAD8((uint64_t)v5);
  }

void sub_100446DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100446E08(int *a1, int **a2)
{
  uint64_t result = 0LL;
  unsigned int v4 = *a1 ^ (*a1 >> 31);
  BOOL v5 = v4 >= 0x19;
  unsigned int v6 = v4 - 25;
  if (v5)
  {
    switch(v6)
    {
      case 0u:
        a1[2] = **a2;
        uint64_t result = 1LL;
        break;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
        return result;
      default:
        sub_1002DDAB0();
    }
  }

  return result;
}

void sub_100446E68(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)a1;
  int v5 = *(_DWORD *)a2;
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    unsigned int v6 = (_BYTE *)(a2 + 8);
    __int128 v40 = (uint64_t *)(a2 + 8);
    __int128 v7 = (_BYTE *)(a1 + 8);
    switch(v4 ^ (v4 >> 31))
    {
      case 0:
      case 1:
      case 2:
      case 0xD:
      case 0x11:
      case 0x1B:
      case 0x1C:
      case 0x1D:
        return;
      case 3:
      case 0xC:
      case 0xE:
      case 0x17:
        *__int128 v7 = *v6;
        return;
      case 4:
      case 9:
      case 0xB:
      case 0xF:
      case 0x13:
      case 0x16:
      case 0x19:
      case 0x1A:
        *(_DWORD *)__int128 v7 = *(_DWORD *)v6;
        return;
      case 5:
      case 6:
        sub_100351804(a1 + 8, a2 + 8);
        return;
      case 7:
        sub_100447364(&v40, (uint64_t)v7);
        return;
      case 8:
        sub_1004474A4((uint64_t *)&v40, (uint64_t)v7);
        return;
      case 0xA:
      case 0x14:
      case 0x15:
        *(void *)__int128 v7 = *(void *)v6;
        return;
      case 0x10:
        __int128 v9 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)__int128 v7 = *(_OWORD *)v6;
        *(_OWORD *)(a1 + 24) = v9;
        __int128 v10 = *(_OWORD *)(a2 + 40);
        __int128 v11 = *(_OWORD *)(a2 + 56);
        __int128 v12 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v12;
        *(_OWORD *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v10;
        *(_OWORD *)(a1 + 56) = v11;
        __int128 v13 = *(_OWORD *)(a2 + 104);
        __int128 v14 = *(_OWORD *)(a2 + 120);
        __int128 v15 = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 148) = *(_OWORD *)(a2 + 148);
        *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v14;
        *(_OWORD *)(a1 + 136) = v15;
        *(_OWORD *)(a1 + 104) = v13;
        memcpy((void *)(a1 + 168), (const void *)(a2 + 168), 0x201uLL);
        sub_10005F550(a1 + 688, (__int128 *)(a2 + 688));
        __int128 v17 = *(_OWORD *)(a2 + 720);
        __int128 v16 = *(_OWORD *)(a2 + 736);
        *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
        *(_OWORD *)(a1 + 72sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v17;
        *(_OWORD *)(a1 + 736) = v16;
        __int128 v19 = *(_OWORD *)(a2 + 768);
        __int128 v18 = *(_OWORD *)(a2 + 784);
        __int128 v20 = *(_OWORD *)(a2 + 752);
        *(void *)(a1 + 797) = *(void *)(a2 + 797);
        *(_OWORD *)(a1 + 768) = v19;
        *(_OWORD *)(a1 + 784) = v18;
        *(_OWORD *)(a1 + 752) = v20;
        return;
      case 0x12:
        *(_OWORD *)__int128 v7 = *(_OWORD *)v6;
        return;
      case 0x18:
        sub_1004474FC(&v40, (uint64_t)v7);
        return;
      default:
        goto LABEL_44;
    }
  }

  __int128 v40 = (uint64_t *)a1;
  int v41 = v5 ^ (v5 >> 31);
  unint64_t v8 = (_BYTE *)(a2 + 8);
  switch(v41)
  {
    case 0:
      sub_1002DDAD8(a1);
      *(_DWORD *)a1 = 0;
      return;
    case 1:
      sub_1002DDAD8(a1);
      int v21 = 1;
      goto LABEL_42;
    case 2:
      sub_1002DDAD8(a1);
      int v21 = 2;
      goto LABEL_42;
    case 3:
      sub_1002DDAD8(a1);
      *(_BYTE *)(a1 + 8) = *v8;
      int v21 = 3;
      goto LABEL_42;
    case 4:
      sub_1002DDAD8(a1);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v8;
      int v21 = 4;
      goto LABEL_42;
    case 5:
    case 6:
      sub_1004475B8((uint64_t)&v40, a2 + 8);
      return;
    case 7:
      sub_100447644((uint64_t)&v40, a2 + 8);
      return;
    case 8:
      sub_1004476F4((uint64_t)&v40, a2 + 8);
      return;
    case 9:
      sub_1002DDAD8(a1);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v8;
      int v21 = 9;
      goto LABEL_42;
    case 10:
      sub_1002DDAD8(a1);
      *(void *)(a1 + 8) = *(void *)v8;
      int v21 = 10;
      goto LABEL_42;
    case 11:
      sub_1002DDAD8(a1);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v8;
      int v21 = 11;
      goto LABEL_42;
    case 12:
      sub_1002DDAD8(a1);
      *(_BYTE *)(a1 + 8) = *v8;
      int v21 = 12;
      goto LABEL_42;
    case 13:
      sub_1002DDAD8(a1);
      int v21 = 13;
      goto LABEL_42;
    case 14:
      sub_1002DDAD8(a1);
      *(_BYTE *)(a1 + 8) = *v8;
      int v21 = 14;
      goto LABEL_42;
    case 15:
      sub_1002DDAD8(a1);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v8;
      int v21 = 15;
      goto LABEL_42;
    case 16:
      sub_1002DDAD8(a1);
      __int128 v22 = *(_OWORD *)v8;
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = v22;
      __int128 v23 = *(_OWORD *)(a2 + 40);
      __int128 v24 = *(_OWORD *)(a2 + 56);
      __int128 v25 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = v25;
      *(_OWORD *)(a1 + 56) = v24;
      *(_OWORD *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v23;
      __int128 v26 = *(_OWORD *)(a2 + 104);
      __int128 v27 = *(_OWORD *)(a2 + 120);
      __int128 v28 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 148) = *(_OWORD *)(a2 + 148);
      *(_OWORD *)(a1 + 136) = v28;
      *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v27;
      *(_OWORD *)(a1 + 104) = v26;
      memcpy((void *)(a1 + 168), (const void *)(a2 + 168), 0x201uLL);
      *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
      *(_OWORD *)(a2 + 688) = 0u;
      __int128 v29 = *(_OWORD *)(a2 + 704);
      __int128 v30 = *(_OWORD *)(a2 + 736);
      *(_OWORD *)(a1 + 72sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 720);
      *(_OWORD *)(a1 + 736) = v30;
      *(_OWORD *)(a1 + 704) = v29;
      __int128 v32 = *(_OWORD *)(a2 + 752);
      __int128 v31 = *(_OWORD *)(a2 + 768);
      __int128 v33 = *(_OWORD *)(a2 + 784);
      *(void *)(a1 + 797) = *(void *)(a2 + 797);
      *(_OWORD *)(a1 + 768) = v31;
      *(_OWORD *)(a1 + 784) = v33;
      *(_OWORD *)(a1 + 752) = v32;
      int v21 = 16;
      goto LABEL_42;
    case 17:
      sub_1002DDAD8(a1);
      int v21 = 17;
      goto LABEL_42;
    case 18:
      sub_1002DDAD8(a1);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v8;
      int v21 = 18;
      goto LABEL_42;
    case 19:
      sub_1002DDAD8(a1);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v8;
      int v21 = 19;
      goto LABEL_42;
    case 20:
      sub_1002DDAD8(a1);
      *(void *)(a1 + 8) = *(void *)v8;
      int v21 = 20;
      goto LABEL_42;
    case 21:
      sub_1002DDAD8(a1);
      *(void *)(a1 + 8) = *(void *)v8;
      int v21 = 21;
      goto LABEL_42;
    case 22:
      sub_1002DDAD8(a1);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v8;
      int v21 = 22;
      goto LABEL_42;
    case 23:
      sub_1002DDAD8(a1);
      *(_BYTE *)(a1 + 8) = *v8;
      int v21 = 23;
      goto LABEL_42;
    case 24:
      sub_1002DDAD8(a1);
      uint64_t v34 = *(void *)v8;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(void *)(a1 + 8) = v34;
      __int128 v35 = *(_OWORD *)(a2 + 24);
      *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 40);
      *(_OWORD *)(a1 + 24) = v35;
      *(void *)(a2 + 32) = 0LL;
      *(void *)(a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
      *(void *)(a2 + 24) = 0LL;
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      __int128 v37 = *(_OWORD *)(a2 + 80);
      __int128 v36 = *(_OWORD *)(a2 + 96);
      __int128 v38 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 108) = *(_OWORD *)(a2 + 108);
      *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v37;
      *(_OWORD *)(a1 + 96) = v36;
      *(_OWORD *)(a1 + 64) = v38;
      __int128 v39 = *(_OWORD *)(a2 + 128);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = v39;
      *(void *)(a2 + 136) = 0LL;
      *(void *)(a2 + 144) = 0LL;
      *(void *)(a2 + 128) = 0LL;
      int v21 = 24;
      goto LABEL_42;
    case 25:
      sub_1002DDAD8(a1);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v8;
      int v21 = 25;
      goto LABEL_42;
    case 26:
      sub_1002DDAD8(a1);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v8;
      int v21 = 26;
      goto LABEL_42;
    case 27:
      sub_1002DDAD8(a1);
      int v21 = 27;
      goto LABEL_42;
    case 28:
      sub_1002DDAD8(a1);
      int v21 = 28;
      goto LABEL_42;
    case 29:
      sub_1002DDAD8(a1);
      int v21 = 29;
LABEL_42:
      *(_DWORD *)a1 = v21;
      return;
    default:
LABEL_44:
      sub_1002DDAB0();
  }

double sub_100447364(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_1004473B0(a2, *a1);
  *(void *)(a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v3[5];
  *(_BYTE *)(a2 + 48) = *((_BYTE *)v3 + 48);
  *(void *)&double result = sub_100351804(a2 + 56, (uint64_t)(v3 + 7)).n128_u64[0];
  return result;
}

void sub_1004473B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *a2 = 0LL;
  int v5 = *(void **)a1;
  *(void *)a1 = v4;
  if (v5) {
    operator delete(v5);
  }
  uint64_t v8 = a2[2];
  __int128 v7 = a2 + 2;
  uint64_t v6 = v8;
  uint64_t v9 = *(v7 - 1);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 8) = v9;
  *(v7 - 1) = 0LL;
  uint64_t v10 = v7[1];
  *(void *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v7 + 4);
  if (v10)
  {
    unint64_t v11 = *(void *)(v6 + 8);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        v11 %= v12;
      }
    }

    else
    {
      v11 &= v12 - 1;
    }

    *(void *)(*(void *)a1 + 8 * v11) = a1 + 16;
    *__int128 v7 = 0LL;
    v7[1] = 0LL;
  }

void sub_100447450(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_1002DD088(a1, *(void ***)(a1 + 16));
    *(void *)(a1 + 16) = 0LL;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0LL; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0LL;
    }

    *(void *)(a1 + 24) = 0LL;
  }

double sub_1004474A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_1002DD898((uint64_t *)a2);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(void *)(a2 + 16) = *(void *)(v3 + 16);
  *(void *)uint64_t v3 = 0LL;
  *(void *)(v3 + 8) = 0LL;
  *(void *)(v3 + 16) = 0LL;
  *(_DWORD *)(a2 + 24) = *(_DWORD *)(v3 + 24);
  *(void *)&double result = sub_100351804(a2 + 32, v3 + 32).n128_u64[0];
  return result;
}

__n128 sub_1004474FC(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)*a1 + 8);
  *(void *)a2 = v4;
  uint64_t v5 = a2 + 16;
  __int128 v6 = *((_OWORD *)v3 + 1);
  *(void *)(v5 + 16) = v3[4];
  *(_OWORD *)uint64_t v5 = v6;
  *((_BYTE *)v3 + 39) = 0;
  *((_BYTE *)v3 + 16) = 0;
  __int128 v7 = *(_OWORD *)((char *)v3 + 100);
  __int128 v8 = *(_OWORD *)(v3 + 11);
  __int128 v9 = *(_OWORD *)(v3 + 9);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(v3 + 7);
  *(_OWORD *)(a2 + 72) = v9;
  *(_OWORD *)(a2 + 88) = v8;
  *(_OWORD *)(a2 + 10sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v7;
  *(_OWORD *)(a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v3 + 5);
  uint64_t v10 = (void **)(a2 + 120);
  __n128 result = *(__n128 *)(v3 + 15);
  *(void *)(a2 + 136) = v3[17];
  *(__n128 *)uint64_t v10 = result;
  *((_BYTE *)v3 + 143) = 0;
  *((_BYTE *)v3 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  return result;
}

void sub_1004475B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  *(_BYTE *)(v4 + 8) = 0;
  *(_BYTE *)(v4 + 96) = 0;
  if (*(_BYTE *)(a2 + 88))
  {
    *(void *)(v4 + 8) = *(void *)a2;
    __int128 v5 = *(_OWORD *)(a2 + 8);
    *(void *)(v4 + 32) = *(void *)(a2 + 24);
    *(_OWORD *)(v4 + 16) = v5;
    *(void *)(a2 + 16) = 0LL;
    *(void *)(a2 + 24) = 0LL;
    *(void *)(a2 + 8) = 0LL;
    __int128 v6 = *(_OWORD *)(a2 + 32);
    __int128 v7 = *(_OWORD *)(a2 + 48);
    __int128 v8 = *(_OWORD *)(a2 + 64);
    *(void *)(v4 + 88) = *(void *)(a2 + 80);
    *(_OWORD *)(v4 + 72) = v8;
    *(_OWORD *)(v4 + 56) = v7;
    *(_OWORD *)(v4 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v6;
    *(_BYTE *)(v4 + 96) = 1;
  }

  **(_DWORD **)a1 = *(_DWORD *)(a1 + 8);
}

uint64_t sub_100447644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t result = sub_10001B9CC(*(void *)a1 + 8LL, (uint64_t *)a2);
  *(void *)(v4 + 48) = *(void *)(a2 + 40);
  *(_BYTE *)(v4 + 56) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(v4 + 64) = 0;
  *(_BYTE *)(v4 + 152) = 0;
  if (*(_BYTE *)(a2 + 144))
  {
    *(void *)(v4 + 64) = *(void *)(a2 + 56);
    __int128 v6 = *(_OWORD *)(a2 + 64);
    *(void *)(v4 + 88) = *(void *)(a2 + 80);
    *(_OWORD *)(v4 + 72) = v6;
    *(void *)(a2 + 72) = 0LL;
    *(void *)(a2 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
    *(void *)(a2 + 64) = 0LL;
    __int128 v7 = *(_OWORD *)(a2 + 88);
    __int128 v8 = *(_OWORD *)(a2 + 104);
    __int128 v9 = *(_OWORD *)(a2 + 120);
    *(void *)(v4 + 144) = *(void *)(a2 + 136);
    *(_OWORD *)(v4 + 112) = v8;
    *(_OWORD *)(v4 + 128) = v9;
    *(_OWORD *)(v4 + 96) = v7;
    *(_BYTE *)(v4 + 152) = 1;
  }

  **(_DWORD **)a1 = *(_DWORD *)(a1 + 8);
  return result;
}

void sub_1004476F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  *(void *)(v4 + 8) = 0LL;
  *(void *)(v4 + 16) = 0LL;
  *(void *)(v4 + 24) = 0LL;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)a2;
  *(void *)(v4 + 24) = *(void *)(a2 + 16);
  *(void *)(a2 + 8) = 0LL;
  *(void *)(a2 + 16) = 0LL;
  *(void *)a2 = 0LL;
  *(_DWORD *)(v4 + 32) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(v4 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  *(_BYTE *)(v4 + 128) = 0;
  if (*(_BYTE *)(a2 + 120))
  {
    *(void *)(v4 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 32);
    __int128 v5 = *(_OWORD *)(a2 + 40);
    *(void *)(v4 + 64) = *(void *)(a2 + 56);
    *(_OWORD *)(v4 + 48) = v5;
    *(void *)(a2 + 48) = 0LL;
    *(void *)(a2 + 56) = 0LL;
    *(void *)(a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
    __int128 v6 = *(_OWORD *)(a2 + 64);
    __int128 v7 = *(_OWORD *)(a2 + 80);
    __int128 v8 = *(_OWORD *)(a2 + 96);
    *(void *)(v4 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 112);
    *(_OWORD *)(v4 + 104) = v8;
    *(_OWORD *)(v4 + 88) = v7;
    *(_OWORD *)(v4 + 72) = v6;
    *(_BYTE *)(v4 + 128) = 1;
  }

  **(_DWORD **)a1 = *(_DWORD *)(a1 + 8);
}

void sub_1004477A8(int *a1, int *a2)
{
  uint64_t v4 = a2;
  if ((sub_100447854(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 26;
    sub_100446E68((uint64_t)a1, (uint64_t)v5);
    sub_1002DDAD8((uint64_t)v5);
  }

void sub_100447838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100447854(int *a1, int **a2)
{
  uint64_t result = 0LL;
  unsigned int v4 = *a1 ^ (*a1 >> 31);
  BOOL v5 = v4 >= 0x1A;
  unsigned int v6 = v4 - 26;
  if (v5)
  {
    switch(v6)
    {
      case 0u:
        a1[2] = **a2;
        uint64_t result = 1LL;
        break;
      case 1u:
      case 2u:
      case 3u:
        return result;
      default:
        sub_1002DDAB0();
    }
  }

  return result;
}

void sub_1004478B4(int *a1)
{
  if ((sub_10044794C(a1) & 1) == 0)
  {
    v2[0] = 1;
    sub_100446E68((uint64_t)a1, (uint64_t)v2);
    sub_1002DDAD8((uint64_t)v2);
  }

void sub_100447930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10044794C(int *a1)
{
  int v1 = *a1 ^ (*a1 >> 31);
  if (v1 != 1) {
    sub_1002DDAB0();
  }
  return 1LL;
}

void sub_1004479B0(uint64_t a1, _BYTE *a2)
{
  unsigned int v4 = a2;
  if ((sub_100447A5C(a1, &v4) & 1) == 0)
  {
    char v6 = *a2;
    int v5 = 3;
    sub_100446E68(a1, (uint64_t)&v5);
    sub_1002DDAD8((uint64_t)&v5);
  }

void sub_100447A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100447A5C(uint64_t a1, _BYTE **a2)
{
  unsigned int v2 = *(_DWORD *)a1 ^ (*(int *)a1 >> 31);
  if (v2 - 4 < 0x1A || v2 < 3) {
    return 0LL;
  }
  if (v2 != 3) {
    sub_1002DDAB0();
  }
  *(_BYTE *)(a1 + 8) = **a2;
  return 1LL;
}

void sub_100447ACC(int *a1, uint64_t a2)
{
  uint64_t v5 = a2;
  if ((sub_100447BE4(a1, &v5) & 1) == 0)
  {
    __int128 v7 = *(_OWORD *)a2;
    uint64_t v8 = *(void *)(a2 + 16);
    *(void *)(a2 + 8) = 0LL;
    *(void *)(a2 + 16) = 0LL;
    *(void *)a2 = 0LL;
    int v9 = *(_DWORD *)(a2 + 24);
    LOBYTE(v1sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
    char v17 = 0;
    if (*(_BYTE *)(a2 + 120))
    {
      __int128 v11 = *(_OWORD *)(a2 + 40);
      __int128 v4 = *(_OWORD *)(a2 + 80);
      __int128 v13 = *(_OWORD *)(a2 + 64);
      uint64_t v10 = *(void *)(a2 + 32);
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
      *(void *)(a2 + 48) = 0LL;
      *(void *)(a2 + 56) = 0LL;
      __int128 v14 = v4;
      __int128 v15 = *(_OWORD *)(a2 + 96);
      uint64_t v16 = *(void *)(a2 + 112);
      char v17 = 1;
    }

    int v6 = 8;
    sub_100446E68((uint64_t)a1, (uint64_t)&v6);
    sub_1002DDAD8((uint64_t)&v6);
  }

void sub_100447BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100447BE4(int *a1, uint64_t *a2)
{
  int v2 = *a1 ^ (*a1 >> 31);
  if ((v2 - 9) >= 0x15)
  {
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
        return 0LL;
      case 8:
        return sub_100447C44(a2, (uint64_t)(a1 + 2));
      default:
        sub_1002DDAB0();
    }
  }

  return 0LL;
}

uint64_t sub_100447C44(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_1002DD898((uint64_t *)a2);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(void *)(a2 + 16) = *(void *)(v3 + 16);
  *(void *)uint64_t v3 = 0LL;
  *(void *)(v3 + 8) = 0LL;
  *(void *)(v3 + 16) = 0LL;
  *(_DWORD *)(a2 + 24) = *(_DWORD *)(v3 + 24);
  sub_100351804(a2 + 32, v3 + 32);
  return 1LL;
}

void sub_100447CA0(int *a1, int *a2)
{
  __int128 v4 = a2;
  if ((sub_100447D4C(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 4;
    sub_100446E68((uint64_t)a1, (uint64_t)v5);
    sub_1002DDAD8((uint64_t)v5);
  }

void sub_100447D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100447D4C(int *a1, int **a2)
{
  unsigned int v2 = *a1 ^ (*a1 >> 31);
  if (v2 - 5 < 0x19 || v2 < 4) {
    return 0LL;
  }
  if (v2 != 4) {
    sub_1002DDAB0();
  }
  a1[2] = **a2;
  return 1LL;
}

void sub_100447DBC(int *a1, uint64_t *a2)
{
  __int128 v4 = a2;
  if ((sub_100447E6C(a1, &v4) & 1) == 0)
  {
    int v5 = sub_100447F1C((uint64_t)&v6, (uint64_t)a2);
    sub_100446E68((uint64_t)a1, (uint64_t)&v5);
    sub_1002DDAD8((uint64_t)&v5);
  }

void sub_100447E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100447E6C(int *a1, uint64_t **a2)
{
  int v2 = *a1 ^ (*a1 >> 31);
  if ((v2 - 8) >= 0x16)
  {
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
        return 0LL;
      case 7:
        return sub_100447ECC(a2, (uint64_t)(a1 + 2));
      default:
        sub_1002DDAB0();
    }
  }

  return 0LL;
}

uint64_t sub_100447ECC(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_1004473B0(a2, *a1);
  *(void *)(a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v3[5];
  *(_BYTE *)(a2 + 48) = *((_BYTE *)v3 + 48);
  sub_100351804(a2 + 56, (uint64_t)(v3 + 7));
  return 1LL;
}

uint64_t sub_100447F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10001B9CC(a1, (uint64_t *)a2);
  *(void *)(v3 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 40);
  *(_BYTE *)(v3 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 144) = 0;
  if (*(_BYTE *)(a2 + 144))
  {
    *(void *)(v3 + 56) = *(void *)(a2 + 56);
    __int128 v4 = *(_OWORD *)(a2 + 64);
    *(void *)(v3 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 80);
    *(_OWORD *)(v3 + 64) = v4;
    *(void *)(a2 + 72) = 0LL;
    *(void *)(a2 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
    *(void *)(a2 + 64) = 0LL;
    __int128 v5 = *(_OWORD *)(a2 + 88);
    __int128 v6 = *(_OWORD *)(a2 + 104);
    __int128 v7 = *(_OWORD *)(a2 + 120);
    *(void *)(v3 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)(v3 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v7;
    *(_OWORD *)(v3 + 104) = v6;
    *(_OWORD *)(v3 + 88) = v5;
    *(_BYTE *)(v3 + 144) = 1;
  }

  return 7LL;
}

void sub_100447FA8(int *a1)
{
  if ((sub_100448040(a1) & 1) == 0)
  {
    v2[0] = 2;
    sub_100446E68((uint64_t)a1, (uint64_t)v2);
    sub_1002DDAD8((uint64_t)v2);
  }

void sub_100448024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100448040(int *a1)
{
  unsigned int v1 = *a1 ^ (*a1 >> 31);
  if (v1 - 3 < 0x1B || v1 < 2) {
    return 0LL;
  }
  if (v1 != 2) {
    sub_1002DDAB0();
  }
  return 1LL;
}

void sub_1004480A4(int *a1, uint64_t a2)
{
  uint64_t v5 = a2;
  if ((sub_10044819C(a1, &v5) & 1) == 0)
  {
    LOBYTE(v7) = 0;
    char v14 = 0;
    if (*(_BYTE *)(a2 + 88))
    {
      __int128 v8 = *(_OWORD *)(a2 + 8);
      __int128 v4 = *(_OWORD *)(a2 + 48);
      __int128 v10 = *(_OWORD *)(a2 + 32);
      uint64_t v7 = *(void *)a2;
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)(a2 + 8) = 0LL;
      *(void *)(a2 + 16) = 0LL;
      *(void *)(a2 + 24) = 0LL;
      __int128 v11 = v4;
      __int128 v12 = *(_OWORD *)(a2 + 64);
      uint64_t v13 = *(void *)(a2 + 80);
      char v14 = 1;
    }

    int v6 = 5;
    sub_100446E68((uint64_t)a1, (uint64_t)&v6);
    sub_1002DDAD8((uint64_t)&v6);
  }

void sub_100448180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10044819C(int *a1, uint64_t *a2)
{
  uint64_t result = 0LL;
  int v4 = *a1 ^ (*a1 >> 31);
  if ((v4 - 6) >= 0x18)
  {
    switch(v4)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        return result;
      case 5:
        sub_100351804((uint64_t)(a1 + 2), *a2);
        uint64_t result = 1LL;
        break;
      default:
        sub_1002DDAB0();
    }
  }

  return result;
}

void sub_100448204(int *a1, uint64_t a2)
{
  uint64_t v5 = a2;
  if ((sub_1004482FC(a1, &v5) & 1) == 0)
  {
    LOBYTE(v7) = 0;
    char v14 = 0;
    if (*(_BYTE *)(a2 + 88))
    {
      __int128 v8 = *(_OWORD *)(a2 + 8);
      __int128 v4 = *(_OWORD *)(a2 + 48);
      __int128 v10 = *(_OWORD *)(a2 + 32);
      uint64_t v7 = *(void *)a2;
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)(a2 + 8) = 0LL;
      *(void *)(a2 + 16) = 0LL;
      *(void *)(a2 + 24) = 0LL;
      __int128 v11 = v4;
      __int128 v12 = *(_OWORD *)(a2 + 64);
      uint64_t v13 = *(void *)(a2 + 80);
      char v14 = 1;
    }

    int v6 = 6;
    sub_100446E68((uint64_t)a1, (uint64_t)&v6);
    sub_1002DDAD8((uint64_t)&v6);
  }

void sub_1004482E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_1004482FC(int *a1, uint64_t *a2)
{
  uint64_t result = 0LL;
  int v4 = *a1 ^ (*a1 >> 31);
  if ((v4 - 7) >= 0x17)
  {
    switch(v4)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        return result;
      case 6:
        sub_100351804((uint64_t)(a1 + 2), *a2);
        uint64_t result = 1LL;
        break;
      default:
        sub_1002DDAB0();
    }
  }

  return result;
}

uint64_t sub_100448364(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (_BYTE *)(a1 + 8);
  uint64_t v30 = a1 + 8;
  int v5 = *(_DWORD *)a2;
  uint64_t v4 = a2 + 8;
  switch(v5 ^ (v5 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 0xD:
    case 0x11:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      break;
    case 3:
    case 0xC:
    case 0xE:
    case 0x17:
      *uint64_t v3 = *(_BYTE *)v4;
      break;
    case 4:
    case 9:
    case 0xB:
    case 0xF:
    case 0x13:
    case 0x16:
    case 0x19:
    case 0x1A:
      *(_DWORD *)uint64_t v3 = *(_DWORD *)v4;
      break;
    case 5:
    case 6:
      *(_BYTE *)(a1 + 8) = 0;
      *(_BYTE *)(a1 + 96) = 0;
      if (*(_BYTE *)(a2 + 96))
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        __int128 v7 = *(_OWORD *)(a2 + 16);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = v7;
        *(void *)(a2 + 24) = 0LL;
        *(void *)(a2 + 32) = 0LL;
        *(void *)(a2 + 16) = 0LL;
        __int128 v8 = *(_OWORD *)(a2 + 40);
        __int128 v9 = *(_OWORD *)(a2 + 56);
        __int128 v10 = *(_OWORD *)(a2 + 72);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = v10;
        *(_OWORD *)(a1 + 56) = v9;
        *(_OWORD *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v8;
        *(_BYTE *)(a1 + 96) = 1;
      }

      break;
    case 7:
      sub_100448568(&v30, v4);
      break;
    case 8:
      sub_1004485F4(&v30, v4);
      break;
    case 0xA:
    case 0x14:
    case 0x15:
      *(void *)uint64_t v3 = *(void *)v4;
      break;
    case 0x10:
      __int128 v17 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)uint64_t v3 = *(_OWORD *)v4;
      *(_OWORD *)(a1 + 24) = v17;
      __int128 v18 = *(_OWORD *)(v4 + 32);
      __int128 v19 = *(_OWORD *)(v4 + 48);
      __int128 v20 = *(_OWORD *)(v4 + 80);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(v4 + 64);
      *(_OWORD *)(a1 + 88) = v20;
      *(_OWORD *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v18;
      *(_OWORD *)(a1 + 56) = v19;
      __int128 v21 = *(_OWORD *)(v4 + 96);
      __int128 v22 = *(_OWORD *)(v4 + 112);
      __int128 v23 = *(_OWORD *)(v4 + 128);
      *(_OWORD *)(a1 + 148) = *(_OWORD *)(v4 + 140);
      *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v22;
      *(_OWORD *)(a1 + 136) = v23;
      *(_OWORD *)(a1 + 104) = v21;
      memcpy((void *)(a1 + 168), (const void *)(a2 + 168), 0x201uLL);
      *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
      *(_OWORD *)(a2 + 688) = 0u;
      __int128 v25 = *(_OWORD *)(a2 + 720);
      __int128 v24 = *(_OWORD *)(a2 + 736);
      *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
      *(_OWORD *)(a1 + 72sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v25;
      *(_OWORD *)(a1 + 736) = v24;
      uint64_t v26 = *(void *)(a2 + 797);
      __int128 v27 = *(_OWORD *)(a2 + 784);
      __int128 v28 = *(_OWORD *)(a2 + 752);
      *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 784) = v27;
      *(void *)(a1 + 797) = v26;
      *(_OWORD *)(a1 + 752) = v28;
      break;
    case 0x12:
      *(_OWORD *)uint64_t v3 = *(_OWORD *)v4;
      break;
    case 0x18:
      uint64_t v11 = *(void *)v4;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(v4 + 8);
      *(void *)uint64_t v3 = v11;
      __int128 v12 = *(_OWORD *)(a2 + 24);
      *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 40);
      *(_OWORD *)(a1 + 24) = v12;
      *(void *)(a2 + 32) = 0LL;
      *(void *)(a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
      *(void *)(a2 + 24) = 0LL;
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      __int128 v14 = *(_OWORD *)(a2 + 80);
      __int128 v13 = *(_OWORD *)(a2 + 96);
      __int128 v15 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 108) = *(_OWORD *)(a2 + 108);
      *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v14;
      *(_OWORD *)(a1 + 96) = v13;
      *(_OWORD *)(a1 + 64) = v15;
      __int128 v16 = *(_OWORD *)(a2 + 128);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = v16;
      *(void *)(a2 + 128) = 0LL;
      *(void *)(a2 + 136) = 0LL;
      *(void *)(a2 + 144) = 0LL;
      break;
    default:
      sub_1002DDAB0();
  }

  *(_DWORD *)a1 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  return a1;
}

__n128 sub_100448568(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_10001B9CC(*a1, (uint64_t *)a2);
  *(void *)(v3 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 40);
  *(_BYTE *)(v3 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 144) = 0;
  if (*(_BYTE *)(a2 + 144))
  {
    *(void *)(v3 + 56) = *(void *)(a2 + 56);
    __int128 v5 = *(_OWORD *)(a2 + 64);
    *(void *)(v3 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 80);
    *(_OWORD *)(v3 + 64) = v5;
    *(void *)(a2 + 72) = 0LL;
    *(void *)(a2 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
    *(void *)(a2 + 64) = 0LL;
    __n128 result = *(__n128 *)(a2 + 88);
    __int128 v6 = *(_OWORD *)(a2 + 104);
    __int128 v7 = *(_OWORD *)(a2 + 120);
    *(void *)(v3 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)(v3 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v7;
    *(_OWORD *)(v3 + 104) = v6;
    *(__n128 *)(v3 + 88) = result;
    *(_BYTE *)(v3 + 144) = 1;
  }

  return result;
}

__n128 sub_1004485F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(void *)uint64_t v2 = 0LL;
  *(void *)(v2 + 8) = 0LL;
  *(void *)(v2 + 16) = 0LL;
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
  *(void *)(v2 + 16) = *(void *)(a2 + 16);
  *(void *)(a2 + 8) = 0LL;
  *(void *)(a2 + 16) = 0LL;
  *(void *)a2 = 0LL;
  *(_DWORD *)(v2 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  if (*(_BYTE *)(a2 + 120))
  {
    *(void *)(v2 + 32) = *(void *)(a2 + 32);
    __int128 v4 = *(_OWORD *)(a2 + 40);
    *(void *)(v2 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(v2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v4;
    *(void *)(a2 + 48) = 0LL;
    *(void *)(a2 + 56) = 0LL;
    *(void *)(a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
    __n128 result = *(__n128 *)(a2 + 64);
    __int128 v5 = *(_OWORD *)(a2 + 80);
    __int128 v6 = *(_OWORD *)(a2 + 96);
    *(void *)(v2 + 112) = *(void *)(a2 + 112);
    *(_OWORD *)(v2 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v5;
    *(_OWORD *)(v2 + 96) = v6;
    *(__n128 *)(v2 + 64) = result;
    *(_BYTE *)(v2 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 1;
  }

  return result;
}

void sub_100448674(int *a1, int *a2)
{
  __int128 v4 = a2;
  if ((sub_100448720(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 11;
    sub_100446E68((uint64_t)a1, (uint64_t)v5);
    sub_1002DDAD8((uint64_t)v5);
  }

void sub_100448704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100448720(int *a1, int **a2)
{
  uint64_t v2 = 0LL;
  switch(*a1 ^ (*a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      return v2;
    case 0xB:
      a1[2] = **a2;
      uint64_t v2 = 1LL;
      break;
    default:
      sub_1002DDAB0();
  }

  return v2;
}

void sub_100448778(int *a1, int *a2)
{
  __int128 v4 = a2;
  if ((sub_100448824(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 9;
    sub_100446E68((uint64_t)a1, (uint64_t)v5);
    sub_1002DDAD8((uint64_t)v5);
  }

void sub_100448808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100448824(int *a1, int **a2)
{
  uint64_t result = 0LL;
  int v4 = *a1 ^ (*a1 >> 31);
  if ((v4 - 10) >= 0x14)
  {
    switch(v4)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
        return result;
      case 9:
        a1[2] = **a2;
        uint64_t result = 1LL;
        break;
      default:
        sub_1002DDAB0();
    }
  }

  return result;
}

void sub_100448888(int *a1, int *a2)
{
  int v4 = a2;
  if ((sub_100448934(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 19;
    sub_100446E68((uint64_t)a1, (uint64_t)v5);
    sub_1002DDAD8((uint64_t)v5);
  }

void sub_100448918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100448934(int *a1, int **a2)
{
  uint64_t v2 = 0LL;
  switch(*a1 ^ (*a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      return v2;
    case 0x13:
      a1[2] = **a2;
      uint64_t v2 = 1LL;
      break;
    default:
      sub_1002DDAB0();
  }

  return v2;
}

void sub_10044898C(int *a1, int *a2)
{
  int v4 = a2;
  if ((sub_100448A38(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 22;
    sub_100446E68((uint64_t)a1, (uint64_t)v5);
    sub_1002DDAD8((uint64_t)v5);
  }

void sub_100448A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100448A38(int *a1, int **a2)
{
  uint64_t result = 0LL;
  unsigned int v4 = *a1 ^ (*a1 >> 31);
  BOOL v5 = v4 >= 0x16;
  unsigned int v6 = v4 - 22;
  if (v5)
  {
    switch(v6)
    {
      case 0u:
        a1[2] = **a2;
        uint64_t result = 1LL;
        break;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        return result;
      default:
        sub_1002DDAB0();
    }
  }

  return result;
}

void sub_100448A98(uint64_t a1, void *a2)
{
  unsigned int v4 = a2;
  if ((sub_100448B44(a1, &v4) & 1) == 0)
  {
    uint64_t v6 = *a2;
    int v5 = 20;
    sub_100446E68(a1, (uint64_t)&v5);
    sub_1002DDAD8((uint64_t)&v5);
  }

void sub_100448B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100448B44(uint64_t a1, void **a2)
{
  uint64_t result = 0LL;
  unsigned int v4 = *(_DWORD *)a1 ^ (*(int *)a1 >> 31);
  BOOL v5 = v4 >= 0x14;
  unsigned int v6 = v4 - 20;
  if (v5)
  {
    switch(v6)
    {
      case 0u:
        *(void *)(a1 + 8) = **a2;
        uint64_t result = 1LL;
        break;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
        return result;
      default:
        sub_1002DDAB0();
    }
  }

  return result;
}

void sub_100448BA4(uint64_t a1, void *a2)
{
  unsigned int v4 = a2;
  if ((sub_100448C50(a1, &v4) & 1) == 0)
  {
    uint64_t v6 = *a2;
    int v5 = 10;
    sub_100446E68(a1, (uint64_t)&v5);
    sub_1002DDAD8((uint64_t)&v5);
  }

void sub_100448C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100448C50(uint64_t a1, void **a2)
{
  uint64_t v2 = 0LL;
  switch(*(_DWORD *)a1 ^ (*(int *)a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      return v2;
    case 0xA:
      *(void *)(a1 + 8) = **a2;
      uint64_t v2 = 1LL;
      break;
    default:
      sub_1002DDAB0();
  }

  return v2;
}

void sub_100448CA8(uint64_t a1, _BYTE *a2)
{
  unsigned int v4 = a2;
  if ((sub_100448D54(a1, &v4) & 1) == 0)
  {
    char v6 = *a2;
    int v5 = 12;
    sub_100446E68(a1, (uint64_t)&v5);
    sub_1002DDAD8((uint64_t)&v5);
  }

void sub_100448D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100448D54(uint64_t a1, _BYTE **a2)
{
  uint64_t v2 = 0LL;
  switch(*(_DWORD *)a1 ^ (*(int *)a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      return v2;
    case 0xC:
      *(_BYTE *)(a1 + 8) = **a2;
      uint64_t v2 = 1LL;
      break;
    default:
      sub_1002DDAB0();
  }

  return v2;
}

void sub_100448DAC(int *a1)
{
  if ((sub_100448E44(a1) & 1) == 0)
  {
    v2[0] = 13;
    sub_100446E68((uint64_t)a1, (uint64_t)v2);
    sub_1002DDAD8((uint64_t)v2);
  }

void sub_100448E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100448E44(int *a1)
{
  int v1 = *a1 ^ (*a1 >> 31);
  uint64_t result = 0LL;
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
      return result;
    case 13:
      uint64_t result = 1LL;
      break;
    default:
      sub_1002DDAB0();
  }

  return result;
}

void sub_100448E8C(int *a1)
{
  if ((sub_100448F24(a1) & 1) == 0)
  {
    v2[0] = 17;
    sub_100446E68((uint64_t)a1, (uint64_t)v2);
    sub_1002DDAD8((uint64_t)v2);
  }

void sub_100448F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100448F24(int *a1)
{
  int v1 = *a1 ^ (*a1 >> 31);
  uint64_t result = 0LL;
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
      return result;
    case 17:
      uint64_t result = 1LL;
      break;
    default:
      sub_1002DDAB0();
  }

  return result;
}

void sub_100448F6C(uint64_t a1, _BYTE *a2)
{
  unsigned int v4 = a2;
  if ((sub_100449018(a1, &v4) & 1) == 0)
  {
    char v6 = *a2;
    int v5 = 14;
    sub_100446E68(a1, (uint64_t)&v5);
    sub_1002DDAD8((uint64_t)&v5);
  }

void sub_100448FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100449018(uint64_t a1, _BYTE **a2)
{
  uint64_t v2 = 0LL;
  switch(*(_DWORD *)a1 ^ (*(int *)a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      return v2;
    case 0xE:
      *(_BYTE *)(a1 + 8) = **a2;
      uint64_t v2 = 1LL;
      break;
    default:
      sub_1002DDAB0();
  }

  return v2;
}

char *sub_100449070(char *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    char v6 = result;
    uint64_t result = sub_10000717C(result, a4);
    __int128 v7 = (void *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      *v7++ = a2[2];
      a2 = (void *)*a2;
    }

    *((void *)v6 + 1) = v7;
  }

  return result;
}

void sub_1004490C8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void *sub_1004490E4@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  unsigned int v4 = operator new(0x50uLL);
  uint64_t result = sub_10044913C(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100449128(_Unwind_Exception *a1)
{
}

void *sub_10044913C(void *a1, uint64_t *a2)
{
  a1[2] = 0LL;
  *a1 = off_1018394D0;
  a1[1] = 0LL;
  sub_100CBE474((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_100449174(_Unwind_Exception *a1)
{
}

void sub_100449188(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1018394D0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10044919C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1018394D0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_1004491C0(uint64_t a1)
{
  return sub_100CBE5D8(a1 + 24);
}

void sub_1004491CC()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361B8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361B8))
    {
      qword_1019361A0 = 0LL;
      qword_1019361A8 = 0LL;
      qword_1019361B0 = 0LL;
      uint64_t v1 = operator new(6uLL);
      qword_1019361A8 = (uint64_t)(v1 + 3);
      qword_1019361B0 = (uint64_t)(v1 + 3);
      *(_DWORD *)uint64_t v1 = 151521030;
      v1[2] = 3082;
      qword_1019361A0 = (uint64_t)v1;
      __cxa_atexit((void (*)(void *))sub_1001CDCD0, &qword_1019361A0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361B8);
    }
  }

void sub_100449268(_Unwind_Exception *a1)
{
}

void sub_100449280()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_1019361D8);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_1019361D8))
    {
      qword_1019361C0 = 0LL;
      qword_1019361C8 = 0LL;
      qword_1019361D0 = 0LL;
      uint64_t v1 = operator new(2uLL);
      qword_1019361C0 = (uint64_t)v1;
      _WORD *v1 = 256;
      qword_1019361C8 = (uint64_t)(v1 + 1);
      qword_1019361D0 = (uint64_t)(v1 + 1);
      __cxa_atexit((void (*)(void *))sub_1001CDD00, &qword_1019361C0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_1019361D8);
    }
  }

void sub_10044930C(_Unwind_Exception *a1)
{
}

uint64_t sub_100449324(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(a2 + 48) + 48LL))(*(void *)(a2 + 48));
  if ((_DWORD)result)
  {
    uint64_t result = (*(uint64_t (**)(void, _BYTE *, double))(**(void **)(a2 + 48) + 24LL))( *(void *)(a2 + 48),  v7,  a3);
    if ((_DWORD)result)
    {
      if (v7[208]) {
        return (*(uint64_t (**)(uint64_t, uint64_t, double))(*(void *)a1 + 32LL))(a1, a2, a3);
      }
      uint64_t result = (*(uint64_t (**)(void, double))(**(void **)(a2 + 32) + 48LL))(*(void *)(a2 + 32), a3);
      if ((_DWORD)result) {
        return (*(uint64_t (**)(uint64_t, uint64_t, double))(*(void *)a1 + 32LL))(a1, a2, a3);
      }
    }
  }

  return result;
}

uint64_t sub_1004493F4()
{
  return sub_1001B9A1C();
}

double sub_1004494EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1011AD898(a2);
  int8x16_t v4 = vextq_s8(*(int8x16_t *)(a1 + 24), *(int8x16_t *)(a1 + 24), 8uLL);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)a1;
  *(int8x16_t *)(v3 + 64) = v4;
  *(int32x2_t *)v4.i8 = vrev64_s32(*(int32x2_t *)(a1 + 56));
  *(void *)(v3 + 96) = *(void *)(a1 + 48);
  *(void *)(v3 + 104) = v4.i64[0];
  *(int8x16_t *)(v3 + 24) = vextq_s8(*(int8x16_t *)(a1 + 104), *(int8x16_t *)(a1 + 104), 8uLL);
  *(int8x16_t *)(v3 + 8) = vextq_s8(*(int8x16_t *)(a1 + 72), *(int8x16_t *)(a1 + 72), 8uLL);
  double result = *(double *)(a1 + 88);
  v4.i64[0] = *(void *)(a1 + 96);
  *(double *)(v3 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = result;
  int v6 = *(_DWORD *)(v3 + 128);
  *(_BYTE *)(v3 + 124) = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(v3 + 125) = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(v3 + 123) = *(_BYTE *)(a1 + 16);
  *(void *)(v3 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v4.i64[0];
  *(_BYTE *)(v3 + 121) = *(_BYTE *)(a1 + 120);
  *(_BYTE *)(v3 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_BYTE *)(a1 + 128);
  *(_BYTE *)(v3 + 122) = *(_BYTE *)(a1 + 129);
  int v7 = *(_DWORD *)(a1 + 124);
  int v8 = *(_DWORD *)(a1 + 132);
  *(_DWORD *)(v3 + 128) = v6 | 0x3FFBFF;
  *(_DWORD *)(v3 + 112) = v8;
  *(_DWORD *)(v3 + 116) = v7;
  return result;
}

double sub_1004495A0@<D0>(uint64_t a1@<X0>, int8x16_t *a2@<X8>)
{
  a2[5] = vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  a2[4].i64[0] = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 72);
  a2[7].i64[1] = *(void *)(a1 + 64);
  __int32 v7 = a2[9].i32[2];
  a2[6].i32[0] = *(_DWORD *)(a1 + 24);
  a2[2].i64[1] = v5;
  a2[3].i64[0] = v4;
  a2[2].i64[0] = v6;
  a2[1] = vextq_s8(*(int8x16_t *)(a1 + 80), *(int8x16_t *)(a1 + 80), 8uLL);
  __int32 v8 = *(_DWORD *)(a1 + 96);
  a2[9].i32[2] = v7 | 0x8C1FF;
  a2[8].i32[3] = v8;
  __int128 v9 = *(const __CFString **)(a1 + 104);
  if (v9)
  {
    CStringPtr = (char *)CFStringGetCStringPtr(v9, 0x8000100u);
    if (CStringPtr)
    {
      sub_1010DDBC0(&__p, CStringPtr);
      sub_10044973C((uint64_t)a2, &__p);
      if (v23 < 0) {
        operator delete((void *)__p.n128_u64[0]);
      }
    }
  }

  __int32 v11 = a2[9].i32[2];
  a2[9].i16[2] = *(_WORD *)(a1 + 112);
  __int32 v12 = *(_DWORD *)(a1 + 148);
  a2[8].i32[2] = *(_DWORD *)(a1 + 144);
  a2[9].i32[0] = v12;
  __int32 v13 = *(unsigned __int8 *)(a1 + 152);
  a2[6].i64[1] = *(void *)(a1 + 156);
  __int32 v14 = *(unsigned __int8 *)(a1 + 165);
  a2[6].i32[1] = *(unsigned __int8 *)(a1 + 166);
  a2[7].i32[0] = *(unsigned __int8 *)(a1 + 164);
  a2[7].i32[1] = v14;
  __int32 v15 = *(_DWORD *)(a1 + 168);
  a2[9].i32[2] = v11 | 0x773E00;
  a2[8].i32[0] = v15;
  a2[8].i32[1] = v13;
  sub_10114D944(a2);
  uint64_t v16 = a2->i64[1];
  uint64_t v17 = *(void *)(a1 + 120);
  *(_BYTE *)(v16 + 32) |= 1u;
  *(void *)(v16 + 8) = v17;
  uint64_t v18 = a2->i64[1];
  uint64_t v19 = *(void *)(a1 + 128);
  *(_BYTE *)(v18 + 32) |= 2u;
  *(void *)(v18 + 16) = v19;
  uint64_t v20 = a2->i64[1];
  double result = *(double *)(a1 + 136);
  *(_BYTE *)(v20 + 32) |= 4u;
  *(double *)(v20 + 24) = result;
  return result;
}

void sub_100449708( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_10114BEA0(v15);
  _Unwind_Resume(a1);
}

__n128 sub_10044973C(uint64_t a1, __n128 *a2)
{
  uint64_t v3 = *(void ***)(a1 + 72);
  if (!v3)
  {
    uint64_t v3 = (void **)operator new(0x18uLL);
    v3[1] = 0LL;
    v3[2] = 0LL;
    *uint64_t v3 = 0LL;
    *(void *)(a1 + 72) = v3;
  }

  __n128 result = *a2;
  v3[2] = (void *)a2[1].n128_u64[0];
  *(__n128 *)uint64_t v3 = result;
  a2[1].n128_u8[7] = 0;
  a2->n128_u8[0] = 0;
  return result;
}

uint64_t sub_1004497AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10114D998(a2);
  uint64_t v4 = *(void *)(a1 + 24);
  __int16 v5 = *(_WORD *)(result + 72);
  *(_DWORD *)(result + 64) = *(_DWORD *)(a1 + 32);
  *(_OWORD *)(result + 24) = *(_OWORD *)(a1 + 40);
  *(void *)(result + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a1 + 56);
  *(void *)(result + 48) = v4;
  *(_BYTE *)(result + 69) = *(_BYTE *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  *(void *)(result + 56) = *(void *)(a1 + 80);
  *(_BYTE *)(result + 7sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_BYTE *)(a1 + 88);
  double v7 = *(double *)(a1 + 96);
  *(void *)(result + 8) = v6;
  *(double *)(result + 16) = v7;
  *(_WORD *)(result + 72) = v5 | 0x7FF;
  *(_BYTE *)(result + 68) = v7 != 0.0;
  return result;
}

__n128 sub_100449824@<Q0>(int8x16_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1011AEF10(a2);
  uint64_t v4 = a1->i64[0];
  uint64_t v5 = a1->i64[1];
  *(void *)(v3 + 152) = a1[1].i64[0];
  *(void *)(v3 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v4;
  *(int8x16_t *)(v3 + 136) = vextq_s8(a1[2], a1[2], 8uLL);
  *(void *)(v3 + 56) = a1[3].i64[1];
  *(void *)(v3 + 64) = v5;
  int8x16_t v6 = a1[5];
  *(int8x16_t *)(v3 + 24) = a1[4];
  *(int8x16_t *)(v3 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = vextq_s8(v6, v6, 8uLL);
  int8x16_t v7 = a1[7];
  *(int8x16_t *)(v3 + 8) = a1[6];
  *(int8x16_t *)(v3 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = vextq_s8(v7, v7, 8uLL);
  int8x16_t v8 = a1[9];
  *(int8x16_t *)(v3 + 72) = a1[8];
  int v9 = *(_DWORD *)(v3 + 188);
  *(_BYTE *)(v3 + 184) = a1[1].i8[8];
  *(_WORD *)(v3 + 182) = a1[3].i16[0];
  int v10 = a1[11].i32[0];
  int v11 = a1[11].u8[5];
  *(_DWORD *)(v3 + 168) = a1[11].u8[4];
  *(_DWORD *)(v3 + 172) = v11;
  *(_DWORD *)(v3 + 176) = v10;
  *(_BYTE *)(v3 + 18sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a1[11].i8[6];
  *(int8x16_t *)(v3 + 104) = v8;
  __n128 result = (__n128)a1[10];
  *(__n128 *)(v3 + 88) = result;
  char v13 = a1[11].i8[7];
  *(_DWORD *)(v3 + 188) = v9 | 0xFFFFFFF;
  *(_BYTE *)(v3 + 181) = v13;
  return result;
}

double sub_1004498DC(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v2 = (void **)(*(void *)(a1 + 8) + 8LL);
      *(void *)(a1 + 8) = v2;
      unint64_t v4 = v5 - (void)v2;
    }

    while (v4 > 0x10);
  }

  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 14LL;
    goto LABEL_7;
  }

  if (v4 >> 3 == 2)
  {
    uint64_t v6 = 28LL;
LABEL_7:
    *(void *)(a1 + 32) = v6;
  }

  int8x16_t v7 = *(void **)(a1 + 56);
  *(_DWORD *)(a1 + 72) = 4;
  sub_100008390(a1 + 48, v7);
  *(void *)(a1 + 48) = a1 + 56;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  unsigned int v9 = 0;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  unsigned int v9 = 1;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  unsigned int v9 = 2;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  unsigned int v9 = 3;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  unsigned int v9 = 4;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  unsigned int v9 = 5;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  unsigned int v9 = 6;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  unsigned int v9 = 7;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  unsigned int v9 = 8;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  unsigned int v9 = 9;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  unsigned int v9 = 10;
  int v10 = &v9;
  sub_10044BD34((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_1012CF090, &v10)[5] = (uint64_t *)0xBFF0000000000000LL;
  double result = -1.0;
  *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = xmmword_1012EB270;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(_DWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  return result;
}

uint64_t sub_100449BA0(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 48) = a1 + 56;
  *(_DWORD *)(a1 + 72) = 4;
  *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = xmmword_1012EB270;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(_DWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  sub_1004498DC(a1);
  return a1;
}

void sub_100449C00(uint64_t a1, double *a2, __int128 *a3)
{
  unint64_t v6 = *(void *)(a1 + 40);
  if (v6 >= 0x12D)
  {
    ++*(void *)(a1 + 32);
    *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v6 - 1;
    sub_10044B9C4(a1, 1);
  }

  *(double *)int32x2_t buf = *a2;
  __int128 v7 = a3[4];
  __int128 v38 = a3[5];
  __int128 v8 = a3[7];
  __int128 v39 = a3[6];
  __int128 v40 = v8;
  __int128 v9 = *a3;
  __int128 v34 = a3[1];
  __int128 v10 = a3[3];
  __int128 v35 = a3[2];
  __int128 v36 = v10;
  __int128 v37 = v7;
  uint64_t v41 = *((void *)a3 + 16);
  *(_OWORD *)&uint8_t buf[8] = v9;
  sub_100449EB0((void *)a1, (uint64_t)buf);
  int v11 = *(_DWORD *)(a1 + 72);
  sub_100449F80(a1, a2, (unsigned int *)a3);
  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_101839510);
  }
  __int32 v12 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
  {
    double v13 = *a2;
    unsigned int v14 = *(_DWORD *)a3;
    int v15 = *((_DWORD *)a3 + 1);
    int v16 = *(_DWORD *)(a1 + 72);
    *(_DWORD *)int32x2_t buf = 134350080;
    *(double *)&uint8_t buf[4] = v13;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&_BYTE buf[14] = v14;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v15;
    LOWORD(v34) = 1026;
    *(_DWORD *)((char *)&v34 + 2) = v11;
    WORD3(v34) = 1026;
    DWORD2(v34) = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "#motion,dynamics mode on motion update,mct,%{public}.3f,type,%{public}d,confidence,%{public}d,old dynamics mode,%{ public}d,new dynamics mode,%{public}d",  buf,  0x24u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_101839510);
    }
    double v17 = *a2;
    unsigned int v18 = *(_DWORD *)a3;
    int v19 = *((_DWORD *)a3 + 1);
    int v20 = *(_DWORD *)(a1 + 72);
    int v23 = 134350080;
    double v24 = v17;
    __int16 v25 = 1026;
    unsigned int v26 = v18;
    __int16 v27 = 1026;
    int v28 = v19;
    __int16 v29 = 1026;
    int v30 = v11;
    __int16 v31 = 1026;
    int v32 = v20;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "#motion,dynamics mode on motion update,mct,%{public}.3f,type,%{public}d,confidence,%{public}d,old dynamics mode,%{ public}d,new dynamics mode,%{public}d",  &v23,  36);
    __int128 v22 = (char *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void cllcf::LCFusionMotionActivity::motionActivityUpdate(const CFTimeInterval &, const CLMotionActivity &)",  "%s\n",  v21);
    if (v22 != buf) {
      free(v22);
    }
  }

void sub_100449EA4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

__n128 sub_100449EB0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 28 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_10044BA20(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x1C)) + 144 * (v7 % 0x1C);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  __int128 v9 = *(_OWORD *)(a2 + 16);
  __int128 v10 = *(_OWORD *)(a2 + 32);
  __int128 v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v8 + 64) = v11;
  *(_OWORD *)(v8 + 16) = v9;
  *(_OWORD *)(v8 + 32) = v10;
  __n128 result = *(__n128 *)(a2 + 80);
  __int128 v13 = *(_OWORD *)(a2 + 96);
  __int128 v14 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v8 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v8 + 128) = v14;
  *(__n128 *)(v8 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = result;
  *(_OWORD *)(v8 + 96) = v13;
  ++a1[5];
  return result;
}

uint64_t sub_100449F80(uint64_t a1, double *a2, unsigned int *a3)
{
  if (CLMotionActivity::isTypeDriving(*a3))
  {
    int isVehicularHighConfidence = CLMotionActivity::isVehicularHighConfidence(a3[25]);
    else {
      int v7 = isVehicularHighConfidence;
    }
    unint64_t v8 = (uint64_t **)(a1 + 48);
    if (v7 == 1)
    {
      *(_DWORD *)(a1 + 72) = 7;
      double v9 = *a2;
      unsigned int v19 = 7;
    }

    else
    {
      *(_DWORD *)(a1 + 72) = 6;
      double v9 = *a2;
      unsigned int v19 = 6;
    }

    goto LABEL_7;
  }

  int isTypeStatic = CLMotionActivity::isTypeStatic(*a3);
  else {
    int v12 = 0;
  }
  if (v12 == 1)
  {
LABEL_37:
    *(_DWORD *)(a1 + 72) = 1;
    double v9 = *a2;
    unsigned int v19 = 1;
    int v20 = &v19;
    uint64_t result = (uint64_t)sub_10044BD34((uint64_t **)(a1 + 48), &v19, (uint64_t)&unk_1012CF090, &v20);
    goto LABEL_38;
  }

  if (CLMotionActivity::isTypeCycling(*a3))
  {
LABEL_15:
    *(_DWORD *)(a1 + 72) = 6;
    double v9 = *a2;
    unsigned int v19 = 6;
    int v20 = &v19;
    uint64_t result = (uint64_t)sub_10044BD34((uint64_t **)(a1 + 48), &v19, (uint64_t)&unk_1012CF090, &v20);
    goto LABEL_38;
  }

  if ((CLMotionActivity::isTypePedestrian(*a3) & 1) == 0
    && !CLMotionActivity::isTypeIndoorPedestrian(*a3))
  {
    if ((CLMotionActivity::isTypeUnclassifiedMoving(*a3) & 1) != 0
      || ((v15 = CLMotionActivity::isTypeStatic(*a3), !a3[1]) ? (int v16 = v15) : (int v16 = 0), v16 == 1))
    {
      if (CLMotionActivity::isTypeInVehicle(*a3, v14))
      {
        double v17 = sub_10042CC1C();
        if (!v17 || !v17[1] || !*v17) {
          goto LABEL_37;
        }
        goto LABEL_15;
      }

      uint64_t result = sub_10044ADB0(a1, a2, 600.0);
      if ((result & 1) != 0) {
        return result;
      }
    }

uint64_t sub_10044A310(void *a1, uint64_t a2)
{
  unint64_t v4 = a1[5];
  if (v4 >= 0x12D)
  {
    ++a1[4];
    a1[5] = v4 - 1;
    sub_10044B9C4((uint64_t)a1, 1);
  }

  sub_100449EB0(a1, a2);
  return sub_100449F80((uint64_t)a1, (double *)a2, (unsigned int *)(a2 + 8));
}

uint64_t **sub_10044A374(uint64_t a1, uint64_t **a2, unsigned int a3)
{
  unsigned int v6 = a3;
  unint64_t v4 = *a2;
  int v7 = &v6;
  uint64_t result = sub_10044BD34((uint64_t **)(a1 + 48), &v6, (uint64_t)&unk_1012CF090, &v7);
  result[5] = v4;
  *(_DWORD *)(a1 + 72) = v6;
  return result;
}

BOOL sub_10044A3DC(void *a1, _OWORD *a2)
{
  uint64_t v2 = a1[5];
  if (v2)
  {
    uint64_t v3 = (_OWORD *)(*(void *)(a1[1] + 8 * ((v2 + a1[4] - 1) / 0x1CuLL)) + 144 * ((v2 + a1[4] - 1) % 0x1CuLL));
    __int128 v4 = v3[4];
    __int128 v6 = v3[1];
    __int128 v5 = v3[2];
    a2[3] = v3[3];
    a2[4] = v4;
    a2[1] = v6;
    a2[2] = v5;
    __int128 v7 = v3[8];
    __int128 v9 = v3[5];
    __int128 v8 = v3[6];
    a2[7] = v3[7];
    a2[8] = v7;
    a2[5] = v9;
    a2[6] = v8;
    *a2 = *v3;
  }

  return v2 != 0;
}

void sub_10044A458(uint64_t a1, uint64_t **a2, __int128 *a3)
{
  *(void *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *a2;
  __int128 v6 = *a3;
  __int128 v7 = a3[1];
  *(_DWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *((_DWORD *)a3 + 8);
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 88) = v6;
  int v8 = *(_DWORD *)(a1 + 72);
  int isTypePedestrian = CLMotionActivity::isTypePedestrian(*((unsigned int *)a3 + 2));
  uint64_t v10 = *((unsigned int *)a3 + 2);
  if (!isTypePedestrian)
  {
    if (!CLMotionActivity::isTypeCycling(v10) || *(_DWORD *)(a1 + 72) == 6)
    {
      if (!*((_DWORD *)a3 + 2) && (*(_DWORD *)(a1 + 72) - 5) <= 1)
      {
        *(_DWORD *)(a1 + 72) = 3;
        if (qword_101934960 != -1) {
          dispatch_once(&qword_101934960, &stru_101839510);
        }
        int v12 = (os_log_s *)qword_101934968;
        if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v13 = *a2;
          *(_DWORD *)int32x2_t buf = 134349056;
          *(void *)&uint8_t buf[4] = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "#workout,workout ended from a running or cycling session, reverting dynamics mode to moving pedestrian,mct,%{public}.3f",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934960 != -1) {
            dispatch_once(&qword_101934960, &stru_101839510);
          }
          __n128 v14 = *a2;
          unsigned int v51 = 134349056;
          __int128 v52 = v14;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "#workout,workout ended from a running or cycling session, reverting dynamics mode to moving pedestrian,mct,%{public}.3f",  &v51,  12);
          int v16 = (char *)v15;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void cllcf::LCFusionMotionActivity::fitnessActivityUpdate(const CFTimeInterval &, const CLWorkoutUpdate &)",  "%s\n",  v15);
          goto LABEL_44;
        }
      }

      goto LABEL_50;
    }

    *(_DWORD *)(a1 + 72) = 6;
    __int128 v34 = *a2;
    unsigned int v51 = 6;
    *(void *)int32x2_t buf = &v51;
    __int128 v35 = sub_10044BD34((uint64_t **)(a1 + 48), &v51, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
LABEL_47:
    v35[5] = v34;
    goto LABEL_50;
  }

  else {
    BOOL v11 = 0;
  }
  unsigned int v51 = 4;
  *(void *)int32x2_t buf = &v51;
  double v17 = *((double *)sub_10044BD34((uint64_t **)(a1 + 48), &v51, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
  else {
    BOOL v19 = 0;
  }
  unsigned int v51 = 5;
  *(void *)int32x2_t buf = &v51;
  int v20 = sub_10044BD34((uint64_t **)(a1 + 48), &v51, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
  if (v17 <= 0.0 && v11)
  {
    *(_DWORD *)(a1 + 72) = 4;
    __int128 v22 = *a2;
    unsigned int v51 = 4;
    *(void *)int32x2_t buf = &v51;
    sub_10044BD34((uint64_t **)(a1 + 48), &v51, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5] = v22;
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_101839510);
    }
    int v23 = (os_log_s *)qword_101934968;
    if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
    {
      double v24 = *a2;
      *(_DWORD *)int32x2_t buf = 134349056;
      *(void *)&uint8_t buf[4] = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "#workout,setting dynamics walking mode for the first time,mct,%{public}.3f",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934960 != -1) {
        dispatch_once(&qword_101934960, &stru_101839510);
      }
      __int16 v25 = *a2;
      unsigned int v51 = 134349056;
      __int128 v52 = v25;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "#workout,setting dynamics walking mode for the first time,mct,%{public}.3f",  &v51,  12);
      int v16 = (char *)v26;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void cllcf::LCFusionMotionActivity::fitnessActivityUpdate(const CFTimeInterval &, const CLWorkoutUpdate &)",  "%s\n",  v26);
LABEL_44:
      if (v16 != buf) {
        free(v16);
      }
      goto LABEL_50;
    }

    goto LABEL_50;
  }

  double v27 = *((double *)v20 + 5);
  if (v27 > 0.0 || !v19)
  {
    unsigned int v36 = *(_DWORD *)(a1 + 72);
    if (v36 <= 0xA && ((1 << v36) & 0x7C7) != 0) {
      goto LABEL_50;
    }
    char v41 = !v11;
    if (v17 <= 0.0) {
      char v41 = 1;
    }
    if ((v41 & 1) != 0)
    {
      char v42 = !v19;
      if (v27 <= 0.0) {
        char v42 = 1;
      }
      if ((v42 & 1) != 0) {
        goto LABEL_50;
      }
      unsigned int v51 = 5;
      *(void *)int32x2_t buf = &v51;
      double v43 = *(double *)a2;
      unsigned int v51 = 5;
      *(void *)int32x2_t buf = &v51;
      *(_DWORD *)(a1 + 72) = 5;
      __int128 v34 = *a2;
      unsigned int v51 = 5;
      *(void *)int32x2_t buf = &v51;
      __int128 v35 = sub_10044BD34((uint64_t **)(a1 + 48), &v51, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
    }

    else
    {
      unsigned int v51 = 4;
      *(void *)int32x2_t buf = &v51;
      double v44 = *(double *)a2;
      unsigned int v51 = 4;
      *(void *)int32x2_t buf = &v51;
      *(_DWORD *)(a1 + 72) = 4;
      __int128 v34 = *a2;
      unsigned int v51 = 4;
      *(void *)int32x2_t buf = &v51;
      __int128 v35 = sub_10044BD34((uint64_t **)(a1 + 48), &v51, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
    }

    goto LABEL_47;
  }

  *(_DWORD *)(a1 + 72) = 5;
  __int16 v29 = *a2;
  unsigned int v51 = 5;
  *(void *)int32x2_t buf = &v51;
  sub_10044BD34((uint64_t **)(a1 + 48), &v51, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5] = v29;
  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_101839510);
  }
  int v30 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
  {
    __int16 v31 = *a2;
    *(_DWORD *)int32x2_t buf = 134349056;
    *(void *)&uint8_t buf[4] = v31;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "#workout,setting dynamics running mode for the first time,mct,%{public}.3f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_101839510);
    }
    int v32 = *a2;
    unsigned int v51 = 134349056;
    __int128 v52 = v32;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "#workout,setting dynamics running mode for the first time,mct,%{public}.3f",  &v51,  12);
    int v16 = (char *)v33;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void cllcf::LCFusionMotionActivity::fitnessActivityUpdate(const CFTimeInterval &, const CLWorkoutUpdate &)",  "%s\n",  v33);
    goto LABEL_44;
  }

void sub_10044ADA4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_10044ADB0(uint64_t a1, double *a2, double a3)
{
  unsigned int v18 = 0;
  __int128 v6 = (uint64_t **)(a1 + 48);
  unsigned int v19 = 9;
  *(void *)int32x2_t buf = &v19;
  double v7 = -1.0;
  if (*((double *)sub_10044BD34((uint64_t **)(a1 + 48), &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5) <= -1.0)
  {
    int v8 = 0;
  }

  else
  {
    int v8 = 9;
    unsigned int v19 = 9;
    *(void *)int32x2_t buf = &v19;
    double v7 = *((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
    unsigned int v18 = 9;
  }

  unsigned int v19 = 8;
  *(void *)int32x2_t buf = &v19;
  if (*((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 8;
    unsigned int v19 = 8;
    *(void *)int32x2_t buf = &v19;
    double v7 = *((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
    unsigned int v18 = 8;
  }

  unsigned int v19 = 7;
  *(void *)int32x2_t buf = &v19;
  if (*((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 7;
    unsigned int v19 = 7;
    *(void *)int32x2_t buf = &v19;
    double v7 = *((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
    unsigned int v18 = 7;
  }

  unsigned int v19 = 6;
  *(void *)int32x2_t buf = &v19;
  if (*((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 6;
    unsigned int v19 = 6;
    *(void *)int32x2_t buf = &v19;
    double v7 = *((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
    unsigned int v18 = 6;
  }

  unsigned int v19 = 5;
  *(void *)int32x2_t buf = &v19;
  if (*((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 5;
    unsigned int v19 = 5;
    *(void *)int32x2_t buf = &v19;
    double v7 = *((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
    unsigned int v18 = 5;
  }

  unsigned int v19 = 4;
  *(void *)int32x2_t buf = &v19;
  if (*((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 4;
    unsigned int v19 = 4;
    *(void *)int32x2_t buf = &v19;
    double v7 = *((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
    unsigned int v18 = 4;
  }

  unsigned int v19 = 3;
  *(void *)int32x2_t buf = &v19;
  if (*((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 3;
    unsigned int v19 = 3;
    *(void *)int32x2_t buf = &v19;
    double v7 = *((double *)sub_10044BD34(v6, &v19, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 5);
    unsigned int v18 = 3;
  }

  if (v7 <= 0.0 || a3 >= 0.0 && vabdd_f64(*a2, v7) > a3) {
    return 0LL;
  }
  if (qword_101934960 != -1) {
    dispatch_once(&qword_101934960, &stru_101839510);
  }
  uint64_t v10 = (os_log_s *)qword_101934968;
  if (os_log_type_enabled((os_log_t)qword_101934968, OS_LOG_TYPE_DEBUG))
  {
    double v11 = *a2;
    int v12 = *(_DWORD *)(a1 + 72);
    *(_DWORD *)int32x2_t buf = 134349824;
    *(double *)&uint8_t buf[4] = v11;
    __int16 v28 = 1026;
    int v29 = v12;
    __int16 v30 = 1026;
    int v31 = v8;
    __int16 v32 = 2050;
    double v33 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "#motion,last known non-static dynamics mode used,mct,%{public}.3f,current dynamics mode,%{public}d,last non-static dynamics mode,%{public}d,last non-static dynamics mct,%{public}.3f",  buf,  0x22u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934960 != -1) {
      dispatch_once(&qword_101934960, &stru_101839510);
    }
    double v14 = *a2;
    int v15 = *(_DWORD *)(a1 + 72);
    unsigned int v19 = 134349824;
    double v20 = v14;
    __int16 v21 = 1026;
    int v22 = v15;
    __int16 v23 = 1026;
    int v24 = v8;
    __int16 v25 = 2050;
    double v26 = v7;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934968,  2LL,  "#motion,last known non-static dynamics mode used,mct,%{public}.3f,current dynamics mode,%{public}d,last non-static dynamics mode,%{public}d,last non-static dynamics mct,%{public}.3f",  &v19,  34);
    double v17 = (char *)v16;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL cllcf::LCFusionMotionActivity::setDynamicsModeToLastKnownNonStatic(const CFTimeInterval &, const double)",  "%s\n",  v16);
    if (v17 != buf) {
      free(v17);
    }
  }

  *(_DWORD *)(a1 + 72) = v8;
  uint64_t v13 = *(uint64_t **)a2;
  *(void *)int32x2_t buf = &v18;
  sub_10044BD34(v6, &v18, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5] = v13;
  return 1LL;
}

void sub_10044B324(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

BOOL sub_10044B330(void *a1, double *a2)
{
  uint64_t v2 = a1[5];
  if (!v2) {
    return 0LL;
  }
  if (*a2 >= 0.0)
  {
    unint64_t v7 = v2 + a1[4] - 1;
    uint64_t v8 = *(void *)(a1[1] + 8 * (v7 / 0x1C));
    uint64_t v9 = sub_10080E94C();
    int v12 = 1;
    double v10 = sub_10080EB58(v9, &v12);
    double v11 = *(double *)(v8 + 144 * (v7 % 0x1C));
    if (v11 < 0.0 || v10 >= v11 && v10 - v11 > *a2) {
      return 0LL;
    }
  }

  unint64_t v5 = a1[5] + a1[4] - 1LL;
  return *(_BYTE *)(*(void *)(a1[1] + 8 * (v5 / 0x1C)) + 144 * (v5 % 0x1C) + 56) != 0;
}

uint64_t sub_10044B44C(void *a1, double *a2)
{
  uint64_t v2 = a1[5];
  if (!v2) {
    return 0LL;
  }
  if (*a2 >= 0.0)
  {
    unint64_t v8 = v2 + a1[4] - 1;
    uint64_t v9 = *(void *)(a1[1] + 8 * (v8 / 0x1C));
    uint64_t v10 = sub_10080E94C();
    int v13 = 1;
    double v11 = sub_10080EB58(v10, &v13);
    double v12 = *(double *)(v9 + 144 * (v8 % 0x1C));
    if (v12 < 0.0 || v11 >= v12 && v11 - v12 > *a2) {
      return 0LL;
    }
  }

  unint64_t v5 = a1[5] + a1[4] - 1LL;
  if (CLMotionActivity::isTypeStatic(*(unsigned int *)(*(void *)(a1[1] + 8 * (v5 / 0x1C))
                                                                    + 144 * (v5 % 0x1C)
                                                                    + 8))
    && (unint64_t v6 = a1[5] + a1[4] - 1LL, *(int *)(*(void *)(a1[1] + 8 * (v6 / 0x1C)) + 144 * (v6 % 0x1C) + 12) > 0))
  {
    return 1LL;
  }

  else
  {
    return 0LL;
  }

uint64_t sub_10044B5B8(uint64_t a1, double *a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if (!v4) {
    return 0LL;
  }
  unint64_t v5 = (_OWORD *)(*(void *)(*(void *)(a1 + 8) + 8 * ((v4 + *(void *)(a1 + 32) - 1) / 0x1CuLL))
                + 144 * ((v4 + *(void *)(a1 + 32) - 1) % 0x1CuLL));
  v17[0] = *v5;
  __int128 v6 = v5[4];
  __int128 v8 = v5[1];
  __int128 v7 = v5[2];
  v17[3] = v5[3];
  _DWORD v17[4] = v6;
  v17[1] = v8;
  void v17[2] = v7;
  __int128 v9 = v5[8];
  __int128 v11 = v5[5];
  __int128 v10 = v5[6];
  v17[7] = v5[7];
  v17[8] = v9;
  v17[5] = v11;
  v17[6] = v10;
  if (*a2 >= 0.0)
  {
    uint64_t v15 = sub_10080E94C();
    int v18 = 1;
    double v16 = sub_10080EB58(v15, &v18);
  }

  if (CLMotionActivity::isInVehicle((CLMotionActivity *)((char *)v17 + 8))
    && ((char isVehicularHighConfidence = CLMotionActivity::isVehicularHighConfidence((CLMotionActivity *)((char *)v17 + 8)),
         SHIDWORD(v17[0]) > 0)
      ? (char v13 = 1)
      : (char v13 = isVehicularHighConfidence),
        (v13 & 1) != 0))
  {
    return 1LL;
  }

  else
  {
    return 0LL;
  }

uint64_t sub_10044B6EC(uint64_t a1, double *a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if (!v4) {
    return 0LL;
  }
  __int128 v8 = *(_OWORD *)(*(void *)(*(void *)(a1 + 8) + 8 * ((v4 + *(void *)(a1 + 32) - 1) / 0x1CuLL))
                 + 144 * ((v4 + *(void *)(a1 + 32) - 1) % 0x1CuLL));
  if (*a2 >= 0.0)
  {
    uint64_t v6 = sub_10080E94C();
    int v9 = 1;
    double v7 = sub_10080EB58(v6, &v9);
  }

  LODWORD(result) = CLMotionActivity::isTypePedestrian(DWORD2(v8));
  if (SHIDWORD(v8) > 0) {
    return result;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_10044B800(uint64_t a1, double *a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  if (!v4) {
    return 0LL;
  }
  unint64_t v5 = (_OWORD *)(*(void *)(*(void *)(a1 + 8) + 8 * ((v4 + *(void *)(a1 + 32) - 1) / 0x1CuLL))
                + 144 * ((v4 + *(void *)(a1 + 32) - 1) % 0x1CuLL));
  v15[0] = *v5;
  __int128 v6 = v5[4];
  __int128 v8 = v5[1];
  __int128 v7 = v5[2];
  v15[3] = v5[3];
  v15[4] = v6;
  v15[1] = v8;
  _DWORD v15[2] = v7;
  __int128 v9 = v5[8];
  __int128 v11 = v5[5];
  __int128 v10 = v5[6];
  v15[7] = v5[7];
  v15[8] = v9;
  v15[5] = v11;
  v15[6] = v10;
  if (*a2 >= 0.0)
  {
    uint64_t v13 = sub_10080E94C();
    int v16 = 1;
    double v14 = sub_10080EB58(v13, &v16);
  }

  LODWORD(result) = CLMotionActivity::isCycling((CLMotionActivity *)((char *)v15 + 8));
  if (SHIDWORD(v15[0]) > 0) {
    return result;
  }
  else {
    return 0LL;
  }
}

BOOL sub_10044B920(uint64_t a1)
{
  return *(double *)(a1 + 80) >= 0.0 && *(_DWORD *)(a1 + 96) && (CLMotionActivity::isTypePedestrian() & 1) != 0;
}

BOOL sub_10044B95C(uint64_t a1)
{
  return *(double *)(a1 + 80) >= 0.0 && *(_DWORD *)(a1 + 96) && (CLMotionActivity::isTypeCycling() & 1) != 0;
}

void sub_10044B998(id a1)
{
  qword_101934968 = (uint64_t)os_log_create("com.apple.locationd.Position", "LCFusion");
}

uint64_t sub_10044B9C4(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x1C) {
    a2 = 1;
  }
  if (v2 < 0x38) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8LL;
    *(void *)(a1 + 32) -= 28LL;
  }

  return v4 ^ 1u;
}

void sub_10044BA20(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x1C;
  unint64_t v4 = v2 - 28;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    __int128 v6 = (char *)a1[3];
    a1[4] = v4;
    __int128 v7 = (void *)a1[1];
    __int128 v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    __int128 v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)__int128 v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int128 v34 = (char *)sub_1000071BC(v5, v33);
      __int128 v35 = &v34[8 * (v33 >> 2)];
      __int128 v37 = &v34[8 * v36];
      __int128 v38 = (uint64_t *)a1[1];
      __int128 v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        __int128 v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        char v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)char v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_10044BCE8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t **sub_10044BD34(uint64_t **a1, unsigned int *a2, uint64_t a3, _DWORD **a4)
{
  __int128 v7 = a1 + 1;
  __int128 v6 = a1[1];
  if (v6)
  {
    unsigned int v8 = *a2;
    while (1)
    {
      while (1)
      {
        __int128 v9 = (uint64_t **)v6;
        unsigned int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        __int128 v6 = *v9;
        __int128 v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }

      if (v10 >= v8) {
        break;
      }
      __int128 v6 = v9[1];
      if (!v6)
      {
        __int128 v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    __int128 v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x30uLL);
    v11[8] = **a4;
    *((void *)v11 + 5) = 0LL;
    sub_1000085FC(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }

  return v9;
}

void sub_10044BDF4(uint64_t a1, uint64_t a2, _OWORD **a3, uint64_t a4, double a5)
{
  v422 = a3;
  sub_1010DDBC0(&v497, "none");
  sub_1010DDBC0(&v496, "none");
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101839590);
  }
  unsigned int v8 = &OBJC_METACLASS___CLPrivacyManager.vtable;
  __int128 v9 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = (unsigned int *)*v422;
    unsigned int v10 = (char *)v422[1];
    int v12 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40LL))(a1);
    int v13 = *(_DWORD *)(a4 + 96);
    double v14 = vabdd_f64(a5, *(double *)(a4 + 76));
    *(_DWORD *)int32x2_t buf = 134349824;
    *(void *)&uint8_t buf[4] = 0x66FD0EB66FD0EB67LL * ((v10 - (char *)v11) >> 3);
    __int16 v573 = 1026;
    *(_DWORD *)v574 = v12;
    *(_WORD *)&v574[4] = 2050;
    *(double *)&v574[6] = v14;
    *(_WORD *)&v574[14] = 1026;
    *(_DWORD *)&v574[16] = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "CellFlow, compute, cells, %{public}zu, spectators, %{public}d, last, %{public}.1lf, type, %{public}d",  buf,  0x22u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101839590);
    }
    uint64_t v332 = qword_101934858;
    v334 = (unsigned int *)*v422;
    v333 = (char *)v422[1];
    int v335 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40LL))(a1);
    int v336 = *(_DWORD *)(a4 + 96);
    double v337 = vabdd_f64(a5, *(double *)(a4 + 76));
    *(_DWORD *)v515 = 134349824;
    *(void *)&v515[4] = 0x66FD0EB66FD0EB67LL * ((v333 - (char *)v334) >> 3);
    *(_WORD *)&v515[12] = 1026;
    *(_DWORD *)&v515[14] = v335;
    *(_WORD *)&v515[18] = 2050;
    *(double *)&v515[20] = v337;
    *(_WORD *)&v515[28] = 1026;
    *(_DWORD *)&v515[30] = v336;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v332,  0LL,  "CellFlow, compute, cells, %{public}zu, spectators, %{public}d, last, %{public}.1lf, type, %{public}d",  v515,  34);
    v339 = (char *)v338;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, const C LCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v338);
    if (v339 != buf) {
      free(v339);
    }
  }

  uint64_t v15 = (unsigned int *)*v422;
  double v16 = *((double *)v422 + 1);
  if (*(_OWORD **)&v16 == *v422)
  {
    (*(void (**)(uint64_t, const char *))(*(void *)a1 + 56LL))(a1, "nocells");
    goto LABEL_491;
  }

  uint64_t v425 = 0LL;
  unsigned int v426 = 0;
  unint64_t v494 = 0LL;
  uint64_t v493 = 0LL;
  unint64_t v495 = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v428 = _Q0;
  *(void *)&_Q0 = 136446723LL;
  __int128 v424 = _Q0;
  *(void *)&_Q0 = 136446467LL;
  __int128 v423 = _Q0;
  *(void *)&_Q0 = 136446210LL;
  __int128 v420 = _Q0;
  do
  {
    unsigned int v21 = v15[2];
    if (v21 >= 8 && v21 - 9 >= 2)
    {
      __int128 v55 = (os_log_s *)v8[267];
      if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
      {
        sub_100F57510(v15, (std::stringbuf::string_type *)buf);
        int v56 = buf;
        if (v574[9] < 0) {
          int v56 = *(_BYTE **)buf;
        }
        *(_DWORD *)v515 = v420;
        *(void *)&v515[4] = v56;
        _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEFAULT,  "CellMatch, invalid cell, %{public}s, #CloneMe",  v515,  0xCu);
        if ((v574[9] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        __int16 v57 = v8[267];
        sub_100F57510(v15, (std::stringbuf::string_type *)v515);
        int v58 = v515;
        if (v515[23] < 0) {
          int v58 = *(_BYTE **)v515;
        }
        *(_DWORD *)v530 = v420;
        *(void *)&v530[4] = v58;
        LODWORD(v417) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v57,  0LL,  "CellMatch, invalid cell, %{public}s, #CloneMe",  v530,  *(void *)&v417);
        uint64_t v42 = v59;
        if ((v515[23] & 0x80000000) != 0) {
          operator delete(*(void **)v515);
        }
        goto LABEL_54;
      }
    }

    else
    {
      if (sub_10045064C(v21))
      {
        sub_1010DDBC0(v567, "none");
        sub_1010DDBC0(&v567[24], "weak");
        sub_1010DDBC0(&v567[48], "strong");
        sub_1010DDBC0(&v567[72], "exact");
        LODWORD(v433.__r_.__value_.__l.__data_) = 0;
        *(void *)&v515[4] = 0LL;
        *(void *)&v515[12] = 0LL;
        *(_OWORD *)&v515[20] = xmmword_1012E0070;
        *(_OWORD *)&v515[36] = v428;
        *(_OWORD *)&v515[52] = v428;
        *(_OWORD *)&v515[68] = v428;
        *(_DWORD *)v515 = 0xFFFF;
        *(_DWORD *)&v515[84] = 0;
        *(void *)&v515[88] = 0xBFF0000000000000LL;
        __int128 v516 = 0uLL;
        LODWORD(v517) = 0;
        *(void *)((char *)&v517 + 4) = 0xBFF0000000000000LL;
        HIDWORD(v517) = 0x7FFFFFFF;
        memset(v518, 0, 25);
        LODWORD(v433.__r_.__value_.__l.__data_) = (*(uint64_t (**)(uint64_t, unsigned int *, _BYTE *))(*(void *)a1 + 24LL))( a1,  v15,  v515);
        int v492 = 0;
        *(void *)&v530[4] = 0LL;
        *(void *)&v530[12] = 0LL;
        *(_OWORD *)&v530[20] = xmmword_1012E0070;
        *(_OWORD *)&v530[36] = v428;
        *(_OWORD *)&v530[52] = v428;
        *(_OWORD *)&v530[68] = v428;
        *(_DWORD *)v530 = 0xFFFF;
        *(_DWORD *)&v530[84] = 0;
        *(void *)&v530[88] = 0xBFF0000000000000LL;
        __int128 v531 = 0uLL;
        LODWORD(v532) = 0;
        *(void *)((char *)&v532 + 4) = 0xBFF0000000000000LL;
        HIDWORD(v532) = 0x7FFFFFFF;
        memset(v533, 0, 25);
        if (SLODWORD(v433.__r_.__value_.__l.__data_) <= 2) {
          int v492 = (*(uint64_t (**)(uint64_t, unsigned int *, _BYTE *))(*(void *)a1 + 32LL))(a1, v15, v530);
        }
        unint64_t v22 = (os_log_s *)v8[267];
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v23 = &v567[24 * SLODWORD(v433.__r_.__value_.__l.__data_)];
          sub_100F591F4(v15, (std::stringbuf::string_type *)v498);
          int v24 = v500[9];
          unint64_t v25 = *(_BYTE **)v498;
          sub_100832C64((uint64_t)v515, &__p);
          uint64_t v26 = v498;
          if (v24 < 0) {
            uint64_t v26 = v25;
          }
          p_p = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)int32x2_t buf = v424;
          *(void *)&uint8_t buf[4] = v23;
          __int16 v573 = 2081;
          *(void *)v574 = v26;
          *(_WORD *)&v574[8] = 2081;
          *(void *)&v574[10] = p_p;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "CellMatch, best network, %{public}s, %{private}s, location, %{private}s",  buf,  0x20u);
          p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
          if ((v500[9] & 0x80000000) != 0) {
            operator delete(*(void **)v498);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          int v78 = v8[267];
          unint64_t v79 = &v567[24 * SLODWORD(v433.__r_.__value_.__l.__data_)];
          sub_100F591F4(v15, &__p);
          int size = (char)__p.__r_.__value_.__s.__size_;
          std::string::size_type v81 = __p.__r_.__value_.__r.__words[0];
          sub_100832C64((uint64_t)v515, &v491);
          uint64_t v82 = &__p;
          if (size < 0) {
            uint64_t v82 = (std::stringbuf::string_type *)v81;
          }
          uint64_t v83 = &v491;
          if ((v491.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            uint64_t v83 = (std::stringbuf::string_type *)v491.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v498 = v424;
          *(void *)&v498[4] = v79;
          __int16 v499 = 2081;
          *(void *)v500 = v82;
          *(_WORD *)&v500[8] = 2081;
          *(void *)&v500[10] = v83;
          LODWORD(v417) = 32;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v78,  2LL,  "CellMatch, best network, %{public}s, %{private}s, location, %{private}s",  v498,  *(void *)&v417);
          int v85 = v84;
          p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, c onst CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v85);
          if (v85 != buf) {
            free(v85);
          }
        }

        uint64_t v28 = (os_log_s *)v8[267];
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
        {
          int v29 = &v567[24 * v492];
          sub_100832C64((uint64_t)v530, (std::stringbuf::string_type *)buf);
          __int128 v30 = buf;
          if (v574[9] < 0) {
            __int128 v30 = *(_BYTE **)buf;
          }
          *(_DWORD *)v498 = v423;
          *(void *)&v498[4] = v29;
          __int16 v499 = 2081;
          *(void *)v500 = v30;
          _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEBUG,  "CellMatch, best tile, %{public}s, location, %{private}s",  v498,  0x16u);
          if ((v574[9] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          __int16 v86 = v8[267];
          unint64_t v87 = &v567[24 * v492];
          sub_100832C64((uint64_t)v530, (std::stringbuf::string_type *)v498);
          double v88 = v498;
          if (v500[9] < 0) {
            double v88 = *(_BYTE **)v498;
          }
          LODWORD(__p.__r_.__value_.__l.__data_) = v423;
          *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v87;
          WORD2(__p.__r_.__value_.__r.__words[1]) = 2081;
          *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v88;
          LODWORD(v417) = 22;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v86,  2LL,  "CellMatch, best tile, %{public}s, location, %{private}s",  &__p,  *(void *)&v417);
          unint64_t v90 = v89;
          if ((v500[9] & 0x80000000) != 0) {
            operator delete(*(void **)v498);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, c onst CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v90);
          if (v90 != buf) {
            free(v90);
          }
        }

        unsigned __int8 v490 = 1;
        if (LODWORD(v433.__r_.__value_.__l.__data_) | v492)
        {
          if (SLODWORD(v433.__r_.__value_.__l.__data_) >= v492)
          {
            unsigned __int8 v490 = SLODWORD(v433.__r_.__value_.__l.__data_) < 3;
            unint64_t v49 = v494;
            if (v494 >= v495)
            {
              uint64_t v54 = sub_100450FE8(&v493, (uint64_t)v15, &v433, v515, &v490);
            }

            else
            {
              sub_10045115C(v494, (uint64_t)v15);
              *(_DWORD *)(v49 + 696) = v433.__r_.__value_.__l.__data_;
              *(_BYTE *)(v49 + 856) = v490;
              __int128 v50 = v517;
              *(_OWORD *)(v49 + 796) = v516;
              *(_OWORD *)(v49 + 812) = v50;
              *(_OWORD *)(v49 + 828) = v518[0];
              *(_OWORD *)(v49 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)v518 + 12);
              __int128 v51 = *(_OWORD *)&v515[48];
              *(_OWORD *)(v49 + 732) = *(_OWORD *)&v515[32];
              *(_OWORD *)(v49 + 748) = v51;
              __int128 v52 = *(_OWORD *)&v515[80];
              *(_OWORD *)(v49 + 764) = *(_OWORD *)&v515[64];
              *(_OWORD *)(v49 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v52;
              __int128 v53 = *(_OWORD *)&v515[16];
              uint64_t v54 = v49 + 864;
              *(_OWORD *)(v49 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)v515;
              *(_OWORD *)(v49 + 716) = v53;
            }

            unint64_t v494 = v54;
            std::string::assign(&v496, "network");
            std::string::operator=(&v497, (const std::string *)&v567[24 * SLODWORD(v433.__r_.__value_.__l.__data_)]);
            LODWORD(v425) = v425 + 1;
          }

          else
          {
            unsigned __int8 v490 = v492 < 2;
            unint64_t v43 = v494;
            if (v494 >= v495)
            {
              uint64_t v48 = sub_100450FE8(&v493, (uint64_t)v15, &v492, v530, &v490);
            }

            else
            {
              sub_10045115C(v494, (uint64_t)v15);
              *(_DWORD *)(v43 + 696) = v492;
              *(_BYTE *)(v43 + 856) = v490;
              __int128 v44 = v532;
              *(_OWORD *)(v43 + 796) = v531;
              *(_OWORD *)(v43 + 812) = v44;
              *(_OWORD *)(v43 + 828) = v533[0];
              *(_OWORD *)(v43 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)v533 + 12);
              __int128 v45 = *(_OWORD *)&v530[48];
              *(_OWORD *)(v43 + 732) = *(_OWORD *)&v530[32];
              *(_OWORD *)(v43 + 748) = v45;
              __int128 v46 = *(_OWORD *)&v530[80];
              *(_OWORD *)(v43 + 764) = *(_OWORD *)&v530[64];
              *(_OWORD *)(v43 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v46;
              __int128 v47 = *(_OWORD *)&v530[16];
              uint64_t v48 = v43 + 864;
              *(_OWORD *)(v43 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)v530;
              *(_OWORD *)(v43 + 716) = v47;
            }

            unint64_t v494 = v48;
            std::string::assign(&v496, "tiles");
            std::string::operator=(&v497, (const std::string *)&v567[24 * v492]);
            ++HIDWORD(v425);
          }

          __int16 v60 = (os_log_s *)v8[267];
          if (os_log_type_enabled(v60, OS_LOG_TYPE_INFO))
          {
            sub_100F591F4(v15, (std::stringbuf::string_type *)v498);
            int v61 = v498;
            if (v500[9] < 0) {
              int v61 = *(_BYTE **)v498;
            }
            __int16 v62 = &v496;
            if ((v496.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              __int16 v62 = (std::string *)v496.__r_.__value_.__r.__words[0];
            }
            int v63 = &v567[24 * SLODWORD(v433.__r_.__value_.__l.__data_)];
            __int16 v64 = &v567[24 * v492];
            *(_DWORD *)int32x2_t buf = 136381699;
            *(void *)&uint8_t buf[4] = v61;
            __int16 v573 = 2082;
            *(void *)v574 = v62;
            *(_WORD *)&v574[8] = 2082;
            *(void *)&v574[10] = v63;
            *(_WORD *)&v574[18] = 2082;
            *(void *)&v574[20] = v64;
            *(_WORD *)&v574[28] = 1026;
            *(_DWORD *)&v574[30] = v490;
            _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_INFO,  "CellMatch, prefer, %{private}s, %{public}s, levels, %{public}s, %{public}s, als, %{public}d",  buf,  0x30u);
            if ((v500[9] & 0x80000000) != 0) {
              operator delete(*(void **)v498);
            }
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            unint64_t v104 = v8[267];
            sub_100F591F4(v15, &__p);
            uint64_t v105 = &__p;
            if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              uint64_t v105 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
            }
            id v106 = &v496;
            if ((v496.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              id v106 = (std::string *)v496.__r_.__value_.__r.__words[0];
            }
            unint64_t v107 = &v567[24 * SLODWORD(v433.__r_.__value_.__l.__data_)];
            uint64_t v108 = &v567[24 * v492];
            *(_DWORD *)v498 = 136381699;
            *(void *)&v498[4] = v105;
            __int16 v499 = 2082;
            *(void *)v500 = v106;
            *(_WORD *)&v500[8] = 2082;
            *(void *)&v500[10] = v107;
            *(_WORD *)&v500[18] = 2082;
            *(void *)&v500[20] = v108;
            *(_WORD *)&v500[28] = 1026;
            *(_DWORD *)&v500[30] = v490;
            LODWORD(v417) = 48;
            _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v104,  1LL,  "CellMatch, prefer, %{private}s, %{public}s, levels, %{public}s, %{public}s, als, %{public}d",  v498,  *(void *)&v417);
            uint64_t v110 = v109;
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, const CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v110);
            if (v110 != buf) {
              free(v110);
            }
          }
        }

        else
        {
          buf[0] = 1;
          unint64_t v31 = v494;
          if (v494 >= v495)
          {
            uint64_t v36 = sub_100450FE8(&v493, (uint64_t)v15, &v433, v515, buf);
          }

          else
          {
            sub_10045115C(v494, (uint64_t)v15);
            *(_DWORD *)(v31 + 696) = v433.__r_.__value_.__l.__data_;
            *(_BYTE *)(v31 + 856) = buf[0];
            __int128 v32 = v517;
            *(_OWORD *)(v31 + 796) = v516;
            *(_OWORD *)(v31 + 812) = v32;
            *(_OWORD *)(v31 + 828) = v518[0];
            *(_OWORD *)(v31 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)v518 + 12);
            __int128 v33 = *(_OWORD *)&v515[48];
            *(_OWORD *)(v31 + 732) = *(_OWORD *)&v515[32];
            *(_OWORD *)(v31 + 748) = v33;
            __int128 v34 = *(_OWORD *)&v515[80];
            *(_OWORD *)(v31 + 764) = *(_OWORD *)&v515[64];
            *(_OWORD *)(v31 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v34;
            __int128 v35 = *(_OWORD *)&v515[16];
            uint64_t v36 = v31 + 864;
            *(_OWORD *)(v31 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)v515;
            *(_OWORD *)(v31 + 716) = v35;
          }

          unint64_t v494 = v36;
          ++v426;
        }

        int v65 = (os_log_s *)v8[267];
        if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
        {
          double v66 = v16;
          sub_100F591F4(v15, (std::stringbuf::string_type *)v498);
          int v67 = v500[9];
          double v68 = *(_BYTE **)v498;
          int v69 = (char)v497.__r_.__value_.__s.__size_;
          std::string::size_type v70 = v497.__r_.__value_.__r.__words[0];
          int v71 = (char)v496.__r_.__value_.__s.__size_;
          std::string::size_type v72 = v496.__r_.__value_.__r.__words[0];
          sub_100F58B68((uint64_t)v15, &__p);
          float v73 = &v496;
          if (v71 < 0) {
            float v73 = (std::string *)v72;
          }
          float v74 = &v497;
          if (v69 < 0) {
            float v74 = (std::string *)v70;
          }
          float v75 = v498;
          if (v67 < 0) {
            float v75 = v68;
          }
          *(_DWORD *)int32x2_t buf = 136381699;
          __int128 v76 = &__p;
          if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            __int128 v76 = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
          }
          *(void *)&uint8_t buf[4] = v75;
          __int16 v573 = 2082;
          *(void *)v574 = v74;
          *(_WORD *)&v574[8] = 2082;
          *(void *)&v574[10] = v73;
          *(_WORD *)&v574[18] = 2082;
          *(void *)&v574[20] = v76;
          *(_WORD *)&v574[28] = 1026;
          *(_DWORD *)&v574[30] = v490;
          _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEFAULT,  "@CellFlow, match, %{private}s, %{public}s, %{public}s, rat, %{public}s, needsAls, %{public}d",  buf,  0x30u);
          unsigned int v8 = &OBJC_METACLASS___CLPrivacyManager.vtable;
          p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
          double v16 = v66;
          if ((v500[9] & 0x80000000) != 0) {
            operator delete(*(void **)v498);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          double v419 = v16;
          double v91 = v8[267];
          sub_100F591F4(v15, &__p);
          int v92 = (char)__p.__r_.__value_.__s.__size_;
          std::string::size_type v93 = __p.__r_.__value_.__r.__words[0];
          int v94 = (char)v497.__r_.__value_.__s.__size_;
          std::string::size_type v95 = v497.__r_.__value_.__r.__words[0];
          int v96 = (char)v496.__r_.__value_.__s.__size_;
          std::string::size_type v97 = v496.__r_.__value_.__r.__words[0];
          sub_100F58B68((uint64_t)v15, &v491);
          __int128 v98 = &v496;
          if (v96 < 0) {
            __int128 v98 = (std::string *)v97;
          }
          __int128 v99 = &v497;
          if (v94 < 0) {
            __int128 v99 = (std::string *)v95;
          }
          __int128 v100 = &__p;
          if (v92 < 0) {
            __int128 v100 = (std::stringbuf::string_type *)v93;
          }
          *(_DWORD *)v498 = 136381699;
          __int128 v101 = &v491;
          if ((v491.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            __int128 v101 = (std::stringbuf::string_type *)v491.__r_.__value_.__r.__words[0];
          }
          *(void *)&v498[4] = v100;
          __int16 v499 = 2082;
          *(void *)v500 = v99;
          *(_WORD *)&v500[8] = 2082;
          *(void *)&v500[10] = v98;
          *(_WORD *)&v500[18] = 2082;
          *(void *)&v500[20] = v101;
          *(_WORD *)&v500[28] = 1026;
          *(_DWORD *)&v500[30] = v490;
          LODWORD(v417) = 48;
          _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v91,  0LL,  "@CellFlow, match, %{private}s, %{public}s, %{public}s, rat, %{public}s, needsAls, %{public}d",  v498,  *(void *)&v417);
          uint64_t v103 = v102;
          unsigned int v8 = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
          p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
          double v16 = v419;
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, c onst CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v103);
          if (v103 != buf) {
            free(v103);
          }
        }

        for (uint64_t i = 0LL; i != -96; i -= 24LL)
        {
        }

        goto LABEL_116;
      }

      __int128 v37 = (os_log_s *)v8[267];
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG))
      {
        sub_100F57510(v15, (std::stringbuf::string_type *)buf);
        __int128 v38 = buf;
        if (v574[9] < 0) {
          __int128 v38 = *(_BYTE **)buf;
        }
        *(_DWORD *)v515 = 136380675;
        *(void *)&v515[4] = v38;
        _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEBUG,  "CellMatch, ignoring cell, %{private}s",  v515,  0xCu);
        if ((v574[9] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        uint64_t v39 = v8[267];
        sub_100F57510(v15, (std::stringbuf::string_type *)v515);
        uint64_t v40 = v515;
        if (v515[23] < 0) {
          uint64_t v40 = *(_BYTE **)v515;
        }
        *(_DWORD *)v530 = 136380675;
        *(void *)&v530[4] = v40;
        LODWORD(v417) = 12;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v39,  2LL,  "CellMatch, ignoring cell, %{private}s",  v530,  *(void *)&v417);
        uint64_t v42 = v41;
        if ((v515[23] & 0x80000000) != 0) {
          operator delete(*(void **)v515);
        }
LABEL_54:
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLUnifiedCellLocationProviderLogic::computeCellLocation(ICellLocationProvider *, const char *, con st CLCellVector &, const CLDaemonLocation &, const CFAbsoluteTime)",  "%s\n",  v42);
        if (v42 != buf) {
          free(v42);
        }
      }
    }

LABEL_486:
  (*(void (**)(uint64_t, const char *, double, double))(*(void *)v176 + 16LL))(v176, "recalc", a5, 300.0);
  if (*(void *)&v530[88])
  {
    *(void *)&__int128 v531 = *(void *)&v530[88];
    operator delete(*(void **)&v530[88]);
  }

  *(void *)int32x2_t buf = &__p;
  sub_100450F64((void ***)buf);
  *(void *)int32x2_t buf = &v493;
  sub_100450F64((void ***)buf);
LABEL_491:
}

          *(_DWORD *)(a1 + 176) = v162;
          goto LABEL_544;
        case 0x13u:
          *(_DWORD *)(a1 + 212) |= 0x100u;
          __int16 v165 = *((void *)this + 1);
          if (v165 > 0xFFFFFFFFFFFFFFFBLL || v165 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v165);
          goto LABEL_542;
        case 0x14u:
          *(_DWORD *)(a1 + 212) |= 0x1000000u;
          uint64_t v166 = *((void *)this + 1);
          __int128 v167 = *((void *)this + 2);
          __int128 v168 = *(void *)this;
          if (v166 <= 0xFFFFFFFFFFFFFFF5LL && v166 + 10 <= v167)
          {
            __int128 v169 = 0;
            __int128 v170 = 0;
            __int128 v171 = 0LL;
            do
            {
              __int128 v172 = v166 + 1;
              *((void *)this + 1) = v166 + 1;
              __int128 v173 = *(_BYTE *)(v168 + v166);
              v171 |= (unint64_t)(v173 & 0x7F) << v169;
              if ((v173 & 0x80) == 0) {
                goto LABEL_489;
              }
              v169 += 7;
              uint64_t v166 = v172;
              unint64_t v22 = v170++ > 8;
            }

            while (!v22);
LABEL_353:
            LODWORD(v171) = 0;
            goto LABEL_489;
          }

          unint64_t v296 = 0;
          __int16 v297 = 0;
          __int128 v171 = 0LL;
          if (v167 <= v166) {
            __int128 v167 = *((void *)this + 1);
          }
          while (2)
          {
            if (v167 == v166)
            {
              LODWORD(v171) = 0;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              int v298 = v166 + 1;
              unint64_t v299 = *(_BYTE *)(v168 + v166);
              *((void *)this + 1) = v298;
              v171 |= (unint64_t)(v299 & 0x7F) << v296;
              if (v299 < 0)
              {
                v296 += 7;
                uint64_t v166 = v298;
                unint64_t v22 = v297++ > 8;
                if (v22) {
                  goto LABEL_353;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v171) = 0;
              }
            }

            break;
          }

void sub_100450240(_Unwind_Exception *a1)
{
  if (SLOBYTE(STACK[0x577]) < 0) {
    operator delete((void *)STACK[0x560]);
  }
  sub_1003284E4((uint64_t)&STACK[0xC40]);
  STACK[0xFC0] = (unint64_t)&STACK[0xFA0];
  sub_100450F64((void ***)&STACK[0xFC0]);
  STACK[0x640] = (unint64_t)&STACK[0x588];
  sub_100450F64((void ***)&STACK[0x640]);
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete((void *)STACK[0x5A0]);
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete((void *)STACK[0x5B8]);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100450630(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 8) < 0xBu) & (0x6FFu >> *(_DWORD *)(a1 + 8));
}

BOOL sub_10045064C(unsigned int a1)
{
  if (a1 < 0xC && ((0xEFFu >> a1) & 1) != 0) {
    return (0x7EFu >> a1) & 1;
  }
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_101839590);
  }
  unint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 67240450;
    unsigned int v11 = a1;
    __int16 v12 = 2082;
    int v13 = sub_1003D32AC(a1);
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "CellLoc, Invalid rat, %{public}d, %{public}s, #CloneMe",  buf,  0x12u);
  }

  BOOL result = sub_1002921D0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_101839590);
    }
    uint64_t v4 = qword_101934858;
    v7[0] = 67240450;
    v7[1] = a1;
    __int16 v8 = 2082;
    __int128 v9 = sub_1003D32AC(a1);
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v4,  0LL,  "CellLoc, Invalid rat, %{public}d, %{public}s, #CloneMe",  v7,  18);
    __int128 v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static BOOL CLUnifiedCellLocationProviderLogic::isAlsQueriable(CLTelephonyService_Type::RadioAccessTechnology)",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
    return 0LL;
  }

  return result;
}

NSDictionary *sub_100450844(uint64_t a1)
{
  v11[0] = @"reason";
  v12[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", *(void *)(a1 + 32));
  v11[1] = @"rat";
  sub_100F58B68(a1 + 40, &v10);
  if ((v10.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    unint64_t v2 = &v10;
  }
  else {
    unint64_t v2 = (std::stringbuf::string_type *)v10.__r_.__value_.__r.__words[0];
  }
  v12[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  _DWORD v11[2] = @"type";
  sub_100F58CE4(a1 + 40, &__p);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::stringbuf::string_type *)__p.__r_.__value_.__r.__words[0];
  }
  int32x4_t v12[2] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", p_p);
  v11[3] = @"accuracy";
  v12[3] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", *(double *)(a1 + 804));
  _DWORD v11[4] = @"source";
  uint64_t v4 = (void *)(a1 + 736);
  v12[4] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v4);
  v11[5] = @"match";
  uint64_t v5 = (void *)(a1 + 760);
  __int128 v6 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
  v11[6] = @"daily";
  v12[5] = v6;
  v12[6] = &off_1018D3440;
  __int128 v7 = +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v12,  v11,  7LL);
  return v7;
}

void sub_100450A08( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_BYTE *sub_100450A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 40);
  __int128 v5 = *(_OWORD *)(a2 + 56);
  __int128 v6 = *(_OWORD *)(a2 + 72);
  __int128 v7 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 10sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 100);
  *(_OWORD *)(a1 + 88) = v7;
  *(_OWORD *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 56) = v5;
  uint64_t v8 = a2 + 120;
  __int128 v9 = (_OWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_DWORD *)(a2 + 120);
  *(void *)(a1 + 128) = 0LL;
  *(void *)(a1 + 136) = 0LL;
  uint64_t v10 = a1 + 128;
  *(void *)(a1 + 144) = 0LL;
  sub_10001B72C( (void *)(a1 + 128),  *(const void **)(a2 + 128),  *(void *)(a2 + 136),  (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 2);
  *(_OWORD *)(v10 + 24) = *(_OWORD *)(v8 + 32);
  __int128 v11 = *(_OWORD *)(v8 + 48);
  __int128 v12 = *(_OWORD *)(v8 + 64);
  __int128 v13 = *(_OWORD *)(v8 + 80);
  *(_OWORD *)(v10 + 88) = *(_OWORD *)(v8 + 96);
  *(_OWORD *)(v10 + 72) = v13;
  *(_OWORD *)(v10 + 56) = v12;
  *(_OWORD *)(v10 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v11;
  __int128 v14 = *(_OWORD *)(v8 + 112);
  __int128 v15 = *(_OWORD *)(v8 + 128);
  __int128 v16 = v4[15];
  v9[14] = v4[14];
  v9[15] = v16;
  *(_OWORD *)(v10 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v15;
  *(_OWORD *)(v10 + 104) = v14;
  __int128 v17 = v4[16];
  __int128 v18 = v4[17];
  __int128 v19 = v4[18];
  *(_OWORD *)(v10 + 212) = *(_OWORD *)(v8 + 220);
  v9[17] = v18;
  v9[18] = v19;
  v9[16] = v17;
  int64_t v20 = (_BYTE *)(v10 + 232);
  if (*(char *)(v8 + 263) < 0)
  {
    sub_1010DD48C(v20, *(void **)(a2 + 360), *(void *)(a2 + 368));
  }

  else
  {
    __int128 v21 = *(_OWORD *)(v8 + 240);
    *(void *)(v10 + 248) = *(void *)(v8 + 256);
    *(_OWORD *)int64_t v20 = v21;
  }

  __int128 v22 = *(_OWORD *)(a2 + 384);
  __int128 v23 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 40sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v23;
  *(_OWORD *)(a1 + 384) = v22;
  __int128 v24 = *(_OWORD *)(a2 + 432);
  __int128 v25 = *(_OWORD *)(a2 + 448);
  __int128 v26 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 48sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v26;
  *(_OWORD *)(a1 + 432) = v24;
  *(_OWORD *)(a1 + 448) = v25;
  __int128 v27 = *(_OWORD *)(a2 + 496);
  __int128 v28 = *(_OWORD *)(a2 + 512);
  __int128 v29 = *(_OWORD *)(a2 + 528);
  *(_DWORD *)(a1 + 544) = *(_DWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 512) = v28;
  *(_OWORD *)(a1 + 528) = v29;
  *(_OWORD *)(a1 + 496) = v27;
  __int128 v30 = *(_OWORD *)(a2 + 552);
  __int128 v31 = *(_OWORD *)(a2 + 568);
  __int128 v32 = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 60sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v32;
  *(_OWORD *)(a1 + 552) = v30;
  *(_OWORD *)(a1 + 568) = v31;
  __int128 v33 = *(_OWORD *)(a2 + 616);
  __int128 v34 = *(_OWORD *)(a2 + 632);
  __int128 v35 = *(_OWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 648) = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 664) = v35;
  *(_OWORD *)(a1 + 616) = v33;
  *(_OWORD *)(a1 + 632) = v34;
  __int128 v36 = *(_OWORD *)(a2 + 680);
  __int128 v37 = *(_OWORD *)(a2 + 696);
  __int128 v38 = *(_OWORD *)(a2 + 712);
  *(_DWORD *)(a1 + 728) = *(_DWORD *)(a2 + 728);
  *(_OWORD *)(a1 + 696) = v37;
  *(_OWORD *)(a1 + 712) = v38;
  *(_OWORD *)(a1 + 68sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v36;
  if (*(char *)(a2 + 759) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 736), *(void **)(a2 + 736), *(void *)(a2 + 744));
  }

  else
  {
    __int128 v39 = *(_OWORD *)(a2 + 736);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(_OWORD *)(a1 + 736) = v39;
  }

  BOOL result = (_BYTE *)(a1 + 760);
  __int128 v41 = *(_OWORD *)(a2 + 760);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(_OWORD *)BOOL result = v41;
  return result;
}

void sub_100450C28(_Unwind_Exception *a1)
{
}

void sub_100450C6C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(void *)(a1 + 136) = v2;
    operator delete(v2);
  }

uint64_t sub_100450CD0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 8) == 6) {
    return a1 + 512;
  }
  uint64_t v2 = sub_101239C28();
  return sub_100450CF4(v2);
}

NSDictionary *sub_100450CF4(uint64_t a1)
{
  v4[0] = @"cell";
  v3[0] = @"provider";
  v3[1] = @"flow";
  uint64_t v1 = (void *)(a1 + 32);
  v3[2] = @"island";
  v4[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v1);
  v4[2] = @"null";
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

NSDictionary *sub_100450DA8(uint64_t a1)
{
  v4[0] = @"cell";
  v3[0] = @"provider";
  v3[1] = @"flow";
  uint64_t v1 = (void *)(a1 + 32);
  v3[2] = @"island";
  v4[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v1);
  v4[2] = @"sentinel";
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  3LL);
}

void sub_100450E5C(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100450E88(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100450EB4(id a1)
{
  qword_101934A98 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

uint64_t sub_100450EE0(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100450F14((uint64_t *)a1);
  }
  return a1;
}

void sub_100450F14(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 696LL;
      sub_10032B988(v5, v3);
    }

    while (v3 != v4);
  }

void sub_100450F64(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 864LL;
        sub_10032B988((uint64_t)(v1 + 2), v4);
      }

      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }

    v1[1] = v2;
    operator delete(v5);
  }

uint64_t sub_100450FE8(uint64_t *a1, uint64_t a2, _DWORD *a3, _OWORD *a4, _BYTE *a5)
{
  uint64_t v6 = *a1;
  unint64_t v7 = 0x84BDA12F684BDA13LL * ((a1[1] - *a1) >> 5);
  unint64_t v8 = v7 + 1;
  if (v7 + 1 > 0x4BDA12F684BDA1LL) {
    sub_100007008();
  }
  uint64_t v13 = (uint64_t)(a1 + 2);
  unint64_t v14 = 0x84BDA12F684BDA13LL * ((a1[2] - v6) >> 5);
  if (2 * v14 > v8) {
    unint64_t v8 = 2 * v14;
  }
  if (v14 >= 0x25ED097B425ED0LL) {
    unint64_t v15 = 0x4BDA12F684BDA1LL;
  }
  else {
    unint64_t v15 = v8;
  }
  __int128 v31 = a1 + 2;
  if (v15) {
    __int128 v16 = (char *)sub_10045135C(v13, v15);
  }
  else {
    __int128 v16 = 0LL;
  }
  __int128 v27 = v16;
  __int128 v28 = &v16[864 * v7];
  uint64_t v29 = (uint64_t)v28;
  __int128 v30 = &v16[864 * v15];
  uint64_t v17 = sub_10045115C((uint64_t)v28, a2);
  *(_DWORD *)(v17 + 696) = *a3;
  __int128 v18 = a4[1];
  *(_OWORD *)(v17 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *a4;
  *(_OWORD *)(v17 + 716) = v18;
  __int128 v19 = a4[2];
  __int128 v20 = a4[3];
  __int128 v21 = a4[5];
  *(_OWORD *)(v17 + 764) = a4[4];
  *(_OWORD *)(v17 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v21;
  *(_OWORD *)(v17 + 732) = v19;
  *(_OWORD *)(v17 + 748) = v20;
  __int128 v22 = a4[6];
  __int128 v23 = a4[7];
  __int128 v24 = a4[8];
  *(_OWORD *)(v17 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)a4 + 140);
  *(_OWORD *)(v17 + 812) = v23;
  *(_OWORD *)(v17 + 828) = v24;
  *(_OWORD *)(v17 + 796) = v22;
  *(_BYTE *)(v17 + 856) = *a5;
  v29 += 864LL;
  sub_1004512E8(a1, &v27);
  uint64_t v25 = a1[1];
  sub_100451648(&v27);
  return v25;
}

void sub_100451148(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10045115C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v4 = *(_OWORD *)(a2 + 16);
  __int128 v5 = *(_OWORD *)(a2 + 32);
  __int128 v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 6sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v7 = a2 + 80;
  *(_DWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  uint64_t v8 = a1 + 88;
  *(void *)(a1 + 104) = 0LL;
  sub_10001B72C( (void *)(a1 + 88),  *(const void **)(a2 + 88),  *(void *)(a2 + 96),  (uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 2);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v7 + 32);
  __int128 v9 = *(_OWORD *)(v7 + 48);
  __int128 v10 = *(_OWORD *)(v7 + 64);
  __int128 v11 = *(_OWORD *)(v7 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v7 + 96);
  *(_OWORD *)(v8 + 72) = v11;
  *(_OWORD *)(v8 + 56) = v10;
  *(_OWORD *)(v8 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v9;
  __int128 v12 = *(_OWORD *)(v7 + 112);
  __int128 v13 = *(_OWORD *)(v7 + 128);
  __int128 v14 = *(_OWORD *)(v7 + 144);
  *(_OWORD *)(v8 + 152) = *(_OWORD *)(v7 + 160);
  *(_OWORD *)(v8 + 136) = v14;
  *(_OWORD *)(v8 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v13;
  *(_OWORD *)(v8 + 104) = v12;
  __int128 v15 = *(_OWORD *)(v7 + 176);
  __int128 v16 = *(_OWORD *)(v7 + 192);
  __int128 v17 = *(_OWORD *)(v7 + 208);
  *(_OWORD *)(v8 + 212) = *(_OWORD *)(v7 + 220);
  *(_OWORD *)(v8 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(_OWORD *)(v8 + 168) = v15;
  __int128 v18 = (_BYTE *)(v8 + 232);
  if (*(char *)(v7 + 263) < 0)
  {
    sub_1010DD48C(v18, *(void **)(a2 + 320), *(void *)(a2 + 328));
  }

  else
  {
    __int128 v19 = *(_OWORD *)(v7 + 240);
    *(void *)(v8 + 248) = *(void *)(v7 + 256);
    *(_OWORD *)__int128 v18 = v19;
  }

  __int128 v20 = *(_OWORD *)(a2 + 344);
  __int128 v21 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 36sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v21;
  *(_OWORD *)(a1 + 344) = v20;
  __int128 v22 = *(_OWORD *)(a2 + 392);
  __int128 v23 = *(_OWORD *)(a2 + 408);
  __int128 v24 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 44sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v24;
  *(_OWORD *)(a1 + 392) = v22;
  *(_OWORD *)(a1 + 408) = v23;
  __int128 v25 = *(_OWORD *)(a2 + 456);
  __int128 v26 = *(_OWORD *)(a2 + 472);
  __int128 v27 = *(_OWORD *)(a2 + 488);
  *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 472) = v26;
  *(_OWORD *)(a1 + 488) = v27;
  *(_OWORD *)(a1 + 456) = v25;
  __int128 v28 = *(_OWORD *)(a2 + 512);
  __int128 v29 = *(_OWORD *)(a2 + 528);
  __int128 v30 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 56sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v30;
  *(_OWORD *)(a1 + 512) = v28;
  *(_OWORD *)(a1 + 528) = v29;
  __int128 v31 = *(_OWORD *)(a2 + 576);
  __int128 v32 = *(_OWORD *)(a2 + 592);
  __int128 v33 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v33;
  *(_OWORD *)(a1 + 576) = v31;
  *(_OWORD *)(a1 + 592) = v32;
  __int128 v34 = *(_OWORD *)(a2 + 640);
  __int128 v35 = *(_OWORD *)(a2 + 656);
  __int128 v36 = *(_OWORD *)(a2 + 672);
  *(_DWORD *)(a1 + 688) = *(_DWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 656) = v35;
  *(_OWORD *)(a1 + 672) = v36;
  *(_OWORD *)(a1 + 64sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v34;
  return a1;
}

void sub_1004512CC(_Unwind_Exception *exception_object)
{
  __int128 v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 96) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_1004512E8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1004513A4((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_10045135C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x4BDA12F684BDA2LL) {
    sub_1000070D4();
  }
  return operator new(864 * a2);
}

uint64_t sub_1004513A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v55 = a6;
  *((void *)&v55 + 1) = a7;
  __int128 v54 = v55;
  v52[0] = a1;
  v52[1] = &v54;
  v52[2] = &v55;
  if (a3 == a5)
  {
    uint64_t v50 = a6;
  }

  else
  {
    do
    {
      uint64_t v8 = v7 - 864;
      *(_OWORD *)uint64_t v8 = *(_OWORD *)(a3 - 864);
      __int128 v9 = *(_OWORD *)(a3 - 848);
      __int128 v10 = *(_OWORD *)(a3 - 832);
      __int128 v11 = *(_OWORD *)(a3 - 816);
      *(_OWORD *)(v8 + 6sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a3 - 804);
      *(_OWORD *)(v8 + 32) = v10;
      *(_OWORD *)(v8 + 48) = v11;
      *(_OWORD *)(v8 + 16) = v9;
      *(_DWORD *)(v8 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_DWORD *)(a3 - 784);
      uint64_t v12 = v7 - 784;
      uint64_t v13 = a3 - 776;
      *(_OWORD *)(v12 + 16) = 0uLL;
      *(void *)(v12 + 8) = 0LL;
      *(_OWORD *)(v12 + 8) = *(_OWORD *)(a3 - 776);
      *(void *)(v12 + 24) = *(void *)(a3 - 760);
      *(void *)(v13 + 16) = 0LL;
      *(_OWORD *)uint64_t v13 = 0uLL;
      __int128 v14 = *(_OWORD *)(a3 - 688);
      __int128 v16 = *(_OWORD *)(a3 - 736);
      __int128 v15 = *(_OWORD *)(a3 - 720);
      *(_OWORD *)(v12 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a3 - 704);
      *(_OWORD *)(v12 + 96) = v14;
      *(_OWORD *)(v12 + 48) = v16;
      *(_OWORD *)(v12 + 64) = v15;
      __int128 v17 = *(_OWORD *)(a3 - 624);
      __int128 v19 = *(_OWORD *)(a3 - 672);
      __int128 v18 = *(_OWORD *)(a3 - 656);
      *(_OWORD *)(v12 + 144) = *(_OWORD *)(a3 - 640);
      *(_OWORD *)(v12 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v17;
      *(_OWORD *)(v12 + 112) = v19;
      *(_OWORD *)(v12 + 128) = v18;
      __int128 v21 = *(_OWORD *)(a3 - 592);
      __int128 v20 = *(_OWORD *)(a3 - 576);
      __int128 v22 = *(_OWORD *)(a3 - 608);
      *(_OWORD *)(v12 + 22sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a3 - 564);
      *(_OWORD *)(v12 + 192) = v21;
      *(_OWORD *)(v12 + 208) = v20;
      *(_OWORD *)(v12 + 176) = v22;
      *(_OWORD *)(v12 + 32) = *(_OWORD *)(a3 - 752);
      __int128 v23 = (void *)(a3 - 544);
      __int128 v24 = *(_OWORD *)(a3 - 544);
      *(void *)(v12 + 256) = *(void *)(a3 - 528);
      *(_OWORD *)(v12 + 24sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v24;
      v23[1] = 0LL;
      v23[2] = 0LL;
      *__int128 v23 = 0LL;
      __int128 v25 = (_OWORD *)(v7 - 520);
      __int128 v26 = *(_OWORD *)(a3 - 424);
      __int128 v28 = *(_OWORD *)(a3 - 472);
      __int128 v27 = *(_OWORD *)(a3 - 456);
      v25[5] = *(_OWORD *)(a3 - 440);
      v25[6] = v26;
      v25[3] = v28;
      v25[4] = v27;
      __int128 v29 = *(_OWORD *)(a3 - 520);
      __int128 v30 = *(_OWORD *)(a3 - 488);
      v25[1] = *(_OWORD *)(a3 - 504);
      v25[2] = v30;
      *__int128 v25 = v29;
      __int128 v32 = *(_OWORD *)(a3 - 392);
      __int128 v31 = *(_OWORD *)(a3 - 376);
      __int128 v33 = *(_OWORD *)(a3 - 408);
      *(_DWORD *)(v12 + 424) = *(_DWORD *)(a3 - 360);
      v25[8] = v32;
      v25[9] = v31;
      v25[7] = v33;
      __int128 v34 = *(_OWORD *)(a3 - 352);
      __int128 v35 = *(_OWORD *)(a3 - 336);
      __int128 v36 = *(_OWORD *)(a3 - 304);
      *(_OWORD *)(v12 + 464) = *(_OWORD *)(a3 - 320);
      *(_OWORD *)(v12 + 48sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v36;
      *(_OWORD *)(v12 + 432) = v34;
      *(_OWORD *)(v12 + 448) = v35;
      __int128 v37 = *(_OWORD *)(a3 - 288);
      __int128 v38 = *(_OWORD *)(a3 - 272);
      __int128 v39 = *(_OWORD *)(a3 - 240);
      *(_OWORD *)(v7 - 256) = *(_OWORD *)(a3 - 256);
      *(_OWORD *)(v7 - 24sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v39;
      *(_OWORD *)(v12 + 496) = v37;
      *(_OWORD *)(v12 + 512) = v38;
      __int128 v40 = *(_OWORD *)(a3 - 224);
      __int128 v41 = *(_OWORD *)(a3 - 208);
      __int128 v42 = *(_OWORD *)(a3 - 192);
      *(_DWORD *)(v7 - 176) = *(_DWORD *)(a3 - 176);
      *(_OWORD *)(v7 - 208) = v41;
      *(_OWORD *)(v7 - 192) = v42;
      *(_OWORD *)(v7 - 224) = v40;
      *(_DWORD *)(v7 - 168) = *(_DWORD *)(a3 - 168);
      __int128 v43 = *(_OWORD *)(a3 - 164);
      *(_OWORD *)(v7 - 148) = *(_OWORD *)(a3 - 148);
      *(_OWORD *)(v7 - 164) = v43;
      __int128 v44 = *(_OWORD *)(a3 - 132);
      __int128 v45 = *(_OWORD *)(a3 - 116);
      __int128 v46 = *(_OWORD *)(a3 - 100);
      *(_OWORD *)(v7 - 84) = *(_OWORD *)(a3 - 84);
      *(_OWORD *)(v7 - 10sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v46;
      *(_OWORD *)(v7 - 116) = v45;
      *(_OWORD *)(v7 - 132) = v44;
      __int128 v47 = *(_OWORD *)(a3 - 68);
      __int128 v48 = *(_OWORD *)(a3 - 52);
      __int128 v49 = *(_OWORD *)(a3 - 36);
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(a3 - 24);
      *(_OWORD *)(v7 - 36) = v49;
      *(_OWORD *)(v7 - 52) = v48;
      *(_OWORD *)(v7 - 68) = v47;
      *(_BYTE *)(v7 - 8) = *(_BYTE *)(a3 - 8);
      uint64_t v7 = *((void *)&v55 + 1) - 864LL;
      *((void *)&v55 + 1) -= 864LL;
      a3 -= 864LL;
    }

    while (a3 != a5);
    uint64_t v50 = v55;
  }

  char v53 = 1;
  sub_1004515C4((uint64_t)v52);
  return v50;
}

uint64_t sub_1004515C4(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_1004515F8((uint64_t *)a1);
  }
  return a1;
}

void sub_1004515F8(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_10032B988(v3, v1);
      v1 += 864LL;
    }

    while (v1 != v2);
  }

void **sub_100451648(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_100451678(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 864;
    sub_10032B988(v4, i - 864);
  }

uint64_t sub_1004516BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0x84BDA12F684BDA13LL * ((a1[1] - *a1) >> 5);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x4BDA12F684BDA1LL) {
    sub_100007008();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x84BDA12F684BDA13LL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x25ED097B425ED0LL) {
    unint64_t v9 = 0x4BDA12F684BDA1LL;
  }
  else {
    unint64_t v9 = v5;
  }
  __int128 v25 = a1 + 2;
  if (v9) {
    __int128 v10 = (char *)sub_10045135C(v7, v9);
  }
  else {
    __int128 v10 = 0LL;
  }
  __int128 v21 = v10;
  __int128 v22 = &v10[864 * v4];
  uint64_t v23 = (uint64_t)v22;
  __int128 v24 = &v10[864 * v9];
  uint64_t v11 = sub_100451820((uint64_t)v22, a2);
  *(_DWORD *)(v11 + 696) = *(_DWORD *)(a2 + 696);
  __int128 v12 = *(_OWORD *)(a2 + 716);
  *(_OWORD *)(v11 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 700);
  *(_OWORD *)(v11 + 716) = v12;
  __int128 v13 = *(_OWORD *)(a2 + 732);
  __int128 v14 = *(_OWORD *)(a2 + 748);
  __int128 v15 = *(_OWORD *)(a2 + 780);
  *(_OWORD *)(v11 + 764) = *(_OWORD *)(a2 + 764);
  *(_OWORD *)(v11 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v15;
  *(_OWORD *)(v11 + 732) = v13;
  *(_OWORD *)(v11 + 748) = v14;
  __int128 v16 = *(_OWORD *)(a2 + 796);
  __int128 v17 = *(_OWORD *)(a2 + 812);
  __int128 v18 = *(_OWORD *)(a2 + 828);
  *(_OWORD *)(v11 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(v11 + 812) = v17;
  *(_OWORD *)(v11 + 828) = v18;
  *(_OWORD *)(v11 + 796) = v16;
  *(_BYTE *)(v11 + 856) = *(_BYTE *)(a2 + 856);
  v23 += 864LL;
  sub_1004512E8(a1, &v21);
  uint64_t v19 = a1[1];
  sub_100451648(&v21);
  return v19;
}

void sub_10045180C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100451820(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v4 = *(_OWORD *)(a2 + 16);
  __int128 v5 = *(_OWORD *)(a2 + 32);
  __int128 v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 6sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v7 = a2 + 80;
  *(_DWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  uint64_t v8 = a1 + 88;
  *(void *)(a1 + 104) = 0LL;
  sub_10001B72C( (void *)(a1 + 88),  *(const void **)(a2 + 88),  *(void *)(a2 + 96),  (uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 2);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v7 + 32);
  __int128 v9 = *(_OWORD *)(v7 + 48);
  __int128 v10 = *(_OWORD *)(v7 + 64);
  __int128 v11 = *(_OWORD *)(v7 + 80);
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v7 + 96);
  *(_OWORD *)(v8 + 72) = v11;
  *(_OWORD *)(v8 + 56) = v10;
  *(_OWORD *)(v8 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v9;
  __int128 v12 = *(_OWORD *)(v7 + 112);
  __int128 v13 = *(_OWORD *)(v7 + 128);
  __int128 v14 = *(_OWORD *)(v7 + 144);
  *(_OWORD *)(v8 + 152) = *(_OWORD *)(v7 + 160);
  *(_OWORD *)(v8 + 136) = v14;
  *(_OWORD *)(v8 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v13;
  *(_OWORD *)(v8 + 104) = v12;
  __int128 v15 = *(_OWORD *)(v7 + 176);
  __int128 v16 = *(_OWORD *)(v7 + 192);
  __int128 v17 = *(_OWORD *)(v7 + 208);
  *(_OWORD *)(v8 + 212) = *(_OWORD *)(v7 + 220);
  *(_OWORD *)(v8 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v17;
  *(_OWORD *)(v8 + 184) = v16;
  *(_OWORD *)(v8 + 168) = v15;
  __int128 v18 = (_BYTE *)(v8 + 232);
  if (*(char *)(v7 + 263) < 0)
  {
    sub_1010DD48C(v18, *(void **)(a2 + 320), *(void *)(a2 + 328));
  }

  else
  {
    __int128 v19 = *(_OWORD *)(v7 + 240);
    *(void *)(v8 + 248) = *(void *)(v7 + 256);
    *(_OWORD *)__int128 v18 = v19;
  }

  __int128 v20 = *(_OWORD *)(a2 + 344);
  __int128 v21 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 36sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v21;
  *(_OWORD *)(a1 + 344) = v20;
  __int128 v22 = *(_OWORD *)(a2 + 392);
  __int128 v23 = *(_OWORD *)(a2 + 408);
  __int128 v24 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 44sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v24;
  *(_OWORD *)(a1 + 392) = v22;
  *(_OWORD *)(a1 + 408) = v23;
  __int128 v25 = *(_OWORD *)(a2 + 456);
  __int128 v26 = *(_OWORD *)(a2 + 472);
  __int128 v27 = *(_OWORD *)(a2 + 488);
  *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 472) = v26;
  *(_OWORD *)(a1 + 488) = v27;
  *(_OWORD *)(a1 + 456) = v25;
  __int128 v28 = *(_OWORD *)(a2 + 512);
  __int128 v29 = *(_OWORD *)(a2 + 528);
  __int128 v30 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 56sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v30;
  *(_OWORD *)(a1 + 512) = v28;
  *(_OWORD *)(a1 + 528) = v29;
  __int128 v31 = *(_OWORD *)(a2 + 576);
  __int128 v32 = *(_OWORD *)(a2 + 592);
  __int128 v33 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v33;
  *(_OWORD *)(a1 + 576) = v31;
  *(_OWORD *)(a1 + 592) = v32;
  __int128 v34 = *(_OWORD *)(a2 + 640);
  __int128 v35 = *(_OWORD *)(a2 + 656);
  __int128 v36 = *(_OWORD *)(a2 + 672);
  *(_DWORD *)(a1 + 688) = *(_DWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 656) = v35;
  *(_OWORD *)(a1 + 672) = v36;
  *(_OWORD *)(a1 + 64sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v34;
  return a1;
}

void sub_100451990(_Unwind_Exception *exception_object)
{
  __int128 v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 96) = v4;
    operator delete(v4);
  }

  _Unwind_Resume(exception_object);
}

void *sub_1004519AC(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    __int128 v6 = result;
    sub_100451A30(result, a4);
    uint64_t result = (void *)sub_100451A84((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }

  return result;
}

void sub_100451A10( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_100450F64(&a9);
  _Unwind_Resume(a1);
}

char *sub_100451A30(void *a1, unint64_t a2)
{
  if (a2 >= 0x4BDA12F684BDA2LL) {
    sub_100007008();
  }
  uint64_t result = (char *)sub_10045135C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[864 * v4];
  return result;
}

uint64_t sub_100451A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v17 = a4;
  uint64_t v18 = a4;
  v15[0] = a1;
  v15[1] = &v17;
  _DWORD v15[2] = &v18;
  char v16 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_100451820(v4, v6);
      *(_DWORD *)(v4 + 696) = *(_DWORD *)(v6 + 696);
      __int128 v7 = *(_OWORD *)(v6 + 716);
      *(_OWORD *)(v4 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v6 + 700);
      *(_OWORD *)(v4 + 716) = v7;
      __int128 v8 = *(_OWORD *)(v6 + 732);
      __int128 v9 = *(_OWORD *)(v6 + 748);
      __int128 v10 = *(_OWORD *)(v6 + 780);
      *(_OWORD *)(v4 + 764) = *(_OWORD *)(v6 + 764);
      *(_OWORD *)(v4 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v10;
      *(_OWORD *)(v4 + 732) = v8;
      *(_OWORD *)(v4 + 748) = v9;
      __int128 v11 = *(_OWORD *)(v6 + 796);
      __int128 v12 = *(_OWORD *)(v6 + 812);
      __int128 v13 = *(_OWORD *)(v6 + 828);
      *(_OWORD *)(v4 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v6 + 840);
      *(_OWORD *)(v4 + 812) = v12;
      *(_OWORD *)(v4 + 828) = v13;
      *(_OWORD *)(v4 + 796) = v11;
      *(_BYTE *)(v4 + 856) = *(_BYTE *)(v6 + 856);
      uint64_t v4 = v18 + 864;
      v18 += 864LL;
      v6 += 864LL;
    }

    while (v6 != a3);
  }

  char v16 = 1;
  sub_100451B6C((uint64_t)v15);
  return v4;
}

void sub_100451B58( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100451B6C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100451BA0((uint64_t *)a1);
  }
  return a1;
}

void sub_100451BA0(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 864LL;
      sub_10032B988(v5, v3);
    }

    while (v3 != v4);
  }

void sub_100451BF0(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
LABEL_1:
  v234 = (__int128 *)(a2 - 864);
  unint64_t v5 = a1;
  while (2)
  {
    a1 = v5;
    uint64_t v6 = a2 - v5;
    unint64_t v7 = 0x84BDA12F684BDA13LL * ((uint64_t)(a2 - v5) >> 5);
    switch(v7)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        if (sub_100452AD8((uint64_t)v234, v5))
        {
          sub_100453F9C((__int128 *)v5, v234);
          int v150 = *(_DWORD *)(v5 + 696);
          *(_DWORD *)(v5 + 696) = *(_DWORD *)(a2 - 168);
          *(_DWORD *)(a2 - 168) = v150;
          __int128 v151 = *(_OWORD *)(v5 + 780);
          *(_OWORD *)&v240[16] = *(_OWORD *)(v5 + 764);
          *(_OWORD *)uint64_t v241 = v151;
          __int128 v152 = *(_OWORD *)(v5 + 748);
          __int128 v239 = *(_OWORD *)(v5 + 732);
          *(_OWORD *)uint64_t v240 = v152;
          *(_OWORD *)((char *)v243 + 12) = *(_OWORD *)(v5 + 840);
          __int128 v153 = *(_OWORD *)(v5 + 828);
          __int128 v154 = *(_OWORD *)(v5 + 796);
          __int128 v242 = *(_OWORD *)(v5 + 812);
          v243[0] = v153;
          *(_OWORD *)&v241[16] = v154;
          __int128 v155 = *(_OWORD *)(v5 + 716);
          __int128 v237 = *(_OWORD *)(v5 + 700);
          __int128 v238 = v155;
          __int128 v156 = *(_OWORD *)(a2 - 148);
          *(_OWORD *)(v5 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 - 164);
          *(_OWORD *)(v5 + 716) = v156;
          __int128 v157 = *(_OWORD *)(a2 - 132);
          __int128 v158 = *(_OWORD *)(a2 - 116);
          __int128 v159 = *(_OWORD *)(a2 - 84);
          *(_OWORD *)(v5 + 764) = *(_OWORD *)(a2 - 100);
          *(_OWORD *)(v5 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v159;
          *(_OWORD *)(v5 + 732) = v157;
          *(_OWORD *)(v5 + 748) = v158;
          __int128 v160 = *(_OWORD *)(a2 - 68);
          __int128 v161 = *(_OWORD *)(a2 - 52);
          __int128 v162 = *(_OWORD *)(a2 - 36);
          *(_OWORD *)(v5 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 - 24);
          *(_OWORD *)(v5 + 812) = v161;
          *(_OWORD *)(v5 + 828) = v162;
          *(_OWORD *)(v5 + 796) = v160;
          __int128 v163 = v237;
          *(_OWORD *)(a2 - 148) = v238;
          *(_OWORD *)(a2 - 164) = v163;
          __int128 v164 = v239;
          __int128 v165 = *(_OWORD *)v240;
          __int128 v166 = *(_OWORD *)&v240[16];
          *(_OWORD *)(a2 - 84) = *(_OWORD *)v241;
          *(_OWORD *)(a2 - 10sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v166;
          *(_OWORD *)(a2 - 116) = v165;
          *(_OWORD *)(a2 - 132) = v164;
          __int128 v167 = *(_OWORD *)&v241[16];
          __int128 v168 = v242;
          __int128 v169 = v243[0];
          *(_OWORD *)(a2 - 24) = *(_OWORD *)((char *)v243 + 12);
          *(_OWORD *)(a2 - 36) = v169;
          *(_OWORD *)(a2 - 52) = v168;
          *(_OWORD *)(a2 - 68) = v167;
          LOBYTE(v15sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_BYTE *)(v5 + 856);
          *(_BYTE *)(v5 + 856) = *(_BYTE *)(a2 - 8);
          *(_BYTE *)(a2 - 8) = v150;
        }

        return;
      case 3uLL:
        sub_10045372C(v5, v5 + 864, (uint64_t)v234);
        return;
      case 4uLL:
        sub_100454374(v5, v5 + 864, v5 + 1728, (uint64_t)v234);
        return;
      case 5uLL:
        sub_100452CC4(v5, v5 + 864, v5 + 1728, v5 + 2592, (uint64_t)v234);
        return;
      default:
        if (v6 <= 20735)
        {
          if ((a4 & 1) != 0)
          {
            if (v5 != a2)
            {
              uint64_t v170 = v5 + 864;
              if (v5 + 864 != a2)
              {
                uint64_t v171 = 0LL;
                uint64_t v172 = v5;
                do
                {
                  __int128 v173 = (__int128 *)v170;
                  if (sub_100452AD8(v170, v172))
                  {
                    __int128 v237 = *v173;
                    __int128 v174 = v173[1];
                    __int128 v175 = v173[2];
                    __int128 v176 = v173[3];
                    *(_OWORD *)&v240[12] = *(__int128 *)((char *)v173 + 60);
                    __int128 v239 = v175;
                    *(_OWORD *)uint64_t v240 = v176;
                    __int128 v238 = v174;
                    *(_DWORD *)uint64_t v241 = *(_DWORD *)(v172 + 944);
                    *(_OWORD *)&v241[8] = *(_OWORD *)(v172 + 952);
                    *(void *)&v241[24] = *(void *)(v172 + 968);
                    *(void *)(v172 + 968) = 0LL;
                    *(void *)(v172 + 952) = 0LL;
                    *(void *)(v172 + 96sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
                    __int128 v177 = *(_OWORD *)(v172 + 976);
                    __int128 v178 = *(_OWORD *)(v172 + 992);
                    __int128 v179 = *(_OWORD *)(v172 + 1024);
                    __int128 v180 = *(_OWORD *)(v172 + 1040);
                    v243[1] = *(_OWORD *)(v172 + 1008);
                    __int128 v244 = v179;
                    __int128 v242 = v177;
                    v243[0] = v178;
                    __int128 v181 = *(_OWORD *)(v172 + 1056);
                    __int128 v182 = *(_OWORD *)(v172 + 1088);
                    __int128 v183 = *(_OWORD *)(v172 + 1104);
                    __int128 v247 = *(_OWORD *)(v172 + 1072);
                    __int128 v248 = v182;
                    __int128 v245 = v180;
                    __int128 v246 = v181;
                    __int128 v184 = *(_OWORD *)(v172 + 1120);
                    __int128 v185 = *(_OWORD *)(v172 + 1136);
                    *(_OWORD *)((char *)v252 + 12) = *(_OWORD *)(v172 + 1164);
                    __int128 v186 = *(_OWORD *)(v172 + 1152);
                    __int128 v251 = v185;
                    v252[0] = v186;
                    __int128 v249 = v183;
                    __int128 v250 = v184;
                    __int128 __p = *(_OWORD *)(v172 + 1184);
                    uint64_t v254 = *(void *)(v172 + 1200);
                    *(void *)(v172 + 1184) = 0LL;
                    *(void *)(v172 + 120sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
                    *(void *)(v172 + 1192) = 0LL;
                    __int128 v187 = *(_OWORD *)(v172 + 1352);
                    __int128 v263 = *(_OWORD *)(v172 + 1336);
                    __int128 v264 = v187;
                    int v265 = *(_DWORD *)(v172 + 1368);
                    __int128 v188 = *(_OWORD *)(v172 + 1288);
                    __int128 v259 = *(_OWORD *)(v172 + 1272);
                    __int128 v260 = v188;
                    __int128 v189 = *(_OWORD *)(v172 + 1320);
                    __int128 v261 = *(_OWORD *)(v172 + 1304);
                    __int128 v262 = v189;
                    __int128 v190 = *(_OWORD *)(v172 + 1224);
                    __int128 v255 = *(_OWORD *)(v172 + 1208);
                    __int128 v256 = v190;
                    __int128 v191 = *(_OWORD *)(v172 + 1256);
                    __int128 v257 = *(_OWORD *)(v172 + 1240);
                    __int128 v258 = v191;
                    __int128 v192 = *(_OWORD *)(v172 + 1520);
                    __int128 v274 = *(_OWORD *)(v172 + 1504);
                    __int128 v275 = v192;
                    __int128 v276 = *(_OWORD *)(v172 + 1536);
                    int v277 = *(_DWORD *)(v172 + 1552);
                    __int128 v193 = *(_OWORD *)(v172 + 1456);
                    __int128 v270 = *(_OWORD *)(v172 + 1440);
                    __int128 v271 = v193;
                    __int128 v194 = *(_OWORD *)(v172 + 1488);
                    __int128 v272 = *(_OWORD *)(v172 + 1472);
                    __int128 v273 = v194;
                    __int128 v195 = *(_OWORD *)(v172 + 1392);
                    __int128 v266 = *(_OWORD *)(v172 + 1376);
                    __int128 v267 = v195;
                    __int128 v196 = *(_OWORD *)(v172 + 1424);
                    __int128 v268 = *(_OWORD *)(v172 + 1408);
                    __int128 v269 = v196;
                    int v278 = *(_DWORD *)(v172 + 1560);
                    __int128 v197 = *(_OWORD *)(v172 + 1676);
                    __int128 v285 = *(_OWORD *)(v172 + 1660);
                    __int128 v286 = v197;
                    *(_OWORD *)uint64_t v287 = *(_OWORD *)(v172 + 1692);
                    *(_OWORD *)&v287[12] = *(_OWORD *)(v172 + 1704);
                    __int128 v198 = *(_OWORD *)(v172 + 1612);
                    __int128 v281 = *(_OWORD *)(v172 + 1596);
                    __int128 v282 = v198;
                    __int128 v199 = *(_OWORD *)(v172 + 1644);
                    __int128 v283 = *(_OWORD *)(v172 + 1628);
                    __int128 v284 = v199;
                    __int128 v200 = *(_OWORD *)(v172 + 1580);
                    __int128 v279 = *(_OWORD *)(v172 + 1564);
                    __int128 v280 = v200;
                    uint64_t v201 = v171;
                    char v288 = *(_BYTE *)(v172 + 1720);
                    while (1)
                    {
                      sub_100454630(v5 + v201 + 864, v5 + v201);
                      if (!v201) {
                        break;
                      }
                      char v202 = sub_100452AD8((uint64_t)&v237, v5 + v201 - 864);
                      v201 -= 864LL;
                      if ((v202 & 1) == 0)
                      {
                        uint64_t v203 = v5 + v201 + 864;
                        goto LABEL_76;
                      }
                    }

                    uint64_t v203 = v5;
LABEL_76:
                    sub_100454630(v203, (uint64_t)&v237);
                    if (SHIBYTE(v254) < 0) {
                      operator delete((void *)__p);
                    }
                    if (*(void *)&v241[8])
                    {
                      *(void *)&v241[16] = *(void *)&v241[8];
                      operator delete(*(void **)&v241[8]);
                    }
                  }

                  uint64_t v170 = (uint64_t)(v173 + 54);
                  v171 += 864LL;
                  uint64_t v172 = (uint64_t)v173;
                }

                while (v173 + 54 != (__int128 *)a2);
              }
            }
          }

          else if (v5 != a2)
          {
            uint64_t v204 = v5 + 864;
            if (v5 + 864 != a2)
            {
              do
              {
                __int128 v205 = (__int128 *)v204;
                if (sub_100452AD8(v204, a1))
                {
                  __int128 v237 = *v205;
                  __int128 v206 = v205[1];
                  __int128 v207 = v205[2];
                  __int128 v208 = v205[3];
                  *(_OWORD *)&v240[12] = *(__int128 *)((char *)v205 + 60);
                  __int128 v239 = v207;
                  *(_OWORD *)uint64_t v240 = v208;
                  __int128 v238 = v206;
                  *(_DWORD *)uint64_t v241 = *(_DWORD *)(a1 + 944);
                  *(_OWORD *)&v241[8] = *(_OWORD *)(a1 + 952);
                  *(void *)&v241[24] = *(void *)(a1 + 968);
                  *(void *)(a1 + 968) = 0LL;
                  *(void *)(a1 + 952) = 0LL;
                  *(void *)(a1 + 96sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
                  __int128 v209 = *(_OWORD *)(a1 + 976);
                  __int128 v210 = *(_OWORD *)(a1 + 992);
                  __int128 v211 = *(_OWORD *)(a1 + 1024);
                  __int128 v212 = *(_OWORD *)(a1 + 1040);
                  v243[1] = *(_OWORD *)(a1 + 1008);
                  __int128 v244 = v211;
                  __int128 v242 = v209;
                  v243[0] = v210;
                  __int128 v213 = *(_OWORD *)(a1 + 1056);
                  __int128 v214 = *(_OWORD *)(a1 + 1088);
                  __int128 v215 = *(_OWORD *)(a1 + 1104);
                  __int128 v247 = *(_OWORD *)(a1 + 1072);
                  __int128 v248 = v214;
                  __int128 v245 = v212;
                  __int128 v246 = v213;
                  __int128 v216 = *(_OWORD *)(a1 + 1120);
                  __int128 v217 = *(_OWORD *)(a1 + 1136);
                  *(_OWORD *)((char *)v252 + 12) = *(_OWORD *)(a1 + 1164);
                  __int128 v218 = *(_OWORD *)(a1 + 1152);
                  __int128 v251 = v217;
                  v252[0] = v218;
                  __int128 v249 = v215;
                  __int128 v250 = v216;
                  __int128 __p = *(_OWORD *)(a1 + 1184);
                  uint64_t v254 = *(void *)(a1 + 1200);
                  *(void *)(a1 + 1184) = 0LL;
                  *(void *)(a1 + 120sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
                  *(void *)(a1 + 1192) = 0LL;
                  __int128 v219 = *(_OWORD *)(a1 + 1352);
                  __int128 v263 = *(_OWORD *)(a1 + 1336);
                  __int128 v264 = v219;
                  int v265 = *(_DWORD *)(a1 + 1368);
                  __int128 v220 = *(_OWORD *)(a1 + 1288);
                  __int128 v259 = *(_OWORD *)(a1 + 1272);
                  __int128 v260 = v220;
                  __int128 v221 = *(_OWORD *)(a1 + 1320);
                  __int128 v261 = *(_OWORD *)(a1 + 1304);
                  __int128 v262 = v221;
                  __int128 v222 = *(_OWORD *)(a1 + 1224);
                  __int128 v255 = *(_OWORD *)(a1 + 1208);
                  __int128 v256 = v222;
                  __int128 v223 = *(_OWORD *)(a1 + 1256);
                  __int128 v257 = *(_OWORD *)(a1 + 1240);
                  __int128 v258 = v223;
                  __int128 v224 = *(_OWORD *)(a1 + 1520);
                  __int128 v274 = *(_OWORD *)(a1 + 1504);
                  __int128 v275 = v224;
                  __int128 v276 = *(_OWORD *)(a1 + 1536);
                  int v277 = *(_DWORD *)(a1 + 1552);
                  __int128 v225 = *(_OWORD *)(a1 + 1456);
                  __int128 v270 = *(_OWORD *)(a1 + 1440);
                  __int128 v271 = v225;
                  __int128 v226 = *(_OWORD *)(a1 + 1488);
                  __int128 v272 = *(_OWORD *)(a1 + 1472);
                  __int128 v273 = v226;
                  __int128 v227 = *(_OWORD *)(a1 + 1392);
                  __int128 v266 = *(_OWORD *)(a1 + 1376);
                  __int128 v267 = v227;
                  __int128 v228 = *(_OWORD *)(a1 + 1424);
                  __int128 v268 = *(_OWORD *)(a1 + 1408);
                  __int128 v269 = v228;
                  int v278 = *(_DWORD *)(a1 + 1560);
                  __int128 v229 = *(_OWORD *)(a1 + 1676);
                  __int128 v285 = *(_OWORD *)(a1 + 1660);
                  __int128 v286 = v229;
                  *(_OWORD *)uint64_t v287 = *(_OWORD *)(a1 + 1692);
                  *(_OWORD *)&v287[12] = *(_OWORD *)(a1 + 1704);
                  __int128 v230 = *(_OWORD *)(a1 + 1612);
                  __int128 v281 = *(_OWORD *)(a1 + 1596);
                  __int128 v282 = v230;
                  __int128 v231 = *(_OWORD *)(a1 + 1644);
                  __int128 v283 = *(_OWORD *)(a1 + 1628);
                  __int128 v284 = v231;
                  __int128 v232 = *(_OWORD *)(a1 + 1580);
                  __int128 v279 = *(_OWORD *)(a1 + 1564);
                  __int128 v280 = v232;
                  char v288 = *(_BYTE *)(a1 + 1720);
                  do
                  {
                    sub_100454630(a1 + 864, a1);
                    a1 -= 864LL;
                  }

                  while ((sub_100452AD8((uint64_t)&v237, a1) & 1) != 0);
                  sub_100454630(a1 + 864, (uint64_t)&v237);
                  if (SHIBYTE(v254) < 0) {
                    operator delete((void *)__p);
                  }
                  if (*(void *)&v241[8])
                  {
                    *(void *)&v241[16] = *(void *)&v241[8];
                    operator delete(*(void **)&v241[8]);
                  }
                }

                uint64_t v204 = (uint64_t)(v205 + 54);
                a1 = (uint64_t)v205;
              }

              while (v205 + 54 != (__int128 *)a2);
            }
          }

          return;
        }

        if (!a3)
        {
          sub_10045305C(v5, a2, a2);
          return;
        }

        unint64_t v8 = v7 >> 1;
        uint64_t v9 = v5 + 864 * (v7 >> 1);
        if ((unint64_t)v6 <= 0x1B000)
        {
          sub_10045372C(a1 + 864 * (v7 >> 1), a1, (uint64_t)v234);
        }

        else
        {
          sub_10045372C(a1, a1 + 864 * (v7 >> 1), (uint64_t)v234);
          uint64_t v10 = 864 * v8;
          sub_10045372C(a1 + 864, v10 + a1 - 864, a2 - 1728);
          sub_10045372C(a1 + 1728, a1 + 864 + v10, a2 - 2592);
          sub_10045372C(v10 + a1 - 864, v9, a1 + 864 + v10);
          sub_100453F9C((__int128 *)a1, (__int128 *)v9);
          int v11 = *(_DWORD *)(a1 + 696);
          *(_DWORD *)(a1 + 696) = *(_DWORD *)(v9 + 696);
          *(_DWORD *)(v9 + 696) = v11;
          __int128 v12 = *(_OWORD *)(a1 + 780);
          *(_OWORD *)&v240[16] = *(_OWORD *)(a1 + 764);
          *(_OWORD *)uint64_t v241 = v12;
          __int128 v13 = *(_OWORD *)(a1 + 748);
          __int128 v239 = *(_OWORD *)(a1 + 732);
          *(_OWORD *)uint64_t v240 = v13;
          *(_OWORD *)((char *)v243 + 12) = *(_OWORD *)(a1 + 840);
          __int128 v14 = *(_OWORD *)(a1 + 828);
          __int128 v15 = *(_OWORD *)(a1 + 796);
          __int128 v242 = *(_OWORD *)(a1 + 812);
          v243[0] = v14;
          *(_OWORD *)&v241[16] = v15;
          __int128 v16 = *(_OWORD *)(a1 + 716);
          __int128 v237 = *(_OWORD *)(a1 + 700);
          __int128 v238 = v16;
          __int128 v17 = *(_OWORD *)(v9 + 716);
          *(_OWORD *)(a1 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v9 + 700);
          *(_OWORD *)(a1 + 716) = v17;
          __int128 v18 = *(_OWORD *)(v9 + 732);
          __int128 v19 = *(_OWORD *)(v9 + 748);
          __int128 v20 = *(_OWORD *)(v9 + 780);
          *(_OWORD *)(a1 + 764) = *(_OWORD *)(v9 + 764);
          *(_OWORD *)(a1 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v20;
          *(_OWORD *)(a1 + 732) = v18;
          *(_OWORD *)(a1 + 748) = v19;
          __int128 v21 = *(_OWORD *)(v9 + 796);
          __int128 v22 = *(_OWORD *)(v9 + 812);
          __int128 v23 = *(_OWORD *)(v9 + 828);
          *(_OWORD *)(a1 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v9 + 840);
          *(_OWORD *)(a1 + 812) = v22;
          *(_OWORD *)(a1 + 828) = v23;
          *(_OWORD *)(a1 + 796) = v21;
          __int128 v24 = v238;
          *(_OWORD *)(v9 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v237;
          *(_OWORD *)(v9 + 716) = v24;
          __int128 v25 = v239;
          __int128 v26 = *(_OWORD *)v240;
          __int128 v27 = *(_OWORD *)v241;
          *(_OWORD *)(v9 + 764) = *(_OWORD *)&v240[16];
          *(_OWORD *)(v9 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v27;
          *(_OWORD *)(v9 + 732) = v25;
          *(_OWORD *)(v9 + 748) = v26;
          __int128 v28 = *(_OWORD *)&v241[16];
          __int128 v29 = v242;
          __int128 v30 = v243[0];
          *(_OWORD *)(v9 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)v243 + 12);
          *(_OWORD *)(v9 + 812) = v29;
          *(_OWORD *)(v9 + 828) = v30;
          *(_OWORD *)(v9 + 796) = v28;
          LOBYTE(v11) = *(_BYTE *)(a1 + 856);
          *(_BYTE *)(a1 + 856) = *(_BYTE *)(v9 + 856);
          *(_BYTE *)(v9 + 856) = v11;
        }

        --a3;
        if ((a4 & 1) == 0 && (sub_100452AD8(a1 - 864, a1) & 1) == 0)
        {
          __int128 v237 = *(_OWORD *)a1;
          __int128 v93 = *(_OWORD *)(a1 + 16);
          __int128 v94 = *(_OWORD *)(a1 + 32);
          __int128 v95 = *(_OWORD *)(a1 + 48);
          *(_OWORD *)&v240[12] = *(_OWORD *)(a1 + 60);
          __int128 v239 = v94;
          *(_OWORD *)uint64_t v240 = v95;
          int v96 = *(_DWORD *)(a1 + 80);
          __int128 v238 = v93;
          *(_DWORD *)uint64_t v241 = v96;
          *(_OWORD *)&v241[8] = *(_OWORD *)(a1 + 88);
          *(void *)&v241[24] = *(void *)(a1 + 104);
          *(void *)(a1 + 96) = 0LL;
          *(void *)(a1 + 104) = 0LL;
          *(void *)(a1 + 88) = 0LL;
          __int128 v242 = *(_OWORD *)(a1 + 112);
          __int128 v97 = *(_OWORD *)(a1 + 128);
          __int128 v98 = *(_OWORD *)(a1 + 144);
          __int128 v99 = *(_OWORD *)(a1 + 176);
          __int128 v244 = *(_OWORD *)(a1 + 160);
          __int128 v245 = v99;
          v243[0] = v97;
          v243[1] = v98;
          __int128 v100 = *(_OWORD *)(a1 + 192);
          __int128 v101 = *(_OWORD *)(a1 + 208);
          __int128 v102 = *(_OWORD *)(a1 + 240);
          __int128 v248 = *(_OWORD *)(a1 + 224);
          __int128 v249 = v102;
          __int128 v246 = v100;
          __int128 v247 = v101;
          __int128 v103 = *(_OWORD *)(a1 + 256);
          __int128 v104 = *(_OWORD *)(a1 + 272);
          __int128 v105 = *(_OWORD *)(a1 + 288);
          *(_OWORD *)((char *)v252 + 12) = *(_OWORD *)(a1 + 300);
          __int128 v251 = v104;
          v252[0] = v105;
          __int128 v250 = v103;
          __int128 v106 = *(_OWORD *)(a1 + 320);
          uint64_t v254 = *(void *)(a1 + 336);
          __int128 __p = v106;
          *(void *)(a1 + 328) = 0LL;
          *(void *)(a1 + 336) = 0LL;
          *(void *)(a1 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
          __int128 v107 = *(_OWORD *)(a1 + 440);
          __int128 v109 = *(_OWORD *)(a1 + 392);
          __int128 v108 = *(_OWORD *)(a1 + 408);
          __int128 v260 = *(_OWORD *)(a1 + 424);
          __int128 v261 = v107;
          __int128 v258 = v109;
          __int128 v259 = v108;
          __int128 v110 = *(_OWORD *)(a1 + 344);
          __int128 v111 = *(_OWORD *)(a1 + 376);
          __int128 v256 = *(_OWORD *)(a1 + 360);
          __int128 v257 = v111;
          __int128 v255 = v110;
          __int128 v113 = *(_OWORD *)(a1 + 472);
          __int128 v112 = *(_OWORD *)(a1 + 488);
          __int128 v114 = *(_OWORD *)(a1 + 456);
          int v265 = *(_DWORD *)(a1 + 504);
          __int128 v263 = v113;
          __int128 v264 = v112;
          __int128 v262 = v114;
          __int128 v115 = *(_OWORD *)(a1 + 512);
          __int128 v116 = *(_OWORD *)(a1 + 528);
          __int128 v117 = *(_OWORD *)(a1 + 560);
          __int128 v268 = *(_OWORD *)(a1 + 544);
          __int128 v269 = v117;
          __int128 v266 = v115;
          __int128 v267 = v116;
          __int128 v118 = *(_OWORD *)(a1 + 576);
          __int128 v119 = *(_OWORD *)(a1 + 592);
          __int128 v120 = *(_OWORD *)(a1 + 624);
          __int128 v272 = *(_OWORD *)(a1 + 608);
          __int128 v273 = v120;
          __int128 v270 = v118;
          __int128 v271 = v119;
          __int128 v121 = *(_OWORD *)(a1 + 640);
          __int128 v122 = *(_OWORD *)(a1 + 656);
          __int128 v123 = *(_OWORD *)(a1 + 672);
          int v277 = *(_DWORD *)(a1 + 688);
          __int128 v275 = v122;
          __int128 v276 = v123;
          __int128 v274 = v121;
          int v278 = *(_DWORD *)(a1 + 696);
          __int128 v124 = *(_OWORD *)(a1 + 716);
          __int128 v279 = *(_OWORD *)(a1 + 700);
          __int128 v280 = v124;
          __int128 v125 = *(_OWORD *)(a1 + 780);
          __int128 v127 = *(_OWORD *)(a1 + 732);
          __int128 v126 = *(_OWORD *)(a1 + 748);
          __int128 v283 = *(_OWORD *)(a1 + 764);
          __int128 v284 = v125;
          __int128 v281 = v127;
          __int128 v282 = v126;
          __int128 v129 = *(_OWORD *)(a1 + 812);
          __int128 v128 = *(_OWORD *)(a1 + 828);
          __int128 v130 = *(_OWORD *)(a1 + 796);
          *(_OWORD *)&v287[12] = *(_OWORD *)(a1 + 840);
          __int128 v286 = v129;
          *(_OWORD *)uint64_t v287 = v128;
          __int128 v285 = v130;
          char v288 = *(_BYTE *)(a1 + 856);
          if ((sub_100452AD8((uint64_t)&v237, (uint64_t)v234) & 1) != 0)
          {
            unint64_t v5 = a1;
            do
              v5 += 864LL;
            while ((sub_100452AD8((uint64_t)&v237, v5) & 1) == 0);
          }

          else
          {
            unint64_t v131 = a1 + 864;
            do
            {
              unint64_t v5 = v131;
              if (v131 >= a2) {
                break;
              }
              int v132 = sub_100452AD8((uint64_t)&v237, v131);
              unint64_t v131 = v5 + 864;
            }

            while (!v132);
          }

          unint64_t v133 = a2;
          if (v5 < a2)
          {
            unint64_t v133 = a2;
            do
              v133 -= 864LL;
            while ((sub_100452AD8((uint64_t)&v237, v133) & 1) != 0);
          }

          while (v5 < v133)
          {
            sub_100453F9C((__int128 *)v5, (__int128 *)v133);
            int v134 = *(_DWORD *)(v5 + 696);
            *(_DWORD *)(v5 + 696) = *(_DWORD *)(v133 + 696);
            *(_DWORD *)(v133 + 696) = v134;
            __int128 v135 = *(_OWORD *)(v5 + 812);
            __int128 v295 = *(_OWORD *)(v5 + 796);
            __int128 v296 = v135;
            v297[0] = *(_OWORD *)(v5 + 828);
            *(_OWORD *)((char *)v297 + 12) = *(_OWORD *)(v5 + 840);
            __int128 v136 = *(_OWORD *)(v5 + 748);
            __int128 v291 = *(_OWORD *)(v5 + 732);
            __int128 v292 = v136;
            __int128 v137 = *(_OWORD *)(v5 + 780);
            __int128 v293 = *(_OWORD *)(v5 + 764);
            __int128 v294 = v137;
            __int128 v138 = *(_OWORD *)(v5 + 716);
            __int128 v289 = *(_OWORD *)(v5 + 700);
            __int128 v290 = v138;
            __int128 v139 = *(_OWORD *)(v133 + 716);
            *(_OWORD *)(v5 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v133 + 700);
            *(_OWORD *)(v5 + 716) = v139;
            __int128 v140 = *(_OWORD *)(v133 + 732);
            __int128 v141 = *(_OWORD *)(v133 + 748);
            __int128 v142 = *(_OWORD *)(v133 + 780);
            *(_OWORD *)(v5 + 764) = *(_OWORD *)(v133 + 764);
            *(_OWORD *)(v5 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v142;
            *(_OWORD *)(v5 + 732) = v140;
            *(_OWORD *)(v5 + 748) = v141;
            __int128 v143 = *(_OWORD *)(v133 + 796);
            __int128 v144 = *(_OWORD *)(v133 + 812);
            __int128 v145 = *(_OWORD *)(v133 + 828);
            *(_OWORD *)(v5 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v133 + 840);
            *(_OWORD *)(v5 + 812) = v144;
            *(_OWORD *)(v5 + 828) = v145;
            *(_OWORD *)(v5 + 796) = v143;
            __int128 v146 = v296;
            *(_OWORD *)(v133 + 796) = v295;
            *(_OWORD *)(v133 + 812) = v146;
            *(_OWORD *)(v133 + 828) = v297[0];
            *(_OWORD *)(v133 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)v297 + 12);
            __int128 v147 = v292;
            *(_OWORD *)(v133 + 732) = v291;
            *(_OWORD *)(v133 + 748) = v147;
            __int128 v148 = v294;
            *(_OWORD *)(v133 + 764) = v293;
            *(_OWORD *)(v133 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v148;
            __int128 v149 = v290;
            *(_OWORD *)(v133 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v289;
            *(_OWORD *)(v133 + 716) = v149;
            LOBYTE(v134) = *(_BYTE *)(v5 + 856);
            *(_BYTE *)(v5 + 856) = *(_BYTE *)(v133 + 856);
            *(_BYTE *)(v133 + 856) = v134;
            do
              v5 += 864LL;
            while (!sub_100452AD8((uint64_t)&v237, v5));
            do
              v133 -= 864LL;
            while ((sub_100452AD8((uint64_t)&v237, v133) & 1) != 0);
          }

          if (v5 - 864 != a1) {
            sub_100454630(a1, v5 - 864);
          }
          sub_100454630(v5 - 864, (uint64_t)&v237);
          if (SHIBYTE(v254) < 0) {
            operator delete((void *)__p);
          }
          if (*(void *)&v241[8])
          {
            *(void *)&v241[16] = *(void *)&v241[8];
            operator delete(*(void **)&v241[8]);
          }

          a4 = 0;
          continue;
        }

        uint64_t v31 = 0LL;
        __int128 v237 = *(_OWORD *)a1;
        __int128 v32 = *(_OWORD *)(a1 + 16);
        __int128 v33 = *(_OWORD *)(a1 + 32);
        __int128 v34 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)&v240[12] = *(_OWORD *)(a1 + 60);
        *(_DWORD *)uint64_t v241 = *(_DWORD *)(a1 + 80);
        __int128 v35 = *(_OWORD *)(a1 + 88);
        *(void *)&v241[24] = *(void *)(a1 + 104);
        __int128 v239 = v33;
        *(_OWORD *)uint64_t v240 = v34;
        __int128 v238 = v32;
        *(_OWORD *)&v241[8] = v35;
        *(void *)(a1 + 96) = 0LL;
        *(void *)(a1 + 104) = 0LL;
        *(void *)(a1 + 88) = 0LL;
        __int128 v242 = *(_OWORD *)(a1 + 112);
        __int128 v36 = *(_OWORD *)(a1 + 128);
        __int128 v37 = *(_OWORD *)(a1 + 144);
        __int128 v38 = *(_OWORD *)(a1 + 176);
        __int128 v244 = *(_OWORD *)(a1 + 160);
        __int128 v245 = v38;
        v243[0] = v36;
        v243[1] = v37;
        __int128 v39 = *(_OWORD *)(a1 + 192);
        __int128 v40 = *(_OWORD *)(a1 + 208);
        __int128 v41 = *(_OWORD *)(a1 + 240);
        __int128 v248 = *(_OWORD *)(a1 + 224);
        __int128 v249 = v41;
        __int128 v246 = v39;
        __int128 v247 = v40;
        __int128 v42 = *(_OWORD *)(a1 + 256);
        __int128 v43 = *(_OWORD *)(a1 + 272);
        __int128 v44 = *(_OWORD *)(a1 + 288);
        *(_OWORD *)((char *)v252 + 12) = *(_OWORD *)(a1 + 300);
        __int128 v251 = v43;
        v252[0] = v44;
        __int128 v250 = v42;
        __int128 v45 = *(_OWORD *)(a1 + 320);
        uint64_t v254 = *(void *)(a1 + 336);
        __int128 __p = v45;
        *(void *)(a1 + 328) = 0LL;
        *(void *)(a1 + 336) = 0LL;
        *(void *)(a1 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
        __int128 v46 = *(_OWORD *)(a1 + 440);
        __int128 v48 = *(_OWORD *)(a1 + 392);
        __int128 v47 = *(_OWORD *)(a1 + 408);
        __int128 v260 = *(_OWORD *)(a1 + 424);
        __int128 v261 = v46;
        __int128 v258 = v48;
        __int128 v259 = v47;
        __int128 v49 = *(_OWORD *)(a1 + 344);
        __int128 v50 = *(_OWORD *)(a1 + 376);
        __int128 v256 = *(_OWORD *)(a1 + 360);
        __int128 v257 = v50;
        __int128 v255 = v49;
        __int128 v52 = *(_OWORD *)(a1 + 472);
        __int128 v51 = *(_OWORD *)(a1 + 488);
        __int128 v53 = *(_OWORD *)(a1 + 456);
        int v265 = *(_DWORD *)(a1 + 504);
        __int128 v263 = v52;
        __int128 v264 = v51;
        __int128 v262 = v53;
        __int128 v54 = *(_OWORD *)(a1 + 512);
        __int128 v55 = *(_OWORD *)(a1 + 528);
        __int128 v56 = *(_OWORD *)(a1 + 560);
        __int128 v268 = *(_OWORD *)(a1 + 544);
        __int128 v269 = v56;
        __int128 v266 = v54;
        __int128 v267 = v55;
        __int128 v57 = *(_OWORD *)(a1 + 576);
        __int128 v58 = *(_OWORD *)(a1 + 592);
        __int128 v59 = *(_OWORD *)(a1 + 624);
        __int128 v272 = *(_OWORD *)(a1 + 608);
        __int128 v273 = v59;
        __int128 v270 = v57;
        __int128 v271 = v58;
        __int128 v60 = *(_OWORD *)(a1 + 640);
        __int128 v61 = *(_OWORD *)(a1 + 656);
        __int128 v62 = *(_OWORD *)(a1 + 672);
        int v277 = *(_DWORD *)(a1 + 688);
        __int128 v275 = v61;
        __int128 v276 = v62;
        __int128 v274 = v60;
        int v278 = *(_DWORD *)(a1 + 696);
        __int128 v63 = *(_OWORD *)(a1 + 716);
        __int128 v279 = *(_OWORD *)(a1 + 700);
        __int128 v280 = v63;
        __int128 v64 = *(_OWORD *)(a1 + 780);
        __int128 v66 = *(_OWORD *)(a1 + 732);
        __int128 v65 = *(_OWORD *)(a1 + 748);
        __int128 v283 = *(_OWORD *)(a1 + 764);
        __int128 v284 = v64;
        __int128 v281 = v66;
        __int128 v282 = v65;
        __int128 v68 = *(_OWORD *)(a1 + 812);
        __int128 v67 = *(_OWORD *)(a1 + 828);
        __int128 v69 = *(_OWORD *)(a1 + 796);
        *(_OWORD *)&v287[12] = *(_OWORD *)(a1 + 840);
        __int128 v286 = v68;
        *(_OWORD *)uint64_t v287 = v67;
        __int128 v285 = v69;
        char v288 = *(_BYTE *)(a1 + 856);
        do
        {
          char v70 = sub_100452AD8(a1 + v31 + 864, (uint64_t)&v237);
          v31 += 864LL;
        }

        while ((v70 & 1) != 0);
        unint64_t v71 = a1 + v31;
        unint64_t v72 = a2;
        if (v31 == 864)
        {
          unint64_t v72 = a2;
          do
          {
            if (v71 >= v72) {
              break;
            }
            v72 -= 864LL;
          }

          while ((sub_100452AD8(v72, (uint64_t)&v237) & 1) == 0);
        }

        else
        {
          do
            v72 -= 864LL;
          while (!sub_100452AD8(v72, (uint64_t)&v237));
        }

        if (v71 >= v72)
        {
          uint64_t v91 = v71 - 864;
        }

        else
        {
          unint64_t v73 = a1 + v31;
          unint64_t v74 = v72;
          do
          {
            sub_100453F9C((__int128 *)v73, (__int128 *)v74);
            int v75 = *(_DWORD *)(v73 + 696);
            *(_DWORD *)(v73 + 696) = *(_DWORD *)(v74 + 696);
            *(_DWORD *)(v74 + 696) = v75;
            __int128 v76 = *(_OWORD *)(v73 + 812);
            __int128 v295 = *(_OWORD *)(v73 + 796);
            __int128 v296 = v76;
            v297[0] = *(_OWORD *)(v73 + 828);
            *(_OWORD *)((char *)v297 + 12) = *(_OWORD *)(v73 + 840);
            __int128 v77 = *(_OWORD *)(v73 + 748);
            __int128 v291 = *(_OWORD *)(v73 + 732);
            __int128 v292 = v77;
            __int128 v78 = *(_OWORD *)(v73 + 780);
            __int128 v293 = *(_OWORD *)(v73 + 764);
            __int128 v294 = v78;
            __int128 v79 = *(_OWORD *)(v73 + 716);
            __int128 v289 = *(_OWORD *)(v73 + 700);
            __int128 v290 = v79;
            __int128 v80 = *(_OWORD *)(v74 + 716);
            *(_OWORD *)(v73 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v74 + 700);
            *(_OWORD *)(v73 + 716) = v80;
            __int128 v81 = *(_OWORD *)(v74 + 732);
            __int128 v82 = *(_OWORD *)(v74 + 748);
            __int128 v83 = *(_OWORD *)(v74 + 780);
            *(_OWORD *)(v73 + 764) = *(_OWORD *)(v74 + 764);
            *(_OWORD *)(v73 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v83;
            *(_OWORD *)(v73 + 732) = v81;
            *(_OWORD *)(v73 + 748) = v82;
            __int128 v84 = *(_OWORD *)(v74 + 796);
            __int128 v85 = *(_OWORD *)(v74 + 812);
            __int128 v86 = *(_OWORD *)(v74 + 828);
            *(_OWORD *)(v73 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v74 + 840);
            *(_OWORD *)(v73 + 812) = v85;
            *(_OWORD *)(v73 + 828) = v86;
            *(_OWORD *)(v73 + 796) = v84;
            __int128 v87 = v296;
            *(_OWORD *)(v74 + 796) = v295;
            *(_OWORD *)(v74 + 812) = v87;
            *(_OWORD *)(v74 + 828) = v297[0];
            *(_OWORD *)(v74 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)v297 + 12);
            __int128 v88 = v292;
            *(_OWORD *)(v74 + 732) = v291;
            *(_OWORD *)(v74 + 748) = v88;
            __int128 v89 = v294;
            *(_OWORD *)(v74 + 764) = v293;
            *(_OWORD *)(v74 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v89;
            __int128 v90 = v290;
            *(_OWORD *)(v74 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v289;
            *(_OWORD *)(v74 + 716) = v90;
            LOBYTE(v75) = *(_BYTE *)(v73 + 856);
            *(_BYTE *)(v73 + 856) = *(_BYTE *)(v74 + 856);
            *(_BYTE *)(v74 + 856) = v75;
            do
              v73 += 864LL;
            while ((sub_100452AD8(v73, (uint64_t)&v237) & 1) != 0);
            do
              v74 -= 864LL;
            while (!sub_100452AD8(v74, (uint64_t)&v237));
          }

          while (v73 < v74);
          uint64_t v91 = v73 - 864;
        }

        if (v91 != a1) {
          sub_100454630(a1, v91);
        }
        sub_100454630(v91, (uint64_t)&v237);
        if (SHIBYTE(v254) < 0) {
          operator delete((void *)__p);
        }
        if (*(void *)&v241[8])
        {
          *(void *)&v241[16] = *(void *)&v241[8];
          operator delete(*(void **)&v241[8]);
        }

        if (v71 < v72)
        {
LABEL_35:
          sub_100451BF0(a1, v91, a3, a4 & 1);
          a4 = 0;
          unint64_t v5 = v91 + 864;
          continue;
        }

        BOOL v92 = sub_100453B50(a1, v91);
        unint64_t v5 = v91 + 864;
        if (!sub_100453B50(v91 + 864, a2))
        {
          if (v92) {
            continue;
          }
          goto LABEL_35;
        }

        a2 = v91;
        if (!v92) {
          goto LABEL_1;
        }
        return;
    }
  }

void sub_100452A7C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, void *a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *__p,uint64_t a58,int a59,__int16 a60,char a61,char a62)
{
  if (a62 < 0) {
    operator delete(__p);
  }
  if (a28) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100452AD8(uint64_t result, uint64_t a2)
{
  double v2 = *(double *)(result + 720);
  double v3 = *(double *)(a2 + 720);
  if (v2 >= 0.0 && v3 < 0.0) {
    return 0LL;
  }
  if (v2 < 0.0 && v3 >= 0.0) {
    return 1LL;
  }
  if (v2 >= 0.0 != v3 >= 0.0)
  {
LABEL_51:
    uint64_t result = sub_101239DB0(result);
    goto LABEL_52;
  }

  int v4 = *(_DWORD *)(result + 796);
  int v5 = *(_DWORD *)(a2 + 796);
  if (v4 == 6 && v5 != 6) {
    return 0LL;
  }
  if (v4 != 6 && v5 == 6) {
    return 1LL;
  }
  if (v4 != v5)
  {
LABEL_52:
    uint64_t result = sub_10123A1DC(result);
    goto LABEL_53;
  }

  unsigned int v7 = *(_DWORD *)(result + 8);
  if (v7 <= 9 && ((1 << v7) & 0x287) != 0 || v7 - 3 <= 2)
  {
    unsigned int v8 = *(_DWORD *)(a2 + 8);
    if ((v8 > 9 || ((1 << v8) & 0x287) == 0) && v8 - 3 > 2) {
      return 0LL;
    }
  }

  if (v7 < 0xA && ((0x287u >> v7) & 1) != 0)
  {
    int v11 = 1;
LABEL_35:
    unsigned int v12 = *(_DWORD *)(a2 + 8);
    if (v12 <= 9 && ((1 << v12) & 0x287) != 0)
    {
      if ((v11 & 1) != 0)
      {
LABEL_38:
        if (v7 == 6)
        {
          if (v12 != 6) {
            return 0LL;
          }
LABEL_42:
          if ((v7 == 6) == (v12 == 6))
          {
            if (v2 >= v3) {
              return v2 > v3;
            }
            return 0LL;
          }

double sub_100452CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_100452AD8(a5, a4))
  {
    sub_100453F9C((__int128 *)a4, (__int128 *)a5);
    int v11 = *(_DWORD *)(a4 + 696);
    *(_DWORD *)(a4 + 696) = *(_DWORD *)(a5 + 696);
    *(_DWORD *)(a5 + 696) = v11;
    unsigned int v12 = (_OWORD *)(a4 + 700);
    __int128 v70 = *(_OWORD *)(a4 + 796);
    __int128 v74 = *(_OWORD *)(a4 + 812);
    *(_OWORD *)__int128 v78 = *(_OWORD *)(a4 + 828);
    *(_OWORD *)&v78[12] = *(_OWORD *)(a4 + 840);
    __int128 v54 = *(_OWORD *)(a4 + 732);
    __int128 v58 = *(_OWORD *)(a4 + 748);
    __int128 v62 = *(_OWORD *)(a4 + 764);
    __int128 v66 = *(_OWORD *)(a4 + 780);
    __int128 v46 = *(_OWORD *)(a4 + 700);
    __int128 v50 = *(_OWORD *)(a4 + 716);
    __int128 v13 = *(_OWORD *)(a5 + 716);
    *(_OWORD *)(a4 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a5 + 700);
    *(_OWORD *)(a4 + 716) = v13;
    __int128 v14 = *(_OWORD *)(a5 + 732);
    __int128 v15 = *(_OWORD *)(a5 + 748);
    __int128 v16 = *(_OWORD *)(a5 + 780);
    *(_OWORD *)(a4 + 764) = *(_OWORD *)(a5 + 764);
    *(_OWORD *)(a4 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v16;
    *(_OWORD *)(a4 + 732) = v14;
    *(_OWORD *)(a4 + 748) = v15;
    __int128 v17 = *(_OWORD *)(a5 + 796);
    __int128 v18 = *(_OWORD *)(a5 + 812);
    __int128 v19 = *(_OWORD *)(a5 + 828);
    *(_OWORD *)(a4 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a5 + 840);
    *(_OWORD *)(a4 + 812) = v18;
    *(_OWORD *)(a4 + 828) = v19;
    *(_OWORD *)(a4 + 796) = v17;
    *(_OWORD *)(a5 + 796) = v70;
    *(_OWORD *)(a5 + 812) = v74;
    *(_OWORD *)(a5 + 828) = *(_OWORD *)v78;
    *(_OWORD *)(a5 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v78[12];
    *(_OWORD *)(a5 + 732) = v54;
    *(_OWORD *)(a5 + 748) = v58;
    *(_OWORD *)(a5 + 764) = v62;
    *(_OWORD *)(a5 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v66;
    *(_OWORD *)(a5 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v46;
    *(_OWORD *)(a5 + 716) = v50;
    LOBYTE(v11) = *(_BYTE *)(a4 + 856);
    *(_BYTE *)(a4 + 856) = *(_BYTE *)(a5 + 856);
    *(_BYTE *)(a5 + 856) = v11;
    if (sub_100452AD8(a4, a3))
    {
      sub_100453F9C((__int128 *)a3, (__int128 *)a4);
      int v20 = *(_DWORD *)(a3 + 696);
      *(_DWORD *)(a3 + 696) = *(_DWORD *)(a4 + 696);
      *(_DWORD *)(a4 + 696) = v20;
      __int128 v21 = (_OWORD *)(a3 + 700);
      __int128 v71 = *(_OWORD *)(a3 + 796);
      __int128 v75 = *(_OWORD *)(a3 + 812);
      *(_OWORD *)__int128 v79 = *(_OWORD *)(a3 + 828);
      *(_OWORD *)&v79[12] = *(_OWORD *)(a3 + 840);
      __int128 v55 = *(_OWORD *)(a3 + 732);
      __int128 v59 = *(_OWORD *)(a3 + 748);
      __int128 v63 = *(_OWORD *)(a3 + 764);
      __int128 v67 = *(_OWORD *)(a3 + 780);
      __int128 v47 = *(_OWORD *)(a3 + 700);
      __int128 v51 = *(_OWORD *)(a3 + 716);
      __int128 v22 = *(_OWORD *)(a4 + 716);
      *(_OWORD *)(a3 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *v12;
      *(_OWORD *)(a3 + 716) = v22;
      __int128 v23 = *(_OWORD *)(a4 + 732);
      __int128 v24 = *(_OWORD *)(a4 + 748);
      __int128 v25 = *(_OWORD *)(a4 + 780);
      *(_OWORD *)(a3 + 764) = *(_OWORD *)(a4 + 764);
      *(_OWORD *)(a3 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v25;
      *(_OWORD *)(a3 + 732) = v23;
      *(_OWORD *)(a3 + 748) = v24;
      __int128 v26 = *(_OWORD *)(a4 + 796);
      __int128 v27 = *(_OWORD *)(a4 + 812);
      __int128 v28 = *(_OWORD *)(a4 + 828);
      *(_OWORD *)(a3 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a4 + 840);
      *(_OWORD *)(a3 + 812) = v27;
      *(_OWORD *)(a3 + 828) = v28;
      *(_OWORD *)(a3 + 796) = v26;
      *(_OWORD *)(a4 + 796) = v71;
      *(_OWORD *)(a4 + 812) = v75;
      *(_OWORD *)(a4 + 828) = *(_OWORD *)v79;
      *(_OWORD *)(a4 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v79[12];
      *(_OWORD *)(a4 + 732) = v55;
      *(_OWORD *)(a4 + 748) = v59;
      *(_OWORD *)(a4 + 764) = v63;
      *(_OWORD *)(a4 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v67;
      _OWORD *v12 = v47;
      *(_OWORD *)(a4 + 716) = v51;
      LOBYTE(v2sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_BYTE *)(a3 + 856);
      *(_BYTE *)(a3 + 856) = *(_BYTE *)(a4 + 856);
      *(_BYTE *)(a4 + 856) = v20;
      if (sub_100452AD8(a3, a2))
      {
        sub_100453F9C((__int128 *)a2, (__int128 *)a3);
        int v29 = *(_DWORD *)(a2 + 696);
        *(_DWORD *)(a2 + 696) = *(_DWORD *)(a3 + 696);
        *(_DWORD *)(a3 + 696) = v29;
        __int128 v30 = (_OWORD *)(a2 + 700);
        __int128 v72 = *(_OWORD *)(a2 + 796);
        __int128 v76 = *(_OWORD *)(a2 + 812);
        *(_OWORD *)__int128 v80 = *(_OWORD *)(a2 + 828);
        *(_OWORD *)&v80[12] = *(_OWORD *)(a2 + 840);
        __int128 v56 = *(_OWORD *)(a2 + 732);
        __int128 v60 = *(_OWORD *)(a2 + 748);
        __int128 v64 = *(_OWORD *)(a2 + 764);
        __int128 v68 = *(_OWORD *)(a2 + 780);
        __int128 v48 = *(_OWORD *)(a2 + 700);
        __int128 v52 = *(_OWORD *)(a2 + 716);
        __int128 v31 = *(_OWORD *)(a3 + 716);
        *(_OWORD *)(a2 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *v21;
        *(_OWORD *)(a2 + 716) = v31;
        __int128 v32 = *(_OWORD *)(a3 + 732);
        __int128 v33 = *(_OWORD *)(a3 + 748);
        __int128 v34 = *(_OWORD *)(a3 + 780);
        *(_OWORD *)(a2 + 764) = *(_OWORD *)(a3 + 764);
        *(_OWORD *)(a2 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v34;
        *(_OWORD *)(a2 + 732) = v32;
        *(_OWORD *)(a2 + 748) = v33;
        __int128 v35 = *(_OWORD *)(a3 + 796);
        __int128 v36 = *(_OWORD *)(a3 + 812);
        __int128 v37 = *(_OWORD *)(a3 + 828);
        *(_OWORD *)(a2 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a3 + 840);
        *(_OWORD *)(a2 + 812) = v36;
        *(_OWORD *)(a2 + 828) = v37;
        *(_OWORD *)(a2 + 796) = v35;
        *(_OWORD *)(a3 + 796) = v72;
        *(_OWORD *)(a3 + 812) = v76;
        *(_OWORD *)(a3 + 828) = *(_OWORD *)v80;
        *(_OWORD *)(a3 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v80[12];
        *(_OWORD *)(a3 + 732) = v56;
        *(_OWORD *)(a3 + 748) = v60;
        *(_OWORD *)(a3 + 764) = v64;
        *(_OWORD *)(a3 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v68;
        *__int128 v21 = v48;
        *(_OWORD *)(a3 + 716) = v52;
        LOBYTE(v29) = *(_BYTE *)(a2 + 856);
        *(_BYTE *)(a2 + 856) = *(_BYTE *)(a3 + 856);
        *(_BYTE *)(a3 + 856) = v29;
        if (sub_100452AD8(a2, a1))
        {
          sub_100453F9C((__int128 *)a1, (__int128 *)a2);
          int v38 = *(_DWORD *)(a1 + 696);
          *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
          *(_DWORD *)(a2 + 696) = v38;
          __int128 v73 = *(_OWORD *)(a1 + 796);
          __int128 v77 = *(_OWORD *)(a1 + 812);
          *(_OWORD *)__int128 v81 = *(_OWORD *)(a1 + 828);
          *(_OWORD *)&v81[12] = *(_OWORD *)(a1 + 840);
          __int128 v57 = *(_OWORD *)(a1 + 732);
          __int128 v61 = *(_OWORD *)(a1 + 748);
          __int128 v65 = *(_OWORD *)(a1 + 764);
          __int128 v69 = *(_OWORD *)(a1 + 780);
          __int128 v49 = *(_OWORD *)(a1 + 700);
          __int128 v53 = *(_OWORD *)(a1 + 716);
          __int128 v39 = *(_OWORD *)(a2 + 716);
          *(_OWORD *)(a1 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *v30;
          *(_OWORD *)(a1 + 716) = v39;
          __int128 v40 = *(_OWORD *)(a2 + 732);
          __int128 v41 = *(_OWORD *)(a2 + 748);
          __int128 v42 = *(_OWORD *)(a2 + 780);
          *(_OWORD *)(a1 + 764) = *(_OWORD *)(a2 + 764);
          *(_OWORD *)(a1 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v42;
          *(_OWORD *)(a1 + 732) = v40;
          *(_OWORD *)(a1 + 748) = v41;
          __int128 v43 = *(_OWORD *)(a2 + 796);
          __int128 v44 = *(_OWORD *)(a2 + 812);
          __int128 v45 = *(_OWORD *)(a2 + 828);
          *(_OWORD *)(a1 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 840);
          *(_OWORD *)(a1 + 812) = v44;
          *(_OWORD *)(a1 + 828) = v45;
          *(_OWORD *)(a1 + 796) = v43;
          *(_OWORD *)(a2 + 796) = v73;
          *(_OWORD *)(a2 + 812) = v77;
          *(_OWORD *)(a2 + 828) = *(_OWORD *)v81;
          *(_OWORD *)(a2 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v81[12];
          *(_OWORD *)(a2 + 732) = v57;
          *(_OWORD *)(a2 + 748) = v61;
          *(_OWORD *)(a2 + 764) = v65;
          *(_OWORD *)(a2 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v69;
          double result = *(double *)&v49;
          _OWORD *v30 = v49;
          *(_OWORD *)(a2 + 716) = v53;
          LOBYTE(v38) = *(_BYTE *)(a1 + 856);
          *(_BYTE *)(a1 + 856) = *(_BYTE *)(a2 + 856);
          *(_BYTE *)(a2 + 856) = v38;
        }
      }
    }
  }

  return result;
}

void sub_10045305C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v4 = a2;
    uint64_t v6 = a2 - a1;
    uint64_t v7 = (a2 - a1) / 864;
    if (a2 - a1 >= 865)
    {
      unint64_t v8 = (unint64_t)(v7 - 2) >> 1;
      unint64_t v9 = v8 + 1;
      uint64_t v10 = a1 + 864 * v8;
      do
      {
        sub_1004547C0(a1, v7, v10);
        v10 -= 864LL;
        --v9;
      }

      while (v9);
    }

    if (v4 != a3)
    {
      int v11 = (_OWORD *)(a1 + 700);
      uint64_t v12 = v4;
      do
      {
        if (sub_100452AD8(v12, a1))
        {
          sub_100453F9C((__int128 *)v12, (__int128 *)a1);
          int v13 = *(_DWORD *)(v12 + 696);
          *(_DWORD *)(v12 + 696) = *(_DWORD *)(a1 + 696);
          *(_DWORD *)(a1 + 696) = v13;
          __int128 v14 = *(_OWORD *)(v12 + 812);
          *(_OWORD *)&v159[16] = *(_OWORD *)(v12 + 796);
          __int128 v160 = v14;
          v161[0] = *(_OWORD *)(v12 + 828);
          *(_OWORD *)((char *)v161 + 12) = *(_OWORD *)(v12 + 840);
          __int128 v15 = *(_OWORD *)(v12 + 732);
          *(_OWORD *)__int128 v158 = *(_OWORD *)(v12 + 748);
          __int128 v16 = *(_OWORD *)(v12 + 780);
          *(_OWORD *)&v158[16] = *(_OWORD *)(v12 + 764);
          *(_OWORD *)__int128 v159 = v16;
          __int128 v17 = *(_OWORD *)(v12 + 716);
          __int128 v155 = *(_OWORD *)(v12 + 700);
          __int128 v156 = v17;
          __int128 v157 = v15;
          __int128 v18 = *(_OWORD *)(a1 + 716);
          *(_OWORD *)(v12 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *v11;
          *(_OWORD *)(v12 + 716) = v18;
          __int128 v19 = *(_OWORD *)(a1 + 732);
          __int128 v20 = *(_OWORD *)(a1 + 748);
          __int128 v21 = *(_OWORD *)(a1 + 780);
          *(_OWORD *)(v12 + 764) = *(_OWORD *)(a1 + 764);
          *(_OWORD *)(v12 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v21;
          *(_OWORD *)(v12 + 732) = v19;
          *(_OWORD *)(v12 + 748) = v20;
          __int128 v22 = *(_OWORD *)(a1 + 796);
          __int128 v23 = *(_OWORD *)(a1 + 812);
          __int128 v24 = *(_OWORD *)(a1 + 828);
          *(_OWORD *)(v12 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a1 + 840);
          *(_OWORD *)(v12 + 812) = v23;
          *(_OWORD *)(v12 + 828) = v24;
          *(_OWORD *)(v12 + 796) = v22;
          __int128 v25 = v160;
          *(_OWORD *)(a1 + 796) = *(_OWORD *)&v159[16];
          *(_OWORD *)(a1 + 812) = v25;
          *(_OWORD *)(a1 + 828) = v161[0];
          *(_OWORD *)(a1 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)v161 + 12);
          __int128 v26 = *(_OWORD *)v158;
          *(_OWORD *)(a1 + 732) = v157;
          *(_OWORD *)(a1 + 748) = v26;
          __int128 v27 = *(_OWORD *)v159;
          *(_OWORD *)(a1 + 764) = *(_OWORD *)&v158[16];
          *(_OWORD *)(a1 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v27;
          __int128 v28 = v156;
          _OWORD *v11 = v155;
          *(_OWORD *)(a1 + 716) = v28;
          LOBYTE(v13) = *(_BYTE *)(v12 + 856);
          *(_BYTE *)(v12 + 856) = *(_BYTE *)(a1 + 856);
          *(_BYTE *)(a1 + 856) = v13;
          sub_1004547C0(a1, v7, a1);
        }

        v12 += 864LL;
      }

      while (v12 != a3);
    }

    if (v6 >= 865)
    {
      int64_t v29 = v6 / 0x360uLL;
      __int128 v100 = (__int128 *)(a1 + 320);
      do
      {
        uint64_t v101 = v4;
        uint64_t v30 = 0LL;
        __int128 v31 = *(_OWORD *)(a1 + 48);
        v102[2] = *(_OWORD *)(a1 + 32);
        v103[0] = v31;
        *(_OWORD *)((char *)v103 + 12) = *(_OWORD *)(a1 + 60);
        __int128 v32 = *(_OWORD *)(a1 + 16);
        v102[0] = *(_OWORD *)a1;
        v102[1] = v32;
        int v104 = *(_DWORD *)(a1 + 80);
        *(_OWORD *)__int128 v105 = *(_OWORD *)(a1 + 88);
        uint64_t v106 = *(void *)(a1 + 104);
        *(void *)(a1 + 96) = 0LL;
        *(void *)(a1 + 104) = 0LL;
        *(void *)(a1 + 88) = 0LL;
        __int128 v33 = *(_OWORD *)(a1 + 288);
        __int128 v117 = *(_OWORD *)(a1 + 272);
        v118[0] = v33;
        *(_OWORD *)((char *)v118 + 12) = *(_OWORD *)(a1 + 300);
        __int128 v34 = *(_OWORD *)(a1 + 224);
        __int128 v113 = *(_OWORD *)(a1 + 208);
        __int128 v114 = v34;
        __int128 v35 = *(_OWORD *)(a1 + 256);
        __int128 v115 = *(_OWORD *)(a1 + 240);
        __int128 v116 = v35;
        __int128 v36 = *(_OWORD *)(a1 + 160);
        __int128 v109 = *(_OWORD *)(a1 + 144);
        __int128 v110 = v36;
        __int128 v37 = *(_OWORD *)(a1 + 192);
        __int128 v111 = *(_OWORD *)(a1 + 176);
        __int128 v112 = v37;
        __int128 v38 = *(_OWORD *)(a1 + 128);
        __int128 v107 = *(_OWORD *)(a1 + 112);
        __int128 v108 = v38;
        __int128 v119 = *v100;
        uint64_t v120 = *(void *)(a1 + 336);
        *(void *)(a1 + 328) = 0LL;
        *(void *)(a1 + 336) = 0LL;
        *(void *)__int128 v100 = 0LL;
        __int128 v39 = *(_OWORD *)(a1 + 488);
        __int128 v129 = *(_OWORD *)(a1 + 472);
        __int128 v130 = v39;
        int v131 = *(_DWORD *)(a1 + 504);
        __int128 v40 = *(_OWORD *)(a1 + 424);
        __int128 v125 = *(_OWORD *)(a1 + 408);
        __int128 v126 = v40;
        __int128 v41 = *(_OWORD *)(a1 + 456);
        __int128 v127 = *(_OWORD *)(a1 + 440);
        __int128 v128 = v41;
        __int128 v42 = *(_OWORD *)(a1 + 360);
        __int128 v121 = *(_OWORD *)(a1 + 344);
        __int128 v122 = v42;
        __int128 v43 = *(_OWORD *)(a1 + 392);
        __int128 v123 = *(_OWORD *)(a1 + 376);
        __int128 v124 = v43;
        __int128 v44 = *(_OWORD *)(a1 + 656);
        __int128 v140 = *(_OWORD *)(a1 + 640);
        __int128 v141 = v44;
        __int128 v142 = *(_OWORD *)(a1 + 672);
        int v143 = *(_DWORD *)(a1 + 688);
        __int128 v45 = *(_OWORD *)(a1 + 592);
        __int128 v136 = *(_OWORD *)(a1 + 576);
        __int128 v137 = v45;
        __int128 v46 = *(_OWORD *)(a1 + 624);
        __int128 v138 = *(_OWORD *)(a1 + 608);
        __int128 v139 = v46;
        __int128 v47 = *(_OWORD *)(a1 + 528);
        __int128 v132 = *(_OWORD *)(a1 + 512);
        __int128 v133 = v47;
        __int128 v48 = *(_OWORD *)(a1 + 560);
        __int128 v134 = *(_OWORD *)(a1 + 544);
        __int128 v135 = v48;
        int v144 = *(_DWORD *)(a1 + 696);
        __int128 v49 = *(_OWORD *)(a1 + 812);
        __int128 v151 = *(_OWORD *)(a1 + 796);
        __int128 v152 = v49;
        *(_OWORD *)__int128 v153 = *(_OWORD *)(a1 + 828);
        *(_OWORD *)&v153[12] = *(_OWORD *)(a1 + 840);
        __int128 v50 = *(_OWORD *)(a1 + 748);
        __int128 v147 = *(_OWORD *)(a1 + 732);
        __int128 v148 = v50;
        __int128 v51 = *(_OWORD *)(a1 + 780);
        __int128 v149 = *(_OWORD *)(a1 + 764);
        __int128 v150 = v51;
        __int128 v52 = *(_OWORD *)(a1 + 700);
        __int128 v53 = *(_OWORD *)(a1 + 716);
        char v154 = *(_BYTE *)(a1 + 856);
        uint64_t v54 = a1;
        __int128 v145 = v52;
        __int128 v146 = v53;
        do
        {
          uint64_t v55 = v54 + 864 * v30 + 864;
          uint64_t v56 = (2 * v30) | 1;
          uint64_t v57 = 2 * v30 + 2;
          if (v57 < v29 && sub_100452AD8(v54 + 864 * v30 + 864, v54 + 864 * v30 + 1728))
          {
            v55 += 864LL;
            uint64_t v56 = v57;
          }

          sub_100454630(v54, v55);
          uint64_t v54 = v55;
          uint64_t v30 = v56;
        }

        while (v56 <= (uint64_t)((unint64_t)(v29 - 2) >> 1));
        uint64_t v4 = v101 - 864;
        if (v55 == v101 - 864)
        {
          sub_100454630(v55, (uint64_t)v102);
        }

        else
        {
          sub_100454630(v55, v101 - 864);
          sub_100454630(v4, (uint64_t)v102);
          uint64_t v58 = v55 - a1 + 864;
          if (v58 >= 865)
          {
            unint64_t v59 = (v58 / 0x360uLL - 2) >> 1;
            uint64_t v60 = a1 + 864 * v59;
            if (sub_100452AD8(v60, v55))
            {
              __int128 v155 = *(_OWORD *)v55;
              __int128 v61 = *(_OWORD *)(v55 + 16);
              __int128 v62 = *(_OWORD *)(v55 + 32);
              __int128 v63 = *(_OWORD *)(v55 + 48);
              *(_OWORD *)&v158[12] = *(_OWORD *)(v55 + 60);
              *(_OWORD *)__int128 v158 = v63;
              __int128 v156 = v61;
              __int128 v157 = v62;
              *(_DWORD *)__int128 v159 = *(_DWORD *)(v55 + 80);
              *(_OWORD *)&v159[8] = *(_OWORD *)(v55 + 88);
              *(void *)&v159[24] = *(void *)(v55 + 104);
              *(void *)(v55 + 96) = 0LL;
              *(void *)(v55 + 104) = 0LL;
              *(void *)(v55 + 88) = 0LL;
              __int128 v64 = *(_OWORD *)(v55 + 176);
              __int128 v66 = *(_OWORD *)(v55 + 128);
              __int128 v65 = *(_OWORD *)(v55 + 144);
              v161[2] = *(_OWORD *)(v55 + 160);
              v161[3] = v64;
              v161[0] = v66;
              v161[1] = v65;
              __int128 v67 = *(_OWORD *)(v55 + 240);
              __int128 v69 = *(_OWORD *)(v55 + 192);
              __int128 v68 = *(_OWORD *)(v55 + 208);
              v161[6] = *(_OWORD *)(v55 + 224);
              v161[7] = v67;
              v161[4] = v69;
              v161[5] = v68;
              __int128 v71 = *(_OWORD *)(v55 + 272);
              __int128 v70 = *(_OWORD *)(v55 + 288);
              __int128 v72 = *(_OWORD *)(v55 + 256);
              *(_OWORD *)((char *)v162 + 12) = *(_OWORD *)(v55 + 300);
              v161[9] = v71;
              v162[0] = v70;
              v161[8] = v72;
              __int128 v160 = *(_OWORD *)(v55 + 112);
              __int128 v73 = *(_OWORD *)(v55 + 320);
              uint64_t v164 = *(void *)(v55 + 336);
              __int128 __p = v73;
              *(void *)(v55 + 328) = 0LL;
              *(void *)(v55 + 336) = 0LL;
              *(void *)(v55 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
              __int128 v74 = *(_OWORD *)(v55 + 440);
              __int128 v76 = *(_OWORD *)(v55 + 392);
              __int128 v75 = *(_OWORD *)(v55 + 408);
              __int128 v170 = *(_OWORD *)(v55 + 424);
              __int128 v171 = v74;
              __int128 v168 = v76;
              __int128 v169 = v75;
              __int128 v77 = *(_OWORD *)(v55 + 344);
              __int128 v78 = *(_OWORD *)(v55 + 376);
              __int128 v166 = *(_OWORD *)(v55 + 360);
              __int128 v167 = v78;
              __int128 v165 = v77;
              __int128 v80 = *(_OWORD *)(v55 + 472);
              __int128 v79 = *(_OWORD *)(v55 + 488);
              __int128 v81 = *(_OWORD *)(v55 + 456);
              int v175 = *(_DWORD *)(v55 + 504);
              __int128 v173 = v80;
              __int128 v174 = v79;
              __int128 v172 = v81;
              __int128 v82 = *(_OWORD *)(v55 + 512);
              __int128 v83 = *(_OWORD *)(v55 + 528);
              __int128 v84 = *(_OWORD *)(v55 + 560);
              __int128 v178 = *(_OWORD *)(v55 + 544);
              __int128 v179 = v84;
              __int128 v176 = v82;
              __int128 v177 = v83;
              __int128 v85 = *(_OWORD *)(v55 + 576);
              __int128 v86 = *(_OWORD *)(v55 + 592);
              __int128 v87 = *(_OWORD *)(v55 + 624);
              __int128 v182 = *(_OWORD *)(v55 + 608);
              __int128 v183 = v87;
              __int128 v180 = v85;
              __int128 v181 = v86;
              __int128 v88 = *(_OWORD *)(v55 + 640);
              __int128 v89 = *(_OWORD *)(v55 + 656);
              __int128 v90 = *(_OWORD *)(v55 + 672);
              int v187 = *(_DWORD *)(v55 + 688);
              __int128 v185 = v89;
              __int128 v186 = v90;
              __int128 v184 = v88;
              int v188 = *(_DWORD *)(v55 + 696);
              __int128 v91 = *(_OWORD *)(v55 + 716);
              __int128 v189 = *(_OWORD *)(v55 + 700);
              __int128 v190 = v91;
              __int128 v92 = *(_OWORD *)(v55 + 732);
              __int128 v93 = *(_OWORD *)(v55 + 748);
              __int128 v94 = *(_OWORD *)(v55 + 780);
              __int128 v193 = *(_OWORD *)(v55 + 764);
              __int128 v194 = v94;
              __int128 v191 = v92;
              __int128 v192 = v93;
              __int128 v95 = *(_OWORD *)(v55 + 796);
              __int128 v96 = *(_OWORD *)(v55 + 812);
              __int128 v97 = *(_OWORD *)(v55 + 828);
              *(_OWORD *)&v197[12] = *(_OWORD *)(v55 + 840);
              __int128 v196 = v96;
              *(_OWORD *)__int128 v197 = v97;
              __int128 v195 = v95;
              char v198 = *(_BYTE *)(v55 + 856);
              do
              {
                uint64_t v98 = v60;
                sub_100454630(v55, v60);
                if (!v59) {
                  break;
                }
                unint64_t v59 = (v59 - 1) >> 1;
                uint64_t v60 = a1 + 864 * v59;
                uint64_t v55 = v98;
              }

              while ((sub_100452AD8(v60, (uint64_t)&v155) & 1) != 0);
              sub_100454630(v98, (uint64_t)&v155);
              if (SHIBYTE(v164) < 0) {
                operator delete((void *)__p);
              }
              if (*(void *)&v159[8])
              {
                *(void *)&v159[16] = *(void *)&v159[8];
                operator delete(*(void **)&v159[8]);
              }
            }
          }
        }

        if (SHIBYTE(v120) < 0) {
          operator delete((void *)v119);
        }
        if (v105[0])
        {
          v105[1] = v105[0];
          operator delete(v105[0]);
        }
      }

      while (v29-- > 2);
    }
  }

void sub_1004536D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, void *a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a70 < 0) {
    operator delete(__p);
  }
  if (a36) {
    operator delete(a36);
  }
  _Unwind_Resume(a1);
}

void sub_10045372C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = sub_100452AD8(a2, a1);
  int v7 = sub_100452AD8(a3, a2);
  if ((v6 & 1) != 0)
  {
    unint64_t v8 = (__int128 *)(a1 + 700);
    if (v7)
    {
      unint64_t v9 = (char *)(a1 + 856);
      sub_100453F9C((__int128 *)a1, (__int128 *)a3);
      int v10 = *(_DWORD *)(a1 + 696);
      *(_DWORD *)(a1 + 696) = *(_DWORD *)(a3 + 696);
      *(_DWORD *)(a3 + 696) = v10;
      int v11 = (_OWORD *)(a3 + 700);
      __int128 v79 = *(_OWORD *)(a1 + 796);
      __int128 v83 = *(_OWORD *)(a1 + 812);
      *(_OWORD *)__int128 v87 = *(_OWORD *)(a1 + 828);
      *(_OWORD *)&v87[12] = *(_OWORD *)(a1 + 840);
      __int128 v63 = *(_OWORD *)(a1 + 732);
      __int128 v67 = *(_OWORD *)(a1 + 748);
      __int128 v71 = *(_OWORD *)(a1 + 764);
      __int128 v75 = *(_OWORD *)(a1 + 780);
      __int128 v55 = *v8;
      __int128 v59 = *(_OWORD *)(a1 + 716);
      __int128 v12 = *(_OWORD *)(a3 + 716);
      *unint64_t v8 = *(_OWORD *)(a3 + 700);
      *(_OWORD *)(a1 + 716) = v12;
      __int128 v13 = *(_OWORD *)(a3 + 732);
      __int128 v14 = *(_OWORD *)(a3 + 748);
      __int128 v15 = *(_OWORD *)(a3 + 780);
      *(_OWORD *)(a1 + 764) = *(_OWORD *)(a3 + 764);
      *(_OWORD *)(a1 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v15;
      *(_OWORD *)(a1 + 732) = v13;
      *(_OWORD *)(a1 + 748) = v14;
      __int128 v16 = *(_OWORD *)(a3 + 796);
      __int128 v17 = *(_OWORD *)(a3 + 812);
      __int128 v18 = *(_OWORD *)(a3 + 828);
      *(_OWORD *)(a1 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a3 + 840);
      *(_OWORD *)(a1 + 812) = v17;
      *(_OWORD *)(a1 + 828) = v18;
      *(_OWORD *)(a1 + 796) = v16;
    }

    else
    {
      sub_100453F9C((__int128 *)a1, (__int128 *)a2);
      int v37 = *(_DWORD *)(a1 + 696);
      *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
      *(_DWORD *)(a2 + 696) = v37;
      __int128 v38 = (__int128 *)(a2 + 700);
      __int128 v82 = *(_OWORD *)(a1 + 796);
      __int128 v86 = *(_OWORD *)(a1 + 812);
      *(_OWORD *)__int128 v90 = *(_OWORD *)(a1 + 828);
      *(_OWORD *)&v90[12] = *(_OWORD *)(a1 + 840);
      __int128 v66 = *(_OWORD *)(a1 + 732);
      __int128 v70 = *(_OWORD *)(a1 + 748);
      __int128 v74 = *(_OWORD *)(a1 + 764);
      __int128 v78 = *(_OWORD *)(a1 + 780);
      __int128 v58 = *v8;
      __int128 v62 = *(_OWORD *)(a1 + 716);
      __int128 v39 = *(_OWORD *)(a2 + 716);
      *unint64_t v8 = *(_OWORD *)(a2 + 700);
      *(_OWORD *)(a1 + 716) = v39;
      __int128 v40 = *(_OWORD *)(a2 + 732);
      __int128 v41 = *(_OWORD *)(a2 + 748);
      __int128 v42 = *(_OWORD *)(a2 + 780);
      *(_OWORD *)(a1 + 764) = *(_OWORD *)(a2 + 764);
      *(_OWORD *)(a1 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v42;
      *(_OWORD *)(a1 + 732) = v40;
      *(_OWORD *)(a1 + 748) = v41;
      __int128 v43 = *(_OWORD *)(a2 + 796);
      __int128 v44 = *(_OWORD *)(a2 + 812);
      __int128 v45 = *(_OWORD *)(a2 + 828);
      *(_OWORD *)(a1 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 840);
      *(_OWORD *)(a1 + 812) = v44;
      *(_OWORD *)(a1 + 828) = v45;
      *(_OWORD *)(a1 + 796) = v43;
      *(_OWORD *)(a2 + 796) = v82;
      *(_OWORD *)(a2 + 812) = v86;
      *(_OWORD *)(a2 + 828) = *(_OWORD *)v90;
      *(_OWORD *)(a2 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v90[12];
      *(_OWORD *)(a2 + 732) = v66;
      *(_OWORD *)(a2 + 748) = v70;
      *(_OWORD *)(a2 + 764) = v74;
      *(_OWORD *)(a2 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v78;
      *(_OWORD *)(a2 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v58;
      *(_OWORD *)(a2 + 716) = v62;
      LOBYTE(v37) = *(_BYTE *)(a1 + 856);
      *(_BYTE *)(a1 + 856) = *(_BYTE *)(a2 + 856);
      *(_BYTE *)(a2 + 856) = v37;
      unint64_t v9 = (char *)(a2 + 856);
      sub_100453F9C((__int128 *)a2, (__int128 *)a3);
      int v46 = *(_DWORD *)(a2 + 696);
      *(_DWORD *)(a2 + 696) = *(_DWORD *)(a3 + 696);
      *(_DWORD *)(a3 + 696) = v46;
      int v11 = (_OWORD *)(a3 + 700);
      __int128 v79 = *(_OWORD *)(a2 + 796);
      __int128 v83 = *(_OWORD *)(a2 + 812);
      *(_OWORD *)__int128 v87 = *(_OWORD *)(a2 + 828);
      *(_OWORD *)&v87[12] = *(_OWORD *)(a2 + 840);
      __int128 v63 = *(_OWORD *)(a2 + 732);
      __int128 v67 = *(_OWORD *)(a2 + 748);
      __int128 v71 = *(_OWORD *)(a2 + 764);
      __int128 v75 = *(_OWORD *)(a2 + 780);
      __int128 v55 = *v38;
      __int128 v59 = *(_OWORD *)(a2 + 716);
      __int128 v47 = *(_OWORD *)(a3 + 716);
      __int128 *v38 = *(_OWORD *)(a3 + 700);
      *(_OWORD *)(a2 + 716) = v47;
      __int128 v48 = *(_OWORD *)(a3 + 732);
      __int128 v49 = *(_OWORD *)(a3 + 748);
      __int128 v50 = *(_OWORD *)(a3 + 780);
      *(_OWORD *)(a2 + 764) = *(_OWORD *)(a3 + 764);
      *(_OWORD *)(a2 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v50;
      *(_OWORD *)(a2 + 732) = v48;
      *(_OWORD *)(a2 + 748) = v49;
      __int128 v51 = *(_OWORD *)(a3 + 796);
      __int128 v52 = *(_OWORD *)(a3 + 812);
      __int128 v53 = *(_OWORD *)(a3 + 828);
      *(_OWORD *)(a2 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a3 + 840);
      *(_OWORD *)(a2 + 812) = v52;
      *(_OWORD *)(a2 + 828) = v53;
      *(_OWORD *)(a2 + 796) = v51;
    }

    v11[6] = v79;
    void v11[7] = v83;
    v11[8] = *(_OWORD *)v87;
    *(_OWORD *)((char *)v11 + 14sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v87[12];
    _DWORD v11[2] = v63;
    v11[3] = v67;
    _DWORD v11[4] = v71;
    v11[5] = v75;
    __int128 v28 = (char *)(a3 + 856);
    _OWORD *v11 = v55;
    v11[1] = v59;
    goto LABEL_10;
  }

  if (v7)
  {
    sub_100453F9C((__int128 *)a2, (__int128 *)a3);
    int v19 = *(_DWORD *)(a2 + 696);
    *(_DWORD *)(a2 + 696) = *(_DWORD *)(a3 + 696);
    *(_DWORD *)(a3 + 696) = v19;
    __int128 v20 = (_OWORD *)(a2 + 700);
    __int128 v80 = *(_OWORD *)(a2 + 796);
    __int128 v84 = *(_OWORD *)(a2 + 812);
    *(_OWORD *)__int128 v88 = *(_OWORD *)(a2 + 828);
    *(_OWORD *)&v88[12] = *(_OWORD *)(a2 + 840);
    __int128 v64 = *(_OWORD *)(a2 + 732);
    __int128 v68 = *(_OWORD *)(a2 + 748);
    __int128 v72 = *(_OWORD *)(a2 + 764);
    __int128 v76 = *(_OWORD *)(a2 + 780);
    __int128 v56 = *(_OWORD *)(a2 + 700);
    __int128 v60 = *(_OWORD *)(a2 + 716);
    __int128 v21 = *(_OWORD *)(a3 + 716);
    *(_OWORD *)(a2 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a3 + 700);
    *(_OWORD *)(a2 + 716) = v21;
    __int128 v22 = *(_OWORD *)(a3 + 732);
    __int128 v23 = *(_OWORD *)(a3 + 748);
    __int128 v24 = *(_OWORD *)(a3 + 780);
    *(_OWORD *)(a2 + 764) = *(_OWORD *)(a3 + 764);
    *(_OWORD *)(a2 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v24;
    *(_OWORD *)(a2 + 732) = v22;
    *(_OWORD *)(a2 + 748) = v23;
    __int128 v25 = *(_OWORD *)(a3 + 796);
    __int128 v26 = *(_OWORD *)(a3 + 812);
    __int128 v27 = *(_OWORD *)(a3 + 828);
    *(_OWORD *)(a2 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a3 + 840);
    *(_OWORD *)(a2 + 812) = v26;
    *(_OWORD *)(a2 + 828) = v27;
    *(_OWORD *)(a2 + 796) = v25;
    *(_OWORD *)(a3 + 796) = v80;
    *(_OWORD *)(a3 + 812) = v84;
    *(_OWORD *)(a3 + 828) = *(_OWORD *)v88;
    *(_OWORD *)(a3 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v88[12];
    *(_OWORD *)(a3 + 732) = v64;
    *(_OWORD *)(a3 + 748) = v68;
    *(_OWORD *)(a3 + 764) = v72;
    *(_OWORD *)(a3 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v76;
    *(_OWORD *)(a3 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v56;
    *(_OWORD *)(a3 + 716) = v60;
    LOBYTE(v19) = *(_BYTE *)(a2 + 856);
    *(_BYTE *)(a2 + 856) = *(_BYTE *)(a3 + 856);
    *(_BYTE *)(a3 + 856) = v19;
    if (sub_100452AD8(a2, a1))
    {
      __int128 v28 = (char *)(a2 + 856);
      sub_100453F9C((__int128 *)a1, (__int128 *)a2);
      int v29 = *(_DWORD *)(a1 + 696);
      *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
      *(_DWORD *)(a2 + 696) = v29;
      __int128 v81 = *(_OWORD *)(a1 + 796);
      __int128 v85 = *(_OWORD *)(a1 + 812);
      *(_OWORD *)__int128 v89 = *(_OWORD *)(a1 + 828);
      *(_OWORD *)&v89[12] = *(_OWORD *)(a1 + 840);
      __int128 v65 = *(_OWORD *)(a1 + 732);
      __int128 v69 = *(_OWORD *)(a1 + 748);
      __int128 v73 = *(_OWORD *)(a1 + 764);
      __int128 v77 = *(_OWORD *)(a1 + 780);
      __int128 v57 = *(_OWORD *)(a1 + 700);
      __int128 v61 = *(_OWORD *)(a1 + 716);
      __int128 v30 = *(_OWORD *)(a2 + 716);
      *(_OWORD *)(a1 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *v20;
      *(_OWORD *)(a1 + 716) = v30;
      __int128 v31 = *(_OWORD *)(a2 + 732);
      __int128 v32 = *(_OWORD *)(a2 + 748);
      __int128 v33 = *(_OWORD *)(a2 + 780);
      *(_OWORD *)(a1 + 764) = *(_OWORD *)(a2 + 764);
      *(_OWORD *)(a1 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v33;
      *(_OWORD *)(a1 + 732) = v31;
      *(_OWORD *)(a1 + 748) = v32;
      __int128 v34 = *(_OWORD *)(a2 + 796);
      __int128 v35 = *(_OWORD *)(a2 + 812);
      __int128 v36 = *(_OWORD *)(a2 + 828);
      *(_OWORD *)(a1 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 840);
      *(_OWORD *)(a1 + 812) = v35;
      *(_OWORD *)(a1 + 828) = v36;
      *(_OWORD *)(a1 + 796) = v34;
      *(_OWORD *)(a2 + 796) = v81;
      *(_OWORD *)(a2 + 812) = v85;
      *(_OWORD *)(a2 + 828) = *(_OWORD *)v89;
      *(_OWORD *)(a2 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v89[12];
      *(_OWORD *)(a2 + 732) = v65;
      *(_OWORD *)(a2 + 748) = v69;
      *(_OWORD *)(a2 + 764) = v73;
      *(_OWORD *)(a2 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v77;
      unint64_t v9 = (char *)(a1 + 856);
      *__int128 v20 = v57;
      *(_OWORD *)(a2 + 716) = v61;
LABEL_10:
      char v54 = *v9;
      *unint64_t v9 = *v28;
      *__int128 v28 = v54;
    }
  }

BOOL sub_100453B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = 0x84BDA12F684BDA13LL * ((a2 - a1) >> 5);
  BOOL result = 1LL;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      char v6 = (__int128 *)(a2 - 864);
      sub_100453F9C((__int128 *)a1, v6);
      int v7 = *(_DWORD *)(a1 + 696);
      *(_DWORD *)(a1 + 696) = *(_DWORD *)(v2 - 168);
      *(_DWORD *)(v2 - 168) = v7;
      __int128 v8 = *(_OWORD *)(a1 + 812);
      *(_OWORD *)&v57[16] = *(_OWORD *)(a1 + 796);
      __int128 v58 = v8;
      v59[0] = *(_OWORD *)(a1 + 828);
      *(_OWORD *)((char *)v59 + 12) = *(_OWORD *)(a1 + 840);
      __int128 v9 = *(_OWORD *)(a1 + 748);
      __int128 v55 = *(_OWORD *)(a1 + 732);
      *(_OWORD *)__int128 v56 = v9;
      __int128 v10 = *(_OWORD *)(a1 + 780);
      *(_OWORD *)&v56[16] = *(_OWORD *)(a1 + 764);
      *(_OWORD *)__int128 v57 = v10;
      __int128 v11 = *(_OWORD *)(a1 + 716);
      __int128 v53 = *(_OWORD *)(a1 + 700);
      __int128 v54 = v11;
      __int128 v12 = *(_OWORD *)(v2 - 148);
      *(_OWORD *)(a1 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v2 - 164);
      *(_OWORD *)(a1 + 716) = v12;
      __int128 v13 = *(_OWORD *)(v2 - 132);
      __int128 v14 = *(_OWORD *)(v2 - 116);
      __int128 v15 = *(_OWORD *)(v2 - 84);
      *(_OWORD *)(a1 + 764) = *(_OWORD *)(v2 - 100);
      *(_OWORD *)(a1 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v15;
      *(_OWORD *)(a1 + 732) = v13;
      *(_OWORD *)(a1 + 748) = v14;
      __int128 v16 = *(_OWORD *)(v2 - 68);
      __int128 v17 = *(_OWORD *)(v2 - 52);
      __int128 v18 = *(_OWORD *)(v2 - 36);
      *(_OWORD *)(a1 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v2 - 24);
      *(_OWORD *)(a1 + 812) = v17;
      *(_OWORD *)(a1 + 828) = v18;
      *(_OWORD *)(a1 + 796) = v16;
      __int128 v19 = v58;
      *(_OWORD *)(v2 - 68) = *(_OWORD *)&v57[16];
      *(_OWORD *)(v2 - 52) = v19;
      *(_OWORD *)(v2 - 36) = v59[0];
      *(_OWORD *)(v2 - 24) = *(_OWORD *)((char *)v59 + 12);
      __int128 v20 = *(_OWORD *)v56;
      *(_OWORD *)(v2 - 132) = v55;
      *(_OWORD *)(v2 - 116) = v20;
      __int128 v21 = *(_OWORD *)v57;
      *(_OWORD *)(v2 - 10sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v56[16];
      *(_OWORD *)(v2 - 84) = v21;
      __int128 v22 = v54;
      *(_OWORD *)(v2 - 164) = v53;
      *(_OWORD *)(v2 - 148) = v22;
      LOBYTE(v7) = *(_BYTE *)(a1 + 856);
      *(_BYTE *)(a1 + 856) = *(_BYTE *)(v2 - 8);
      BOOL result = 1LL;
      *(_BYTE *)(v2 - 8) = v7;
      return result;
    case 3uLL:
      sub_10045372C(a1, a1 + 864, a2 - 864);
      return 1LL;
    case 4uLL:
      sub_100454374(a1, a1 + 864, a1 + 1728, a2 - 864);
      return 1LL;
    case 5uLL:
      sub_100452CC4(a1, a1 + 864, a1 + 1728, a1 + 2592, a2 - 864);
      return 1LL;
    default:
      uint64_t v23 = a1 + 1728;
      sub_10045372C(a1, a1 + 864, a1 + 1728);
      uint64_t v24 = a1 + 2592;
      if (a1 + 2592 == v2) {
        return 1LL;
      }
      uint64_t v25 = 0LL;
      int v26 = 0;
      uint64_t v52 = v2;
      break;
  }

  while (1)
  {
    if (sub_100452AD8(v24, v23))
    {
      __int128 v27 = *(_OWORD *)(v24 + 48);
      __int128 v55 = *(_OWORD *)(v24 + 32);
      *(_OWORD *)__int128 v56 = v27;
      *(_OWORD *)&_BYTE v56[12] = *(_OWORD *)(v24 + 60);
      __int128 v28 = *(_OWORD *)(v24 + 16);
      __int128 v53 = *(_OWORD *)v24;
      __int128 v54 = v28;
      *(_DWORD *)__int128 v57 = *(_DWORD *)(v24 + 80);
      *(_OWORD *)&v57[8] = *(_OWORD *)(v24 + 88);
      *(void *)&v57[24] = *(void *)(v24 + 104);
      *(void *)(v24 + 88) = 0LL;
      *(void *)(v24 + 96) = 0LL;
      *(void *)(v24 + 104) = 0LL;
      __int128 v29 = *(_OWORD *)(v24 + 288);
      v59[9] = *(_OWORD *)(v24 + 272);
      v60[0] = v29;
      *(_OWORD *)((char *)v60 + 12) = *(_OWORD *)(v24 + 300);
      __int128 v30 = *(_OWORD *)(v24 + 224);
      v59[5] = *(_OWORD *)(v24 + 208);
      v59[6] = v30;
      __int128 v31 = *(_OWORD *)(v24 + 256);
      v59[7] = *(_OWORD *)(v24 + 240);
      v59[8] = v31;
      __int128 v32 = *(_OWORD *)(v24 + 160);
      v59[1] = *(_OWORD *)(v24 + 144);
      v59[2] = v32;
      __int128 v33 = *(_OWORD *)(v24 + 192);
      v59[3] = *(_OWORD *)(v24 + 176);
      v59[4] = v33;
      __int128 v34 = *(_OWORD *)(v24 + 128);
      __int128 v58 = *(_OWORD *)(v24 + 112);
      v59[0] = v34;
      __int128 __p = *(_OWORD *)(v24 + 320);
      uint64_t v62 = *(void *)(v24 + 336);
      *(void *)(v24 + 328) = 0LL;
      *(void *)(v24 + 336) = 0LL;
      *(void *)(v24 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
      __int128 v35 = *(_OWORD *)(v24 + 488);
      __int128 v71 = *(_OWORD *)(v24 + 472);
      __int128 v72 = v35;
      int v73 = *(_DWORD *)(v24 + 504);
      __int128 v36 = *(_OWORD *)(v24 + 424);
      __int128 v67 = *(_OWORD *)(v24 + 408);
      __int128 v68 = v36;
      __int128 v37 = *(_OWORD *)(v24 + 456);
      __int128 v69 = *(_OWORD *)(v24 + 440);
      __int128 v70 = v37;
      __int128 v38 = *(_OWORD *)(v24 + 360);
      __int128 v63 = *(_OWORD *)(v24 + 344);
      __int128 v64 = v38;
      __int128 v39 = *(_OWORD *)(v24 + 392);
      __int128 v65 = *(_OWORD *)(v24 + 376);
      __int128 v66 = v39;
      __int128 v40 = *(_OWORD *)(v24 + 656);
      __int128 v82 = *(_OWORD *)(v24 + 640);
      __int128 v83 = v40;
      __int128 v84 = *(_OWORD *)(v24 + 672);
      int v85 = *(_DWORD *)(v24 + 688);
      __int128 v41 = *(_OWORD *)(v24 + 592);
      __int128 v78 = *(_OWORD *)(v24 + 576);
      __int128 v79 = v41;
      __int128 v42 = *(_OWORD *)(v24 + 624);
      __int128 v80 = *(_OWORD *)(v24 + 608);
      __int128 v81 = v42;
      __int128 v43 = *(_OWORD *)(v24 + 528);
      __int128 v74 = *(_OWORD *)(v24 + 512);
      __int128 v75 = v43;
      __int128 v44 = *(_OWORD *)(v24 + 560);
      __int128 v76 = *(_OWORD *)(v24 + 544);
      __int128 v77 = v44;
      int v86 = *(_DWORD *)(v24 + 696);
      __int128 v45 = *(_OWORD *)(v24 + 812);
      __int128 v93 = *(_OWORD *)(v24 + 796);
      __int128 v94 = v45;
      *(_OWORD *)__int128 v95 = *(_OWORD *)(v24 + 828);
      *(_OWORD *)&v95[12] = *(_OWORD *)(v24 + 840);
      __int128 v46 = *(_OWORD *)(v24 + 748);
      __int128 v89 = *(_OWORD *)(v24 + 732);
      __int128 v90 = v46;
      __int128 v47 = *(_OWORD *)(v24 + 780);
      __int128 v91 = *(_OWORD *)(v24 + 764);
      __int128 v92 = v47;
      __int128 v48 = *(_OWORD *)(v24 + 716);
      __int128 v87 = *(_OWORD *)(v24 + 700);
      __int128 v88 = v48;
      uint64_t v49 = v25;
      char v96 = *(_BYTE *)(v24 + 856);
      while (1)
      {
        sub_100454630(a1 + v49 + 2592, a1 + v49 + 1728);
        if (v49 == -1728) {
          break;
        }
        char v50 = sub_100452AD8((uint64_t)&v53, a1 + v49 + 864);
        v49 -= 864LL;
        if ((v50 & 1) == 0)
        {
          uint64_t v51 = a1 + v49 + 2592;
          goto LABEL_12;
        }
      }

      uint64_t v51 = a1;
LABEL_12:
      sub_100454630(v51, (uint64_t)&v53);
      uint64_t v2 = v52;
      if (SHIBYTE(v62) < 0) {
        operator delete((void *)__p);
      }
      if (*(void *)&v57[8])
      {
        *(void *)&v57[16] = *(void *)&v57[8];
        operator delete(*(void **)&v57[8]);
      }

      if (++v26 == 8) {
        return v24 + 864 == v52;
      }
    }

    uint64_t v23 = v24;
    v25 += 864LL;
    v24 += 864LL;
    if (v24 == v2) {
      return 1LL;
    }
  }

void sub_100453F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_100453F70(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

__n128 sub_100453F9C(__int128 *a1, __int128 *a2)
{
  __int128 v74 = a1[2];
  *(_OWORD *)__int128 v75 = a1[3];
  *(_OWORD *)&v75[12] = *(__int128 *)((char *)a1 + 60);
  unint64_t v4 = a1 + 5;
  int v5 = *((_DWORD *)a1 + 20);
  __int128 v72 = *a1;
  __int128 v73 = a1[1];
  __int128 v7 = *(__int128 *)((char *)a1 + 88);
  char v6 = (void *)a1 + 11;
  __int128 v46 = v7;
  uint64_t v45 = *((void *)a1 + 13);
  void *v6 = 0LL;
  *((void *)a1 + 12) = 0LL;
  *((void *)a1 + 13) = 0LL;
  __int128 v62 = a1[9];
  __int128 v63 = a1[10];
  __int128 v60 = a1[7];
  __int128 v61 = a1[8];
  __int128 v66 = a1[13];
  __int128 v67 = a1[14];
  __int128 v64 = a1[11];
  __int128 v65 = a1[12];
  *(_OWORD *)&v71[12] = *(__int128 *)((char *)v4 + 220);
  __int128 v70 = a1[17];
  *(_OWORD *)__int128 v71 = a1[18];
  __int128 v68 = a1[15];
  __int128 v69 = a1[16];
  uint64_t v47 = *((void *)a1 + 40);
  uint64_t v8 = *((void *)a1 + 41);
  uint64_t v9 = *(void *)((char *)v4 + 255);
  char v48 = *((_BYTE *)a1 + 343);
  *((void *)a1 + 41) = 0LL;
  *((void *)a1 + 42) = 0LL;
  *((void *)a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  __int128 v57 = *(__int128 *)((char *)a1 + 472);
  __int128 v58 = *(__int128 *)((char *)a1 + 488);
  __int128 v53 = *(__int128 *)((char *)a1 + 408);
  __int128 v54 = *(__int128 *)((char *)a1 + 424);
  __int128 v55 = *(__int128 *)((char *)a1 + 440);
  __int128 v56 = *(__int128 *)((char *)a1 + 456);
  __int128 v49 = *(__int128 *)((char *)a1 + 344);
  __int128 v50 = *(__int128 *)((char *)a1 + 360);
  __int128 v51 = *(__int128 *)((char *)a1 + 376);
  __int128 v52 = *(__int128 *)((char *)a1 + 392);
  __int128 v84 = a1[40];
  __int128 v85 = a1[41];
  __int128 v86 = a1[42];
  __int128 v80 = a1[36];
  __int128 v81 = a1[37];
  __int128 v82 = a1[38];
  __int128 v83 = a1[39];
  __int128 v76 = a1[32];
  __int128 v77 = a1[33];
  __int128 v10 = a1[35];
  __n128 v78 = (__n128)a1[34];
  *a1 = *a2;
  __int128 v11 = a2[1];
  __int128 v12 = a2[2];
  __int128 v13 = a2[3];
  *(__int128 *)((char *)a1 + 6sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(__int128 *)((char *)a2 + 60);
  __int128 v14 = (void **)(a1 + 20);
  *(void *)__int128 v88 = v8;
  *(void *)&v88[7] = v9;
  int v59 = *((_DWORD *)a1 + 126);
  int v87 = *((_DWORD *)a1 + 172);
  a1[2] = v12;
  a1[3] = v13;
  a1[1] = v11;
  __int128 v15 = a2 + 5;
  *(_DWORD *)unint64_t v4 = *((_DWORD *)a2 + 20);
  __int128 v79 = v10;
  sub_100007664((uint64_t)v6, (__n128 *)((char *)a2 + 88));
  a1[7] = v15[2];
  __int128 v16 = v15[3];
  __int128 v17 = v15[4];
  __int128 v18 = v15[6];
  a1[10] = v15[5];
  a1[11] = v18;
  a1[8] = v16;
  a1[9] = v17;
  __int128 v19 = v15[7];
  __int128 v20 = v15[8];
  __int128 v21 = v15[10];
  a1[14] = v15[9];
  a1[15] = v21;
  a1[12] = v19;
  a1[13] = v20;
  __int128 v22 = v15[11];
  __int128 v23 = v15[12];
  __int128 v24 = v15[13];
  *(__int128 *)((char *)v4 + 22sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)v15 + 220);
  a1[17] = v23;
  a1[18] = v24;
  a1[16] = v22;
  __int128 v25 = a2[20];
  *((void *)a1 + 42) = *((void *)a2 + 42);
  *(_OWORD *)__int128 v14 = v25;
  *((_BYTE *)a2 + 343) = 0;
  *((_BYTE *)a2 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  __int128 v27 = *(__int128 *)((char *)a2 + 424);
  __int128 v26 = *(__int128 *)((char *)a2 + 440);
  __int128 v28 = *(__int128 *)((char *)a2 + 408);
  *(__int128 *)((char *)a1 + 392) = *(__int128 *)((char *)a2 + 392);
  *(__int128 *)((char *)a1 + 408) = v28;
  *(__int128 *)((char *)a1 + 424) = v27;
  *(__int128 *)((char *)a1 + 44sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v26;
  __int128 v30 = *(__int128 *)((char *)a2 + 360);
  __int128 v29 = *(__int128 *)((char *)a2 + 376);
  *(__int128 *)((char *)a1 + 344) = *(__int128 *)((char *)a2 + 344);
  *(__int128 *)((char *)a1 + 36sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v30;
  *(__int128 *)((char *)a1 + 376) = v29;
  __int128 v31 = *(__int128 *)((char *)a2 + 456);
  __int128 v32 = *(__int128 *)((char *)a2 + 472);
  __int128 v33 = *(__int128 *)((char *)a2 + 488);
  *((_DWORD *)a1 + 126) = *((_DWORD *)a2 + 126);
  *(__int128 *)((char *)a1 + 472) = v32;
  *(__int128 *)((char *)a1 + 488) = v33;
  *(__int128 *)((char *)a1 + 456) = v31;
  __int128 v34 = a2[32];
  __int128 v35 = a2[33];
  __int128 v36 = a2[35];
  a1[34] = a2[34];
  a1[35] = v36;
  a1[32] = v34;
  a1[33] = v35;
  __int128 v37 = a2[36];
  __int128 v38 = a2[37];
  __int128 v39 = a2[39];
  a1[38] = a2[38];
  a1[39] = v39;
  a1[36] = v37;
  a1[37] = v38;
  __int128 v40 = a2[40];
  __int128 v41 = a2[41];
  __int128 v42 = a2[42];
  *((_DWORD *)a1 + 172) = *((_DWORD *)a2 + 172);
  a1[41] = v41;
  a1[42] = v42;
  a1[40] = v40;
  a2[2] = v74;
  a2[3] = *(_OWORD *)v75;
  *(__int128 *)((char *)a2 + 6sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v75[12];
  *a2 = v72;
  a2[1] = v73;
  *((_DWORD *)a2 + 2sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v5;
  __int128 v43 = (void *)*((void *)a2 + 11);
  if (v43)
  {
    *((void *)a2 + 12) = v43;
    operator delete(v43);
  }

  *(__int128 *)((char *)a2 + 88) = v46;
  *((void *)a2 + 13) = v45;
  v15[12] = v70;
  v15[13] = *(_OWORD *)v71;
  *(_OWORD *)((char *)v15 + 22sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v71[12];
  v15[8] = v66;
  _OWORD v15[9] = v67;
  v15[10] = v68;
  v15[11] = v69;
  v15[4] = v62;
  v15[5] = v63;
  v15[6] = v64;
  v15[7] = v65;
  _DWORD v15[2] = v60;
  void v15[3] = v61;
  *((void *)a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v47;
  *((void *)a2 + 41) = *(void *)v88;
  *(void *)((char *)a2 + 335) = *(void *)&v88[7];
  *((_BYTE *)a2 + 343) = v48;
  *(__int128 *)((char *)a2 + 472) = v57;
  *(__int128 *)((char *)a2 + 488) = v58;
  *((_DWORD *)a2 + 126) = v59;
  *(__int128 *)((char *)a2 + 408) = v53;
  *(__int128 *)((char *)a2 + 424) = v54;
  *(__int128 *)((char *)a2 + 44sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v55;
  *(__int128 *)((char *)a2 + 456) = v56;
  *(__int128 *)((char *)a2 + 344) = v49;
  *(__int128 *)((char *)a2 + 36sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v50;
  *(__int128 *)((char *)a2 + 376) = v51;
  *(__int128 *)((char *)a2 + 392) = v52;
  a2[40] = v84;
  a2[41] = v85;
  a2[42] = v86;
  *((_DWORD *)a2 + 172) = v87;
  a2[36] = v80;
  a2[37] = v81;
  a2[38] = v82;
  a2[39] = v83;
  a2[32] = v76;
  a2[33] = v77;
  __n128 result = v78;
  a2[34] = (__int128)v78;
  a2[35] = v79;
  return result;
}

double sub_100454374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (sub_100452AD8(a4, a3))
  {
    sub_100453F9C((__int128 *)a3, (__int128 *)a4);
    int v9 = *(_DWORD *)(a3 + 696);
    *(_DWORD *)(a3 + 696) = *(_DWORD *)(a4 + 696);
    *(_DWORD *)(a4 + 696) = v9;
    __int128 v10 = (_OWORD *)(a3 + 700);
    __int128 v53 = *(_OWORD *)(a3 + 796);
    __int128 v56 = *(_OWORD *)(a3 + 812);
    *(_OWORD *)int v59 = *(_OWORD *)(a3 + 828);
    *(_OWORD *)&v59[12] = *(_OWORD *)(a3 + 840);
    __int128 v41 = *(_OWORD *)(a3 + 732);
    __int128 v44 = *(_OWORD *)(a3 + 748);
    __int128 v47 = *(_OWORD *)(a3 + 764);
    __int128 v50 = *(_OWORD *)(a3 + 780);
    __int128 v35 = *(_OWORD *)(a3 + 700);
    __int128 v38 = *(_OWORD *)(a3 + 716);
    __int128 v11 = *(_OWORD *)(a4 + 716);
    *(_OWORD *)(a3 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a4 + 700);
    *(_OWORD *)(a3 + 716) = v11;
    __int128 v12 = *(_OWORD *)(a4 + 732);
    __int128 v13 = *(_OWORD *)(a4 + 748);
    __int128 v14 = *(_OWORD *)(a4 + 780);
    *(_OWORD *)(a3 + 764) = *(_OWORD *)(a4 + 764);
    *(_OWORD *)(a3 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v14;
    *(_OWORD *)(a3 + 732) = v12;
    *(_OWORD *)(a3 + 748) = v13;
    __int128 v15 = *(_OWORD *)(a4 + 796);
    __int128 v16 = *(_OWORD *)(a4 + 812);
    __int128 v17 = *(_OWORD *)(a4 + 828);
    *(_OWORD *)(a3 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a4 + 840);
    *(_OWORD *)(a3 + 812) = v16;
    *(_OWORD *)(a3 + 828) = v17;
    *(_OWORD *)(a3 + 796) = v15;
    *(_OWORD *)(a4 + 796) = v53;
    *(_OWORD *)(a4 + 812) = v56;
    *(_OWORD *)(a4 + 828) = *(_OWORD *)v59;
    *(_OWORD *)(a4 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v59[12];
    *(_OWORD *)(a4 + 732) = v41;
    *(_OWORD *)(a4 + 748) = v44;
    *(_OWORD *)(a4 + 764) = v47;
    *(_OWORD *)(a4 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v50;
    *(_OWORD *)(a4 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v35;
    *(_OWORD *)(a4 + 716) = v38;
    LOBYTE(v9) = *(_BYTE *)(a3 + 856);
    *(_BYTE *)(a3 + 856) = *(_BYTE *)(a4 + 856);
    *(_BYTE *)(a4 + 856) = v9;
    if (sub_100452AD8(a3, a2))
    {
      sub_100453F9C((__int128 *)a2, (__int128 *)a3);
      int v18 = *(_DWORD *)(a2 + 696);
      *(_DWORD *)(a2 + 696) = *(_DWORD *)(a3 + 696);
      *(_DWORD *)(a3 + 696) = v18;
      __int128 v19 = (_OWORD *)(a2 + 700);
      __int128 v54 = *(_OWORD *)(a2 + 796);
      __int128 v57 = *(_OWORD *)(a2 + 812);
      *(_OWORD *)__int128 v60 = *(_OWORD *)(a2 + 828);
      *(_OWORD *)&v60[12] = *(_OWORD *)(a2 + 840);
      __int128 v42 = *(_OWORD *)(a2 + 732);
      __int128 v45 = *(_OWORD *)(a2 + 748);
      __int128 v48 = *(_OWORD *)(a2 + 764);
      __int128 v51 = *(_OWORD *)(a2 + 780);
      __int128 v36 = *(_OWORD *)(a2 + 700);
      __int128 v39 = *(_OWORD *)(a2 + 716);
      __int128 v20 = *(_OWORD *)(a3 + 716);
      *(_OWORD *)(a2 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *v10;
      *(_OWORD *)(a2 + 716) = v20;
      __int128 v21 = *(_OWORD *)(a3 + 732);
      __int128 v22 = *(_OWORD *)(a3 + 748);
      __int128 v23 = *(_OWORD *)(a3 + 780);
      *(_OWORD *)(a2 + 764) = *(_OWORD *)(a3 + 764);
      *(_OWORD *)(a2 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v23;
      *(_OWORD *)(a2 + 732) = v21;
      *(_OWORD *)(a2 + 748) = v22;
      __int128 v24 = *(_OWORD *)(a3 + 796);
      __int128 v25 = *(_OWORD *)(a3 + 812);
      __int128 v26 = *(_OWORD *)(a3 + 828);
      *(_OWORD *)(a2 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a3 + 840);
      *(_OWORD *)(a2 + 812) = v25;
      *(_OWORD *)(a2 + 828) = v26;
      *(_OWORD *)(a2 + 796) = v24;
      *(_OWORD *)(a3 + 796) = v54;
      *(_OWORD *)(a3 + 812) = v57;
      *(_OWORD *)(a3 + 828) = *(_OWORD *)v60;
      *(_OWORD *)(a3 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v60[12];
      *(_OWORD *)(a3 + 732) = v42;
      *(_OWORD *)(a3 + 748) = v45;
      *(_OWORD *)(a3 + 764) = v48;
      *(_OWORD *)(a3 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v51;
      *__int128 v10 = v36;
      *(_OWORD *)(a3 + 716) = v39;
      LOBYTE(v18) = *(_BYTE *)(a2 + 856);
      *(_BYTE *)(a2 + 856) = *(_BYTE *)(a3 + 856);
      *(_BYTE *)(a3 + 856) = v18;
      if (sub_100452AD8(a2, a1))
      {
        sub_100453F9C((__int128 *)a1, (__int128 *)a2);
        int v27 = *(_DWORD *)(a1 + 696);
        *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
        *(_DWORD *)(a2 + 696) = v27;
        __int128 v55 = *(_OWORD *)(a1 + 796);
        __int128 v58 = *(_OWORD *)(a1 + 812);
        *(_OWORD *)__int128 v61 = *(_OWORD *)(a1 + 828);
        *(_OWORD *)&_BYTE v61[12] = *(_OWORD *)(a1 + 840);
        __int128 v43 = *(_OWORD *)(a1 + 732);
        __int128 v46 = *(_OWORD *)(a1 + 748);
        __int128 v49 = *(_OWORD *)(a1 + 764);
        __int128 v52 = *(_OWORD *)(a1 + 780);
        __int128 v37 = *(_OWORD *)(a1 + 700);
        __int128 v40 = *(_OWORD *)(a1 + 716);
        __int128 v28 = *(_OWORD *)(a2 + 716);
        *(_OWORD *)(a1 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *v19;
        *(_OWORD *)(a1 + 716) = v28;
        __int128 v29 = *(_OWORD *)(a2 + 732);
        __int128 v30 = *(_OWORD *)(a2 + 748);
        __int128 v31 = *(_OWORD *)(a2 + 780);
        *(_OWORD *)(a1 + 764) = *(_OWORD *)(a2 + 764);
        *(_OWORD *)(a1 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v31;
        *(_OWORD *)(a1 + 732) = v29;
        *(_OWORD *)(a1 + 748) = v30;
        __int128 v32 = *(_OWORD *)(a2 + 796);
        __int128 v33 = *(_OWORD *)(a2 + 812);
        __int128 v34 = *(_OWORD *)(a2 + 828);
        *(_OWORD *)(a1 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 840);
        *(_OWORD *)(a1 + 812) = v33;
        *(_OWORD *)(a1 + 828) = v34;
        *(_OWORD *)(a1 + 796) = v32;
        *(_OWORD *)(a2 + 796) = v55;
        *(_OWORD *)(a2 + 812) = v58;
        *(_OWORD *)(a2 + 828) = *(_OWORD *)v61;
        *(_OWORD *)(a2 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v61[12];
        *(_OWORD *)(a2 + 732) = v43;
        *(_OWORD *)(a2 + 748) = v46;
        *(_OWORD *)(a2 + 764) = v49;
        *(_OWORD *)(a2 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v52;
        double result = *(double *)&v37;
        *__int128 v19 = v37;
        *(_OWORD *)(a2 + 716) = v40;
        LOBYTE(v27) = *(_BYTE *)(a1 + 856);
        *(_BYTE *)(a1 + 856) = *(_BYTE *)(a2 + 856);
        *(_BYTE *)(a2 + 856) = v27;
      }
    }
  }

  return result;
}

__n128 sub_100454630(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v4 = *(_OWORD *)(a2 + 16);
  __int128 v5 = *(_OWORD *)(a2 + 32);
  __int128 v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 6sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  __int128 v7 = (_OWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_DWORD *)(a2 + 80);
  uint64_t v8 = a1 + 80;
  sub_100007664(a1 + 88, (__n128 *)(a2 + 88));
  *(_OWORD *)(v8 + 32) = v7[2];
  __int128 v9 = v7[3];
  __int128 v10 = v7[4];
  __int128 v11 = v7[6];
  *(_OWORD *)(v8 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v7[5];
  *(_OWORD *)(v8 + 96) = v11;
  *(_OWORD *)(v8 + 48) = v9;
  *(_OWORD *)(v8 + 64) = v10;
  __int128 v12 = v7[7];
  __int128 v13 = v7[8];
  __int128 v14 = v7[10];
  *(_OWORD *)(v8 + 144) = v7[9];
  *(_OWORD *)(v8 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v14;
  *(_OWORD *)(v8 + 112) = v12;
  *(_OWORD *)(v8 + 128) = v13;
  __int128 v15 = v7[11];
  __int128 v16 = v7[12];
  __int128 v17 = v7[13];
  *(_OWORD *)(v8 + 22sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)v7 + 220);
  *(_OWORD *)(v8 + 192) = v16;
  *(_OWORD *)(v8 + 208) = v17;
  *(_OWORD *)(v8 + 176) = v15;
  int v18 = (void **)(v8 + 240);
  __int128 v19 = *(_OWORD *)(a2 + 320);
  *(void *)(v8 + 256) = *(void *)(a2 + 336);
  *(_OWORD *)int v18 = v19;
  *(_BYTE *)(a2 + 343) = 0;
  *(_BYTE *)(a2 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  __int128 v21 = *(_OWORD *)(a2 + 424);
  __int128 v20 = *(_OWORD *)(a2 + 440);
  __int128 v22 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v22;
  *(_OWORD *)(a1 + 424) = v21;
  *(_OWORD *)(a1 + 44sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v20;
  __int128 v24 = *(_OWORD *)(a2 + 360);
  __int128 v23 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 36sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v24;
  *(_OWORD *)(a1 + 376) = v23;
  __int128 v25 = *(_OWORD *)(a2 + 456);
  __int128 v26 = *(_OWORD *)(a2 + 472);
  __int128 v27 = *(_OWORD *)(a2 + 488);
  *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 472) = v26;
  *(_OWORD *)(a1 + 488) = v27;
  *(_OWORD *)(a1 + 456) = v25;
  __int128 v28 = *(_OWORD *)(a2 + 512);
  __int128 v29 = *(_OWORD *)(a2 + 528);
  __int128 v30 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 56sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v30;
  *(_OWORD *)(a1 + 512) = v28;
  *(_OWORD *)(a1 + 528) = v29;
  __int128 v31 = *(_OWORD *)(a2 + 576);
  __int128 v32 = *(_OWORD *)(a2 + 592);
  __int128 v33 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v33;
  *(_OWORD *)(a1 + 576) = v31;
  *(_OWORD *)(a1 + 592) = v32;
  __int128 v34 = *(_OWORD *)(a2 + 640);
  __int128 v35 = *(_OWORD *)(a2 + 656);
  __int128 v36 = *(_OWORD *)(a2 + 672);
  *(_DWORD *)(a1 + 688) = *(_DWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 656) = v35;
  *(_OWORD *)(a1 + 672) = v36;
  *(_OWORD *)(a1 + 64sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v34;
  *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
  __int128 v37 = *(_OWORD *)(a2 + 716);
  *(_OWORD *)(a1 + 70sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 700);
  *(_OWORD *)(a1 + 716) = v37;
  __int128 v38 = *(_OWORD *)(a2 + 732);
  __int128 v39 = *(_OWORD *)(a2 + 748);
  __int128 v40 = *(_OWORD *)(a2 + 780);
  *(_OWORD *)(a1 + 764) = *(_OWORD *)(a2 + 764);
  *(_OWORD *)(a1 + 78sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v40;
  *(_OWORD *)(a1 + 732) = v38;
  *(_OWORD *)(a1 + 748) = v39;
  __n128 result = *(__n128 *)(a2 + 796);
  __int128 v42 = *(_OWORD *)(a2 + 812);
  __int128 v43 = *(_OWORD *)(a2 + 828);
  *(_OWORD *)(a1 + 84sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 812) = v42;
  *(_OWORD *)(a1 + 828) = v43;
  *(__n128 *)(a1 + 796) = result;
  *(_BYTE *)(a1 + 856) = *(_BYTE *)(a2 + 856);
  return result;
}

void sub_1004547C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = a2 - 2;
  if (a2 >= 2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = v3 >> 1;
    if ((uint64_t)(v3 >> 1) >= (uint64_t)(0x84BDA12F684BDA13LL * ((a3 - a1) >> 5)))
    {
      uint64_t v8 = (0x97B425ED097B426LL * ((a3 - a1) >> 5)) | 1;
      uint64_t v9 = a1 + 864 * v8;
      uint64_t v10 = 0x97B425ED097B426LL * ((a3 - a1) >> 5) + 2;
      if (v10 < a2 && sub_100452AD8(a1 + 864 * v8, v9 + 864))
      {
        v9 += 864LL;
        uint64_t v8 = v10;
      }

      if ((sub_100452AD8(v9, v4) & 1) == 0)
      {
        __int128 v11 = *(_OWORD *)(v4 + 48);
        _OWORD v35[2] = *(_OWORD *)(v4 + 32);
        v36[0] = v11;
        *(_OWORD *)((char *)v36 + 12) = *(_OWORD *)(v4 + 60);
        __int128 v12 = *(_OWORD *)(v4 + 16);
        v35[0] = *(_OWORD *)v4;
        v35[1] = v12;
        int v37 = *(_DWORD *)(v4 + 80);
        *(_OWORD *)__int128 v38 = *(_OWORD *)(v4 + 88);
        uint64_t v39 = *(void *)(v4 + 104);
        *(void *)(v4 + 88) = 0LL;
        *(void *)(v4 + 96) = 0LL;
        *(void *)(v4 + 104) = 0LL;
        *(_OWORD *)((char *)v51 + 12) = *(_OWORD *)(v4 + 300);
        __int128 v13 = *(_OWORD *)(v4 + 288);
        __int128 v50 = *(_OWORD *)(v4 + 272);
        v51[0] = v13;
        __int128 v14 = *(_OWORD *)(v4 + 224);
        __int128 v46 = *(_OWORD *)(v4 + 208);
        __int128 v47 = v14;
        __int128 v15 = *(_OWORD *)(v4 + 256);
        __int128 v48 = *(_OWORD *)(v4 + 240);
        __int128 v49 = v15;
        __int128 v16 = *(_OWORD *)(v4 + 160);
        __int128 v42 = *(_OWORD *)(v4 + 144);
        __int128 v43 = v16;
        __int128 v17 = *(_OWORD *)(v4 + 192);
        __int128 v44 = *(_OWORD *)(v4 + 176);
        __int128 v45 = v17;
        __int128 v18 = *(_OWORD *)(v4 + 128);
        __int128 v40 = *(_OWORD *)(v4 + 112);
        __int128 v41 = v18;
        *(_OWORD *)__int128 __p = *(_OWORD *)(v4 + 320);
        uint64_t v53 = *(void *)(v4 + 336);
        *(void *)(v4 + 328) = 0LL;
        *(void *)(v4 + 336) = 0LL;
        *(void *)(v4 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
        __int128 v19 = *(_OWORD *)(v4 + 488);
        __int128 v62 = *(_OWORD *)(v4 + 472);
        __int128 v63 = v19;
        __int128 v20 = *(_OWORD *)(v4 + 424);
        __int128 v58 = *(_OWORD *)(v4 + 408);
        __int128 v59 = v20;
        __int128 v21 = *(_OWORD *)(v4 + 456);
        __int128 v60 = *(_OWORD *)(v4 + 440);
        __int128 v61 = v21;
        __int128 v22 = *(_OWORD *)(v4 + 360);
        __int128 v54 = *(_OWORD *)(v4 + 344);
        __int128 v55 = v22;
        __int128 v23 = *(_OWORD *)(v4 + 392);
        __int128 v56 = *(_OWORD *)(v4 + 376);
        __int128 v57 = v23;
        int v64 = *(_DWORD *)(v4 + 504);
        __int128 v24 = *(_OWORD *)(v4 + 656);
        __int128 v73 = *(_OWORD *)(v4 + 640);
        __int128 v74 = v24;
        __int128 v75 = *(_OWORD *)(v4 + 672);
        int v76 = *(_DWORD *)(v4 + 688);
        __int128 v25 = *(_OWORD *)(v4 + 592);
        __int128 v69 = *(_OWORD *)(v4 + 576);
        __int128 v70 = v25;
        __int128 v26 = *(_OWORD *)(v4 + 624);
        __int128 v71 = *(_OWORD *)(v4 + 608);
        __int128 v72 = v26;
        __int128 v27 = *(_OWORD *)(v4 + 528);
        __int128 v65 = *(_OWORD *)(v4 + 512);
        __int128 v66 = v27;
        __int128 v28 = *(_OWORD *)(v4 + 560);
        __int128 v67 = *(_OWORD *)(v4 + 544);
        __int128 v68 = v28;
        int v77 = *(_DWORD *)(v4 + 696);
        __int128 v29 = *(_OWORD *)(v4 + 812);
        __int128 v84 = *(_OWORD *)(v4 + 796);
        __int128 v85 = v29;
        *(_OWORD *)__int128 v86 = *(_OWORD *)(v4 + 828);
        *(_OWORD *)&v86[12] = *(_OWORD *)(v4 + 840);
        __int128 v30 = *(_OWORD *)(v4 + 748);
        __int128 v80 = *(_OWORD *)(v4 + 732);
        __int128 v81 = v30;
        __int128 v31 = *(_OWORD *)(v4 + 780);
        __int128 v82 = *(_OWORD *)(v4 + 764);
        __int128 v83 = v31;
        __int128 v32 = *(_OWORD *)(v4 + 716);
        __int128 v78 = *(_OWORD *)(v4 + 700);
        __int128 v79 = v32;
        char v87 = *(_BYTE *)(v4 + 856);
        do
        {
          uint64_t v33 = v9;
          sub_100454630(v4, v9);
          if (v6 < v8) {
            break;
          }
          uint64_t v34 = (2 * v8) | 1;
          uint64_t v9 = a1 + 864 * v34;
          uint64_t v8 = 2 * v8 + 2;
          if (v8 >= a2)
          {
            uint64_t v8 = v34;
          }

          else if (sub_100452AD8(a1 + 864 * v34, v9 + 864))
          {
            v9 += 864LL;
          }

          else
          {
            uint64_t v8 = v34;
          }

          uint64_t v4 = v33;
        }

        while (!sub_100452AD8(v9, (uint64_t)v35));
        sub_100454630(v33, (uint64_t)v35);
        if (SHIBYTE(v53) < 0) {
          operator delete(__p[0]);
        }
        if (v38[0])
        {
          v38[1] = v38[0];
          operator delete(v38[0]);
        }
      }
    }
  }

void sub_100454A70( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_100454A84()
{
  return os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_FAULT);
}

BOOL sub_100454A98()
{
  return os_log_type_enabled(*(os_log_t *)(v0 + 2104), OS_LOG_TYPE_INFO);
}

BOOL sub_100454AA8()
{
  return os_signpost_enabled(*(os_log_t *)(v0 + 2104));
}

uint64_t sub_100454AB4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  sub_100AD558C(a1 + 8, (uint64_t)"CLMotionStateOverride", a1, 0.0);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 28sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 72) = 23LL;
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_1018399D8);
  }
  unint64_t v3 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Workout, Taking power assertion due to session start.",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018399D8);
    }
    v6[0] = 0;
    __int128 v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Workout, Taking power assertion due to session start.",  v6,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLMotionStateOverride::CLMotionStateOverride(id<CLIntersiloUniverse>)",  "%s\n",  v5);
  }

  return a1;
}

void sub_100454C9C(_Unwind_Exception *a1)
{
}

uint64_t sub_100454CB4(uint64_t a1)
{
  __int128 v2 = *(_OWORD *)(a1 + 232);
  __int128 v3 = *(_OWORD *)(a1 + 264);
  __int128 v21 = *(_OWORD *)(a1 + 248);
  __int128 v22 = v3;
  uint64_t v23 = *(void *)(a1 + 280);
  __int128 v4 = *(_OWORD *)(a1 + 168);
  __int128 v5 = *(_OWORD *)(a1 + 200);
  __int128 v17 = *(_OWORD *)(a1 + 184);
  __int128 v18 = v5;
  __int128 v19 = *(_OWORD *)(a1 + 216);
  __int128 v20 = v2;
  __int128 v6 = *(_OWORD *)(a1 + 136);
  __int128 v13 = *(_OWORD *)(a1 + 120);
  __int128 v14 = v6;
  __int128 v15 = *(_OWORD *)(a1 + 152);
  __int128 v16 = v4;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  int32x4_t v12[2] = sub_100454EFC;
  v12[3] = &unk_101839610;
  objc_msgSend( -[CLServiceVendor proxyForService:]( +[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance"),  "proxyForService:",  @"CLMotionStateMediator"),  "syncgetDoSync:",  v12);
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  __int128 v7 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "Workout, Releasing power assertion due to session end.",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    v10[0] = 0;
    uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "Workout, Releasing power assertion due to session end.",  v10,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "CLMotionStateOverride::~CLMotionStateOverride()", "%s\n", v9);
  }

  sub_100AD5D38(a1 + 8);
  sub_100AD5650(a1 + 8);
  return a1;
}

void sub_100454EF0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void sub_100454EFC(uint64_t a1, uint64_t a2)
{
}

void sub_100454F0C(uint64_t a1, unsigned __int8 *uu)
{
  if (*(_BYTE *)(a1 + 461))
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    __int128 v2 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Ignoring endWorkoutSession because fTriggerIndoorOutdoorOnObservedPedWorkouts is true",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      *(_WORD *)out = 0;
      __int128 v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Ignoring endWorkoutSession because fTriggerIndoorOutdoorOnObservedPedWorkouts is true",  out,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::endWorkoutSession(const CLMotionStateMediator_Type::WorkoutSettings &)",  "%s\n",  v3);
    }
  }

  else
  {
    uuid_unparse(uu, out);
    uint64_t v18 = 0LL;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    *(_OWORD *)__int128 __p = 0u;
    __int128 v15 = 0u;
    *(_OWORD *)int32x2_t buf = 0u;
    *(_OWORD *)(a1 + 8696) = 0u;
    __int128 v5 = (void **)(a1 + 8712);
    *(_OWORD *)__int128 v5 = *(_OWORD *)__p;
    *(void *)(a1 + 8728) = v15;
    BYTE7(v15) = 0;
    LOBYTE(__p[0]) = 0;
    sub_10046FE80((void *)(a1 + 8736), (uint64_t)&v15 + 8);
    sub_1002C5F18((void *)&v15 + 1);
    if (SBYTE7(v15) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v18 = 0LL;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    *(_OWORD *)__int128 __p = 0u;
    __int128 v15 = 0u;
    *(_OWORD *)int32x2_t buf = 0u;
    *(_OWORD *)(a1 + 8784) = 0u;
    __int128 v6 = (void **)(a1 + 8800);
    *(_OWORD *)__int128 v6 = *(_OWORD *)__p;
    *(void *)(a1 + 8816) = v15;
    BYTE7(v15) = 0;
    LOBYTE(__p[0]) = 0;
    sub_10046F680((void *)(a1 + 8824), (uint64_t)&v15 + 8);
    sub_10041385C((void *)&v15 + 1);
    if (SBYTE7(v15) < 0) {
      operator delete(__p[0]);
    }
    *(_BYTE *)(a1 + 8872) = 0;
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    __int128 v7 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int32x2_t buf = 136315138;
      *(void *)&uint8_t buf[4] = out;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "WorkoutSession, end workout session, %s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      int v10 = 136315138;
      __int128 v11 = out;
      uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, end workout session, %s",  (const char *)&v10);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::endWorkoutSession(const CLMotionStateMediator_Type::WorkoutSettings &)",  "%s\n",  v9);
    }

    uint64_t v8 = *(void *)(a1 + 8688);
    if (v8)
    {
      sub_1004FF278(v8);
      sub_100463D44((uint64_t *)(a1 + 8688), 0LL);
    }

    sub_10045BFE0(a1, (uint64_t *)(a1 + 464), 0);
    sub_10045BFE0(a1, (uint64_t *)(a1 + 528), 0);
    sub_10045BFE0(a1, (uint64_t *)(a1 + 560), 0);
    *(_BYTE *)(a1 + 128) = 0;
  }

void sub_100455360(uint64_t a1, int a2)
{
  uint64_t v2 = a1 + 8;
  if (a2)
  {
    sub_1010DDBC0(v4, "StartOrResumeWorkout");
    if (*(int *)(a1 + 16) <= 0)
    {
      if (SHIBYTE(v5) < 0)
      {
        sub_1010DD48C(__p, v4[0], (unint64_t)v4[1]);
      }

      else
      {
        *(_OWORD *)__int128 __p = *(_OWORD *)v4;
        uint64_t v7 = v5;
      }

      sub_100AD5668(v2, (uint64_t *)__p);
      if (SHIBYTE(v7) < 0) {
        operator delete(__p[0]);
      }
    }

    if (SHIBYTE(v5) < 0) {
      operator delete(v4[0]);
    }
  }

  else
  {
    sub_100AD5D38(a1 + 8);
  }

void sub_100455410( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004554B0(uint64_t a1, void *a2)
{
  int v4 = (uint64_t)[a2 state] > 299;
  if (*(unsigned __int8 *)(a1 + 592) != v4)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018399D8);
    }
    uint64_t v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int32x2_t buf = 67109376;
      unsigned int v12 = [a2 state];
      __int16 v13 = 1024;
      int v14 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Scuba diving state changed, submersionState, %d, isScubaDiving, %d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018399D8);
      }
      uint64_t v6 = qword_1019344B8;
      v8[0] = 67109376;
      v8[1] = [a2 state];
      __int16 v9 = 1024;
      int v10 = v4;
      uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v6,  0LL,  "Scuba diving state changed, submersionState, %d, isScubaDiving, %d",  v8,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onSubmersionMeasurementUpdate(CLWaterSubmersionMeasurement *)",  "%s\n",  v7);
    }

    *(_BYTE *)(a1 + 592) = v4;
  }

void sub_100455764(id a1)
{
  qword_101995848 = -[CLDispatchSilo initWithIdentifier:]( objc_alloc(&OBJC_CLASS___CLDispatchSilo),  "initWithIdentifier:",  @"CLMotionStateMediatorSilo");
}

uint64_t sub_100455818(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100458888;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101995868 != -1) {
    dispatch_once(&qword_101995868, block);
  }
  return qword_1019A1020;
}

void sub_1004559C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8344);
  if (v3) {
    sub_1009610EC(v3, a2);
  }
  if (qword_101934940 != -1) {
    dispatch_once(&qword_101934940, &stru_10183A350);
  }
  int v4 = (os_log_s *)qword_101934948;
  if (os_log_type_enabled((os_log_t)qword_101934948, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    int v9 = *(unsigned __int8 *)(a2 + 48);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    *(_DWORD *)int32x2_t buf = 134219520;
    uint64_t v36 = v5;
    __int16 v37 = 2048;
    uint64_t v38 = v6;
    __int16 v39 = 2048;
    uint64_t v40 = v7;
    __int16 v41 = 2048;
    uint64_t v42 = v8;
    __int16 v43 = 2048;
    uint64_t v44 = v10;
    __int16 v45 = 1024;
    int v46 = v9;
    __int16 v47 = 2048;
    uint64_t v48 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Update reached MotionStateMediator, startTime, %f, mctTimestampSec, %f type, %ld, confidence, %ld, estimatedStateP robabilityOutdoor, %f, isAstronomicalDaytime, %d, daylightConfidence, %ld",  buf,  0x44u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934940 != -1) {
      dispatch_once(&qword_101934940, &stru_10183A350);
    }
    uint64_t v12 = *(void *)a2;
    uint64_t v13 = *(void *)(a2 + 8);
    uint64_t v14 = *(void *)(a2 + 16);
    uint64_t v15 = *(void *)(a2 + 24);
    int v16 = *(unsigned __int8 *)(a2 + 48);
    uint64_t v17 = *(void *)(a2 + 32);
    uint64_t v18 = *(void *)(a2 + 40);
    int v21 = 134219520;
    uint64_t v22 = v12;
    __int16 v23 = 2048;
    uint64_t v24 = v13;
    __int16 v25 = 2048;
    uint64_t v26 = v14;
    __int16 v27 = 2048;
    uint64_t v28 = v15;
    __int16 v29 = 2048;
    uint64_t v30 = v17;
    __int16 v31 = 1024;
    int v32 = v16;
    __int16 v33 = 2048;
    uint64_t v34 = v18;
    LODWORD(v2sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 68;
    __int128 v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934948,  1LL,  "Update reached MotionStateMediator, startTime, %f, mctTimestampSec, %f type, %ld, confidence, %ld, e stimatedStateProbabilityOutdoor, %f, isAstronomicalDaytime, %d, daylightConfidence, %ld",  COERCE_DOUBLE(&v21),  v20);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onOutdoorUpdate(const CLOutdoor_Type::OutdoorUpdate &)",  "%s\n",  v19);
  }

void sub_100455CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(a1 + 664);
  if (v3)
  {
    if (!objc_msgSend( v3,  "objectForKeyedSubscript:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:")))
    {
      uint64_t v7 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
      objc_msgSend( *(id *)(a1 + 664),  "setObject:forKeyedSubscript:",  v7,  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a3));
    }

    objc_msgSend( objc_msgSend( *(id *)(a1 + 664),  "objectForKeyedSubscript:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a3)),  "addObject:",  a2);
  }

  else
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    uint64_t v8 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_FAULT,  "PrepareSessionEnd, receiving addClientForPrepareSessionEnd after client list has been deleted!",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      v10[0] = 0;
      int v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "PrepareSessionEnd, receiving addClientForPrepareSessionEnd after client list has been deleted!",  v10,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMotionStateMediator::addClientForPrepareSessionEnd(id<CLMotionStateMediatorClientProtocol>, CMWorkoutType)",  "%s\n",  v9);
    }
  }

void sub_100455F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(a1 + 664);
  if (!v3)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    uint64_t v7 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "PrepareSessionEnd, Receiving removeClientForPrepareSessionEnd after client list has been deleted!",  buf,  2u);
    }

    if (!sub_1002921D0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    uint64_t v8 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "PrepareSessionEnd, Receiving removeClientForPrepareSessionEnd after client list has been deleted!");
LABEL_21:
    uint64_t v10 = (uint8_t *)v8;
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMotionStateMediator::removeClientForPrepareSessionEnd(id<CLMotionStateMediatorClientProtocol>, CMWorkoutType)",  "%s\n",  v8);
    if (v10 != buf) {
      free(v10);
    }
    return;
  }

  if (objc_msgSend( v3,  "objectForKeyedSubscript:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:")))
  {
    objc_msgSend( objc_msgSend( *(id *)(a1 + 664),  "objectForKeyedSubscript:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a3)),  "removeObject:",  a2);
    return;
  }

  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  int v9 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)int32x2_t buf = 67109120;
    int v13 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "PrepareSessionEnd, Client for PrepareSessionEnd of session type %d does not exist!",  buf,  8u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    uint64_t v8 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "PrepareSessionEnd, Client for PrepareSessionEnd of session type %d does not exist!",  &v11);
    goto LABEL_21;
  }

id sub_10045623C(uint64_t a1, double a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  int v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 134217984;
    double v10 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Workout,Setting suggested stop timeout for workout,%f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v7 = 134217984;
    double v8 = a2;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "Workout,Setting suggested stop timeout for workout,%f",  COERCE_DOUBLE(&v7));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::setWorkoutSuggestedStopTimeout(CFTimeInterval)",  "%s\n",  v6);
  }

  return [*(id *)(a1 + 320) setNextFireDelay:a2];
}

void sub_100456410(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User dismissed current workout alert.", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    v7[0] = 0;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "User dismissed current workout alert.",  v7,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateMediator::userDismissedWorkoutAlert()", "%s\n", v6);
  }

  double Current = CFAbsoluteTimeGetCurrent();
  sub_100A78E6C((void *)(a1 + 6616), Current, *(float *)(a1 + 452));
  sub_1004609D4(a1);
  uint64_t v4 = *(void *)(a1 + 10184);
  if (v4)
  {
    double v5 = CFAbsoluteTimeGetCurrent();
    sub_100D1D0DC(v4, v5);
  }

  sub_10045F2E4(a1);
}

id sub_100456814(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 128);
    *(_DWORD *)int32x2_t buf = 67240192;
    int v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#gfc didExit recieved in msm, stopping, current workout in session %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = *(unsigned __int8 *)(a1 + 128);
    v7[0] = 67240192;
    v7[1] = v5;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "#gfc didExit recieved in msm, stopping, current workout in session %{public}d",  v7,  8);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateMediator::didExitGeoFence()", "%s\n", v6);
  }

  if (sub_100F6D8D4(*(void *)(a1 + 9568)) != -1.0) {
    sub_100A78F28(a1 + 6616);
  }
  return [*(id *)(a1 + 10128) stopGeoFence];
}

id sub_100456B8C(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 128);
    *(_DWORD *)int32x2_t buf = 67240192;
    int v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "#gfc didTimeout recieved in msm, stopping, current workout in session %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = *(unsigned __int8 *)(a1 + 128);
    v7[0] = 67240192;
    v7[1] = v5;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "#gfc didTimeout recieved in msm, stopping, current workout in session %{public}d",  v7,  8);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateMediator::didTimeoutGeoFence()", "%s\n", v6);
  }

  return [*(id *)(a1 + 10128) stopGeoFence];
}

void sub_100456E10( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void *sub_100456E2C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (*((_BYTE *)result + 128))
  {
    *a2 = 0LL;
    a2[1] = 0LL;
  }

  else
  {
    int v3 = result;
    *((_BYTE *)result + 128) = 1;
    uint64_t v4 = operator new(0x120uLL);
    sub_100454AB4((uint64_t)v4, v3[4]);
    return sub_100477084(a2, (uint64_t)v4);
  }

  return result;
}

void sub_100456E94(_Unwind_Exception *a1)
{
}

id sub_100456EA8(void *a1)
{
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3321888768LL;
  int v9[2] = sub_100470350;
  v9[3] = &unk_10183A370;
  uint64_t v1 = (std::__shared_weak_count *)a1[1];
  _DWORD v9[4] = *a1;
  double v10 = v1;
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      unint64_t v3 = __ldxr(p_shared_owners);
    while (__stxr(v3 + 1, p_shared_owners));
  }

  id v4 = [v9 copy];
  int v5 = v10;
  if (v10)
  {
    uint64_t v6 = (unint64_t *)&v10->__shared_owners_;
    do
      unint64_t v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

  return v4;
}

void sub_100456F68(_Unwind_Exception *a1)
{
}

id sub_100456FA0(uint64_t a1, uint64_t a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  id v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Added client for workout session updates",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    v7[0] = 0;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Added client for workout session updates",  v7,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::registerForWorkoutSessionUpdates(id<CLMotionStateMediatorClientProtocol>)",  "%s\n",  v6);
  }

  return [*(id *)(a1 + 680) addObject:a2];
}

id sub_100457164(uint64_t a1, uint64_t a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  id v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Removed client from workout session updates",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    v7[0] = 0;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Removed client from workout session updates",  v7,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::unregisterForWorkoutSessionUpdates(id<CLMotionStateMediatorClientProtocol>)",  "%s\n",  v6);
  }

  return [*(id *)(a1 + 680) removeObject:a2];
}

void sub_1004573AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1004573C8(uint64_t a1, unsigned __int8 *uu, uint64_t a3, int a4)
{
  if (*(_BYTE *)(a1 + 461))
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    id v4 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Ignoring beginWorkoutSession because fTriggerIndoorOutdoorOnObservedPedWorkouts is true",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      *(_WORD *)uint64_t v30 = 0;
      int v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Ignoring beginWorkoutSession because fTriggerIndoorOutdoorOnObservedPedWorkouts is true",  v30,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::beginWorkoutSession(const CLMotionStateMediator_Type::WorkoutSettings &, const CLMot ionStateMediator_Type::WorkoutSessionPriors &, BOOL)",  "%s\n",  v5);
      if (v5 != buf) {
        free(v5);
      }
    }
  }

  else
  {
    uuid_unparse(uu, out);
    uuid_unparse((const unsigned __int8 *)a3, v41);
    *(_OWORD *)(a1 + 8696) = *(_OWORD *)a3;
    std::string::operator=((std::string *)(a1 + 8712), (const std::string *)(a3 + 16));
    sub_10046F8BC((void *)(a1 + 8736), (void *)(a3 + 40));
    *(_BYTE *)(a1 + 8872) = a4;
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    double v10 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      else {
        uint64_t v11 = *(void *)(a3 + 16);
      }
      *(_DWORD *)int32x2_t buf = 136315906;
      *(void *)&uint8_t buf[4] = out;
      *(_WORD *)&_BYTE buf[12] = 2080;
      *(void *)&_BYTE buf[14] = v41;
      *(_WORD *)&_BYTE buf[22] = 2080;
      *(void *)&_BYTE buf[24] = v11;
      LOWORD(v43) = 1024;
      *(_DWORD *)((char *)&v43 + 2) = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "WorkoutSession, begin workout session with workoutId, %s, overallId, %s, appId, %s, allow detection, %d",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      else {
        uint64_t v22 = *(void *)(a3 + 16);
      }
      *(_DWORD *)uint64_t v30 = 136315906;
      *(void *)&v30[4] = out;
      *(_WORD *)&_BYTE v30[12] = 2080;
      *(void *)&v30[14] = v41;
      *(_WORD *)&v30[22] = 2080;
      *(void *)&v30[24] = v22;
      LOWORD(v31) = 1024;
      *(_DWORD *)((char *)&v31 + 2) = a4;
      __int16 v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, begin workout session with workoutId, %s, overallId, %s, appId, %s, allow detection, %d",  v30,  38,  (const char *)v25,  DWORD2(v25));
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::beginWorkoutSession(const CLMotionStateMediator_Type::WorkoutSettings &, const CLMot ionStateMediator_Type::WorkoutSessionPriors &, BOOL)",  "%s\n",  v23);
      if (v23 != buf) {
        free(v23);
      }
    }

    __int128 v12 = *((_OWORD *)uu + 9);
    __int128 v37 = *((_OWORD *)uu + 8);
    __int128 v38 = v12;
    uint64_t v39 = *((void *)uu + 20);
    __int128 v13 = *((_OWORD *)uu + 5);
    __int128 v33 = *((_OWORD *)uu + 4);
    __int128 v34 = v13;
    __int128 v14 = *((_OWORD *)uu + 7);
    __int128 v35 = *((_OWORD *)uu + 6);
    __int128 v36 = v14;
    __int128 v15 = *((_OWORD *)uu + 1);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)uu;
    *(_OWORD *)&v30[16] = v15;
    __int128 v16 = *((_OWORD *)uu + 3);
    __int128 v31 = *((_OWORD *)uu + 2);
    __int128 v32 = v16;
    if (*(_BYTE *)(a1 + 396) && (void)v32 == 14LL) {
      *(void *)&__int128 v32 = *(int *)(a1 + 400);
    }
    if (a4)
    {
      unint64_t v17 = *(void *)(a3 + 80);
      sub_1002C4014((uint64_t)&v25);
      if (*(void *)(a3 + 80) < 2uLL)
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_1018399F8);
        }
        int v21 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int32x2_t buf = 136315138;
          *(void *)&uint8_t buf[4] = v41;
          _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "WorkoutSession, no priors but requesting detection, %s",  buf,  0xCu);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_1018399F8);
          }
          int v28 = 136315138;
          __int16 v29 = v41;
          uint64_t v24 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "WorkoutSession, no priors but requesting detection, %s",  (const char *)&v28);
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMotionStateMediator::beginWorkoutSession(const CLMotionStateMediator_Type::WorkoutSettings &, const C LMotionStateMediator_Type::WorkoutSessionPriors &, BOOL)",  "%s\n",  v24);
          if (v24 != buf) {
            free(v24);
          }
        }
      }

      else
      {
        BOOL v18 = v17 > 1;
        __int128 v19 = operator new(0x350uLL);
        *(_OWORD *)int32x2_t buf = v25;
        *(_OWORD *)&uint8_t buf[16] = v26;
        __int128 v43 = v27;
        sub_1004FE830(v19, v30, a3, a1 + 6648, v18, a1 + 120, buf);
        sub_100463D44((uint64_t *)(a1 + 8688), (uint64_t)v19);
        sub_10045BFE0(a1, (uint64_t *)(a1 + 528), 256);
        sub_10045BFE0(a1, (uint64_t *)(a1 + 560), 256);
      }
    }

    else
    {
      sub_1002C4014((uint64_t)&v25);
      double v20 = operator new(0x350uLL);
      *(_OWORD *)int32x2_t buf = v25;
      *(_OWORD *)&uint8_t buf[16] = v26;
      __int128 v43 = v27;
      sub_1004FE830(v20, v30, a3, a1 + 6648, 0LL, a1 + 120, buf);
      sub_100463D44((uint64_t *)(a1 + 8688), (uint64_t)v20);
      if (*(void *)(a3 + 80) >= 2uLL)
      {
        sub_10045BFE0(a1, (uint64_t *)(a1 + 528), 256);
        sub_10045BFE0(a1, (uint64_t *)(a1 + 560), 256);
      }
    }

    sub_10045BFE0(a1, (uint64_t *)(a1 + 464), 256);
  }

void sub_100457A48(_Unwind_Exception *a1)
{
}

uint64_t sub_100457A68(uint64_t a1)
{
  return a1;
}

uint64_t sub_100457ACC(uint64_t a1, unsigned __int8 *uu, int a3)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 136315394;
    *(void *)&uint8_t buf[4] = out;
    *(_WORD *)&_BYTE buf[12] = 1024;
    *(_DWORD *)&_BYTE buf[14] = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "WorkoutSession, set current workout type in session, %s, isManualTransition, %d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v14 = 136315394;
    __int128 v15 = out;
    __int16 v16 = 1024;
    int v17 = a3;
    __int128 v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, set current workout type in session, %s, isManualTransition, %d",  (const char *)&v14,  18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::setCurrentWorkoutType(const CLMotionStateMediator_Type::WorkoutSettings &, BOOL)",  "%s\n",  v13);
    if (v13 != buf) {
      free(v13);
    }
  }

  __int128 v7 = *((_OWORD *)uu + 9);
  __int128 v25 = *((_OWORD *)uu + 8);
  __int128 v26 = v7;
  uint64_t v27 = *((void *)uu + 20);
  __int128 v8 = *((_OWORD *)uu + 5);
  __int128 v21 = *((_OWORD *)uu + 4);
  __int128 v22 = v8;
  __int128 v9 = *((_OWORD *)uu + 7);
  __int128 v23 = *((_OWORD *)uu + 6);
  __int128 v24 = v9;
  __int128 v10 = *((_OWORD *)uu + 1);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)uu;
  *(_OWORD *)&uint8_t buf[16] = v10;
  __int128 v11 = *((_OWORD *)uu + 3);
  __int128 v19 = *((_OWORD *)uu + 2);
  __int128 v20 = v11;
  if (*(_BYTE *)(a1 + 396) && (void)v20 == 14LL) {
    *(void *)&__int128 v20 = *(int *)(a1 + 400);
  }
  return sub_1004FE834(*(void *)(a1 + 8688), (uint64_t)buf, a3);
}

uint64_t sub_100457D54(uint64_t a1, unsigned __int8 *uu)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  unint64_t v3 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    __int128 v9 = out;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "WorkoutSession, pause workout, %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v6 = 136315138;
    __int128 v7 = out;
    int v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, pause workout, %s",  (const char *)&v6);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::pauseWorkout(const CLMotionStateMediator_Type::WorkoutSettings &)",  "%s\n",  v5);
  }

  return sub_1004FF0AC(*(void *)(a1 + 8688));
}

uint64_t sub_100457F44(uint64_t a1, unsigned __int8 *uu)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  id v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    *(void *)&uint8_t buf[4] = out;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "WorkoutSession, resume workout, %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v12 = 136315138;
    __int128 v13 = out;
    __int128 v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "WorkoutSession, resume workout, %s",  (const char *)&v12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::resumeWorkout(const CLMotionStateMediator_Type::WorkoutSettings &)",  "%s\n",  v11);
  }

  __int128 v5 = *((_OWORD *)uu + 9);
  __int128 v22 = *((_OWORD *)uu + 8);
  __int128 v23 = v5;
  uint64_t v24 = *((void *)uu + 20);
  __int128 v6 = *((_OWORD *)uu + 5);
  __int128 v18 = *((_OWORD *)uu + 4);
  __int128 v19 = v6;
  __int128 v7 = *((_OWORD *)uu + 7);
  __int128 v20 = *((_OWORD *)uu + 6);
  __int128 v21 = v7;
  __int128 v8 = *((_OWORD *)uu + 1);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)uu;
  __int128 v15 = v8;
  __int128 v9 = *((_OWORD *)uu + 3);
  __int128 v16 = *((_OWORD *)uu + 2);
  __int128 v17 = v9;
  if (*(_BYTE *)(a1 + 396) && (void)v17 == 14LL) {
    *(void *)&__int128 v17 = *(int *)(a1 + 400);
  }
  return sub_1004FE834(*(void *)(a1 + 8688), (uint64_t)buf, 1);
}

void sub_100458364(_Unwind_Exception *a1)
{
}

id sub_1004583A4(__int128 *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768LL;
  v4[2] = sub_100470458;
  void v4[3] = &unk_10183A3A0;
  __int128 v5 = *a1;
  if (*((char *)a1 + 39) < 0)
  {
    sub_1010DD48C(&__p, *((void **)a1 + 2), *((void *)a1 + 3));
  }

  else
  {
    __int128 __p = a1[1];
    uint64_t v7 = *((void *)a1 + 4);
  }

  sub_10046A230((uint64_t)v8, (void *)a1 + 5);
  id v2 = [v4 copy];
  sub_10041385C(v8);
  if (SHIBYTE(v7) < 0) {
    operator delete((void *)__p);
  }
  return v2;
}

void sub_1004584A4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

uint64_t sub_1004584D8(uint64_t a1)
{
  return a1;
}

void sub_100458600(unsigned __int8 *a1, uint64_t a2, int a3)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  __int128 v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 134349312;
    uint64_t v14 = a2;
    __int16 v15 = 1026;
    int v16 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Workout, reminder mute settings, updating %{public}ld to %{public}d",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v9 = 134349312;
    uint64_t v10 = a2;
    __int16 v11 = 1026;
    int v12 = a3;
    __int128 v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout, reminder mute settings, updating %{public}ld to %{public}d",  &v9,  18);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::updateWorkoutReminderMuteSetting(CMWorkoutReminderType, BOOL)",  "%s\n",  v8);
  }

  if (a2)
  {
    if (a2 == 2)
    {
      a1[553] = 0;
      return;
    }

    if (a2 != 1) {
      return;
    }
    int v7 = a1[521];
    a1[521] = a3;
  }

  else
  {
    int v7 = a1[489];
    a1[489] = a3;
  }

  if (v7 != a3) {
    sub_100460014((uint64_t)a1);
  }
}

void sub_100458858(id a1)
{
  if (sub_1004F7000())
  {
    if (sub_1008FA690()) {
      byte_101995858 = 1;
    }
  }

std::string::size_type sub_100458888(uint64_t a1)
{
  id v2 = operator new(0x2928uLL);
  std::string::size_type result = sub_100458974((std::string::size_type)v2, *(void **)(a1 + 32));
  qword_1019A1020 = (uint64_t)v2;
  return result;
}

void sub_1004588C0(_Unwind_Exception *a1)
{
}

uint64_t sub_1004588D4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100458948;
  block[3] = &unk_10181A288;
  block[4] = a1;
  if (qword_101995878 != -1) {
    dispatch_once(&qword_101995878, block);
  }
  return byte_101995870;
}

id sub_100458948(uint64_t a1)
{
  id result = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "isServiceEnabled:", @"CLMotionStateMediator");
  byte_101995870 = (char)result;
  return result;
}

std::string::size_type sub_100458974(std::string::size_type a1, void *a2)
{
  uint64_t v3 = sub_10045A9D4(a1, "CLMotionStateMediator", a2);
  *(void *)(v3 + 112) = off_1018397C0;
  uint64_t v4 = v3 + 112;
  *(void *)uint64_t v3 = off_101839680;
  *(void *)(v3 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = &off_101839800;
  *(_BYTE *)(v3 + 128) = 0;
  sub_100808704(v3 + 136);
  *(void *)(a1 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = [*(id *)(a1 + 40) newTimer];
  *(void *)(a1 + 328) = 0LL;
  *(_OWORD *)(a1 + 336) = xmmword_1012EB2C8;
  *(_OWORD *)(a1 + 352) = unk_1012EB2D8;
  *(_OWORD *)(a1 + 368) = xmmword_1012EB2E8;
  *(_OWORD *)(a1 + 38sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(__int128 *)((char *)&xmmword_1012EB2E8 + 12);
  LODWORD(v176) = 0;
  sub_10023AE2C((unsigned __int8 *)(a1 + 396), "ForceOtherWorkoutOverride", &v176, 0);
  LODWORD(v176) = 0;
  sub_10023AE2C((unsigned __int8 *)(a1 + 408), "ForceWorkoutLocationType", &v176, 0);
  LODWORD(v176) = 150;
  sub_10023AE2C((unsigned __int8 *)(a1 + 420), "ForceMaxSecondsForWorkoutLocationTypeDisambiguation", &v176, 0);
  LOBYTE(v176) = 0;
  sub_1012049AC((unsigned __int8 *)(a1 + 432), "EnableForcedWorkoutLocationUpdatesFromSPI", (unsigned __int8 *)&v176, 0);
  LODWORD(v176) = 0;
  sub_10023AE2C((unsigned __int8 *)(a1 + 436), "NumAllowedIndoorOutdoorNotificationsPerHour", &v176, 0);
  LODWORD(v176) = 1155596288;
  sub_101206C88((unsigned __int8 *)(a1 + 448), "MuteWorkoutAlertsForSecondsAfterUserDismissal", &v176, 0);
  v174.__r_.__value_.__s.__data_[0] = 0;
  sub_1012049AC((unsigned __int8 *)&v176, "EnableALSActiveScansAOP", (unsigned __int8 *)&v174, 0);
  if (BYTE1(v176))
  {
    sub_1004F2598();
    char v5 = sub_1004FC5C4();
  }

  else
  {
    char v5 = 0;
  }

  *(_BYTE *)(a1 + 46sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v5;
  *(_WORD *)(a1 + 461) = 0;
  sub_1010DDBC0((void *)(a1 + 464), "start");
  *(_DWORD *)(a1 + 488) = 0;
  sub_1010DDBC0((void *)(a1 + 496), "resume");
  *(_DWORD *)(a1 + 52sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  sub_1010DDBC0((void *)(a1 + 528), "end");
  *(_DWORD *)(a1 + 552) = 0;
  sub_1010DDBC0((void *)(a1 + 560), "autoPause");
  *(_BYTE *)(a1 + 592) = 0;
  __int128 v6 = (uint64_t *)(a1 + 616);
  *(_DWORD *)(a1 + 584) = 0;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(void *)(a1 + 664) = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  *(void *)(a1 + 672) = 0LL;
  *(_WORD *)(a1 + 688) = 0;
  sub_1004705A4((void *)(a1 + 696), *(void **)(a1 + 32));
  sub_100473764((void *)(a1 + 4112));
  uint64_t v151 = 0x407E000000000000LL;
  sub_1004728A0( "VO2MaxEstimatePowerBudget",  "SensitiveEscalationPowerAssertion",  (uint64_t)"CLWorkoutPredictor_SensitiveEscalation",  (double *)&v151,  &v152);
  uint64_t v149 = 0x407E000000000000LL;
  sub_100472A88( "ExtendedVO2MaxEstimatePowerBudget",  "ExtendedSensitiveEscalationPowerAssertion",  (uint64_t)"CLWorkoutPredictor_ExtendedSensitiveEscalation",  (double *)&v149,  &v150);
  uint64_t v147 = 0x407E000000000000LL;
  sub_100472B00( "StairsEscalationPowerBudget",  "SensitiveStairsEscalationPowerAssertion",  (uint64_t)"CLWorkoutPredictor_SensitiveEscalation",  (double *)&v147,  &v148);
  int v7 = operator new(0x180uLL);
  _DWORD v7[2] = 0LL;
  *int v7 = off_10183A510;
  v7[1] = 0LL;
  __int128 v8 = v152;
  __int128 v152 = 0uLL;
  __int128 v9 = v150;
  __int128 v150 = 0uLL;
  __int128 v154 = v9;
  __int128 v155 = v8;
  __int128 v153 = v148;
  __int128 v148 = 0uLL;
  __int128 v176 = (void **)&off_10183A560;
  uint64_t v177 = a1;
  __int128 v179 = (uint64_t *)&v176;
  v174.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10183A5F0;
  v174.__r_.__value_.__l.__size_ = a1;
  int v175 = &v174;
  v172[0] = &off_10183A670;
  v172[1] = a1;
  __int128 v173 = v172;
  sub_100B65F68(v7 + 3, &v155, &v154, &v153, &v176, &v174, v172);
  uint64_t v10 = v173;
  if (v173 == v172)
  {
    uint64_t v11 = 4LL;
    uint64_t v10 = v172;
  }

  else
  {
    if (!v173) {
      goto LABEL_9;
    }
    uint64_t v11 = 5LL;
  }

  (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_9:
  int v12 = v175;
  if (v175 == &v174)
  {
    uint64_t v13 = 4LL;
    int v12 = &v174;
  }

  else
  {
    if (!v175) {
      goto LABEL_14;
    }
    uint64_t v13 = 5LL;
  }

  (*(void (**)(void))(v12->__r_.__value_.__r.__words[0] + 8 * v13))();
LABEL_14:
  uint64_t v14 = (void ***)v179;
  if (v179 == (uint64_t *)&v176)
  {
    uint64_t v15 = 4LL;
    uint64_t v14 = &v176;
    goto LABEL_18;
  }

  if (v179)
  {
    uint64_t v15 = 5LL;
LABEL_18:
    ((void (*)(void))(*v14)[v15])();
  }

  int v16 = (std::__shared_weak_count *)*((void *)&v153 + 1);
  if (*((void *)&v153 + 1))
  {
    __int128 v17 = (unint64_t *)(*((void *)&v153 + 1) + 8LL);
    do
      unint64_t v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }

  __int128 v19 = (std::__shared_weak_count *)*((void *)&v154 + 1);
  if (*((void *)&v154 + 1))
  {
    __int128 v20 = (unint64_t *)(*((void *)&v154 + 1) + 8LL);
    do
      unint64_t v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }

  __int128 v22 = (std::__shared_weak_count *)*((void *)&v155 + 1);
  if (*((void *)&v155 + 1))
  {
    __int128 v23 = (unint64_t *)(*((void *)&v155 + 1) + 8LL);
    do
      unint64_t v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }

  *(void *)(a1 + 660sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v7 + 3;
  *(void *)(a1 + 6608) = v7;
  __int128 v25 = (std::__shared_weak_count *)*((void *)&v148 + 1);
  if (*((void *)&v148 + 1))
  {
    __int128 v26 = (unint64_t *)(*((void *)&v148 + 1) + 8LL);
    do
      unint64_t v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }

  int v28 = (std::__shared_weak_count *)*((void *)&v150 + 1);
  if (*((void *)&v150 + 1))
  {
    __int16 v29 = (unint64_t *)(*((void *)&v150 + 1) + 8LL);
    do
      unint64_t v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }

  __int128 v31 = (std::__shared_weak_count *)*((void *)&v152 + 1);
  if (*((void *)&v152 + 1))
  {
    __int128 v32 = (unint64_t *)(*((void *)&v152 + 1) + 8LL);
    do
      unint64_t v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }

  v170[0] = &off_10183A700;
  v170[1] = a1;
  __int128 v171 = v170;
  __int128 v34 = *(std::__shared_weak_count **)(a1 + 6608);
  uint64_t v145 = *(void *)(a1 + 6600);
  __int128 v146 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      unint64_t v36 = __ldxr(p_shared_owners);
    while (__stxr(v36 + 1, p_shared_owners));
  }

  sub_100A77240(a1 + 6616, a1 + 696, v170, &v145, v4);
  __int128 v37 = v146;
  if (v146)
  {
    __int128 v38 = (unint64_t *)&v146->__shared_owners_;
    do
      unint64_t v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }

  uint64_t v40 = v171;
  if (v171 == v170)
  {
    uint64_t v41 = 4LL;
    uint64_t v40 = v170;
  }

  else
  {
    if (!v171) {
      goto LABEL_62;
    }
    uint64_t v41 = 5LL;
  }

  (*(void (**)(void))(*v40 + 8 * v41))();
LABEL_62:
  *(_OWORD *)(a1 + 8224) = 0u;
  sub_100AD558C(a1 + 8240, (uint64_t)"CLWorkoutPredictor", a1, 3600.0);
  sub_100AD558C(a1 + 8288, (uint64_t)"CLWorkoutSeriesPredictor", a1, 3600.0);
  uint64_t v42 = operator new(8uLL);
  sub_100518538(v42, @"com.apple.CoreMotion.WorkoutEscalation");
  *(void *)(a1 + 8336) = v42;
  *(void *)(a1 + 8344) = 0LL;
  uint64_t v43 = *(void *)(a1 + 32);
  v168[0] = &off_10183A790;
  v168[1] = a1;
  __int128 v169 = v168;
  v166[0] = &off_10183A810;
  v166[1] = a1;
  __int128 v167 = v166;
  v164[0] = &off_10183A890;
  v164[1] = a1;
  __int128 v165 = v164;
  sub_100AEC54C(a1 + 8352, v43);
  uint64_t v44 = v165;
  if (v165 == v164)
  {
    uint64_t v45 = 4LL;
    uint64_t v44 = v164;
  }

  else
  {
    if (!v165) {
      goto LABEL_67;
    }
    uint64_t v45 = 5LL;
  }

  (*(void (**)(void))(*v44 + 8 * v45))();
LABEL_67:
  int v46 = v167;
  if (v167 == v166)
  {
    uint64_t v47 = 4LL;
    int v46 = v166;
  }

  else
  {
    if (!v167) {
      goto LABEL_72;
    }
    uint64_t v47 = 5LL;
  }

  (*(void (**)(void))(*v46 + 8 * v47))();
LABEL_72:
  uint64_t v48 = v169;
  if (v169 == v168)
  {
    uint64_t v49 = 4LL;
    uint64_t v48 = v168;
    goto LABEL_76;
  }

  if (v169)
  {
    uint64_t v49 = 5LL;
LABEL_76:
    (*(void (**)(void))(*v48 + 8 * v49))();
  }

  *(void *)(a1 + 8864) = 0LL;
  *(_OWORD *)(a1 + 8848) = 0u;
  *(_OWORD *)(a1 + 8832) = 0u;
  *(_OWORD *)(a1 + 8816) = 0u;
  *(_OWORD *)(a1 + 880sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 8784) = 0u;
  *(_OWORD *)(a1 + 8768) = 0u;
  *(_OWORD *)(a1 + 8752) = 0u;
  *(_OWORD *)(a1 + 8736) = 0u;
  *(_OWORD *)(a1 + 872sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 8704) = 0u;
  *(_OWORD *)(a1 + 8688) = 0u;
  *(_DWORD *)(a1 + 8876) = 2;
  *(_BYTE *)(a1 + 8899) = 0;
  *(_OWORD *)(a1 + 888sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_WORD *)(a1 + 8896) = 0;
  *(_DWORD *)(a1 + 890sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 1;
  *(_OWORD *)(a1 + 8904) = 0u;
  *(void *)(a1 + 8936) = 0LL;
  *(_OWORD *)(a1 + 892sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_WORD *)(a1 + 8904) = 257;
  *(_DWORD *)(a1 + 8912) = 0;
  *(_OWORD *)(a1 + 892sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_DWORD *)(a1 + 8936) = 0;
  *(_BYTE *)(a1 + 8944) = 0;
  *(void *)(a1 + 8952) = 0xBFF0000000000000LL;
  *(int64x2_t *)(a1 + 896sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = vdupq_n_s64(0x1AuLL);
  *(_DWORD *)(a1 + 8976) = -1;
  *(_OWORD *)(a1 + 898sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 8996) = 0u;
  *(_OWORD *)(a1 + 9012) = 0u;
  *(_OWORD *)(a1 + 9028) = 0u;
  *(_OWORD *)(a1 + 9044) = 0u;
  *(_OWORD *)(a1 + 906sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 9076) = 0u;
  *(_OWORD *)(a1 + 9092) = 0u;
  *(_OWORD *)(a1 + 9108) = 0u;
  *(_OWORD *)(a1 + 9124) = 0u;
  *(_OWORD *)(a1 + 914sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 9156) = 0u;
  *(_OWORD *)(a1 + 9172) = 0u;
  *(_OWORD *)(a1 + 9188) = 0u;
  *(_OWORD *)(a1 + 9204) = 0u;
  *(_DWORD *)(a1 + 922sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  *(void *)(a1 + 9104) = 26LL;
  *(void *)(a1 + 9448) = 0LL;
  *(_OWORD *)(a1 + 9416) = 0u;
  *(_OWORD *)(a1 + 9432) = 0u;
  *(_OWORD *)(a1 + 9384) = 0u;
  *(_OWORD *)(a1 + 940sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 9352) = 0u;
  *(_OWORD *)(a1 + 9368) = 0u;
  *(_OWORD *)(a1 + 932sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 9336) = 0u;
  *(_OWORD *)(a1 + 9288) = 0u;
  *(_OWORD *)(a1 + 9304) = 0u;
  *(_OWORD *)(a1 + 9256) = 0u;
  *(_OWORD *)(a1 + 9272) = 0u;
  *(_OWORD *)(a1 + 9224) = 0u;
  *(_OWORD *)(a1 + 924sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(void *)(a1 + 9336) = 26LL;
  *(_OWORD *)(a1 + 9456) = 0u;
  *(void *)(a1 + 9472) = 23LL;
  *(_OWORD *)(a1 + 9672) = 0u;
  *(_OWORD *)(a1 + 9656) = 0u;
  *(_OWORD *)(a1 + 964sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 9624) = 0u;
  *(_OWORD *)(a1 + 9608) = 0u;
  *(_OWORD *)(a1 + 9592) = 0u;
  *(_OWORD *)(a1 + 9576) = 0u;
  *(_OWORD *)(a1 + 956sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 9544) = 0u;
  *(_OWORD *)(a1 + 9528) = 0u;
  *(_OWORD *)(a1 + 9512) = 0u;
  *(_OWORD *)(a1 + 9496) = 0u;
  *(_OWORD *)(a1 + 948sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(void *)(a1 + 9568) = 26LL;
  *(_DWORD *)(a1 + 9704) = 0xFFFF;
  *(void *)(a1 + 9716) = 0LL;
  *(void *)(a1 + 9708) = 0LL;
  __asm { FMOV            V1.2D, #-1.0 }

  *(_OWORD *)(a1 + 9724) = xmmword_1012E0070;
  *(_OWORD *)(a1 + 974sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = _Q1;
  *(_OWORD *)(a1 + 9756) = _Q1;
  *(_OWORD *)(a1 + 9772) = _Q1;
  *(_DWORD *)(a1 + 9788) = 0;
  *(void *)(a1 + 9792) = 0xBFF0000000000000LL;
  *(void *)(a1 + 9808) = 0LL;
  *(void *)(a1 + 980sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(_DWORD *)(a1 + 9816) = 0;
  *(void *)(a1 + 982sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 9828) = 0x7FFFFFFF;
  *(void *)(a1 + 984sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(void *)(a1 + 9832) = 0LL;
  *(_BYTE *)(a1 + 9856) = 0;
  *(void *)(a1 + 9848) = 0LL;
  *(void *)(a1 + 9864) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 1012sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  *(void *)(a1 + 10128) = 0LL;
  *(_BYTE *)(a1 + 10112) = 0;
  *(_OWORD *)(a1 + 10096) = 0u;
  *(_OWORD *)(a1 + 1008sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 10064) = 0u;
  *(_OWORD *)(a1 + 10048) = 0u;
  *(_OWORD *)(a1 + 10032) = 0u;
  *(_OWORD *)(a1 + 10016) = 0u;
  *(_OWORD *)(a1 + 1000sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 9984) = 0u;
  *(_OWORD *)(a1 + 9968) = 0u;
  *(_OWORD *)(a1 + 9952) = 0u;
  *(_OWORD *)(a1 + 9936) = 0u;
  *(_OWORD *)(a1 + 992sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 9904) = 0u;
  *(_OWORD *)(a1 + 9888) = 0u;
  *(_OWORD *)(a1 + 9872) = 0u;
  *(_OWORD *)(a1 + 10136) = xmmword_1012EB308;
  *(void *)(a1 + 10152) = 0LL;
  __int128 v141 = (uint64_t *)(a1 + 10176);
  *(void *)(a1 + 10288) = 0LL;
  *(_BYTE *)(a1 + 10296) = 0;
  *(_BYTE *)(a1 + 10168) = 0;
  *(void *)(a1 + 1016sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(void *)(a1 + 10272) = 0LL;
  *(_OWORD *)(a1 + 10256) = 0u;
  *(_OWORD *)(a1 + 1024sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 10224) = 0u;
  *(_OWORD *)(a1 + 10208) = 0u;
  *(_OWORD *)(a1 + 10192) = 0u;
  *(_OWORD *)(a1 + 10176) = 0u;
  sub_100AEB404(a1 + 10304, "MotionCalibration", *(void *)(a1 + 32));
  *(void *)(a1 + 10528) = 0LL;
  std::string::size_type v55 = a1 + 10496;
  *(_OWORD *)(a1 + 10512) = 0u;
  *(_OWORD *)(a1 + 10496) = 0u;
  sub_1006A5A9C(a1 + 4112, v4, &v176);
  __int128 v56 = v176;
  __int128 v176 = 0LL;
  uint64_t v57 = *(void *)(a1 + 8232);
  *(void *)(a1 + 8232) = v56;
  if (v57)
  {
    (*(void (**)(uint64_t))(*(void *)v57 + 8LL))(v57);
    __int128 v58 = v176;
    __int128 v176 = 0LL;
    if (v58) {
      (*((void (**)(void **))*v58 + 1))(v58);
    }
  }

  sub_1004F2598();
  if (sub_1001B9A1C())
  {
    if ((sub_1004F97F4() & 0x400000000000000LL) != 0)
    {
      __int128 v59 = operator new(0x2D0uLL);
      sub_10095F7C0();
      uint64_t v60 = *(void *)(a1 + 8344);
      *(void *)(a1 + 8344) = v59;
      if (v60) {
        (*(void (**)(uint64_t))(*(void *)v60 + 8LL))(v60);
      }
    }
  }

  __int128 v61 = operator new(0x38uLL);
  sub_1003DE40C(v61, *(void **)(a1 + 40), (uint64_t)sub_10045AA70, a1, 0LL);
  *(void *)(a1 + 60sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v61;
  __int128 v62 = operator new(0x38uLL);
  sub_1003DE40C(v62, *(void **)(a1 + 40), (uint64_t)sub_10045AAB4, a1, 0LL);
  *(void *)(a1 + 608) = v62;
  __int128 v63 = operator new(0x38uLL);
  sub_1003DE40C(v63, *(void **)(a1 + 40), (uint64_t)sub_10045AC88, a1, 0LL);
  uint64_t *v6 = (uint64_t)v63;
  uint64_t v64 = sub_1008FA854(0);
  sub_1006DCB40(v64, 0, *(void *)(a1 + 600), -1.0);
  uint64_t v65 = sub_1008FA854(0);
  sub_1006DCB40(v65, 1, *(void *)(a1 + 608), -1.0);
  uint64_t v66 = sub_1008FA854(0);
  sub_1006DCB40(v66, 9, *v6, -1.0);
  sub_1004F2598();
  if ((sub_1004F97F4() & 0x1000000000LL) != 0)
  {
    __int128 v67 = operator new(0x38uLL);
    sub_1003DE40C(v67, *(void **)(a1 + 40), (uint64_t)sub_10045AE5C, a1, 0LL);
    *(void *)(a1 + 624) = v67;
    uint64_t v68 = sub_1008FA854(0);
    sub_1006DCB40(v68, 20, *(void *)(a1 + 624), -1.0);
  }

  __int128 v69 = operator new(0x38uLL);
  sub_1003DE40C(v69, *(void **)(a1 + 40), (uint64_t)sub_10045B044, a1, 0LL);
  *(void *)(a1 + 64sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v69;
  uint64_t v70 = sub_1008FA854(0);
  sub_1006DCB40(v70, 33, *(void *)(a1 + 640), -1.0);
  *(void *)(a1 + 656) = -[CLMediatorSubmersionClient initWithMediator:]( objc_alloc(&OBJC_CLASS___CLMediatorSubmersionClient),  "initWithMediator:",  a1);
  id v71 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLBarometerCalibration");
  *(void *)(a1 + 648) = v71;
  objc_msgSend(v71, "registerDelegate:inSilo:", *(void *)(a1 + 656), objc_msgSend(*(id *)(a1 + 32), "silo"));
  [*(id *)(a1 + 648) setDelegateEntityName:"CLSubmersionClient"];
  [*(id *)(a1 + 648) registerClient:*(void *)(a1 + 656) forNotification:3];
  sub_1004F2598();
  if (sub_1004F8A40())
  {
    uint64_t v72 = sub_1006E27E8();
    sub_100413284(v72, &v176);
    sub_1002A6F64((uint64_t)v176, "AutoPauseTestHaptic", (BOOL *)(a1 + 462));
    __int128 v73 = (std::__shared_weak_count *)v177;
    if (v177)
    {
      __int128 v74 = (unint64_t *)(v177 + 8);
      do
        unint64_t v75 = __ldaxr(v74);
      while (__stlxr(v75 - 1, v74));
      if (!v75)
      {
        ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
        std::__shared_weak_count::__release_weak(v73);
      }
    }
  }

  sub_100E18F18((uint64_t)sub_10045B224, a1, *(void **)(a1 + 32), &v176);
  int v76 = v176;
  __int128 v176 = 0LL;
  uint64_t v77 = *(void *)(a1 + 10192);
  *(void *)(a1 + 10192) = v76;
  if (v77)
  {
    (*(void (**)(uint64_t))(*(void *)v77 + 8LL))(v77);
    __int128 v78 = v176;
    __int128 v176 = 0LL;
    if (v78) {
      (*((void (**)(void **))*v78 + 1))(v78);
    }
  }

  [*(id *)(*(void *)(a1 + 10192) + 16) register:*(void *)(*(void *)(a1 + 10192) + 8) forNotification:2 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10192) + 16) register:*(void *)(*(void *)(a1 + 10192) + 8) forNotification:4 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10192) + 16) register:*(void *)(*(void *)(a1 + 10192) + 8) forNotification:6 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10192) + 16) register:*(void *)(*(void *)(a1 + 10192) + 8) forNotification:7 registrationInfo:0];
  v144[0] = _NSConcreteStackBlock;
  v144[1] = 3221225472LL;
  void v144[2] = sub_10045B3FC;
  v144[3] = &unk_10181D3D0;
  v144[4] = a1;
  [*(id *)(a1 + 320) setHandler:v144];
  sub_1009A79AC((uint64_t)sub_10045B4C4, a1, *(void **)(a1 + 32), &v176);
  __int128 v79 = v176;
  __int128 v176 = 0LL;
  uint64_t v80 = *(void *)(a1 + 10200);
  *(void *)(a1 + 1020sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v79;
  if (v80)
  {
    (*(void (**)(uint64_t))(*(void *)v80 + 8LL))(v80);
    __int128 v81 = v176;
    __int128 v176 = 0LL;
    if (v81) {
      (*((void (**)(void **))*v81 + 1))(v81);
    }
  }

  sub_1005C4E40((uint64_t)sub_10045B6A8, a1, *(void **)(a1 + 32), &v176);
  __int128 v82 = v176;
  __int128 v176 = 0LL;
  uint64_t v83 = *(void *)(a1 + 10208);
  *(void *)(a1 + 10208) = v82;
  if (v83)
  {
    (*(void (**)(uint64_t))(*(void *)v83 + 8LL))(v83);
    __int128 v84 = v176;
    __int128 v176 = 0LL;
    if (v84) {
      (*((void (**)(void **))*v84 + 1))(v84);
    }
  }

  [*(id *)(*(void *)(a1 + 10208) + 16) register:*(void *)(*(void *)(a1 + 10208) + 8) forNotification:1 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10208) + 16) register:*(void *)(*(void *)(a1 + 10208) + 8) forNotification:0 registrationInfo:0];
  sub_1003CC884((uint64_t)sub_10045B880, a1, *(void **)(a1 + 32), &v176);
  __int128 v85 = v176;
  __int128 v176 = 0LL;
  uint64_t v86 = *(void *)(a1 + 10216);
  *(void *)(a1 + 10216) = v85;
  if (v86)
  {
    (*(void (**)(uint64_t))(*(void *)v86 + 8LL))(v86);
    char v87 = v176;
    __int128 v176 = 0LL;
    if (v87) {
      (*((void (**)(void **))*v87 + 1))(v87);
    }
  }

  [*(id *)(*(void *)(a1 + 10216) + 16) register:*(void *)(*(void *)(a1 + 10216) + 8) forNotification:7 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10216) + 16) register:*(void *)(*(void *)(a1 + 10216) + 8) forNotification:15 registrationInfo:0];
  sub_10070EDF0((uint64_t)sub_10045BA58, a1, *(void **)(a1 + 32), &v176);
  __int128 v88 = v176;
  __int128 v176 = 0LL;
  uint64_t v89 = *(void *)(a1 + 10224);
  *(void *)(a1 + 10224) = v88;
  if (v89)
  {
    (*(void (**)(uint64_t))(*(void *)v89 + 8LL))(v89);
    __int128 v90 = v176;
    __int128 v176 = 0LL;
    if (v90) {
      (*((void (**)(void **))*v90 + 1))(v90);
    }
  }

  [*(id *)(*(void *)(a1 + 10224) + 16) register:*(void *)(*(void *)(a1 + 10224) + 8) forNotification:6 registrationInfo:0];
  sub_10060B0A4((uint64_t)sub_10045BC30, a1, *(void **)(a1 + 32), &v176);
  __int128 v91 = v176;
  __int128 v176 = 0LL;
  uint64_t v92 = *(void *)(a1 + 10232);
  *(void *)(a1 + 10232) = v91;
  if (v92)
  {
    (*(void (**)(uint64_t))(*(void *)v92 + 8LL))(v92);
    __int128 v93 = v176;
    __int128 v176 = 0LL;
    if (v93) {
      (*((void (**)(void **))*v93 + 1))(v93);
    }
  }

  [*(id *)(*(void *)(a1 + 10232) + 16) register:*(void *)(*(void *)(a1 + 10232) + 8) forNotification:1 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10232) + 16) register:*(void *)(*(void *)(a1 + 10232) + 8) forNotification:2 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10232) + 16) register:*(void *)(*(void *)(a1 + 10232) + 8) forNotification:7 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10232) + 16) register:*(void *)(*(void *)(a1 + 10232) + 8) forNotification:4 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10232) + 16) register:*(void *)(*(void *)(a1 + 10232) + 8) forNotification:5 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10232) + 16) register:*(void *)(*(void *)(a1 + 10232) + 8) forNotification:0 registrationInfo:0];
  sub_100DAA9F8((uint64_t)sub_10045BE08, a1, *(void **)(a1 + 32), &v176);
  __int128 v94 = v176;
  __int128 v176 = 0LL;
  uint64_t v95 = *(void *)(a1 + 10240);
  *(void *)(a1 + 1024sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v94;
  if (v95)
  {
    (*(void (**)(uint64_t))(*(void *)v95 + 8LL))(v95);
    char v96 = v176;
    __int128 v176 = 0LL;
    if (v96) {
      (*((void (**)(void **))*v96 + 1))(v96);
    }
  }

  [*(id *)(*(void *)(a1 + 10240) + 16) register:*(void *)(*(void *)(a1 + 10240) + 8) forNotification:1 registrationInfo:0];
  if (*(_BYTE *)(a1 + 461))
  {
    [*(id *)(*(void *)(a1 + 10240) + 16) register:*(void *)(*(void *)(a1 + 10240) + 8) forNotification:0 registrationInfo:0];
    sub_10045BFE0(a1, (uint64_t *)(a1 + 464), 256);
    sub_10045BFE0(a1, (uint64_t *)(a1 + 528), 256);
  }

  sub_100AEB408(a1 + 10304, (uint64_t)sub_10045C244, a1, *(void **)(a1 + 32), &v176);
  __int128 v97 = v176;
  __int128 v176 = 0LL;
  uint64_t v98 = *(void *)v55;
  *(void *)std::string::size_type v55 = v97;
  if (v98)
  {
    (*(void (**)(uint64_t))(*(void *)v98 + 8LL))(v98);
    __int128 v99 = v176;
    __int128 v176 = 0LL;
    if (v99) {
      (*((void (**)(void **))*v99 + 1))(v99);
    }
  }

  [*(id *)(*(void *)v55 + 16) register:*(void *)(*(void *)v55 + 8) forNotification:5 registrationInfo:0];
  if (*(_BYTE *)(a1 + 408)) {
    sub_100A7A8A8(a1 + 6616, *(int *)(a1 + 412));
  }
  if (*(_BYTE *)(a1 + 420)) {
    sub_100A7A8B0(a1 + 6616, (double)*(int *)(a1 + 424));
  }
  if (*(_BYTE *)(a1 + 433)) {
    sub_100A7A8B8(a1 + 6616, 1);
  }
  sub_10045C41C(a1);
  *(void *)(a1 + 10128) = -[CLWorkoutGeoFenceController initWithDelegate:withSilo:]( [CLWorkoutGeoFenceController alloc],  "initWithDelegate:withSilo:",  *(void *)(a1 + 32),  [*(id *)(a1 + 32) silo]);
  *(void *)(a1 + 1028sub_100222B94(v13, (uint64_t)"wifi1Event", 0) =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:forClient:",  @"CLClientAuthorizationCache",  @"CLMotionStateMediator");
  sub_100583844((uint64_t)sub_10045C498, a1, *(void **)(a1 + 32), &v176);
  __int128 v100 = v176;
  __int128 v176 = 0LL;
  uint64_t v101 = *(void *)(a1 + 10288);
  *(void *)(a1 + 10288) = v100;
  if (v101)
  {
    (*(void (**)(uint64_t))(*(void *)v101 + 8LL))(v101);
    __int128 v102 = v176;
    __int128 v176 = 0LL;
    if (v102) {
      (*((void (**)(void **))*v102 + 1))(v102);
    }
  }

  [*(id *)(*(void *)(a1 + 10288) + 16) register:*(void *)(*(void *)(a1 + 10288) + 8) forNotification:4 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10288) + 16) register:*(void *)(*(void *)(a1 + 10288) + 8) forNotification:2 registrationInfo:0];
  memset(&v174, 0, sizeof(v174));
  std::string::operator=(&v174, (const std::string *)&qword_101995830);
  [*(id *)(*(void *)(a1 + 10288) + 16) register:*(void *)(*(void *)(a1 + 10288) + 8) forNotification:0 registrationInfo:sub_10120E548((uint64_t)&v174)];
  sub_100ACD980((uint64_t)sub_10045C668, a1, *(void **)(a1 + 32), &v176);
  __int128 v103 = v176;
  __int128 v176 = 0LL;
  uint64_t v104 = *(void *)(a1 + 10256);
  *(void *)(a1 + 10256) = v103;
  if (v104)
  {
    (*(void (**)(uint64_t))(*(void *)v104 + 8LL))(v104);
    __int128 v105 = v176;
    __int128 v176 = 0LL;
    if (v105) {
      (*((void (**)(void **))*v105 + 1))(v105);
    }
  }

  [*(id *)(*(void *)(a1 + 10256) + 16) register:*(void *)(*(void *)(a1 + 10256) + 8) forNotification:0 registrationInfo:0];
  [*(id *)(*(void *)(a1 + 10256) + 16) register:*(void *)(*(void *)(a1 + 10256) + 8) forNotification:1 registrationInfo:0];
  sub_100AECD10( a1 + 8352,  objc_msgSend( objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLDataProtectionManager"),  "syncgetDataAvailability") == 1);
  uint64_t v106 = *(void **)(a1 + 10280);
  __int128 v107 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "com.apple.locationd.bundle-/System/Library/LocationBundles/MotionCalibration.bundle");
  __int128 v176 = _NSConcreteStackBlock;
  uint64_t v177 = 3221225472LL;
  __int128 v178 = sub_100467CBC;
  __int128 v179 = (uint64_t *)&unk_1018398E0;
  std::string::size_type v180 = a1;
  [v106 getAuthorizationContextOfNonZonalClient:v107 withReply:&v176];
  __int128 v108 = -[CLDeviceMotionProperties initWithMode:]( objc_alloc(&OBJC_CLASS___CLDeviceMotionProperties),  "initWithMode:",  3LL);
  __int128 v109 = operator new(0x38uLL);
  sub_1011C06A0(v109, *(void **)(a1 + 40), (uint64_t)sub_10045C850, a1, v108);
  uint64_t v110 = *(void *)(a1 + 672);
  *(void *)(a1 + 672) = v109;
  if (v110) {
    (*(void (**)(uint64_t))(*(void *)v110 + 8LL))(v110);
  }

  sub_10034FF34((uint64_t)sub_10045CA20, a1, *(void **)(a1 + 32), &v176);
  __int128 v111 = v176;
  __int128 v176 = 0LL;
  uint64_t v112 = *(void *)(a1 + 10248);
  *(void *)(a1 + 10248) = v111;
  if (v112)
  {
    (*(void (**)(uint64_t))(*(void *)v112 + 8LL))(v112);
    __int128 v113 = v176;
    __int128 v176 = 0LL;
    if (v113) {
      (*((void (**)(void **))*v113 + 1))(v113);
    }
  }

  [*(id *)(*(void *)(a1 + 10248) + 16) register:*(void *)(*(void *)(a1 + 10248) + 8) forNotification:3 registrationInfo:0];
  sub_10027EB5C((uint64_t)sub_10045CC30, a1, *(void **)(a1 + 32), &v176);
  __int128 v114 = v176;
  __int128 v176 = 0LL;
  uint64_t v115 = *(void *)(a1 + 10264);
  *(void *)(a1 + 10264) = v114;
  if (v115)
  {
    (*(void (**)(uint64_t))(*(void *)v115 + 8LL))(v115);
    __int128 v116 = v176;
    __int128 v176 = 0LL;
    if (v116) {
      (*((void (**)(void **))*v116 + 1))(v116);
    }
  }

  [*(id *)(*(void *)(a1 + 10264) + 16) register:*(void *)(*(void *)(a1 + 10264) + 8) forNotification:4 registrationInfo:0];
  sub_101037234((uint64_t)sub_10045CE08, a1, *(void **)(a1 + 32), &v176);
  __int128 v117 = v176;
  __int128 v176 = 0LL;
  uint64_t v118 = *(void *)(a1 + 10272);
  *(void *)(a1 + 10272) = v117;
  if (v118)
  {
    (*(void (**)(uint64_t))(*(void *)v118 + 8LL))(v118);
    __int128 v119 = v176;
    __int128 v176 = 0LL;
    if (v119) {
      (*((void (**)(void **))*v119 + 1))(v119);
    }
  }

  [*(id *)(*(void *)(a1 + 10272) + 16) register:*(void *)(*(void *)(a1 + 10272) + 8) forNotification:1 registrationInfo:0];
  v162[0] = &off_10183ADF8;
  v162[1] = a1;
  __int128 v163 = v162;
  sub_100470144((void *)(a1 + 4080), (uint64_t)v162);
  uint64_t v120 = v163;
  if (v163 == v162)
  {
    uint64_t v121 = 4LL;
    uint64_t v120 = v162;
  }

  else
  {
    if (!v163) {
      goto LABEL_146;
    }
    uint64_t v121 = 5LL;
  }

  (*(void (**)(void))(*v120 + 8 * v121))();
LABEL_146:
  uint64_t v122 = sub_1008FA854(0);
  (*(void (**)(uint64_t, void))(*(void *)(v122 + 96) + 56LL))(v122 + 96, 0LL);
  *(void *)(a1 + 68sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = objc_opt_new(&OBJC_CLASS___NSMutableSet);
  id v123 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLWeatherService");
  *(void *)(a1 + 10504) = v123;
  objc_msgSend(v123, "registerDelegate:inSilo:", *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 32), "silo"));
  [*(id *)(a1 + 10504) setDelegateEntityName:"CLMotionStateMediator"];
  [*(id *)(a1 + 10504) registerForWeatherUpdates:*(void *)(a1 + 32)];
  id v124 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLOutdoorService");
  *(void *)(a1 + 10512) = v124;
  objc_msgSend(v124, "registerDelegate:inSilo:", *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 32), "silo"));
  [*(id *)(a1 + 10512) setDelegateEntityName:"CLMotionStateMediator"];
  [*(id *)(a1 + 10512) registerForUpdates:*(void *)(a1 + 32)];
  v160[0] = &off_10183AE88;
  v160[1] = a1;
  __int128 v161 = v160;
  sub_100470144((void *)(a1 + 5528), (uint64_t)v160);
  __int128 v125 = v161;
  if (v161 == v160)
  {
    uint64_t v126 = 4LL;
    __int128 v125 = v160;
  }

  else
  {
    if (!v161) {
      goto LABEL_151;
    }
    uint64_t v126 = 5LL;
  }

  (*(void (**)(void))(*v125 + 8 * v126))();
LABEL_151:
  v158[0] = &off_10183AF08;
  v158[1] = a1;
  __int128 v159 = v158;
  sub_100470144((void *)(a1 + 5760), (uint64_t)v158);
  __int128 v127 = v159;
  if (v159 == v158)
  {
    uint64_t v128 = 4LL;
    __int128 v127 = v158;
  }

  else
  {
    if (!v159) {
      goto LABEL_156;
    }
    uint64_t v128 = 5LL;
  }

  (*(void (**)(void))(*v127 + 8 * v128))();
LABEL_156:
  if (sub_1001B9A1C())
  {
    sub_1005BB360((uint64_t)sub_10045CFF8, a1, *(void **)(a1 + 32), &v176);
    __int128 v129 = v176;
    __int128 v176 = 0LL;
    uint64_t v130 = *(void *)(a1 + 10520);
    *(void *)(a1 + 1052sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v129;
    if (v130)
    {
      (*(void (**)(uint64_t))(*(void *)v130 + 8LL))(v130);
      int v131 = v176;
      __int128 v176 = 0LL;
      if (v131) {
        (*((void (**)(void **))*v131 + 1))(v131);
      }
    }

    [*(id *)(*(void *)(a1 + 10520) + 16) register:*(void *)(*(void *)(a1 + 10520) + 8) forNotification:1 registrationInfo:0];
  }

  id v132 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLRoutineMonitor");
  *(void *)(a1 + 10528) = v132;
  objc_msgSend(v132, "registerDelegate:inSilo:", *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 32), "silo"));
  [*(id *)(a1 + 10528) setDelegateEntityName:"CLMotionStateMediator"];
  [*(id *)(a1 + 10528) startMonitoringVisitsForClient:*(void *)(a1 + 32)];
  uint64_t v133 = sub_1006088E8();
  sub_1010DDBC0(__p, "CLMotionStateMediator");
  id v134 = objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "silo"), "queue");
  v156[0] = &off_10183AF88;
  v156[1] = a1;
  __int128 v157 = v156;
  sub_100608C04(v133, (char *)__p, (uint64_t)v134, (uint64_t)v156);
  __int128 v135 = v157;
  if (v157 == v156)
  {
    uint64_t v136 = 4LL;
    __int128 v135 = v156;
  }

  else
  {
    if (!v157) {
      goto LABEL_166;
    }
    uint64_t v136 = 5LL;
  }

  (*(void (**)(void))(*v135 + 8 * v136))();
LABEL_166:
  if (v143 < 0) {
    operator delete(__p[0]);
  }
  if (sub_1008FA854(0))
  {
    __int128 v137 = operator new(0x38uLL);
    sub_100475668(v137, *(void **)(a1 + 40), (uint64_t)sub_10045D1D8, a1, 0LL);
    uint64_t v138 = *v141;
    *__int128 v141 = (uint64_t)v137;
    if (v138) {
      (*(void (**)(uint64_t))(*(void *)v138 + 8LL))(v138);
    }
    uint64_t v139 = sub_1008FA854(0);
    sub_1006DCB40(v139, 47, *v141, -1.0);
  }

  *(_BYTE *)(a1 + 552) = 1;
  *(_BYTE *)(a1 + 52sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 1;
  *(_BYTE *)(a1 + 584) = 1;
  return a1;
}

void sub_10045A22C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, void *a14, void *a15)
{
  uint64_t v21 = *(void *)(v15 + 10520);
  *(void *)(v15 + 1052sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
  }
  uint64_t v22 = *v18;
  uint64_t *v18 = 0LL;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  sub_1008AF1C4(v19);
  uint64_t v23 = *(void *)(v15 + 10288);
  *(void *)(v15 + 10288) = 0LL;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8LL))(v23);
  }
  uint64_t v24 = *(void *)(v15 + 10272);
  *(void *)(v15 + 10272) = 0LL;
  if (v24) {
    (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
  }
  uint64_t v25 = *(void *)(v15 + 10264);
  *(void *)(v15 + 10264) = 0LL;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
  }
  uint64_t v26 = *(void *)(v15 + 10256);
  *(void *)(v15 + 10256) = 0LL;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
  }
  uint64_t v27 = *(void *)(v15 + 10248);
  *(void *)(v15 + 10248) = 0LL;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
  }
  uint64_t v28 = *(void *)(v15 + 10240);
  *(void *)(v15 + 1024sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  if (v28) {
    (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
  }
  uint64_t v29 = *(void *)(v15 + 10232);
  *(void *)(v15 + 10232) = 0LL;
  if (v29) {
    (*(void (**)(uint64_t))(*(void *)v29 + 8LL))(v29);
  }
  uint64_t v30 = *(void *)(v15 + 10224);
  *(void *)(v15 + 10224) = 0LL;
  if (v30) {
    (*(void (**)(uint64_t))(*(void *)v30 + 8LL))(v30);
  }
  uint64_t v31 = *(void *)(v15 + 10216);
  *(void *)(v15 + 10216) = 0LL;
  if (v31) {
    (*(void (**)(uint64_t))(*(void *)v31 + 8LL))(v31);
  }
  uint64_t v32 = *(void *)(v15 + 10208);
  *(void *)(v15 + 10208) = 0LL;
  if (v32) {
    (*(void (**)(uint64_t))(*(void *)v32 + 8LL))(v32);
  }
  uint64_t v33 = *(void *)(v15 + 10200);
  *(void *)(v15 + 1020sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  if (v33) {
    (*(void (**)(uint64_t))(*(void *)v33 + 8LL))(v33);
  }
  uint64_t v34 = *(void *)(v15 + 10192);
  *(void *)(v15 + 10192) = 0LL;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8LL))(v34);
  }
  sub_100463030((uint64_t *)(v15 + 10184), 0LL);
  uint64_t v35 = *a13;
  *a13 = 0LL;
  if (v35) {
    (*(void (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
  }
  sub_1004584D8(v15 + 8784);
  sub_100457A68(v15 + 8696);
  sub_100463D44((uint64_t *)(v15 + 8688), 0LL);
  sub_100AEC67C(a12);
  uint64_t v36 = *(void *)(v15 + 8344);
  *(void *)(v15 + 8344) = 0LL;
  if (v36) {
    (*(void (**)(uint64_t))(*(void *)v36 + 8LL))(v36);
  }
  sub_100473528((id **)(v15 + 8336), 0LL);
  sub_100AD5650(a10);
  sub_100AD5650(a9);
  __int128 v37 = (char **)(v15 + 8224);
  uint64_t v38 = *(void *)(v15 + 8232);
  *(void *)(v15 + 8232) = 0LL;
  if (v38) {
    (*(void (**)(uint64_t))(*(void *)v38 + 8LL))(v38);
  }
  unint64_t v39 = *v37;
  std::__shared_weak_count *v37 = 0LL;
  if (v39) {
    sub_100476918(v15 + 8224, v39);
  }
  sub_10046AAB4(v17);
  sub_10000AE14(v15 + 6600);
  sub_1004752FC(a14);
  sub_10046ADBC(a15);
  uint64_t v40 = *(void *)(v15 + 672);
  *(void *)(v15 + 672) = 0LL;
  if (v40) {
    (*(void (**)(uint64_t))(*(void *)v40 + 8LL))(v40);
  }
  sub_10045D3B0(a11);
  sub_1001B4C40((void *)(v15 + 280));
  sub_10045D410(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_10045A9D4(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_10183A3E0;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_10045AA54(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10045AA70(uint64_t a1, uint64_t a2)
{
  return sub_10045DB40(a2, a1, 0);
}

void sub_10045AAB4(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onOldMotionCoprocessorData",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    char v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      __int16 v12 = 2082;
      uint64_t v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onOldMotionCoprocessorData, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  sub_10045DB40(a2, a1, 1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045AC68( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045AC88(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onActivePedStateCoprocessorData",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    char v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      __int16 v12 = 2082;
      uint64_t v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onActivePedStateCoprocessorData, event:%{public, location:es cape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  sub_100A82424(a2 + 6616, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045AE3C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045AE5C(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onWatchElevationCoprocessorData",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    char v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v9 = 2082;
      __int16 v10 = "";
      __int16 v11 = 2082;
      __int16 v12 = "activity";
      __int16 v13 = 2050;
      uint64_t v14 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onWatchElevationCoprocessorData, event:%{public, location:es cape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  *(void *)int32x2_t buf = *(void *)(a1 + 8);
  __int16 v9 = *(_WORD *)(a1 + 54);
  *(_DWORD *)((char *)&v10 + 2) = *(_DWORD *)(a1 + 56);
  sub_1004650DC((__n128 *)(a2 + 3440), (__n128 *)buf);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045B024( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045B044(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    uint64_t v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onTier1CyclingFeaturesData",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    char v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      *(_WORD *)&_BYTE buf[28] = 2050;
      *(void *)&buf[30] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onTier1CyclingFeaturesData, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v8 = 0;
  }

  __int128 v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)a1;
  *(_OWORD *)&uint8_t buf[16] = v6;
  *(void *)&_BYTE buf[32] = *(void *)(a1 + 32);
  sub_100465378(a2 + 3912, (__int128 *)buf);
  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045B204( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045B224(uint64_t a1, _DWORD *a2, __n128 *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onCalorimetryNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int16 v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      __int128 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onCalorimetryNotification, event:%{public, location:escape_o nly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100466240(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045B3DC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045B3FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  __int128 v2 = *(_OWORD *)(v1 + 7632);
  __int128 v3 = *(_OWORD *)(v1 + 7664);
  __int128 v21 = *(_OWORD *)(v1 + 7648);
  __int128 v22 = v3;
  uint64_t v23 = *(void *)(v1 + 7680);
  __int128 v4 = *(_OWORD *)(v1 + 7568);
  __int128 v5 = *(_OWORD *)(v1 + 7600);
  __int128 v17 = *(_OWORD *)(v1 + 7584);
  __int128 v18 = v5;
  __int128 v19 = *(_OWORD *)(v1 + 7616);
  __int128 v20 = v2;
  __int128 v6 = *(_OWORD *)(v1 + 7504);
  __int128 v7 = *(_OWORD *)(v1 + 7536);
  __int128 v13 = *(_OWORD *)(v1 + 7520);
  __int128 v14 = v7;
  __int128 v15 = *(_OWORD *)(v1 + 7552);
  __int128 v16 = v4;
  __int128 v8 = *(_OWORD *)(v1 + 7472);
  __int128 v9 = *(_OWORD *)(v1 + 7456);
  __int128 v10 = v8;
  __int128 v11 = *(_OWORD *)(v1 + 7488);
  __int128 v12 = v6;
  *((void *)&v10 + 1) = CFAbsoluteTimeGetCurrent();
  *(void *)&__int128 v10 = 4LL;
  sub_10045E038(v1, (uint64_t)&v9);
}

void sub_10045B4C4(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    __int128 v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onSkiNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int128 v14 = "";
      __int16 v15 = 2082;
      __int128 v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onSkiNotification, event:%{public, location:escape_only}s,  this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  if (*a2 == 1) {
    sub_100A825FC(a4 + 6616, *a3);
  }
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045B688( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045B6A8(uint64_t a1, _DWORD *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onWatchOrientationSettingsNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onWatchOrientationSettingsNotification, event:%{public, loca tion:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100466800(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045B860( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045B880(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onDaemonStatus",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onDaemonStatus, event:%{public, location:escape_only}s, th is:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100466B50(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045BA38( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045BA58(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onCatherineNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onCatherineNotification, event:%{public, location:escape_onl y}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100466F48(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045BC10( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045BC30(uint64_t a1, _DWORD *a2, int *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onFitnessTrackingNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onFitnessTrackingNotification, event:%{public, location:esca pe_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100467168(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045BDE8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045BE08(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onMotionStateObserverNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onMotionStateObserverNotification, event:%{public, location: escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_1004676D8((_BYTE *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045BFC0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045BFE0(uint64_t a1, uint64_t *a2, __int16 a3)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  __int128 v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = "overriding";
    if (!HIBYTE(a3)) {
      uint64_t v7 = "clearing override";
    }
    else {
      __int128 v8 = (uint64_t *)*a2;
    }
    *(_DWORD *)int32x2_t buf = 136315394;
    __int16 v17 = v7;
    __int16 v18 = 2080;
    uint64_t v19 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Workout setting, %s for %s setting", buf, 0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    __int128 v9 = "overriding";
    if (!HIBYTE(a3)) {
      __int128 v9 = "clearing override";
    }
    else {
      char v10 = (uint64_t *)*a2;
    }
    int v12 = 136315394;
    int v13 = v9;
    __int16 v14 = 2080;
    __int16 v15 = v10;
    char v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout setting, %s for %s setting",  (const char *)&v12,  22);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::overrideWorkoutReminderSetting(WorkoutReminderSetting &, std::optional<BOOL>)",  "%s\n",  v11);
  }

  if (HIBYTE(a3) && *((_BYTE *)a2 + 27))
  {
  }

  else if ((HIBYTE(a3) != 0) == (*((_BYTE *)a2 + 27) != 0))
  {
    return;
  }

  *((_WORD *)a2 + 13) = a3;
  sub_100460014(a1);
}

void sub_10045C244(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onLocationNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onLocationNotification, event:%{public, location:escape_only }s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100468074(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045C3FC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10045C41C(uint64_t a1)
{
  uint64_t v2 = sub_1002F8DDC();
  (*(void (**)(uint64_t))(*(void *)v2 + 936LL))(v2);
  uint64_t v3 = sub_1002F8DDC();
  uint64_t v4 = sub_1002F8DDC();
  uint64_t result = sub_1002A7CB0(v4, "kMostRecentWorkoutEventLocationType", &v6);
  if ((_DWORD)result) {
    *(void *)(a1 + 9576) = v6;
  }
  return result;
}

void sub_10045C498(uint64_t a1, int *a2, uint64_t a3, id *a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    int v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onClientManagerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      __int16 v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onClientManagerNotification, event:%{public, location:escape _only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  sub_100467DFC(a4, v6, a2);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045C648( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045C668(uint64_t a1, _DWORD *a2, _DWORD *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    int v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onDataProtectionNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onDataProtectionNotification, event:%{public, location:escap e_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  if (!*a2) {
    sub_100AECD10(a4 + 8352, *a3 == 1);
  }
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045C830( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045C850(uint64_t *a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onDeviceMotionData",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      __int16 v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onDeviceMotionData, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  sub_100463D70(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045CA00( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045CA20(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v6 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onWifiNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    char v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)__int16 v12 = 2082;
      *(void *)&int32x4_t v12[2] = "";
      *(_WORD *)&v12[10] = 2082;
      *(void *)&v12[12] = "activity";
      *(_WORD *)&v12[20] = 2050;
      *(void *)&v12[22] = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onWifiNotification, event:%{public, location:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v10 = 0;
  }

  if (*a2 == 3)
  {
    __int128 v8 = *(void **)(*(void *)(a4 + 10248) + 16LL);
    *(void *)int32x2_t buf = _NSConcreteStackBlock;
    *(void *)__int16 v12 = 3221225472LL;
    *(void *)&_WORD v12[8] = sub_100467C40;
    *(void *)&v12[16] = &unk_1018398C0;
    *(void *)&v12[24] = a4;
    [v8 fetchScanResultWithReply:buf];
  }

  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045CC10( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045CC30(uint64_t a1, int *a2, __int128 *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onOdometerNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onOdometerNotification, event:%{public, location:escape_only }s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_10046586C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045CDE8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045CE08(uint64_t a1, int *a2, const void *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int128 v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onStepCountNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onStepCountNotification, event:%{public, location:escape_onl y}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100465D90(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045CFC0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10045CFE0(uint64_t a1)
{
  return a1 + 3216;
}

uint64_t sub_10045CFE8(uint64_t a1)
{
  return a1 + 1096;
}

uint64_t sub_10045CFF0(uint64_t a1)
{
  return a1 + 1448;
}

void sub_10045CFF8(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v7 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onBacklightStateData",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v8 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onBacklightStateData, event:%{public, location:escape_only}s , this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  if (*a2 == 1)
  {
    uint64_t v9 = *(void *)(a4 + 8344);
    if (v9) {
      *(_BYTE *)(v9 + 24sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_BYTE *)(a3 + 56);
    }
  }

  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045D1BC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045D1D8(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onSPUStairsEscalationEvent",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      int v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onSPUStairsEscalationEvent, event:%{public, location:escape_ only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  sub_10046563C(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_10045D388( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10045D3B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10045D410(uint64_t a1)
{
  *(void *)a1 = off_10183A3E0;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

uint64_t sub_10045D484(uint64_t a1)
{
  *(void *)a1 = off_101839680;
  *(void *)(a1 + 112) = off_1018397C0;
  *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = &off_101839800;
  [*(id *)(a1 + 320) invalidate];

  *(void *)(a1 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(void *)(a1 + 664) = 0LL;
  [*(id *)(a1 + 10128) stopGeoFence];

  *(void *)(a1 + 10128) = 0LL;
  *(void *)(a1 + 68sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  [*(id *)(a1 + 10504) unregisterForWeatherUpdates:*(void *)(a1 + 32)];

  *(void *)(a1 + 10504) = 0LL;
  [*(id *)(a1 + 10512) unregisterForUpdates:*(void *)(a1 + 32)];

  *(void *)(a1 + 10512) = 0LL;
  if (sub_1001B9A1C()) {
    [*(id *)(*(void *)(a1 + 10520) + 16) unregister:*(void *)(*(void *)(a1 + 10520) + 8) forNotification:1];
  }
  [*(id *)(a1 + 10528) stopMonitoringVisitsForClient:*(void *)(a1 + 32)];

  *(void *)(a1 + 10528) = 0LL;
  uint64_t v2 = sub_1006088E8();
  sub_1010DDBC0(__p, "CLMotionStateMediator");
  sub_100608F8C(v2, (uint64_t *)__p);
  if (v25 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v3 = *(void *)(a1 + 10224);
  if (v3)
  {
    *(void *)(a1 + 10224) = 0LL;
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }

  sub_10045D8AC(a1);
  (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1);
  uint64_t v4 = *(void *)(a1 + 10520);
  *(void *)(a1 + 1052sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 10496);
  *(void *)(a1 + 10496) = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  sub_1008AF1C4(a1 + 10304);
  uint64_t v6 = *(void *)(a1 + 10288);
  *(void *)(a1 + 10288) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 10272);
  *(void *)(a1 + 10272) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 10264);
  *(void *)(a1 + 10264) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  uint64_t v9 = *(void *)(a1 + 10256);
  *(void *)(a1 + 10256) = 0LL;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  uint64_t v10 = *(void *)(a1 + 10248);
  *(void *)(a1 + 10248) = 0LL;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  uint64_t v11 = *(void *)(a1 + 10240);
  *(void *)(a1 + 1024sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
  }
  uint64_t v12 = *(void *)(a1 + 10232);
  *(void *)(a1 + 10232) = 0LL;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
  }
  uint64_t v13 = *(void *)(a1 + 10224);
  *(void *)(a1 + 10224) = 0LL;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  uint64_t v14 = *(void *)(a1 + 10216);
  *(void *)(a1 + 10216) = 0LL;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
  }
  uint64_t v15 = *(void *)(a1 + 10208);
  *(void *)(a1 + 10208) = 0LL;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
  }
  uint64_t v16 = *(void *)(a1 + 10200);
  *(void *)(a1 + 1020sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
  }
  uint64_t v17 = *(void *)(a1 + 10192);
  *(void *)(a1 + 10192) = 0LL;
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
  }
  sub_100463030((uint64_t *)(a1 + 10184), 0LL);
  uint64_t v18 = *(void *)(a1 + 10176);
  *(void *)(a1 + 10176) = 0LL;
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
  }
  sub_10041385C((void *)(a1 + 8824));
  sub_1002C5F18((void *)(a1 + 8736));
  sub_100463D44((uint64_t *)(a1 + 8688), 0LL);
  sub_100AEC67C(a1 + 8352);
  uint64_t v19 = *(void *)(a1 + 8344);
  *(void *)(a1 + 8344) = 0LL;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  sub_100473528((id **)(a1 + 8336), 0LL);
  sub_100AD5650(a1 + 8288);
  sub_100AD5650(a1 + 8240);
  uint64_t v20 = *(void *)(a1 + 8232);
  *(void *)(a1 + 8232) = 0LL;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8LL))(v20);
  }
  __int128 v21 = *(char **)(a1 + 8224);
  *(void *)(a1 + 8224) = 0LL;
  if (v21) {
    sub_100476918(a1 + 8224, v21);
  }
  sub_10046AAB4((void *)(a1 + 6616));
  sub_10000AE14(a1 + 6600);
  sub_1004752FC((void *)(a1 + 4112));
  sub_10046ADBC((void *)(a1 + 696));
  uint64_t v22 = *(void *)(a1 + 672);
  *(void *)(a1 + 672) = 0LL;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  sub_1001B4C40((void *)(a1 + 280));
  return sub_10045D410(a1);
}

void sub_10045D8AC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8880);
  if (v2)
  {
    [v2 unregisterForData:*(void *)(a1 + 32)];

    *(void *)(a1 + 888sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  }

  uint64_t v3 = *(void **)(a1 + 8888);
  if (v3)
  {
    [v3 unregisterForData:*(void *)(a1 + 32)];

    *(void *)(a1 + 8888) = 0LL;
  }

uint64_t sub_10045D904(uint64_t a1)
{
  return sub_10045D484(a1 - 112);
}

uint64_t sub_10045D90C(uint64_t a1)
{
  return sub_10045D484(a1 - 120);
}

void sub_10045D914(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10045D484(a1);
  operator delete(v1);
}

void sub_10045D928(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10045D484(a1 - 112);
  operator delete(v1);
}

void sub_10045D940(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10045D484(a1 - 120);
  operator delete(v1);
}

void sub_10045D958(uint64_t a1)
{
  uint64_t v2 = sub_1008FA854(0);
  sub_1006DD2A0(v2, 0, *(void *)(a1 + 600));
  uint64_t v3 = sub_1008FA854(0);
  sub_1006DD2A0(v3, 9, *(void *)(a1 + 616));
  sub_1004F2598();
  if ((sub_1004F97F4() & 0x1000000000LL) != 0)
  {
    uint64_t v4 = sub_1008FA854(0);
    sub_1006DD2A0(v4, 20, *(void *)(a1 + 624));
  }

  uint64_t v5 = sub_1008FA854(0);
  sub_1006DD2A0(v5, 33, *(void *)(a1 + 640));
  [*(id *)(a1 + 648) unregisterClient:*(void *)(a1 + 656) forNotification:3];

  [*(id *)(a1 + 656) setValid:0];
  if (sub_1008FA854(0))
  {
    uint64_t v6 = sub_1008FA854(0);
    sub_1006DD2A0(v6, 47, *(void *)(a1 + 10176));
  }

  *(_BYTE *)(a1 + 108) = 1;
}

void *sub_10045DA30@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_10045DAA8(uint64_t a1, _DWORD *a2)
{
  if (*a2 <= 5u)
  {
    uint64_t v2 = (*(uint64_t (**)(void))(**(void **)(a1 + 6648) + 40LL))(*(void *)(a1 + 6648));
    sub_10046E868(v2);
  }

  return 1LL;
}

uint64_t sub_10045DADC(uint64_t a1, _DWORD *a2)
{
  if (*a2 == 2)
  {
    int v5 = 2;
    if (!sub_100247620(a1, &v5, 1LL))
    {
      int v4 = 2;
      (*(void (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v4);
    }
  }

  return 1LL;
}

uint64_t sub_10045DB40(uint64_t a1, uint64_t a2, char a3)
{
  *(_DWORD *)int32x2_t buf = 5;
  if (sub_100247620(a1, (int *)buf, 1LL))
  {
    uint64_t v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 6648) + 40LL))(*(void *)(a1 + 6648));
    sub_10046E868(v6);
  }

  sub_100A78F38(a1 + 6616, a2);
  uint64_t v7 = *(void *)(a1 + 8688);
  if (v7) {
    sub_1004FEC90(v7);
  }
  uint64_t v8 = *(void *)(a1 + 10184);
  if (v8) {
    sub_100D1C614(v8);
  }
  if (!*(void *)(a1 + 8224))
  {
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183A330);
    }
    uint64_t v9 = (os_log_s *)qword_101934758;
    if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "IndoorOutdoor detector running without turn detector.",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934750 != -1) {
        dispatch_once(&qword_101934750, &stru_10183A330);
      }
      LOWORD(v26[0]) = 0;
      uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  2LL,  "IndoorOutdoor detector running without turn detector.",  v26,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::notifyClients(const CLMotionCoprocessorInterface::NotificationData *, BOOL)",  "%s\n",  v23);
    }
  }

  (*(void (**)(void, double))(**(void **)(a1 + 8232) + 16LL))( *(void *)(a1 + 8232),  *(double *)(a2 + 8));
  *(void *)(a1 + 9864) = *(void *)(a2 + 8);
  *(void *)&__int128 v27 = 0LL;
  *((void *)&v27 + 1) = 7LL;
  double Current = CFAbsoluteTimeGetCurrent();
  if (sub_10045DF68(a1 + 3736, &v27, Current))
  {
    uint64_t v11 = sub_1008FA854(0);
    buf[0] = sub_100BE1000((_DWORD *)&v27 + 2);
    *(_DWORD *)&uint8_t buf[4] = HIDWORD(v27);
    double v12 = CFAbsoluteTimeGetCurrent();
    v29[0] = sub_100CDF8FC((void *)(a1 + 6648), v12, 23.0);
    (*(void (**)(uint64_t, uint8_t *))(*(void *)(v11 + 96) + 40LL))(v11 + 96, buf);
  }

  sub_100672E64(a2, (uint64_t)v26);
  if (*(_BYTE *)(a1 + 592)) {
    v26[0] = 18200;
  }
  int v13 = *(_DWORD *)(a1 + 376);
  sub_1004F2598();
  sub_10080878C(a1 + 136, (uint64_t)v26);
  sub_10080873C(a1 + 136, (uint64_t)v24);
  *(void *)int32x2_t buf = v25;
  sub_10080873C(a1 + 136, (uint64_t)v29);
  int v14 = sub_100808784(a1 + 136);
  __int128 v15 = *(_OWORD *)(a2 + 128);
  __int128 v30 = *(_OWORD *)(a2 + 112);
  __int128 v31 = v15;
  int v16 = *(_DWORD *)(a2 + 144);
  v29[34] = v14;
  int v32 = v16;
  if (sub_100495E98((_DWORD *)(a1 + 136)) && *(_BYTE *)(a1 + 9600)) {
    uint64_t v17 = *(void *)(a1 + 9672);
  }
  else {
    uint64_t v17 = 0LL;
  }
  uint64_t v33 = v17;
  if (sub_100495E98((_DWORD *)(a1 + 136))) {
    uint64_t v18 = *(void *)(a1 + 9576);
  }
  else {
    uint64_t v18 = 0LL;
  }
  uint64_t v34 = v18;
  if (sub_100495E98((_DWORD *)(a1 + 136))) {
    uint64_t v19 = *(void *)(a1 + 9568);
  }
  else {
    uint64_t v19 = 0LL;
  }
  uint64_t v35 = v19;
  BOOL v36 = sub_100495E98((_DWORD *)(a1 + 136));
  char v37 = a3;
  v38[1] = 0LL;
  v38[0] = 0LL;
  sub_100808998(a1 + 136, (unsigned __int8 *)v38);
  v29[25] = v26[25];
  v29[32] = v26[32];
  v20.n128_f64[0] = CFAbsoluteTimeGetCurrent();
  uint64_t v21 = *(void *)(a1 + 8344);
  if (v21) {
    sub_10095F9E0(v21, (uint64_t)buf);
  }
  v24[0] = 0;
  return (*(uint64_t (**)(uint64_t, _DWORD *, uint8_t *, uint64_t, uint64_t, void, __n128))(*(void *)a1 + 152LL))( a1,  v24,  buf,  1LL,  0xFFFFFFFFLL,  0LL,  v20);
}

uint64_t sub_10045DF60(uint64_t a1)
{
  return a1 + 3040;
}

uint64_t sub_10045DF68(uint64_t a1, _OWORD *a2, double a3)
{
  uint64_t v3 = *(void *)(a1 + 56);
  if (!v3) {
    return 0LL;
  }
  uint64_t v4 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 32) == v4) {
    return 0LL;
  }
  unint64_t v5 = *(void *)(a1 + 48);
  unsigned __int8 v6 = v5 + v3;
  uint64_t v7 = (uint64_t *)(v4 + 8 * ((v5 + v3) >> 8));
  uint64_t v8 = *v7;
  uint64_t v9 = *v7 + 16LL * v6;
  unint64_t v10 = v5 >> 8;
  uint64_t v11 = *(void *)(v4 + 8 * (v5 >> 8)) + 16LL * v5;
  if (v9 != v11)
  {
    while (1)
    {
      uint64_t v12 = v9;
      if (v9 == v8) {
        uint64_t v12 = *(v7 - 1) + 4096;
      }
      double v13 = *(double *)(v12 - 16);
      if (v9 == v8)
      {
        uint64_t v14 = *--v7;
        uint64_t v8 = v14;
        uint64_t v9 = v14 + 4096;
      }

      v9 -= 16LL;
      if (v9 == v11)
      {
        uint64_t v9 = v11;
        break;
      }
    }
  }

  if (v9 == *v7) {
    uint64_t v9 = *(v7 - 1) + 4096;
  }
  *a2 = *(_OWORD *)(v9 - 16);
  return 1LL;
}

void sub_10045E038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8872;
  unint64_t v5 = objc_autoreleasePoolPush();
  unsigned __int8 v6 = objc_alloc_init(&OBJC_CLASS___ALActivityLog);
  -[ALActivityLog setTimestamp:](v6, "setTimestamp:", *(double *)(a2 + 24));
  -[ALActivityLog setWorkoutEvent:]( v6,  "setWorkoutEvent:",  objc_alloc_init(&OBJC_CLASS___ALCMWorkoutEvent));
  -[ALCMWorkoutEvent setWorkoutEvent:]( -[ALActivityLog workoutEvent](v6, "workoutEvent"),  "setWorkoutEvent:",  *(unsigned int *)(a2 + 16));
  -[ALCMWorkoutEvent setWorkoutType:]( -[ALActivityLog workoutEvent](v6, "workoutEvent"),  "setWorkoutType:",  +[CMWorkout CLMotionActivityTypeFromCMWorkoutType:]( &OBJC_CLASS___CMWorkout,  "CLMotionActivityTypeFromCMWorkoutType:",  *(void *)(a2 + 112)));
  -[ALCMWorkoutEvent setLocationType:]( -[ALActivityLog workoutEvent](v6, "workoutEvent"),  "setLocationType:",  *(unsigned int *)(a2 + 120));
  -[ALCMWorkoutEvent setStartTime:](-[ALActivityLog workoutEvent](v6, "workoutEvent"), "setStartTime:", *(double *)a2);
  if (*(void *)(a2 + 16) == 1LL) {
    -[ALCMWorkoutEvent setEndTime:]( -[ALActivityLog workoutEvent](v6, "workoutEvent"),  "setEndTime:",  *(double *)(a2 + 8));
  }
  -[ALCMWorkoutEvent setSessionId:]( -[ALActivityLog workoutEvent](v6, "workoutEvent"),  "setSessionId:",  -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2 + 64, 16LL));
  objc_msgSend( -[CLServiceVendor proxyForService:]( +[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance"),  "proxyForService:",  @"CLActivityLogger"),  "logData:",  v6);
  objc_autoreleasePoolPop(v5);
  if (*(void *)(a2 + 16) == 1LL)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    uint64_t v7 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a2 + 8);
      *(_DWORD *)int32x2_t buf = 134217984;
      *(void *)&uint8_t buf[4] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Motion State Mediator is sending a stop event at %f",  buf,  0xCu);
    }

    uint64_t v9 = (double *)(a1 + 9708);
    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      uint64_t v64 = *(void *)(a2 + 8);
      int v76 = 134217984;
      uint64_t v77 = v64;
      uint64_t v65 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Motion State Mediator is sending a stop event at %f",  COERCE_DOUBLE(&v76));
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::notifyWorkoutEvent(const CLMotionStateMediator_Type::WorkoutEvent &)",  "%s\n",  v65);
    }

    *(_BYTE *)(v4 + 32) = *(_BYTE *)(v4 + 25);
    *(_BYTE *)(v4 + 33) = *(_BYTE *)(v4 + 24);
    if (*(_DWORD *)(a1 + 8928)) {
      double v10 = *(double *)(a2 + 24) - *(double *)(a1 + 8984);
    }
    else {
      double v10 = 0.0;
    }
    *(double *)(a1 + 892sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v10;
    uint64_t v11 = llround(*v9 * 10.0);
    uint64_t v12 = llround(*(double *)(a1 + 9716) * 10.0);
    uint64_t v13 = sub_100F5A080();
    __int128 v14 = *(_OWORD *)(v4 + 48);
    v66[0] = *(_OWORD *)(v4 + 32);
    v66[1] = v14;
    uint64_t v67 = *(void *)(v4 + 64);
    __int128 v15 = *(_OWORD *)(a1 + 9168);
    __int128 v16 = *(_OWORD *)(a1 + 9200);
    v74[12] = *(_OWORD *)(a1 + 9184);
    v74[13] = v16;
    uint64_t v75 = *(void *)(a1 + 9216);
    __int128 v17 = *(_OWORD *)(a1 + 9104);
    __int128 v18 = *(_OWORD *)(a1 + 9136);
    v74[8] = *(_OWORD *)(a1 + 9120);
    v74[9] = v18;
    v74[10] = *(_OWORD *)(a1 + 9152);
    v74[11] = v15;
    __int128 v19 = *(_OWORD *)(a1 + 9040);
    __int128 v20 = *(_OWORD *)(a1 + 9072);
    v74[4] = *(_OWORD *)(a1 + 9056);
    v74[5] = v20;
    v74[6] = *(_OWORD *)(a1 + 9088);
    v74[7] = v17;
    __int128 v21 = *(_OWORD *)(a1 + 9008);
    v74[0] = *(_OWORD *)(a1 + 8992);
    v74[1] = v21;
    v74[2] = *(_OWORD *)(a1 + 9024);
    uint64_t v74[3] = v19;
    __int128 v22 = *(_OWORD *)(a1 + 9432);
    v72[12] = *(_OWORD *)(a1 + 9416);
    v72[13] = v22;
    uint64_t v73 = *(void *)(a1 + 9448);
    __int128 v23 = *(_OWORD *)(a1 + 9368);
    v72[8] = *(_OWORD *)(a1 + 9352);
    v72[9] = v23;
    __int128 v24 = *(_OWORD *)(a1 + 9400);
    v72[10] = *(_OWORD *)(a1 + 9384);
    v72[11] = v24;
    __int128 v25 = *(_OWORD *)(a1 + 9304);
    v72[4] = *(_OWORD *)(a1 + 9288);
    void v72[5] = v25;
    __int128 v26 = *(_OWORD *)(a1 + 9336);
    v72[6] = *(_OWORD *)(a1 + 9320);
    v72[7] = v26;
    __int128 v27 = *(_OWORD *)(a1 + 9240);
    v72[0] = *(_OWORD *)(a1 + 9224);
    v72[1] = v27;
    __int128 v28 = *(_OWORD *)(a1 + 9272);
    v72[2] = *(_OWORD *)(a1 + 9256);
    v72[3] = v28;
    sub_100F5D790(v13, v66, v74, v72);
    uint64_t v29 = sub_100F5A080();
    sub_100F5D994(v29, v11, v12);
    *(_WORD *)(v4 + 32) = 257;
    *(_OWORD *)(a1 + 8906) = 0u;
    *(_OWORD *)(a1 + 8922) = 0u;
    *(_WORD *)(a1 + 8938) = 0;
    *(_DWORD *)(a1 + 9704) = 0xFFFF;
    *uint64_t v9 = 0.0;
    *(void *)(a1 + 9716) = 0LL;
    __asm { FMOV            V1.2D, #-1.0 }

    *(_OWORD *)(a1 + 9724) = xmmword_1012E0070;
    *(_OWORD *)(a1 + 974sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = _Q1;
    *(_OWORD *)(a1 + 9756) = _Q1;
    *(_OWORD *)(a1 + 9772) = _Q1;
    *(_DWORD *)(a1 + 9788) = 0;
    *(void *)(a1 + 9792) = 0xBFF0000000000000LL;
    *(void *)(a1 + 9808) = 0LL;
    *(void *)(a1 + 980sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
    *(_DWORD *)(a1 + 9816) = 0;
    *(void *)(a1 + 982sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0xBFF0000000000000LL;
    *(_DWORD *)(a1 + 9828) = 0x7FFFFFFF;
    *(void *)(a1 + 984sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
    *(void *)(a1 + 9832) = 0LL;
    *(_BYTE *)(a1 + 9856) = 0;
    *(void *)(a1 + 9848) = 0LL;
    __int128 v35 = *(_OWORD *)(a2 + 208);
    v70[12] = *(_OWORD *)(a2 + 192);
    v70[13] = v35;
    uint64_t v71 = *(void *)(a2 + 224);
    __int128 v36 = *(_OWORD *)(a2 + 144);
    v70[8] = *(_OWORD *)(a2 + 128);
    v70[9] = v36;
    __int128 v37 = *(_OWORD *)(a2 + 176);
    v70[10] = *(_OWORD *)(a2 + 160);
    v70[11] = v37;
    __int128 v38 = *(_OWORD *)(a2 + 80);
    v70[4] = *(_OWORD *)(a2 + 64);
    v70[5] = v38;
    __int128 v39 = *(_OWORD *)(a2 + 112);
    v70[6] = *(_OWORD *)(a2 + 96);
    v70[7] = v39;
    __int128 v40 = *(_OWORD *)(a2 + 16);
    v70[0] = *(_OWORD *)a2;
    v70[1] = v40;
    __int128 v41 = *(_OWORD *)(a2 + 48);
    v70[2] = *(_OWORD *)(a2 + 32);
    v70[3] = v41;
    sub_100AECACC((void *)(a1 + 8352), (uint64_t)v70);
  }

  uint64_t v42 = sub_100F5A080();
  __int128 v43 = *(_OWORD *)(a2 + 208);
  v68[12] = *(_OWORD *)(a2 + 192);
  v68[13] = v43;
  uint64_t v69 = *(void *)(a2 + 224);
  __int128 v44 = *(_OWORD *)(a2 + 144);
  v68[8] = *(_OWORD *)(a2 + 128);
  v68[9] = v44;
  __int128 v45 = *(_OWORD *)(a2 + 176);
  v68[10] = *(_OWORD *)(a2 + 160);
  v68[11] = v45;
  __int128 v46 = *(_OWORD *)(a2 + 80);
  v68[4] = *(_OWORD *)(a2 + 64);
  v68[5] = v46;
  __int128 v47 = *(_OWORD *)(a2 + 112);
  v68[6] = *(_OWORD *)(a2 + 96);
  v68[7] = v47;
  __int128 v48 = *(_OWORD *)(a2 + 16);
  v68[0] = *(_OWORD *)a2;
  v68[1] = v48;
  __int128 v49 = *(_OWORD *)(a2 + 48);
  v68[2] = *(_OWORD *)(a2 + 32);
  v68[3] = v49;
  sub_100F5CDE0(v42, v68);
  __int128 v50 = (dispatch_queue_t *)sub_100B354EC();
  sub_100B357A4(v50, a2, a1 + 8696, *(_BYTE *)v4);
  uint64_t v51 = *(void *)(a1 + 8344);
  if (v51) {
    sub_1009610C4(v51, a2);
  }
  __int128 v52 = *(_OWORD *)(a2 + 208);
  v84[6] = *(_OWORD *)(a2 + 192);
  v84[7] = v52;
  uint64_t v85 = *(void *)(a2 + 224);
  __int128 v53 = *(_OWORD *)(a2 + 144);
  v84[2] = *(_OWORD *)(a2 + 128);
  v84[3] = v53;
  __int128 v54 = *(_OWORD *)(a2 + 160);
  v84[5] = *(_OWORD *)(a2 + 176);
  v84[4] = v54;
  __int128 v55 = *(_OWORD *)(a2 + 80);
  __int128 v82 = *(_OWORD *)(a2 + 64);
  __int128 v83 = v55;
  __int128 v56 = *(_OWORD *)(a2 + 96);
  v84[1] = *(_OWORD *)(a2 + 112);
  v84[0] = v56;
  __int128 v57 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)a2;
  __int128 v79 = v57;
  __int128 v58 = *(_OWORD *)(a2 + 32);
  __int128 v81 = *(_OWORD *)(a2 + 48);
  __int128 v80 = v58;
  uuid_copy((unsigned __int8 *)v84, (const unsigned __int8 *)(a2 + 96));
  int v76 = 2;
  (*(void (**)(uint64_t, int *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v76,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
  uint64_t v59 = *(void *)(a2 + 16);
  if (v59 == 3)
  {
    uint64_t v60 = sub_1008FA854(0);
    char v61 = 3;
    goto LABEL_19;
  }

  if (v59 == 2)
  {
    uint64_t v60 = sub_1008FA854(0);
    char v61 = 2;
LABEL_19:
    LOBYTE(v76) = v61;
    (*(void (**)(uint64_t, int *))(*(void *)(v60 + 96) + 48LL))(v60 + 96, &v76);
    uint64_t v59 = *(void *)(a2 + 16);
  }

  if (v59 == 6 || v59 == 1)
  {
    uint64_t v62 = sub_1008FA854(0);
    (*(void (**)(uint64_t))(*(void *)(v62 + 96) + 16LL))(v62 + 96);
  }

  if (sub_100BEF698(a2) == 1)
  {
    *(_DWORD *)(a1 + 8876) = 1;
    sub_10045E740(a1);
  }

  else if (sub_100BEF698(a2) == 2)
  {
    *(_DWORD *)(a1 + 8876) = 2;
    sub_10045D8AC(a1);
  }

  if (&_AudioServicesPlaySystemSound && *(_BYTE *)(a1 + 462))
  {
    if ((void)v79 == 2LL)
    {
      __int128 v63 = &stru_101839850;
      goto LABEL_33;
    }

    if ((void)v79 == 3LL)
    {
      __int128 v63 = &stru_101839870;
LABEL_33:
      dispatch_async(&_dispatch_main_q, v63);
    }
  }

  sub_10045E884(a1, a2);
}

id sub_10045E740(uint64_t a1)
{
  unsigned __int8 v8 = 0;
  sub_1012049AC(v9, "EnableBatchedSensorsDuringWorkouts", &v8, 0);
  id result = (id)+[CLBatchedAccelerometerService isSupported](&OBJC_CLASS___CLBatchedAccelerometerService, "isSupported");
  if ((_DWORD)result)
  {
    id result = (id)+[CLBatchedDeviceMotionService isSupported](&OBJC_CLASS___CLBatchedDeviceMotionService, "isSupported");
    if ((_DWORD)result && v9[1] != 0)
    {
      uint64_t v4 = *(void **)(a1 + 8880);
      if (!v4)
      {
        id v5 =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLBatchedAccelerometerService");
        *(void *)(a1 + 888sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v5;
        objc_msgSend(v5, "registerDelegate:inSilo:", *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 32), "silo"));
        uint64_t v4 = *(void **)(a1 + 8880);
      }

      [v4 registerForData:*(void *)(a1 + 32)];
      unsigned __int8 v6 = *(void **)(a1 + 8888);
      if (!v6)
      {
        id v7 =  objc_msgSend( objc_msgSend(*(id *)(a1 + 32), "vendor"),  "proxyForService:",  @"CLBatchedDeviceMotionService");
        *(void *)(a1 + 8888) = v7;
        objc_msgSend(v7, "registerDelegate:inSilo:", *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 32), "silo"));
        unsigned __int8 v6 = *(void **)(a1 + 8888);
      }

      return [v6 registerForData:*(void *)(a1 + 32)];
    }
  }

  return result;
}

void sub_10045E854(id a1)
{
}

void sub_10045E86C(id a1)
{
}

void sub_10045E884(uint64_t a1, uint64_t a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a2 + 16);
    uint64_t v6 = *(void *)(a1 + 9872);
    *(_DWORD *)int32x2_t buf = 67109376;
    *(_DWORD *)&uint8_t buf[4] = v5;
    *(_WORD *)&uint8_t buf[8] = 1024;
    *(_DWORD *)&buf[10] = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "[snapshot] evaluating from workout event %d from state %d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    uint64_t v18 = *(void *)(a2 + 16);
    uint64_t v19 = *(void *)(a1 + 9872);
    v36[0] = 67109376;
    v36[1] = v18;
    __int16 v37 = 1024;
    int v38 = v19;
    __int128 v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "[snapshot] evaluating from workout event %d from state %d",  v36,  14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::updateWorkoutSnapshot(const CLMotionStateMediator_Type::WorkoutEvent &)",  "%s\n",  v20);
  }

  uint64_t v7 = sub_100BEF864(a2);
  __int128 v8 = *(_OWORD *)(a1 + 10080);
  __int128 v51 = *(_OWORD *)(a1 + 10064);
  __int128 v52 = v8;
  __int128 v9 = *(_OWORD *)(a1 + 10112);
  __int128 v53 = *(_OWORD *)(a1 + 10096);
  __int128 v54 = v9;
  __int128 v10 = *(_OWORD *)(a1 + 10016);
  __int128 v47 = *(_OWORD *)(a1 + 10000);
  __int128 v48 = v10;
  __int128 v11 = *(_OWORD *)(a1 + 10048);
  __int128 v49 = *(_OWORD *)(a1 + 10032);
  __int128 v50 = v11;
  __int128 v12 = *(_OWORD *)(a1 + 9952);
  __int128 v43 = *(_OWORD *)(a1 + 9936);
  __int128 v44 = v12;
  __int128 v13 = *(_OWORD *)(a1 + 9984);
  __int128 v45 = *(_OWORD *)(a1 + 9968);
  __int128 v46 = v13;
  __int128 v14 = *(_OWORD *)(a1 + 9888);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)(a1 + 9872);
  __int128 v40 = v14;
  __int128 v15 = *(_OWORD *)(a1 + 9920);
  __int128 v41 = *(_OWORD *)(a1 + 9904);
  __int128 v42 = v15;
  if (v7 != 6 && v7 != *(void *)buf)
  {
    uint64_t v16 = *(void *)(a2 + 24);
    __int128 v33 = *(_OWORD *)(a2 + 192);
    __int128 v34 = *(_OWORD *)(a2 + 208);
    uint64_t v35 = *(void *)(a2 + 224);
    __int128 v29 = *(_OWORD *)(a2 + 128);
    __int128 v30 = *(_OWORD *)(a2 + 144);
    __int128 v31 = *(_OWORD *)(a2 + 160);
    __int128 v32 = *(_OWORD *)(a2 + 176);
    __int128 v25 = *(_OWORD *)(a2 + 64);
    __int128 v26 = *(_OWORD *)(a2 + 80);
    __int128 v27 = *(_OWORD *)(a2 + 96);
    __int128 v28 = *(_OWORD *)(a2 + 112);
    __int128 v21 = *(_OWORD *)a2;
    __int128 v22 = *(_OWORD *)(a2 + 16);
    __int128 v23 = *(_OWORD *)(a2 + 32);
    __int128 v24 = *(_OWORD *)(a2 + 48);
    __int128 v17 = (_OWORD *)(a1 + 9880);
    *(void *)(a1 + 9872) = v7;
    if (v7)
    {
      *(_OWORD *)(a1 + 10072) = v33;
      *(_OWORD *)(a1 + 10088) = v34;
      *(void *)(a1 + 10104) = v35;
      *(_OWORD *)(a1 + 10008) = v29;
      *(_OWORD *)(a1 + 10024) = v30;
      *(_OWORD *)(a1 + 1004sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v31;
      *(_OWORD *)(a1 + 10056) = v32;
      *(_OWORD *)(a1 + 9944) = v25;
      *(_OWORD *)(a1 + 996sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v26;
      *(_OWORD *)(a1 + 9976) = v27;
      *(_OWORD *)(a1 + 9992) = v28;
      _OWORD *v17 = v21;
      *(_OWORD *)(a1 + 9896) = v22;
      *(_OWORD *)(a1 + 9912) = v23;
      *(_OWORD *)(a1 + 9928) = v24;
      *(void *)(a1 + 10112) = v16;
      *(_BYTE *)(a1 + 1012sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 1;
    }

    else
    {
      *(void *)(a1 + 10104) = 0LL;
      *(_OWORD *)(a1 + 10072) = 0u;
      *(_OWORD *)(a1 + 10088) = 0u;
      *(_OWORD *)(a1 + 1004sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
      *(_OWORD *)(a1 + 10056) = 0u;
      *(_OWORD *)(a1 + 10008) = 0u;
      *(_OWORD *)(a1 + 10024) = 0u;
      *(_OWORD *)(a1 + 9976) = 0u;
      *(_OWORD *)(a1 + 9992) = 0u;
      *(_OWORD *)(a1 + 9944) = 0u;
      *(_OWORD *)(a1 + 996sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
      *(_OWORD *)(a1 + 9912) = 0u;
      *(_OWORD *)(a1 + 9928) = 0u;
      _OWORD *v17 = 0u;
      *(_OWORD *)(a1 + 9896) = 0u;
      if (*(_BYTE *)(a1 + 10120)) {
        *(_BYTE *)(a1 + 1012sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
      }
    }

    sub_10045ED3C((double *)buf, (double *)(a1 + 9872));
  }

uint64_t sub_10045EBD0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100BEF640(a2);
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 2)
    {
      LODWORD(__src[0]) = 0;
      sub_10080873C(a1 + 136, (uint64_t)&__src[1]);
      memset(&__src[18], 0, 176);
    }

    else
    {
      if ((_DWORD)result != 1)
      {
LABEL_7:
        int v9 = 1;
        memcpy(__src, __dst, sizeof(__src));
        return (*(uint64_t (**)(uint64_t, int *, void *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v9,  __src,  1LL,  0xFFFFFFFFLL,  0LL);
      }

      LODWORD(__src[0]) = 1;
      sub_10080873C(a1 + 136, (uint64_t)&__src[1]);
      __int128 v5 = *(_OWORD *)(a2 + 192);
      *(_OWORD *)&__src[33] = *(_OWORD *)(a2 + 176);
      *(_OWORD *)&__src[35] = v5;
      *(_OWORD *)&__src[37] = *(_OWORD *)(a2 + 208);
      __int128 v6 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)&__src[25] = *(_OWORD *)(a2 + 112);
      *(_OWORD *)&__src[27] = v6;
      __int128 v7 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)&__src[29] = *(_OWORD *)(a2 + 144);
      *(_OWORD *)&__src[31] = v7;
      __int128 v8 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)&__src[19] = *(_OWORD *)(a2 + 64);
      __src[18] = *(void *)(a2 + 112);
      __src[39] = *(void *)(a2 + 224);
      *(_OWORD *)&__src[21] = v8;
      *(_OWORD *)&__src[23] = *(_OWORD *)(a2 + 96);
    }

    memcpy(__dst, __src, sizeof(__dst));
    goto LABEL_7;
  }

  return result;
}

void sub_10045ED3C(double *a1, double *a2)
{
  p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  __int128 v5 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    double v6 = *a1;
    uint64_t v7 = *((void *)a1 + 15);
    double v8 = a1[30];
    if (!*((_BYTE *)a1 + 248)) {
      double v8 = 1.79769313e308;
    }
    int v9 = +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v8);
    double v10 = *a2;
    uint64_t v11 = *((void *)a2 + 15);
    double v12 = a2[30];
    if (!*((_BYTE *)a2 + 248)) {
      double v12 = 1.79769313e308;
    }
    *(_DWORD *)int32x2_t buf = 67110402;
    int v45 = LODWORD(v6);
    __int16 v46 = 1024;
    int v47 = v7;
    __int16 v48 = 2112;
    __int128 v49 = v9;
    p_vtable = &OBJC_METACLASS___CLPrivacyManager.vtable;
    __int16 v50 = 1024;
    int v51 = LODWORD(v10);
    __int16 v52 = 1024;
    int v53 = v11;
    __int16 v54 = 2112;
    __int128 v55 = +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v12);
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[snapshot] workout snapshot transitioned from [state %d, workout %d at %@] to [state %d, workout %d at %@]",  buf,  0x2Eu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    uint64_t v18 = qword_101934688;
    double v19 = *a1;
    uint64_t v20 = *((void *)a1 + 15);
    double v21 = a1[30];
    if (!*((_BYTE *)a1 + 248)) {
      double v21 = 1.79769313e308;
    }
    __int128 v22 = +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v21);
    double v23 = *a2;
    uint64_t v24 = *((void *)a2 + 15);
    double v25 = a2[30];
    if (!*((_BYTE *)a2 + 248)) {
      double v25 = 1.79769313e308;
    }
    int v32 = 67110402;
    int v33 = LODWORD(v19);
    __int16 v34 = 1024;
    int v35 = v20;
    __int16 v36 = 2112;
    __int16 v37 = v22;
    __int16 v38 = 1024;
    int v39 = LODWORD(v23);
    __int16 v40 = 1024;
    int v41 = v24;
    __int16 v42 = 2112;
    __int128 v43 = +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v25);
    __int128 v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v18,  0LL,  "[snapshot] workout snapshot transitioned from [state %d, workout %d at %@] to [state %d, workout %d at %@]",  &v32,  46);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLMotionStateMediator::notifySnapshotIfNecessary(const CLMotionStateMediator_Type::WorkoutSnapshot &, const CLMotionStateMediator_Type::WorkoutSnapshot &)",  "%s\n",  v26);
    p_vtable = (void **)(&OBJC_METACLASS___CLPrivacyManager + 24);
  }

  double v13 = *a2;
  if (*(void *)a1 == 1LL && *(void *)&v13 == 5LL || *(void *)a1 == 5LL && *(void *)&v13 == 1LL)
  {
    __int128 v14 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
    {
      double v15 = *a1;
      double v16 = *a2;
      *(_DWORD *)int32x2_t buf = 67109376;
      int v45 = LODWORD(v15);
      __int16 v46 = 1024;
      int v47 = LODWORD(v16);
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "[snapshot] sending snapshot notification from %d to %d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      double v27 = *a1;
      double v28 = *a2;
      int v32 = 67109376;
      int v33 = LODWORD(v27);
      __int16 v34 = 1024;
      int v35 = LODWORD(v28);
      __int128 v29 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "[snapshot] sending snapshot notification from %d to %d",  &v32,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLMotionStateMediator::notifySnapshotIfNecessary(const CLMotionStateMediator_Type::WorkoutSnapshot & , const CLMotionStateMediator_Type::WorkoutSnapshot &)",  "%s\n",  v29);
    }

    if (notify_post((const char *)[kCMWorkoutStateStopDetectionUpdateNotification UTF8String]))
    {
      __int128 v17 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)int32x2_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "[snapshot] encountered error notifying stop detection update",  buf,  2u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        LOWORD(v32) = 0;
        LODWORD(v31) = 2;
        __int128 v30 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "[snapshot] encountered error notifying stop detection update",  &v32,  v31);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "static void CLMotionStateMediator::notifySnapshotIfNecessary(const CLMotionStateMediator_Type::WorkoutSnapshot &, const CLMotionStateMediator_Type::WorkoutSnapshot &)",  "%s\n",  v30);
      }
    }
  }

void sub_10045F2E4(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 9872);
    *(_DWORD *)int32x2_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "[snapshot] evaluating after dismiss from state %d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    uint64_t v17 = *(void *)(a1 + 9872);
    v19[0] = 67109120;
    v19[1] = v17;
    uint64_t v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "[snapshot] evaluating after dismiss from state %d",  v19);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::updateWorkoutSnapshotAfterDismiss()",  "%s\n",  v18);
  }

  uint64_t v4 = sub_100BEF8D0(*(void *)(a1 + 9872));
  __int128 v5 = *(_OWORD *)(a1 + 10080);
  __int128 v32 = *(_OWORD *)(a1 + 10064);
  __int128 v33 = v5;
  __int128 v6 = *(_OWORD *)(a1 + 10112);
  __int128 v34 = *(_OWORD *)(a1 + 10096);
  __int128 v35 = v6;
  __int128 v7 = *(_OWORD *)(a1 + 10016);
  __int128 v28 = *(_OWORD *)(a1 + 10000);
  __int128 v29 = v7;
  __int128 v8 = *(_OWORD *)(a1 + 10048);
  __int128 v30 = *(_OWORD *)(a1 + 10032);
  __int128 v31 = v8;
  __int128 v9 = *(_OWORD *)(a1 + 9952);
  __int128 v24 = *(_OWORD *)(a1 + 9936);
  __int128 v25 = v9;
  __int128 v10 = *(_OWORD *)(a1 + 9984);
  __int128 v26 = *(_OWORD *)(a1 + 9968);
  __int128 v27 = v10;
  __int128 v11 = *(_OWORD *)(a1 + 9888);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)(a1 + 9872);
  __int128 v21 = v11;
  __int128 v12 = *(_OWORD *)(a1 + 9920);
  __int128 v22 = *(_OWORD *)(a1 + 9904);
  __int128 v23 = v12;
  if (v4 != *(void *)buf)
  {
    uint64_t v13 = v4;
    double Current = CFAbsoluteTimeGetCurrent();
    *(void *)(a1 + 9872) = v13;
    double v15 = (char *)(a1 + 10120);
    if (v13)
    {
      *(double *)(a1 + 10112) = Current;
      char v16 = 1;
    }

    else
    {
      *(void *)(a1 + 10104) = 0LL;
      *(_OWORD *)(a1 + 10088) = 0u;
      *(_OWORD *)(a1 + 10072) = 0u;
      *(_OWORD *)(a1 + 10056) = 0u;
      *(_OWORD *)(a1 + 1004sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
      *(_OWORD *)(a1 + 10024) = 0u;
      *(_OWORD *)(a1 + 10008) = 0u;
      *(_OWORD *)(a1 + 9992) = 0u;
      *(_OWORD *)(a1 + 9976) = 0u;
      *(_OWORD *)(a1 + 996sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
      *(_OWORD *)(a1 + 9944) = 0u;
      *(_OWORD *)(a1 + 9928) = 0u;
      *(_OWORD *)(a1 + 9912) = 0u;
      *(_OWORD *)(a1 + 9896) = 0u;
      *(_OWORD *)(a1 + 988sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
      if (!*v15)
      {
LABEL_12:
        sub_10045ED3C((double *)buf, (double *)(a1 + 9872));
        return;
      }

      char v16 = 0;
    }

    char *v15 = v16;
    goto LABEL_12;
  }

void sub_10045F598(uint64_t a1, __int16 a2)
{
  if (!sub_100DDA4D4()) {
    return;
  }
  if ((a2 & 0x101) != 0)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    uint64_t v4 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Enabled device motion.", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      v19[0] = 0;
      __int128 v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Enabled device motion.",  v19,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::startStopDeviceMotionBasedOnWorkout(CLWorkoutPredictor_Type::DeviceMotionToggleInfo)",  "%s\n",  v14);
    }

    uint64_t v5 = sub_100DDA4D4();
    sub_100DDAEA4(v5, *(void *)(a1 + 672), 0.01);
  }

  else
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    __int128 v6 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Disabled device motion.", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      v19[0] = 0;
      double v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Disabled device motion.",  v19,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::startStopDeviceMotionBasedOnWorkout(CLWorkoutPredictor_Type::DeviceMotionToggleInfo)",  "%s\n",  v15);
    }

    uint64_t v7 = sub_100DDA4D4();
    sub_100DDB140(v7, *(void *)(a1 + 672));
  }

  __int128 v8 = (char **)(a1 + 8224);
  uint64_t v9 = *(void *)(a1 + 8224);
  if ((a2 & 1) == 0)
  {
    if (!v9) {
      return;
    }
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    __int128 v10 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Stopping turn detector", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      v19[0] = 0;
      LODWORD(v18) = 2;
      char v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Stopping turn detector",  v19,  v18);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::startStopDeviceMotionBasedOnWorkout(CLWorkoutPredictor_Type::DeviceMotionToggleInfo)",  "%s\n",  v16);
    }

    __int128 v11 = *v8;
    *__int128 v8 = 0LL;
    if (!v11) {
      return;
    }
LABEL_31:
    sub_100476918((uint64_t)v8, v11);
    return;
  }

  if (!v9)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    __int128 v12 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Starting turn detector", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      v19[0] = 0;
      LODWORD(v18) = 2;
      uint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Starting turn detector",  v19,  v18);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::startStopDeviceMotionBasedOnWorkout(CLWorkoutPredictor_Type::DeviceMotionToggleInfo)",  "%s\n",  v17);
    }

    uint64_t v13 = (char *)operator new(0x750uLL);
    sub_100E090A4((uint64_t)v13);
    __int128 v11 = *v8;
    *__int128 v8 = v13;
    if (v11) {
      goto LABEL_31;
    }
  }

void sub_10045FB30(_Unwind_Exception *a1)
{
}

void sub_10045FB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v36 = *(_OWORD *)a3;
  __int128 v6 = (const std::string *)(a3 + 16);
  if (*(char *)(a3 + 39) < 0)
  {
    sub_1010DD48C(&v37, *(void **)(a3 + 16), *(void *)(a3 + 24));
  }

  else
  {
    __int128 v37 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    uint64_t v38 = *(void *)(a3 + 32);
  }

  sub_10046A230((uint64_t)v39, (void *)(a3 + 40));
  uint64_t v18 = a1;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  obunint64_t j = *(id *)(a1 + 680);
  id v7 = [obj countByEnumeratingWithState:&v21 objects:v35 count:16];
  if (v7)
  {
    uint64_t v20 = *(void *)v22;
    do
    {
      for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v20) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v21 + 1) + 8LL * (void)i);
        __int128 v10 = *(_OWORD *)(a2 + 208);
        v33[12] = *(_OWORD *)(a2 + 192);
        v33[13] = v10;
        uint64_t v34 = *(void *)(a2 + 224);
        __int128 v11 = *(_OWORD *)(a2 + 144);
        v33[8] = *(_OWORD *)(a2 + 128);
        v33[9] = v11;
        __int128 v12 = *(_OWORD *)(a2 + 176);
        v33[10] = *(_OWORD *)(a2 + 160);
        v33[11] = v12;
        __int128 v13 = *(_OWORD *)(a2 + 80);
        v33[4] = *(_OWORD *)(a2 + 64);
        v33[5] = v13;
        __int128 v14 = *(_OWORD *)(a2 + 112);
        v33[6] = *(_OWORD *)(a2 + 96);
        v33[7] = v14;
        __int128 v15 = *(_OWORD *)(a2 + 16);
        v33[0] = *(_OWORD *)a2;
        v33[1] = v15;
        __int128 v16 = *(_OWORD *)(a2 + 48);
        id v33[2] = *(_OWORD *)(a2 + 32);
        v33[3] = v16;
        __int128 v29 = v36;
        if (SHIBYTE(v38) < 0)
        {
          sub_1010DD48C(&v30, (void *)v37, *((unint64_t *)&v37 + 1));
        }

        else
        {
          __int128 v30 = v37;
          uint64_t v31 = v38;
        }

        sub_10046A230((uint64_t)v32, v39);
        id v17 = sub_1004583A4(&v29);
        __int128 v25 = *(_OWORD *)(v18 + 8696);
        if (*(char *)(v18 + 8735) < 0)
        {
          sub_1010DD48C(&__p, *(void **)(v18 + 8712), *(void *)(v18 + 8720));
        }

        else
        {
          __int128 __p = *(_OWORD *)(v18 + 8712);
          uint64_t v27 = *(void *)(v18 + 8728);
        }

        sub_10046E90C((uint64_t)v28, (void *)(v18 + 8736));
        [v9 onWorkoutSessionUpdate:v33 withOverview:v17 andPriors:sub_10045FEE0(&v25)];
        sub_1002C5F18(v28);
        if (SHIBYTE(v27) < 0) {
          operator delete((void *)__p);
        }
        sub_10041385C(v32);
        if (SHIBYTE(v31) < 0) {
          operator delete((void *)v30);
        }
      }

      id v7 = [obj countByEnumeratingWithState:&v21 objects:v35 count:16];
    }

    while (v7);
  }

  *(_OWORD *)(v18 + 8784) = *(_OWORD *)a3;
  std::string::operator=((std::string *)(v18 + 8800), v6);
  sub_10046F224((void *)(v18 + 8824), (void *)(a3 + 40));
  sub_10041385C(v39);
  if (SHIBYTE(v38) < 0) {
    operator delete((void *)v37);
  }
}

void sub_10045FE50( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29, uint64_t a30, void *__p, uint64_t a32, int a33, __int16 a34, char a35, char a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, char a44, uint64_t a45, void *a46, uint64_t a47, int a48, __int16 a49, char a50,char a51)
{
}

id sub_10045FEE0(__int128 *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768LL;
  v4[2] = sub_100476F38;
  void v4[3] = &unk_10183B120;
  __int128 v5 = *a1;
  if (*((char *)a1 + 39) < 0)
  {
    sub_1010DD48C(&__p, *((void **)a1 + 2), *((void *)a1 + 3));
  }

  else
  {
    __int128 __p = a1[1];
    uint64_t v7 = *((void *)a1 + 4);
  }

  sub_10046E90C((uint64_t)v8, (void *)a1 + 5);
  id v2 = [v4 copy];
  sub_1002C5F18(v8);
  if (SHIBYTE(v7) < 0) {
    operator delete((void *)__p);
  }
  return v2;
}

void sub_10045FFE0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

uint64_t sub_100460014(uint64_t a1)
{
  uint64_t v2 = a1 + 8896;
  int v3 = *(unsigned __int8 *)(a1 + 8896);
  if (*(_BYTE *)(a1 + 8896))
  {
    if (*(_BYTE *)(a1 + 10168)) {
      int v3 = 0;
    }
    else {
      int v3 = *(_DWORD *)(a1 + 376) == 0;
    }
  }

  *(_BYTE *)(a1 + 488) = v3;
  *(_BYTE *)(a1 + 552) = 1;
  int v4 = *(unsigned __int8 *)(a1 + 8898);
  if (*(_BYTE *)(a1 + 8898)) {
    int v4 = !*(_BYTE *)(a1 + 10168) && !*(_DWORD *)(a1 + 376) && *(_BYTE *)(a1 + 8899) != 0;
  }
  *(_BYTE *)(a1 + 52sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v4;
  *(_BYTE *)(a1 + 584) = 1;
  if (*(_BYTE *)(a1 + 491))
  {
    BOOL v5 = *(_BYTE *)(a1 + 490) != 0;
  }

  else if (*(_BYTE *)(a1 + 489))
  {
    BOOL v5 = 0;
  }

  else
  {
    BOOL v5 = v3;
  }

  if (*(_BYTE *)(a1 + 523))
  {
    BOOL v6 = *(_BYTE *)(a1 + 522) != 0;
  }

  else if (*(_BYTE *)(a1 + 521))
  {
    BOOL v6 = 0;
  }

  else
  {
    BOOL v6 = v4;
  }

  if (*(_BYTE *)(a1 + 555)) {
    BOOL v7 = *(_BYTE *)(a1 + 554) != 0;
  }
  else {
    BOOL v7 = *(_BYTE *)(a1 + 553) == 0;
  }
  if (*(_BYTE *)(a1 + 587)) {
    BOOL v8 = *(_BYTE *)(a1 + 586) != 0;
  }
  else {
    BOOL v8 = *(_BYTE *)(a1 + 585) == 0;
  }
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v9 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v10 = *(_DWORD *)(a1 + 376) == 0;
    int v11 = *(unsigned __int8 *)(v2 + 3);
    *(_DWORD *)int32x2_t buf = 67241472;
    BOOL v28 = v5;
    __int16 v29 = 1026;
    BOOL v30 = v6;
    __int16 v31 = 1026;
    BOOL v32 = v7;
    __int16 v33 = 1026;
    BOOL v34 = v8;
    __int16 v35 = 1026;
    BOOL v36 = v10;
    __int16 v37 = 1024;
    int v38 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Workout settings, start, %{public}d, resume, %{public}d, end, %{public}d, autopause, %{public}d, valid user info, %{public}d,  fitness tracking allowed, %d",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    BOOL v13 = *(_DWORD *)(a1 + 376) == 0;
    int v14 = *(unsigned __int8 *)(v2 + 3);
    v16[0] = 67241472;
    v16[1] = v5;
    __int16 v17 = 1026;
    BOOL v18 = v6;
    __int16 v19 = 1026;
    BOOL v20 = v7;
    __int16 v21 = 1026;
    BOOL v22 = v8;
    __int16 v23 = 1026;
    BOOL v24 = v13;
    __int16 v25 = 1024;
    int v26 = v14;
    __int128 v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout settings, start, %{public}d, resume, %{public}d, end, %{public}d, autopause, %{public}d, val id user info, %{public}d,  fitness tracking allowed, %d",  v16,  38);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateMediator::updateWorkoutReminderSettings()", "%s\n", v15);
  }

  sub_100A78538((unsigned __int8 *)(a1 + 6616), v5, v7);
  sub_100A83068(a1 + 6616, v8);
  uint64_t result = *(void *)(a1 + 10184);
  if (result) {
    return sub_100D1D3AC(result, v6);
  }
  return result;
}

void sub_10046037C(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 328);
  if (a2)
  {
    if (v3)
    {
      if (qword_101934750 != -1) {
        dispatch_once(&qword_101934750, &stru_10183A330);
      }
      int v4 = (os_log_s *)qword_101934758;
      if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)int32x2_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Wifi timer already existed, reinitializing.",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934750 != -1) {
          dispatch_once(&qword_101934750, &stru_10183A330);
        }
        v13[0] = 0;
        uint64_t v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  1LL,  "Wifi timer already existed, reinitializing.",  v13,  2);
        sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLMotionStateMediator::controlWifiScans(BOOL)", "%s\n", v9);
      }

      dispatch_release(*(dispatch_object_t *)(a1 + 328));
      *(void *)(a1 + 328) = 0LL;
    }

    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183A330);
    }
    BOOL v5 = (os_log_s *)qword_101934758;
    if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Starting Wifi Scans.", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934750 != -1) {
        dispatch_once(&qword_101934750, &stru_10183A330);
      }
      v13[0] = 0;
      LODWORD(v11) = 2;
      BOOL v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  1LL,  "Starting Wifi Scans.",  v13,  v11);
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLMotionStateMediator::controlWifiScans(BOOL)", "%s\n", v8);
    }

    BOOL v6 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0,  0,  (dispatch_queue_t)[*(id *)(a1 + 40) queue]);
    *(void *)(a1 + 328) = v6;
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_10046081C;
    handler[3] = &unk_10181D3D0;
    handler[4] = a1;
    dispatch_source_set_event_handler(v6, handler);
    dispatch_source_set_timer(*(dispatch_source_t *)(a1 + 328), 0LL, 0x1DCD65000uLL, 0x3B9ACA00uLL);
    dispatch_resume(*(dispatch_object_t *)(a1 + 328));
  }

  else if (v3)
  {
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183A330);
    }
    BOOL v7 = (os_log_s *)qword_101934758;
    if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Stopping Wifi Scans.", buf, 2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934750 != -1) {
        dispatch_once(&qword_101934750, &stru_10183A330);
      }
      v13[0] = 0;
      BOOL v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  1LL,  "Stopping Wifi Scans.",  v13,  2);
      sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLMotionStateMediator::controlWifiScans(BOOL)", "%s\n", v10);
    }

    dispatch_release(*(dispatch_object_t *)(a1 + 328));
    *(void *)(a1 + 328) = 0LL;
  }

id sub_10046081C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (qword_101934750 != -1) {
    dispatch_once(&qword_101934750, &stru_10183A330);
  }
  uint64_t v2 = (os_log_s *)qword_101934758;
  if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Triggering Wifi Scan.", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183A330);
    }
    v5[0] = 0;
    int v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  2LL,  "Triggering Wifi Scan.",  v5,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateMediator::controlWifiScans(BOOL)_block_invoke",  "%s\n",  v4);
  }

  return [*(id *)(*(void *)(v1 + 10248) + 16) syncgetStartScanWithType:8 lowPriority:0 passive:0 requester:"motionworkout"];
}

void sub_1004609CC(uint64_t a1, int a2)
{
}

void sub_1004609D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 10224);
  if (v1)
  {
    if (*(_WORD *)(a1 + 688))
    {
      __int16 v3 = *(_WORD *)(a1 + 688) - 1;
      *(_WORD *)(a1 + 688) = v3;
      if (!v3) {
        [*(id *)(v1 + 16) unregister:*(void *)(v1 + 8) forNotification:9];
      }
    }

    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v4 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = *(unsigned __int16 *)(a1 + 688);
      *(_DWORD *)int32x2_t buf = 67109120;
      int v11 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "OneSecondHeartRateCounter %d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      int v6 = *(unsigned __int16 *)(a1 + 688);
      v9[0] = 67109120;
      v9[1] = v6;
      BOOL v7 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "OneSecondHeartRateCounter %d",  v9);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateMediator::unregisterOneSecondHeartRate()", "%s\n");
LABEL_22:
      if (v7 != buf) {
        free(v7);
      }
    }
  }

  else
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    BOOL v8 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Attempting unregistering for 1Hz HR with uninitialized HR client",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      LOWORD(v9[0]) = 0;
      BOOL v7 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "Attempting unregistering for 1Hz HR with uninitialized HR client",  v9,  2);
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLMotionStateMediator::unregisterOneSecondHeartRate()", "%s\n");
      goto LABEL_22;
    }
  }

void sub_100460CCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 10224);
  if (v1)
  {
    [*(id *)(v1 + 16) register:*(void *)(v1 + 8) forNotification:9 registrationInfo:0];
    ++*(_WORD *)(a1 + 688);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    __int16 v3 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = *(unsigned __int16 *)(a1 + 688);
      *(_DWORD *)int32x2_t buf = 67109120;
      int v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Registering for 1Hz HR. OneSecondHeartRateCounter %d",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      int v5 = *(unsigned __int16 *)(a1 + 688);
      v8[0] = 67109120;
      v8[1] = v5;
      int v6 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Registering for 1Hz HR. OneSecondHeartRateCounter %d",  v8);
      sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateMediator::registerOneSecondHeartRate()", "%s\n");
LABEL_19:
      if (v6 != buf) {
        free(v6);
      }
    }
  }

  else
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    BOOL v7 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Attempting registering for 1Hz HR with uninitialized HR client",  buf,  2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      LOWORD(v8[0]) = 0;
      int v6 = (uint8_t *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "Attempting registering for 1Hz HR with uninitialized HR client",  v8,  2);
      sub_10029211C("Generic", 1LL, 0, 0LL, "void CLMotionStateMediator::registerOneSecondHeartRate()", "%s\n");
      goto LABEL_19;
    }
  }

uint64_t sub_100460FBC(uint64_t a1, uint64_t a2)
{
  if (qword_101934750 != -1) {
    dispatch_once(&qword_101934750, &stru_10183A330);
  }
  int v4 = (os_log_s *)qword_101934758;
  if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "IndoorOutdoor, starting indoorOutdoor", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183A330);
    }
    v7[0] = 0;
    int v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  0LL,  "IndoorOutdoor, starting indoorOutdoor",  v7,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateMediator::startIndoorOutdoorSession(const IndoorOutdoorSettings &)",  "%s\n",  v6);
  }

  return (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 8232) + 56LL))(*(void *)(a1 + 8232), a2);
}

uint64_t sub_100461164(uint64_t a1, uint64_t a2)
{
  return sub_100460FBC(a1 - 112, a2);
}

uint64_t sub_10046116C(uint64_t a1)
{
  if (qword_101934750 != -1) {
    dispatch_once(&qword_101934750, &stru_10183A330);
  }
  uint64_t v2 = (os_log_s *)qword_101934758;
  if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "IndoorOutdoor, stopping indoorOutdoor", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183A330);
    }
    v5[0] = 0;
    int v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  0LL,  "IndoorOutdoor, stopping indoorOutdoor",  v5,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLMotionStateMediator::stopIndoorOutdoorSession()", "%s\n", v4);
  }

  return (*(uint64_t (**)(void))(**(void **)(a1 + 8232) + 64LL))(*(void *)(a1 + 8232));
}

uint64_t sub_10046130C(uint64_t a1)
{
  return sub_10046116C(a1 - 112);
}

void sub_100461314(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(a1 + 8936) = (*(_DWORD *)(a2 + 24) << 30) + (*(_DWORD *)(a2 + 32) << 27);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  unint64_t v7 = *(void *)a2 - 1LL;
  if (v7 > 3) {
    uint64_t v8 = 0LL;
  }
  else {
    uint64_t v8 = qword_1012ED478[v7];
  }
  uint64_t v9 = *(void *)(a2 + 16);
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  __int128 v45 = 0u;
  __int128 v46 = 0u;
  __int128 v44 = 0u;
  uint64_t v47 = 0LL;
  __int128 v43 = 0u;
  __int128 v42 = 0u;
  __int128 v41 = 0u;
  __int128 v40 = 0u;
  __int128 v39 = 0u;
  __int128 v38 = 0u;
  __int128 v37 = 0u;
  __int128 v36 = 0u;
  __int128 v35 = 0u;
  __int128 v34 = 0u;
  __int128 v33 = 0u;
  __int128 v32 = 0u;
  __int128 v31 = 0u;
  __int128 v30 = 0u;
  __int128 v29 = 0u;
  *(CFAbsoluteTime *)BOOL v28 = Current;
  v28[1] = v8;
  _OWORD v28[2] = v6;
  if (qword_101934750 != -1) {
    dispatch_once(&qword_101934750, &stru_10183A330);
  }
  int v11 = (os_log_s *)qword_101934758;
  if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)int32x2_t buf = 134349568;
    uint64_t v23 = v8;
    __int16 v24 = 2050;
    uint64_t v25 = v6;
    __int16 v26 = 2050;
    uint64_t v27 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "IndoorOutdoor,new location type,%{public}ld,confidence,%{public}ld,probability,%{public}f",  buf,  0x20u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183A330);
    }
    int v16 = 134349568;
    uint64_t v17 = v8;
    __int16 v18 = 2050;
    uint64_t v19 = v6;
    __int16 v20 = 2050;
    uint64_t v21 = v9;
    __int128 v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  1LL,  "IndoorOutdoor,new location type,%{public}ld,confidence,%{public}ld,probability,%{public}f",  &v16,  32);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateMediator::onIndoorOutdoorUpdate(const CLIndoorOutdoorProtocol::IndoorOutdoorEvent &, BOOL)",  "%s\n",  v12);
  }

  *(_DWORD *)int32x2_t buf = 3;
  (*(void (**)(uint64_t, uint8_t *, void *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  v28,  1LL,  0xFFFFFFFFLL,  0LL);
  if (*(_BYTE *)(a1 + 461))
  {
    (*(void (**)(uint64_t))(*(void *)a1 + 216LL))(a1);
  }

  else if (a3)
  {
    sub_100A83018(a1 + 6616, v5);
  }

  uint64_t v15 = *(void *)(a1 + 10152);
  __int128 v14 = *(_OWORD *)(a1 + 10136);
  *(CFAbsoluteTime *)BOOL v13 = Current;
  v13[1] = v8;
  v13[2] = v6;
  sub_100461638((_DWORD *)a1, (uint64_t)&v14, (uint64_t)v13);
  *(CFAbsoluteTime *)(a1 + 10136) = Current;
  *(void *)(a1 + 10144) = v8;
  *(void *)(a1 + 10152) = v6;
}

void sub_100461638(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  NSInteger v6 = -[NSDateComponents hour]( -[NSCalendar components:fromDate:]( +[NSCalendar currentCalendar](&OBJC_CLASS___NSCalendar, "currentCalendar"),  "components:fromDate:",  32LL,  +[NSDate date](&OBJC_CLASS___NSDate, "date")),  "hour");
  if (v6 == a1[2541])
  {
    int v7 = a1[2540];
  }

  else
  {
    int v7 = 0;
    a1[2541] = v6;
    a1[2540] = 0;
  }

  if (v7 < a1[110])
  {
    a1[2540] = v7 + 1;
    sub_1010DDBC0(&v44, off_10183B280[*(void *)(a2 + 8)]);
    sub_1010DDBC0(v42, off_10183B2A0[*(void *)(a2 + 16)]);
    sub_1010DDBC0( &v40,  (char *)-[NSString UTF8String]( +[NSDateFormatter localizedStringFromDate:dateStyle:timeStyle:]( &OBJC_CLASS___NSDateFormatter,  "localizedStringFromDate:dateStyle:timeStyle:",  +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  *(double *)a2),  1LL,  1LL),  "UTF8String"));
    sub_1010DDBC0(v38, off_10183B280[*(void *)(a3 + 8)]);
    sub_1010DDBC0(&v36, off_10183B2A0[*(void *)(a3 + 16)]);
    sub_1010DDBC0( v34,  (char *)-[NSString UTF8String]( +[NSDateFormatter localizedStringFromDate:dateStyle:timeStyle:]( &OBJC_CLASS___NSDateFormatter,  "localizedStringFromDate:dateStyle:timeStyle:",  +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  *(double *)a3),  1LL,  1LL),  "UTF8String"));
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183A330);
    }
    uint64_t v8 = (os_log_s *)qword_101934758;
    if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = &v44;
      if (v45 < 0) {
        uint64_t v9 = (__int128 *)v44;
      }
      int v10 = v42;
      if (v43 < 0) {
        int v10 = (void **)v42[0];
      }
      int v11 = v38;
      if (v39 < 0) {
        int v11 = (void **)v38[0];
      }
      __int128 v12 = &v36;
      if (v37 < 0) {
        __int128 v12 = (__int128 *)v36;
      }
      *(_DWORD *)int32x2_t buf = 136315906;
      __int128 v55 = v9;
      __int16 v56 = 2080;
      __int128 v57 = v10;
      __int16 v58 = 2080;
      uint64_t v59 = v11;
      __int16 v60 = 2080;
      char v61 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "IndoorOutdoor, issuing notification old (%s, %s) new (%s, %s)",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934750 != -1) {
        dispatch_once(&qword_101934750, &stru_10183A330);
      }
      BOOL v13 = &v44;
      if (v45 < 0) {
        BOOL v13 = (__int128 *)v44;
      }
      __int128 v14 = v42;
      if (v43 < 0) {
        __int128 v14 = (void **)v42[0];
      }
      uint64_t v15 = v38;
      if (v39 < 0) {
        uint64_t v15 = (void **)v38[0];
      }
      int v16 = &v36;
      if (v37 < 0) {
        int v16 = (__int128 *)v36;
      }
      int v46 = 136315906;
      uint64_t v47 = v13;
      __int16 v48 = 2080;
      __int128 v49 = v14;
      __int16 v50 = 2080;
      int v51 = v15;
      __int16 v52 = 2080;
      int v53 = v16;
      uint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  0LL,  "IndoorOutdoor, issuing notification old (%s, %s) new (%s, %s)",  (const char *)&v46,  42,  (const char *)block,  (const char *)v19);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::issueUserNotificationForIndoorOutdoorIfAllowed(CLMotionStateMediator_Type::IndoorOut doorUpdate, CLMotionStateMediator_Type::IndoorOutdoorUpdate)",  "%s\n",  v17);
    }

    block = _NSConcreteStackBlock;
    uint64_t v19 = 3321888768LL;
    __int16 v20 = sub_100461D18;
    uint64_t v21 = &unk_101839890;
    if (SHIBYTE(v41) < 0)
    {
      sub_1010DD48C(&v22, (void *)v40, *((unint64_t *)&v40 + 1));
    }

    else
    {
      __int128 v22 = v40;
      uint64_t v23 = v41;
    }

    if (SHIBYTE(v45) < 0)
    {
      sub_1010DD48C(&v24, (void *)v44, *((unint64_t *)&v44 + 1));
    }

    else
    {
      __int128 v24 = v44;
      uint64_t v25 = v45;
    }

    if (SHIBYTE(v43) < 0)
    {
      sub_1010DD48C(&v26, v42[0], (unint64_t)v42[1]);
    }

    else
    {
      __int128 v26 = *(_OWORD *)v42;
      uint64_t v27 = v43;
    }

    if (SHIBYTE(v35) < 0)
    {
      sub_1010DD48C(&v28, v34[0], (unint64_t)v34[1]);
    }

    else
    {
      __int128 v28 = *(_OWORD *)v34;
      uint64_t v29 = v35;
    }

    if (SHIBYTE(v39) < 0)
    {
      sub_1010DD48C(&v30, v38[0], (unint64_t)v38[1]);
    }

    else
    {
      __int128 v30 = *(_OWORD *)v38;
      uint64_t v31 = v39;
    }

    if (SHIBYTE(v37) < 0)
    {
      sub_1010DD48C(&__p, (void *)v36, *((unint64_t *)&v36 + 1));
    }

    else
    {
      __int128 __p = v36;
      uint64_t v33 = v37;
    }

    dispatch_async(&_dispatch_main_q, &block);
    if (SHIBYTE(v33) < 0) {
      operator delete((void *)__p);
    }
    if (SHIBYTE(v31) < 0) {
      operator delete((void *)v30);
    }
    if (SHIBYTE(v29) < 0) {
      operator delete((void *)v28);
    }
    if (SHIBYTE(v27) < 0) {
      operator delete((void *)v26);
    }
    if (SHIBYTE(v25) < 0) {
      operator delete((void *)v24);
    }
    if (SHIBYTE(v23) < 0) {
      operator delete((void *)v22);
    }
    if (SHIBYTE(v35) < 0) {
      operator delete(v34[0]);
    }
    if (SHIBYTE(v37) < 0) {
      operator delete((void *)v36);
    }
    if (SHIBYTE(v39) < 0) {
      operator delete(v38[0]);
    }
    if (SHIBYTE(v41) < 0) {
      operator delete((void *)v40);
    }
    if (SHIBYTE(v43) < 0) {
      operator delete(v42[0]);
    }
    if (SHIBYTE(v45) < 0) {
      operator delete((void *)v44);
    }
  }

void sub_100461BF0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20, void *a21, uint64_t a22, uint64_t a23, void *a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, void *__p, uint64_t a34, int a35, __int16 a36, char a37, char a38, void *a39, uint64_t a40, int a41, __int16 a42, char a43, char a44, void *a45, uint64_t a46, int a47, __int16 a48, char a49, char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  if (a38 < 0) {
    operator delete(__p);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  if (a56 < 0) {
    operator delete(a51);
  }
  if (a62 < 0) {
    operator delete(a57);
  }
  if (a68 < 0) {
    operator delete(a63);
  }
  _Unwind_Resume(a1);
}

void sub_100461D10(uint64_t a1, uint64_t a2, int a3)
{
}

void sub_100461D18(char *a1)
{
  uint64_t v1 = a1 + 32;
  if (a1[55] < 0) {
    uint64_t v1 = (void *)*v1;
  }
  uint64_t v2 = a1 + 56;
  if (a1[79] < 0) {
    uint64_t v2 = (void *)*v2;
  }
  __int16 v3 = a1 + 80;
  if (a1[103] < 0) {
    __int16 v3 = (void *)*v3;
  }
  int v4 = a1 + 104;
  if (a1[127] < 0) {
    int v4 = (void *)*v4;
  }
  uint64_t v5 = a1 + 128;
  if (a1[151] < 0) {
    uint64_t v5 = (void *)*v5;
  }
  NSInteger v6 = a1 + 152;
  if (a1[175] < 0) {
    NSInteger v6 = (void *)*v6;
  }
  int v7 = CFStringCreateWithFormat( 0LL,  0LL,  @"Old indoor/outdoor state\n%s, %s, %s New\n%s, %s, %s",  v1,  v2,  v3,  v4,  v5,  v6);
  CFUserNotificationDisplayNotice(0.0, 0LL, 0LL, 0LL, 0LL, @"IndoorOutdoorState", v7, 0LL);
  CFRelease(v7);
}

_BYTE *sub_100461DE8(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 55) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }

  else
  {
    __int128 v4 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v4;
  }

  if (*(char *)(a2 + 79) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 56), *(void **)(a2 + 56), *(void *)(a2 + 64));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = v5;
  }

  if (*(char *)(a2 + 103) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 80), *(void **)(a2 + 80), *(void *)(a2 + 88));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v6;
  }

  if (*(char *)(a2 + 127) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 104), *(void **)(a2 + 104), *(void *)(a2 + 112));
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = v7;
  }

  if (*(char *)(a2 + 151) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 128), *(void **)(a2 + 128), *(void *)(a2 + 136));
  }

  else
  {
    __int128 v8 = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = v8;
  }

  uint64_t result = (_BYTE *)(a1 + 152);
  __int128 v10 = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)uint64_t result = v10;
  return result;
}

void sub_100461F3C(_Unwind_Exception *exception_object)
{
  if (v2[151] < 0) {
    operator delete(*v6);
  }
  if (v2[127] < 0) {
    operator delete(*v5);
  }
  if (v2[103] < 0) {
    operator delete(*v4);
  }
  if (v2[79] < 0) {
    operator delete(*v3);
  }
  if (v2[55] < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100461FB8(uint64_t a1)
{
}

uint64_t sub_10046203C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  __int128 v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Did Begin Workout Session", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    v14[0] = 0;
    BOOL v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Did Begin Workout Session",  v14,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateMediator::onDidBeginWorkoutSession(const CLMotionStateMediator_Type::WorkoutEvent &, con st CLMotionStateMediator_Type::WorkoutSessionOverview &)",  "%s\n",  v13);
  }

  sub_10045FB4C(a1, a2, a3);
  sub_10045E038(a1, a2);
  __int128 v7 = *(_OWORD *)(a2 + 208);
  v15[8] = *(_OWORD *)(a2 + 192);
  _OWORD v15[9] = v7;
  uint64_t v16 = *(void *)(a2 + 224);
  __int128 v8 = *(_OWORD *)(a2 + 144);
  v15[4] = *(_OWORD *)(a2 + 128);
  v15[5] = v8;
  __int128 v9 = *(_OWORD *)(a2 + 176);
  v15[6] = *(_OWORD *)(a2 + 160);
  v15[7] = v9;
  __int128 v10 = *(_OWORD *)(a2 + 80);
  v15[0] = *(_OWORD *)(a2 + 64);
  v15[1] = v10;
  __int128 v11 = *(_OWORD *)(a2 + 112);
  _DWORD v15[2] = *(_OWORD *)(a2 + 96);
  void v15[3] = v11;
  sub_100462254(a1, (uint64_t)v15);
  return sub_100462444(a1, a2 + 64);
}

id sub_100462254(uint64_t a1, uint64_t a2)
{
  double v4 = sub_100F6D8D4(*(void *)(a2 + 48));
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  __int128 v5 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 134349056;
    double v11 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "#gfc started workout, starting geofence with radius %{public}f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v8 = 134349056;
    double v9 = v4;
    __int128 v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "#gfc started workout, starting geofence with radius %{public}f",  &v8,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::overrideActivity(CLMotionStateMediator_Type::WorkoutSettings)",  "%s\n",  v7);
  }

  id result = (id)sub_1001B9A1C();
  if ((_DWORD)result)
  {
    if (v4 != -1.0) {
      return [*(id *)(a1 + 10128) startGeoFenceWithRadius:v4];
    }
  }

  return result;
}

uint64_t sub_100462444(uint64_t a1, uint64_t a2)
{
  double v4 = (uint64_t *)(a1 + 10184);
  if (*(void *)(a1 + 10184)) {
    sub_100463030((uint64_t *)(a1 + 10184), 0LL);
  }
  __int128 v5 = operator new(0x138uLL);
  __int128 v6 = *(_OWORD *)(a2 + 144);
  v18[8] = *(_OWORD *)(a2 + 128);
  v18[9] = v6;
  uint64_t v19 = *(void *)(a2 + 160);
  __int128 v7 = *(_OWORD *)(a2 + 80);
  v18[4] = *(_OWORD *)(a2 + 64);
  v18[5] = v7;
  __int128 v8 = *(_OWORD *)(a2 + 112);
  v18[6] = *(_OWORD *)(a2 + 96);
  _DWORD v18[7] = v8;
  __int128 v9 = *(_OWORD *)(a2 + 16);
  v18[0] = *(_OWORD *)a2;
  v18[1] = v9;
  __int128 v10 = *(_OWORD *)(a2 + 48);
  v18[2] = *(_OWORD *)(a2 + 32);
  void v18[3] = v10;
  v16[0] = &off_10183B1D8;
  v16[1] = a1;
  uint64_t v17 = v16;
  sub_100D1C39C(v5, a1 + 6648, v18, v16);
  double v11 = v17;
  if (v17 == v16)
  {
    uint64_t v12 = 4LL;
    double v11 = v16;
  }

  else
  {
    if (!v17) {
      goto LABEL_8;
    }
    uint64_t v12 = 5LL;
  }

  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_8:
  sub_100463030(v4, (uint64_t)v5);
  if (*(_BYTE *)(a1 + 523))
  {
    BOOL v13 = *(_BYTE *)(a1 + 522) == 0;
  }

  else if (*(_BYTE *)(a1 + 521))
  {
    BOOL v13 = 1;
  }

  else
  {
    BOOL v13 = *(_BYTE *)(a1 + 520) == 0;
  }

  int v14 = !v13;
  return sub_100D1D3AC(*(void *)(a1 + 10184), v14);
}

void sub_100462594( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

uint64_t sub_1004625DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10046203C(a1 - 120, a2, a3);
}

void sub_1004625E8(uint64_t a1, uint64_t a2)
{
}

void sub_1004625F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  __int128 v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Did End Workout Session", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    v9[0] = 0;
    __int128 v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Did End Workout Session",  v9,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateMediator::onDidEndWorkoutSession(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &)",  "%s\n",  v8);
  }

  sub_100462890(a1, *(double *)(a2 + 8));
  if (*(void *)(a2 + 16) == 15LL)
  {
    sub_10080873C(a1 + 136, (uint64_t)buf);
    sub_100462A58( a1,  (uint64_t)+[CMWorkout CMWorkoutTypeFromCLMotionActivityType:]( &OBJC_CLASS___CMWorkout,  "CMWorkoutTypeFromCLMotionActivityType:",  *(unsigned int *)buf),  *(double *)(a2 + 8));
  }

  sub_10045FB4C(a1, a2, a3);
  sub_10045E038(a1, a2);
  uint64_t v13 = 0LL;
  *(_OWORD *)__int128 __p = 0u;
  memset(v12, 0, sizeof(v12));
  *(_OWORD *)int32x2_t buf = 0u;
  __int128 v7 = (void **)(a1 + 8800);
  *(_OWORD *)(a1 + 8784) = 0u;
  *(_OWORD *)__int128 v7 = *(_OWORD *)__p;
  *(void *)(a1 + 8816) = *(void *)&v12[0];
  BYTE7(v12[0]) = 0;
  LOBYTE(__p[0]) = 0;
  sub_10046F680((void *)(a1 + 8824), (uint64_t)v12 + 8);
  sub_10041385C((void *)v12 + 1);
  if (SBYTE7(v12[0]) < 0) {
    operator delete(__p[0]);
  }
  if (*(void *)(a1 + 10184)) {
    sub_100463030((uint64_t *)(a1 + 10184), 0LL);
  }
}

uint64_t sub_100462890(uint64_t a1, double a2)
{
  uint64_t result = sub_100495E98((_DWORD *)(a1 + 136));
  if ((_DWORD)result)
  {
    sub_100A8226C((void *)(a1 + 6616), a2);
    uint64_t result = sub_1001B9A1C();
    if ((_DWORD)result)
    {
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      __int128 v5 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)int32x2_t buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "#gfc stopped workout, stopping geofence",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_1018399F8);
        }
        v7[0] = 0;
        __int128 v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "#gfc stopped workout, stopping geofence",  v7,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::clearActivityOverride(CFAbsoluteTime)",  "%s\n",  v6);
      }

      return (uint64_t)[*(id *)(a1 + 10128) stopGeoFence];
    }
  }

  return result;
}

void sub_100462A58(uint64_t a1, uint64_t a2, double a3)
{
  id v6 = [*(id *)(a1 + 664) objectForKeyedSubscript:&off_1018D3458];
  objc_msgSend( v6,  "unionSet:",  objc_msgSend( *(id *)(a1 + 664),  "objectForKeyedSubscript:",  +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2)));
  if (v6)
  {
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    __int128 v26 = 0u;
    __int128 v27 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v26 objects:v42 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v27;
      double v10 = 0.0;
      int v25 = 67109632;
      do
      {
        double v11 = 0LL;
        do
        {
          if (*(void *)v27 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v12 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)v11);
          double v13 = sub_101171D38();
          unsigned int v14 = objc_msgSend(v12, "syncget_prepareSessionEndForSessionType:atEndTime:", a2, a3);
          double v15 = sub_101171D38();
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_1018399F8);
          }
          double v16 = v15 - v13;
          uint64_t v17 = (os_log_s *)qword_101934688;
          if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int32x2_t buf = v25;
            int v37 = a2;
            __int16 v38 = 2048;
            double v39 = v16;
            __int16 v40 = 1024;
            unsigned int v41 = v14;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "PrepareSessionEnd, sent client end for session, %d, duration (s), %f, success, %d",  buf,  0x18u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_101934680 != -1) {
              dispatch_once(&qword_101934680, &stru_1018399F8);
            }
            int v30 = v25;
            int v31 = a2;
            __int16 v32 = 2048;
            double v33 = v16;
            __int16 v34 = 1024;
            unsigned int v35 = v14;
            LODWORD(v24) = 24;
            uint64_t v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "PrepareSessionEnd, sent client end for session, %d, duration (s), %f, success, %d",  &v30,  v24,  v25);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::prepareForSessionEnd(CMWorkoutType, CFAbsoluteTime)",  "%s\n",  v19);
          }

          if (v16 > 0.005)
          {
            if (qword_101934680 != -1) {
              dispatch_once(&qword_101934680, &stru_1018399F8);
            }
            __int16 v18 = (os_log_s *)qword_101934688;
            if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int32x2_t buf = v25;
              int v37 = a2;
              __int16 v38 = 2048;
              double v39 = v16;
              __int16 v40 = 1024;
              unsigned int v41 = v14;
              _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "PrepareSessionEnd, client response duration exceeded 5 ms threshold, sessionType, %d, duration (s), %f, success, %d",  buf,  0x18u);
            }

            if (sub_1002921D0(115, 0))
            {
              bzero(buf, 0x65CuLL);
              if (qword_101934680 != -1) {
                dispatch_once(&qword_101934680, &stru_1018399F8);
              }
              int v30 = v25;
              int v31 = a2;
              __int16 v32 = 2048;
              double v33 = v16;
              __int16 v34 = 1024;
              unsigned int v35 = v14;
              LODWORD(v24) = 24;
              __int16 v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "PrepareSessionEnd, client response duration exceeded 5 ms threshold, sessionType, %d, dura tion (s), %f, success, %d",  &v30,  v24,  v25);
              sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMotionStateMediator::prepareForSessionEnd(CMWorkoutType, CFAbsoluteTime)",  "%s\n",  v20);
            }
          }

          double v10 = v10 + v16;
          double v11 = (char *)v11 + 1;
        }

        while (v8 != v11);
        id v21 = [v6 countByEnumeratingWithState:&v26 objects:v42 count:16];
        id v8 = v21;
      }

      while (v21);
      if (v10 > 0.015)
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_1018399F8);
        }
        __int128 v22 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int32x2_t buf = 67109376;
          int v37 = a2;
          __int16 v38 = 2048;
          double v39 = v10;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "PrepareSessionEnd, total client response duration exceeded 15 ms threshold, sessionType, %d, total duration (s), %f",  buf,  0x12u);
        }

        if (sub_1002921D0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_1018399F8);
          }
          int v30 = 67109376;
          int v31 = a2;
          __int16 v32 = 2048;
          double v33 = v10;
          LODWORD(v24) = 18;
          uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "PrepareSessionEnd, total client response duration exceeded 15 ms threshold, sessionType, %d, t otal duration (s), %f",  &v30,  v24);
          sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMotionStateMediator::prepareForSessionEnd(CMWorkoutType, CFAbsoluteTime)",  "%s\n",  v23);
        }
      }
    }
  }

void sub_100463030(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    double v4 = (void *)sub_100D1C610();
    operator delete(v4);
  }

void sub_10046305C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100463064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  id v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Did Set Workout Type During Workout Session",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    *(_WORD *)uuid_t dst = 0;
    __int128 v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Did Set Workout Type During Workout Session",  dst,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateMediator::onDidSetCurrentWorkoutType(const CLMotionStateMediator_Type::WorkoutEvent &, c onst CLMotionStateMediator_Type::WorkoutSessionOverview &)",  "%s\n",  v27);
  }

  sub_10045FB4C(a1, a2, a3);
  sub_10045E038(a1, a2);
  __int128 v7 = *(_OWORD *)(a1 + 7632);
  __int128 v8 = *(_OWORD *)(a1 + 7664);
  v38[8] = *(_OWORD *)(a1 + 7648);
  v38[9] = v8;
  uint64_t v39 = *(void *)(a1 + 7680);
  __int128 v9 = *(_OWORD *)(a1 + 7568);
  __int128 v10 = *(_OWORD *)(a1 + 7600);
  v38[4] = *(_OWORD *)(a1 + 7584);
  v38[5] = v10;
  v38[6] = *(_OWORD *)(a1 + 7616);
  v38[7] = v7;
  __int128 v11 = *(_OWORD *)(a1 + 7504);
  __int128 v12 = *(_OWORD *)(a1 + 7536);
  v38[0] = *(_OWORD *)(a1 + 7520);
  v38[1] = v12;
  v38[2] = *(_OWORD *)(a1 + 7552);
  v38[3] = v9;
  __int128 v13 = *(_OWORD *)(a1 + 7472);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)(a1 + 7456);
  __int128 v35 = v13;
  __int128 v36 = *(_OWORD *)(a1 + 7488);
  __int128 v37 = v11;
  uuid_copy(dst, (const unsigned __int8 *)v38);
  unsigned int v14 = (_OWORD *)(a2 + 64);
  uuid_copy(uu2, (const unsigned __int8 *)(a2 + 64));
  if (uuid_compare(dst, uu2))
  {
    uint64_t v15 = *(void *)(a1 + 8688);
    if (v15 && *(_BYTE *)(v15 + 113) && *(void *)(a2 + 112) == 33LL)
    {
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      double v16 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v17 = *(void *)(a1 + 7568);
        *(_DWORD *)int32x2_t buf = 134217984;
        *(void *)&uint8_t buf[4] = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "ignore client transistion, remaining in workout type: %ld",  buf,  0xCu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_1018399F8);
        }
        uint64_t v18 = *(void *)(a1 + 7568);
        int v30 = 134217984;
        uint64_t v31 = v18;
        uint64_t v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "ignore client transistion, remaining in workout type: %ld",  &v30);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateMediator::onDidSetCurrentWorkoutType(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &)",  "%s\n",  v19);
      }
    }

    else
    {
      double Current = CFAbsoluteTimeGetCurrent();
      sub_100462890(a1, Current);
      __int128 v21 = *(_OWORD *)(a2 + 208);
      v28[8] = *(_OWORD *)(a2 + 192);
      v28[9] = v21;
      uint64_t v29 = *(void *)(a2 + 224);
      __int128 v22 = *(_OWORD *)(a2 + 144);
      v28[4] = *(_OWORD *)(a2 + 128);
      v28[5] = v22;
      __int128 v23 = *(_OWORD *)(a2 + 176);
      v28[6] = *(_OWORD *)(a2 + 160);
      void v28[7] = v23;
      __int128 v24 = *(_OWORD *)(a2 + 80);
      v28[0] = *v14;
      v28[1] = v24;
      __int128 v25 = *(_OWORD *)(a2 + 112);
      _OWORD v28[2] = *(_OWORD *)(a2 + 96);
      void v28[3] = v25;
      sub_100462254(a1, (uint64_t)v28);
    }
  }

  return sub_100462444(a1, (uint64_t)v14);
}

uint64_t sub_100463468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100463064(a1 - 120, a2, a3);
}

uint64_t sub_100463470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  id v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Did manual pause workout session", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    v10[0] = 0;
    __int128 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Did manual pause workout session",  v10,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateMediator::onWorkoutSessionManualPause(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &)",  "%s\n",  v9);
  }

  uint64_t v7 = *(void *)(a1 + 10184);
  if (v7) {
    sub_100D1CB40(v7, *(double *)(a2 + 24));
  }
  sub_10045FB4C(a1, a2, a3);
  sub_10045E038(a1, a2);
  return sub_100462890(a1, *(double *)(a2 + 8));
}

uint64_t sub_100463648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100463470(a1 - 120, a2, a3);
}

id sub_100463650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  id v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Did manual resume workout session", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    v15[0] = 0;
    unsigned int v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Did manual resume workout session",  v15,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateMediator::onWorkoutSessionManualResume(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &)",  "%s\n",  v14);
  }

  uint64_t v7 = *(void *)(a1 + 10184);
  if (v7) {
    sub_100D1CE0C(v7, *(double *)(a2 + 24));
  }
  sub_10045FB4C(a1, a2, a3);
  sub_10045E038(a1, a2);
  __int128 v8 = *(_OWORD *)(a2 + 208);
  v16[8] = *(_OWORD *)(a2 + 192);
  v16[9] = v8;
  uint64_t v17 = *(void *)(a2 + 224);
  __int128 v9 = *(_OWORD *)(a2 + 144);
  v16[4] = *(_OWORD *)(a2 + 128);
  v16[5] = v9;
  __int128 v10 = *(_OWORD *)(a2 + 176);
  v16[6] = *(_OWORD *)(a2 + 160);
  v16[7] = v10;
  __int128 v11 = *(_OWORD *)(a2 + 80);
  v16[0] = *(_OWORD *)(a2 + 64);
  v16[1] = v11;
  __int128 v12 = *(_OWORD *)(a2 + 112);
  _DWORD v16[2] = *(_OWORD *)(a2 + 96);
  void v16[3] = v12;
  return sub_100462254(a1, (uint64_t)v16);
}

id sub_100463858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100463650(a1 - 120, a2, a3);
}

id sub_100463860(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  id v8 = +[CMWorkout CMWorkoutTypeFromCLMotionActivityType:]( &OBJC_CLASS___CMWorkout,  "CMWorkoutTypeFromCLMotionActivityType:",  *(unsigned int *)buf);
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  __int128 v10 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)a2;
    uint64_t v12 = *(void *)(a2 + 112);
    *(_DWORD *)int32x2_t buf = 134219008;
    uint64_t v44 = v11;
    __int16 v45 = 2048;
    uint64_t v46 = v12;
    __int16 v47 = 2048;
    id v48 = v8;
    __int16 v49 = 2048;
    double v50 = a4;
    __int16 v51 = 2048;
    CFAbsoluteTime v52 = Current;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Detected change in activity during workout session, startTime %f, newType, %ld, oldType, %ld, previousEndTime, %f, now, %f",  buf,  0x34u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    uint64_t v19 = *(void *)a2;
    uint64_t v20 = *(void *)(a2 + 112);
    int v33 = 134219008;
    uint64_t v34 = v19;
    __int16 v35 = 2048;
    uint64_t v36 = v20;
    __int16 v37 = 2048;
    id v38 = v8;
    __int16 v39 = 2048;
    double v40 = a4;
    __int16 v41 = 2048;
    CFAbsoluteTime v42 = Current;
    __int128 v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Detected change in activity during workout session, startTime %f, newType, %ld, oldType, %ld, previo usEndTime, %f, now, %f",  COERCE_DOUBLE(&v33),  52,  (void)v22,  *((double *)&v22 + 1),  *(double *)&v23);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionStateMediator::onWorkoutSessionDetectedChangeInActivity(const CLMotionStateMediator_Type::Wor koutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &, CFAbsoluteTime)",  "%s\n",  v21);
  }

  sub_10045FB4C(a1, a2, a3);
  sub_10045E038(a1, a2);
  sub_100462890(a1, a4);
  __int128 v13 = *(_OWORD *)(a2 + 208);
  __int128 v30 = *(_OWORD *)(a2 + 192);
  __int128 v31 = v13;
  uint64_t v32 = *(void *)(a2 + 224);
  __int128 v14 = *(_OWORD *)(a2 + 144);
  __int128 v26 = *(_OWORD *)(a2 + 128);
  __int128 v27 = v14;
  __int128 v15 = *(_OWORD *)(a2 + 176);
  __int128 v28 = *(_OWORD *)(a2 + 160);
  __int128 v29 = v15;
  __int128 v16 = *(_OWORD *)(a2 + 80);
  __int128 v22 = *(_OWORD *)(a2 + 64);
  __int128 v23 = v16;
  __int128 v17 = *(_OWORD *)(a2 + 112);
  __int128 v24 = *(_OWORD *)(a2 + 96);
  __int128 v25 = v17;
  return sub_100462254(a1, (uint64_t)&v22);
}

id sub_100463B18(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_100463860(a1 - 120, a2, a3, a4);
}

uint64_t sub_100463B20(uint64_t result, int a2)
{
  uint64_t v2 = result;
  if (a2)
  {
    if (*(int *)(result + 8296) <= 0)
    {
      sub_10000CE18((uint64_t)v5);
      sub_10000CF44(&v6, (uint64_t)"Workout Series Predictor", 24LL);
      std::stringbuf::str(&__p, &v7);
      sub_100AD5668(v2 + 8288, (uint64_t *)&__p);
      *(void *)((char *)v5
      uint64_t v6 = v3;
      std::streambuf::~streambuf(&v7);
      return std::ios::~ios(&v8);
    }
  }

  else if (*(int *)(result + 8296) >= 1)
  {
    return sub_100AD5D38(result + 8288);
  }

  return result;
}

void sub_100463C34( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_100463C60(uint64_t a1, int a2)
{
  return sub_100463B20(a1 - 120, a2);
}

uint64_t sub_100463C68(uint64_t result, uint64_t a2)
{
  switch(*(void *)(a2 + 16))
  {
    case 0LL:
      *(void *)(result + 8928) = 0LL;
      *(void *)(result + 8984) = 0LL;
      goto LABEL_4;
    case 1LL:
    case 0xALL:
      *(_BYTE *)(result + 10296) = 0;
      break;
    case 4LL:
      ++*(_DWORD *)(result + 8928);
      *(void *)(result + 8984) = *(void *)(a2 + 24);
      break;
    case 8LL:
LABEL_4:
      *(_BYTE *)(result + 10296) = 1;
      break;
    case 0xCLL:
      ++*(_DWORD *)(result + 8932);
      break;
    default:
      return result;
  }

  return result;
}

uint64_t sub_100463CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1002F8DDC();
  uint64_t v7 = *(void *)(a2 + 112);
  sub_1002AC4EC(v3, "kMostRecentWorkoutEventWorkoutType", &v7);
  uint64_t v4 = sub_1002F8DDC();
  uint64_t v7 = *(void *)(a2 + 120);
  sub_1002AC4EC(v4, "kMostRecentWorkoutEventLocationType", &v7);
  uint64_t v5 = sub_1002F8DDC();
  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 944LL))(v5);
}

void sub_100463D44(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)sub_10047714C(v3);
    operator delete(v4);
  }

void sub_100463D70(uint64_t a1, uint64_t *a2)
{
  int8x16_t v4 = (int8x16_t)vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a2 + 1)), *(float64x2_t *)(a2 + 3));
  int8x16_t v22 = vextq_s8(v4, v4, 4uLL);
  float32x4_t v8 = *(float32x4_t *)(a2 + 5);
  uint64_t v5 = a2[7];
  sub_100833700((float32x4_t *)&v22, v8);
  v18[0] = v22;
  v18[1] = v8;
  uint64_t v6 = *a2;
  uint64_t v19 = v5;
  uint64_t v20 = v6;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  sub_100A7EF60((void *)(a1 + 6616), (uint64_t)v18);
  uint64_t v7 = *(void *)(a1 + 8224);
  if (v7)
  {
    uint64_t v10 = 0LL;
    uint64_t v11 = 0LL;
    uint64_t v12 = 0x80000000800000LL;
    uint64_t v13 = 0LL;
    uint64_t v14 = 0LL;
    uint64_t v15 = 0x80000000800000LL;
    uint64_t v16 = 0x80000000800000LL;
    int v17 = -8388609;
    if (sub_100E090A8(v7, (float *)v18, (uint64_t)v9))
    {
      sub_100463E58(a1 + 5560, (uint64_t)v9);
      sub_100463E58(a1 + 2912, (uint64_t)v9);
    }
  }

void sub_100463E58(uint64_t a1, uint64_t a2)
{
  double v18 = *(double *)a2;
  __int128 v19 = *(_OWORD *)(a2 + 8);
  uint64_t v20 = *(void *)(a2 + 24);
  __int128 v3 = *(_OWORD *)(a2 + 48);
  __int128 v21 = *(_OWORD *)(a2 + 32);
  __int128 v22 = v3;
  uint64_t v23 = *(void *)(a2 + 64);
  uint64_t v4 = *(void *)(a1 + 192);
  if (v4) {
    (*(void (**)(uint64_t, double *))(*(void *)v4 + 48LL))(v4, &v18);
  }
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5)
  {
    unint64_t v6 = v5 + *(void *)(a1 + 48) - 1;
    uint64_t v7 = *(void ***)(a1 + 24);
    double v8 = *((double *)v7[v6 / 0x38] + 9 * (v6 % 0x38));
    if (v8 > v18)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0LL;
      unint64_t v10 = v9 - (void)v7;
      if (v10 >= 0x11)
      {
        do
        {
          operator delete(*v7);
          uint64_t v11 = *(void *)(a1 + 32);
          uint64_t v7 = (void **)(*(void *)(a1 + 24) + 8LL);
          *(void *)(a1 + 24) = v7;
          unint64_t v10 = v11 - (void)v7;
        }

        while (v10 > 0x10);
      }

      if (v10 >> 3 == 1)
      {
        uint64_t v12 = 28LL;
      }

      else
      {
        if (v10 >> 3 != 2)
        {
LABEL_12:
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018399D8);
          }
          uint64_t v13 = (os_log_s *)qword_1019344B8;
          if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            double v29 = v18;
            __int16 v30 = 2048;
            double v31 = v8;
            _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_1018399D8);
            }
            int v24 = 134218240;
            double v25 = v18;
            __int16 v26 = 2048;
            double v27 = v8;
            LODWORD(v17) = 22;
            uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  COERCE_DOUBLE(&v24),  v17);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLWorkoutPredictorTurnDetector::Turn>::add(const T &) [T = CLWorkoutPredictorTurnDetector::Turn]",  "%s\n",  v16);
          }

          goto LABEL_17;
        }

        uint64_t v12 = 56LL;
      }

      *(void *)(a1 + 48) = v12;
      goto LABEL_12;
    }
  }

uint64_t sub_10046415C(uint64_t a1)
{
  return a1 + 2216;
}

uint64_t sub_100464164(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  unint64_t v10 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)int32x2_t buf = 134349824;
    uint64_t v50 = a2;
    __int16 v51 = 2050;
    uint64_t v52 = a3;
    __int16 v53 = 2050;
    uint64_t v54 = a4;
    __int16 v55 = 2050;
    double v56 = a5;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "Background Escalation Manager, ActivityAction : %{public}ld, ActivityReason : %{public}ld, workoutType : %{public} ld, startTime : %{public}f",  buf,  0x2Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    *(_DWORD *)double v29 = 134349824;
    *(void *)&v29[4] = a2;
    *(_WORD *)&v29[12] = 2050;
    *(void *)&v29[14] = a3;
    *(_WORD *)&v29[22] = 2050;
    uint64_t v30 = a4;
    *(_WORD *)double v31 = 2050;
    *(double *)&v31[2] = a5;
    __int128 v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "Background Escalation Manager, ActivityAction : %{public}ld, ActivityReason : %{public}ld, workoutTy pe : %{public}ld, startTime : %{public}f",  v29,  42);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onBackgroundEscalationManagerUpdate(CFAbsoluteTime, CMActivityAction, CMActivityReason , CMWorkoutType)",  "%s\n",  v21);
  }

  __int128 v46 = 0u;
  __int128 v47 = 0u;
  __int128 v45 = 0u;
  uint64_t v48 = 0LL;
  __int128 v44 = 0u;
  __int128 v43 = 0u;
  __int128 v42 = 0u;
  __int128 v41 = 0u;
  __int128 v40 = 0u;
  __int128 v39 = 0u;
  __int128 v38 = 0u;
  __int128 v37 = 0u;
  __int128 v36 = 0u;
  __int128 v35 = 0u;
  __int128 v34 = 0u;
  __int128 v33 = 0u;
  __int128 v32 = 0u;
  *(double *)double v29 = a5;
  *(void *)&v29[8] = 0LL;
  *(void *)&v29[16] = a2;
  uint64_t v30 = a3;
  *(void *)double v31 = a4;
  __asm { FMOV            V0.2D, #-1.0 }

  __int128 v24 = _Q0;
  *(_OWORD *)&v31[8] = _Q0;
  if (a2 == 1)
  {
    sub_1004609D4((uint64_t)a1);
    uint64_t v16 = a1[825];
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v17 = *(void *)(v16 + 16);
    __int128 v32 = 0u;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v46 = 0u;
    __int128 v47 = 0u;
    uint64_t v48 = 0LL;
    *(double *)double v29 = a5;
    *(_OWORD *)&v29[8] = xmmword_1012CB1D0;
    uint64_t v30 = a3;
    *(void *)double v31 = a4;
    *(void *)&v31[8] = v18;
    *(void *)&v31[16] = v17;
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    __int128 v19 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)int32x2_t buf = 134349312;
      uint64_t v50 = v18;
      __int16 v51 = 2050;
      uint64_t v52 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "Background Escalation Manager, Appending to ActivityAction : recoveryStart : %{public}f, recoveryEnd : %{public}f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      int v25 = 134349312;
      uint64_t v26 = v18;
      __int16 v27 = 2050;
      uint64_t v28 = v17;
      LODWORD(v23) = 22;
      __int128 v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "Background Escalation Manager, Appending to ActivityAction : recoveryStart : %{public}f, recoveryEnd : %{public}f",  &v25,  v23);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onBackgroundEscalationManagerUpdate(CFAbsoluteTime, CMActivityAction, CMActivityReas on, CMWorkoutType)",  "%s\n",  v22);
    }
  }

  else if (!a2)
  {
    sub_100460CCC((uint64_t)a1);
  }

  *(_DWORD *)int32x2_t buf = 4;
  uint64_t result = (*(uint64_t (**)(void *, uint8_t *, _BYTE *, uint64_t, uint64_t, void))(*a1 + 152LL))( a1,  buf,  v29,  1LL,  0xFFFFFFFFLL,  0LL);
  if (a2 == 1) {
    *(_OWORD *)(a1[825] + 8LL) = v24;
  }
  return result;
}

void sub_1004645E0(uint64_t a1, int a2, unsigned __int8 *a3)
{
  switch(a2)
  {
    case 0:
      uuid_copy(a3 + 96, (const unsigned __int8 *)(a1 + 9688));
      __int128 v5 = *((_OWORD *)a3 + 13);
      *(_OWORD *)&v65[144] = *((_OWORD *)a3 + 12);
      *(_OWORD *)&v65[160] = v5;
      *(void *)&v65[176] = *((void *)a3 + 28);
      __int128 v6 = *((_OWORD *)a3 + 9);
      *(_OWORD *)&v65[80] = *((_OWORD *)a3 + 8);
      *(_OWORD *)&v65[96] = v6;
      __int128 v7 = *((_OWORD *)a3 + 11);
      *(_OWORD *)&v65[112] = *((_OWORD *)a3 + 10);
      *(_OWORD *)&v65[128] = v7;
      __int128 v8 = *((_OWORD *)a3 + 5);
      *(_OWORD *)&v65[16] = *((_OWORD *)a3 + 4);
      *(_OWORD *)&v65[32] = v8;
      __int128 v9 = *((_OWORD *)a3 + 7);
      *(_OWORD *)&v65[48] = *((_OWORD *)a3 + 6);
      *(_OWORD *)&v65[64] = v9;
      __int128 v10 = *((_OWORD *)a3 + 1);
      *(_OWORD *)int32x2_t buf = *(_OWORD *)a3;
      __int128 v63 = v10;
      __int128 v11 = *((_OWORD *)a3 + 3);
      __int128 v64 = *((_OWORD *)a3 + 2);
      *(_OWORD *)uint64_t v65 = v11;
      id v12 = (id)sub_100BEF640((uint64_t)buf);
      if ((_DWORD)v12 == 2)
      {
        sub_100808990(a1 + 136);
        if (*(void *)&v65[64] == 37LL || *(void *)&v65[64] == 23LL) {
          id v12 = [*(id *)(*(void *)(a1 + 10200) + 16) unregister:*(void *)(*(void *)(a1 + 10200) + 8) forNotification:1];
        }
      }

      else if ((_DWORD)v12 == 1)
      {
        sub_100808984( a1 + 136,  (int)+[CMWorkout CLMotionActivityTypeFromCMWorkoutType:]( &OBJC_CLASS___CMWorkout,  "CLMotionActivityTypeFromCMWorkoutType:",  *(void *)&v65[64]),  &v65[16]);
        if (*(void *)&v65[64] == 37LL || *(void *)&v65[64] == 23LL) {
          id v12 = [*(id *)(*(void *)(a1 + 10200) + 16) register:*(void *)(*(void *)(a1 + 10200) + 8) forNotification:1 registrationInfo:0];
        }
      }

      __int128 v39 = *(_OWORD *)&v65[112];
      *(_OWORD *)(a1 + 9632) = *(_OWORD *)&v65[128];
      __int128 v40 = *(_OWORD *)&v65[160];
      *(_OWORD *)(a1 + 9648) = *(_OWORD *)&v65[144];
      *(_OWORD *)(a1 + 9664) = v40;
      __int128 v41 = *(_OWORD *)&v65[48];
      *(_OWORD *)(a1 + 9568) = *(_OWORD *)&v65[64];
      __int128 v42 = *(_OWORD *)&v65[96];
      *(_OWORD *)(a1 + 9584) = *(_OWORD *)&v65[80];
      *(_OWORD *)(a1 + 960sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v42;
      *(_OWORD *)(a1 + 9616) = v39;
      __int128 v43 = v64;
      *(_OWORD *)(a1 + 9504) = *(_OWORD *)v65;
      __int128 v44 = *(_OWORD *)&v65[32];
      *(_OWORD *)(a1 + 952sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)&v65[16];
      *(_OWORD *)(a1 + 9536) = v44;
      *(_OWORD *)(a1 + 9552) = v41;
      __int128 v45 = v63;
      *(_OWORD *)(a1 + 9456) = *(_OWORD *)buf;
      *(_OWORD *)(a1 + 9472) = v45;
      *(void *)(a1 + 968sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)&v65[176];
      *(_OWORD *)(a1 + 9488) = v43;
      unint64_t v46 = v63;
      if (!(void)v63)
      {
        v74[11] = *(_OWORD *)&v65[128];
        v74[12] = *(_OWORD *)&v65[144];
        v74[13] = *(_OWORD *)&v65[160];
        v74[7] = *(_OWORD *)&v65[64];
        v74[8] = *(_OWORD *)&v65[80];
        v74[9] = *(_OWORD *)&v65[96];
        v74[10] = *(_OWORD *)&v65[112];
        uint64_t v74[3] = *(_OWORD *)v65;
        v74[4] = *(_OWORD *)&v65[16];
        v74[5] = *(_OWORD *)&v65[32];
        v74[6] = *(_OWORD *)&v65[48];
        v74[0] = *(_OWORD *)buf;
        v74[1] = v63;
        uint64_t v75 = *(void *)&v65[176];
        v74[2] = v64;
        sub_100463CD8((uint64_t)v12, (uint64_t)v74);
        sub_1004609D4(a1);
        unint64_t v46 = v63;
      }

      if (v46 <= 1) {
        sub_100B694A0(*(void *)(a1 + 6600), v46);
      }
      v72[11] = *(_OWORD *)&v65[128];
      v72[12] = *(_OWORD *)&v65[144];
      v72[13] = *(_OWORD *)&v65[160];
      v72[7] = *(_OWORD *)&v65[64];
      v72[8] = *(_OWORD *)&v65[80];
      v72[9] = *(_OWORD *)&v65[96];
      v72[10] = *(_OWORD *)&v65[112];
      v72[3] = *(_OWORD *)v65;
      v72[4] = *(_OWORD *)&v65[16];
      void v72[5] = *(_OWORD *)&v65[32];
      v72[6] = *(_OWORD *)&v65[48];
      v72[0] = *(_OWORD *)buf;
      v72[1] = v63;
      uint64_t v73 = *(void *)&v65[176];
      v72[2] = v64;
      sub_100463C68(a1, (uint64_t)v72);
      sub_10045E038(a1, (uint64_t)buf);
      sub_10045EBD0(a1, (uint64_t)buf);
      sub_100252BA4(a1 + 8944, (uint64_t)buf);
      return;
    case 2:
      if (*a3)
      {
        if (*(int *)(a1 + 8248) <= 0)
        {
          sub_10000CE18((uint64_t)buf);
          uint64_t v14 = sub_10000CF44(&v63, (uint64_t)"Workout Detected (", 18LL);
          __int128 v15 = (const char *)objc_msgSend( +[CMWorkout workoutName:](CMWorkout, "workoutName:", *((void *)a3 + 1)),  "UTF8String");
          size_t v16 = strlen(v15);
          uint64_t v17 = sub_10000CF44(v14, (uint64_t)v15, v16);
          sub_10000CF44(v17, (uint64_t)")", 1LL);
          std::stringbuf::str(&v57, (const std::stringbuf *)((char *)&v63 + 8));
          sub_100AD5668(a1 + 8240, (uint64_t *)&v57);
          *(void *)&__int128 v63 = v18;
          if ((v65[63] & 0x80000000) != 0) {
            operator delete(*(void **)&v65[40]);
          }
          std::streambuf::~streambuf((char *)&v63 + 8);
          std::ios::~ios(&v65[80]);
        }
      }

      else if (*(int *)(a1 + 8248) >= 1)
      {
        sub_100AD5D38(a1 + 8240);
      }

      return;
    case 3:
      sub_10045F598(a1, *(_WORD *)a3);
      return;
    case 5:
      uint64_t v19 = *((void *)a3 + 1);
      if (v19 > 2)
      {
        if (v19 == 3)
        {
          uint64_t v20 = *(void **)(a1 + 8336);
          __int128 v21 = @"cycling.falsePositive";
          __int128 v22 = @"cycling.total";
          goto LABEL_53;
        }

        if (v19 == 14)
        {
          uint64_t v20 = *(void **)(a1 + 8336);
          __int128 v21 = @"other.falsePositive";
          __int128 v22 = @"other.total";
          goto LABEL_53;
        }
      }

      else
      {
        if (v19 == 1)
        {
          uint64_t v20 = *(void **)(a1 + 8336);
          __int128 v21 = @"walk.falsePositive";
          __int128 v22 = @"walk.total";
          goto LABEL_53;
        }

        if (v19 == 2)
        {
          uint64_t v20 = *(void **)(a1 + 8336);
          __int128 v21 = @"run.falsePositive";
          __int128 v22 = @"run.total";
LABEL_53:
          if (*a3) {
            uint64_t v47 = (uint64_t)v21;
          }
          else {
            uint64_t v47 = (uint64_t)v22;
          }
          sub_100518598(v20, v47, 1LL);
          return;
        }
      }

      uint64_t v48 = *(void **)(a1 + 8336);
      if (*a3) {
        __int16 v49 = @"unsupported.falsePositive";
      }
      else {
        __int16 v49 = @"unsupported.total";
      }
      sub_100518598(v48, (uint64_t)v49, 1LL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      uint64_t v50 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_ERROR))
      {
        uint64_t v51 = *((void *)a3 + 1);
        *(_DWORD *)int32x2_t buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v51;
        _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_ERROR,  "Unsupported escalation type reported for metrics, %d",  buf,  8u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_1018399F8);
        }
        uint64_t v52 = *((void *)a3 + 1);
        int v58 = 67109120;
        int v59 = v52;
        __int16 v53 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  16LL,  "Unsupported escalation type reported for metrics, %d",  &v58);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMotionStateMediator::onWorkoutPredictorUpdate(CLWorkoutPredictor_Type::Notification, CLWorkoutPredictor _Type::NotificationData)",  "%s\n",  v53);
      }

      return;
    case 6:
      uint64_t v23 = sub_1008D9630();
      sub_1008DAF8C(v23, *(void *)a3, *((void *)a3 + 1), *((void *)a3 + 2));
      return;
    case 7:
      *(_DWORD *)int32x2_t buf = *(_DWORD *)a3;
      *(_DWORD *)&uint8_t buf[4] = *((_DWORD *)a3 + 1);
      uint64_t v13 = sub_1008FA854(0);
      (*(void (**)(uint64_t, uint8_t *))(*(void *)(v13 + 96) + 24LL))(v13 + 96, buf);
      return;
    case 9:
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      __int128 v24 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
      {
        int v25 = *a3;
        int v26 = a3[1];
        *(_DWORD *)int32x2_t buf = 67109376;
        *(_DWORD *)&uint8_t buf[4] = v25;
        *(_WORD *)&uint8_t buf[8] = 1024;
        *(_DWORD *)&buf[10] = v26;
        _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "CLAS,kNotificationGPSActivationEvent,shouldActivate,%d,isTypeIntermittentGps,%d",  buf,  0xEu);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_1018399F8);
        }
        int v54 = *a3;
        int v55 = a3[1];
        int v58 = 67109376;
        int v59 = v54;
        __int16 v60 = 1024;
        int v61 = v55;
        double v56 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "CLAS,kNotificationGPSActivationEvent,shouldActivate,%d,isTypeIntermittentGps,%d",  &v58,  14);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onWorkoutPredictorUpdate(CLWorkoutPredictor_Type::Notification, CLWorkoutPredictor _Type::NotificationData)",  "%s\n",  v56);
      }

      if (a3[1])
      {
        uint64_t v27 = *(void *)(a1 + 10496);
        uint64_t v29 = *(void *)(v27 + 8);
        uint64_t v28 = *(void **)(v27 + 16);
        uint64_t v30 = a1 + 10304;
        if (*a3)
        {
          [v28 register:v29 forNotification:5 registrationInfo:0];
          sub_1008B192C(v30, 1);
        }

        else
        {
          [v28 unregister:v29 forNotification:5];
          sub_1008B192C(v30, -1);
        }
      }

      else
      {
        uint64_t v36 = *(void *)(a1 + 10264);
        uint64_t v38 = *(void *)(v36 + 8);
        __int128 v37 = *(void **)(v36 + 16);
        if (*a3) {
          [v37 register:v38 forNotification:2 registrationInfo:0];
        }
        else {
          [v37 unregister:v38 forNotification:2];
        }
      }

      return;
    case 10:
      __int128 v69 = 0u;
      __int128 v70 = 0u;
      __int128 v68 = 0u;
      __int128 v67 = 0u;
      __int128 v66 = 0u;
      memset(&v65[8], 0, 176);
      __int128 v31 = *((_OWORD *)a3 + 1);
      __int128 v32 = *((_OWORD *)a3 + 2);
      *(_OWORD *)int32x2_t buf = *(_OWORD *)a3;
      __int128 v63 = v31;
      uint64_t v71 = 0LL;
      __int128 v64 = v32;
      *(void *)uint64_t v65 = *((void *)a3 + 6);
      if (*((void *)a3 + 1) != 1LL) {
        goto LABEL_71;
      }
      uint64_t v33 = *((void *)a3 + 2);
      if (*((void *)a3 + 4))
      {
        if (!v33)
        {
          sub_100460CCC(a1);
          goto LABEL_71;
        }
      }

      else if (v33 != 1)
      {
        goto LABEL_71;
      }

      sub_1004609D4(a1);
LABEL_71:
      int v58 = 4;
      (*(void (**)(uint64_t, int *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v58,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
      return;
    case 11:
      *(_DWORD *)int32x2_t buf = *(_DWORD *)a3;
      *(_DWORD *)&uint8_t buf[4] = *((_DWORD *)a3 + 1);
      uint64_t v34 = sub_1008FA854(0);
      (*(void (**)(uint64_t, uint8_t *))(*(void *)(v34 + 96) + 32LL))(v34 + 96, buf);
      return;
    case 12:
      int v58 = 5;
      __int128 v69 = 0u;
      __int128 v70 = 0u;
      __int128 v68 = 0u;
      uint64_t v71 = 0LL;
      __int128 v67 = 0u;
      __int128 v66 = 0u;
      memset(&v65[8], 0, 176);
      __int128 v35 = *((_OWORD *)a3 + 1);
      *(_OWORD *)int32x2_t buf = *(_OWORD *)a3;
      __int128 v63 = v35;
      __int128 v64 = *((_OWORD *)a3 + 2);
      *(void *)uint64_t v65 = *((void *)a3 + 6);
      (*(void (**)(uint64_t, int *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  &v58,  buf,  1LL,  0xFFFFFFFFLL,  0LL);
      return;
    default:
      return;
  }

void sub_10046506C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_1011F8850((uint64_t)&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_1004650D4(uint64_t a1)
{
  return a1 + 2744;
}

void sub_1004650DC(__n128 *a1, __n128 *a2)
{
  __n128 v15 = *a2;
  unint64_t v3 = a1[8].n128_u64[1];
  if (v3) {
    (*(void (**)(unint64_t, __n128 *))(*(void *)v3 + 48LL))(v3, &v15);
  }
  unint64_t v4 = a1[3].n128_u64[1];
  if (v4)
  {
    unint64_t v5 = v4 + a1[3].n128_u64[0] - 1;
    __int128 v6 = (void **)a1[1].n128_u64[1];
    double v7 = (*(double **)((char *)v6 + ((v5 >> 5) & 0x7FFFFFFFFFFFFF8LL)))[2 * v5];
    if (v7 > v15.n128_f64[0])
    {
      unint64_t v8 = a1[2].n128_u64[0];
      a1[3].n128_u64[1] = 0LL;
      unint64_t v9 = v8 - (void)v6;
      if (v9 >= 0x11)
      {
        do
        {
          operator delete(*v6);
          unint64_t v10 = a1[2].n128_u64[0];
          __int128 v6 = (void **)(a1[1].n128_u64[1] + 8);
          a1[1].n128_u64[1] = (unint64_t)v6;
          unint64_t v9 = v10 - (void)v6;
        }

        while (v9 > 0x10);
      }

      if (v9 >> 3 == 1)
      {
        uint64_t v11 = 128LL;
      }

      else
      {
        if (v9 >> 3 != 2)
        {
LABEL_12:
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018399D8);
          }
          id v12 = (os_log_s *)qword_1019344B8;
          if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            unint64_t v21 = v15.n128_u64[0];
            __int16 v22 = 2048;
            double v23 = v7;
            _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_1018399D8);
            }
            int v16 = 134218240;
            unint64_t v17 = v15.n128_u64[0];
            __int16 v18 = 2048;
            double v19 = v7;
            LODWORD(v14) = 22;
            uint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  COERCE_DOUBLE(&v16),  v14);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLWorkoutPredictorWatchPressure>::add(const T &) [T = CLWorkoutPredictorWatchPressure]",  "%s\n",  v13);
          }

          goto LABEL_17;
        }

        uint64_t v11 = 256LL;
      }

      a1[3].n128_u64[0] = v11;
      goto LABEL_12;
    }
  }

void sub_100465378(uint64_t a1, __int128 *a2)
{
  __int128 v3 = a2[1];
  __int128 v17 = *a2;
  __int128 v18 = v3;
  int v19 = *((_DWORD *)a2 + 8);
  uint64_t v4 = *(void *)(a1 + 160);
  if (v4) {
    (*(void (**)(uint64_t, __int128 *))(*(void *)v4 + 48LL))(v4, &v17);
  }
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5)
  {
    unint64_t v6 = v5 + *(void *)(a1 + 48) - 1;
    double v7 = *(void ***)(a1 + 24);
    double v8 = *((double *)v7[v6 / 0x66] + 5 * (v6 % 0x66));
    if (v8 > *(double *)&v17)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0LL;
      unint64_t v10 = v9 - (void)v7;
      if (v10 >= 0x11)
      {
        do
        {
          operator delete(*v7);
          uint64_t v11 = *(void *)(a1 + 32);
          double v7 = (void **)(*(void *)(a1 + 24) + 8LL);
          *(void *)(a1 + 24) = v7;
          unint64_t v10 = v11 - (void)v7;
        }

        while (v10 > 0x10);
      }

      if (v10 >> 3 == 1)
      {
        uint64_t v12 = 51LL;
      }

      else
      {
        if (v10 >> 3 != 2)
        {
LABEL_12:
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018399D8);
          }
          uint64_t v13 = (os_log_s *)qword_1019344B8;
          if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            uint64_t v25 = v17;
            __int16 v26 = 2048;
            double v27 = v8;
            _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_1018399D8);
            }
            int v20 = 134218240;
            uint64_t v21 = v17;
            __int16 v22 = 2048;
            double v23 = v8;
            LODWORD(v16) = 22;
            __n128 v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  COERCE_DOUBLE(&v20),  v16);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLMotionCoprocessorInterface::Tier1CyclingFeatures>::add(const T &) [T = CLMotionCopro cessorInterface::Tier1CyclingFeatures]",  "%s\n",  v15);
          }

          goto LABEL_17;
        }

        uint64_t v12 = 102LL;
      }

      *(void *)(a1 + 48) = v12;
      goto LABEL_12;
    }
  }

float *sub_10046563C(uint64_t a1, uint64_t a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
  {
    double v5 = *(double *)a2;
    double v6 = *(float *)(a2 + 16);
    *(_DWORD *)int32x2_t buf = 134218240;
    double v21 = v5;
    __int16 v22 = 2048;
    double v23 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Stair escalation event, timestamp, %f, stair metric, %.3f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    double v12 = *(double *)a2;
    double v13 = *(float *)(a2 + 16);
    int v16 = 134218240;
    double v17 = v12;
    __int16 v18 = 2048;
    double v19 = v13;
    LODWORD(v15) = 22;
    __int128 v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "Stair escalation event, timestamp, %f, stair metric, %.3f",  COERCE_DOUBLE(&v16),  v15);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onSPUStairsEscalationEvent(const StairsEscalationEvent *)",  "%s\n",  v14);
  }

  uint64_t result = *(float **)(a1 + 6600);
  unsigned int v8 = *((_DWORD *)result + 54) - 1;
  if (!*(_BYTE *)(a2 + 20))
  {
    if (v8 > 1) {
      return result;
    }
    goto LABEL_10;
  }

  if (v8 < 2)
  {
LABEL_10:
    float v9 = *(float *)(a2 + 16);
    float v10 = *(float *)(a2 + 24);
    int v11 = 0;
    return sub_100B69BDC(result, v11, v9, v10);
  }

  sub_100B66B84((uint64_t)result, 1, *(double *)a2);
  uint64_t result = *(float **)(a1 + 6600);
  float v9 = *(float *)(a2 + 16);
  float v10 = *(float *)(a2 + 24);
  int v11 = 1;
  return sub_100B69BDC(result, v11, v9, v10);
}

void sub_10046586C(uint64_t a1, uint64_t a2, int *a3, __int128 *a4)
{
  if (*a3 == 4 || *a3 == 2)
  {
    sub_100465A80(a1 + 5208, a4);
    sub_100A82150(a1 + 6616, a4);
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018399D8);
    }
    unsigned int v8 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_ERROR))
    {
      int v9 = *a3;
      *(_DWORD *)int32x2_t buf = 67109120;
      int v14 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "MotionStateMediator received unhandled odometer notification, %d",  buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018399D8);
      }
      int v10 = *a3;
      v12[0] = 67109120;
      v12[1] = v10;
      int v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  16LL,  "MotionStateMediator received unhandled odometer notification, %d",  v12);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMotionStateMediator::onOdometerNotification(int, const CLOdometerNotifier_Type::Notification &, const CLO dometerNotifier_Type::NotificationData &)",  "%s\n",  v11);
    }
  }

void sub_100465A80(uint64_t a1, __int128 *a2)
{
  __int128 v3 = a2[9];
  __int128 v35 = a2[8];
  __int128 v36 = v3;
  __int128 v4 = a2[11];
  __int128 v37 = a2[10];
  __int128 v38 = v4;
  __int128 v5 = a2[5];
  __int128 v31 = a2[4];
  __int128 v32 = v5;
  __int128 v6 = a2[7];
  __int128 v33 = a2[6];
  __int128 v34 = v6;
  __int128 v7 = a2[1];
  __int128 v27 = *a2;
  __int128 v28 = v7;
  __int128 v8 = a2[3];
  __int128 v29 = a2[2];
  __int128 v30 = v8;
  uint64_t v9 = *(void *)(a1 + 312);
  if (v9) {
    (*(void (**)(uint64_t, __int128 *))(*(void *)v9 + 48LL))(v9, &v27);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10)
  {
    unint64_t v11 = v10 + *(void *)(a1 + 48) - 1;
    double v12 = *(void ***)(a1 + 24);
    double v13 = *((double *)v12[v11 / 0x15] + 24 * (v11 % 0x15));
    if (v13 > *(double *)&v27)
    {
      uint64_t v14 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0LL;
      unint64_t v15 = v14 - (void)v12;
      if (v15 >= 0x11)
      {
        do
        {
          operator delete(*v12);
          uint64_t v16 = *(void *)(a1 + 32);
          double v12 = (void **)(*(void *)(a1 + 24) + 8LL);
          *(void *)(a1 + 24) = v12;
          unint64_t v15 = v16 - (void)v12;
        }

        while (v15 > 0x10);
      }

      if (v15 >> 3 == 1)
      {
        uint64_t v17 = 10LL;
      }

      else
      {
        if (v15 >> 3 != 2)
        {
LABEL_12:
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018399D8);
          }
          __int16 v18 = (os_log_s *)qword_1019344B8;
          if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            uint64_t v44 = v27;
            __int16 v45 = 2048;
            double v46 = v13;
            _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_1018399D8);
            }
            int v39 = 134218240;
            uint64_t v40 = v27;
            __int16 v41 = 2048;
            double v42 = v13;
            LODWORD(v26) = 22;
            uint64_t v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  COERCE_DOUBLE(&v39),  v26);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLOdometerEntry>::add(const T &) [T = CLOdometerEntry]",  "%s\n",  v25);
          }

          goto LABEL_17;
        }

        uint64_t v17 = 21LL;
      }

      *(void *)(a1 + 48) = v17;
      goto LABEL_12;
    }
  }

void sub_100465D90(uint64_t a1, uint64_t a2, int *a3, const void *a4)
{
  if (*a3 == 1)
  {
    sub_100465F90((void *)(a1 + 4584), a4);
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018399D8);
    }
    __int128 v5 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_ERROR))
    {
      int v6 = *a3;
      *(_DWORD *)int32x2_t buf = 67109120;
      int v11 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "MotionStateMediator received unhandled step count notification, %d",  buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018399D8);
      }
      int v7 = *a3;
      v9[0] = 67109120;
      v9[1] = v7;
      __int128 v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  16LL,  "MotionStateMediator received unhandled step count notification, %d",  v9);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMotionStateMediator::onStepCountNotification(int, const CLStepCountNotifier_Type::Notification &, const C LStepCountNotifier_Type::NotificationData &)",  "%s\n",  v8);
    }
  }

uint64_t sub_100465F88(uint64_t a1)
{
  return a1 + 472;
}

void *sub_100465F90(void *a1, const void *a2)
{
  uint64_t v3 = a1[55];
  if (v3) {
    (*(void (**)(uint64_t, double *))(*(void *)v3 + 48LL))(v3, __dst);
  }
  uint64_t v4 = a1[7];
  if (v4)
  {
    unint64_t v5 = v4 + a1[6] - 1;
    int v6 = (void **)a1[3];
    double v7 = (*(double **)((char *)v6 + ((v5 >> 1) & 0x7FFFFFFFFFFFFFF8LL)))[40 * (v5 & 0xF)];
    if (v7 > __dst[0])
    {
      uint64_t v8 = a1[4];
      a1[7] = 0LL;
      unint64_t v9 = v8 - (void)v6;
      if (v9 >= 0x11)
      {
        do
        {
          operator delete(*v6);
          uint64_t v10 = a1[4];
          int v6 = (void **)(a1[3] + 8LL);
          a1[3] = v6;
          unint64_t v9 = v10 - (void)v6;
        }

        while (v9 > 0x10);
      }

      if (v9 >> 3 == 1)
      {
        uint64_t v11 = 8LL;
      }

      else
      {
        if (v9 >> 3 != 2)
        {
LABEL_12:
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018399D8);
          }
          double v12 = (os_log_s *)qword_1019344B8;
          if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            double v22 = __dst[0];
            __int16 v23 = 2048;
            double v24 = v7;
            _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_1018399D8);
            }
            int v17 = 134218240;
            double v18 = __dst[0];
            __int16 v19 = 2048;
            double v20 = v7;
            LODWORD(v15) = 22;
            uint64_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  COERCE_DOUBLE(&v17),  v15);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLExtendedStepCountEntry>::add(const T &) [T = CLExtendedStepCountEntry]",  "%s\n",  v14);
          }

          goto LABEL_17;
        }

        uint64_t v11 = 16LL;
      }

      a1[6] = v11;
      goto LABEL_12;
    }
  }

void sub_100466240(uint64_t a1, int a2, _DWORD *a3, __n128 *__src)
{
  switch(*a3)
  {
    case 2:
      int v5 = *(_DWORD *)(a1 + 376);
      __n128 v7 = __src[1];
      __n128 v6 = __src[2];
      __n128 v8 = *__src;
      *(__n128 *)(a1 + 38sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(__n128 *)((char *)__src + 44);
      *(__n128 *)(a1 + 336) = v8;
      *(__n128 *)(a1 + 352) = v7;
      *(__n128 *)(a1 + 368) = v6;
      memmove((void *)(a1 + 6976), __src, 0x3CuLL);
      sub_100B697EC(*(void *)(a1 + 6600), (__int128 *)(a1 + 336));
      if (v5 != *(_DWORD *)(a1 + 376))
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_1018399F8);
        }
        unint64_t v9 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
        {
          int v10 = *(_DWORD *)(a1 + 376);
          *(_DWORD *)int32x2_t buf = 67109376;
          int v21 = v5;
          __int16 v22 = 1024;
          int v23 = v10;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Workout settings, updating due to condition change from %d to %d",  buf,  0xEu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_1018399F8);
          }
          int v13 = *(_DWORD *)(a1 + 376);
          v17[0] = 67109376;
          v17[1] = v5;
          __int16 v18 = 1024;
          int v19 = v13;
          uint64_t v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout settings, updating due to condition change from %d to %d",  v17,  14);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onCalorimetryNotification(int, const CLNatalimetryNotifier_Type::Notification &, const CLNatalimetryNotifier_Type::NotificationData &)",  "%s\n",  v14);
        }

        sub_100460014(a1);
      }

      break;
    case 4:
      sub_100466544((__n128 *)(a1 + 3584), __src);
      break;
    case 6:
      __n128 v11 = __src[3];
      _DWORD v15[2] = __src[2];
      void v15[3] = v11;
      unint64_t v16 = __src[4].n128_u64[0];
      __n128 v12 = __src[1];
      v15[0] = *__src;
      v15[1] = v12;
      sub_100AEC898((id)(a1 + 8352), (uint64_t)v15);
      break;
    case 7:
      sub_100A83010(a1 + 6616, (uint64_t)__src);
      break;
    default:
      return;
  }

uint64_t sub_10046653C(uint64_t a1)
{
  return a1 + 2888;
}

void sub_100466544(__n128 *a1, __n128 *a2)
{
  __n128 v15 = *a2;
  unint64_t v16 = a2[1].n128_u64[0];
  unint64_t v3 = a1[9].n128_u64[0];
  if (v3) {
    (*(void (**)(unint64_t, __n128 *))(*(void *)v3 + 48LL))(v3, &v15);
  }
  unint64_t v4 = a1[3].n128_u64[1];
  if (v4)
  {
    unint64_t v5 = v4 + a1[3].n128_u64[0] - 1;
    __n128 v6 = (void **)a1[1].n128_u64[1];
    double v7 = *((double *)v6[v5 / 0xAA] + 3 * (v5 % 0xAA) + 1);
    if (v7 > v15.n128_f64[1])
    {
      unint64_t v8 = a1[2].n128_u64[0];
      a1[3].n128_u64[1] = 0LL;
      unint64_t v9 = v8 - (void)v6;
      if (v9 >= 0x11)
      {
        do
        {
          operator delete(*v6);
          unint64_t v10 = a1[2].n128_u64[0];
          __n128 v6 = (void **)(a1[1].n128_u64[1] + 8);
          a1[1].n128_u64[1] = (unint64_t)v6;
          unint64_t v9 = v10 - (void)v6;
        }

        while (v9 > 0x10);
      }

      if (v9 >> 3 == 1)
      {
        uint64_t v11 = 85LL;
      }

      else
      {
        if (v9 >> 3 != 2)
        {
LABEL_12:
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018399D8);
          }
          __n128 v12 = (os_log_s *)qword_1019344B8;
          if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            unint64_t v22 = v15.n128_u64[1];
            __int16 v23 = 2048;
            double v24 = v7;
            _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_1018399D8);
            }
            int v17 = 134218240;
            unint64_t v18 = v15.n128_u64[1];
            __int16 v19 = 2048;
            double v20 = v7;
            LODWORD(v14) = 22;
            int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  COERCE_DOUBLE(&v17),  v14);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLExerciseMinuteData>::add(const T &) [T = CLExerciseMinuteData]",  "%s\n",  v13);
          }

          goto LABEL_17;
        }

        uint64_t v11 = 170LL;
      }

      a1[3].n128_u64[0] = v11;
      goto LABEL_12;
    }
  }

void sub_100466800(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  if (*a3)
  {
    if (*a3 == 1)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018399D8);
      }
      __n128 v6 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
      {
        int v7 = *a4;
        *(_DWORD *)int32x2_t buf = 67240192;
        int v21 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Watch wrist state updated,onwrist,%{public}d",  buf,  8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018399D8);
        }
        int v11 = *a4;
        int v16 = 67240192;
        int v17 = v11;
        __n128 v12 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Watch wrist state updated,onwrist,%{public}d",  &v16,  8);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onWatchOrientationSettingsNotification(int, const CLWatchOrientationSettingsNotifi er_Type::Notification &, const CLWatchOrientationSettingsNotifier_Type::NotificationData &)",  "%s\n",  v12);
      }

      sub_100A78EE0(a1 + 6616, a4);
    }
  }

  else
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018399D8);
    }
    unint64_t v8 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      int v10 = *a4;
      int v9 = a4[1];
      *(_DWORD *)int32x2_t buf = 67240448;
      int v21 = v9;
      __int16 v22 = 1026;
      int v23 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "Watch orientation settings updated,crown,%{public}d,wrist,%{public}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018399D8);
      }
      int v14 = *a4;
      int v13 = a4[1];
      int v16 = 67240448;
      int v17 = v13;
      __int16 v18 = 1026;
      int v19 = v14;
      __n128 v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Watch orientation settings updated,crown,%{public}d,wrist,%{public}d",  &v16,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onWatchOrientationSettingsNotification(int, const CLWatchOrientationSettingsNotifier _Type::Notification &, const CLWatchOrientationSettingsNotifier_Type::NotificationData &)",  "%s\n",  v15);
    }

    sub_100A82130(a1 + 6616, a4);
  }

id sub_100466B50(uint64_t a1, uint64_t a2, _DWORD *a3, unsigned __int8 *a4)
{
  if (*a3 == 15)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v9 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = *(unsigned __int8 *)(a1 + 10168);
      int v11 = *a4;
      *(_DWORD *)int32x2_t buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v10;
      LOWORD(v25) = 1026;
      *(_DWORD *)((char *)&v25 + 2) = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "System Power Save Mode changed, was, %{public}d, now, %{public}d",  buf,  0xEu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      int v17 = *(unsigned __int8 *)(a1 + 10168);
      int v18 = *a4;
      int v20 = 67240448;
      int v21 = v17;
      __int16 v22 = 1026;
      int v23 = v18;
      int v19 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "System Power Save Mode changed, was, %{public}d, now, %{public}d",  &v20,  14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onDaemonStatus(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_ Type::NotificationData &)",  "%s\n",  v19);
    }

    *(_BYTE *)(a1 + 10168) = *a4;
    uint64_t v12 = sub_1008FA854(0);
    (*(void (**)(uint64_t, BOOL))(*(void *)v12 + 72LL))(v12, *a4 == 0);
    sub_100460014(a1);
    int v13 = *(void **)(a1 + 10280);
    int v14 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "com.apple.locationd.bundle-/System/Library/LocationBundles/MotionCalibration.bundle");
    *(void *)int32x2_t buf = _NSConcreteStackBlock;
    uint64_t v25 = 3221225472LL;
    double v26 = sub_100467CBC;
    __int128 v27 = &unk_1018398E0;
    uint64_t v28 = a1;
    return [v13 getAuthorizationContextOfNonZonalClient:v14 withReply:buf];
  }

  else
  {
    if (*a3 != 7) {
      sub_10123A4C8();
    }
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018399D8);
    }
    __n128 v6 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      int v7 = a4[9];
      *(_DWORD *)int32x2_t buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Battery connected state %{public}d", buf, 8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018399D8);
      }
      int v15 = a4[9];
      int v20 = 67240192;
      int v21 = v15;
      int v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "Battery connected state %{public}d",  &v20,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onDaemonStatus(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_ Type::NotificationData &)",  "%s\n",  v16);
    }

    sub_100A78EBC(a1 + 6616, (uint64_t)a4);
    id result = *(id *)(a1 + 8344);
    if (result) {
      return (id)sub_10095F7C4((uint64_t)result, (uint64_t)a4);
    }
  }

  return result;
}

void sub_100466F48(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 9)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    __n128 v6 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = *(void *)(a4 + 40);
      uint64_t v8 = *(void *)(a4 + 8);
      uint64_t v9 = *(void *)(a4 + 16);
      *(_DWORD *)int32x2_t buf = 134284033;
      uint64_t v21 = v7;
      __int16 v22 = 2049;
      uint64_t v23 = v8;
      __int16 v24 = 2049;
      uint64_t v25 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "One second hr, startTime,%{private}f,hr,%{private}f,hrConfidence,%{private}f",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      uint64_t v10 = *(void *)(a4 + 40);
      uint64_t v11 = *(void *)(a4 + 8);
      uint64_t v12 = *(void *)(a4 + 16);
      int v14 = 134284033;
      uint64_t v15 = v10;
      __int16 v16 = 2049;
      uint64_t v17 = v11;
      __int16 v18 = 2049;
      uint64_t v19 = v12;
      int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "One second hr, startTime,%{private}f,hr,%{private}f,hrConfidence,%{private}f",  &v14,  32);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onCatherineNotification(int, const CLCatherineNotifier_Type::Notification &, const C LCatherineNotifier_Type::NotificationData &)",  "%s\n",  v13);
    }

    sub_100B69A90(*(void *)(a1 + 6600), (void *)a4);
  }

  else if (*a3 == 6 && !*(_DWORD *)(a4 + 24))
  {
    *(int8x16_t *)(a1 + 6952) = vextq_s8(*(int8x16_t *)(a4 + 8), *(int8x16_t *)(a4 + 8), 8uLL);
  }

void sub_100467168(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  __n128 v6 = (char *)(a1 + 8896);
  switch(*a3)
  {
    case 0:
      int v7 = *(unsigned __int8 *)(a1 + 8899);
      if (*((_BYTE *)a4 + 3))
      {
        int v8 = 1;
      }

      else
      {
        sub_100478954(a1 + 704);
        sub_100478B00(a1 + 1376);
        sub_100478CAC(a1 + 2512);
        int v8 = *((unsigned __int8 *)a4 + 3);
      }

      v6[3] = v8;
      if (v7 != v8)
      {
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_1018399F8);
        }
        uint64_t v23 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
        {
          int v24 = v6[3];
          *(_DWORD *)int32x2_t buf = 67109376;
          *(_DWORD *)&uint8_t buf[4] = v7;
          *(_WORD *)__int128 v31 = 1024;
          *(_DWORD *)&v31[2] = v24;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "Workout settings, updating due to fitness tracking change from %d to %d",  buf,  0xEu);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_1018399F8);
          }
          int v25 = v6[3];
          v27[0] = 67109376;
          v27[1] = v7;
          __int16 v28 = 1024;
          int v29 = v25;
          double v26 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Workout settings, updating due to fitness tracking change from %d to %d",  v27,  14);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onFitnessTrackingNotification(int, const CLFitnessTrackingNotifier_Type::Notific ation &, const CLFitnessTrackingNotifier_Type::NotificationData &)",  "%s\n",  v26);
        }

        sub_100460014(a1);
      }

      break;
    case 1:
      char *v6 = *(_BYTE *)a4;
      if (!*(_BYTE *)a4)
      {
        *(void *)(a1 + 9448) = *(void *)(a1 + 9680);
        __int128 v9 = *(_OWORD *)(a1 + 9632);
        __int128 v10 = *(_OWORD *)(a1 + 9664);
        *(_OWORD *)(a1 + 9416) = *(_OWORD *)(a1 + 9648);
        *(_OWORD *)(a1 + 9432) = v10;
        __int128 v11 = *(_OWORD *)(a1 + 9568);
        __int128 v12 = *(_OWORD *)(a1 + 9600);
        *(_OWORD *)(a1 + 9352) = *(_OWORD *)(a1 + 9584);
        *(_OWORD *)(a1 + 9368) = v12;
        *(_OWORD *)(a1 + 9384) = *(_OWORD *)(a1 + 9616);
        *(_OWORD *)(a1 + 940sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v9;
        __int128 v13 = *(_OWORD *)(a1 + 9504);
        __int128 v14 = *(_OWORD *)(a1 + 9536);
        *(_OWORD *)(a1 + 9288) = *(_OWORD *)(a1 + 9520);
        *(_OWORD *)(a1 + 9304) = v14;
        *(_OWORD *)(a1 + 932sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a1 + 9552);
        *(_OWORD *)(a1 + 9336) = v11;
        __int128 v15 = *(_OWORD *)(a1 + 9472);
        *(_OWORD *)(a1 + 9224) = *(_OWORD *)(a1 + 9456);
        *(_OWORD *)(a1 + 924sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v15;
        *(_OWORD *)(a1 + 9256) = *(_OWORD *)(a1 + 9488);
        *(_OWORD *)(a1 + 9272) = v13;
      }

      goto LABEL_8;
    case 2:
      *(_BYTE *)(a1 + 8897) = *(_BYTE *)a4;
      if (!*(_BYTE *)a4)
      {
        *(_OWORD *)(a1 + 9168) = *(_OWORD *)(a1 + 9632);
        *(_OWORD *)(a1 + 9184) = *(_OWORD *)(a1 + 9648);
        *(_OWORD *)(a1 + 920sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a1 + 9664);
        *(void *)(a1 + 9216) = *(void *)(a1 + 9680);
        *(_OWORD *)(a1 + 9104) = *(_OWORD *)(a1 + 9568);
        *(_OWORD *)(a1 + 912sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a1 + 9584);
        *(_OWORD *)(a1 + 9136) = *(_OWORD *)(a1 + 9600);
        *(_OWORD *)(a1 + 9152) = *(_OWORD *)(a1 + 9616);
        *(_OWORD *)(a1 + 904sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a1 + 9504);
        *(_OWORD *)(a1 + 9056) = *(_OWORD *)(a1 + 9520);
        *(_OWORD *)(a1 + 9072) = *(_OWORD *)(a1 + 9536);
        *(_OWORD *)(a1 + 9088) = *(_OWORD *)(a1 + 9552);
        *(_OWORD *)(a1 + 8992) = *(_OWORD *)(a1 + 9456);
        *(_OWORD *)(a1 + 9008) = *(_OWORD *)(a1 + 9472);
        *(_OWORD *)(a1 + 9024) = *(_OWORD *)(a1 + 9488);
      }

uint64_t sub_1004676A8(uint64_t a1)
{
  return sub_100478CAC(a1 + 1816);
}

void sub_1004676D8(_BYTE *a1, uint64_t a2, int *a3, uint64_t a4)
{
  int v7 = *a3;
  if (*a3)
  {
    if (v7 == 1)
    {
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018399D8);
      }
      __int128 v13 = (os_log_s *)qword_1019344B8;
      if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
      {
        int v14 = *(_DWORD *)(a4 + 12);
        *(_DWORD *)int32x2_t buf = 67240192;
        *(_DWORD *)__int128 v37 = v14;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "VehicularConfidence,%{public}d", buf, 8u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018399D8);
        }
        int v21 = *(_DWORD *)(a4 + 12);
        int v24 = 67240192;
        LODWORD(v25) = v21;
        uint64_t v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "VehicularConfidence,%{public}d",  &v24,  8);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onMotionStateObserverNotification(int, const CLMotionStateObserver_Type::Notificat ion &, const CLMotionStateObserver_Type::NotificationData &)",  "%s\n",  v22);
      }

      sub_100A78EF0((uint64_t)(a1 + 6616), a4);
    }

    else if (v7 == 2)
    {
      sub_10123A644();
    }
  }

  else if (a1[461])
  {
    uint64_t v8 = *(void *)a4;
    uint64_t v9 = *(unsigned int *)(a4 + 8);
    int v10 = *(_DWORD *)(a4 + 12);
    int v11 = *(_DWORD *)(a4 + 16);
    if ((CLMotionActivity::isTypePedestrian(v9) & 1) != 0) {
      int isTypeIndoorPedestrian = 1;
    }
    else {
      int isTypeIndoorPedestrian = CLMotionActivity::isTypeIndoorPedestrian(v9);
    }
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183A330);
    }
    uint64_t v19 = (os_log_s *)qword_101934758;
    if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)int32x2_t buf = 134219264;
      *(void *)__int128 v37 = v8;
      *(_WORD *)&_WORD v37[8] = 1024;
      *(_DWORD *)&v37[10] = v9;
      *(_WORD *)&v37[14] = 1024;
      *(_DWORD *)&v37[16] = v10;
      __int16 v38 = 1024;
      int v39 = v11;
      __int16 v40 = 1024;
      BOOL v41 = v9 != 0;
      __int16 v42 = 1024;
      int v43 = isTypeIndoorPedestrian;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "Received observed workout session, startTime, %f, activityType, %d, predictedWorkoutActivityType, %d, hkWorkoutA ctivityType, %d, isWorkout, %d, isPedestrian, %d",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934750 != -1) {
        dispatch_once(&qword_101934750, &stru_10183A330);
      }
      int v24 = 134219264;
      uint64_t v25 = v8;
      __int16 v26 = 1024;
      int v27 = v9;
      __int16 v28 = 1024;
      int v29 = v10;
      __int16 v30 = 1024;
      int v31 = v11;
      __int16 v32 = 1024;
      BOOL v33 = v9 != 0;
      __int16 v34 = 1024;
      int v35 = isTypeIndoorPedestrian;
      uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  1LL,  "Received observed workout session, startTime, %f, activityType, %d, predictedWorkoutActivityType, %d, hkWorkoutActivityType, %d, isWorkout, %d, isPedestrian, %d",  COERCE_DOUBLE(&v24),  42);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onMotionStateObserverNotification(int, const CLMotionStateObserver_Type::Notificatio n &, const CLMotionStateObserver_Type::NotificationData &)",  "%s\n",  v23);
    }

    if ((_DWORD)v9) {
      int v20 = isTypeIndoorPedestrian;
    }
    else {
      int v20 = 0;
    }
    if (v20 == 1)
    {
      buf[0] = 0;
      *(void *)&v37[4] = 0LL;
      *(void *)&v37[12] = 0x10000000000000LL;
      (*(void (**)(_BYTE *, uint8_t *))(*(void *)a1 + 208LL))(a1, buf);
    }
  }

  else
  {
    if (qword_101934750 != -1) {
      dispatch_once(&qword_101934750, &stru_10183A330);
    }
    __int128 v15 = (os_log_s *)qword_101934758;
    if (os_log_type_enabled((os_log_t)qword_101934758, OS_LOG_TYPE_ERROR))
    {
      int v16 = *a3;
      *(_DWORD *)int32x2_t buf = 67109120;
      *(_DWORD *)__int128 v37 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "MotionStateMediator should not be subscribed to notification, %d, when fTriggerIndoorOutdoorOnObservedPedWorkouts is false",  buf,  8u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934750 != -1) {
        dispatch_once(&qword_101934750, &stru_10183A330);
      }
      int v17 = *a3;
      int v24 = 67109120;
      LODWORD(v25) = v17;
      uint64_t v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934758,  16LL,  "MotionStateMediator should not be subscribed to notification, %d, when fTriggerIndoorOutdoorOnObse rvedPedWorkouts is false",  &v24);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLMotionStateMediator::onMotionStateObserverNotification(int, const CLMotionStateObserver_Type::Notificatio n &, const CLMotionStateObserver_Type::NotificationData &)",  "%s\n",  v18);
    }
  }

void sub_100467C40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8232LL);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(a2 + 16))(&v3, a2);
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v2 + 32LL))(v2, &v3);
  unint64_t v5 = (void **)&v4;
  sub_100023498(&v5);
}

void sub_100467CA0(_Unwind_Exception *a1)
{
  *(void *)(v2 - 24) = v1 + 8;
  sub_100023498((void ***)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100467CBC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unsigned int v3 = [a2 isAuthorizedForServiceTypeMask:16];
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    v6[0] = 68289282;
    v6[1] = 0;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    __int16 v9 = 1026;
    unsigned int v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:Received Motion Calibration & Distance, permission:%{public}hhd}",  (uint8_t *)v6,  0x18u);
  }

  sub_100A83000(v2 + 6616, v3);
  int v5 = v3 && *(_DWORD *)(v2 + 8900) != 2 && *(_BYTE *)(v2 + 10168) == 0;
  sub_100A83008(v2 + 6616, v5);
}

id sub_100467DFC(id result, uint64_t a2, int *a3)
{
  if (*a3 <= 4 && ((1 << *a3) & 0x15) != 0)
  {
    id v5 = result;
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    __n128 v6 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *a3;
      *(_DWORD *)int32x2_t buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Received an authorization notification %{public}d. Checking bundle permissions.",  buf,  8u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_1018399F8);
      }
      int v12 = *a3;
      v14[0] = 67240192;
      v14[1] = v12;
      __int128 v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "Received an authorization notification %{public}d. Checking bundle permissions.",  v14,  8);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLMotionStateMediator::onClientManagerNotification(int, const CLClientManager_Type::Notification &, const C LClientManager_Type::NotificationData &)",  "%s\n",  v13);
    }

    uint64_t v8 = (void *)*((void *)v5 + 1285);
    __int16 v9 = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "com.apple.locationd.bundle-/System/Library/LocationBundles/MotionCalibration.bundle");
    *(void *)int32x2_t buf = _NSConcreteStackBlock;
    uint64_t v16 = 3221225472LL;
    int v17 = sub_100467CBC;
    uint64_t v18 = &unk_1018398E0;
    id v19 = v5;
    id result = [v8 getAuthorizationContextOfNonZonalClient:v9 withReply:buf];
    if (!*a3)
    {
      id v10 = objc_msgSend(objc_msgSend(*((id *)v5 + 4), "vendor"), "proxyForService:", @"CLClientManager");
      if (byte_101995847 >= 0) {
        int v11 = &qword_101995830;
      }
      else {
        int v11 = (uint64_t *)qword_101995830;
      }
      return objc_msgSend( v10,  "resetNotificationConsumedForIdentifier:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v11));
    }
  }

  return result;
}

uint64_t sub_100468074(uint64_t result, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 5)
  {
    uint64_t v5 = result;
    double v6 = *(double *)(a4 + 4);
    double v7 = *(double *)(a4 + 12);
    float v8 = v6;
    float v9 = v7;
    (*(void (**)(void, float, float))(**(void **)(result + 8232) + 48LL))( *(void *)(result + 8232),  v8,  v9);
    id result = *(void *)(v5 + 8344);
    if (result) {
      id result = sub_100960678(result, v6, v7);
    }
    if (*(_BYTE *)(v5 + 10296))
    {
      __int128 v10 = *(_OWORD *)(a4 + 16);
      *(_OWORD *)(v5 + 9704) = *(_OWORD *)a4;
      *(_OWORD *)(v5 + 972sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v10;
      __int128 v11 = *(_OWORD *)(a4 + 32);
      __int128 v12 = *(_OWORD *)(a4 + 48);
      __int128 v13 = *(_OWORD *)(a4 + 80);
      *(_OWORD *)(v5 + 9768) = *(_OWORD *)(a4 + 64);
      *(_OWORD *)(v5 + 9784) = v13;
      *(_OWORD *)(v5 + 9736) = v11;
      *(_OWORD *)(v5 + 9752) = v12;
      __int128 v14 = *(_OWORD *)(a4 + 96);
      __int128 v15 = *(_OWORD *)(a4 + 112);
      __int128 v16 = *(_OWORD *)(a4 + 128);
      *(_OWORD *)(v5 + 9844) = *(_OWORD *)(a4 + 140);
      *(_OWORD *)(v5 + 9816) = v15;
      *(_OWORD *)(v5 + 9832) = v16;
      *(_OWORD *)(v5 + 980sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v14;
    }
  }

  return result;
}

uint64_t sub_100468120()
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v0 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_DEFAULT,  "Enabling tier1 cycling features message sending",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    v4[0] = 0;
    unsigned int v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Enabling tier1 cycling features message sending",  v4,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateMediator::onTier1CyclingFeaturesActivate()", "%s\n", v3);
  }

  uint64_t v1 = sub_1008FA854(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v1 + 96) + 56LL))(v1 + 96, 1LL);
}

uint64_t sub_1004682BC()
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v0 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_DEFAULT,  "Disabling tier1 cycling features message sending",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    v4[0] = 0;
    unsigned int v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Disabling tier1 cycling features message sending",  v4,  2);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLMotionStateMediator::onTier1CyclingFeaturesDeactivate()", "%s\n", v3);
  }

  uint64_t v1 = sub_1008FA854(0);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 + 96) + 56LL))(v1 + 96, 0LL);
}

void sub_100468458(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  float v8 = operator new(0x30uLL);
  sub_1010DDBC0(__p, "CLMotionStateMediator");
  sub_100468520((uint64_t)v8, 0LL, (uint64_t *)__p, a3, a1, a2);
  *float v8 = off_101839910;
  *a4 = v8;
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1004684F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100468520(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_10183B268;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    __int128 v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void sub_1004685F4(uint64_t a1, uint64_t a2)
{
  HIDWORD(v14) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        float v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)int32x2_t buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v14 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101839A18);
      }
      char v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        __int128 v11 = (void *)(a1 + 8);
        *(_DWORD *)int32x2_t buf = 136446466;
        int v20 = v11;
        __int16 v21 = 1026;
        int v22 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101839A18);
        }
        __int128 v12 = (void *)(a1 + 8);
        int v15 = 136446466;
        __int128 v16 = v12;
        __int16 v17 = 1026;
        int v18 = a2;
        LODWORD(v14) = 18;
        id v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                        &v15,
                        v14);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData >::removeClient(int) [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotion StateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
      }
    }
  }

uint64_t sub_100468868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101938248);
}

uint64_t sub_10046887C(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)__int16 v42 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          int v24 = (uint64_t *)v18;
        }
        else {
          int v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          int v29 = (uint64_t *)v25;
        }
        else {
          int v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v40 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)&buf[0] = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        memset(buf, 0, 320);
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          __int128 v36 = sub_100478EB8(buf);
          sub_100475FA0((_BYTE *)a1, (uint64_t)v42, (uint64_t)&v40, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v40 = a1 + 64;
        char v30 = byte_101938249;
        HIDWORD(v39) = v17;
        *(void *)&buf[0] = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v30;
        HIDWORD(v39) = *a3;
        *(void *)&buf[0] = (char *)&v39 + 4;
        int v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v39) = *a3;
        *(void *)&buf[0] = (char *)&v39 + 4;
        BOOL v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)&buf[0] = &v41;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        LODWORD(buf[0]) = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v42 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  uint64_t v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    int v15 = (void *)(a1 + 8);
    LODWORD(buf[0]) = 136446466;
    *(void *)((char *)buf + 4) = v15;
    WORD6(buf[0]) = 1026;
    *(_DWORD *)((char *)buf + 14) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      (uint8_t *)buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v37 = (void *)(a1 + 8);
    *(_DWORD *)__int16 v42 = 136446466;
    *(void *)&v42[4] = v37;
    __int16 v43 = 1026;
    int v44 = a2;
    LODWORD(v39) = 18;
    __int16 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                    v42,
                    v39);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>::r egisterForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLMotionStateMed iator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    return 0LL;
  }

  return result;
}

BOOL sub_100468D08(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      float v9 = (uint64_t *)v5;
    }
    else {
      float v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)int32x2_t buf = 136446466;
      int v29 = v11;
      __int16 v30 = 1026;
      int v31 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101839A18);
      }
      int v22 = (void *)(a1 + 8);
      int v24 = 136446466;
      uint64_t v25 = v22;
      __int16 v26 = 1026;
      int v27 = a2;
      BOOL v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                      &v24,
                      18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>: :clientRegistered(int, const Notification_T &) [Notification_T = CLMotionStateMediator_Type::Notification, Notif icationData_T = CLMotionStateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100468F88(char *a1, int a2, int *a3)
{
  HIDWORD(v33) = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }

      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }

          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1004EF494((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                uint64_t v25 = (uint64_t *)v20;
              }
              else {
                uint64_t v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }

            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1004EF494((uint64_t)(v22 + 40), (int *)&v33 + 1);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176LL))(a1, a3);
              }
            }

            else
            {
LABEL_33:
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101839A18);
              }
              __int16 v26 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v27 = a1 + 8;
                if (a1[31] < 0) {
                  int v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160LL))(__p, a1, a3);
                if (v43 >= 0) {
                  BOOL v28 = __p;
                }
                else {
                  BOOL v28 = (void **)__p[0];
                }
                *(_DWORD *)int32x2_t buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v35 = 2082;
                __int128 v36 = v28;
                _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_FAULT,  "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v43 < 0) {
                  operator delete(__p[0]);
                }
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101839A18);
                }
                int v29 = a1 + 8;
                if (a1[31] < 0) {
                  int v29 = (void *)*v29;
                }
                uint64_t v30 = qword_1019349D8;
                (*(void (**)(_BYTE *__return_ptr, char *, int *))(*(void *)a1 + 160LL))(buf, a1, a3);
                if (v37 >= 0) {
                  int v31 = buf;
                }
                else {
                  int v31 = *(_BYTE **)buf;
                }
                int v38 = 136446466;
                uint64_t v39 = v29;
                __int16 v40 = 2082;
                int v41 = v31;
                LODWORD(v33) = 22;
                char v32 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  __p,  1628LL,  &_mh_execute_header,  v30,  17LL,  "%{public}s; notification %{public}s not found",
                                &v38,
                                v33);
                if (v37 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::Notifica tionData>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLMotionStateMedia tor_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, Notificatio nInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v32);
              }
            }
          }
        }
      }
    }
  }

  return v3 == 0;
}

uint64_t sub_100469310(uint64_t a1, int *a2, void *__dst)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 == v3) {
    return 0LL;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0LL;
  }
  int v11 = *(const void **)(v7 + 64);
  if (!v11) {
    return 0LL;
  }
  memcpy(__dst, v11, 0x140uLL);
  return 1LL;
}

uint64_t sub_100469380(uint64_t a1, int *a2, const void *a3)
{
  int v6 = operator new(0x158uLL);
  _DWORD v6[2] = 0LL;
  void *v6 = off_10183B080;
  v6[1] = 0LL;
  memcpy(v6 + 3, a3, 0x140uLL);
  *(void *)&__int128 v13 = v6 + 3;
  *((void *)&v13 + 1) = v6;
  int v12 = *a2;
  uint64_t v14 = &v12;
  uint64_t v7 = sub_10023347C((uint64_t **)(a1 + 56), &v12, (uint64_t)&unk_1012CF090, &v14);
  sub_10005F550((uint64_t)(v7 + 8), &v13);
  int v8 = (std::__shared_weak_count *)*((void *)&v13 + 1);
  if (*((void *)&v13 + 1))
  {
    BOOL v9 = (unint64_t *)(*((void *)&v13 + 1) + 8LL);
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  return 1LL;
}

void sub_100469468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10046947C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v5,  a3,  a4,  0LL);
}

void sub_100469510(uint64_t a1, unsigned int *a2, const void *a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    unint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    int v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      int v12 = (void *)(a1 + 8);
      __int128 v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)int32x2_t buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v66 = 2082;
      __int128 v67 = v12;
      __int16 v68 = 2050;
      __int128 v69 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    int v15 = (__n128 *)(a1 + 64);
    uint64_t v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        uint64_t v20 = (__n128 **)v14;
      }
      else {
        uint64_t v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      uint64_t v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)__int128 v70 = &v70[8];
      memset(&v70[8], 0, 24);
      uint64_t v71 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v70);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      int v21 = v69;
      if (v69)
      {
        p_shared_owners = (unint64_t *)&v69->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      BOOL v24 = v71;
      if (v71)
      {
        uint64_t v25 = (unint64_t *)&v71->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v70, *(void **)&v70[8]);
    }

    if (a4)
    {
      int v27 = operator new(0x158uLL);
      _DWORD v27[2] = 0LL;
      *int v27 = off_10183B080;
      v27[1] = 0LL;
      memcpy(v27 + 3, a3, 0x140uLL);
      *(void *)int32x2_t buf = v27 + 3;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      BOOL v28 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        int v29 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    int v31 = sub_100475B44(a3);
    if (a5 == -1)
    {
      sub_100475BCC((void *)a1, (int *)a2, v31);
    }

    else
    {
      uint64_t v32 = a1 + 88;
      uint64_t v33 = *(void *)(a1 + 88);
      if (!v33) {
        goto LABEL_48;
      }
      uint64_t v34 = a1 + 88;
      do
      {
        int v35 = *(_DWORD *)(v33 + 32);
        BOOL v36 = v35 < a5;
        if (v35 >= a5) {
          char v37 = (uint64_t *)v33;
        }
        else {
          char v37 = (uint64_t *)(v33 + 8);
        }
        if (!v36) {
          uint64_t v34 = v33;
        }
        uint64_t v33 = *v37;
      }

      while (*v37);
      if (v34 == v32 || *(_DWORD *)(v34 + 32) > a5) {
LABEL_48:
      }
        uint64_t v34 = a1 + 88;
      uint64_t v63 = v34;
      unint64_t v38 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v39 = *a2;
      __int16 v40 = (__n128 *)(a1 + 64);
      do
      {
        int v41 = *(_DWORD *)(v38 + 32);
        BOOL v42 = v41 < v39;
        if (v41 >= v39) {
          char v43 = (unint64_t *)v38;
        }
        else {
          char v43 = (unint64_t *)(v38 + 8);
        }
        if (!v42) {
          __int16 v40 = (__n128 *)v38;
        }
        unint64_t v38 = *v43;
      }

      while (*v43);
      if (v40 == v15 || v39 < (signed __int32)v40[2].n128_u32[0])
      {
LABEL_59:
        uint64_t v62 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_101839A18);
        }
        int v44 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          __int16 v45 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v70, a1, a2);
          if (v70[23] >= 0) {
            double v46 = v70;
          }
          else {
            double v46 = *(_BYTE **)v70;
          }
          *(_DWORD *)int32x2_t buf = 136315650;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&_BYTE buf[14] = a5;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = v46;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v70[23] & 0x80000000) != 0) {
            operator delete(*(void **)v70);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_101839A18);
          }
          uint64_t v47 = (void *)(a1 + 8);
          uint64_t v48 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v61 >= 0) {
            __int16 v49 = __p;
          }
          else {
            __int16 v49 = (void **)__p[0];
          }
          *(_DWORD *)__int128 v70 = 136315650;
          *(void *)&v70[4] = v47;
          *(_WORD *)&v70[12] = 1024;
          *(_DWORD *)&_OWORD v70[14] = a5;
          *(_WORD *)&v70[18] = 2080;
          *(void *)&v70[20] = v49;
          uint64_t v50 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v48,  2LL,  "%s; client %d has deregistered, not notifying %s",
                          v70,
                          28,
                          v59);
          if (v61 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationDa ta>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notificatio n_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::Notificatio nData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v50);
          if (v50 != buf) {
            free(v50);
          }
        }

        goto LABEL_83;
      }

      uint64_t v62 = v40;
      if (v34 == v32) {
        goto LABEL_60;
      }
      uint64_t v53 = v40[3].n128_i64[0];
      uint64_t v51 = v40 + 3;
      uint64_t v52 = (__n128 *)v53;
      if (!v53) {
        goto LABEL_60;
      }
      int v54 = *(_DWORD *)(v34 + 32);
      int v55 = v51;
      do
      {
        int v56 = v52[1].n128_i32[3];
        BOOL v57 = v56 < v54;
        if (v56 >= v54) {
          int v58 = v52;
        }
        else {
          int v58 = (__n128 *)&v52->n128_i8[8];
        }
        if (!v57) {
          int v55 = v52;
        }
        uint64_t v52 = (__n128 *)v58->n128_u64[0];
      }

      while (v58->n128_u64[0]);
      sub_100475FA0((_BYTE *)a1, (uint64_t)&v63, (uint64_t)&v62, v31);
    }

void sub_100469B54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100469BA0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    uint64_t v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)int32x2_t buf = 136315138;
      uint64_t v34 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101839A18);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v29 = 136315138;
      unint64_t v30 = v4;
      uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
                     (const char *)&v29);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>: :listClients() [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMed iator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    int v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = (void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 96);
      *(_DWORD *)int32x2_t buf = 136315394;
      uint64_t v34 = v7;
      __int16 v35 = 2048;
      v36[0] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_101839A18);
      }
      uint64_t v25 = (void *)(a1 + 8);
      uint64_t v26 = *(void *)(a1 + 96);
      int v29 = 136315394;
      unint64_t v30 = v25;
      __int16 v31 = 2048;
      v32[0] = v26;
      int v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
                      (const char *)&v29,
                      22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>: :listClients() [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMed iator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v27);
    }

    BOOL v9 = *(void **)(a1 + 80);
    if (v9 != (void *)(a1 + 88))
    {
      unint64_t v10 = (void *)(a1 + 8);
      do
      {
        int v11 = (void *)v9[5];
        if (v11 != v9 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_101839A18);
            }
            int v12 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              __int128 v13 = (void *)(a1 + 8);
              int v14 = *((_DWORD *)v9 + 8);
              int v15 = *((_DWORD *)v11 + 7);
              *(_DWORD *)int32x2_t buf = 136315650;
              uint64_t v34 = v13;
              __int16 v35 = 1024;
              LODWORD(v36[0]) = v14;
              WORD2(v36[0]) = 1024;
              *(_DWORD *)((char *)v36 + 6) = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101839A18);
              }
              BOOL v19 = (void *)(a1 + 8);
              int v20 = *((_DWORD *)v9 + 8);
              int v21 = *((_DWORD *)v11 + 7);
              int v29 = 136315650;
              unint64_t v30 = v19;
              __int16 v31 = 1024;
              LODWORD(v32[0]) = v20;
              WORD2(v32[0]) = 1024;
              *(_DWORD *)((char *)v32 + 6) = v21;
              int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                              (const char *)&v29,
                              24,
                              v28);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::Notificati onData>::listClients() [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v22);
            }

            signed __int32 v16 = (void *)v11[1];
            if (v16)
            {
              do
              {
                int v17 = v16;
                signed __int32 v16 = (void *)*v16;
              }

              while (v16);
            }

            else
            {
              do
              {
                int v17 = (void *)v11[2];
                BOOL v18 = *v17 == (void)v11;
                int v11 = v17;
              }

              while (!v18);
            }

            int v11 = v17;
          }

          while (v17 != v9 + 6);
        }

        unint64_t v23 = (void *)v9[1];
        if (v23)
        {
          do
          {
            BOOL v24 = v23;
            unint64_t v23 = (void *)*v23;
          }

          while (v23);
        }

        else
        {
          do
          {
            BOOL v24 = (void *)v9[2];
            BOOL v18 = *v24 == (void)v9;
            BOOL v9 = v24;
          }

          while (!v18);
        }

        BOOL v9 = v24;
      }

      while (v24 != (void *)(a1 + 88));
    }
  }

void sub_10046A14C(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100478E58(a1);
  operator delete(v1);
}

id sub_10046A160(uint64_t a1, int a2, void *a3)
{
  id result = sub_1004760CC(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0LL, &v6, result, *(void *)(a1 + 32));
  }

  return result;
}

void sub_10046A1AC(id a1)
{
  qword_1019344B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_10046A1D8(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

void sub_10046A204(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_10046A230(uint64_t a1, void *a2)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  unint64_t v3 = a2[4];
  uint64_t v4 = a2[1];
  if (a2[2] == v4)
  {
    uint64_t v5 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v7 = (char *)(v4 + 8 * ((a2[5] + v3) / 0x11));
  }

  else
  {
    uint64_t v5 = (__int128 *)(*(void *)(v4 + 8 * (v3 / 0x11)) + 232 * (v3 % 0x11));
    unint64_t v6 = a2[5] + v3;
    uint64_t v7 = (char *)(v4 + 8 * (v6 / 0x11));
    uint64_t v8 = (__int128 *)(*(void *)v7 + 232 * (v6 % 0x11));
  }

  sub_10046A2FC((void *)a1, (char *)(v4 + 8 * (v3 / 0x11)), v5, v7, v8);
  return a1;
}

void sub_10046A2E8(_Unwind_Exception *a1)
{
}

void *sub_10046A2FC(void *a1, char *a2, __int128 *a3, char *a4, __int128 *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0LL;
  }
  else {
    unint64_t v5 = 2 * (a4 - a2)
  }
       + ((a4 - a2) >> 3)
  return sub_10046A35C(a1, a2, a3, v5);
}

void *sub_10046A35C(void *a1, void *a2, __int128 *a3, unint64_t a4)
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  if (v9 == v8) {
    uint64_t v10 = 0LL;
  }
  else {
    uint64_t v10 = 2 * (v9 - v8) + ((v9 - v8) >> 3) - 1;
  }
  unint64_t v11 = a1[5] + a1[4];
  unint64_t v12 = v10 - v11;
  if (a4 > v12)
  {
    sub_10046A508(a1, a4 - v12);
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2];
    unint64_t v11 = a1[4] + a1[5];
  }

  __int128 v13 = (void *)(v8 + 8 * (v11 / 0x11));
  if (v9 == v8) {
    unint64_t v14 = 0LL;
  }
  else {
    unint64_t v14 = *v13 + 232 * (v11 % 0x11);
  }
  uint64_t v33 = (void *)(v8 + 8 * (v11 / 0x11));
  unint64_t v34 = v14;
  id result = sub_100414E10(&v33, a4);
  uint64_t v16 = v34;
  if (v14 != v34)
  {
    int v17 = v33;
    do
    {
      if (v13 == v17) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = *v13 + 3944LL;
      }
      if (v14 == v18)
      {
        uint64_t v18 = v14;
      }

      else
      {
        unint64_t v19 = v14;
        do
        {
          __int128 v20 = *a3;
          __int128 v21 = a3[2];
          *(_OWORD *)(v19 + 16) = a3[1];
          *(_OWORD *)(v19 + 32) = v21;
          *(_OWORD *)unint64_t v19 = v20;
          __int128 v22 = a3[3];
          __int128 v23 = a3[4];
          __int128 v24 = a3[6];
          *(_OWORD *)(v19 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3[5];
          *(_OWORD *)(v19 + 96) = v24;
          *(_OWORD *)(v19 + 48) = v22;
          *(_OWORD *)(v19 + 64) = v23;
          __int128 v25 = a3[7];
          __int128 v26 = a3[8];
          __int128 v27 = a3[10];
          *(_OWORD *)(v19 + 144) = a3[9];
          *(_OWORD *)(v19 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v27;
          *(_OWORD *)(v19 + 112) = v25;
          *(_OWORD *)(v19 + 128) = v26;
          __int128 v28 = a3[11];
          __int128 v29 = a3[12];
          __int128 v30 = a3[13];
          *(void *)(v19 + 224) = *((void *)a3 + 28);
          *(_OWORD *)(v19 + 192) = v29;
          *(_OWORD *)(v19 + 208) = v30;
          *(_OWORD *)(v19 + 176) = v28;
          a3 = (__int128 *)((char *)a3 + 232);
          if ((__int128 *)((char *)a3 - *a2) == (__int128 *)3944)
          {
            __int16 v31 = (__int128 *)a2[1];
            ++a2;
            a3 = v31;
          }

          v19 += 232LL;
        }

        while (v19 != v18);
      }

      a1[5] += 0x34F72C234F72C235LL * ((uint64_t)(v18 - v14) >> 3);
      if (v13 == v17) {
        break;
      }
      unint64_t v32 = v13[1];
      ++v13;
      unint64_t v14 = v32;
    }

    while (v32 != v16);
  }

  return result;
}

void sub_10046A508(void *a1, unint64_t a2)
{
  unint64_t v3 = (char *)a1[2];
  uint64_t v4 = (uint64_t)&v3[-a1[1]];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if (v5 == 17 * (v5 / 0x11)) {
    unint64_t v6 = v5 / 0x11;
  }
  else {
    unint64_t v6 = v5 / 0x11 + 1;
  }
  unint64_t v7 = a1[4];
  if (v6 >= v7 / 0x11) {
    unint64_t v8 = v7 / 0x11;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 / 0x11)
  {
    for (a1[4] = v7 - 17 * v8; v8; --v8)
    {
      uint64_t v16 = (void *)a1[1];
      uint64_t v19 = *v16;
      int v17 = (char *)(v16 + 1);
      uint64_t v18 = v19;
      a1[1] = v17;
      if (v3 == (char *)a1[3])
      {
        uint64_t v20 = (uint64_t)&v17[-*a1];
        if ((unint64_t)v17 <= *a1)
        {
          else {
            unint64_t v28 = (uint64_t)&v3[-*a1] >> 2;
          }
          __int128 v29 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v28);
          __int16 v31 = &v29[8 * (v28 >> 2)];
          unint64_t v32 = (uint64_t *)a1[1];
          unint64_t v3 = v31;
          uint64_t v33 = a1[2] - (void)v32;
          if (v33)
          {
            unint64_t v3 = &v31[v33 & 0xFFFFFFFFFFFFFFF8LL];
            uint64_t v34 = 8 * (v33 >> 3);
            __int16 v35 = &v29[8 * (v28 >> 2)];
            do
            {
              uint64_t v36 = *v32++;
              *(void *)__int16 v35 = v36;
              v35 += 8;
              v34 -= 8LL;
            }

            while (v34);
          }

          char v37 = (char *)*a1;
          *a1 = v29;
          a1[1] = v31;
          a1[2] = v3;
          a1[3] = &v29[8 * v30];
          if (v37)
          {
            operator delete(v37);
            unint64_t v3 = (char *)a1[2];
          }
        }

        else
        {
          uint64_t v21 = v20 >> 3;
          BOOL v22 = v20 >> 3 < -1;
          uint64_t v23 = (v20 >> 3) + 2;
          if (v22) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = v21 + 1;
          }
          __int128 v25 = &v17[-8 * (v24 >> 1)];
          int64_t v26 = v3 - v17;
          if (v3 != v17)
          {
            memmove(&v17[-8 * (v24 >> 1)], v17, v3 - v17);
            unint64_t v3 = (char *)a1[1];
          }

          __int128 v27 = &v3[-8 * (v24 >> 1)];
          unint64_t v3 = &v25[v26];
          a1[1] = v27;
          a1[2] = &v25[v26];
        }
      }

      *(void *)unint64_t v3 = v18;
      unint64_t v3 = (char *)(a1[2] + 8LL);
      a1[2] = v3;
    }
  }

  else
  {
    unint64_t v9 = v6 - v8;
    uint64_t v10 = a1[3] - *a1;
    if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
    {
      if (v9)
      {
        while (a1[3] != a1[2])
        {
          __p[0] = operator new(0xF68uLL);
          sub_1000EC960(a1, __p);
          --v6;
          if (!--v9) {
            goto LABEL_75;
          }
        }

        for (uint64_t i = 0LL; i != v9; ++i)
        {
          __p[0] = operator new(0xF68uLL);
          sub_1000ECA74((uint64_t)a1, __p);
          if (a1[2] - a1[1] == 8LL) {
            uint64_t v64 = 16LL;
          }
          else {
            uint64_t v64 = 17LL;
          }
          uint64_t v65 = v64 + a1[4];
          a1[4] = v65;
        }

        unint64_t v8 = v6;
      }

      else
      {
LABEL_75:
        uint64_t v65 = a1[4];
      }

      a1[4] = v65 - 17 * v8;
      if (v8)
      {
        __int16 v66 = (char *)a1[2];
        do
        {
          __int128 v67 = (void *)a1[1];
          uint64_t v70 = *v67;
          __int16 v68 = (char *)(v67 + 1);
          uint64_t v69 = v70;
          a1[1] = v68;
          if (v66 == (char *)a1[3])
          {
            uint64_t v71 = (uint64_t)&v68[-*a1];
            if ((unint64_t)v68 <= *a1)
            {
              else {
                unint64_t v78 = (uint64_t)&v66[-*a1] >> 2;
              }
              __int128 v79 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v78);
              __int128 v81 = &v79[8 * (v78 >> 2)];
              __int128 v82 = (uint64_t *)a1[1];
              __int16 v66 = v81;
              uint64_t v83 = a1[2] - (void)v82;
              if (v83)
              {
                __int16 v66 = &v81[v83 & 0xFFFFFFFFFFFFFFF8LL];
                uint64_t v84 = 8 * (v83 >> 3);
                uint64_t v85 = &v79[8 * (v78 >> 2)];
                do
                {
                  uint64_t v86 = *v82++;
                  *(void *)uint64_t v85 = v86;
                  v85 += 8;
                  v84 -= 8LL;
                }

                while (v84);
              }

              char v87 = (char *)*a1;
              *a1 = v79;
              a1[1] = v81;
              a1[2] = v66;
              a1[3] = &v79[8 * v80];
              if (v87)
              {
                operator delete(v87);
                __int16 v66 = (char *)a1[2];
              }
            }

            else
            {
              uint64_t v72 = v71 >> 3;
              BOOL v22 = v71 >> 3 < -1;
              uint64_t v73 = (v71 >> 3) + 2;
              if (v22) {
                uint64_t v74 = v73;
              }
              else {
                uint64_t v74 = v72 + 1;
              }
              uint64_t v75 = &v68[-8 * (v74 >> 1)];
              int64_t v76 = v66 - v68;
              if (v66 != v68)
              {
                memmove(&v68[-8 * (v74 >> 1)], v68, v66 - v68);
                __int16 v66 = (char *)a1[1];
              }

              uint64_t v77 = &v66[-8 * (v74 >> 1)];
              __int16 v66 = &v75[v76];
              a1[1] = v77;
              a1[2] = &v75[v76];
            }
          }

          *(void *)__int16 v66 = v69;
          __int16 v66 = (char *)(a1[2] + 8LL);
          a1[2] = v66;
          --v8;
        }

        while (v8);
      }
    }

    else
    {
      uint64_t v11 = v4 >> 3;
      unint64_t v12 = v10 >> 2;
      if (v12 <= v9 + v11) {
        unint64_t v13 = v9 + v11;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v11 - v8;
      __int128 v91 = a1 + 3;
      if (v13) {
        int v15 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v13);
      }
      else {
        int v15 = 0LL;
      }
      uint64_t v38 = -17LL * v8;
      __p[0] = v15;
      __p[1] = &v15[8 * v14];
      *(void **)&__int128 v90 = __p[1];
      *((void *)&v90 + 1) = &v15[8 * v13];
      do
      {
        __int128 v88 = operator new(0xF68uLL);
        sub_1000ECB90(__p, &v88);
        --v9;
      }

      while (v9);
      if (v8)
      {
        int v39 = (void *)a1[1];
        __int16 v40 = (char *)v90;
        do
        {
          if (v40 == *((char **)&v90 + 1))
          {
            int64_t v41 = (char *)__p[1] - (char *)__p[0];
            if (__p[1] <= __p[0])
            {
              if (v40 == __p[0]) {
                unint64_t v48 = 1LL;
              }
              else {
                unint64_t v48 = (v40 - (char *)__p[0]) >> 2;
              }
              __int16 v49 = (char *)sub_1000071BC((uint64_t)v91, v48);
              uint64_t v51 = (uint64_t *)__p[1];
              __int16 v40 = &v49[8 * (v48 >> 2)];
              uint64_t v52 = v90 - (unint64_t)__p[1];
              if ((void *)v90 != __p[1])
              {
                __int16 v40 = &v49[8 * (v48 >> 2) + (v52 & 0xFFFFFFFFFFFFFFF8LL)];
                uint64_t v53 = 8 * (v52 >> 3);
                int v54 = &v49[8 * (v48 >> 2)];
                do
                {
                  uint64_t v55 = *v51++;
                  *(void *)int v54 = v55;
                  v54 += 8;
                  v53 -= 8LL;
                }

                while (v53);
              }

              int v56 = __p[0];
              __p[0] = v49;
              __p[1] = &v49[8 * (v48 >> 2)];
              *(void *)&__int128 v90 = v40;
              *((void *)&v90 + 1) = &v49[8 * v50];
              if (v56)
              {
                operator delete(v56);
                __int16 v40 = (char *)v90;
              }
            }

            else
            {
              uint64_t v42 = v41 >> 3;
              BOOL v22 = v41 >> 3 < -1;
              uint64_t v43 = (v41 >> 3) + 2;
              if (v22) {
                uint64_t v44 = v43;
              }
              else {
                uint64_t v44 = v42 + 1;
              }
              __int16 v45 = (char *)__p[1] - 8 * (v44 >> 1);
              int64_t v46 = v40 - (char *)__p[1];
              if (v40 != __p[1])
              {
                memmove((char *)__p[1] - 8 * (v44 >> 1), __p[1], v40 - (char *)__p[1]);
                __int16 v40 = (char *)__p[1];
              }

              uint64_t v47 = &v40[-8 * (v44 >> 1)];
              __int16 v40 = &v45[v46];
              __p[1] = v47;
              *(void *)&__int128 v90 = &v45[v46];
            }
          }

          *(void *)__int16 v40 = *v39;
          __int16 v40 = (char *)(v90 + 8);
          *(void *)&__int128 v90 = v90 + 8;
          int v39 = (void *)(a1[1] + 8LL);
          a1[1] = v39;
          --v8;
        }

        while (v8);
      }

      BOOL v57 = (void *)a1[2];
      uint64_t v58 = -7LL - (void)v57;
      while (v57 != (void *)a1[1])
      {
        --v57;
        v58 += 8LL;
        sub_1000ECCA4((uint64_t)__p, v57);
      }

      int v59 = (char *)*a1;
      __int128 v60 = *(_OWORD *)__p;
      __int128 v61 = v90;
      __p[0] = *(void **)a1;
      __p[1] = v57;
      __int128 v62 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v60;
      *((_OWORD *)a1 + 1) = v61;
      __int128 v90 = v62;
      a1[4] += v38;
      if (v57 != (void *)v62) {
        *(void *)&__int128 v90 = v62 + (-(v62 + v58) & 0xFFFFFFFFFFFFFFF8LL);
      }
      if (v59) {
        operator delete(v59);
      }
    }
  }

void sub_10046AA40( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10046AAB4(void *a1)
{
  *a1 = off_10186B5E0;
  uint64_t v2 = a1 + 190;
  unint64_t v3 = (void *)a1[193];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    unint64_t v3 = v2;
  }

  else
  {
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  unint64_t v5 = (void *)a1[187];
  if (v5)
  {
    a1[188] = v5;
    operator delete(v5);
  }

  unint64_t v6 = (void *)a1[182];
  if (v6 == a1 + 179)
  {
    uint64_t v7 = 4LL;
    unint64_t v6 = a1 + 179;
  }

  else
  {
    if (!v6) {
      goto LABEL_13;
    }
    uint64_t v7 = 5LL;
  }

  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_13:
  sub_10000AE14((uint64_t)(a1 + 177));
  unint64_t v8 = (void **)a1[170];
  a1[170] = 0LL;
  if (v8) {
    sub_100223734((_DWORD)a1 + 1360, v8);
  }
  unint64_t v9 = (uint64_t *)a1[59];
  a1[59] = 0LL;
  if (v9) {
    sub_10046ABC8((_DWORD)a1 + 472, v9);
  }
  uint64_t v10 = (void *)a1[58];
  a1[58] = 0LL;
  if (v10) {
    operator delete(v10);
  }
  uint64_t v11 = a1[54];
  a1[54] = 0LL;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8LL))(v11);
  }
  unint64_t v12 = (uint64_t *)a1[53];
  a1[53] = 0LL;
  if (v12) {
    sub_10046AC38((_DWORD)a1 + 424, v12);
  }
  sub_10046ACAC(a1 + 5);
  return a1;
}

void sub_10046ABC8(int a1, uint64_t *__p)
{
  if (!__p) {
    return;
  }
  unint64_t v3 = (uint64_t *)__p[6];
  if (v3 == __p + 3)
  {
    uint64_t v4 = 4LL;
    unint64_t v3 = __p + 3;
    goto LABEL_7;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_7:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  uint64_t v5 = *__p;
  *std::stringbuf::string_type __p = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 32LL))(v5);
  }
  operator delete(__p);
}

void sub_10046AC38(int a1, uint64_t *__p)
{
  if (!__p) {
    return;
  }
  unint64_t v3 = (uint64_t *)__p[11];
  if (v3 == __p + 8)
  {
    uint64_t v4 = 4LL;
    unint64_t v3 = __p + 8;
    goto LABEL_7;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_7:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  uint64_t v5 = *__p;
  *std::stringbuf::string_type __p = 0LL;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24LL))(v5);
  }
  operator delete(__p);
}

void *sub_10046ACAC(void *a1)
{
  *a1 = off_101839A48;
  uint64_t v2 = a1 + 32;
  unint64_t v3 = (void *)a1[35];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    unint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_10046AD28(a1 + 2);
  return a1;
}

void sub_10046AD14(void *a1)
{
  uint64_t v1 = sub_10046ACAC(a1);
  operator delete(v1);
}

uint64_t sub_10046AD28(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  unint64_t v3 = (void **)a1[2];
  a1[5] = 0LL;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      unint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 12LL;
  }

  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 25LL;
  }

  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void *sub_10046ADBC(void *a1)
{
  *a1 = off_101839AA0;
  sub_10046B01C(a1 + 402);
  sub_10046B1A0(a1 + 380);
  sub_10046B324(a1 + 361);
  sub_10046B3A0(a1 + 343);
  a1[306] = off_101839DB0;
  uint64_t v2 = a1[342];
  a1[342] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  sub_10046B41C(a1 + 306);
  sub_10046BBA4(a1 + 277);
  sub_10046BD28(a1 + 256);
  sub_10046BDA4(a1 + 227);
  sub_10046BE98(a1 + 169);
  a1[129] = off_10183A098;
  uint64_t v3 = a1[168];
  a1[168] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10046C57C(a1 + 129);
  sub_10046D194(a1 + 85);
  a1[59] = off_10183A1E0;
  uint64_t v4 = a1[84];
  a1[84] = 0LL;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  sub_10046D3AC(a1 + 59);
  sub_10046DADC(a1 + 1);
  return a1;
}

void *sub_10046AEE8(void *a1)
{
  *a1 = off_101839DB0;
  uint64_t v2 = a1[36];
  a1[36] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  return sub_10046B41C(a1);
}

void *sub_10046AF40(void *a1)
{
  *a1 = off_10183A098;
  uint64_t v2 = a1[39];
  a1[39] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  return sub_10046C57C(a1);
}

void *sub_10046AF8C(void *a1)
{
  *a1 = off_10183A1E0;
  uint64_t v2 = a1[25];
  a1[25] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  return sub_10046D3AC(a1);
}

uint64_t sub_10046AFD8(uint64_t a1)
{
  return a1 + 680;
}

uint64_t sub_10046AFE0(uint64_t a1)
{
  return a1 + 1032;
}

uint64_t sub_10046AFE8(uint64_t a1)
{
  return a1 + 1352;
}

uint64_t sub_10046AFF0(uint64_t a1)
{
  return a1 + 1816;
}

uint64_t sub_10046AFF8(uint64_t a1)
{
  return a1 + 2048;
}

uint64_t sub_10046B000(uint64_t a1)
{
  return a1 + 2448;
}

void sub_10046B008(void *a1)
{
  uint64_t v1 = sub_10046ADBC(a1);
  operator delete(v1);
}

void *sub_10046B01C(void *a1)
{
  *a1 = off_101839BC0;
  uint64_t v2 = a1 + 21;
  uint64_t v3 = (void *)a1[24];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_10046B07C(a1);
}

void *sub_10046B07C(void *a1)
{
  *a1 = off_101839C30;
  uint64_t v2 = a1 + 17;
  uint64_t v3 = (void *)a1[20];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_1001B9D48(a1 + 2);
  return a1;
}

void sub_10046B0E4(void *a1)
{
  uint64_t v1 = sub_10046B01C(a1);
  operator delete(v1);
}

uint64_t sub_10046B0F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 192);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = 1LL;
  char v4 = 1;
  return v2;
}

BOOL sub_10046B144(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 192);
  BOOL result = 0;
  if (v1)
  {
    char v3 = 0;
  }

  return result;
}

void sub_10046B18C(void *a1)
{
  uint64_t v1 = sub_10046B07C(a1);
  operator delete(v1);
}

void *sub_10046B1A0(void *a1)
{
  *a1 = off_101839C60;
  uint64_t v2 = a1 + 18;
  char v3 = (void *)a1[21];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_10046B200(a1);
}

void *sub_10046B200(void *a1)
{
  *a1 = off_101839CD0;
  uint64_t v2 = a1 + 14;
  char v3 = (void *)a1[17];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_100231C10(a1 + 2);
  return a1;
}

void sub_10046B268(void *a1)
{
  uint64_t v1 = sub_10046B1A0(a1);
  operator delete(v1);
}

uint64_t sub_10046B27C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 168);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = 1LL;
  char v4 = 1;
  return v2;
}

BOOL sub_10046B2C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 168);
  BOOL result = 0;
  if (v1)
  {
    char v3 = 0;
  }

  return result;
}

void sub_10046B310(void *a1)
{
  uint64_t v1 = sub_10046B200(a1);
  operator delete(v1);
}

void *sub_10046B324(void *a1)
{
  *a1 = off_101839D00;
  uint64_t v2 = a1 + 15;
  char v3 = (void *)a1[18];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_100210A00(a1 + 2);
  return a1;
}

void sub_10046B38C(void *a1)
{
  uint64_t v1 = sub_10046B324(a1);
  operator delete(v1);
}

void *sub_10046B3A0(void *a1)
{
  *a1 = off_101839D58;
  uint64_t v2 = a1 + 14;
  char v3 = (void *)a1[17];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_100231C10(a1 + 2);
  return a1;
}

void sub_10046B408(void *a1)
{
  uint64_t v1 = sub_10046B3A0(a1);
  operator delete(v1);
}

void *sub_10046B41C(void *a1)
{
  *a1 = off_101839E28;
  uint64_t v2 = a1 + 31;
  char v3 = (void *)a1[34];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_100210A94(a1 + 2);
  return a1;
}

void sub_10046B484(void *a1)
{
  *a1 = off_101839DB0;
  uint64_t v2 = a1[36];
  a1[36] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  char v3 = sub_10046B41C(a1);
  operator delete(v3);
}

uint64_t sub_10046B4D0(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    unint64_t v8 = "Swim";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "activate src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = 136315138;
    uint64_t v6 = "Swim";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "activate src %s",  (const char *)&v5);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSourceFromNotifier<CLSwimEntry>::enable() const [Data_T = CLSwimEntry]",  "%s\n",  v4);
  }

  [*(id *)(*(void *)(a1 + 288) + 16) register:*(void *)(*(void *)(a1 + 288) + 8) forNotification:0 registrationInfo:0];
  return 1LL;
}

uint64_t sub_10046B6A0(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    unint64_t v8 = "Swim";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "deactivate src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = 136315138;
    uint64_t v6 = "Swim";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "deactivate src %s",  (const char *)&v5);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSourceFromNotifier<CLSwimEntry>::disable() const [Data_T = CLSwimEntry]",  "%s\n",  v4);
  }

  [*(id *)(*(void *)(a1 + 288) + 16) unregister:*(void *)(*(void *)(a1 + 288) + 8) forNotification:0];
  return 1LL;
}

void sub_10046B86C(uint64_t a1, uint64_t a2, _DWORD *a3, __int128 *a4)
{
}

void sub_10046B88C(void *a1)
{
  uint64_t v1 = sub_10046B41C(a1);
  operator delete(v1);
}

void sub_10046B8A0(uint64_t a1, __int128 *a2)
{
  __int128 v3 = a2[7];
  __int128 v37 = a2[6];
  __int128 v38 = v3;
  __int128 v39 = a2[8];
  uint64_t v40 = *((void *)a2 + 18);
  __int128 v4 = a2[3];
  __int128 v33 = a2[2];
  __int128 v34 = v4;
  __int128 v5 = a2[5];
  __int128 v35 = a2[4];
  __int128 v36 = v5;
  __int128 v6 = a2[1];
  __int128 v31 = *a2;
  __int128 v32 = v6;
  uint64_t v7 = *(void *)(a1 + 272);
  if (v7) {
    (*(void (**)(uint64_t, __int128 *))(*(void *)v7 + 48LL))(v7, &v31);
  }
  uint64_t v8 = *(void *)(a1 + 56);
  if (v8)
  {
    unint64_t v9 = v8 + *(void *)(a1 + 48) - 1;
    uint64_t v10 = *(void ***)(a1 + 24);
    double v11 = *((double *)v10[v9 / 0x1A] + 19 * (v9 % 0x1A) + 5);
    if (v11 > *((double *)&v33 + 1))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0LL;
      unint64_t v13 = v12 - (void)v10;
      if (v13 >= 0x11)
      {
        do
        {
          operator delete(*v10);
          uint64_t v14 = *(void *)(a1 + 32);
          uint64_t v10 = (void **)(*(void *)(a1 + 24) + 8LL);
          *(void *)(a1 + 24) = v10;
          unint64_t v13 = v14 - (void)v10;
        }

        while (v13 > 0x10);
      }

      if (v13 >> 3 == 1)
      {
        uint64_t v15 = 13LL;
      }

      else
      {
        if (v13 >> 3 != 2)
        {
LABEL_12:
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018399D8);
          }
          uint64_t v16 = (os_log_s *)qword_1019344B8;
          if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            uint64_t v28 = *((void *)&v33 + 1);
            __int16 v29 = 2048;
            double v30 = v11;
            _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_1018399D8);
            }
            int v23 = 134218240;
            uint64_t v24 = *((void *)&v33 + 1);
            __int16 v25 = 2048;
            double v26 = v11;
            LODWORD(v22) = 22;
            uint64_t v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  COERCE_DOUBLE(&v23),  v22);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLSwimEntry>::add(const T &) [T = CLSwimEntry]",  "%s\n",  v21);
          }

          goto LABEL_17;
        }

        uint64_t v15 = 26LL;
      }

      *(void *)(a1 + 48) = v15;
      goto LABEL_12;
    }
  }

void *sub_10046BBA4(void *a1)
{
  *a1 = off_101839E58;
  uint64_t v2 = a1 + 25;
  __int128 v3 = (void *)a1[28];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    __int128 v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_10046BC04(a1);
}

void *sub_10046BC04(void *a1)
{
  *a1 = off_101839EC8;
  uint64_t v2 = a1 + 21;
  __int128 v3 = (void *)a1[24];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    __int128 v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_1002D6244(a1 + 2);
  return a1;
}

void sub_10046BC6C(void *a1)
{
  uint64_t v1 = sub_10046BBA4(a1);
  operator delete(v1);
}

uint64_t sub_10046BC80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 224);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = 1LL;
  char v4 = 1;
  return v2;
}

BOOL sub_10046BCCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 224);
  BOOL result = 0;
  if (v1)
  {
    char v3 = 0;
  }

  return result;
}

void sub_10046BD14(void *a1)
{
  uint64_t v1 = sub_10046BC04(a1);
  operator delete(v1);
}

void *sub_10046BD28(void *a1)
{
  *a1 = off_101839EF8;
  uint64_t v2 = a1 + 17;
  char v3 = (void *)a1[20];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_1001B9D48(a1 + 2);
  return a1;
}

void sub_10046BD90(void *a1)
{
  uint64_t v1 = sub_10046BD28(a1);
  operator delete(v1);
}

void *sub_10046BDA4(void *a1)
{
  *a1 = off_101839F50;
  uint64_t v2 = a1 + 25;
  char v3 = (void *)a1[28];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_10046BE04(a1);
}

void *sub_10046BE04(void *a1)
{
  *a1 = off_101839FC0;
  uint64_t v2 = a1 + 21;
  char v3 = (void *)a1[24];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_1002D6244(a1 + 2);
  return a1;
}

void sub_10046BE6C(void *a1)
{
  uint64_t v1 = sub_10046BDA4(a1);
  operator delete(v1);
}

void sub_10046BE84(void *a1)
{
  uint64_t v1 = sub_10046BE04(a1);
  operator delete(v1);
}

void *sub_10046BE98(void *a1)
{
  *a1 = off_101839FF0;
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    unint64_t v9 = "ExtendedStepCount";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "disable message src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v6 = 136315138;
    uint64_t v7 = "ExtendedStepCount";
    __int128 v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "disable message src %s",  (const char *)&v6);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLSourceFromNotifier<CLExtendedStepCountEntry>::~CLSourceFromNotifier() [Data_T = CLExtendedStepCountEntry]",  "%s\n",  v5);
  }

  [*(id *)(a1[57] + 16) unregister:*(void *)(a1[57] + 8) forNotification:1];
  uint64_t v3 = a1[57];
  a1[57] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10046C0A0(a1);
  return a1;
}

void sub_10046C094(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void *sub_10046C0A0(void *a1)
{
  *a1 = off_10183A068;
  uint64_t v2 = a1 + 52;
  uint64_t v3 = (void *)a1[55];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_10046C4E8(a1 + 2);
  return a1;
}

void sub_10046C108(void *a1)
{
  uint64_t v1 = sub_10046BE98(a1);
  operator delete(v1);
}

uint64_t sub_10046C11C(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v8 = "ExtendedStepCount";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "activate src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = 136315138;
    int v6 = "ExtendedStepCount";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "activate src %s",  (const char *)&v5);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSourceFromNotifier<CLExtendedStepCountEntry>::enable() const [Data_T = CLExtendedStepCountEntry]",  "%s\n",  v4);
  }

  [*(id *)(*(void *)(a1 + 456) + 16) register:*(void *)(*(void *)(a1 + 456) + 8) forNotification:1 registrationInfo:0];
  return 1LL;
}

uint64_t sub_10046C2EC(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v8 = "ExtendedStepCount";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "deactivate src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = 136315138;
    int v6 = "ExtendedStepCount";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "deactivate src %s",  (const char *)&v5);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSourceFromNotifier<CLExtendedStepCountEntry>::disable() const [Data_T = CLExtendedStepCountEntry]",  "%s\n",  v4);
  }

  [*(id *)(*(void *)(a1 + 456) + 16) unregister:*(void *)(*(void *)(a1 + 456) + 8) forNotification:1];
  return 1LL;
}

void *sub_10046C4B8(void *result, uint64_t a2, _DWORD *a3, const void *a4)
{
  if (*a3 == 1) {
    return sub_100465F90(result, a4);
  }
  return result;
}

void sub_10046C4D4(void *a1)
{
  uint64_t v1 = sub_10046C0A0(a1);
  operator delete(v1);
}

uint64_t sub_10046C4E8(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0LL;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 8LL;
  }

  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 16LL;
  }

  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void *sub_10046C57C(void *a1)
{
  *a1 = off_10183A110;
  uint64_t v2 = a1 + 34;
  uint64_t v3 = (void *)a1[37];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_10046CA00(a1 + 2);
  return a1;
}

void sub_10046C5E4(void *a1)
{
  *a1 = off_10183A098;
  uint64_t v2 = a1[39];
  a1[39] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  uint64_t v3 = sub_10046C57C(a1);
  operator delete(v3);
}

uint64_t sub_10046C630(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v8 = "StepCount";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "activate src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = 136315138;
    uint64_t v6 = "StepCount";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "activate src %s",  (const char *)&v5);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSourceFromNotifier<CLStepCountEntry>::enable() const [Data_T = CLStepCountEntry]",  "%s\n",  v4);
  }

  [*(id *)(*(void *)(a1 + 312) + 16) register:*(void *)(*(void *)(a1 + 312) + 8) forNotification:0 registrationInfo:0];
  return 1LL;
}

uint64_t sub_10046C800(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v8 = "StepCount";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "deactivate src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = 136315138;
    uint64_t v6 = "StepCount";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "deactivate src %s",  (const char *)&v5);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSourceFromNotifier<CLStepCountEntry>::disable() const [Data_T = CLStepCountEntry]",  "%s\n",  v4);
  }

  [*(id *)(*(void *)(a1 + 312) + 16) unregister:*(void *)(*(void *)(a1 + 312) + 8) forNotification:0];
  return 1LL;
}

void sub_10046C9CC(uint64_t a1, uint64_t a2, _DWORD *a3, __int128 *a4)
{
}

void sub_10046C9EC(void *a1)
{
  uint64_t v1 = sub_10046C57C(a1);
  operator delete(v1);
}

uint64_t sub_10046CA00(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0LL;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 11LL;
  }

  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 23LL;
  }

  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void sub_10046CA94(uint64_t a1, __int128 *a2)
{
  __int128 v3 = a2[9];
  __int128 v33 = a2[8];
  __int128 v34 = v3;
  __int128 v35 = a2[10];
  __int128 v4 = a2[5];
  __int128 v29 = a2[4];
  __int128 v30 = v4;
  __int128 v5 = a2[7];
  __int128 v31 = a2[6];
  __int128 v32 = v5;
  __int128 v6 = a2[1];
  __int128 v25 = *a2;
  __int128 v26 = v6;
  __int128 v7 = a2[3];
  __int128 v27 = a2[2];
  __int128 v28 = v7;
  uint64_t v8 = *(void *)(a1 + 296);
  if (v8) {
    (*(void (**)(uint64_t, __int128 *))(*(void *)v8 + 48LL))(v8, &v25);
  }
  uint64_t v9 = *(void *)(a1 + 56);
  if (v9)
  {
    unint64_t v10 = v9 + *(void *)(a1 + 48) - 1;
    double v11 = *(void ***)(a1 + 24);
    double v12 = *((double *)v11[v10 / 0x17] + 22 * (v10 % 0x17) + 1);
    if (v12 > *((double *)&v25 + 1))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0LL;
      unint64_t v14 = v13 - (void)v11;
      if (v14 >= 0x11)
      {
        do
        {
          operator delete(*v11);
          uint64_t v15 = *(void *)(a1 + 32);
          double v11 = (void **)(*(void *)(a1 + 24) + 8LL);
          *(void *)(a1 + 24) = v11;
          unint64_t v14 = v15 - (void)v11;
        }

        while (v14 > 0x10);
      }

      if (v14 >> 3 == 1)
      {
        uint64_t v16 = 11LL;
      }

      else
      {
        if (v14 >> 3 != 2)
        {
LABEL_12:
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018399D8);
          }
          __int128 v17 = (os_log_s *)qword_1019344B8;
          if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            uint64_t v41 = *((void *)&v25 + 1);
            __int16 v42 = 2048;
            double v43 = v12;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_1018399D8);
            }
            int v36 = 134218240;
            uint64_t v37 = *((void *)&v25 + 1);
            __int16 v38 = 2048;
            double v39 = v12;
            LODWORD(v24) = 22;
            int v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  COERCE_DOUBLE(&v36),  v24);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLStepCountEntry>::add(const T &) [T = CLStepCountEntry]",  "%s\n",  v23);
          }

          goto LABEL_17;
        }

        uint64_t v16 = 23LL;
      }

      *(void *)(a1 + 48) = v16;
      goto LABEL_12;
    }
  }

__n128 sub_10046CDA4(void *a1, __int128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 23 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_10046CE80(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x17)) + 176 * (v7 % 0x17);
  __int128 v9 = *a2;
  __int128 v10 = a2[2];
  *(_OWORD *)(v8 + 16) = a2[1];
  *(_OWORD *)(v8 + 32) = v10;
  *(_OWORD *)unint64_t v8 = v9;
  __int128 v11 = a2[3];
  __int128 v12 = a2[4];
  __int128 v13 = a2[6];
  *(_OWORD *)(v8 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a2[5];
  *(_OWORD *)(v8 + 96) = v13;
  *(_OWORD *)(v8 + 48) = v11;
  *(_OWORD *)(v8 + 64) = v12;
  __n128 result = (__n128)a2[7];
  __int128 v15 = a2[8];
  __int128 v16 = a2[10];
  *(_OWORD *)(v8 + 144) = a2[9];
  *(_OWORD *)(v8 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v16;
  *(__n128 *)(v8 + 112) = result;
  *(_OWORD *)(v8 + 128) = v15;
  ++a1[5];
  return result;
}

void sub_10046CE80(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x17;
  unint64_t v4 = v2 - 23;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    __int128 v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int128 v34 = (char *)sub_1000071BC(v5, v33);
      __int128 v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      __int16 v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        uint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)uint64_t v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_10046D148( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_10046D194(void *a1)
{
  *a1 = off_10183A140;
  unint64_t v2 = a1 + 40;
  BOOL v3 = (void *)a1[43];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    BOOL v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_10046D1F4(a1);
}

void *sub_10046D1F4(void *a1)
{
  *a1 = off_10183A1B0;
  unint64_t v2 = a1 + 36;
  BOOL v3 = (void *)a1[39];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    BOOL v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_10046D318(a1 + 2);
  return a1;
}

void sub_10046D25C(void *a1)
{
  uint64_t v1 = sub_10046D194(a1);
  operator delete(v1);
}

uint64_t sub_10046D270(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 344);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = 1LL;
  char v4 = 1;
  return v2;
}

BOOL sub_10046D2BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 344);
  BOOL result = 0;
  if (v1)
  {
    char v3 = 0;
  }

  return result;
}

void sub_10046D304(void *a1)
{
  uint64_t v1 = sub_10046D1F4(a1);
  operator delete(v1);
}

uint64_t sub_10046D318(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  char v3 = (void **)a1[2];
  a1[5] = 0LL;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      char v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 10LL;
  }

  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 21LL;
  }

  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    unint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void *sub_10046D3AC(void *a1)
{
  *a1 = off_10183A258;
  uint64_t v2 = a1 + 20;
  char v3 = (void *)a1[23];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_1002D62D8(a1 + 2);
  return a1;
}

void sub_10046D414(void *a1)
{
  *a1 = off_10183A1E0;
  uint64_t v2 = a1[25];
  a1[25] = 0LL;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
  char v3 = sub_10046D3AC(a1);
  operator delete(v3);
}

uint64_t sub_10046D460(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    unint64_t v8 = "HeartRate";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "activate src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = 136315138;
    uint64_t v6 = "HeartRate";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "activate src %s",  (const char *)&v5);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSourceFromNotifier<CLCatherineData>::enable() const [Data_T = CLCatherineData]",  "%s\n",  v4);
  }

  [*(id *)(*(void *)(a1 + 200) + 16) register:*(void *)(*(void *)(a1 + 200) + 8) forNotification:4 registrationInfo:0];
  return 1LL;
}

uint64_t sub_10046D630(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    unint64_t v8 = "HeartRate";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "deactivate src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = 136315138;
    uint64_t v6 = "HeartRate";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "deactivate src %s",  (const char *)&v5);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSourceFromNotifier<CLCatherineData>::disable() const [Data_T = CLCatherineData]",  "%s\n",  v4);
  }

  [*(id *)(*(void *)(a1 + 200) + 16) unregister:*(void *)(*(void *)(a1 + 200) + 8) forNotification:4];
  return 1LL;
}

void sub_10046D7FC(uint64_t a1, uint64_t a2, _DWORD *a3, __int128 *a4)
{
  if (*a3 == 4 || *a3 == -1) {
    sub_10046D830(a1, a4);
  }
}

void sub_10046D81C(void *a1)
{
  uint64_t v1 = sub_10046D3AC(a1);
  operator delete(v1);
}

void sub_10046D830(uint64_t a1, __int128 *a2)
{
  __int128 v3 = a2[1];
  __int128 v19 = *a2;
  __int128 v20 = v3;
  __int128 v4 = a2[3];
  __int128 v21 = a2[2];
  __int128 v22 = v4;
  uint64_t v5 = *(void *)(a1 + 184);
  if (v5) {
    (*(void (**)(uint64_t, __int128 *))(*(void *)v5 + 48LL))(v5, &v19);
  }
  uint64_t v6 = *(void *)(a1 + 56);
  if (v6)
  {
    unint64_t v7 = v6 + *(void *)(a1 + 48) - 1;
    unint64_t v8 = *(void ***)(a1 + 24);
    double v9 = (*(double **)((char *)v8 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8LL)))[8 * (v7 & 0x3F) + 5];
    if (v9 > *((double *)&v21 + 1))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0LL;
      unint64_t v11 = v10 - (void)v8;
      if (v11 >= 0x11)
      {
        do
        {
          operator delete(*v8);
          uint64_t v12 = *(void *)(a1 + 32);
          unint64_t v8 = (void **)(*(void *)(a1 + 24) + 8LL);
          *(void *)(a1 + 24) = v8;
          unint64_t v11 = v12 - (void)v8;
        }

        while (v11 > 0x10);
      }

      if (v11 >> 3 == 1)
      {
        uint64_t v13 = 32LL;
      }

      else
      {
        if (v11 >> 3 != 2)
        {
LABEL_12:
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018399D8);
          }
          BOOL v14 = (os_log_s *)qword_1019344B8;
          if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            uint64_t v28 = *((void *)&v21 + 1);
            __int16 v29 = 2048;
            double v30 = v9;
            _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  buf,  0x16u);
          }

          if (sub_1002921D0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1019344B0 != -1) {
              dispatch_once(&qword_1019344B0, &stru_1018399D8);
            }
            int v23 = 134218240;
            uint64_t v24 = *((void *)&v21 + 1);
            __int16 v25 = 2048;
            double v26 = v9;
            LODWORD(v18) = 22;
            uint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  COERCE_DOUBLE(&v23),  v18);
            sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLCatherineData>::add(const T &) [T = CLCatherineData]",  "%s\n",  v17);
          }

          goto LABEL_17;
        }

        uint64_t v13 = 64LL;
      }

      *(void *)(a1 + 48) = v13;
      goto LABEL_12;
    }
  }

void *sub_10046DADC(void *a1)
{
  *a1 = off_10183A288;
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    double v9 = "Elevation";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "disable message src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v6 = 136315138;
    unint64_t v7 = "Elevation";
    uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "disable message src %s",  (const char *)&v6);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual CLSourceFromNotifier<CLElevationChangeEntry>::~CLSourceFromNotifier() [Data_T = CLElevationChangeEntry]",  "%s\n",  v5);
  }

  [*(id *)(a1[57] + 16) unregister:*(void *)(a1[57] + 8) forNotification:7];
  uint64_t v3 = a1[57];
  a1[57] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10046DCE4(a1);
  return a1;
}

void sub_10046DCD8(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

void *sub_10046DCE4(void *a1)
{
  *a1 = &off_10183A310;
  uint64_t v2 = a1 + 52;
  uint64_t v3 = (void *)a1[55];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_1002D62D8(a1 + 34);
  sub_10046E138(a1 + 1);
  return a1;
}

void sub_10046DD54(void *a1)
{
  uint64_t v1 = sub_10046DADC(a1);
  operator delete(v1);
}

uint64_t sub_10046DD68(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    unint64_t v8 = "Elevation";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "activate src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = 136315138;
    int v6 = "Elevation";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "activate src %s",  (const char *)&v5);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSourceFromNotifier<CLElevationChangeEntry>::enable() const [Data_T = CLElevationChangeEntry]",  "%s\n",  v4);
  }

  [*(id *)(*(void *)(a1 + 456) + 16) register:*(void *)(*(void *)(a1 + 456) + 8) forNotification:3 registrationInfo:0];
  return 1LL;
}

uint64_t sub_10046DF38(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    unint64_t v8 = "Elevation";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "deactivate src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v5 = 136315138;
    int v6 = "Elevation";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "deactivate src %s",  (const char *)&v5);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLSourceFromNotifier<CLElevationChangeEntry>::disable() const [Data_T = CLElevationChangeEntry]",  "%s\n",  v4);
  }

  [*(id *)(*(void *)(a1 + 456) + 16) unregister:*(void *)(*(void *)(a1 + 456) + 8) forNotification:3];
  return 1LL;
}

void sub_10046E104(uint64_t a1, uint64_t a2, _DWORD *a3, __int128 *a4)
{
  if ((*a3 | 4) == 7) {
    sub_10046E214(a1, a4);
  }
}

void sub_10046E124(void *a1)
{
  uint64_t v1 = sub_10046DCE4(a1);
  operator delete(v1);
}

void *sub_10046E138(void *a1)
{
  uint64_t v2 = (void *)a1[11];
  if (v2)
  {
    a1[12] = v2;
    operator delete(v2);
  }

  return a1;
}

uint64_t sub_10046E180(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0LL;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 512LL;
  }

  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 1024LL;
  }

  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    unint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void sub_10046E214(uint64_t a1, __int128 *a2)
{
  if (sub_100B7CDD8(a1 + 8, a2, (uint64_t)v17))
  {
    uint64_t v3 = *(void *)(a1 + 440);
    if (v3) {
      (*(void (**)(uint64_t, _OWORD *))(*(void *)v3 + 48LL))(v3, v17);
    }
    uint64_t v4 = *(void *)(a1 + 312);
    if (!v4) {
      goto LABEL_18;
    }
    unint64_t v5 = v4 + *(void *)(a1 + 304) - 1;
    uint64_t v6 = *(void ***)(a1 + 280);
    double v7 = (*(double **)((char *)v6 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8LL)))[8 * (v5 & 0x3F) + 1];
    uint64_t v8 = *(void *)(a1 + 288);
    *(void *)(a1 + 312) = 0LL;
    unint64_t v9 = v8 - (void)v6;
    if (v9 >= 0x11)
    {
      do
      {
        operator delete(*v6);
        uint64_t v10 = *(void *)(a1 + 288);
        uint64_t v6 = (void **)(*(void *)(a1 + 280) + 8LL);
        *(void *)(a1 + 28sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v6;
        unint64_t v9 = v10 - (void)v6;
      }

      while (v9 > 0x10);
    }

    if (v9 >> 3 == 1)
    {
      uint64_t v11 = 32LL;
    }

    else
    {
      if (v9 >> 3 != 2)
      {
LABEL_13:
        if (qword_1019344B0 != -1) {
          dispatch_once(&qword_1019344B0, &stru_1018399D8);
        }
        uint64_t v12 = (os_log_s *)qword_1019344B8;
        if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)int32x2_t buf = 134218240;
          uint64_t v23 = *((void *)&v17[0] + 1);
          __int16 v24 = 2048;
          double v25 = v7;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  buf,  0x16u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019344B0 != -1) {
            dispatch_once(&qword_1019344B0, &stru_1018399D8);
          }
          int v18 = 134218240;
          uint64_t v19 = *((void *)&v17[0] + 1);
          __int16 v20 = 2048;
          double v21 = v7;
          LODWORD(v16) = 22;
          __int128 v15 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "time rollback on add, newItemTime, %f, lastItemTime, %f",  COERCE_DOUBLE(&v18),  v16);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLElevationChangeEntry>::add(const T &) [T = CLElevationChangeEntry]",  "%s\n",  v15);
        }

__n128 sub_10046E4C0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 8 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_10046E554(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) + ((v7 & 0x3F) << 6);
  __n128 result = *(__n128 *)a2;
  __int128 v10 = *(_OWORD *)(a2 + 16);
  __int128 v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v8 + 48) = v11;
  *(__n128 *)unint64_t v8 = result;
  *(_OWORD *)(v8 + 16) = v10;
  ++a1[5];
  return result;
}

void sub_10046E554(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x40;
  unint64_t v4 = v2 - 64;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int128 v34 = (char *)sub_1000071BC(v5, v33);
      __int128 v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      __int16 v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        uint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)uint64_t v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_10046E81C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10046E868(uint64_t result)
{
  if (*(double *)(result + 64) != -1.0)
  {
    uint64_t v1 = result;
    if (!*(_BYTE *)(result + 8))
    {
      __n128 result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
      if ((_DWORD)result)
      {
        *(_BYTE *)(v1 + 8) = 1;
      }

      else if (!*(_BYTE *)(v1 + 8))
      {
        double v2 = 2.22507386e-308;
        goto LABEL_7;
      }
    }

    double v2 = *(double *)(v1 + 64) + 30.0;
LABEL_7:
    *(double *)(v1 + 72) = v2;
  }

  return result;
}

void sub_10046E8E0(id a1)
{
  qword_101934758 = (uint64_t)os_log_create("com.apple.locationd.Motion", "IndoorOutdoor");
}

uint64_t sub_10046E90C(uint64_t a1, void *a2)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  unint64_t v3 = a2[4];
  uint64_t v4 = a2[1];
  if (a2[2] == v4)
  {
    uint64_t v5 = 0LL;
    unint64_t v8 = 0LL;
    unint64_t v7 = (void *)(v4 + 8 * ((a2[5] + v3) / 0x18));
  }

  else
  {
    uint64_t v5 = (__int128 *)(*(void *)(v4 + 8 * (v3 / 0x18)) + 168 * (v3 % 0x18));
    unint64_t v6 = a2[5] + v3;
    unint64_t v7 = (void *)(v4 + 8 * (v6 / 0x18));
    unint64_t v8 = (__int128 *)(*v7 + 168 * (v6 % 0x18));
  }

  sub_10046E9D0((void *)a1, (void *)(v4 + 8 * (v3 / 0x18)), v5, v7, v8);
  return a1;
}

void sub_10046E9BC(_Unwind_Exception *a1)
{
}

void *sub_10046E9D0(void *a1, void *a2, __int128 *a3, void *a4, __int128 *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0LL;
  }
  else {
    unint64_t v5 = 24 * (a4 - a2)
  }
  return sub_10046EA34(a1, a2, a3, v5);
}

void *sub_10046EA34(void *a1, void *a2, __int128 *a3, unint64_t a4)
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  if (v9 == v8) {
    uint64_t v10 = 0LL;
  }
  else {
    uint64_t v10 = 24 * ((v9 - v8) >> 3) - 1;
  }
  unint64_t v11 = a1[5] + a1[4];
  unint64_t v12 = v10 - v11;
  if (a4 > v12)
  {
    sub_10046EBD4(a1, a4 - v12);
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2];
    unint64_t v11 = a1[4] + a1[5];
  }

  uint64_t v13 = (void *)(v8 + 8 * (v11 / 0x18));
  if (v9 == v8) {
    unint64_t v14 = 0LL;
  }
  else {
    unint64_t v14 = *v13 + 168 * (v11 % 0x18);
  }
  __int128 v30 = (void *)(v8 + 8 * (v11 / 0x18));
  unint64_t v31 = v14;
  __n128 result = sub_10046F180(&v30, a4);
  uint64_t v16 = v31;
  if (v14 != v31)
  {
    uint64_t v17 = v30;
    do
    {
      if (v13 == v17) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = *v13 + 4032LL;
      }
      if (v14 == v18)
      {
        uint64_t v18 = v14;
      }

      else
      {
        unint64_t v19 = v14;
        do
        {
          __int128 v20 = *a3;
          __int128 v21 = a3[2];
          *(_OWORD *)(v19 + 16) = a3[1];
          *(_OWORD *)(v19 + 32) = v21;
          *(_OWORD *)unint64_t v19 = v20;
          __int128 v22 = a3[3];
          __int128 v23 = a3[4];
          __int128 v24 = a3[6];
          *(_OWORD *)(v19 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3[5];
          *(_OWORD *)(v19 + 96) = v24;
          *(_OWORD *)(v19 + 48) = v22;
          *(_OWORD *)(v19 + 64) = v23;
          __int128 v25 = a3[7];
          __int128 v26 = a3[8];
          __int128 v27 = a3[9];
          *(void *)(v19 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *((void *)a3 + 20);
          *(_OWORD *)(v19 + 128) = v26;
          *(_OWORD *)(v19 + 144) = v27;
          *(_OWORD *)(v19 + 112) = v25;
          a3 = (__int128 *)((char *)a3 + 168);
          if ((__int128 *)((char *)a3 - *a2) == (__int128 *)4032)
          {
            uint64_t v28 = (__int128 *)a2[1];
            ++a2;
            a3 = v28;
          }

          v19 += 168LL;
        }

        while (v19 != v18);
      }

      a1[5] -= 0x30C30C30C30C30C3LL * ((uint64_t)(v18 - v14) >> 3);
      if (v13 == v17) {
        break;
      }
      unint64_t v29 = v13[1];
      ++v13;
      unint64_t v14 = v29;
    }

    while (v29 != v16);
  }

  return result;
}

void sub_10046EBD4(void *a1, unint64_t a2)
{
  unint64_t v3 = (char *)a1[2];
  uint64_t v4 = (uint64_t)&v3[-a1[1]];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if (v5 % 0x18) {
    unint64_t v6 = v5 / 0x18 + 1;
  }
  else {
    unint64_t v6 = v5 / 0x18;
  }
  unint64_t v7 = a1[4];
  if (v6 >= v7 / 0x18) {
    unint64_t v8 = v7 / 0x18;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 / 0x18)
  {
    for (a1[4] = v7 - 24 * v8; v8; --v8)
    {
      uint64_t v16 = (void *)a1[1];
      uint64_t v19 = *v16;
      uint64_t v17 = (char *)(v16 + 1);
      uint64_t v18 = v19;
      a1[1] = v17;
      if (v3 == (char *)a1[3])
      {
        uint64_t v20 = (uint64_t)&v17[-*a1];
        if ((unint64_t)v17 <= *a1)
        {
          else {
            unint64_t v28 = (uint64_t)&v3[-*a1] >> 2;
          }
          unint64_t v29 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v28);
          unint64_t v31 = &v29[8 * (v28 >> 2)];
          __int128 v32 = (uint64_t *)a1[1];
          unint64_t v3 = v31;
          uint64_t v33 = a1[2] - (void)v32;
          if (v33)
          {
            unint64_t v3 = &v31[v33 & 0xFFFFFFFFFFFFFFF8LL];
            uint64_t v34 = 8 * (v33 >> 3);
            __int128 v35 = &v29[8 * (v28 >> 2)];
            do
            {
              uint64_t v36 = *v32++;
              *(void *)__int128 v35 = v36;
              v35 += 8;
              v34 -= 8LL;
            }

            while (v34);
          }

          uint64_t v37 = (char *)*a1;
          *a1 = v29;
          a1[1] = v31;
          a1[2] = v3;
          a1[3] = &v29[8 * v30];
          if (v37)
          {
            operator delete(v37);
            unint64_t v3 = (char *)a1[2];
          }
        }

        else
        {
          uint64_t v21 = v20 >> 3;
          BOOL v22 = v20 >> 3 < -1;
          uint64_t v23 = (v20 >> 3) + 2;
          if (v22) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = v21 + 1;
          }
          __int128 v25 = &v17[-8 * (v24 >> 1)];
          int64_t v26 = v3 - v17;
          if (v3 != v17)
          {
            memmove(&v17[-8 * (v24 >> 1)], v17, v3 - v17);
            unint64_t v3 = (char *)a1[1];
          }

          __int128 v27 = &v3[-8 * (v24 >> 1)];
          unint64_t v3 = &v25[v26];
          a1[1] = v27;
          a1[2] = &v25[v26];
        }
      }

      *(void *)unint64_t v3 = v18;
      unint64_t v3 = (char *)(a1[2] + 8LL);
      a1[2] = v3;
    }
  }

  else
  {
    unint64_t v9 = v6 - v8;
    uint64_t v10 = a1[3] - *a1;
    if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
    {
      if (v9)
      {
        while (a1[3] != a1[2])
        {
          __p[0] = operator new(0xFC0uLL);
          sub_1000EC960(a1, __p);
          --v6;
          if (!--v9) {
            goto LABEL_75;
          }
        }

        for (uint64_t i = 0LL; i != v9; ++i)
        {
          __p[0] = operator new(0xFC0uLL);
          sub_1000ECA74((uint64_t)a1, __p);
          if (a1[2] - a1[1] == 8LL) {
            uint64_t v64 = 23LL;
          }
          else {
            uint64_t v64 = 24LL;
          }
          uint64_t v65 = v64 + a1[4];
          a1[4] = v65;
        }

        unint64_t v8 = v6;
      }

      else
      {
LABEL_75:
        uint64_t v65 = a1[4];
      }

      a1[4] = v65 - 24 * v8;
      if (v8)
      {
        __int16 v66 = (char *)a1[2];
        do
        {
          __int128 v67 = (void *)a1[1];
          uint64_t v70 = *v67;
          __int16 v68 = (char *)(v67 + 1);
          uint64_t v69 = v70;
          a1[1] = v68;
          if (v66 == (char *)a1[3])
          {
            uint64_t v71 = (uint64_t)&v68[-*a1];
            if ((unint64_t)v68 <= *a1)
            {
              else {
                unint64_t v78 = (uint64_t)&v66[-*a1] >> 2;
              }
              __int128 v79 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v78);
              __int128 v81 = &v79[8 * (v78 >> 2)];
              __int128 v82 = (uint64_t *)a1[1];
              __int16 v66 = v81;
              uint64_t v83 = a1[2] - (void)v82;
              if (v83)
              {
                __int16 v66 = &v81[v83 & 0xFFFFFFFFFFFFFFF8LL];
                uint64_t v84 = 8 * (v83 >> 3);
                uint64_t v85 = &v79[8 * (v78 >> 2)];
                do
                {
                  uint64_t v86 = *v82++;
                  *(void *)uint64_t v85 = v86;
                  v85 += 8;
                  v84 -= 8LL;
                }

                while (v84);
              }

              char v87 = (char *)*a1;
              *a1 = v79;
              a1[1] = v81;
              a1[2] = v66;
              a1[3] = &v79[8 * v80];
              if (v87)
              {
                operator delete(v87);
                __int16 v66 = (char *)a1[2];
              }
            }

            else
            {
              uint64_t v72 = v71 >> 3;
              BOOL v22 = v71 >> 3 < -1;
              uint64_t v73 = (v71 >> 3) + 2;
              if (v22) {
                uint64_t v74 = v73;
              }
              else {
                uint64_t v74 = v72 + 1;
              }
              uint64_t v75 = &v68[-8 * (v74 >> 1)];
              int64_t v76 = v66 - v68;
              if (v66 != v68)
              {
                memmove(&v68[-8 * (v74 >> 1)], v68, v66 - v68);
                __int16 v66 = (char *)a1[1];
              }

              uint64_t v77 = &v66[-8 * (v74 >> 1)];
              __int16 v66 = &v75[v76];
              a1[1] = v77;
              a1[2] = &v75[v76];
            }
          }

          *(void *)__int16 v66 = v69;
          __int16 v66 = (char *)(a1[2] + 8LL);
          a1[2] = v66;
          --v8;
        }

        while (v8);
      }
    }

    else
    {
      uint64_t v11 = v4 >> 3;
      unint64_t v12 = v10 >> 2;
      if (v12 <= v9 + v11) {
        unint64_t v13 = v9 + v11;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v11 - v8;
      __int128 v91 = a1 + 3;
      if (v13) {
        uint64_t v15 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v13);
      }
      else {
        uint64_t v15 = 0LL;
      }
      uint64_t v38 = -24LL * v8;
      __p[0] = v15;
      __p[1] = &v15[8 * v14];
      *(void **)&__int128 v90 = __p[1];
      *((void *)&v90 + 1) = &v15[8 * v13];
      do
      {
        __int128 v88 = operator new(0xFC0uLL);
        sub_1000ECB90(__p, &v88);
        --v9;
      }

      while (v9);
      if (v8)
      {
        uint64_t v39 = (void *)a1[1];
        uint64_t v40 = (char *)v90;
        do
        {
          if (v40 == *((char **)&v90 + 1))
          {
            int64_t v41 = (char *)__p[1] - (char *)__p[0];
            if (__p[1] <= __p[0])
            {
              if (v40 == __p[0]) {
                unint64_t v48 = 1LL;
              }
              else {
                unint64_t v48 = (v40 - (char *)__p[0]) >> 2;
              }
              uint64_t v49 = (char *)sub_1000071BC((uint64_t)v91, v48);
              uint64_t v51 = (uint64_t *)__p[1];
              uint64_t v40 = &v49[8 * (v48 >> 2)];
              uint64_t v52 = v90 - (unint64_t)__p[1];
              if ((void *)v90 != __p[1])
              {
                uint64_t v40 = &v49[8 * (v48 >> 2) + (v52 & 0xFFFFFFFFFFFFFFF8LL)];
                uint64_t v53 = 8 * (v52 >> 3);
                __int128 v54 = &v49[8 * (v48 >> 2)];
                do
                {
                  uint64_t v55 = *v51++;
                  *(void *)__int128 v54 = v55;
                  v54 += 8;
                  v53 -= 8LL;
                }

                while (v53);
              }

              int v56 = __p[0];
              __p[0] = v49;
              __p[1] = &v49[8 * (v48 >> 2)];
              *(void *)&__int128 v90 = v40;
              *((void *)&v90 + 1) = &v49[8 * v50];
              if (v56)
              {
                operator delete(v56);
                uint64_t v40 = (char *)v90;
              }
            }

            else
            {
              uint64_t v42 = v41 >> 3;
              BOOL v22 = v41 >> 3 < -1;
              uint64_t v43 = (v41 >> 3) + 2;
              if (v22) {
                uint64_t v44 = v43;
              }
              else {
                uint64_t v44 = v42 + 1;
              }
              uint64_t v45 = (char *)__p[1] - 8 * (v44 >> 1);
              int64_t v46 = v40 - (char *)__p[1];
              if (v40 != __p[1])
              {
                memmove((char *)__p[1] - 8 * (v44 >> 1), __p[1], v40 - (char *)__p[1]);
                uint64_t v40 = (char *)__p[1];
              }

              uint64_t v47 = &v40[-8 * (v44 >> 1)];
              uint64_t v40 = &v45[v46];
              __p[1] = v47;
              *(void *)&__int128 v90 = &v45[v46];
            }
          }

          *(void *)uint64_t v40 = *v39;
          uint64_t v40 = (char *)(v90 + 8);
          *(void *)&__int128 v90 = v90 + 8;
          uint64_t v39 = (void *)(a1[1] + 8LL);
          a1[1] = v39;
          --v8;
        }

        while (v8);
      }

      BOOL v57 = (void *)a1[2];
      uint64_t v58 = -7LL - (void)v57;
      while (v57 != (void *)a1[1])
      {
        --v57;
        v58 += 8LL;
        sub_1000ECCA4((uint64_t)__p, v57);
      }

      int v59 = (char *)*a1;
      __int128 v60 = *(_OWORD *)__p;
      __int128 v61 = v90;
      __p[0] = *(void **)a1;
      __p[1] = v57;
      __int128 v62 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v60;
      *((_OWORD *)a1 + 1) = v61;
      __int128 v90 = v62;
      a1[4] += v38;
      if (v57 != (void *)v62) {
        *(void *)&__int128 v90 = v62 + (-(v62 + v58) & 0xFFFFFFFFFFFFFFF8LL);
      }
      if (v59) {
        operator delete(v59);
      }
    }
  }

void sub_10046F10C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10046F180(void *result, uint64_t a2)
{
  if (a2)
  {
    double v2 = (void *)*result;
    unint64_t v3 = a2 - 0x30C30C30C30C30C3LL * ((uint64_t)(result[1] - *(void *)*result) >> 3);
    if ((uint64_t)v3 < 1)
    {
      unint64_t v5 = 23 - v3;
      unint64_t v6 = &v2[-(v5 / 0x18)];
      void *result = v6;
      unint64_t v4 = *v6 + 168 * (24 * (v5 / 0x18) - v5) + 3864;
    }

    else
    {
      void *result = &v2[v3 / 0x18];
      unint64_t v4 = v2[v3 / 0x18] + 168 * (v3 % 0x18);
    }

    result[1] = v4;
  }

  return result;
}

void *sub_10046F224(void *a1, void *a2)
{
  if (a1 != a2)
  {
    unint64_t v3 = a2[4];
    uint64_t v4 = a2[1];
    if (a2[2] == v4)
    {
      unint64_t v5 = 0LL;
      unint64_t v8 = 0LL;
      unint64_t v7 = (char *)(v4 + 8 * ((a2[5] + v3) / 0x11));
    }

    else
    {
      unint64_t v5 = (_BYTE *)(*(void *)(v4 + 8 * (v3 / 0x11)) + 232 * (v3 % 0x11));
      unint64_t v6 = a2[5] + v3;
      unint64_t v7 = (char *)(v4 + 8 * (v6 / 0x11));
      unint64_t v8 = (_BYTE *)(*(void *)v7 + 232 * (v6 % 0x11));
    }

    sub_10046F2D8(a1, (char *)(v4 + 8 * (v3 / 0x11)), v5, v7, v8);
  }

  return a1;
}

void *sub_10046F2D8(void *a1, char *a2, _BYTE *a3, char *a4, _BYTE *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0LL;
  }
  else {
    unint64_t v5 = 2 * (a4 - a2)
  }
       + ((a4 - a2) >> 3)
  return sub_10046F338(a1, a2, a3, v5);
}

void *sub_10046F338(void *a1, char *a2, _BYTE *a3, unint64_t a4)
{
  unint64_t v8 = a1[5];
  if (v8 >= a4)
  {
    unint64_t v15 = a1[4];
    uint64_t v16 = a1[1];
    uint64_t v17 = (char *)(v16 + 8 * (v15 / 0x11));
    if (a1[2] == v16) {
      unint64_t v18 = 0LL;
    }
    else {
      unint64_t v18 = *(void *)v17 + 232 * (v15 % 0x11);
    }
    BOOL v22 = a2;
    uint64_t v23 = a3;
    sub_100414E10(&v22, a4);
    uint64_t v20 = v22;
    uint64_t v21 = v23;
    BOOL v22 = v17;
    uint64_t v23 = (_BYTE *)v18;
    sub_100415064(a2, a3, (_BYTE **)v20, v21, (uint64_t)&v22);
    return (void *)sub_10046F480((uint64_t)a1, v22, (uint64_t)v23);
  }

  else
  {
    BOOL v22 = a2;
    uint64_t v23 = a3;
    sub_100414E10(&v22, v8);
    unint64_t v9 = v22;
    uint64_t v10 = (__int128 *)v23;
    unint64_t v11 = a1[4];
    uint64_t v12 = a1[1];
    unint64_t v13 = (char *)(v12 + 8 * (v11 / 0x11));
    if (a1[2] == v12) {
      unint64_t v14 = 0LL;
    }
    else {
      unint64_t v14 = *(void *)v13 + 232 * (v11 % 0x11);
    }
    BOOL v22 = v13;
    uint64_t v23 = (_BYTE *)v14;
    sub_100415064(a2, a3, (_BYTE **)v9, v10, (uint64_t)&v22);
    return sub_10046A35C(a1, v9, v10, a4 - a1[5]);
  }

uint64_t sub_10046F480(uint64_t result, char *a2, uint64_t a3)
{
  unint64_t v3 = (void *)result;
  unint64_t v4 = *(void *)(result + 32);
  unint64_t v5 = v4 + *(void *)(result + 40);
  uint64_t v6 = *(void *)(result + 8);
  uint64_t v7 = *(void *)(result + 16);
  unint64_t v8 = (char *)(v6 + 8 * (v5 / 0x11));
  if (v7 == v6) {
    unint64_t v9 = 0LL;
  }
  else {
    unint64_t v9 = *(void *)v8 + 232 * (v5 % 0x11);
  }
  if (v9 != a3)
  {
    uint64_t v10 = 2 * (v8 - a2) + ((v8 - a2) >> 3) + 0x34F72C234F72C235LL * ((uint64_t)(v9 - *(void *)v8) >> 3);
    uint64_t v11 = (a3 - *(void *)a2) >> 3;
    uint64_t v12 = v10 - 0x34F72C234F72C235LL * v11;
    if (v12 >= 1)
    {
      unint64_t v13 = (char *)(v6 + 8 * (v4 / 0x11));
      if (v7 == v6) {
        unint64_t v14 = 0LL;
      }
      else {
        unint64_t v14 = *(void *)v13 + 232 * (v4 % 0x11);
      }
      if (a3 == v14) {
        uint64_t v15 = 0LL;
      }
      else {
        uint64_t v15 = 2 * (a2 - v13)
      }
            + ((a2 - v13) >> 3)
            + 0x34F72C234F72C235LL * v11
            - 0x34F72C234F72C235LL * ((uint64_t)(v14 - *(void *)v13) >> 3);
      v16[0] = v13;
      v16[1] = v14;
      sub_100414E10(v16, v15);
      v3[5] -= v12;
      do
        __n128 result = sub_100414DA0(v3, 1);
      while ((result & 1) != 0);
    }
  }

  return result;
}

uint64_t sub_10046F5F4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 16), *(void **)(a2 + 16), *(void *)(a2 + 24));
  }

  else
  {
    __int128 v4 = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = v4;
  }

  sub_10046A230(a1 + 40, (void *)(a2 + 40));
  return a1;
}

void sub_10046F664(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10046F680(void *a1, uint64_t a2)
{
  __int128 v4 = (void **)a1[1];
  uint64_t v5 = a1[2];
  a1[5] = 0LL;
  unint64_t v6 = v5 - (void)v4;
  if (v6 >= 0x11)
  {
    do
    {
      operator delete(*v4);
      uint64_t v7 = a1[2];
      __int128 v4 = (void **)(a1[1] + 8LL);
      a1[1] = v4;
      unint64_t v6 = v7 - (void)v4;
    }

    while (v6 > 0x10);
  }

  if (v6 >> 3 == 1)
  {
    uint64_t v8 = 8LL;
    goto LABEL_7;
  }

  if (v6 >> 3 == 2)
  {
    uint64_t v8 = 17LL;
LABEL_7:
    a1[4] = v8;
  }

  sub_10046F720(a1);
  uint64_t result = sub_10046F850((uint64_t)a1, a2);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = *(void *)(a2 + 40);
  *(void *)(a2 + 32) = 0LL;
  *(void *)(a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  return result;
}

void sub_10046F720(void *a1)
{
  if (a1[5])
  {
    sub_100414D44((uint64_t)a1, 0);
    sub_100414DA0(a1, 0);
  }

  else
  {
    uint64_t v3 = a1[1];
    for (uint64_t i = a1[2]; i != v3; a1[2] = i)
    {
      operator delete(*(void **)(i - 8));
      uint64_t v3 = a1[1];
      uint64_t i = a1[2] - 8LL;
    }

    a1[4] = 0LL;
  }

  sub_10046F790((uint64_t)a1);
}

void sub_10046F790(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v2 = a1 + 24;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = (v5 - v4) >> 3;
  if (v6 < (v3 - *(void *)a1) >> 3)
  {
    if (v5 == v4)
    {
      uint64_t v10 = 0LL;
      uint64_t v7 = 0LL;
    }

    else
    {
      uint64_t v7 = (char *)sub_1000071BC(v2, v6);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v10 = &v7[8 * v9];
      uint64_t v11 = v5 - v8;
      if (v5 != v8)
      {
        uint64_t v12 = 0LL;
        uint64_t v13 = 8 * (v11 >> 3);
        do
        {
          *(void *)&v7[v12] = *(void *)(v8 + v12);
          v12 += 8LL;
        }

        while (v13 != v12);
        uint64_t v5 = *(void *)(a1 + 8);
        uint64_t v14 = *(void *)(a1 + 16);
        goto LABEL_9;
      }
    }

    uint64_t v14 = v5;
LABEL_9:
    uint64_t v15 = v14 - v5;
    uint64_t v16 = *(void **)a1;
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = &v7[v15];
    *(void *)(a1 + 24) = v10;
    if (v16) {
      operator delete(v16);
    }
  }

uint64_t sub_10046F850(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 != v5) {
    *(void *)(a1 + 16) = v4 + ((v5 - v4 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  }
  sub_10046F790(a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return a1;
}

void *sub_10046F8BC(void *a1, void *a2)
{
  if (a1 != a2)
  {
    unint64_t v3 = a2[4];
    uint64_t v4 = a2[1];
    if (a2[2] == v4)
    {
      uint64_t v5 = 0LL;
      uint64_t v8 = 0LL;
      uint64_t v7 = (void *)(v4 + 8 * ((a2[5] + v3) / 0x18));
    }

    else
    {
      uint64_t v5 = (_BYTE *)(*(void *)(v4 + 8 * (v3 / 0x18)) + 168 * (v3 % 0x18));
      unint64_t v6 = a2[5] + v3;
      uint64_t v7 = (void *)(v4 + 8 * (v6 / 0x18));
      uint64_t v8 = (_BYTE *)(*v7 + 168 * (v6 % 0x18));
    }

    sub_10046F968(a1, (void *)(v4 + 8 * (v3 / 0x18)), v5, v7, v8);
  }

  return a1;
}

void *sub_10046F968(void *a1, void *a2, _BYTE *a3, void *a4, _BYTE *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0LL;
  }
  else {
    unint64_t v5 = 24 * (a4 - a2)
  }
  return sub_10046F9CC(a1, a2, a3, v5);
}

void *sub_10046F9CC(void *a1, void *a2, _BYTE *a3, unint64_t a4)
{
  unint64_t v8 = a1[5];
  if (v8 >= a4)
  {
    unint64_t v15 = a1[4];
    uint64_t v16 = a1[1];
    uint64_t v17 = (void *)(v16 + 8 * (v15 / 0x18));
    if (a1[2] == v16) {
      unint64_t v18 = 0LL;
    }
    else {
      unint64_t v18 = *v17 + 168 * (v15 % 0x18);
    }
    BOOL v22 = a2;
    uint64_t v23 = a3;
    sub_10046F180(&v22, a4);
    uint64_t v20 = (_BYTE **)v22;
    uint64_t v21 = v23;
    BOOL v22 = v17;
    uint64_t v23 = (_BYTE *)v18;
    sub_10046FC90(a2, a3, v20, v21, (uint64_t)&v22);
    return (void *)sub_10046FB14((uint64_t)a1, v22, (uint64_t)v23);
  }

  else
  {
    BOOL v22 = a2;
    uint64_t v23 = a3;
    sub_10046F180(&v22, v8);
    uint64_t v9 = (_BYTE **)v22;
    uint64_t v10 = (__int128 *)v23;
    unint64_t v11 = a1[4];
    uint64_t v12 = a1[1];
    uint64_t v13 = (void *)(v12 + 8 * (v11 / 0x18));
    if (a1[2] == v12) {
      unint64_t v14 = 0LL;
    }
    else {
      unint64_t v14 = *v13 + 168 * (v11 % 0x18);
    }
    BOOL v22 = v13;
    uint64_t v23 = (_BYTE *)v14;
    sub_10046FC90(a2, a3, v9, v10, (uint64_t)&v22);
    return sub_10046EA34(a1, v9, v10, a4 - a1[5]);
  }

uint64_t sub_10046FB14(uint64_t result, void *a2, uint64_t a3)
{
  unint64_t v3 = (void *)result;
  unint64_t v4 = *(void *)(result + 32);
  unint64_t v5 = v4 + *(void *)(result + 40);
  uint64_t v6 = *(void *)(result + 8);
  uint64_t v7 = *(void *)(result + 16);
  unint64_t v8 = (void *)(v6 + 8 * (v5 / 0x18));
  if (v7 == v6) {
    unint64_t v9 = 0LL;
  }
  else {
    unint64_t v9 = *v8 + 168 * (v5 % 0x18);
  }
  if (v9 != a3)
  {
    uint64_t v10 = 24 * (v8 - a2) - 0x30C30C30C30C30C3LL * ((uint64_t)(v9 - *v8) >> 3);
    uint64_t v11 = (a3 - *a2) >> 3;
    uint64_t v12 = v10 + 0x30C30C30C30C30C3LL * v11;
    if (v12 >= 1)
    {
      uint64_t v13 = (void *)(v6 + 8 * (v4 / 0x18));
      if (v7 == v6) {
        unint64_t v14 = 0LL;
      }
      else {
        unint64_t v14 = *v13 + 168 * (v4 % 0x18);
      }
      if (a3 == v14) {
        uint64_t v15 = 0LL;
      }
      else {
        uint64_t v15 = 24 * (a2 - v13) - 0x30C30C30C30C30C3LL * v11 + 0x30C30C30C30C30C3LL * ((uint64_t)(v14 - *v13) >> 3);
      }
      v16[0] = v13;
      v16[1] = v14;
      sub_10046F180(v16, v15);
      v3[5] -= v12;
      do
        uint64_t result = sub_10046FE0C(v3, 1);
      while ((result & 1) != 0);
    }
  }

  return result;
}

double sub_10046FC90(void *a1, _BYTE *a2, _BYTE **a3, _BYTE *a4, uint64_t a5)
{
  uint64_t v7 = *(void ***)a5;
  unint64_t v8 = *(char **)(a5 + 8);
  if (a1 != a3)
  {
    uint64_t v10 = a1 + 1;
    for (uint64_t i = (_BYTE *)(*a1 + 4032LL); ; uint64_t i = v12 + 4032)
    {
      sub_10046FD20(a2, v8, i, v7, &v14);
      unint64_t v8 = (char *)*((void *)&v15 + 1);
      uint64_t v7 = (void **)v15;
      *(void *)a5 = v15;
      *(void *)(a5 + 8) = v8;
      if (v10 == a3) {
        break;
      }
      uint64_t v12 = (_BYTE *)*v10++;
      a2 = v12;
    }

    a2 = *a3;
  }

  sub_10046FD20(a2, v8, a4, v7, &v14);
  double result = *(double *)&v15;
  *(_OWORD *)a5 = v15;
  return result;
}

void *sub_10046FD20@<X0>( _BYTE *__src@<X1>, char *__dst@<X4>, _BYTE *a3@<X2>, void **a4@<X3>, void *a5@<X8>)
{
  uint64_t v6 = a4;
  uint64_t v7 = __src;
  if (__src == a3)
  {
    unint64_t v9 = __src;
  }

  else
  {
    unint64_t v9 = a3;
    uint64_t v6 = a4 + 1;
    uint64_t v10 = (char *)*a4;
    while (1)
    {
      int64_t v11 = 0xCF3CF3CF3CF3CF3DLL * ((v10 - __dst + 4032) >> 3);
      unint64_t v12 = (uint64_t)(0xCF3CF3CF3CF3CF3DLL * ((v9 - v7) >> 3)) >= v11 ? v11 : 0xCF3CF3CF3CF3CF3DLL * ((v9 - v7) >> 3);
      if (v12) {
        double result = memmove(__dst, v7, 168 * v12);
      }
      v7 += 168 * v12;
      if (v7 == v9) {
        break;
      }
      uint64_t v14 = (char *)*v6++;
      uint64_t v10 = v14;
      __uuid_t dst = v14;
    }

    __dst += 168 * v12;
    else {
      --v6;
    }
  }

  *a5 = v9;
  a5[1] = v6;
  a5[2] = __dst;
  return result;
}

uint64_t sub_10046FE0C(void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0LL;
  }
  else {
    uint64_t v4 = 24 * ((v2 - v3) >> 3) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x18) {
    a2 = 1;
  }
  if (v5 < 0x30) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8LL;
  }

  return v7 ^ 1u;
}

uint64_t sub_10046FE80(void *a1, uint64_t a2)
{
  uint64_t v4 = (void **)a1[1];
  uint64_t v5 = a1[2];
  a1[5] = 0LL;
  unint64_t v6 = v5 - (void)v4;
  if (v6 >= 0x11)
  {
    do
    {
      operator delete(*v4);
      uint64_t v7 = a1[2];
      uint64_t v4 = (void **)(a1[1] + 8LL);
      a1[1] = v4;
      unint64_t v6 = v7 - (void)v4;
    }

    while (v6 > 0x10);
  }

  if (v6 >> 3 == 1)
  {
    uint64_t v8 = 12LL;
    goto LABEL_7;
  }

  if (v6 >> 3 == 2)
  {
    uint64_t v8 = 24LL;
LABEL_7:
    a1[4] = v8;
  }

  sub_10046FF20(a1);
  uint64_t result = sub_1004700AC((uint64_t)a1, a2);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = *(void *)(a2 + 40);
  *(void *)(a2 + 32) = 0LL;
  *(void *)(a2 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  return result;
}

void sub_10046FF20(void *a1)
{
  if (a1[5])
  {
    sub_10046FF90((uint64_t)a1, 0);
    sub_10046FE0C(a1, 0);
  }

  else
  {
    uint64_t v3 = a1[1];
    for (uint64_t i = a1[2]; i != v3; a1[2] = i)
    {
      operator delete(*(void **)(i - 8));
      uint64_t v3 = a1[1];
      uint64_t i = a1[2] - 8LL;
    }

    a1[4] = 0LL;
  }

  sub_10046FFEC((uint64_t)a1);
}

uint64_t sub_10046FF90(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x18) {
    a2 = 1;
  }
  if (v2 < 0x30) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8LL;
    *(void *)(a1 + 32) -= 24LL;
  }

  return v4 ^ 1u;
}

void sub_10046FFEC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v2 = a1 + 24;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = (v5 - v4) >> 3;
  if (v6 < (v3 - *(void *)a1) >> 3)
  {
    if (v5 == v4)
    {
      uint64_t v10 = 0LL;
      uint64_t v7 = 0LL;
    }

    else
    {
      uint64_t v7 = (char *)sub_1000071BC(v2, v6);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v10 = &v7[8 * v9];
      uint64_t v11 = v5 - v8;
      if (v5 != v8)
      {
        uint64_t v12 = 0LL;
        uint64_t v13 = 8 * (v11 >> 3);
        do
        {
          *(void *)&v7[v12] = *(void *)(v8 + v12);
          v12 += 8LL;
        }

        while (v13 != v12);
        uint64_t v5 = *(void *)(a1 + 8);
        uint64_t v14 = *(void *)(a1 + 16);
        goto LABEL_9;
      }
    }

    uint64_t v14 = v5;
LABEL_9:
    uint64_t v15 = v14 - v5;
    uint64_t v16 = *(void **)a1;
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = &v7[v15];
    *(void *)(a1 + 24) = v10;
    if (v16) {
      operator delete(v16);
    }
  }

uint64_t sub_1004700AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 != v5) {
    *(void *)(a1 + 16) = v4 + ((v5 - v4 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  }
  sub_10046FFEC(a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return a1;
}

void sub_100470118(id a1)
{
  qword_101934948 = (uint64_t)os_log_create("com.apple.locationd.Position", "Outdoor");
}

void *sub_100470144(void *a1, uint64_t a2)
{
  uint64_t v3 = v7;
  if (v7 == v6)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v6;
    goto LABEL_5;
  }

  if (v7)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return a1;
}

void *sub_1004701DC(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24LL))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32LL))(v3[3]);
        void v3[3] = 0LL;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24LL))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32LL))(a2[3]);
        a2[3] = 0LL;
        void v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24LL))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32LL))(v6);
      }

      else
      {
        (*(void (**)(void *, void *))(*result + 24LL))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32LL))(v3[3]);
        void v3[3] = a2[3];
      }

      a2[3] = a2;
    }

    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24LL))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32LL))(a2[3]);
      a2[3] = v3[3];
      void v3[3] = v3;
    }

    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }

  return result;
}

void sub_100470344(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100006BB8(a1);
}

uint64_t sub_100470350@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 40);
  *a2 = *(void *)(result + 32);
  a2[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unint64_t *)(v2 + 8);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t sub_100470374(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(result + 32) = *(void *)(a2 + 32);
  *(void *)(result + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v2;
  if (v2)
  {
    uint64_t v3 = (unint64_t *)(v2 + 8);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t sub_100470398(uint64_t a1)
{
  return sub_10000AE14(a1 + 32);
}

uint64_t sub_1004703A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  **(_DWORD **)a1 = *(_DWORD *)a2;
  __int128 v4 = *(_OWORD *)(a2 + 72);
  __int128 v5 = *(_OWORD *)(a2 + 104);
  __int128 v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v3 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 48) = v6;
  *(_OWORD *)(v3 + 64) = v4;
  __int128 v7 = *(_OWORD *)(a2 + 136);
  __int128 v8 = *(_OWORD *)(a2 + 152);
  __int128 v9 = *(_OWORD *)(a2 + 120);
  *(void *)(v3 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 168);
  *(_OWORD *)(v3 + 128) = v7;
  *(_OWORD *)(v3 + 144) = v8;
  *(_OWORD *)(v3 + 112) = v9;
  __int128 v10 = *(_OWORD *)(a2 + 8);
  __int128 v11 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 32) = v11;
  *(_OWORD *)uint64_t v3 = v10;
  uint64_t v12 = *(void *)(a1 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + 176);
  uint64_t v13 = (void **)(v12 + 16);
  __int128 v14 = *(_OWORD *)(a2 + 192);
  *(void *)(v12 + 32) = *(void *)(a2 + 208);
  *(_OWORD *)uint64_t v13 = v14;
  *(_BYTE *)(a2 + 215) = 0;
  *(_BYTE *)(a2 + 192) = 0;
  return sub_10046F680((void *)(v12 + 40), a2 + 216);
}

uint64_t sub_100470458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 32);
  __int128 v4 = (_BYTE *)(a2 + 16);
  if (*(char *)(a1 + 71) < 0)
  {
    sub_1010DD48C(v4, *(void **)(a1 + 48), *(void *)(a1 + 56));
  }

  else
  {
    *(_OWORD *)__int128 v4 = *(_OWORD *)(a1 + 48);
    *(void *)(a2 + 32) = *(void *)(a1 + 64);
  }

  return sub_10046A230(a2 + 40, (void *)(a1 + 72));
}

void sub_1004704C4(_Unwind_Exception *exception_object)
{
}

uint64_t sub_1004704E0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  if (*(char *)(a2 + 71) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 48), *(void **)(a2 + 48), *(void *)(a2 + 56));
  }

  else
  {
    __int128 v4 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = v4;
  }

  return sub_10046A230(a1 + 72, (void *)(a2 + 72));
}

void sub_10047054C(_Unwind_Exception *exception_object)
{
}

void sub_100470568(uint64_t a1)
{
}

void *sub_1004705A4(void *a1, void *a2)
{
  *a1 = off_101839AA0;
  sub_100470B44(a1 + 1, a2, 10.0, 300.0);
  sub_100471434(a1 + 59, a2, 10.0, 300.0);
  BOOL v57 = 0LL;
  sub_100471684(a1 + 85, (uint64_t)v56, 10.0, 300.0);
  __int128 v4 = v57;
  if (v57 == v56)
  {
    uint64_t v5 = 4LL;
    __int128 v4 = v56;
  }

  else
  {
    if (!v57) {
      goto LABEL_6;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  sub_100471828(a1 + 129, a2, 10.0, 300.0);
  sub_100471A9C(a1 + 169, a2, 10.0, 300.0);
  uint64_t v55 = 0LL;
  sub_100471EA8(a1 + 227, (uint64_t)v54, 10.0, 300.0);
  __int128 v9 = v55;
  if (v55 == v54)
  {
    uint64_t v10 = 4LL;
    __int128 v9 = v54;
  }

  else
  {
    if (!v55) {
      goto LABEL_11;
    }
    uint64_t v10 = 5LL;
  }

  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*v9 + 8 * v10))(v9, v6, v7, v8);
LABEL_11:
  uint64_t v53 = 0LL;
  sub_100472030((uint64_t)(a1 + 256), (uint64_t)v52, 10.0, 300.0);
  __int128 v14 = v53;
  if (v53 == v52)
  {
    uint64_t v15 = 4LL;
    __int128 v14 = v52;
  }

  else
  {
    if (!v53) {
      goto LABEL_16;
    }
    uint64_t v15 = 5LL;
  }

  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*v14 + 8 * v15))(v14, v11, v12, v13);
LABEL_16:
  uint64_t v51 = 0LL;
  sub_1004720B4(a1 + 277, (uint64_t)v50, 15.0, 300.0);
  uint64_t v19 = v51;
  if (v51 == v50)
  {
    uint64_t v20 = 4LL;
    uint64_t v19 = v50;
  }

  else
  {
    if (!v51) {
      goto LABEL_21;
    }
    uint64_t v20 = 5LL;
  }

  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*v19 + 8 * v20))(v19, v16, v17, v18);
LABEL_21:
  sub_10047224C(a1 + 306, a2, 10.0, 300.0);
  uint64_t v49 = 0LL;
  sub_100472498((uint64_t)(a1 + 343), (uint64_t)v48, 10.0, 300.0);
  uint64_t v24 = v49;
  if (v49 == v48)
  {
    uint64_t v25 = 4LL;
    uint64_t v24 = v48;
  }

  else
  {
    if (!v49) {
      goto LABEL_26;
    }
    uint64_t v25 = 5LL;
  }

  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*v24 + 8 * v25))(v24, v21, v22, v23);
LABEL_26:
  uint64_t v47 = 0LL;
  sub_100472518((uint64_t)(a1 + 361), (uint64_t)v46, 210.0, 780.0);
  unint64_t v29 = v47;
  if (v47 == v46)
  {
    uint64_t v30 = 4LL;
    unint64_t v29 = v46;
  }

  else
  {
    if (!v47) {
      goto LABEL_31;
    }
    uint64_t v30 = 5LL;
  }

  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*v29 + 8 * v30))(v29, v26, v27, v28);
LABEL_31:
  uint64_t v45 = 0LL;
  sub_100472594(a1 + 380, (uint64_t)v44, 15.0, 300.0);
  uint64_t v34 = v45;
  if (v45 == v44)
  {
    uint64_t v35 = 4LL;
    uint64_t v34 = v44;
  }

  else
  {
    if (!v45) {
      goto LABEL_36;
    }
    uint64_t v35 = 5LL;
  }

  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*v34 + 8 * v35))(v34, v31, v32, v33);
LABEL_36:
  uint64_t v43 = 0LL;
  sub_100472718(a1 + 402, (uint64_t)v42, 15.0, 300.0);
  uint64_t v39 = v43;
  if (v43 == v42)
  {
    uint64_t v40 = 4LL;
    uint64_t v39 = v42;
    goto LABEL_40;
  }

  if (v43)
  {
    uint64_t v40 = 5LL;
LABEL_40:
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*v39 + 8 * v40))(v39, v36, v37, v38);
  }

  return a1;
}

void sub_100470920( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, char a13, uint64_t a14, uint64_t a15, char *a16)
{
  uint64_t v26 = a16;
  if (a16 == v20)
  {
    uint64_t v27 = 4LL;
    uint64_t v26 = &a13;
  }

  else
  {
    if (!a16) {
      goto LABEL_6;
    }
    uint64_t v27 = 5LL;
  }

  (*(void (**)(void))(*(void *)v26 + 8 * v27))();
LABEL_6:
  sub_10046B1A0(v19);
  sub_10046B324(v18);
  sub_10046B3A0(v17);
  sub_10046AEE8(v24);
  sub_10046BBA4(v23);
  sub_10046BD28(v22);
  sub_10046BDA4(v21);
  sub_10046BE98(a9);
  sub_10046AF40(a10);
  sub_10046D194(a11);
  sub_10046AF8C(a12);
  sub_10046DADC(v16);
  _Unwind_Resume(a1);
}

void sub_100470A5C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29, uint64_t a30, uint64_t a31, char *a32)
{
  uint64_t v33 = a32;
  if (a32 == v32)
  {
    uint64_t v34 = 4LL;
    uint64_t v33 = &a29;
  }

  else
  {
    if (!a32) {
      goto LABEL_6;
    }
    uint64_t v34 = 5LL;
  }

  (*(void (**)(void))(*(void *)v33 + 8 * v34))();
LABEL_6:
  JUMPOUT(0x100470A1CLL);
}

void sub_100470A90( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33, uint64_t a34, uint64_t a35, char *a36)
{
  uint64_t v37 = a36;
  if (a36 == v36)
  {
    uint64_t v38 = 4LL;
    uint64_t v37 = &a33;
  }

  else
  {
    if (!a36) {
      goto LABEL_6;
    }
    uint64_t v38 = 5LL;
  }

  (*(void (**)(void))(*(void *)v37 + 8 * v38))();
LABEL_6:
  JUMPOUT(0x100470A24LL);
}

void sub_100470AC4()
{
  uint64_t v2 = *(void **)(v1 - 152);
  if (v2 == v0)
  {
    uint64_t v3 = 4LL;
    uint64_t v2 = (void *)(v1 - 176);
  }

  else
  {
    if (!v2) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x100470A2CLL);
}

void sub_100470AF8()
{
}

void sub_100470B00()
{
}

void sub_100470B08()
{
  uint64_t v2 = *(void **)(v1 - 120);
  if (v2 == v0)
  {
    uint64_t v3 = 4LL;
    uint64_t v2 = (void *)(v1 - 144);
  }

  else
  {
    if (!v2) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x100470A44LL);
}

void sub_100470B3C()
{
}

void *sub_100470B44(void *a1, void *a2, double a3, double a4)
{
  uint64_t v18 = 0LL;
  sub_100470E34((uint64_t)a1, (uint64_t)v17, a3, a4);
  uint64_t v6 = v18;
  if (v18 == v17)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = v17;
    goto LABEL_5;
  }

  if (v18)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_10183A288;
  a1[56] = [a2 silo];
  a1[57] = 0LL;
  sub_10027EB5C((uint64_t)sub_100470EF8, (uint64_t)a1, a2, buf);
  uint64_t v8 = *(void *)buf;
  *(void *)int32x2_t buf = 0LL;
  uint64_t v9 = a1[57];
  a1[57] = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    uint64_t v10 = *(void *)buf;
    *(void *)int32x2_t buf = 0LL;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
  }

  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v11 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    *(void *)&uint8_t buf[4] = "Elevation";
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "enable message src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v14 = 136315138;
    uint64_t v15 = "Elevation";
    uint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "enable message src %s",  (const char *)&v14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSourceFromNotifier<CLElevationChangeEntry>::CLSourceFromNotifier(id<CLIntersiloUniverse>, CFTimeInterval, CFTime Interval) [Data_T = CLElevationChangeEntry]",  "%s\n",  v13);
  }

  [*(id *)(a1[57] + 16) register:*(void *)(a1[57] + 8) forNotification:7 registrationInfo:0];
  return a1;
}

void sub_100470DC0(_Unwind_Exception *a1)
{
  uint64_t v3 = v1[57];
  v1[57] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10046DCE4(v1);
  _Unwind_Resume(a1);
}

void sub_100470E00()
{
  uint64_t v2 = *(void **)(v1 - 64);
  if (v2 == v0)
  {
    uint64_t v3 = 4LL;
    uint64_t v2 = (void *)(v1 - 88);
  }

  else
  {
    if (!v2) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x100470DF8LL);
}

uint64_t sub_100470E34(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = &off_10183A310;
  *(_BYTE *)(a1 + 264) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 32sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = xmmword_1012EB270;
  *(double *)(a1 + 336) = a3;
  *(double *)(a1 + 344) = a4;
  *(_OWORD *)(a1 + 352) = xmmword_1012EA5D0;
  *(void *)(a1 + 368) = 0LL;
  *(_DWORD *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = 0LL;
  *(void *)(a1 + 392) = 0LL;
  *(void *)(a1 + 397) = 0LL;
  *(void *)(a1 + 406) = 0LL;
  sub_10001A504(a1 + 416, a2);
  return a1;
}

void sub_100470EDC(_Unwind_Exception *a1)
{
}

uint64_t sub_100470EF8(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  return (*((uint64_t (**)(id *, uint64_t, uint64_t, uint64_t))*a4 + 4))(a4, a1, a2, a3);
}

uint64_t sub_100470F48(uint64_t a1)
{
  *(_OWORD *)a1 = xmmword_1012EBF00;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)algn_1012EBF10;
  *(_OWORD *)(a1 + 32) = xmmword_1012EBF20;
  *(_OWORD *)(a1 + 48) = unk_1012EBF30;
  *(void *)(a1 + 64) = 0LL;
  *(_DWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 76) = 0;
  *(void *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0xBFF0000000000000LL;
  *(void *)(a1 + 88) = 0LL;
  uint64_t v2 = (void *)(a1 + 88);
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 104) = 0LL;
  uint64_t v3 = operator new(8uLL);
  *uint64_t v2 = v3;
  *uint64_t v3 = 0LL;
  *(void *)(a1 + 96) = v3 + 1;
  *(void *)(a1 + 104) = v3 + 1;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 24sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  for (int i = 119; i != -1; --i)
  {
    float v5 = pow(0.98, (double)i);
    float v9 = v5;
    sub_10047109C((void *)(a1 + 112), &v9);
  }

  int v8 = 0;
  sub_10047109C((void *)(a1 + 160), (float *)&v8);
  int v7 = 0;
  sub_10047109C((void *)(a1 + 208), (float *)&v7);
  *(void *)(a1 + 8) = 0xBFF0000000000000LL;
  return a1;
}

void sub_100471060(_Unwind_Exception *a1)
{
  int v7 = *v5;
  if (*v5)
  {
    *(void *)(v1 + 96) = v7;
    operator delete(v7);
  }

  _Unwind_Resume(a1);
}

float sub_10047109C(void *a1, float *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 7) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    sub_100471120(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }

  float result = *a2;
  *(float *)(*(void *)(v5 + ((v8 >> 7) & 0x1FFFFFFFFFFFFF8LL)) + 4 * (v8 & 0x3FF)) = *a2;
  a1[5] = v7 + 1;
  return result;
}

void sub_100471120(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x400;
  unint64_t v4 = v2 - 1024;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    float v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        int64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)int64_t v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_1004713E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_100471434(void *a1, void *a2, double a3, double a4)
{
  BOOL v14 = 0LL;
  sub_1004715A4((uint64_t)a1, (uint64_t)v13, a3, a4);
  uint64_t v6 = v14;
  if (v14 == v13)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = v13;
    goto LABEL_5;
  }

  if (v14)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_10183A1E0;
  a1[24] = [a2 silo];
  a1[25] = 0LL;
  sub_10070EDF0((uint64_t)sub_100471634, (uint64_t)a1, a2, &v12);
  uint64_t v8 = v12;
  uint64_t v12 = 0LL;
  uint64_t v9 = a1[25];
  a1[25] = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    uint64_t v10 = v12;
    uint64_t v12 = 0LL;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
  }

  return a1;
}

void sub_10047153C(_Unwind_Exception *a1)
{
  uint64_t v3 = v1[25];
  v1[25] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10046D3AC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1004715A4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_10183A258;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(_BYTE *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  *(_OWORD *)(a1 + 128) = xmmword_1012EA5D0;
  *(void *)(a1 + 144) = 0LL;
  *(_DWORD *)(a1 + 152) = 0;
  sub_10001A504(a1 + 160, a2);
  return a1;
}

void sub_100471620(_Unwind_Exception *a1)
{
}

uint64_t sub_100471634(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  return (*((uint64_t (**)(id *, uint64_t, uint64_t, uint64_t))*a4 + 4))(a4, a1, a2, a3);
}

void *sub_100471684(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v10 = 0LL;
  sub_100471784((uint64_t)a1, (uint64_t)v9, a3, a4);
  uint64_t v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_10183A140;
  sub_10001A504((uint64_t)(a1 + 40), a2);
  return a1;
}

void sub_10047173C(_Unwind_Exception *a1)
{
}

uint64_t sub_100471784(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_10183A1B0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 272) = 0;
  *(void *)(a1 + 28sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_DWORD *)(a1 + 184) = 0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 24sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 249) = 0u;
  sub_10001A504(a1 + 288, a2);
  return a1;
}

void sub_100471814(_Unwind_Exception *a1)
{
}

void *sub_100471828(void *a1, void *a2, double a3, double a4)
{
  BOOL v14 = 0LL;
  sub_100471998((uint64_t)a1, (uint64_t)v13, a3, a4);
  uint64_t v6 = v14;
  if (v14 == v13)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = v13;
    goto LABEL_5;
  }

  if (v14)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_10183A098;
  a1[38] = [a2 silo];
  a1[39] = 0LL;
  sub_101037234((uint64_t)sub_100471A4C, (uint64_t)a1, a2, &v12);
  uint64_t v8 = v12;
  uint64_t v12 = 0LL;
  uint64_t v9 = a1[39];
  a1[39] = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    uint64_t v10 = v12;
    uint64_t v12 = 0LL;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
  }

  return a1;
}

void sub_100471930(_Unwind_Exception *a1)
{
  uint64_t v3 = v1[39];
  v1[39] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10046C57C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100471998(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_10183A110;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(_OWORD *)(a1 + 96) = xmmword_1012EA5D0;
  *(void *)(a1 + 112) = 0LL;
  *(_DWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  *(void *)(a1 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(_WORD *)(a1 + 208) = 0;
  *(_DWORD *)(a1 + 264) = 0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_DWORD *)(a1 + 192) = 0;
  *(_BYTE *)(a1 + 248) = 0;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_DWORD *)(a1 + 259) = 0;
  *(void *)(a1 + 252) = 0LL;
  sub_10001A504(a1 + 272, a2);
  return a1;
}

void sub_100471A38(_Unwind_Exception *a1)
{
}

uint64_t sub_100471A4C(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  return (*((uint64_t (**)(id *, uint64_t, uint64_t, uint64_t))*a4 + 4))(a4, a1, a2, a3);
}

void *sub_100471A9C(void *a1, void *a2, double a3, double a4)
{
  uint64_t v18 = 0LL;
  sub_100471D8C((uint64_t)a1, (uint64_t)v17, a3, a4);
  uint64_t v6 = v18;
  if (v18 == v17)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = v17;
    goto LABEL_5;
  }

  if (v18)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_101839FF0;
  a1[56] = [a2 silo];
  a1[57] = 0LL;
  sub_101037234((uint64_t)sub_100471E58, (uint64_t)a1, a2, buf);
  uint64_t v8 = *(void *)buf;
  *(void *)int32x2_t buf = 0LL;
  uint64_t v9 = a1[57];
  a1[57] = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    uint64_t v10 = *(void *)buf;
    *(void *)int32x2_t buf = 0LL;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
  }

  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_1018399F8);
  }
  uint64_t v11 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    *(void *)&uint8_t buf[4] = "ExtendedStepCount";
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "enable message src %s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_1018399F8);
    }
    int v14 = 136315138;
    uint64_t v15 = "ExtendedStepCount";
    uint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "enable message src %s",  (const char *)&v14);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLSourceFromNotifier<CLExtendedStepCountEntry>::CLSourceFromNotifier(id<CLIntersiloUniverse>, CFTimeInterval, CFTi meInterval) [Data_T = CLExtendedStepCountEntry]",  "%s\n",  v13);
  }

  [*(id *)(a1[57] + 16) register:*(void *)(a1[57] + 8) forNotification:1 registrationInfo:0];
  return a1;
}

void sub_100471D18(_Unwind_Exception *a1)
{
  uint64_t v3 = v1[57];
  v1[57] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10046C0A0(v1);
  _Unwind_Resume(a1);
}

void sub_100471D58()
{
  unint64_t v2 = *(void **)(v1 - 64);
  if (v2 == v0)
  {
    uint64_t v3 = 4LL;
    unint64_t v2 = (void *)(v1 - 88);
  }

  else
  {
    if (!v2) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x100471D50LL);
}

uint64_t sub_100471D8C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_10183A068;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 408) = 0LL;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 28sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 36sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  sub_10001A504(a1 + 416, a2);
  return a1;
}

void sub_100471E44(_Unwind_Exception *a1)
{
}

uint64_t sub_100471E58(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  return (*((uint64_t (**)(id *, uint64_t, uint64_t, uint64_t))*a4 + 4))(a4, a1, a2, a3);
}

void *sub_100471EA8(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v10 = 0LL;
  sub_100471FA8((uint64_t)a1, (uint64_t)v9, a3, a4);
  uint64_t v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_101839F50;
  sub_10001A504((uint64_t)(a1 + 25), a2);
  return a1;
}

void sub_100471F60(_Unwind_Exception *a1)
{
}

uint64_t sub_100471FA8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_101839FC0;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  sub_10001A504(a1 + 168, a2);
  return a1;
}

void sub_10047201C(_Unwind_Exception *a1)
{
}

uint64_t sub_100472030(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_101839EF8;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(void *)(a1 + 104) = 0LL;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(_BYTE *)(a1 + 128) = 0;
  sub_10001A504(a1 + 136, a2);
  return a1;
}

void sub_1004720A0(_Unwind_Exception *a1)
{
}

void *sub_1004720B4(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v10 = 0LL;
  sub_1004721B4((uint64_t)a1, (uint64_t)v9, a3, a4);
  uint64_t v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_101839E58;
  sub_10001A504((uint64_t)(a1 + 25), a2);
  return a1;
}

void sub_10047216C(_Unwind_Exception *a1)
{
}

uint64_t sub_1004721B4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_101839EC8;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0x80000000800000LL;
  *(void *)(a1 + 128) = 0LL;
  *(void *)(a1 + 136) = 0LL;
  *(_OWORD *)(a1 + 144) = xmmword_1012E1EA0;
  *(void *)(a1 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0x80000000800000LL;
  sub_10001A504(a1 + 168, a2);
  return a1;
}

void sub_100472238(_Unwind_Exception *a1)
{
}

void *sub_10047224C(void *a1, void *a2, double a3, double a4)
{
  int v14 = 0LL;
  sub_1004723BC((uint64_t)a1, (uint64_t)v13, a3, a4);
  uint64_t v6 = v14;
  if (v14 == v13)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = v13;
    goto LABEL_5;
  }

  if (v14)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_101839DB0;
  a1[35] = [a2 silo];
  a1[36] = 0LL;
  sub_101041EA0((uint64_t)sub_100472448, (uint64_t)a1, a2, &v12);
  uint64_t v8 = v12;
  uint64_t v12 = 0LL;
  uint64_t v9 = a1[36];
  a1[36] = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    uint64_t v10 = v12;
    uint64_t v12 = 0LL;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
  }

  return a1;
}

void sub_100472354(_Unwind_Exception *a1)
{
  uint64_t v3 = v1[36];
  v1[36] = 0LL;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10046B41C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1004723BC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_101839E28;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 128) = 0LL;
  *(void *)(a1 + 136) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_DWORD *)(a1 + 24sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  sub_10001A504(a1 + 248, a2);
  return a1;
}

void sub_100472434(_Unwind_Exception *a1)
{
}

uint64_t sub_100472448(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  return (*((uint64_t (**)(id *, uint64_t, uint64_t, uint64_t))*a4 + 4))(a4, a1, a2, a3);
}

uint64_t sub_100472498(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_101839D58;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(_WORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 108) = 0;
  sub_10001A504(a1 + 112, a2);
  return a1;
}

void sub_100472504(_Unwind_Exception *a1)
{
}

uint64_t sub_100472518(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_101839D00;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0xBFF0000000000000LL;
  *(void *)(a1 + 112) = 0LL;
  sub_10001A504(a1 + 120, a2);
  return a1;
}

void sub_100472580(_Unwind_Exception *a1)
{
}

void *sub_100472594(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v10 = 0LL;
  sub_100472694((uint64_t)a1, (uint64_t)v9, a3, a4);
  uint64_t v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_101839C60;
  sub_10001A504((uint64_t)(a1 + 18), a2);
  return a1;
}

void sub_10047264C(_Unwind_Exception *a1)
{
}

uint64_t sub_100472694(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_101839CD0;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(void *)(a1 + 104) = 7LL;
  sub_10001A504(a1 + 112, a2);
  return a1;
}

void sub_100472704(_Unwind_Exception *a1)
{
}

void *sub_100472718(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v10 = 0LL;
  sub_100472818((uint64_t)a1, (uint64_t)v9, a3, a4);
  uint64_t v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    uint64_t v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_101839BC0;
  sub_10001A504((uint64_t)(a1 + 21), a2);
  return a1;
}

void sub_1004727D0(_Unwind_Exception *a1)
{
}

uint64_t sub_100472818(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_101839C30;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 104) = 0;
  *(void *)(a1 + 108) = 0LL;
  *(void *)(a1 + 124) = 0LL;
  *(void *)(a1 + 116) = 0LL;
  sub_10001A504(a1 + 136, a2);
  return a1;
}

void sub_10047288C(_Unwind_Exception *a1)
{
}

void *sub_1004728A0@<X0>(char *a1@<X1>, char *a2@<X2>, uint64_t a3@<X3>, double *a4@<X4>, void *a5@<X8>)
{
  uint64_t v10 = operator new(0xA8uLL);
  float result = sub_100472918(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_100472904(_Unwind_Exception *a1)
{
}

void *sub_100472918(void *a1, char *__s, char *a3, uint64_t a4, double *a5)
{
  a1[2] = 0LL;
  *a1 = off_10183A4C0;
  a1[1] = 0LL;
  sub_1004729CC((int)&v7, (uint64_t)(a1 + 3), __s, a3, a4, a5);
  return a1;
}

void sub_100472970(_Unwind_Exception *a1)
{
}

void sub_100472984(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10183A4C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100472998(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10183A4C0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_1004729BC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_1004729CC(int a1, uint64_t a2, char *__s, char *a4, uint64_t a5, double *a6)
{
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
}

void sub_100472A54( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100472A88@<X0>(char *a1@<X1>, char *a2@<X2>, uint64_t a3@<X3>, double *a4@<X4>, void *a5@<X8>)
{
  uint64_t v10 = operator new(0xA8uLL);
  float result = sub_100472918(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_100472AEC(_Unwind_Exception *a1)
{
}

void *sub_100472B00@<X0>(char *a1@<X1>, char *a2@<X2>, uint64_t a3@<X3>, double *a4@<X4>, void *a5@<X8>)
{
  uint64_t v10 = operator new(0xA8uLL);
  float result = sub_100472918(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_100472B64(_Unwind_Exception *a1)
{
}

void sub_100472B78(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10183A510;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100472B8C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10183A510;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_100472BB0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void *sub_100472BC8(uint64_t a1)
{
  float result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183A560;
  result[1] = v3;
  return result;
}

uint64_t sub_100472BFC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183A560;
  a2[1] = v2;
  return result;
}

void sub_100472C18(uint64_t a1, double *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
}

uint64_t sub_100472C34(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100472C70()
{
}

void sub_100472C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onBackgroundEscalationManagerUpdate",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    char v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      uint64_t v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onBackgroundEscalationManagerUpdate, event:%{public, locatio n:escape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v13 = 0;
  }

  sub_100464164((void *)a4, a1, a2, a3, a5);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_100472E54( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100472E7C(uint64_t a1)
{
  float result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183A5F0;
  result[1] = v3;
  return result;
}

uint64_t sub_100472EB0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183A5F0;
  a2[1] = v2;
  return result;
}

void sub_100472ECC(uint64_t a1, double *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
}

uint64_t sub_100472EE8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100472F24()
{
}

void *sub_100472F38(uint64_t a1)
{
  float result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183A670;
  result[1] = v3;
  return result;
}

uint64_t sub_100472F6C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183A670;
  a2[1] = v2;
  return result;
}

void sub_100472F88(uint64_t a1, unsigned __int8 *a2)
{
}

uint64_t sub_100472F98(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100472FD4()
{
}

void sub_100472FE0(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    unint64_t v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onStairsEscalationEnableDisable",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    uint64_t v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v10 = 0;
      __int16 v11 = 2082;
      uint64_t v12 = "";
      __int16 v13 = 2082;
      int v14 = "activity";
      __int16 v15 = 2050;
      uint64_t v16 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onStairsEscalationEnableDisable, event:%{public, location:es cape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v8 = 0;
  }

  uint64_t v6 = sub_1008FA854(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 168LL))(v6, a1);
  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_10047319C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1004731C4(uint64_t a1)
{
  float result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183A700;
  result[1] = v3;
  return result;
}

uint64_t sub_1004731F8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183A700;
  a2[1] = v2;
  return result;
}

__n128 sub_100473214(uint64_t a1, int *a2, uint64_t a3)
{
  int v3 = *a2;
  __int128 v4 = *(_OWORD *)(a3 + 208);
  v12[12] = *(_OWORD *)(a3 + 192);
  v12[13] = v4;
  uint64_t v13 = *(void *)(a3 + 224);
  __int128 v5 = *(_OWORD *)(a3 + 144);
  _WORD v12[8] = *(_OWORD *)(a3 + 128);
  v12[9] = v5;
  __int128 v6 = *(_OWORD *)(a3 + 176);
  v12[10] = *(_OWORD *)(a3 + 160);
  v12[11] = v6;
  __int128 v7 = *(_OWORD *)(a3 + 80);
  _DWORD v12[4] = *(_OWORD *)(a3 + 64);
  v12[5] = v7;
  __int128 v8 = *(_OWORD *)(a3 + 112);
  v12[6] = *(_OWORD *)(a3 + 96);
  void v12[7] = v8;
  __int128 v9 = *(_OWORD *)(a3 + 16);
  v12[0] = *(_OWORD *)a3;
  v12[1] = v9;
  __int128 v10 = *(_OWORD *)(a3 + 48);
  int32x4_t v12[2] = *(_OWORD *)(a3 + 32);
  _OWORD v12[3] = v10;
  sub_1004732FC(v3, (uint64_t)v12, *(void *)(a1 + 8));
  return result;
}

uint64_t sub_1004732B4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1004732F0()
{
}

void sub_1004732FC(int a1, uint64_t a2, uint64_t a3)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_101839A18);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v18 = 1;
    __int128 v6 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLMotionStateMediator::onWorkoutPredictorUpdate",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_101839A18);
    }
    __int128 v7 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t buf = 68289538LL;
      __int16 v22 = 2082;
      uint64_t v23 = "";
      __int16 v24 = 2082;
      unint64_t v25 = "activity";
      __int16 v26 = 2050;
      uint64_t v27 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLMotionStateMediator::onWorkoutPredictorUpdate, event:%{public, location:escape_on ly}s, this:%{public}p}",  (uint8_t *)&buf,  0x26u);
    }
  }

  else
  {
    char v18 = 0;
  }

  __int128 v8 = *(_OWORD *)(a2 + 192);
  __int128 v9 = *(_OWORD *)(a2 + 208);
  __int128 v10 = *(_OWORD *)(a2 + 160);
  v19[11] = *(_OWORD *)(a2 + 176);
  v19[12] = v8;
  v19[13] = v9;
  __int128 v11 = *(_OWORD *)(a2 + 128);
  __int128 v12 = *(_OWORD *)(a2 + 144);
  __int128 v13 = *(_OWORD *)(a2 + 96);
  v19[7] = *(_OWORD *)(a2 + 112);
  _WORD v19[8] = v11;
  uint64_t v20 = *(void *)(a2 + 224);
  v19[9] = v12;
  void v19[10] = v10;
  __int128 v14 = *(_OWORD *)(a2 + 80);
  _DWORD v19[4] = *(_OWORD *)(a2 + 64);
  v19[5] = v14;
  v19[6] = v13;
  __int128 v15 = *(_OWORD *)(a2 + 16);
  v19[0] = *(_OWORD *)a2;
  v19[1] = v15;
  __int128 v16 = *(_OWORD *)(a2 + 48);
  v19[2] = *(_OWORD *)(a2 + 32);
  v19[3] = v16;
  sub_1004645E0(a3, a1, (unsigned __int8 *)v19);
  if (v18) {
    os_activity_scope_leave(&state);
  }
}

void sub_100473508( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100473528(id **a1, id *a2)
{
  int v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    __int128 v4 = sub_100518594(v3);
    operator delete(v4);
  }

void *sub_10047355C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183A790;
  result[1] = v3;
  return result;
}

uint64_t sub_100473590(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183A790;
  a2[1] = v2;
  return result;
}

uint64_t sub_1004735AC(uint64_t a1, double *a2)
{
  return sub_100B68560(*(void *)(*(void *)(a1 + 8) + 6600LL), *a2);
}

uint64_t sub_1004735BC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1004735F8()
{
}

void *sub_10047360C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183A810;
  result[1] = v3;
  return result;
}

uint64_t sub_100473640(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183A810;
  a2[1] = v2;
  return result;
}

uint64_t sub_10047365C(uint64_t a1, double *a2)
{
  return sub_100B68588(*(void *)(*(void *)(a1 + 8) + 6600LL), *a2);
}

uint64_t sub_10047366C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1004736A8()
{
}

void *sub_1004736BC(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183A890;
  result[1] = v3;
  return result;
}

uint64_t sub_1004736F0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183A890;
  a2[1] = v2;
  return result;
}

uint64_t sub_10047370C(uint64_t a1, double *a2)
{
  return sub_100B685B0(*(void *)(*(void *)(a1 + 8) + 6600LL), *a2);
}

uint64_t sub_10047371C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100473758()
{
}

void *sub_100473764(void *a1)
{
  *a1 = off_10183A910;
  uint64_t v42 = 0LL;
  sub_100473DA0((uint64_t)(a1 + 1), (uint64_t)v41, 10.0, 300.0);
  uint64_t v2 = v42;
  if (v42 == v41)
  {
    uint64_t v3 = 4LL;
    uint64_t v2 = v41;
  }

  else
  {
    if (!v42) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  uint64_t v40 = 0LL;
  sub_100473E34(a1 + 37, (uint64_t)v39, 10.0, 150.0);
  __int128 v4 = v40;
  if (v40 == v39)
  {
    uint64_t v5 = 4LL;
    __int128 v4 = v39;
  }

  else
  {
    if (!v40) {
      goto LABEL_11;
    }
    uint64_t v5 = 5LL;
  }

  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_11:
  uint64_t v38 = 0LL;
  sub_100471D8C((uint64_t)(a1 + 59), (uint64_t)v37, 10.0, 300.0);
  __int128 v6 = v38;
  if (v38 == v37)
  {
    uint64_t v7 = 4LL;
    __int128 v6 = v37;
  }

  else
  {
    if (!v38) {
      goto LABEL_16;
    }
    uint64_t v7 = 5LL;
  }

  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_16:
  uint64_t v36 = 0LL;
  sub_100474044(a1 + 115, (uint64_t)v35, 10.0, 300.0);
  __int128 v8 = v36;
  if (v36 == v35)
  {
    uint64_t v9 = 4LL;
    __int128 v8 = v35;
  }

  else
  {
    if (!v36) {
      goto LABEL_21;
    }
    uint64_t v9 = 5LL;
  }

  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_21:
  uint64_t v34 = 0LL;
  sub_100471684(a1 + 137, (uint64_t)v33, 10.0, 300.0);
  __int128 v10 = v34;
  if (v34 == v33)
  {
    uint64_t v11 = 4LL;
    __int128 v10 = v33;
  }

  else
  {
    if (!v34) {
      goto LABEL_26;
    }
    uint64_t v11 = 5LL;
  }

  (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_26:
  __int128 v32 = 0LL;
  sub_1004720B4(a1 + 181, (uint64_t)v31, 15.0, 300.0);
  __int128 v12 = v32;
  if (v32 == v31)
  {
    uint64_t v13 = 4LL;
    __int128 v12 = v31;
  }

  else
  {
    if (!v32) {
      goto LABEL_31;
    }
    uint64_t v13 = 5LL;
  }

  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_31:
  __int128 v30 = 0LL;
  sub_100474250(a1 + 210, (uint64_t)v29, 10.0, 10.0);
  __int128 v14 = v30;
  if (v30 == v29)
  {
    uint64_t v15 = 4LL;
    __int128 v14 = v29;
  }

  else
  {
    if (!v30) {
      goto LABEL_36;
    }
    uint64_t v15 = 5LL;
  }

  (*(void (**)(void))(*v14 + 8 * v15))();
LABEL_36:
  uint64_t v28 = 0LL;
  sub_100474664(a1 + 234, (uint64_t)v27, 10.0, 300.0);
  __int128 v16 = v28;
  if (v28 == v27)
  {
    uint64_t v17 = 4LL;
    __int128 v16 = v27;
  }

  else
  {
    if (!v28) {
      goto LABEL_41;
    }
    uint64_t v17 = 5LL;
  }

  (*(void (**)(void))(*v16 + 8 * v17))();
LABEL_41:
  __int16 v26 = 0LL;
  sub_100474874(a1 + 258, (uint64_t)v25, 8.0, 8.0);
  char v18 = v26;
  if (v26 == v25)
  {
    uint64_t v19 = 4LL;
    char v18 = v25;
  }

  else
  {
    if (!v26) {
      goto LABEL_46;
    }
    uint64_t v19 = 5LL;
  }

  (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_46:
  __int16 v24 = 0LL;
  sub_100474C88(a1 + 284, (uint64_t)v23, 6.0, 6.0);
  uint64_t v20 = v24;
  if (v24 == v23)
  {
    uint64_t v21 = 4LL;
    uint64_t v20 = v23;
    goto LABEL_50;
  }

  if (v24)
  {
    uint64_t v21 = 5LL;
LABEL_50:
    (*(void (**)(void))(*v20 + 8 * v21))();
  }

  return a1;
}

void sub_100473AF4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, char a11, uint64_t a12, uint64_t a13, char *a14)
{
  __int16 v24 = a14;
  if (a14 == v15)
  {
    uint64_t v25 = 4LL;
    __int16 v24 = &a11;
  }

  else
  {
    if (!a14) {
      goto LABEL_6;
    }
    uint64_t v25 = 5LL;
  }

  (*(void (**)(void))(*(void *)v24 + 8 * v25))();
LABEL_6:
  sub_10047511C(v22);
  sub_10047517C(v21);
  sub_1004751DC(v20);
  sub_10046BBA4(v19);
  sub_10046D194(v18);
  sub_10047523C(v17);
  sub_10046C0A0(v16);
  sub_10047529C(a10);
  sub_10046ACAC(v14);
  _Unwind_Resume(a1);
}

void sub_100473C10( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, char *a30)
{
  __int128 v31 = a30;
  if (a30 == v30)
  {
    uint64_t v32 = 4LL;
    __int128 v31 = &a27;
  }

  else
  {
    if (!a30) {
      goto LABEL_6;
    }
    uint64_t v32 = 5LL;
  }

  (*(void (**)(void))(*(void *)v31 + 8 * v32))();
LABEL_6:
  JUMPOUT(0x100473BE0LL);
}

void sub_100473C44( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31, uint64_t a32, uint64_t a33, char *a34)
{
  uint64_t v35 = a34;
  if (a34 == v34)
  {
    uint64_t v36 = 4LL;
    uint64_t v35 = &a31;
  }

  else
  {
    if (!a34) {
      goto LABEL_6;
    }
    uint64_t v36 = 5LL;
  }

  (*(void (**)(void))(*(void *)v35 + 8 * v36))();
LABEL_6:
  JUMPOUT(0x100473BE8LL);
}

void sub_100473C78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, char *a38)
{
  uint64_t v39 = a38;
  if (a38 == v38)
  {
    uint64_t v40 = 4LL;
    uint64_t v39 = &a35;
  }

  else
  {
    if (!a38) {
      goto LABEL_6;
    }
    uint64_t v40 = 5LL;
  }

  (*(void (**)(void))(*(void *)v39 + 8 * v40))();
LABEL_6:
  JUMPOUT(0x100473BF0LL);
}

void sub_100473CAC()
{
  uint64_t v2 = *(void **)(v1 - 184);
  if (v2 == v0)
  {
    uint64_t v3 = 4LL;
    uint64_t v2 = (void *)(v1 - 208);
  }

  else
  {
    if (!v2) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x100473BF8LL);
}

void sub_100473CE0()
{
  uint64_t v2 = *(void **)(v1 - 152);
  if (v2 == v0)
  {
    uint64_t v3 = 4LL;
    uint64_t v2 = (void *)(v1 - 176);
  }

  else
  {
    if (!v2) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x100473C00LL);
}

void sub_100473D14()
{
  uint64_t v2 = *(void **)(v1 - 120);
  if (v2 == v0)
  {
    uint64_t v3 = 4LL;
    uint64_t v2 = (void *)(v1 - 144);
  }

  else
  {
    if (!v2) {
      goto LABEL_6;
    }
    uint64_t v3 = 5LL;
  }

  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x100473C08LL);
}

void sub_100473D5C(void *a1)
{
  uint64_t v1 = sub_1004752FC(a1);
  operator delete(v1);
}

uint64_t sub_100473D70(uint64_t a1)
{
  return a1 + 296;
}

uint64_t sub_100473D78(uint64_t a1)
{
  return a1 + 920;
}

uint64_t sub_100473D80(uint64_t a1)
{
  return a1 + 1680;
}

uint64_t sub_100473D88(uint64_t a1)
{
  return a1 + 1872;
}

uint64_t sub_100473D90(uint64_t a1)
{
  return a1 + 2064;
}

uint64_t sub_100473D98(uint64_t a1)
{
  return a1 + 2272;
}

uint64_t sub_100473DA0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_101839A48;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(_WORD *)(a1 + 248) = 0;
  *(_OWORD *)(a1 + 96) = xmmword_1012EA5D0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(void *)(a1 + 239) = 0LL;
  sub_10001A504(a1 + 256, a2);
  return a1;
}

void sub_100473E20(_Unwind_Exception *a1)
{
}

void *sub_100473E34(void *a1, uint64_t a2, double a3, double a4)
{
  __int128 v10 = 0LL;
  sub_100473F34((uint64_t)a1, (uint64_t)v9, a3, a4);
  __int128 v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    __int128 v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_10183A9F8;
  sub_10001A504((uint64_t)(a1 + 18), a2);
  return a1;
}

void sub_100473EEC(_Unwind_Exception *a1)
{
}

uint64_t sub_100473F34(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_10183AA68;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 104) = 0;
  sub_10001A504(a1 + 112, a2);
  return a1;
}

void sub_100473F9C(_Unwind_Exception *a1)
{
}

void *sub_100473FB0(void *a1)
{
  *a1 = off_10183AA68;
  uint64_t v2 = a1 + 14;
  uint64_t v3 = (void *)a1[17];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_100231C10(a1 + 2);
  return a1;
}

void sub_100474018(void *a1)
{
  uint64_t v1 = sub_10047529C(a1);
  operator delete(v1);
}

void sub_100474030(void *a1)
{
  uint64_t v1 = sub_100473FB0(a1);
  operator delete(v1);
}

void *sub_100474044(void *a1, uint64_t a2, double a3, double a4)
{
  __int128 v10 = 0LL;
  sub_100474144((uint64_t)a1, (uint64_t)v9, a3, a4);
  __int128 v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    __int128 v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_10183AA98;
  sub_10001A504((uint64_t)(a1 + 18), a2);
  return a1;
}

void sub_1004740FC(_Unwind_Exception *a1)
{
}

uint64_t sub_100474144(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_10183AB08;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(void *)(a1 + 104) = 0LL;
  sub_10001A504(a1 + 112, a2);
  return a1;
}

void sub_1004741A8(_Unwind_Exception *a1)
{
}

void *sub_1004741BC(void *a1)
{
  *a1 = off_10183AB08;
  uint64_t v2 = a1 + 14;
  uint64_t v3 = (void *)a1[17];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_100231C10(a1 + 2);
  return a1;
}

void sub_100474224(void *a1)
{
  uint64_t v1 = sub_10047523C(a1);
  operator delete(v1);
}

void sub_10047423C(void *a1)
{
  uint64_t v1 = sub_1004741BC(a1);
  operator delete(v1);
}

void *sub_100474250(void *a1, uint64_t a2, double a3, double a4)
{
  __int128 v10 = 0LL;
  sub_100474350((uint64_t)a1, (uint64_t)v9, a3, a4);
  __int128 v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    __int128 v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_10183AB38;
  sub_10001A504((uint64_t)(a1 + 20), a2);
  return a1;
}

void sub_100474308(_Unwind_Exception *a1)
{
}

uint64_t sub_100474350(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_10183ABA8;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  sub_10001A504(a1 + 128, a2);
  return a1;
}

void sub_1004743D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1004743F0(uint64_t a1)
{
  *(void *)a1 = off_10183ABA8;
  uint64_t v2 = (void *)(a1 + 128);
  uint64_t v3 = *(void **)(a1 + 152);
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    uint64_t v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  __int128 v6 = (void **)(a1 + 104);
  sub_100023498(&v6);
  sub_10047452C((void *)(a1 + 16));
  return a1;
}

void sub_100474470(void *a1)
{
  uint64_t v1 = (void *)sub_1004751DC(a1);
  operator delete(v1);
}

uint64_t sub_100474484(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 184);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = 1LL;
  char v4 = 1;
  return v2;
}

BOOL sub_1004744D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 184);
  BOOL result = 0;
  if (v1)
  {
    char v3 = 0;
  }

  return result;
}

void sub_100474518(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1004743F0(a1);
  operator delete(v1);
}

uint64_t sub_10047452C(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  char v3 = (void **)a1[2];
  if (v3 == v2)
  {
    char v4 = a1 + 5;
    char v3 = (void **)a1[1];
  }

  else
  {
    char v4 = a1 + 5;
    unint64_t v5 = a1[4];
    __int128 v6 = &v2[v5 >> 7];
    uint64_t v7 = (uint64_t)*v6 + 32 * (v5 & 0x7F);
    uint64_t v8 = *(uint64_t *)((char *)v2 + (((a1[5] + v5) >> 4) & 0xFFFFFFFFFFFFFF8LL)) + 32 * ((a1[5] + v5) & 0x7F);
    if (v7 != v8)
    {
      do
      {
        uint64_t v15 = (void **)(v7 + 8);
        sub_100023498(&v15);
        v7 += 32LL;
        if (v7 - (void)*v6 == 4096)
        {
          uint64_t v9 = (uint64_t)v6[1];
          ++v6;
          uint64_t v7 = v9;
        }
      }

      while (v7 != v8);
      uint64_t v2 = (void **)a1[1];
      char v3 = (void **)a1[2];
    }
  }

  void *v4 = 0LL;
  unint64_t v10 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      char v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v10 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v11 = v10 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 64LL;
  }

  else
  {
    if (v11 != 2) {
      goto LABEL_16;
    }
    uint64_t v12 = 128LL;
  }

  a1[4] = v12;
LABEL_16:
  while (v2 != v3)
  {
    uint64_t v13 = *v2++;
    operator delete(v13);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void *sub_100474664(void *a1, uint64_t a2, double a3, double a4)
{
  unint64_t v10 = 0LL;
  sub_100474764((uint64_t)a1, (uint64_t)v9, a3, a4);
  __int128 v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    __int128 v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_10183ABD8;
  sub_10001A504((uint64_t)(a1 + 20), a2);
  return a1;
}

void sub_10047471C(_Unwind_Exception *a1)
{
}

uint64_t sub_100474764(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_10183AC48;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  sub_10001A504(a1 + 128, a2);
  return a1;
}

void sub_1004747CC(_Unwind_Exception *a1)
{
}

void *sub_1004747E0(void *a1)
{
  *a1 = off_10183AC48;
  uint64_t v2 = a1 + 16;
  char v3 = (void *)a1[19];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  sub_1000EAA04(a1 + 2);
  return a1;
}

void sub_100474848(void *a1)
{
  uint64_t v1 = sub_10047517C(a1);
  operator delete(v1);
}

void sub_100474860(void *a1)
{
  uint64_t v1 = sub_1004747E0(a1);
  operator delete(v1);
}

void *sub_100474874(void *a1, uint64_t a2, double a3, double a4)
{
  unint64_t v10 = 0LL;
  sub_100474974((uint64_t)a1, (uint64_t)v9, a3, a4);
  __int128 v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    __int128 v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_10183AC78;
  sub_10001A504((uint64_t)(a1 + 22), a2);
  return a1;
}

void sub_10047492C(_Unwind_Exception *a1)
{
}

uint64_t sub_100474974(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_10183ACE8;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0u;
  *(void *)(a1 + 136) = 0LL;
  sub_10001A504(a1 + 144, a2);
  return a1;
}

void sub_1004749EC(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v1 + 120);
  if (v4)
  {
    *(void *)(v1 + 128) = v4;
    operator delete(v4);
  }

  sub_100474B44(v2);
  _Unwind_Resume(a1);
}

void *sub_100474A10(void *a1)
{
  *a1 = off_10183ACE8;
  uint64_t v2 = a1 + 18;
  char v3 = (void *)a1[21];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
  }

  else
  {
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  unint64_t v5 = (void *)a1[15];
  if (v5)
  {
    a1[16] = v5;
    operator delete(v5);
  }

  sub_100474B44(a1 + 2);
  return a1;
}

void sub_100474A88(void *a1)
{
  uint64_t v1 = sub_10047511C(a1);
  operator delete(v1);
}

uint64_t sub_100474A9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 200);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = 1LL;
  char v4 = 1;
  return v2;
}

BOOL sub_100474AE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 200);
  BOOL result = 0;
  if (v1)
  {
    char v3 = 0;
  }

  return result;
}

void sub_100474B30(void *a1)
{
  uint64_t v1 = sub_100474A10(a1);
  operator delete(v1);
}

uint64_t sub_100474B44(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  char v3 = (void **)a1[2];
  if (v3 == v2)
  {
    char v4 = a1 + 5;
    char v3 = (void **)a1[1];
  }

  else
  {
    char v4 = a1 + 5;
    unint64_t v5 = a1[4];
    __int128 v6 = &v2[v5 / 0x55];
    unint64_t v7 = (unint64_t)*v6;
    unint64_t v8 = (unint64_t)*v6 + 48 * (v5 % 0x55);
    unint64_t v9 = (unint64_t)v2[(a1[5] + v5) / 0x55] + 48 * ((a1[5] + v5) % 0x55);
    if (v8 != v9)
    {
      do
      {
        unint64_t v10 = *(void **)(v8 + 24);
        if (v10)
        {
          *(void *)(v8 + 32) = v10;
          operator delete(v10);
          unint64_t v7 = (unint64_t)*v6;
        }

        v8 += 48LL;
        if (v8 - v7 == 4080)
        {
          unint64_t v11 = (unint64_t)v6[1];
          ++v6;
          unint64_t v7 = v11;
          unint64_t v8 = v11;
        }
      }

      while (v8 != v9);
      uint64_t v2 = (void **)a1[1];
      char v3 = (void **)a1[2];
    }
  }

  void *v4 = 0LL;
  unint64_t v12 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      char v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v12 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v13 = v12 >> 3;
  if (v13 == 1)
  {
    uint64_t v14 = 42LL;
  }

  else
  {
    if (v13 != 2) {
      goto LABEL_18;
    }
    uint64_t v14 = 85LL;
  }

  a1[4] = v14;
LABEL_18:
  while (v2 != v3)
  {
    uint64_t v15 = *v2++;
    operator delete(v15);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void *sub_100474C88(void *a1, uint64_t a2, double a3, double a4)
{
  unint64_t v10 = 0LL;
  sub_100474D88((uint64_t)a1, (uint64_t)v9, a3, a4);
  __int128 v6 = v10;
  if (v10 == v9)
  {
    uint64_t v7 = 4LL;
    __int128 v6 = v9;
    goto LABEL_5;
  }

  if (v10)
  {
    uint64_t v7 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }

  *a1 = off_10183AD18;
  sub_10001A504((uint64_t)(a1 + 23), a2);
  return a1;
}

void sub_100474D40(_Unwind_Exception *a1)
{
}

uint64_t sub_100474D88(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_10183AD88;
  *(_BYTE *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_1012EB270;
  *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 104) = 0x600000006LL;
  *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(void *)(a1 + 128) = 0LL;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 136) = _Q0;
  sub_10001A504(a1 + 152, a2);
  return a1;
}

void sub_100474E10(_Unwind_Exception *a1)
{
  char v4 = v3;
  __int128 v6 = *v4;
  if (*v4)
  {
    *(void *)(v1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v6;
    operator delete(v6);
  }

  sub_100474F70(v2);
  _Unwind_Resume(a1);
}

void *sub_100474E38(void *a1)
{
  *a1 = off_10183AD88;
  uint64_t v2 = a1 + 19;
  char v3 = (void *)a1[22];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
  }

  else
  {
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  unint64_t v5 = (void *)a1[14];
  if (v5)
  {
    a1[15] = v5;
    operator delete(v5);
  }

  sub_100474F70(a1 + 2);
  return a1;
}

void sub_100474EB4(void *a1)
{
  uint64_t v1 = sub_1004750BC(a1);
  operator delete(v1);
}

uint64_t sub_100474EC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 208);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = 1LL;
  char v4 = 1;
  return v2;
}

BOOL sub_100474F14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 208);
  BOOL result = 0;
  if (v1)
  {
    char v3 = 0;
  }

  return result;
}

void sub_100474F5C(void *a1)
{
  uint64_t v1 = sub_100474E38(a1);
  operator delete(v1);
}

uint64_t sub_100474F70(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  char v3 = (void **)a1[2];
  if (v3 == v2)
  {
    char v4 = a1 + 5;
    char v3 = (void **)a1[1];
  }

  else
  {
    char v4 = a1 + 5;
    unint64_t v5 = a1[4];
    __int128 v6 = &v2[v5 / 0x49];
    unint64_t v7 = (unint64_t)*v6;
    unint64_t v8 = (unint64_t)*v6 + 56 * (v5 % 0x49);
    unint64_t v9 = (unint64_t)v2[(a1[5] + v5) / 0x49] + 56 * ((a1[5] + v5) % 0x49);
    if (v8 != v9)
    {
      do
      {
        unint64_t v10 = *(void **)(v8 + 16);
        if (v10)
        {
          *(void *)(v8 + 24) = v10;
          operator delete(v10);
          unint64_t v7 = (unint64_t)*v6;
        }

        v8 += 56LL;
        if (v8 - v7 == 4088)
        {
          unint64_t v11 = (unint64_t)v6[1];
          ++v6;
          unint64_t v7 = v11;
          unint64_t v8 = v11;
        }
      }

      while (v8 != v9);
      uint64_t v2 = (void **)a1[1];
      char v3 = (void **)a1[2];
    }
  }

  void *v4 = 0LL;
  unint64_t v12 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      char v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v12 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v13 = v12 >> 3;
  if (v13 == 1)
  {
    uint64_t v14 = 36LL;
  }

  else
  {
    if (v13 != 2) {
      goto LABEL_18;
    }
    uint64_t v14 = 73LL;
  }

  a1[4] = v14;
LABEL_18:
  while (v2 != v3)
  {
    uint64_t v15 = *v2++;
    operator delete(v15);
  }

  return sub_1000EA11C((uint64_t)a1);
}

void *sub_1004750BC(void *a1)
{
  *a1 = off_10183AD18;
  uint64_t v2 = a1 + 23;
  char v3 = (void *)a1[26];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_100474E38(a1);
}

void *sub_10047511C(void *a1)
{
  *a1 = off_10183AC78;
  uint64_t v2 = a1 + 22;
  char v3 = (void *)a1[25];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_100474A10(a1);
}

void *sub_10047517C(void *a1)
{
  *a1 = off_10183ABD8;
  uint64_t v2 = a1 + 20;
  char v3 = (void *)a1[23];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_1004747E0(a1);
}

uint64_t sub_1004751DC(void *a1)
{
  *a1 = off_10183AB38;
  uint64_t v2 = a1 + 20;
  char v3 = (void *)a1[23];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_1004743F0((uint64_t)a1);
}

void *sub_10047523C(void *a1)
{
  *a1 = off_10183AA98;
  uint64_t v2 = a1 + 18;
  char v3 = (void *)a1[21];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_1004741BC(a1);
}

void *sub_10047529C(void *a1)
{
  *a1 = off_10183A9F8;
  uint64_t v2 = a1 + 18;
  char v3 = (void *)a1[21];
  if (v3 == v2)
  {
    uint64_t v4 = 4LL;
    char v3 = v2;
    goto LABEL_5;
  }

  if (v3)
  {
    uint64_t v4 = 5LL;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }

  return sub_100473FB0(a1);
}

void *sub_1004752FC(void *a1)
{
  *a1 = off_10183A910;
  uint64_t v2 = a1 + 1;
  sub_1004750BC(a1 + 284);
  sub_10047511C(a1 + 258);
  sub_10047517C(a1 + 234);
  sub_1004751DC(a1 + 210);
  sub_10046BBA4(a1 + 181);
  sub_10046D194(a1 + 137);
  sub_10047523C(a1 + 115);
  sub_10046C0A0(a1 + 59);
  sub_10047529C(a1 + 37);
  sub_10046ACAC(v2);
  return a1;
}

void *sub_100475388(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183ADF8;
  result[1] = v3;
  return result;
}

uint64_t sub_1004753BC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183ADF8;
  a2[1] = v2;
  return result;
}

uint64_t sub_1004753D8(uint64_t a1, _BYTE *a2)
{
  if (*a2) {
    sub_100468120();
  }
  else {
    sub_1004682BC();
  }
  return 1LL;
}

uint64_t sub_100475400(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_10047543C()
{
}

void *sub_100475450(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183AE88;
  result[1] = v3;
  return result;
}

uint64_t sub_100475484(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183AE88;
  a2[1] = v2;
  return result;
}

uint64_t sub_1004754A0(uint64_t a1, unsigned __int8 *a2)
{
  return sub_100A77D24(*(void *)(a1 + 8) + 6616LL, *a2, 0);
}

uint64_t sub_1004754B8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1004754F4()
{
}

void *sub_100475508(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183AF08;
  result[1] = v3;
  return result;
}

uint64_t sub_10047553C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183AF08;
  a2[1] = v2;
  return result;
}

uint64_t sub_100475558(uint64_t a1, unsigned __int8 *a2)
{
  return sub_100A77244((void *)(*(void *)(a1 + 8) + 6616LL), *a2);
}

uint64_t sub_10047556C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1004755A8()
{
}

void *sub_1004755BC(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183AF88;
  result[1] = v3;
  return result;
}

uint64_t sub_1004755F0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183AF88;
  a2[1] = v2;
  return result;
}

void sub_10047560C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8344LL);
  if (v2) {
    sub_100960EE4(v2, a2);
  }
}

uint64_t sub_100475620(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_10047565C()
{
}

void *sub_100475668(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  *a1 = off_1018A2210;
  id v9 = a5;
  *a1 = off_10183B008;
  a1[1] = v9;
  a1[2] = a3;
  a1[3] = a4;
  id v10 = a2;
  a1[5] = 0LL;
  a1[4] = v10;
  a1[6] = 0LL;
  v14[0] = 0LL;
  v14[1] = v14;
  void v14[2] = 0x2020000000LL;
  char v15 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472LL;
  aBlock[2] = sub_10047579C;
  aBlock[3] = &unk_10182EFC8;
  aBlock[4] = v14;
  a1[5] = _Block_copy(aBlock);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  int32x4_t v12[2] = sub_1004757B0;
  _OWORD v12[3] = &unk_10182EFF0;
  _DWORD v12[4] = v14;
  a1[6] = _Block_copy(v12);
  _Block_object_dispose(v14, 8);
  return a1;
}

void sub_100475774(_Unwind_Exception *a1)
{
}

uint64_t sub_10047579C(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
  return result;
}

BOOL sub_1004757B0(uint64_t a1)
{
  return *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) == 0;
}

void sub_1004757CC(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100475AA8(a1);
  operator delete(v1);
}

id sub_1004757E0(void *a1, int a2, const void *a3, unint64_t a4)
{
  DWORD2(v23) = 0;
  if (a4 >= 0x20) {
    size_t v8 = 32LL;
  }
  else {
    size_t v8 = a4;
  }
  if (v8 <= 0x14) {
    size_t v9 = 21 - v8;
  }
  else {
    size_t v9 = 0LL;
  }
  bzero((char *)&__dst + v8, v9);
  memcpy(&__dst, a3, v8);
  if (a4 >= 0x21)
  {
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018399D8);
    }
    id v10 = (os_log_s *)qword_1019344B8;
    if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 136315906;
      unint64_t v33 = 0x80000001012ED13ELL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v34 = 2048;
      uint64_t v35 = 32LL;
      __int16 v36 = 2048;
      unint64_t v37 = a4;
      __int16 v38 = 1024;
      int v39 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEBUG,  "SIZE MISMATCH: %s=%lu vs sz=%zu notification=%d",  buf,  0x26u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019344B0 != -1) {
        dispatch_once(&qword_1019344B0, &stru_1018399D8);
      }
      int v24 = 136315906;
      unint64_t v25 = 0x80000001012ED13ELL & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v26 = 2048;
      uint64_t v27 = 32LL;
      __int16 v28 = 2048;
      unint64_t v29 = a4;
      __int16 v30 = 1024;
      int v31 = a2;
      __int128 v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  2LL,  "SIZE MISMATCH: %s=%lu vs sz=%zu notification=%d",  (const char *)&v24,  38,  v17,  LODWORD(v18[0]));
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLMotionNotifier::SiloDispatcher<StairsEscalationEvent>::dispatchData(int, const void *, size_t) [T = StairsEscalationEvent]",  "%s\n",  v16);
    }
  }

  uint64_t v12 = a1[2];
  uint64_t v11 = a1[3];
  uint64_t v13 = a1[6];
  uint64_t v14 = (void *)a1[4];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472LL;
  _OWORD v18[2] = sub_100475B00;
  void v18[3] = &unk_10183B050;
  v18[4] = v13;
  v18[5] = v12;
  __int128 v19 = __dst;
  __int128 v20 = v23;
  uint64_t v21 = v11;
  return [v14 async:v18];
}

uint64_t sub_100475AA8(uint64_t a1)
{
  *(void *)a1 = off_10183B008;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  _Block_release(*(const void **)(a1 + 40));
  _Block_release(*(const void **)(a1 + 48));

  return sub_1011C07F8(a1);
}

uint64_t sub_100475B00(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  if ((_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, void))(a1 + 40))(a1 + 48, *(void *)(a1 + 80));
  }
  return result;
}

CLCppContainer *sub_100475B44(const void *a1)
{
  uint64_t v2 = operator new(0x140uLL);
  memcpy(v2, a1, 0x140uLL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1004760BC;
  void v4[3] = &unk_10181D3D0;
  void v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  320LL);
}

void sub_100475BCC(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    unint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      size_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          uint64_t v12 = (uint64_t *)v4;
        }
        else {
          uint64_t v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          size_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        uint64_t v50 = v9;
        id v13 = sub_1004760CC(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          char v15 = a1 + 11;
          __int128 v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            __int128 v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                __int16 v22 = (uint64_t *)v17;
              }
              else {
                __int16 v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                __int128 v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v49 = v19;
              sub_100475FA0(a1, (uint64_t)&v49, (uint64_t)&v50, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              unint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  uint64_t v32 = (uint64_t *)v27;
                }
                else {
                  uint64_t v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  unint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              uint64_t v50 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                uint64_t v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    uint64_t v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      uint64_t v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      uint64_t v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  uint64_t v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      uint64_t v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      uint64_t v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              uint64_t v49 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_101839A18);
              }
              int v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                unint64_t v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)uint64_t buf = 136446466;
                int v56 = v25;
                __int16 v57 = 1026;
                int v58 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_101839A18);
                }
                uint64_t v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v51 = 136446466;
                uint64_t v52 = v45;
                __int16 v53 = 1026;
                int v54 = v46;
                LODWORD(v48) = 18;
                uint64_t v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                                &v51,
                                v48);
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData >::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLMotionStateMedi ator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, Notificati onInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
              }
            }
          }

          while (v14 != v50 + 6);
        }
      }
    }
  }

_BYTE *sub_100475FA0(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    unint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_1004760CC(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    uint64_t v14 = (int *)(*(void *)a2 + 32LL);
    uint64_t v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    uint64_t result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_10047607C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10183B080;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100476090(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10183B080;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_1004760BC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_1004760CC(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppEncodableDataContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100476144(a1);
  }
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v4) & 1) != 0) {
    return sub_1004764CC(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100476144(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_100476878((uint64_t)&v8 + 7, a1);
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183B0C0);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x80000001012ED1BALL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183B0C0);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183B0C0);
    }
    __int128 v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x80000001012ED1BALL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183B0C0);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  unint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMotionStateMediator_Type::NotificationData, Ca llback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_1004764CC(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183B0C0);
    }
    uint64_t v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012ED1BALL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183B0C0);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183B0C0);
    }
    __int128 v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012ED1BALL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183B0C0);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  unint64_t v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMotionStateMediator_Type::NotificationData, Ca llback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100476878(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D3470))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)320) {
      sub_10123A7C0();
    }
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
  }

  return [a2 cppObjectPtr];
}

void sub_1004768EC(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

void sub_100476918(uint64_t a1, char *a2)
{
  if (a2)
  {
    for (uint64_t i = 0LL; i != -176; i -= 88LL)
    {
      *(void *)&a2[i + 1344] = off_10183B0F0;
      sub_100008390((uint64_t)&a2[i + 1408], *(void **)&a2[i + 1416]);
      sub_100210578(&a2[i + 1360]);
    }

    for (uint64_t j = 0LL; j != -176; j -= 88LL)
    {
      *(void *)&a2[j + 1008] = off_10183B0F0;
      sub_100008390((uint64_t)&a2[j + 1072], *(void **)&a2[j + 1080]);
      sub_100210578(&a2[j + 1024]);
    }

    for (uint64_t k = 0LL; k != -264; k -= 88LL)
    {
      *(void *)&a2[k + 552] = off_10183B0F0;
      sub_100008390((uint64_t)&a2[k + 616], *(void **)&a2[k + 624]);
      sub_100210578(&a2[k + 568]);
    }

    operator delete(a2);
  }

uint64_t sub_1004769E8(uint64_t a1)
{
  *(void *)a1 = off_10183B0F0;
  sub_100008390(a1 + 64, *(void **)(a1 + 72));
  sub_100210578((void *)(a1 + 16));
  return a1;
}

void sub_100476A28(void **a1)
{
  *a1 = off_10183B0F0;
  sub_100008390((uint64_t)(a1 + 8), a1[9]);
  sub_100210578(a1 + 2);
  operator delete(a1);
}

void sub_100476A68(uint64_t a1, float *a2)
{
  uint64_t v3 = (void *)(a1 + 16);
  uint64_t v4 = (uint64_t **)(a1 + 64);
  __int128 v6 = sub_100476EAC((uint64_t **)(a1 + 64), a2);
  sub_100476B14(v3, &v6);
  if (*(void *)(a1 + 56) > (unint64_t)*(unsigned int *)(a1 + 8))
  {
    sub_1000087E8(v4, v5);
    operator delete(v5);
    *(int64x2_t *)(a1 + 48) = vaddq_s64(*(int64x2_t *)(a1 + 48), (int64x2_t)xmmword_1012CE4D0);
    sub_1002109A4((uint64_t)v3, 1);
  }

void sub_100476B14(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 6) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    sub_100476B98(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }

  *(void *)(*(void *)(v5 + ((v8 >> 6) & 0x3FFFFFFFFFFFFF8LL)) + 8 * (v8 & 0x1FF)) = *a2;
  a1[5] = v7 + 1;
}

void sub_100476B98(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x200;
  unint64_t v4 = v2 - 512;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      BOOL v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        BOOL v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)BOOL v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100476E60( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

float *sub_100476EAC(uint64_t **a1, float *a2)
{
  unint64_t v4 = (float *)operator new(0x20uLL);
  float v5 = *a2;
  v4[7] = *a2;
  uint64_t v6 = a1 + 1;
  uint64_t v7 = a1[1];
  if (v7)
  {
    do
    {
      while (1)
      {
        uint64_t v6 = (uint64_t **)v7;
        uint64_t v7 = (uint64_t *)*v7;
        unint64_t v8 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }

      uint64_t v7 = (uint64_t *)v7[1];
    }

    while (v7);
    unint64_t v8 = v6 + 1;
  }

  else
  {
    unint64_t v8 = a1 + 1;
  }

uint64_t sub_100476F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 32);
  unint64_t v4 = (_BYTE *)(a2 + 16);
  if (*(char *)(a1 + 71) < 0)
  {
    sub_1010DD48C(v4, *(void **)(a1 + 48), *(void *)(a1 + 56));
  }

  else
  {
    *(_OWORD *)unint64_t v4 = *(_OWORD *)(a1 + 48);
    *(void *)(a2 + 32) = *(void *)(a1 + 64);
  }

  return sub_10046E90C(a2 + 40, (void *)(a1 + 72));
}

void sub_100476FA4(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100476FC0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  if (*(char *)(a2 + 71) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 48), *(void **)(a2 + 48), *(void *)(a2 + 56));
  }

  else
  {
    __int128 v4 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = v4;
  }

  return sub_10046E90C(a1 + 72, (void *)(a2 + 72));
}

void sub_10047702C(_Unwind_Exception *exception_object)
{
}

void sub_100477048(uint64_t a1)
{
}

void *sub_100477084(void *a1, uint64_t a2)
{
  *a1 = a2;
  __int128 v4 = operator new(0x20uLL);
  void *v4 = &off_10183B160;
  v4[1] = 0LL;
  v4[2] = 0LL;
  void v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_1004770CC(_Unwind_Exception *exception_object)
{
  if (v1)
  {
    BOOL v3 = (void *)sub_100454CB4(v1);
    operator delete(v3);
  }

  _Unwind_Resume(exception_object);
}

void sub_1004770E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v2 = (void *)sub_100454CB4(v1);
    operator delete(v2);
  }

uint64_t sub_10047710C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }

  else
  {
    return 0LL;
  }

uint64_t sub_10047714C(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 728);
  sub_100648A9C(a1 + 728);
  BOOL v3 = *(void **)(a1 + 776);
  if (v3 == (void *)(a1 + 752))
  {
    uint64_t v4 = 4LL;
    BOOL v3 = (void *)(a1 + 752);
  }

  else
  {
    if (!v3) {
      goto LABEL_6;
    }
    uint64_t v4 = 5LL;
  }

  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  float v5 = *v2;
  if (*v2)
  {
    *(void *)(a1 + 736) = v5;
    operator delete(v5);
  }

  sub_10041385C((void *)(a1 + 672));
  uint64_t v6 = *(void *)(a1 + 224);
  *(void *)(a1 + 224) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  sub_10041385C((void *)(a1 + 176));
  sub_10041385C((void *)(a1 + 128));
  sub_1002C5F18((void *)(a1 + 64));
  return a1;
}

void *sub_100477220(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183B1D8;
  result[1] = v3;
  return result;
}

uint64_t sub_100477254(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183B1D8;
  a2[1] = v2;
  return result;
}

void sub_100477270(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100477278(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_1004772B4()
{
}

__n128 sub_1004772C0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 56 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100477384(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x38)) + 72 * (v7 % 0x38);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  __int128 v10 = *(_OWORD *)(a2 + 32);
  __int128 v11 = *(_OWORD *)(a2 + 48);
  *(void *)(v8 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(v8 + 32) = v10;
  *(_OWORD *)(v8 + 48) = v11;
  *(__n128 *)(v8 + 16) = result;
  ++a1[5];
  return result;
}

void sub_100477384(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x38;
  unint64_t v4 = v2 - 56;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      BOOL v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        BOOL v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)BOOL v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_10047764C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

__n128 sub_100477698(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 32 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100477720(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  __n128 result = *a2;
  *(__n128 *)(*(void *)(v5 + ((v7 >> 5) & 0x7FFFFFFFFFFFFF8LL)) + 16LL * v7) = *a2;
  ++a1[5];
  return result;
}

void sub_100477720(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x100;
  unint64_t v4 = v2 - 256;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      BOOL v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        BOOL v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)BOOL v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_1004779E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

__n128 sub_100477A34(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 102 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100477AE8(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x66)) + 40 * (v7 % 0x66);
  __n128 result = *(__n128 *)a2;
  __int128 v10 = *(_OWORD *)(a2 + 16);
  *(void *)(v8 + 32) = *(void *)(a2 + 32);
  *(__n128 *)unint64_t v8 = result;
  *(_OWORD *)(v8 + 16) = v10;
  ++a1[5];
  return result;
}

void sub_100477AE8(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x66;
  unint64_t v4 = v2 - 102;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      BOOL v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        BOOL v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)BOOL v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100477DB0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

__n128 sub_100477DFC(void *a1, __int128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 21 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100477ED8(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x15)) + 192 * (v7 % 0x15);
  __int128 v9 = *a2;
  __int128 v10 = a2[1];
  __int128 v11 = a2[3];
  *(_OWORD *)(v8 + 32) = a2[2];
  *(_OWORD *)(v8 + 48) = v11;
  *(_OWORD *)unint64_t v8 = v9;
  *(_OWORD *)(v8 + 16) = v10;
  __int128 v12 = a2[4];
  __int128 v13 = a2[5];
  __int128 v14 = a2[7];
  *(_OWORD *)(v8 + 96) = a2[6];
  *(_OWORD *)(v8 + 112) = v14;
  *(_OWORD *)(v8 + 64) = v12;
  *(_OWORD *)(v8 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v13;
  __n128 result = (__n128)a2[8];
  __int128 v16 = a2[9];
  __int128 v17 = a2[11];
  *(_OWORD *)(v8 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a2[10];
  *(_OWORD *)(v8 + 176) = v17;
  *(__n128 *)(v8 + 128) = result;
  *(_OWORD *)(v8 + 144) = v16;
  ++a1[5];
  return result;
}

void sub_100477ED8(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x15;
  unint64_t v4 = v2 - 21;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    __int128 v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      BOOL v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        BOOL v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)BOOL v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_1004781A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_1004781EC(void *a1, void *__src)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 2 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100478280(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  __n128 result = memcpy((void *)(*(void *)(v5 + ((v7 >> 1) & 0x7FFFFFFFFFFFFFF8LL)) + 320 * (v7 & 0xF)), __src, 0x140uLL);
  ++a1[5];
  return result;
}

void sub_100478280(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x10;
  unint64_t v4 = v2 - 16;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    __int128 v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      BOOL v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        BOOL v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)BOOL v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100478548( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

__n128 sub_100478594(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 170 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0LL;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100478640(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }

  unint64_t v8 = (__n128 *)(*(void *)(v5 + 8 * (v7 / 0xAA)) + 24 * (v7 % 0xAA));
  __n128 result = *a2;
  v8[1].n128_u64[0] = a2[1].n128_u64[0];
  *unint64_t v8 = result;
  ++a1[5];
  return result;
}

void sub_100478640(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0xAA;
  unint64_t v4 = v2 - 170;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    __int128 v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8LL;
      return;
    }

    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000071BC(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      BOOL v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8LL];
        uint64_t v40 = 8 * (v39 >> 3);
        BOOL v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)BOOL v41 = v42;
          v41 += 8;
          v40 -= 8LL;
        }

        while (v40);
      }

      goto LABEL_30;
    }

void sub_100478908( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100478954(uint64_t a1)
{
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_1018399D8);
  }
  unint64_t v2 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "Disabling buffer at CLWorkoutPredictorSourceBuffer",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018399D8);
    }
    v5[0] = 0;
    unint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Disabling buffer at CLWorkoutPredictorSourceBuffer",  v5,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLElevationChangeEntry>::disableSource() [T = CLElevationChangeEntry]",  "%s\n",  v4);
  }

  *(void *)(a1 + 328) = 0x10000000000000LL;
  *(_BYTE *)(a1 + 264) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
}

uint64_t sub_100478B00(uint64_t a1)
{
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_1018399D8);
  }
  unint64_t v2 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "Disabling buffer at CLWorkoutPredictorSourceBuffer",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018399D8);
    }
    v5[0] = 0;
    unint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Disabling buffer at CLWorkoutPredictorSourceBuffer",  v5,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLOdometerEntry>::disableSource() [T = CLOdometerEntry]",  "%s\n",  v4);
  }

  *(void *)(a1 + 72) = 0x10000000000000LL;
  *(_BYTE *)(a1 + 8) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
}

uint64_t sub_100478CAC(uint64_t a1)
{
  if (qword_1019344B0 != -1) {
    dispatch_once(&qword_1019344B0, &stru_1018399D8);
  }
  unint64_t v2 = (os_log_s *)qword_1019344B8;
  if (os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "Disabling buffer at CLWorkoutPredictorSourceBuffer",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019344B0 != -1) {
      dispatch_once(&qword_1019344B0, &stru_1018399D8);
    }
    v5[0] = 0;
    unint64_t v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019344B8,  1LL,  "Disabling buffer at CLWorkoutPredictorSourceBuffer",  v5,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLSourceBuffer<CLWorkoutClassifier_Type::WorkoutClassifierResult>::disableSource() [T = CLWorkoutClassifier_T ype::WorkoutClassifierResult]",  "%s\n",  v4);
  }

  *(void *)(a1 + 72) = 0x10000000000000LL;
  *(_BYTE *)(a1 + 8) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
}

uint64_t sub_100478E58(uint64_t a1)
{
  *(void *)a1 = off_10183B268;
  unint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *unint64_t v2 = 0LL;
  *(void *)(a1 + 16) = 0LL;
  return a1;
}

CLCppContainer *sub_100478EB8(const void *a1)
{
  unint64_t v2 = operator new(0x140uLL);
  memcpy(v2, a1, 0x140uLL);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100478F40;
  void v4[3] = &unk_10181D3D0;
  void v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  0LL,  320LL);
}

void sub_100478F40(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

BOOL sub_100478F50()
{
  return os_log_type_enabled((os_log_t)qword_1019344B8, OS_LOG_TYPE_FAULT);
}

BOOL sub_100478F64()
{
  return os_log_type_enabled(*(os_log_t *)(v0 + 1208), OS_LOG_TYPE_INFO);
}

BOOL sub_100478F74()
{
  return os_signpost_enabled(*(os_log_t *)(v0 + 1208));
}

uint64_t sub_100478F80()
{
  dword_101995808 = 800;
  __cxa_atexit((void (*)(void *))sub_100355650, qword_1019957F0, (void *)&_mh_execute_header);
  sub_1010DDBC0(qword_101995810, "DmFp");
  dword_101995828 = 200;
  __cxa_atexit((void (*)(void *))sub_100355650, qword_101995810, (void *)&_mh_execute_header);
  sub_1010DDBC0(&qword_101995830, "MotionStateMediator");
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_101995830, (void *)&_mh_execute_header);
}

void sub_10047994C(_Unwind_Exception *a1)
{
}

uint64_t sub_100479B74(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 109);
}

void sub_100479C08( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100479C24(uint64_t a1, char *a2, void *a3)
{
  uint64_t v5 = sub_100479C80(a1, a2, a3);
  *(void *)uint64_t v5 = off_10183B2D0;
  *(_DWORD *)(v5 + 109) = 65792;
  sub_100479D1C(v5, a2);
  return a1;
}

void sub_100479C6C(_Unwind_Exception *a1)
{
}

uint64_t sub_100479C80(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_10183B4D0;
  sub_1010DDBC0((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = [a3 silo];
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0LL;
  *(void *)(a1 + 96) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 108) = 0;
  return a1;
}

void sub_100479D00(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100479D1C(uint64_t a1, const char *a2)
{
  BOOL v20 = 0;
  sub_1002A5370(v19);
  sub_1002F0B04(buf);
  if (sub_1002A8F8C(*(uint64_t *)buf, "LocationProviders", v19))
  {
    uint64_t v4 = sub_1002A6F64((uint64_t)v19, a2, &v20);
    uint64_t v5 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8])
    {
      uint64_t v6 = (unint64_t *)(*(void *)&buf[8] + 8LL);
      do
        unint64_t v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }

    if ((_DWORD)v4)
    {
      *(_BYTE *)(a1 + 111) = v20;
      uint64_t v4 = 1LL;
    }
  }

  else
  {
    unint64_t v8 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8])
    {
      __int128 v9 = (unint64_t *)(*(void *)&buf[8] + 8LL);
      do
        unint64_t v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }

    uint64_t v4 = 0LL;
  }

  if (!*(_BYTE *)(a1 + 111))
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183B460);
    }
    uint64_t v11 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 136380675;
      *(void *)&uint8_t buf[4] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "LocationProvider,#Warning provider %{private}s disabled - will run but not send locations to clients",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183B460);
      }
      int v21 = 136380675;
      unint64_t v22 = a2;
      uint64_t v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationProvider,#Warning provider %{private}s disabled - will run but not send locations to clients",  &v21,  12);
      sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLLocationProvider::checkEnable(const char *)", "%s\n", v17);
      if (v17 != buf) {
        free(v17);
      }
    }
  }

  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_10183B460);
  }
  uint64_t v12 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = *(unsigned __int8 *)(a1 + 111);
    *(_DWORD *)uint64_t buf = 136380931;
    *(void *)&uint8_t buf[4] = a2;
    *(_WORD *)&_BYTE buf[12] = 1026;
    *(_DWORD *)&_BYTE buf[14] = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "LocationProvider,Location Provider (%{private}s) set to (%{public}d)",  buf,  0x12u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183B460);
    }
    int v15 = *(unsigned __int8 *)(a1 + 111);
    int v21 = 136380931;
    unint64_t v22 = a2;
    __int16 v23 = 1026;
    int v24 = v15;
    LODWORD(v18) = 18;
    uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  0LL,  "LocationProvider,Location Provider (%{private}s) set to (%{public}d)",  &v21,  v18);
    sub_10029211C("Generic", 1LL, 0, 2LL, "BOOL CLLocationProvider::checkEnable(const char *)", "%s\n", v16);
    if (v16 != buf) {
      free(v16);
    }
  }

  sub_1002A5590(v19);
  return v4;
}

void sub_10047A114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_10047A14C(uint64_t a1)
{
  *(void *)a1 = off_10183B4D0;
  [*(id *)(a1 + 48) invalidate];

  sub_100231CA4(a1 + 80, *(void **)(a1 + 88));
  sub_100231CF0(a1 + 56, *(void **)(a1 + 64));
  return a1;
}

void sub_10047A1C8(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10047A14C(a1);
  operator delete(v1);
}

uint64_t sub_10047A1E0(uint64_t result)
{
  *(_BYTE *)(result + 108) = 1;
  return result;
}

uint64_t sub_10047A1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101938048);
}

uint64_t sub_10047A200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96LL))( a1,  a2,  a3,  &unk_101938048);
}

BOOL sub_10047A214(uint64_t a1, int a2, unsigned int *a3, uint64_t *a4)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_10183B460);
  }
  unint64_t v8 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v9 = *a3;
    unint64_t v10 = sub_10100D9D8(*a3);
    uint64_t v11 = *a4;
    int v12 = *((_DWORD *)a4 + 5);
    *(_DWORD *)uint64_t buf = 67109890;
    unsigned int v32 = v9;
    __int16 v33 = 2080;
    uint64_t v34 = v10;
    __int16 v35 = 2048;
    uint64_t v36 = v11;
    __int16 v37 = 1024;
    int v38 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "CLIENT: registerForNotification, register for notification, %d, %s, desiredAccuracy, %.1lf, operatingMode, %d",  buf,  0x22u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183B460);
    }
    uint64_t v17 = qword_101934838;
    unsigned int v18 = *a3;
    __int128 v19 = sub_10100D9D8(*a3);
    uint64_t v20 = *a4;
    int v21 = *((_DWORD *)a4 + 5);
    LODWORD(v25) = 67109890;
    HIDWORD(v25) = v18;
    *(_WORD *)uint64_t v26 = 2080;
    *(void *)&_WORD v26[2] = v19;
    __int16 v27 = 2048;
    uint64_t v28 = v20;
    __int16 v29 = 1024;
    int v30 = v21;
    LODWORD(v24) = 34;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v17,  2LL,  "CLIENT: registerForNotification, register for notification, %d, %s, desiredAccuracy, %.1lf, operatingMode, %d",  &v25,  v24,  v25,  *(_DWORD *)v26);
    __int16 v23 = (uint8_t *)v22;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationProvider::registerForNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::RegInfo &)",  "%s\n",  v22);
    if (v23 != buf) {
      free(v23);
    }
  }

  if (*a3 - 1 > 1)
  {
    uint64_t v14 = a1;
    int v15 = a2;
    int v13 = (int *)a3;
  }

  else
  {
    *(_DWORD *)uint64_t buf = 0;
    int v13 = (int *)buf;
    uint64_t v14 = a1;
    int v15 = a2;
  }

  return sub_10023FEB8(v14, v15, v13, (__int128 *)a4);
}

BOOL sub_10047A484(char *a1, int a2, int *a3)
{
  int v4 = 0;
  return sub_1002406A8(a1, a2, &v4);
}

uint64_t sub_10047A4C4(uint64_t a1)
{
  if (qword_101934830 != -1) {
    dispatch_once(&qword_101934830, &stru_10183B460);
  }
  unint64_t v2 = (os_log_s *)qword_101934838;
  if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_FAULT))
  {
    BOOL v3 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t buf = 136315138;
    unint64_t v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_FAULT,  "LocationProvider,%s,Wrong registration method called!",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183B460);
    }
    uint64_t v5 = (void *)(a1 + 8);
    int v7 = 136315138;
    unint64_t v8 = v5;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  17LL,  "LocationProvider,%s,Wrong registration method called!",  (const char *)&v7);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLLocationProvider::registerForFilteredLocation(int, const CLLocationProvider_Type::Notification &, const double &)",  "%s\n",  v6);
  }

  return 0LL;
}

uint64_t sub_10047A690()
{
  return 1LL;
}

uint64_t sub_10047A698(uint64_t a1)
{
  int v3 = 2;
  if (!sub_100247620(a1, &v3, 1LL))
  {
    int v3 = 1;
    if (!sub_100247620(a1, &v3, 1LL))
    {
      int v3 = 0;
      if (!sub_100247620(a1, &v3, 1LL))
      {
        int v3 = 9;
        (*(void (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v3);
      }
    }
  }

  return 1LL;
}

BOOL sub_10047A728(uint64_t a1, int a2, unsigned int *a3, uint64_t *a4)
{
  LODWORD(v45) = a2;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v7 = v8;
  if (!v8) {
    goto LABEL_21;
  }
  signed int v10 = *a3;
  uint64_t v11 = v6;
  do
  {
    signed int v12 = *(_DWORD *)(v7 + 32);
    BOOL v13 = v12 < v10;
    if (v12 >= v10) {
      uint64_t v14 = (uint64_t *)v7;
    }
    else {
      uint64_t v14 = (uint64_t *)(v7 + 8);
    }
    if (!v13) {
      uint64_t v11 = v7;
    }
    uint64_t v7 = *v14;
  }

  while (*v14);
  if (v11 == v6) {
    goto LABEL_21;
  }
  if (v10 < *(_DWORD *)(v11 + 32)) {
    goto LABEL_21;
  }
  uint64_t v17 = *(void *)(v11 + 48);
  uint64_t v15 = v11 + 48;
  uint64_t v16 = v17;
  if (!v17) {
    goto LABEL_21;
  }
  unsigned int v18 = (uint64_t **)(v15 - 8);
  uint64_t v19 = v15;
  do
  {
    int v20 = *(_DWORD *)(v16 + 32);
    BOOL v21 = v20 < a2;
    if (v20 >= a2) {
      unint64_t v22 = (uint64_t *)v16;
    }
    else {
      unint64_t v22 = (uint64_t *)(v16 + 8);
    }
    if (!v21) {
      uint64_t v19 = v16;
    }
    uint64_t v16 = *v22;
  }

  while (*v22);
  if (v19 != v15 && *(_DWORD *)(v19 + 32) <= a2)
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183B460);
    }
    __int16 v27 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v28 = *a3;
      __int16 v29 = sub_10100D9D8(*a3);
      *(void *)uint64_t buf = &v45;
      int v30 = sub_100246B14(v18, (int *)&v45, (uint64_t)&unk_1012CF090, (_DWORD **)buf)[5];
      uint64_t v31 = *a4;
      *(_DWORD *)uint64_t buf = 67110146;
      *(_DWORD *)&uint8_t buf[4] = a2;
      __int16 v56 = 1024;
      unsigned int v57 = v28;
      __int16 v58 = 2080;
      int v59 = v29;
      __int16 v60 = 2048;
      __int128 v61 = v30;
      __int16 v62 = 2048;
      uint64_t v63 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEBUG,  "CLIENT: updateRegistrationInfoForClient, client, %d, notification, %d, %s, from desiredAccuracy, %.1lf, to, %.1lf",  buf,  0x2Cu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183B460);
      }
      uint64_t v37 = qword_101934838;
      int v38 = LODWORD(v45);
      unsigned int v39 = *a3;
      uint64_t v40 = sub_10100D9D8(v39);
      unint64_t v46 = &v45;
      BOOL v41 = sub_100246B14(v18, (int *)&v45, (uint64_t)&unk_1012CF090, (_DWORD **)&v46)[5];
      uint64_t v42 = *a4;
      LODWORD(v46) = 67110146;
      HIDWORD(v46) = v38;
      __int16 v47 = 1024;
      unsigned int v48 = v39;
      __int16 v49 = 2080;
      uint64_t v50 = v40;
      __int16 v51 = 2048;
      uint64_t v52 = v41;
      __int16 v53 = 2048;
      uint64_t v54 = v42;
      uint64_t v43 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v37,  2LL,  "CLIENT: updateRegistrationInfoForClient, client, %d, notification, %d, %s, from desiredAccuracy, %.1lf, to, %.1lf",  &v46,  44,  v44,  v45,  *(double *)&v46);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationProvider::updateRegistrationInfoForClient(int, const CLLocationProvider_Type::Notificatio n &, const CLLocationProvider_Type::RegInfo &)",  "%s\n",  v43);
    }

    *(void *)uint64_t buf = &v45;
    unsigned int v32 = sub_100246B14(v18, (int *)&v45, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
    __int128 v33 = *(_OWORD *)a4;
    *(_OWORD *)((char *)v32 + 52) = *(_OWORD *)((char *)a4 + 12);
    *(_OWORD *)(v32 + 5) = v33;
    return 1LL;
  }

  else
  {
LABEL_21:
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183B460);
    }
    __int16 v23 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v24 = *a3;
      double v25 = sub_10100D9D8(*a3);
      *(_DWORD *)uint64_t buf = 67109634;
      *(_DWORD *)&uint8_t buf[4] = a2;
      __int16 v56 = 1024;
      unsigned int v57 = v24;
      __int16 v58 = 2080;
      int v59 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "CLIENT: updateRegistrationInfoForClient, client, %d, notification, %d, %s, no notification",  buf,  0x18u);
    }

    BOOL result = sub_1002921D0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934830 != -1) {
        dispatch_once(&qword_101934830, &stru_10183B460);
      }
      uint64_t v34 = qword_101934838;
      unsigned int v35 = *a3;
      LODWORD(v46) = 67109634;
      HIDWORD(v46) = a2;
      __int16 v47 = 1024;
      unsigned int v48 = v35;
      __int16 v49 = 2080;
      uint64_t v50 = sub_10100D9D8(v35);
      uint64_t v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v34,  2LL,  "CLIENT: updateRegistrationInfoForClient, client, %d, notification, %d, %s, no notification",  &v46,  24,  v44);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual BOOL CLLocationProvider::updateRegistrationInfoForClient(int, const CLLocationProvider_Type::Notificatio n &, const CLLocationProvider_Type::RegInfo &)",  "%s\n",  v36);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_10047AC18(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v6 = sub_10047B0CC(a1, a2, a3);
  if ((_DWORD)v6)
  {
    if (*a2 <= 0x27 && ((1LL << *a2) & 0x800000041FLL) != 0)
    {
      double Current = CFAbsoluteTimeGetCurrent();
      if (*(_BYTE *)(a1 + 110))
      {
        double v9 = *(double *)(a3 + 88);
        if (v9 >= 0.0)
        {
          double v10 = v9 + *(double *)(a3 + 76);
          double v11 = v10 - Current;
          if (v10 < Current) {
            double v11 = 0.0;
          }
          else {
            double v10 = Current;
          }
          *(double *)(a3 + 76) = v10;
          *(double *)(a3 + 88) = v11;
        }

        else
        {
          *(double *)(a3 + 76) = Current;
        }
      }

      if (qword_101934A90 != -1) {
        dispatch_once(&qword_101934A90, &stru_10183B480);
      }
      signed int v12 = (os_log_s *)qword_101934A98;
      if (os_log_type_enabled((os_log_t)qword_101934A98, OS_LOG_TYPE_DEBUG))
      {
        sub_1010DDBC0(&v51, "Restored-");
        int v13 = *(char *)(a1 + 31);
        if (v13 >= 0) {
          uint64_t v14 = (const std::string::value_type *)(a1 + 8);
        }
        else {
          uint64_t v14 = *(const std::string::value_type **)(a1 + 8);
        }
        if (v13 >= 0) {
          std::string::size_type v15 = *(unsigned __int8 *)(a1 + 31);
        }
        else {
          std::string::size_type v15 = *(void *)(a1 + 16);
        }
        uint64_t v16 = std::string::append(&v51, v14, v15);
        __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
        *(void *)&__p[16] = v16->__r_.__value_.__l.__cap_;
        *(_OWORD *)std::stringbuf::string_type __p = v17;
        v16->__r_.__value_.__l.__size_ = 0LL;
        v16->__r_.__value_.__l.__cap_ = 0LL;
        v16->__r_.__value_.__r.__words[0] = 0LL;
        int v18 = __p[23];
        uint64_t v19 = *(_BYTE **)__p;
        uint64_t v20 = *(void *)(a3 + 4);
        uint64_t v21 = *(void *)(a3 + 12);
        uint64_t v22 = *(void *)(a3 + 20);
        unsigned int v23 = *(_DWORD *)(a3 + 96);
        unsigned int v24 = sub_100832C40(v23);
        double v25 = *(double *)(a3 + 76);
        uint64_t v26 = __p;
        if (v18 < 0) {
          uint64_t v26 = v19;
        }
        uint64_t v27 = *(void *)(a3 + 88);
        *(_DWORD *)uint64_t buf = 136317442;
        uint64_t v69 = v26;
        __int16 v70 = 1024;
        int v71 = 1;
        __int16 v72 = 2048;
        uint64_t v73 = v20;
        __int16 v74 = 2048;
        uint64_t v75 = v21;
        __int16 v76 = 2048;
        uint64_t v77 = v22;
        __int16 v78 = 1024;
        unsigned int v79 = v23;
        __int16 v80 = 2080;
        __int128 v81 = v24;
        __int16 v82 = 2048;
        double v83 = v25;
        __int16 v84 = 2048;
        double v85 = Current - v25;
        __int16 v86 = 2048;
        uint64_t v87 = v27;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%d,%s,LocationTimestamp,%.3f,Age,%.3f,Lifespan,%.3f,",  buf,  0x5Eu);
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
      }

      if (sub_1002921D0(117, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934A90 != -1) {
          dispatch_once(&qword_101934A90, &stru_10183B480);
        }
        uint64_t v29 = qword_101934A98;
        sub_1010DDBC0(&v50, "Restored-");
        unsigned int v32 = *(const std::string::value_type **)(a1 + 8);
        uint64_t v31 = a1 + 8;
        int v30 = v32;
        int v33 = *(char *)(v31 + 23);
        if (v33 >= 0) {
          uint64_t v34 = (const std::string::value_type *)v31;
        }
        else {
          uint64_t v34 = v30;
        }
        if (v33 >= 0) {
          std::string::size_type v35 = *(unsigned __int8 *)(v31 + 23);
        }
        else {
          std::string::size_type v35 = *(void *)(v31 + 8);
        }
        uint64_t v36 = std::string::append(&v50, v34, v35);
        __int128 v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
        v51.__r_.__value_.__l.__cap_ = v36->__r_.__value_.__l.__cap_;
        *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v37;
        v36->__r_.__value_.__l.__size_ = 0LL;
        v36->__r_.__value_.__l.__cap_ = 0LL;
        v36->__r_.__value_.__r.__words[0] = 0LL;
        int size = (char)v51.__r_.__value_.__s.__size_;
        std::string::size_type v39 = v51.__r_.__value_.__r.__words[0];
        uint64_t v40 = *(void *)(a3 + 4);
        uint64_t v41 = *(void *)(a3 + 12);
        uint64_t v42 = *(void *)(a3 + 20);
        unsigned int v43 = *(_DWORD *)(a3 + 96);
        BOOL v44 = sub_100832C40(v43);
        double v45 = *(double *)(a3 + 76);
        unint64_t v46 = &v51;
        if (size < 0) {
          unint64_t v46 = (std::string *)v39;
        }
        uint64_t v47 = *(void *)(a3 + 88);
        *(_DWORD *)std::stringbuf::string_type __p = 136317442;
        *(void *)&__p[4] = v46;
        *(_WORD *)&_BYTE __p[12] = 1024;
        *(_DWORD *)&__p[14] = 1;
        *(_WORD *)&__p[18] = 2048;
        *(void *)&__p[20] = v40;
        __int16 v54 = 2048;
        uint64_t v55 = v41;
        __int16 v56 = 2048;
        uint64_t v57 = v42;
        __int16 v58 = 1024;
        unsigned int v59 = v43;
        __int16 v60 = 2080;
        __int128 v61 = v44;
        __int16 v62 = 2048;
        double v63 = v45;
        __int16 v64 = 2048;
        double v65 = Current - v45;
        __int16 v66 = 2048;
        uint64_t v67 = v47;
        unsigned int v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v29,  2LL,  "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%d,%s,LocationTimestamp,%.3f,Age,%.3f,Lifespan,%.3f,",  __p,  94,  v49,  *(double *)&v50.__r_.__value_.__l.__data_,  *(double *)&v50.__r_.__value_.__l.__size_,  LODWORD(v50.__r_.__value_.__r.__words[2]),  v51.__r_.__value_.__l.__data_,  *(double *)&v51.__r_.__value_.__l.__size_,  *(double *)&v51.__r_.__value_.__l.__cap_,  v52);
        sub_10029211C( "LOCATION",  1LL,  0,  2LL,  "virtual BOOL CLLocationProvider::getNotification(const CLLocationProvider_Type::Notification &, CLLocationProv ider_Type::NotificationData &)",  "%s\n",  v48);
      }
    }
  }

  return v6;
}

void sub_10047B06C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (v24 < 0) {
    operator delete(v23);
  }
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10047B0CC(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      double v11 = (uint64_t *)v4;
    }
    else {
      double v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }

  while (*v11);
  if (v8 == v3) {
    return 0LL;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0LL;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0LL;
  }
  __int128 v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)a3 = *(_OWORD *)v12;
  *(_OWORD *)(a3 + 16) = v13;
  __int128 v14 = *(_OWORD *)(v12 + 32);
  __int128 v15 = *(_OWORD *)(v12 + 48);
  __int128 v16 = *(_OWORD *)(v12 + 80);
  *(_OWORD *)(a3 + 64) = *(_OWORD *)(v12 + 64);
  *(_OWORD *)(a3 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v16;
  *(_OWORD *)(a3 + 32) = v14;
  *(_OWORD *)(a3 + 48) = v15;
  __int128 v17 = *(_OWORD *)(v12 + 96);
  __int128 v18 = *(_OWORD *)(v12 + 112);
  __int128 v19 = *(_OWORD *)(v12 + 128);
  *(_OWORD *)(a3 + 14sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v12 + 140);
  *(_OWORD *)(a3 + 112) = v18;
  *(_OWORD *)(a3 + 128) = v19;
  *(_OWORD *)(a3 + 96) = v17;
  memcpy((void *)(a3 + 160), (const void *)(v12 + 160), 0x201uLL);
  sub_1000F2F30((void *)(a3 + 680), (uint64_t *)(v12 + 680));
  __int128 v21 = *(_OWORD *)(v12 + 712);
  __int128 v20 = *(_OWORD *)(v12 + 728);
  *(_OWORD *)(a3 + 696) = *(_OWORD *)(v12 + 696);
  *(_OWORD *)(a3 + 712) = v21;
  *(_OWORD *)(a3 + 728) = v20;
  __int128 v23 = *(_OWORD *)(v12 + 760);
  __int128 v22 = *(_OWORD *)(v12 + 776);
  __int128 v24 = *(_OWORD *)(v12 + 744);
  *(void *)(a3 + 789) = *(void *)(v12 + 789);
  *(_OWORD *)(a3 + 76sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v23;
  *(_OWORD *)(a3 + 776) = v22;
  *(_OWORD *)(a3 + 744) = v24;
  sub_1000F2F30((void *)(a3 + 800), (uint64_t *)(v12 + 800));
  *(_OWORD *)(a3 + 816) = *(_OWORD *)(v12 + 816);
  __int128 v25 = *(_OWORD *)(v12 + 880);
  __int128 v27 = *(_OWORD *)(v12 + 832);
  __int128 v26 = *(_OWORD *)(v12 + 848);
  *(_OWORD *)(a3 + 864) = *(_OWORD *)(v12 + 864);
  *(_OWORD *)(a3 + 88sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v25;
  *(_OWORD *)(a3 + 832) = v27;
  *(_OWORD *)(a3 + 848) = v26;
  *(void *)(a3 + 896) = *(void *)(v12 + 896);
  std::string::operator=((std::string *)(a3 + 904), (const std::string *)(v12 + 904));
  __int128 v29 = *(_OWORD *)(v12 + 944);
  __int128 v28 = *(_OWORD *)(v12 + 960);
  *(_OWORD *)(a3 + 928) = *(_OWORD *)(v12 + 928);
  *(_OWORD *)(a3 + 944) = v29;
  *(_OWORD *)(a3 + 96sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v28;
  __int128 v30 = *(_OWORD *)(v12 + 1024);
  __int128 v32 = *(_OWORD *)(v12 + 976);
  __int128 v31 = *(_OWORD *)(v12 + 992);
  *(_OWORD *)(a3 + 1008) = *(_OWORD *)(v12 + 1008);
  *(_OWORD *)(a3 + 1024) = v30;
  *(_OWORD *)(a3 + 976) = v32;
  *(_OWORD *)(a3 + 992) = v31;
  __int128 v33 = *(_OWORD *)(v12 + 1056);
  __int128 v34 = *(_OWORD *)(v12 + 1072);
  __int128 v35 = *(_OWORD *)(v12 + 1088);
  *(_OWORD *)(a3 + 104sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(v12 + 1040);
  *(_OWORD *)(a3 + 1088) = v35;
  *(_OWORD *)(a3 + 1072) = v34;
  *(_OWORD *)(a3 + 1056) = v33;
  __int128 v36 = *(_OWORD *)(v12 + 1120);
  __int128 v37 = *(_OWORD *)(v12 + 1136);
  uint64_t v38 = *(void *)(v12 + 1152);
  *(_OWORD *)(a3 + 1104) = *(_OWORD *)(v12 + 1104);
  *(void *)(a3 + 1152) = v38;
  *(_OWORD *)(a3 + 1136) = v37;
  *(_OWORD *)(a3 + 112sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v36;
  sub_1000F2F30((void *)(a3 + 1160), (uint64_t *)(v12 + 1160));
  *(_OWORD *)(a3 + 1176) = *(_OWORD *)(v12 + 1176);
  __int128 v39 = *(_OWORD *)(v12 + 1240);
  __int128 v41 = *(_OWORD *)(v12 + 1192);
  __int128 v40 = *(_OWORD *)(v12 + 1208);
  *(_OWORD *)(a3 + 1224) = *(_OWORD *)(v12 + 1224);
  *(_OWORD *)(a3 + 124sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v39;
  *(_OWORD *)(a3 + 1192) = v41;
  *(_OWORD *)(a3 + 1208) = v40;
  __int128 v42 = *(_OWORD *)(v12 + 1304);
  __int128 v44 = *(_OWORD *)(v12 + 1256);
  __int128 v43 = *(_OWORD *)(v12 + 1272);
  *(_OWORD *)(a3 + 1288) = *(_OWORD *)(v12 + 1288);
  *(_OWORD *)(a3 + 1304) = v42;
  *(_OWORD *)(a3 + 1256) = v44;
  *(_OWORD *)(a3 + 1272) = v43;
  double v45 = *(void **)(a3 + 1320);
  *(void *)(a3 + 132sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(id *)(v12 + 1320);

  *(_OWORD *)(a3 + 1328) = *(_OWORD *)(v12 + 1328);
  __int128 v46 = *(_OWORD *)(v12 + 1344);
  __int128 v47 = *(_OWORD *)(v12 + 1360);
  __int128 v48 = *(_OWORD *)(v12 + 1376);
  *(_OWORD *)(a3 + 1392) = *(_OWORD *)(v12 + 1392);
  *(_OWORD *)(a3 + 1376) = v48;
  *(_OWORD *)(a3 + 136sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v47;
  *(_OWORD *)(a3 + 1344) = v46;
  __int128 v49 = *(_OWORD *)(v12 + 1408);
  __int128 v50 = *(_OWORD *)(v12 + 1424);
  __int128 v51 = *(_OWORD *)(v12 + 1440);
  *(_OWORD *)(a3 + 1456) = *(_OWORD *)(v12 + 1456);
  *(_OWORD *)(a3 + 144sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v51;
  *(_OWORD *)(a3 + 1424) = v50;
  *(_OWORD *)(a3 + 1408) = v49;
  __int128 v52 = *(_OWORD *)(v12 + 1472);
  __int128 v53 = *(_OWORD *)(v12 + 1488);
  __int128 v54 = *(_OWORD *)(v12 + 1504);
  *(void *)(a3 + 152sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(v12 + 1520);
  *(_OWORD *)(a3 + 1504) = v54;
  *(_OWORD *)(a3 + 1488) = v53;
  *(_OWORD *)(a3 + 1472) = v52;
  return 1LL;
}

uint64_t sub_10047B310(uint64_t a1, _OWORD *a2)
{
  int v19 = 0;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 128LL))(a1, &v19, v20);
  if ((_DWORD)v4)
  {
    __int128 v5 = v20[7];
    a2[6] = v20[6];
    a2[7] = v5;
    a2[8] = v21[0];
    *(_OWORD *)((char *)a2 + 14sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)((char *)v21 + 12);
    __int128 v6 = v20[3];
    a2[2] = v20[2];
    a2[3] = v6;
    __int128 v7 = v20[5];
    a2[4] = v20[4];
    a2[5] = v7;
    __int128 v8 = v20[1];
    *a2 = v20[0];
    a2[1] = v8;
  }

  int v9 = v26;
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      unint64_t v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  if (v25 < 0) {
    operator delete(v24);
  }
  uint64_t v12 = v23;
  if (v23)
  {
    __int128 v13 = (unint64_t *)&v23->__shared_owners_;
    do
      unint64_t v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }

  __int128 v15 = v22;
  if (v22)
  {
    __int128 v16 = (unint64_t *)&v22->__shared_owners_;
    do
      unint64_t v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

  return v4;
}

void sub_10047B478(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10047B48C(uint64_t a1, uint64_t a2)
{
  int v18 = 0;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, int *, _BYTE *))(*(void *)a1 + 128LL))(a1, &v18, v19);
  if ((_DWORD)v4)
  {
    memcpy((void *)a2, v20, 0x201uLL);
    sub_1000F2F30((void *)(a2 + 520), &v21);
    __int128 v5 = v28[0];
    *(_OWORD *)(a2 + 60sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v27;
    *(_OWORD *)(a2 + 616) = v5;
    *(void *)(a2 + 629) = *(void *)((char *)v28 + 13);
    __int128 v6 = v24;
    *(_OWORD *)(a2 + 536) = v23;
    *(_OWORD *)(a2 + 552) = v6;
    __int128 v7 = v26;
    *(_OWORD *)(a2 + 568) = v25;
    *(_OWORD *)(a2 + 584) = v7;
  }

  __int128 v8 = v32;
  if (v32)
  {
    p_shared_owners = (unint64_t *)&v32->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  if (v31 < 0) {
    operator delete(v30);
  }
  unint64_t v11 = v29;
  if (v29)
  {
    uint64_t v12 = (unint64_t *)&v29->__shared_owners_;
    do
      unint64_t v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }

  unint64_t v14 = v22;
  if (v22)
  {
    __int128 v15 = (unint64_t *)&v22->__shared_owners_;
    do
      unint64_t v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

  return v4;
}

void sub_10047B604(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10047B618(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 232LL))(a1);
}

void sub_10047B624(char *a1, int *a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  if (!a1[111])
  {
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183B460);
    }
    int v18 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      int v19 = a1 + 8;
      if (a1[31] < 0) {
        int v19 = (void *)*v19;
      }
      *(_DWORD *)uint64_t buf = 136380675;
      __int128 v53 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEBUG,  "LocationProvider,#Warning. Provider %{private}s is not enabled. Check defaults writes or internal settings",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183B460);
    }
    __int128 v20 = a1 + 8;
    if (a1[31] < 0) {
      __int128 v20 = (void *)*v20;
    }
    *(_DWORD *)__int128 v51 = 136380675;
    *(void *)&v51[4] = v20;
    uint64_t v21 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationProvider,#Warning. Provider %{private}s is not enabled. Check defaults writes or internal settings",  v51,  12,  *(_OWORD *)v51);
    goto LABEL_49;
  }

  int v10 = *a2;
  if (a6)
  {
    if (a1[109]) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }

  if (a1[109])
  {
LABEL_39:
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183B460);
    }
    __int128 v22 = (os_log_s *)qword_101934838;
    if (os_log_type_enabled((os_log_t)qword_101934838, OS_LOG_TYPE_DEBUG))
    {
      __int128 v23 = a1 + 8;
      if (a1[31] < 0) {
        __int128 v23 = (void *)*v23;
      }
      *(_DWORD *)uint64_t buf = 136315138;
      __int128 v53 = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "LocationProvider,Ignoring location for %s",  buf,  0xCu);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934830 != -1) {
      dispatch_once(&qword_101934830, &stru_10183B460);
    }
    uint64_t v21 = _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934838,  2LL,  "LocationProvider,Ignoring location for %s",  v51);
LABEL_49:
    __int128 v24 = (uint8_t *)v21;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationProvider::notifyClientsWithData(const CLLocationProvider_Type::Notification &, const CLLoca tionProvider_Type::NotificationData &, BOOL, int, BOOL)",  "%s\n");
    goto LABEL_90;
  }

void sub_10047C2A0(uint64_t a1, int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    int v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183B5A0);
    }
    unint64_t v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = (void *)(a1 + 8);
      unint64_t v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)uint64_t buf = 68289794;
      *(_DWORD *)double v65 = 0;
      *(_WORD *)&v65[4] = 2082;
      *(void *)&v65[6] = "";
      *(_WORD *)&v65[14] = 2082;
      *(void *)&v65[16] = "activity";
      __int16 v66 = 2082;
      uint64_t v67 = v12;
      __int16 v68 = 2050;
      uint64_t v69 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    __int128 v15 = (__n128 *)(a1 + 64);
    int v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    uint64_t v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        __int128 v20 = (__n128 **)v14;
      }
      else {
        __int128 v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        uint64_t v17 = v14;
      }
      int v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)__int16 v70 = &v70[8];
      memset(&v70[8], 0, 24);
      int v71 = 0LL;
      sub_10047E19C((uint64_t)buf, a2, (uint64_t)v70);
      uint64_t v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      uint64_t v21 = v69;
      if (v69)
      {
        p_shared_owners = (unint64_t *)&v69->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&v65[4], *(void **)&v65[12]);
      __int128 v24 = v71;
      if (v71)
      {
        __int128 v25 = (unint64_t *)&v71->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v70, *(void **)&v70[8]);
    }

    if (a4)
    {
      sub_100247A94(a3, buf);
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      int v27 = *(std::__shared_weak_count **)&v65[4];
      if (*(void *)&v65[4])
      {
        uint64_t v28 = (unint64_t *)(*(void *)&v65[4] + 8LL);
        do
          unint64_t v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    __int128 v30 = sub_10047DD30(a3);
    if (a5 == -1)
    {
      sub_10047DDC8((void *)a1, a2, v30);
    }

    else
    {
      uint64_t v31 = a1 + 88;
      uint64_t v32 = *(void *)(a1 + 88);
      if (!v32) {
        goto LABEL_48;
      }
      uint64_t v33 = a1 + 88;
      do
      {
        int v34 = *(_DWORD *)(v32 + 32);
        BOOL v35 = v34 < a5;
        if (v34 >= a5) {
          __int128 v36 = (uint64_t *)v32;
        }
        else {
          __int128 v36 = (uint64_t *)(v32 + 8);
        }
        if (!v35) {
          uint64_t v33 = v32;
        }
        uint64_t v32 = *v36;
      }

      while (*v36);
      if (v33 == v31 || *(_DWORD *)(v33 + 32) > a5) {
LABEL_48:
      }
        uint64_t v33 = a1 + 88;
      uint64_t v62 = v33;
      unint64_t v37 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v38 = *a2;
      uint64_t v39 = (__n128 *)(a1 + 64);
      do
      {
        int v40 = *(_DWORD *)(v37 + 32);
        BOOL v41 = v40 < v38;
        if (v40 >= v38) {
          int v42 = (unint64_t *)v37;
        }
        else {
          int v42 = (unint64_t *)(v37 + 8);
        }
        if (!v41) {
          uint64_t v39 = (__n128 *)v37;
        }
        unint64_t v37 = *v42;
      }

      while (*v42);
      if (v39 == v15 || v38 < (signed __int32)v39[2].n128_u32[0])
      {
LABEL_59:
        __int128 v61 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10183B5A0);
        }
        uint64_t v43 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v44 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, int *))(*(void *)a1 + 160LL))(v70, a1, a2);
          if (v70[23] >= 0) {
            double v45 = v70;
          }
          else {
            double v45 = *(_BYTE **)v70;
          }
          *(_DWORD *)uint64_t buf = 136315650;
          *(void *)double v65 = v44;
          *(_WORD *)&v65[8] = 1024;
          *(_DWORD *)&v65[10] = a5;
          *(_WORD *)&v65[14] = 2080;
          *(void *)&v65[16] = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v70[23] & 0x80000000) != 0) {
            operator delete(*(void **)v70);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_10183B5A0);
          }
          __int128 v46 = (void *)(a1 + 8);
          uint64_t v47 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v60 >= 0) {
            __int128 v48 = __p;
          }
          else {
            __int128 v48 = (void **)__p[0];
          }
          *(_DWORD *)__int16 v70 = 136315650;
          *(void *)&v70[4] = v46;
          *(_WORD *)&v70[12] = 1024;
          *(_DWORD *)&_OWORD v70[14] = a5;
          *(_WORD *)&v70[18] = 2080;
          *(void *)&v70[20] = v48;
          __int128 v49 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v47,  2LL,  "%s; client %d has deregistered, not notifying %s",
                          v70,
                          28,
                          v58);
          if (v60 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLLocationProvider_Type::Notification, CLLocationProvider_Type::NotificationData, ch ar, CLLocationProvider_Type::RegInfo>::notifyClientsWithData(const Notification_T &, const NotificationData_ T &, BOOL, int, BOOL) [Notification_T = CLLocationProvider_Type::Notification, NotificationData_T = CLLocati onProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = CLLocationProvider_Type::RegInfo]",  "%s\n",  v49);
        }

        goto LABEL_83;
      }

      __int128 v61 = v39;
      if (v33 == v31) {
        goto LABEL_60;
      }
      uint64_t v52 = v39[3].n128_i64[0];
      __int128 v50 = v39 + 3;
      __int128 v51 = (__n128 *)v52;
      if (!v52) {
        goto LABEL_60;
      }
      int v53 = *(_DWORD *)(v33 + 32);
      __int16 v54 = v50;
      do
      {
        int v55 = v51[2].n128_i32[0];
        BOOL v56 = v55 < v53;
        if (v55 >= v53) {
          uint64_t v57 = v51;
        }
        else {
          uint64_t v57 = (__n128 *)&v51->n128_i8[8];
        }
        if (!v56) {
          __int16 v54 = v51;
        }
        __int128 v51 = (__n128 *)v57->n128_u64[0];
      }

      while (v57->n128_u64[0]);
      sub_100246A38((_BYTE *)a1, (uint64_t)&v62, (uint64_t)&v61, v30);
    }

void sub_10047C8BC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_10047C908(uint64_t a1, _OWORD *a2)
{
  __int128 v4 = a2[7];
  void v18[6] = a2[6];
  _DWORD v18[7] = v4;
  v19[0] = a2[8];
  *(_OWORD *)((char *)v19 + 12) = *(_OWORD *)((char *)a2 + 140);
  __int128 v5 = a2[3];
  _OWORD v18[2] = a2[2];
  void v18[3] = v5;
  __int128 v6 = a2[5];
  v18[4] = a2[4];
  v18[5] = v6;
  __int128 v7 = a2[1];
  v18[0] = *a2;
  v18[1] = v7;
  int v17 = 0;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136LL))(a1, &v17, v18);
  int v17 = 2;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136LL))(a1, &v17, v18);
  int v17 = 1;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136LL))(a1, &v17, v18);
  int v17 = 3;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136LL))(a1, &v17, v18);
  int v17 = 4;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136LL))(a1, &v17, v18);
  int v17 = 39;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136LL))(a1, &v17, v18);
  int v17 = 10;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136LL))(a1, &v17, v18);

  __int128 v8 = v24;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  if (v23 < 0) {
    operator delete(v22);
  }
  unint64_t v11 = v21;
  if (v21)
  {
    uint64_t v12 = (unint64_t *)&v21->__shared_owners_;
    do
      unint64_t v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }

  int v14 = v20;
  if (v20)
  {
    __int128 v15 = (unint64_t *)&v20->__shared_owners_;
    do
      unint64_t v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

void sub_10047CB14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_10047CB40(uint64_t a1)
{
  int v3 = 0;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v3);
  int v3 = 2;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v3);
  int v3 = 1;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v3);
  int v3 = 3;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v3);
  int v3 = 4;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v3);
  int v3 = 39;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v3);
  int v3 = 10;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v3);
  int v3 = 5;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 120LL))(a1, &v3);
}

void sub_10047CC3C(uint64_t a1, int *a2)
{
  if (*a2 == 9 && *(_BYTE *)(a1 + 112)) {
    *(_BYTE *)(a1 + 112) = 0;
  }
  sub_100230DB8(a1, a2);
}

void *sub_10047CC58@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  return sub_1010DDBC0(a2, __str);
}

uint64_t sub_10047CCD0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  switch(*a3)
  {
    case 1:
      int v10 = 0;
      int v5 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104LL))(a1, a2, &v10);
      return v5 ^ 1u;
    case 2:
      int v10 = 1;
      int v9 = 0;
      int v5 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104LL))(a1, a2, &v9);
      return v5 ^ 1u;
    case 3:
      int v10 = 2;
      int v9 = 1;
      int v8 = 0;
      int v5 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104LL))(a1, a2, &v8);
      return v5 ^ 1u;
    case 4:
      goto LABEL_4;
    default:
      if (*a3 != 39) {
        return 1LL;
      }
LABEL_4:
      int v10 = 3;
      int v9 = 2;
      int v8 = 1;
      int v7 = 0;
      int v5 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104LL))(a1, a2, &v7);
      return v5 ^ 1u;
  }

uint64_t sub_10047CE6C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 112);
}

void sub_10047CE74(char *a1, _OWORD *a2, uint64_t a3)
{
  if (qword_1019349F0 != -1) {
    dispatch_once(&qword_1019349F0, &stru_10183B4A0);
  }
  __int128 v6 = (os_log_s *)qword_1019349F8;
  if (os_log_type_enabled((os_log_t)qword_1019349F8, OS_LOG_TYPE_DEBUG))
  {
    int v7 = a1 + 8;
    if (a1[31] < 0) {
      int v7 = (void *)*v7;
    }
    *(_DWORD *)uint64_t buf = 136315138;
    *(void *)&uint8_t buf[4] = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "LocationProvider,Sending through simulated location for %s",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349F0 != -1) {
      dispatch_once(&qword_1019349F0, &stru_10183B4A0);
    }
    __int128 v24 = a1 + 8;
    if (a1[31] < 0) {
      __int128 v24 = (void *)*v24;
    }
    int v26 = 136315138;
    int v27 = v24;
    id v25 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349F8,  2LL,  "LocationProvider,Sending through simulated location for %s",  (const char *)&v26);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLLocationProvider::sendSimulatedLocation(const CLDaemonLocation &, const CLDaemonLocationPrivate &)",  "%s\n",  v25);
  }

  sub_100246564((uint64_t)buf);
  __int128 v8 = a2[7];
  __int128 v34 = a2[6];
  __int128 v35 = v8;
  v36[0] = a2[8];
  *(_OWORD *)((char *)v36 + 12) = *(_OWORD *)((char *)a2 + 140);
  __int128 v9 = a2[3];
  __int128 v30 = a2[2];
  __int128 v31 = v9;
  __int128 v10 = a2[5];
  __int128 v32 = a2[4];
  __int128 v33 = v10;
  __int128 v11 = a2[1];
  *(_OWORD *)uint64_t buf = *a2;
  __int128 v29 = v11;
  memcpy(v37, (const void *)a3, 0x201uLL);
  sub_1000F2F30(&v38, (uint64_t *)(a3 + 520));
  __int128 v12 = *(_OWORD *)(a3 + 616);
  __int128 v44 = *(_OWORD *)(a3 + 600);
  v45[0] = v12;
  *(void *)((char *)v45 + 13) = *(void *)(a3 + 629);
  __int128 v13 = *(_OWORD *)(a3 + 552);
  __int128 v40 = *(_OWORD *)(a3 + 536);
  __int128 v41 = v13;
  __int128 v14 = *(_OWORD *)(a3 + 584);
  __int128 v42 = *(_OWORD *)(a3 + 568);
  __int128 v43 = v14;
  v37[43] = sub_101171D4C();
  int v26 = 0;
  (*(void (**)(char *, int *, uint8_t *, void, uint64_t, uint64_t))(*(void *)a1 + 152LL))( a1,  &v26,  buf,  0LL,  0xFFFFFFFFLL,  1LL);

  __int128 v15 = v49;
  if (v49)
  {
    p_shared_owners = (unint64_t *)&v49->__shared_owners_;
    do
      unint64_t v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }

  if (v48 < 0) {
    operator delete(__p);
  }
  signed __int32 v18 = v46;
  if (v46)
  {
    BOOL v19 = (unint64_t *)&v46->__shared_owners_;
    do
      unint64_t v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }

  uint64_t v21 = v39;
  if (v39)
  {
    __int128 v22 = (unint64_t *)&v39->__shared_owners_;
    do
      unint64_t v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }

void sub_10047D1BC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void sub_10047D1EC(uint64_t a1)
{
  int v11 = 9;
  (*(void (**)(uint64_t, int *, _BYTE *, void, uint64_t, uint64_t))(*(void *)a1 + 152LL))( a1,  &v11,  v12,  0LL,  0xFFFFFFFFLL,  1LL);

  unint64_t v2 = v17;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      unint64_t v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }

  if (v16 < 0) {
    operator delete(v15);
  }
  int v5 = v14;
  if (v14)
  {
    __int128 v6 = (unint64_t *)&v14->__shared_owners_;
    do
      unint64_t v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }

  __int128 v8 = v13;
  if (v13)
  {
    __int128 v9 = (unint64_t *)&v13->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

void sub_10047D314(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10047D328(char *a1, int a2)
{
  if (qword_1019349F0 != -1) {
    dispatch_once(&qword_1019349F0, &stru_10183B4A0);
  }
  unint64_t v4 = (os_log_s *)qword_1019349F8;
  if (os_log_type_enabled((os_log_t)qword_1019349F8, OS_LOG_TYPE_DEBUG))
  {
    int v5 = "enabled";
    if (!a2) {
      int v5 = "disabled";
    }
    __int128 v6 = a1 + 8;
    if (a1[31] < 0) {
      __int128 v6 = (void *)*v6;
    }
    *(_DWORD *)uint64_t buf = 136315394;
    unint64_t v37 = v5;
    __int16 v38 = 2080;
    uint64_t v39 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "LocationProvider,Simulation is now %s for %s",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349F0 != -1) {
      dispatch_once(&qword_1019349F0, &stru_10183B4A0);
    }
    unint64_t v17 = "enabled";
    if (!a2) {
      unint64_t v17 = "disabled";
    }
    id v18 = a1 + 8;
    if (a1[31] < 0) {
      id v18 = (void *)*v18;
    }
    int v25 = 136315394;
    int v26 = v17;
    __int16 v27 = 2080;
    uint64_t v28 = v18;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349F8,  2LL,  "LocationProvider,Simulation is now %s for %s",  (const char *)&v25,  22);
    unint64_t v20 = (uint8_t *)v19;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLLocationProvider::setSimulationEnabled(BOOL)", "%s\n", v19);
    if (v20 != buf) {
      free(v20);
    }
  }

  a1[109] = a2;
  *(_DWORD *)uint64_t buf = 9;
  (*(void (**)(char *, uint8_t *))(*(void *)a1 + 120LL))(a1, buf);
  *(_DWORD *)uint64_t buf = 0;
  (*(void (**)(char *, uint8_t *))(*(void *)a1 + 120LL))(a1, buf);
  a1[112] = 0;
  sub_100246564((uint64_t)&v25);
  char v31 = a1[109];
  if (qword_1019349F0 != -1) {
    dispatch_once(&qword_1019349F0, &stru_10183B4A0);
  }
  unint64_t v7 = (os_log_s *)qword_1019349F8;
  if (os_log_type_enabled((os_log_t)qword_1019349F8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "LocationProvider,Notifying", buf, 2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349F0 != -1) {
      dispatch_once(&qword_1019349F0, &stru_10183B4A0);
    }
    v24[0] = 0;
    LODWORD(v23) = 2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349F8,  2LL,  "LocationProvider,Notifying",  v24,  v23);
    __int128 v22 = (uint8_t *)v21;
    sub_10029211C("Generic", 1LL, 0, 2LL, "virtual void CLLocationProvider::setSimulationEnabled(BOOL)", "%s\n", v21);
    if (v22 != buf) {
      free(v22);
    }
  }

  *(_DWORD *)uint64_t buf = 13;
  (*(void (**)(char *, uint8_t *, int *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &v25,  1LL,  0xFFFFFFFFLL,  0LL);

  __int128 v8 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      unint64_t v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }

  if (v33 < 0) {
    operator delete(__p);
  }
  int v11 = v30;
  if (v30)
  {
    __int128 v12 = (unint64_t *)&v30->__shared_owners_;
    do
      unint64_t v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }

  __int128 v14 = v29;
  if (v29)
  {
    __int128 v15 = (unint64_t *)&v29->__shared_owners_;
    do
      unint64_t v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }

void sub_10047D7AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t sub_10047D7E0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 11sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a2;
  return result;
}

uint64_t sub_10047D7E8(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v2 = a1 + 64;
  uint64_t v3 = v4;
  if (!v4) {
    return 0LL;
  }
  uint64_t v5 = v2;
  do
  {
    int v6 = *(_DWORD *)(v3 + 32);
    BOOL v7 = v6 < a2;
    if (v6 >= a2) {
      __int128 v8 = (uint64_t *)v3;
    }
    else {
      __int128 v8 = (uint64_t *)(v3 + 8);
    }
    if (!v7) {
      uint64_t v5 = v3;
    }
    uint64_t v3 = *v8;
  }

  while (*v8);
  if (v5 == v2 || *(_DWORD *)(v5 + 32) > a2) {
    return 0LL;
  }
  unint64_t v10 = *(void **)(v5 + 40);
  int v11 = (void *)(v5 + 48);
  uint64_t result = 11LL;
  if (v10 != v11)
  {
    do
    {
      int v12 = *((_DWORD *)v10 + 15);
      if (v12 < (int)result)
      {
        uint64_t result = *((unsigned int *)v10 + 15);
        if (!v12) {
          break;
        }
      }

      unint64_t v13 = (void *)v10[1];
      if (v13)
      {
        do
        {
          __int128 v14 = v13;
          unint64_t v13 = (void *)*v13;
        }

        while (v13);
      }

      else
      {
        do
        {
          __int128 v14 = (void *)v10[2];
          BOOL v15 = *v14 == (void)v10;
          unint64_t v10 = v14;
        }

        while (!v15);
      }

      unint64_t v10 = v14;
    }

    while (v14 != v11);
  }

  return result;
}

void *sub_10047D890(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = (void *)sub_10047D8EC(a1, 0LL, a2, a3, a4, a5);
  void *result = &off_10183B418;
  return result;
}

void *sub_10047D8C8(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (void *)sub_10047D8EC(a1, a2, a3, a4, a5, a6);
  void *result = &off_10183B418;
  return result;
}

uint64_t sub_10047D8EC(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_10182C3D8;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  else {
    int v12 = (uint64_t *)*a3;
  }
  id v13 = objc_msgSend( objc_msgSend(a4, "vendor"),  "proxyForService:",  +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12));
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a4, "silo"));
  return a1;
}

void *sub_10047D9C0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = (void *)sub_10047D9E4(a1, a2, a3, a4, a5);
  void *result = &off_10183B418;
  return result;
}

uint64_t sub_10047D9E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = off_10182C3D8;
  *(void *)(a1 + 8) = -[CLNotifierClientAdapter initWithClient:]( objc_alloc(&OBJC_CLASS___CLNotifierClientAdapter),  "initWithClient:",  a1);
  *(void *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = a5;
  [a3 silo];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 80LL))(a2);
  BOOL v19 = &OBJC_PROTOCOL___CLIntersiloServiceProtocol;
  objc_msgSend( +[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface"),  "extendSelectorInfoWithProtocol:bases:",  &OBJC_PROTOCOL___CLNotifierServiceProtocol,  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v19, 1));
  id v18 = &OBJC_PROTOCOL___CLIntersiloClientProtocol;
  objc_msgSend( +[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface"),  "extendSelectorInfoWithProtocol:bases:",  &OBJC_PROTOCOL___CLNotifierServiceClientProtocol,  +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v18, 1));
  id v11 = [a3 silo];
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C(__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    *(_OWORD *)std::stringbuf::string_type __p = *(_OWORD *)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 24);
  }

  if (v17 >= 0) {
    int v12 = __p;
  }
  else {
    int v12 = (void **)__p[0];
  }
  id v13 = +[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:]( &OBJC_CLASS___CLIntersiloProxy,  "proxyForRecipientObject:inSilo:recipientName:",  v10,  v11,  +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v12, __p[0], __p[1], v17));
  *(void *)(a1 + 16) = v13;
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    id v13 = *(id *)(a1 + 16);
  }

  id v14 = v13;
  objc_msgSend(*(id *)(a1 + 16), "registerDelegate:inSilo:", *(void *)(a1 + 8), objc_msgSend(a3, "silo"));
  return a1;
}

void sub_10047DBE0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_10047DC04(uint64_t a1, unsigned int *a2, _OWORD *a3)
{
  uint64_t v5 = sub_100419014(a3);
  return _[*(id *)(a1 + 16) updateNotification:*a2 withRegistrationInfo:v5 forClient:*(void *)(a1 + 8)];
}

id sub_10047DC38(uint64_t a1)
{
  return [*(id *)(a1 + 16) start];
}

id sub_10047DC40(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 16) setSimulationEnabled:a2];
}

void sub_10047DC4C(id a1)
{
  qword_101934838 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_10047DC78(id a1)
{
  qword_101934A98 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

void sub_10047DCA4(id a1)
{
  qword_1019349F8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Simulation");
}

__n128 sub_10047DCD0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 112) = v2;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a2 + 14sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)(a1 + 172);
  __int128 v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 48) = v3;
  __int128 v4 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  __int128 v6 = *(_OWORD *)(a1 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v6;
  return result;
}

void sub_10047DD04(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

CLCppContainer *sub_10047DD30(uint64_t a1)
{
  __int128 v2 = operator new(0x5F8uLL);
  sub_100246C40((uint64_t)v2, a1);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10047E35C;
  void v4[3] = &unk_10181D3D0;
  void v4[4] = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:",  v2,  v4,  1LL,  1528LL);
}

void sub_10047DDB4(_Unwind_Exception *a1)
{
}

void sub_10047DDC8(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      __int128 v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          int v12 = (uint64_t *)v4;
        }
        else {
          int v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          __int128 v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        id v50 = v9;
        id v13 = sub_100246EF4(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        id v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          BOOL v15 = a1 + 11;
          unint64_t v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 8);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                __int128 v22 = (uint64_t *)v17;
              }
              else {
                __int128 v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              __int128 v49 = v19;
              sub_100246A38(a1, (uint64_t)&v49, (uint64_t)&v50, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              __int128 v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  __int128 v32 = (uint64_t *)v27;
                }
                else {
                  __int128 v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  __int128 v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              id v50 = v29;
              uint64_t v34 = v29[6];
              id v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                id v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 32);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    uint64_t v39 = (uint64_t *)v36;
                  }
                  else {
                    uint64_t v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    id v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 8))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 32);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      __int128 v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      __int128 v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      id v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  __int128 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      id v14 = v43;
                      __int128 v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      id v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      id v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              __int128 v49 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10183B5A0);
              }
              __int128 v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                int v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 8);
                *(_DWORD *)uint64_t buf = 136446466;
                BOOL v56 = v25;
                __int16 v57 = 1026;
                int v58 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10183B5A0);
                }
                double v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 8);
                int v51 = 136446466;
                uint64_t v52 = v45;
                __int16 v53 = 1026;
                int v54 = v46;
                LODWORD(v48) = 18;
                uint64_t v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                                &v51,
                                v48);
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLLocationProvider_Type::Notification, CLLocationProvider_Type::NotificationData, char , CLLocationProvider_Type::RegInfo>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [ Notification_T = CLLocationProvider_Type::Notification, NotificationData_T = CLLocationProvider_Type:: NotificationData, NotificationInfo_T = char, RegistrationInfo_T = CLLocationProvider_Type::RegInfo]",  "%s\n",  v47);
              }
            }
          }

          while (v14 != v50 + 6);
        }
      }
    }
  }

uint64_t sub_10047E19C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_DWORD *)a1 = *a2;
  sub_10047E1F8(a1 + 8, a3);
  uint64_t v5 = *(void *)(a3 + 32);
  *(void *)(a1 + 32) = *(void *)(a3 + 24);
  *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v5;
  if (v5)
  {
    __int128 v6 = (unint64_t *)(v5 + 8);
    do
      unint64_t v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a3 + 40);
  return a1;
}

uint64_t sub_10047E1F8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(void *)a1 = a1 + 8;
  sub_10047E24C((_OWORD *)a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_10047E234(_Unwind_Exception *a1)
{
}

_OWORD *sub_10047E24C(_OWORD *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    __int128 v6 = (uint64_t *)result + 1;
    do
    {
      __n128 result = sub_10047E2D0(v5, v6, v4 + 8, (uint64_t)(v4 + 8));
      unint64_t v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          int v8 = v7;
          unint64_t v7 = *(int **)v7;
        }

        while (v7);
      }

      else
      {
        do
        {
          int v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          uint64_t v4 = v8;
        }

        while (!v9);
      }

      uint64_t v4 = v8;
    }

    while (v8 != a3);
  }

  return result;
}

_OWORD *sub_10047E2D0(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  __int128 v6 = sub_1000EBE2C(a1, a2, &v12, &v11, a3);
  unint64_t v7 = (_OWORD *)*v6;
  if (!*v6)
  {
    int v8 = (uint64_t **)v6;
    unint64_t v7 = operator new(0x48uLL);
    __int128 v9 = *(_OWORD *)(a4 + 16);
    _DWORD v7[2] = *(_OWORD *)a4;
    v7[3] = v9;
    *((void *)v7 + 8) = *(void *)(a4 + 32);
    sub_1000085FC(a1, (uint64_t)v12, v8, (uint64_t *)v7);
  }

  return v7;
}

void sub_10047E35C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {

    sub_10000AE14(v1 + 1160);
    sub_10000AE14(v1 + 800);
    sub_10000AE14(v1 + 680);
    operator delete((void *)v1);
  }

void sub_10047E3C0(std::string *a1@<X8>)
{
  uint64_t v2 = 0LL;
  a1->__r_.__value_.__r.__words[0] = 0LL;
  a1->__r_.__value_.__l.__size_ = 0LL;
  a1->__r_.__value_.__l.__cap_ = 0LL;
  do
  {
    std::string::size_type size = a1->__r_.__value_.__s.__size_;
    if ((size & 0x80u) != 0LL) {
      std::string::size_type size = a1->__r_.__value_.__l.__size_;
    }
    if (size)
    {
      v8.__r_.__value_.__s.__size_ = 2;
      strcpy((char *)&v8, ", ");
      uint64_t v4 = std::string::append(&v8, off_10183B658[v2]);
      __int128 v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      int64_t cap = v4->__r_.__value_.__l.__cap_;
      *(_OWORD *)std::stringbuf::string_type __p = v5;
      v4->__r_.__value_.__l.__size_ = 0LL;
      v4->__r_.__value_.__l.__cap_ = 0LL;
      v4->__r_.__value_.__r.__words[0] = 0LL;
      if (cap >= 0) {
        __int128 v6 = __p;
      }
      else {
        __int128 v6 = (void **)__p[0];
      }
      if (cap >= 0) {
        std::string::size_type v7 = HIBYTE(cap);
      }
      else {
        std::string::size_type v7 = (std::string::size_type)__p[1];
      }
      std::string::append(a1, (const std::string::value_type *)v6, v7);
      if (SHIBYTE(cap) < 0) {
        operator delete(__p[0]);
      }
    }

    else
    {
      std::string::append(a1, off_10183B658[v2]);
    }

    ++v2;
  }

  while (v2 != 6);
}

void sub_10047E4B8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
}

uint64_t sub_10047E504(uint64_t a1, char *a2, uint64_t *a3, double a4)
{
  double v11 = a4;
  sub_100400554(a1, a3, &v11);
  *(void *)a1 = off_10183B698;
  sub_100D2D9A4(a1 + 232);
  sub_1010DDBC0((void *)(a1 + 272), a2);
  sub_100B14CF0((void *)(a1 + 296), 0LL, 0LL);
  if (sub_1003C1048(a1 + 64))
  {
    __int128 v6 = (char *)(a1 + 272);
    sub_1003B59A0(a1 + 64, v6, (const char **)&qword_101995880, 0LL, 0);
    sub_100400684(a1);
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183B6C8);
    }
    std::string::size_type v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "#Warning Database is not valid; not initializing",
        buf,
        2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183B6C8);
      }
      __int16 v10 = 0;
      __int128 v9 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  0LL,  "#Warning Database is not valid; not initializing",
                     &v10,
                     2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLCellLocationDatabase::CLCellLocationDatabase(const char *, const CLSqliteDatabase::SqliteProperties &, double)",  "%s\n",  v9);
    }
  }

  return a1;
}

void sub_10047E728(_Unwind_Exception *a1)
{
}

uint64_t sub_10047E764(uint64_t a1)
{
  *(void *)a1 = off_10183B698;
  return sub_10040063C(a1);
}

void sub_10047E7A4(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10047E764(a1);
  operator delete(v1);
}

char *sub_10047E7B8@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[295] < 0) {
    return (char *)sub_1010DD48C((_BYTE *)a2, *((void **)result + 34), *((void *)result + 35));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 17);
  *(void *)(a2 + 16) = *((void *)result + 36);
  return result;
}

uint64_t sub_10047E7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_10047E858(a1, a2, &v8);
  if ((_DWORD)result)
  {
    uint64_t result = sub_100401610(a1, &v8, a3);
    if ((_DWORD)result)
    {
      if (*(_DWORD *)(a2 + 12) == -1) {
        int v7 = 7;
      }
      else {
        int v7 = 6;
      }
      *(_DWORD *)(a3 + 96) = v7;
      *(_DWORD *)(a3 + 128) = 50;
      return 1LL;
    }
  }

  return result;
}

uint64_t sub_10047E858(uint64_t a1, uint64_t a2, sqlite3_int64 *a3)
{
  __int128 v6 = sub_10000CF44(&v44, (uint64_t)"SELECT ", 7LL);
  size_t v7 = strlen("ROWID");
  sqlite3_int64 v8 = sub_10000CF44(v6, (uint64_t)"ROWID", v7);
  __int128 v9 = sub_10000CF44(v8, (uint64_t)" FROM ", 6LL);
  __int16 v10 = (const char *)(a1 + 272);
  size_t v11 = strlen(v10);
  int v12 = sub_10000CF44(v9, (uint64_t)v10, v11);
  id v13 = sub_10000CF44(v12, (uint64_t)" WHERE ", 7LL);
  id v14 = sub_10000CF44(v13, (uint64_t)"MCC", 3LL);
  BOOL v15 = sub_10000CF44(v14, (uint64_t)"=? AND ", 7LL);
  unint64_t v16 = sub_10000CF44(v15, (uint64_t)"MNC", 3LL);
  uint64_t v17 = sub_10000CF44(v16, (uint64_t)"=? AND ", 7LL);
  int v18 = sub_10000CF44(v17, (uint64_t)"LAC", 3LL);
  BOOL v19 = sub_10000CF44(v18, (uint64_t)"=? AND ", 7LL);
  int v20 = sub_10000CF44(v19, (uint64_t)"CI", 2LL);
  uint64_t v21 = sub_10000CF44(v20, (uint64_t)"=? AND ", 7LL);
  __int128 v22 = sub_10000CF44(v21, (uint64_t)"UARFCN", 6LL);
  int v23 = sub_10000CF44(v22, (uint64_t)"=? AND ", 7LL);
  __int128 v24 = sub_10000CF44(v23, (uint64_t)"PSC", 3LL);
  sub_10000CF44(v24, (uint64_t)"=? ", 3LL);
  std::stringbuf::str(&v51, &v45);
  if ((v51.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    int v25 = &v51;
  }
  else {
    int v25 = (std::stringbuf::string_type *)v51.__r_.__value_.__r.__words[0];
  }
  sub_1003C0D54(a1 + 64, (char *)v25, buf);
  uint64_t v26 = *(void *)buf;
  *(void *)uint64_t buf = 0LL;
  uint64_t v27 = (sqlite3_stmt *)sub_100019240(v26);
  if (sub_1003C28BC(v27, 1, *(_DWORD *)a2)
    && (int v28 = (sqlite3_stmt *)sub_100019240(v26), sub_1003C28BC(v28, 2, *(_DWORD *)(a2 + 4)))
    && (__int128 v29 = (sqlite3_stmt *)sub_100019240(v26), sub_1003C28BC(v29, 3, *(_DWORD *)(a2 + 8)))
    && (int v30 = (sqlite3_stmt *)sub_100019240(v26), sub_1003C28BC(v30, 4, *(_DWORD *)(a2 + 12)))
    && (BOOL v31 = (sqlite3_stmt *)sub_100019240(v26), sub_1003C28BC(v31, 5, *(_DWORD *)(a2 + 16)))
    && (__int128 v32 = (sqlite3_stmt *)sub_100019240(v26), sub_1003C28BC(v32, 6, *(_DWORD *)(a2 + 20))))
  {
    uint64_t v33 = (sqlite3_stmt *)sub_100019240(v26);
    if (sqlite3_step(v33) == 100)
    {
      uint64_t v34 = (sqlite3_stmt *)sub_100019240(v26);
      *a3 = sqlite3_column_int64(v34, 0);
      uint64_t v35 = 1LL;
      goto LABEL_26;
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183B6C8);
    }
    uint64_t v36 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      sub_1003D1A48((unsigned int *)a2, &v51);
      int v37 = (v51.__r_.__value_.__s.__size_ & 0x80u) == 0
          ? &v51
          : (std::stringbuf::string_type *)v51.__r_.__value_.__r.__words[0];
      *(_DWORD *)uint64_t buf = 136446210;
      *(void *)&uint8_t buf[4] = v37;
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_FAULT, "failed to bind %{public}s", buf, 0xCu);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&v51, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183B6C8);
      }
      uint64_t v40 = qword_101934A78;
      sub_1003D1A48((unsigned int *)a2, buf);
      if (v48 >= 0) {
        BOOL v41 = buf;
      }
      else {
        BOOL v41 = *(_BYTE **)buf;
      }
      int v49 = 136446210;
      id v50 = v41;
      __int128 v42 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v51,  1628LL,  &_mh_execute_header,  v40,  17LL,  "failed to bind %{public}s",  &v49,  12);
      if (v48 < 0) {
        operator delete(*(void **)buf);
      }
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCellLocationDatabase::getLocation(const CLTelephonyService_Type::Cell &, sqlite3_int64 &)",  "%s\n",  (const char *)v42);
      if (v42 != &v51) {
        free(v42);
      }
    }
  }

  uint64_t v35 = 0LL;
LABEL_26:
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
  }
  *(void *)((char *)v43
  uint64_t v44 = v38;
  std::streambuf::~streambuf(&v45);
  std::ios::~ios(&v46);
  return v35;
}

void sub_10047ED58( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *__p,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (v59) {
    (*(void (**)(uint64_t))(*(void *)v59 + 8LL))(v59);
  }
  sub_1011F8850((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_10047EDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = (uint64_t *)(a1 + 296);
  if (sub_100B14D64((void *)(a1 + 296)))
  {
LABEL_22:
    sub_100B14CF8(v6, v51);
    int v28 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v51);
    if (sub_1003C28BC(v28, 1, *(_DWORD *)a2)
      && (__int128 v29 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v51), sub_1003C28BC(v29, 2, *(_DWORD *)(a2 + 4)))
      && (int v30 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v51), sub_1003C28BC(v30, 3, *(_DWORD *)(a2 + 8)))
      && (BOOL v31 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v51), sub_1003C28BC(v31, 4, *(_DWORD *)(a2 + 12)))
      && (__int128 v32 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v51), sub_1003C28BC(v32, 5, *(_DWORD *)(a2 + 16)))
      && (uint64_t v33 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v51), sub_1003C28BC(v33, 6, *(_DWORD *)(a2 + 20))))
    {
      uint64_t v34 = (sqlite3_stmt *)sub_100019240(*(uint64_t *)v51);
      sub_1003BB2BC(a1 + 64, v34);
      sqlite3_int64 v49 = sub_1003C1068(a1 + 64);
      uint64_t v35 = sub_100401CE8((uint64_t *)a1, &v49, a3);
    }

    else
    {
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183B6C8);
      }
      uint64_t v36 = (os_log_s *)qword_101934A78;
      if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
      {
        sub_1003D1A48((unsigned int *)a2, &v52);
        int v37 = (v52.__r_.__value_.__s.__size_ & 0x80u) == 0
            ? &v52
            : (std::stringbuf::string_type *)v52.__r_.__value_.__r.__words[0];
        *(_DWORD *)__int16 v53 = 136446210;
        *(void *)&v53[4] = v37;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_FAULT, "failed to bind %{public}s", v53, 0xCu);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(&v52, 0x65CuLL);
        if (qword_101934A70 != -1) {
          dispatch_once(&qword_101934A70, &stru_10183B6C8);
        }
        uint64_t v42 = qword_101934A78;
        sub_1003D1A48((unsigned int *)a2, v53);
        if (v54 >= 0) {
          __int128 v43 = v53;
        }
        else {
          __int128 v43 = *(_BYTE **)v53;
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136446210;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v43;
        uint64_t v44 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v52,  1628LL,  &_mh_execute_header,  v42,  17LL,  "failed to bind %{public}s",  &buf,  12);
        if (SHIBYTE(v54) < 0) {
          operator delete(*(void **)v53);
        }
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCellLocationDatabase::setLocation(const CLTelephonyService_Type::Cell &, const CLDaemonLocation &)",  "%s\n",  (const char *)v44);
        if (v44 != &v52) {
          free(v44);
        }
      }

      uint64_t v35 = 0LL;
    }

    uint64_t v38 = *(void *)v51;
    *(void *)std::stringbuf::string_type v51 = 0LL;
    if (v38) {
      (*(void (**)(uint64_t))(*(void *)v38 + 8LL))(v38);
    }
    return v35;
  }

  sub_10000CE18((uint64_t)v53);
  size_t v7 = sub_10000CF44(&v54, (uint64_t)"INSERT OR REPLACE INTO ", 23LL);
  sqlite3_int64 v8 = (const char *)(a1 + 272);
  size_t v9 = strlen(v8);
  __int16 v10 = sub_10000CF44(v7, (uint64_t)v8, v9);
  size_t v11 = sub_10000CF44(v10, (uint64_t)" (", 2LL);
  int v12 = sub_10000CF44(v11, (uint64_t)"MCC", 3LL);
  id v13 = sub_10000CF44(v12, (uint64_t)", ", 2LL);
  id v14 = sub_10000CF44(v13, (uint64_t)"MNC", 3LL);
  BOOL v15 = sub_10000CF44(v14, (uint64_t)", ", 2LL);
  unint64_t v16 = sub_10000CF44(v15, (uint64_t)"LAC", 3LL);
  uint64_t v17 = sub_10000CF44(v16, (uint64_t)", ", 2LL);
  int v18 = sub_10000CF44(v17, (uint64_t)"CI", 2LL);
  BOOL v19 = sub_10000CF44(v18, (uint64_t)", ", 2LL);
  int v20 = sub_10000CF44(v19, (uint64_t)"UARFCN", 6LL);
  uint64_t v21 = sub_10000CF44(v20, (uint64_t)", ", 2LL);
  __int128 v22 = sub_10000CF44(v21, (uint64_t)"PSC", 3LL);
  sub_10000CF44(v22, (uint64_t)") VALUES (?, ?, ?, ?, ?, ?)", 27LL);
  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183B6C8);
  }
  int v23 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
  {
    std::stringbuf::str(&v52, &v55);
    __int128 v24 = (v52.__r_.__value_.__s.__size_ & 0x80u) == 0
        ? &v52
        : (std::stringbuf::string_type *)v52.__r_.__value_.__r.__words[0];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v24;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "CELL_LOC: fInsertStatement [%s]",  (uint8_t *)&buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&v52, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183B6C8);
    }
    uint64_t v45 = qword_101934A78;
    std::stringbuf::str(&buf, &v55);
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_std::stringbuf::string_type buf = &buf;
    }
    else {
      p_std::stringbuf::string_type buf = (std::stringbuf::string_type *)buf.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::stringbuf::string_type v51 = 136315138;
    *(void *)&v51[4] = p_buf;
    uint64_t v47 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v52,  1628LL,  &_mh_execute_header,  v45,  2LL,  "CELL_LOC: fInsertStatement [%s]",  v51);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLCellLocationDatabase::setLocation(const CLTelephonyService_Type::Cell &, const CLDaemonLocation &)",  "%s\n",  (const char *)v47);
    if (v47 != &v52) {
      free(v47);
    }
  }

  std::stringbuf::str(&v52, &v55);
  if ((v52.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    int v25 = &v52;
  }
  else {
    int v25 = (std::stringbuf::string_type *)v52.__r_.__value_.__r.__words[0];
  }
  *(void *)(a1 + 296) = sub_1003BF158(a1 + 64, (char *)v25);
  *(void *)(a1 + 304) = v26;
  if (sub_100B14D64(v6))
  {
    uint64_t v54 = v27;
    std::streambuf::~streambuf(&v55);
    std::ios::~ios(v56);
    goto LABEL_22;
  }

  if (qword_101934A70 != -1) {
    dispatch_once(&qword_101934A70, &stru_10183B6C8);
  }
  uint64_t v39 = (os_log_s *)qword_101934A78;
  if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
  {
    LOWORD(v52.__r_.__value_.__l.__data_) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_FAULT,  "Could not prepare cached insert statement",  (uint8_t *)&v52,  2u);
  }

  if (sub_1002921D0(115, 0))
  {
    bzero(&v52, 0x65CuLL);
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183B6C8);
    }
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    char v48 = (std::stringbuf::string_type *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v52,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Could not prepare cached insert statement",  &buf,  2);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCellLocationDatabase::setLocation(const CLTelephonyService_Type::Cell &, const CLDaemonLocation &)",  "%s\n",  (const char *)v48);
    if (v48 != &v52) {
      free(v48);
    }
  }

  uint64_t v54 = v40;
  std::streambuf::~streambuf(&v55);
  std::ios::~ios(v56);
  return 0LL;
}

void sub_10047F5F0(_Unwind_Exception *a1)
{
}

uint64_t sub_10047F664(_BYTE *a1, uint64_t a2)
{
  uint64_t result = sub_10047E858((uint64_t)a1, a2, &v4);
  if ((_DWORD)result) {
    return sub_10040278C(a1, &v4);
  }
  return result;
}

uint64_t sub_10047F6A0(uint64_t a1, sqlite3_int64 a2, int *a3)
{
  v45.__r_.__value_.__s.__size_ = 7;
  strcpy((char *)&v45, "SELECT ");
  sub_10047E3C0(&__p);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    std::string::size_type size = __p.__r_.__value_.__s.__size_;
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sqlite3_int64 v8 = std::string::append(&v45, (const std::string::value_type *)p_p, size);
  __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__l.__cap_ = v8->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0LL;
  v8->__r_.__value_.__l.__cap_ = 0LL;
  v8->__r_.__value_.__r.__words[0] = 0LL;
  char v43 = 6;
  strcpy(__s, " FROM ");
  __int16 v10 = std::string::append(&v46, __s, 6uLL);
  __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__l.__cap_ = v10->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0LL;
  v10->__r_.__value_.__l.__cap_ = 0LL;
  v10->__r_.__value_.__r.__words[0] = 0LL;
  int v12 = *(char *)(a1 + 295);
  if (v12 >= 0) {
    id v13 = (const std::string::value_type *)(a1 + 272);
  }
  else {
    id v13 = *(const std::string::value_type **)(a1 + 272);
  }
  if (v12 >= 0) {
    std::string::size_type v14 = *(unsigned __int8 *)(a1 + 295);
  }
  else {
    std::string::size_type v14 = *(void *)(a1 + 280);
  }
  BOOL v15 = std::string::append(&v47, v13, v14);
  __int128 v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__l.__cap_ = v15->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v16;
  v15->__r_.__value_.__l.__size_ = 0LL;
  v15->__r_.__value_.__l.__cap_ = 0LL;
  v15->__r_.__value_.__r.__words[0] = 0LL;
  char v41 = 7;
  strcpy(v40, " WHERE ");
  uint64_t v17 = std::string::append(&v48, v40, 7uLL);
  __int128 v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v49.__r_.__value_.__l.__cap_ = v17->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0LL;
  v17->__r_.__value_.__l.__cap_ = 0LL;
  v17->__r_.__value_.__r.__words[0] = 0LL;
  BOOL v19 = std::string::append(&v49, "ROWID");
  __int128 v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v52.__r_.__value_.__l.__cap_ = v19->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0LL;
  v19->__r_.__value_.__l.__cap_ = 0LL;
  v19->__r_.__value_.__r.__words[0] = 0LL;
  char v39 = 2;
  strcpy(v38, "=?");
  uint64_t v21 = std::string::append(&v52, v38, 2uLL);
  __int128 v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  int64_t cap = v21->__r_.__value_.__l.__cap_;
  __int128 v50 = v22;
  v21->__r_.__value_.__l.__size_ = 0LL;
  v21->__r_.__value_.__l.__cap_ = 0LL;
  v21->__r_.__value_.__r.__words[0] = 0LL;
  if (v39 < 0) {
    operator delete(*(void **)v38);
  }
  if (v41 < 0) {
    operator delete(*(void **)v40);
  }
  if (v43 < 0) {
    operator delete(*(void **)__s);
  }
  if (cap >= 0) {
    int v23 = (char *)&v50;
  }
  else {
    int v23 = (char *)v50;
  }
  sub_1003C0D54(a1 + 64, v23, &v52);
  uint64_t v24 = v52.__r_.__value_.__r.__words[0];
  int v25 = (sqlite3_stmt *)sub_100019240((uint64_t)v52.__r_.__value_.__l.__data_);
  if (!sub_1003C2D24(v25, 1, a2))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183B6C8);
    }
    uint64_t v34 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      LOWORD(v52.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_FAULT, "could not bind", (uint8_t *)&v52, 2u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(&v52, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183B6C8);
      }
      LOWORD(v49.__r_.__value_.__l.__data_) = 0;
      int v37 = (std::string *)_os_log_send_and_compose_impl( 2LL,  0LL,  &v52,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "could not bind",  &v49,  2);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLCellLocationDatabase::getLocation(sqlite3_int64, CLTelephonyService_Type::Cell &) const",  "%s\n",  (const char *)v37);
      if (v37 != &v52) {
        free(v37);
      }
    }

    uint64_t v35 = (sqlite3_stmt *)sub_100019240(v24);
    sqlite3_reset(v35);
LABEL_46:
    uint64_t v33 = 0LL;
    if (!v24) {
      goto LABEL_48;
    }
    goto LABEL_47;
  }

  uint64_t v26 = (sqlite3_stmt *)sub_100019240(v24);
  if (sqlite3_step(v26) != 100) {
    goto LABEL_46;
  }
  uint64_t v27 = (sqlite3_stmt *)sub_100019240(v24);
  *a3 = sqlite3_column_int(v27, 0);
  int v28 = (sqlite3_stmt *)sub_100019240(v24);
  a3[1] = sqlite3_column_int(v28, 1);
  __int128 v29 = (sqlite3_stmt *)sub_100019240(v24);
  a3[2] = sqlite3_column_int(v29, 2);
  int v30 = (sqlite3_stmt *)sub_100019240(v24);
  a3[3] = sqlite3_column_int(v30, 3);
  BOOL v31 = (sqlite3_stmt *)sub_100019240(v24);
  a3[4] = sqlite3_column_int(v31, 4);
  __int128 v32 = (sqlite3_stmt *)sub_100019240(v24);
  a3[5] = sqlite3_column_int(v32, 5);
  uint64_t v33 = 1LL;
  if (v24) {
LABEL_47:
  }
    (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
LABEL_48:
  if (SHIBYTE(cap) < 0) {
    operator delete((void *)v50);
  }
  return v33;
}

void sub_10047FB88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20, void *a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, void *a27, uint64_t a28, uint64_t a29, uint64_t a30, void *a31, uint64_t a32, uint64_t a33, uint64_t a34, void *a35, uint64_t a36, uint64_t a37, uint64_t a38, void *a39, uint64_t a40, uint64_t a41, uint64_t a42, void *__p, uint64_t a44, int a45, __int16 a46, char a47, char a48)
{
  if (v48) {
    (*(void (**)(uint64_t))(*(void *)v48 + 8LL))(v48);
  }
  if (a48 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10047FC98(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_10047FCC4()
{
  qword_101995880 = (uint64_t)"MCC";
  dword_101995888 = 1;
  word_10199588C = 1;
  byte_101995890 = 0;
  byte_1019958A8 = 0;
  qword_1019958B0 = (uint64_t)"MNC";
  dword_1019958B8 = 1;
  word_1019958BC = 1;
  byte_1019958C0 = 0;
  byte_1019958D8 = 0;
  qword_1019958E0 = (uint64_t)"LAC";
  dword_1019958E8 = 1;
  word_1019958EC = 1;
  byte_1019958F0 = 0;
  byte_101995908 = 0;
  qword_101995910 = (uint64_t)"CI";
  dword_101995918 = 1;
  word_10199591C = 1;
  byte_101995920 = 0;
  byte_101995938 = 0;
  qword_101995940 = (uint64_t)"UARFCN";
  dword_101995948 = 1;
  word_10199594C = 1;
  byte_101995950 = 0;
  byte_101995968 = 0;
  qword_101995970 = (uint64_t)"PSC";
  dword_101995978 = 1;
  word_10199597C = 1;
  byte_101995980 = 0;
  byte_101995998 = 0;
  qword_1019959A0 = (uint64_t)"Timestamp";
  dword_1019959A8 = 2;
  word_1019959AC = 0;
  byte_1019959B0 = 0;
  byte_1019959C8 = 0;
  qword_1019959D0 = (uint64_t)"Latitude";
  dword_1019959D8 = 2;
  word_1019959DC = 0;
  byte_1019959E0 = 0;
  byte_1019959F8 = 0;
  qword_101995A00 = (uint64_t)"Longitude";
  dword_101995A08 = 2;
  word_101995A0C = 0;
  byte_101995A10 = 0;
  byte_101995A28 = 0;
  qword_101995A30 = (uint64_t)"HorizontalAccuracy";
  dword_101995A38 = 2;
  word_101995A3C = 0;
  byte_101995A40 = 0;
  byte_101995A58 = 0;
  qword_101995A60 = (uint64_t)"Altitude";
  dword_101995A68 = 2;
  word_101995A6C = 0;
  byte_101995A70 = 0;
  byte_101995A88 = 0;
  qword_101995A90 = (uint64_t)"VerticalAccuracy";
  dword_101995A98 = 2;
  word_101995A9C = 0;
  byte_101995AA0 = 0;
  byte_101995AB8 = 0;
  qword_101995AC0 = (uint64_t)"Speed";
  dword_101995AC8 = 2;
  word_101995ACC = 0;
  byte_101995AD0 = 0;
  byte_101995AE8 = 0;
  qword_101995AF0 = (uint64_t)"Course";
  dword_101995AF8 = 2;
  word_101995AFC = 0;
  byte_101995B00 = 0;
  byte_101995B18 = 0;
  qword_101995B20 = (uint64_t)"Confidence";
  dword_101995B28 = 1;
  word_101995B2C = 0;
  byte_101995B30 = 0;
  byte_101995B48 = 0;
  qword_101995B50 = 0LL;
  dword_101995B58 = 5;
  word_101995B5C = 0;
  byte_101995B60 = 0;
  byte_101995B78 = 0;
}

void sub_10047FED0(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 2736) = CFAbsoluteTimeGetCurrent();
}

void sub_10047FEF4(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 2736) = CFAbsoluteTimeGetCurrent();
}

void sub_10047FF18(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 2736) = CFAbsoluteTimeGetCurrent();
}

void sub_10047FF3C(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 2736) = CFAbsoluteTimeGetCurrent();
}

void sub_10047FF64(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 2736) = CFAbsoluteTimeGetCurrent();
}

uint64_t sub_10047FF88(uint64_t a1)
{
  else {
    return 1LL;
  }
}

uint64_t sub_10047FFA8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8440)) {
    return 1LL;
  }
  else {
    return sub_1004823D8(a1, 7);
  }
}

uint64_t sub_10047FFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = &unk_10183B6E8;
  *(void *)(a1 + 8) = 34LL;
  *(_WORD *)(a1 + 16) = 512;
  *(void *)(a1 + 24) = 0x1800000000LL;
  *(void *)(a1 + 2144) = 0x1800000000LL;
  *(void *)(a1 + 2344) = 0x1800000000LL;
  *(void *)(a1 + 2744) = 0LL;
  *(void *)(a1 + 2752) = 0x7FEFFFFFFFFFFFFFLL;
  uint64_t v6 = a1 + 2760;
  sub_100993E34(a1 + 2760);
  *(void *)(a1 + 8432) = a3;
  *(_BYTE *)(a1 + 844sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  buf[0] = 0;
  sub_1012049AC((unsigned __int8 *)(a1 + 8441), "DisableAutostartSwimPressureCheck", buf, 0);
  sub_1009941B0(v6, 2u);
  int v7 = *(_DWORD *)(a2 + 104);
  sqlite3_int64 v8 = (void *)(a2 + 80);
  if (v7 != 6) {
    sqlite3_int64 v8 = (void *)(a2 + 112);
  }
  *(void *)(a1 + 2736) = *v8;
  if (v7 > 7)
  {
    if (v7 == 41)
    {
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183BA18);
      }
      __int128 v9 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother, tracking alternate walk escalation",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_10183BA18);
        }
        v12[0] = 0;
        __int128 v11 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother, tracking alternate walk escalation",  v12,  2);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWorkoutPredictorTier2Smoother::CLWorkoutPredictorTier2Smoother(const CLMotionActivity &, const CLWorkoutPredictorInputs &)",  "%s\n",  v11);
      }

      sub_100CCCC8C(a1, 10, (uint64_t)buf);
    }

    else if (v7 == 8)
    {
      sub_100CCCC8C(a1, 1, (uint64_t)buf);
    }
  }

  else if (v7 == 4)
  {
    sub_100CCCC8C(a1, 2, (uint64_t)buf);
  }

  else if (v7 == 6)
  {
    sub_100CCCC8C(a1, 12, (uint64_t)buf);
  }

  return a1;
}

void sub_100480270(_Unwind_Exception *a1)
{
  void *v1 = off_1018637B8;
  _Unwind_Resume(a1);
}

uint64_t sub_1004802A0(uint64_t result, double a2)
{
  if (*(_BYTE *)(result + 16))
  {
    *(void *)(result + 2744) = 0LL;
  }

  else
  {
    double v2 = *(double *)(result + 2744) + a2;
    *(double *)(result + 2744) = v2;
    if (v2 > 180.0) {
      return sub_100CCCC8C(result, 9, (uint64_t)&v3);
    }
  }

  return result;
}

uint64_t sub_1004802F0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4 = atomic_load((unsigned __int8 *)&qword_101995B98);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_101995B98))
  {
    v25[0] = 0x500000000LL;
    sub_1002C72A8(qword_101995B80, v25, 2uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101995B80, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101995B98);
  }

  __int16 v26 = 0;
  *(_OWORD *)int v25 = xmmword_1012E1E90;
  memset(&v25[2], 0, 135);
  __int128 v27 = xmmword_1012E1E90;
  uint64_t v28 = 0LL;
  int v29 = 0;
  uint64_t v30 = 0LL;
  v31[0] = 0LL;
  *(void *)((char *)v31 + 5) = 0LL;
  *(void *)((char *)&v31[1] + 6) = 0LL;
  char v32 = 0;
  memset(&v31[3], 0, 24);
  __int128 v33 = xmmword_1012E1E90;
  uint64_t v34 = 0LL;
  int v35 = 0;
  unint64_t v36 = 0xFFEFFFFFFFFFFFFFLL;
  int v47 = 0;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  int v42 = 0;
  __int128 v43 = 0u;
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  memset(v46, 0, sizeof(v46));
  uint64_t v48 = 0LL;
  uint64_t v49 = 0LL;
  unint64_t v50 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v51 = 0LL;
  int v52 = 0;
  uint64_t v58 = 0LL;
  __int16 v59 = 0;
  int v64 = 0;
  int v57 = 0;
  __int128 v55 = 0u;
  __int128 v56 = 0u;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v61 = 0u;
  __int128 v60 = 0u;
  char v62 = 0;
  memset(v63, 0, sizeof(v63));
  unint64_t v65 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v84 = 0u;
  __int128 v83 = 0u;
  __int128 v82 = 0u;
  __int128 v81 = 0u;
  __int128 v80 = 0u;
  __int128 v79 = 0u;
  __int128 v78 = 0u;
  __int128 v77 = 0u;
  __int128 v76 = 0u;
  __int128 v75 = 0u;
  __int128 v74 = 0u;
  __int128 v73 = 0u;
  __int128 v72 = 0u;
  __int128 v71 = 0u;
  __int128 v70 = 0u;
  __int128 v69 = 0u;
  __int128 v68 = 0u;
  __int128 v67 = 0u;
  __int128 v66 = 0u;
  uint64_t v85 = 0LL;
  double v86 = -1.79769313e308;
  __int128 v87 = 0u;
  __int128 v88 = 0u;
  __int128 v89 = 0u;
  __int128 v90 = 0u;
  unint64_t v91 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v92 = 0LL;
  int v93 = 0;
  uint64_t v94 = 0LL;
  char v95 = 0;
  unint64_t v96 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v98 = 0LL;
  uint64_t v97 = 0LL;
  uint64_t v99 = 0x80000000800000LL;
  uint64_t v101 = 0LL;
  uint64_t v100 = 0LL;
  __int128 v102 = xmmword_1012E1EA0;
  uint64_t v103 = 0x80000000800000LL;
  __int128 v104 = 0u;
  __int128 v105 = 0u;
  uint64_t v106 = 0LL;
  unint64_t v107 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v108 = 0u;
  __int128 v109 = 0u;
  __int128 v110 = 0u;
  __int128 v111 = 0u;
  __int128 v112 = 0u;
  __int128 v113 = 0u;
  int v114 = 0;
  unint64_t v115 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v116 = 0;
  int v117 = 0;
  unint64_t v118 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v119 = 7LL;
  unint64_t v120 = 0xFFEFFFFFFFFFFFFFLL;
  char v121 = 0;
  uint64_t v123 = 0LL;
  uint64_t v122 = 0LL;
  uint64_t v124 = 0LL;
  uint64_t v5 = sub_100CDB578(*(double **)(a1 + 8432), qword_101995B80, (uint64_t)v25);
  if ((v5 & 1) != 0)
  {
    v23[2] = *(_OWORD *)&v25[7];
    v23[3] = *(_OWORD *)&v25[9];
    v23[4] = *(_OWORD *)&v25[11];
    uint64_t v24 = v25[13];
    v23[0] = *(_OWORD *)&v25[3];
    v23[1] = *(_OWORD *)&v25[5];
    sub_1004807F4((unsigned __int16 *)(a1 + 24), (uint64_t)v23);
    unsigned __int8 v6 = atomic_load((unsigned __int8 *)&qword_101995BB0);
    if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_101995BB0))
    {
      int v22 = 0;
      sub_10023AE2C((unsigned __int8 *)&byte_101995BA0, "WorkoutPredictorTier2ClassifierOverride", &v22, 0);
      __cxa_guard_release(&qword_101995BB0);
    }

    if (byte_101995BA0) {
      uint64_t v7 = dword_101995BA4;
    }
    else {
      uint64_t v7 = v87;
    }
    uint64_t v8 = *(unsigned __int16 *)(a1 + 2146);
    unint64_t v9 = *(unsigned int *)(a1 + 2148);
    uint64_t v10 = *(unsigned __int16 *)(a1 + 2144);
    if (v10 + v8 >= v9) {
      uint64_t v11 = *(unsigned int *)(a1 + 2148);
    }
    else {
      uint64_t v11 = 0LL;
    }
    *(void *)(a1 + 2144 + 8 * (v10 + v8 - v11) + 8) = v7;
    if (v9 <= v8)
    {
      if (v10 + 1 < v9) {
        LOWORD(v9) = 0;
      }
      *(_WORD *)(a1 + 2144) = v10 + 1 - v9;
    }

    else
    {
      *(_WORD *)(a1 + 2146) = v8 + 1;
    }

    sub_100480878(a1, v7);
    sub_1004808B0(a1, (uint64_t)v23);
    sub_100480924(a1);
    uint64_t v12 = (*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 32LL))(**(void **)(a1 + 8432));
    sub_10046E868(v12);
    sub_100480B18(a1);
    uint64_t v13 = (*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 72LL))(**(void **)(a1 + 8432));
    sub_10046E868(v13);
    uint64_t v14 = (*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 80LL))(**(void **)(a1 + 8432));
    sub_10046E868(v14);
    sub_100480D44(a1);
    sub_100481020(a1);
    sub_100481358(a1);
    double v15 = *(double *)(a1 + 2752);
    float v16 = v86 - v15;
    double v17 = fabsf(v16);
    BOOL v18 = v86 < v15;
    double v19 = 0.0;
    if (!v18) {
      double v19 = v17;
    }
    *(double *)(a1 + 2752) = v86;
    sub_1004802A0(a1, v19);
    else {
      uint64_t v20 = qword_1012ED8D8[(char)(*(_BYTE *)(a1 + 16) - 1)];
    }
    *(void *)(a2 + 8) = v20;
    *(double *)a2 = v86;
    *(_DWORD *)(a2 + 16) = sub_1004814A4(a1);
    *(void *)(a2 + 24) = *(void *)(a1 + 2736);
    *(_BYTE *)(a2 + 32) = *(_BYTE *)(a1 + 16) == 6;
  }

  return v5;
}

void sub_1004807C4(_Unwind_Exception *a1)
{
}

unsigned __int16 *sub_1004807F4(unsigned __int16 *result, uint64_t a2)
{
  unint64_t v2 = *((unsigned int *)result + 1);
  unint64_t v3 = *result + (unint64_t)result[1];
  if (v3 < v2) {
    unint64_t v2 = 0LL;
  }
  unsigned __int8 v4 = &result[44 * (v3 - v2)];
  __int128 v6 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 64);
  __int128 v7 = *(_OWORD *)(a2 + 32);
  *((void *)v4 + 11) = *(void *)(a2 + 80);
  __int128 v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 4) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 12) = v8;
  *(_OWORD *)(v4 + 2sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v7;
  *(_OWORD *)(v4 + 36) = v5;
  *(_OWORD *)(v4 + 28) = v6;
  unsigned int v9 = result[1];
  unint64_t v10 = *((unsigned int *)result + 1);
  if (v10 <= v9)
  {
    unint64_t v11 = *result + 1LL;
    if (v11 < v10) {
      LOWORD(v1sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
    }
    void *result = v11 - v10;
  }

  else
  {
    result[1] = v9 + 1;
  }

  return result;
}

uint64_t sub_100480878(uint64_t result, uint64_t a2)
{
  if (a2 == 12 || a2 == 9)
  {
    uint64_t v2 = (*(uint64_t (**)(void))(***(void ***)(result + 8432) + 16LL))(**(void **)(result + 8432));
    return sub_10046E868(v2);
  }

  return result;
}

uint64_t sub_1004808B0(uint64_t result, uint64_t a2)
{
  HIDWORD(v2) = *(_DWORD *)(a2 + 56);
  LODWORD(v2) = HIDWORD(v2) - 16;
  switch((v2 >> 4))
  {
    case 0u:
      unint64_t v3 = &v7;
      int v4 = 2;
      goto LABEL_6;
    case 1u:
      unint64_t v3 = &v6;
      int v4 = 10;
      goto LABEL_6;
    case 3u:
      unint64_t v3 = &v8;
      int v4 = 1;
      goto LABEL_6;
    case 7u:
      unint64_t v3 = &v5;
      int v4 = 12;
LABEL_6:
      uint64_t result = sub_100CCCC8C(result, v4, (uint64_t)v3);
      break;
    default:
      return result;
  }

  return result;
}

uint64_t sub_100480924(uint64_t result)
{
  unsigned int v1 = *(unsigned __int16 *)(result + 26);
  if (*(_DWORD *)(result + 28) == v1)
  {
    uint64_t v2 = result;
    if (v1 < 0xF) {
      goto LABEL_6;
    }
    char v3 = 1;
    unint64_t v4 = 14LL;
    do
    {
      uint64_t result = sub_100483820((unsigned __int16 *)(v2 + 24), v4);
      v3 &= *(_DWORD *)result != 64;
      ++v4;
    }

    while (v4 < *(unsigned __int16 *)(v2 + 26));
    if ((v3 & 1) != 0)
    {
LABEL_6:
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183BA18);
      }
      char v5 = (os_log_s *)qword_101934688;
      if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::stringbuf::string_type buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Tier2Smoother attempted de-escalating due to no Running calls in Tier 1 Classifier",  buf,  2u);
      }

      if (sub_1002921D0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_10183BA18);
        }
        v8[0] = 0;
        _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "Tier2Smoother attempted de-escalating due to no Running calls in Tier 1 Classifier",  v8,  2);
        char v7 = (uint8_t *)v6;
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutPredictorTier2Smoother::evaluateTier1ClassifierBuffer()",  "%s\n",  v6);
        if (v7 != buf) {
          free(v7);
        }
      }

      return sub_100CCCC8C(v2, 6, (uint64_t)buf);
    }
  }

  return result;
}

uint64_t sub_100480B18(uint64_t a1)
{
  uint64_t result = sub_100993E74(a1 + 2760, *(double **)(a1 + 8432));
  char v3 = result;
  if (*(_DWORD *)(a1 + 2148) == *(unsigned __int16 *)(a1 + 2146) && !*(_BYTE *)(a1 + 8440))
  {
    uint64_t result = sub_1004823D8(a1, 4);
    int v4 = result ^ 1;
    if ((v3 & 1) == 0)
    {
LABEL_4:
      if (!v4) {
        return result;
      }
    }
  }

  else
  {
    int v4 = 0;
    if ((result & 1) == 0) {
      goto LABEL_4;
    }
  }

  int v5 = v3 & 1;
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183BA18);
  }
  char v6 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240448;
    int v13 = v5;
    __int16 v14 = 1026;
    int v15 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother,ped auto-stop detected,%{public}d,ped de-escalation from exercise minutes,%{public}d",  buf,  0xEu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    v9[0] = 67240448;
    v9[1] = v5;
    __int16 v10 = 1026;
    int v11 = v4;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother,ped auto-stop detected,%{public}d,ped de-escalation from exercise minutes,%{public}d",  v9,  14);
    char v8 = (uint8_t *)v7;
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWorkoutPredictorTier2Smoother::checkPedestrianStop()", "%s\n", v7);
    if (v8 != buf) {
      free(v8);
    }
  }

  return sub_100CCCC8C(a1, 7, (uint64_t)buf);
}

uint64_t sub_100480D44(uint64_t a1)
{
  if (!*(_WORD *)(a1 + 2146)) {
    goto LABEL_32;
  }
  unint64_t v2 = 0LL;
  int v3 = 0;
  int v4 = 0;
  int v5 = 0;
  int v6 = 0;
  int v7 = 0;
  do
  {
    uint64_t v8 = *(void *)sub_100483628((unsigned __int16 *)(a1 + 2144), v2);
    if (v8 <= 8)
    {
      if (v8 != 1)
      {
        if (v8 == 2) {
          goto LABEL_14;
        }
        goto LABEL_10;
      }

      ++v6;
    }

    else
    {
      switch(v8)
      {
        case 9LL:
          ++v4;
          break;
        case 12LL:
          ++v5;
          break;
        case 19LL:
          ++v3;
          break;
        default:
LABEL_10:
          ++v7;
          break;
      }
    }

void sub_100481020(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_101995C10);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_101995C10))
  {
    v5[0] = 0x20000000BLL;
    sub_1002C72A8(qword_101995BF8, v5, 2uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101995BF8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101995C10);
  }

  if (*(_BYTE *)(a1 + 16) == 8)
  {
    __int16 v6 = 0;
    *(_OWORD *)int v5 = xmmword_1012E1E90;
    memset(&v5[2], 0, 135);
    __int128 v7 = xmmword_1012E1E90;
    uint64_t v8 = 0LL;
    int v9 = 0;
    uint64_t v10 = 0LL;
    v11[0] = 0LL;
    *(void *)((char *)v11 + 5) = 0LL;
    *(void *)((char *)&v11[1] + 6) = 0LL;
    char v12 = 0;
    memset(&v11[3], 0, 24);
    __int128 v13 = xmmword_1012E1E90;
    uint64_t v14 = 0LL;
    int v15 = 0;
    double v16 = -1.79769313e308;
    int v27 = 0;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    int v22 = 0;
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    __int128 v25 = 0u;
    memset(v26, 0, sizeof(v26));
    uint64_t v28 = 0LL;
    uint64_t v29 = 0LL;
    unint64_t v30 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v31 = 0LL;
    int v32 = 0;
    uint64_t v38 = 0LL;
    __int16 v39 = 0;
    int v44 = 0;
    int v37 = 0;
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    __int128 v41 = 0u;
    __int128 v40 = 0u;
    char v42 = 0;
    memset(v43, 0, sizeof(v43));
    unint64_t v45 = 0xFFEFFFFFFFFFFFFFLL;
    __int128 v64 = 0u;
    __int128 v63 = 0u;
    __int128 v62 = 0u;
    __int128 v61 = 0u;
    __int128 v60 = 0u;
    __int128 v59 = 0u;
    __int128 v58 = 0u;
    __int128 v57 = 0u;
    __int128 v56 = 0u;
    __int128 v55 = 0u;
    __int128 v54 = 0u;
    __int128 v53 = 0u;
    __int128 v52 = 0u;
    __int128 v51 = 0u;
    __int128 v50 = 0u;
    __int128 v49 = 0u;
    __int128 v48 = 0u;
    __int128 v47 = 0u;
    __int128 v46 = 0u;
    uint64_t v65 = 0LL;
    unint64_t v66 = 0xFFEFFFFFFFFFFFFFLL;
    __int128 v67 = 0u;
    __int128 v68 = 0u;
    __int128 v69 = 0u;
    __int128 v70 = 0u;
    unint64_t v71 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v72 = 0LL;
    int v73 = 0;
    uint64_t v74 = 0LL;
    char v75 = 0;
    unint64_t v76 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v78 = 0LL;
    uint64_t v77 = 0LL;
    uint64_t v79 = 0x80000000800000LL;
    uint64_t v81 = 0LL;
    uint64_t v80 = 0LL;
    __int128 v82 = xmmword_1012E1EA0;
    uint64_t v83 = 0x80000000800000LL;
    __int128 v84 = 0u;
    __int128 v85 = 0u;
    uint64_t v86 = 0LL;
    unint64_t v87 = 0xFFEFFFFFFFFFFFFFLL;
    __int128 v88 = 0u;
    __int128 v89 = 0u;
    __int128 v90 = 0u;
    __int128 v91 = 0u;
    __int128 v92 = 0u;
    __int128 v93 = 0u;
    int v94 = 0;
    unint64_t v95 = 0xFFEFFFFFFFFFFFFFLL;
    __int16 v96 = 0;
    int v97 = 0;
    double v98 = -1.79769313e308;
    uint64_t v99 = 7LL;
    unint64_t v100 = 0xFFEFFFFFFFFFFFFFLL;
    char v101 = 0;
    uint64_t v103 = 0LL;
    uint64_t v102 = 0LL;
    uint64_t v104 = 0LL;
    sub_100CDB578(*(double **)(a1 + 8432), qword_101995BF8, (uint64_t)v5);
    if (v98 != -1.79769313e308)
    {
      uint64_t v3 = 0LL;
      LODWORD(v4) = v99;
      *((void *)&v4 + 1) = v3;
      sub_100483268((unsigned __int16 *)(a1 + 2344), &v4);
    }
  }

void sub_100481338(_Unwind_Exception *a1)
{
}

uint64_t sub_100481358(uint64_t result)
{
  uint64_t v1 = result;
  if (!*(_WORD *)(result + 2346))
  {
    unsigned int v2 = 0;
    unsigned int v3 = 0;
    unsigned int v6 = 0;
LABEL_26:
    if (v2 > 0xB || v3 > 3 || v6 >= 4) {
      return sub_100CCCC8C(v1, 11, (uint64_t)&v15);
    }
    return result;
  }

  unsigned int v2 = 0;
  unsigned int v3 = 0;
  unint64_t v4 = 0LL;
  int v5 = 0;
  unsigned int v6 = 0;
  double v7 = -1.79769313e308;
  do
  {
    unsigned int v8 = *(_DWORD *)sub_100483AC8((unsigned __int16 *)(v1 + 2344), v4);
    if (v8 == 2 || v8 == 13) {
      ++v3;
    }
    if (v8 == 14) {
      ++v6;
    }
    if (v8 == 6 || ((++v2, BOOL v10 = v8 > 5, v11 = (1 << v8) & 0x31, !v10) ? (v12 = v11 == 0) : (v12 = 1), !v12)) {
      ++v5;
    }
    uint64_t result = sub_100483AC8((unsigned __int16 *)(v1 + 2344), v4);
    if (*(double *)(result + 8) > v7)
    {
      uint64_t result = sub_100483AC8((unsigned __int16 *)(v1 + 2344), v4);
      double v7 = *(double *)(result + 8);
    }

    ++v4;
    unint64_t v13 = *(unsigned __int16 *)(v1 + 2346);
  }

  while (v4 < v13);
  if (v7 <= 2.2352 || v13 != v5) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_1004814A4(uint64_t a1)
{
  unsigned __int8 v1 = atomic_load((unsigned __int8 *)&qword_101995C28);
  if ((v1 & 1) == 0)
  {
    uint64_t v4 = a1;
    int v5 = __cxa_guard_acquire(&qword_101995C28);
    a1 = v4;
    if (v5)
    {
      int v6 = 1;
      sub_10023AE2C((unsigned __int8 *)&byte_101995C18, "WorkoutPredictorTier2ConfidenceOverride", &v6, 0);
      __cxa_guard_release(&qword_101995C28);
      a1 = v4;
    }
  }

  if (byte_101995C18) {
    return dword_101995C1C;
  }
  int v3 = *(unsigned __int8 *)(a1 + 16);
  switch(v3)
  {
    case 4:
      return sub_100483A1C(a1);
    case 8:
      return sub_100483A68(a1);
    case 6:
      return sub_100483A1C(a1);
  }

  return sub_1004832C8(a1);
}

void sub_100481574(_Unwind_Exception *a1)
{
}

void sub_10048158C(uint64_t a1, int a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183BA18);
  }
  uint64_t v4 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v9 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother, set rapid walking detection, %{public}d",  buf,  8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    v7[0] = 67240192;
    v7[1] = a2;
    _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother, set rapid walking detection, %{public}d",  v7,  8);
    int v6 = (uint8_t *)v5;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutPredictorTier2Smoother::setRapidWalkingDetectionEnabled(BOOL)",  "%s\n",  v5);
    if (v6 != buf) {
      free(v6);
    }
  }

  *(_BYTE *)(a1 + 844sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a2;
}

BOOL sub_100481740(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_101995BC0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_101995BC0))
  {
    sub_101204164(buf, "WorkoutPredictorDistanceThresholdForMachineWorkouts", &qword_1012ED570, 0);
    qword_101995BB8 = *(void *)v38;
    __cxa_guard_release(&qword_101995BC0);
  }

  unsigned __int8 v3 = atomic_load((unsigned __int8 *)&qword_101995BD0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_101995BD0))
  {
    sub_101204164(buf, "WorkoutPredictorDistanceLookbackForMachineWorkouts", "\nףp=\nG@", 0);
    qword_101995BC8 = *(void *)v38;
    __cxa_guard_release(&qword_101995BD0);
  }

  double v4 = *(double *)&qword_101995BC8;
  double Current = CFAbsoluteTimeGetCurrent();
  double v24 = Current - v4;
  uint64_t v22 = 0LL;
  double v23 = 0.0;
  int v5 = (void *)(*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 16LL))(**(void **)(a1 + 8432));
  int v6 = operator new(0x28uLL);
  void *v6 = &off_10183BA48;
  v6[1] = &v24;
  _DWORD v6[2] = &Current;
  void v6[3] = &v23;
  v6[4] = &v22;
  *(void *)&v40[4] = v6;
  sub_1003A4D34(v5, (uint64_t)buf);
  double v7 = *(uint8_t **)&v40[4];
  if (*(uint8_t **)&v40[4] == buf)
  {
    uint64_t v8 = 4LL;
    double v7 = buf;
  }

  else
  {
    if (!*(void *)&v40[4]) {
      goto LABEL_8;
    }
    uint64_t v8 = 5LL;
  }

  (*(void (**)(void))(*(void *)v7 + 8 * v8))();
LABEL_8:
  uint64_t v10 = v22;
  double v9 = v23;
  double v11 = *(double *)&qword_101995BB8;
  int v12 = *(unsigned __int8 *)(a1 + 16);
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183BA18);
  }
  unint64_t v13 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
  {
    unint64_t v14 = *(unsigned __int16 *)(a1 + 2144) + (unint64_t)*(unsigned __int16 *)(a1 + 2146) - 1;
    unint64_t v15 = *(unsigned int *)(a1 + 2148);
    if (v14 < v15) {
      unint64_t v15 = 0LL;
    }
    uint64_t v16 = *(void *)(a1 + 2144 + 8 * (v14 - v15) + 8);
    *(_DWORD *)std::stringbuf::string_type buf = 67110400;
    int v37 = v12;
    *(_WORD *)uint64_t v38 = 2048;
    *(void *)&v38[2] = v16;
    __int16 v39 = 2048;
    *(void *)__int128 v40 = qword_101995BB8;
    *(_WORD *)&std::string::value_type v40[8] = 2050;
    *(void *)&v40[10] = qword_101995BC8;
    __int16 v41 = 2050;
    double v42 = v9;
    __int16 v43 = 2050;
    uint64_t v44 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "Tier2Smoother, GPS check, current fsm state, %d, tier2, %lu, requested threshold, %{float}f, requested duration, % {public}f, distance traveled, %{public}f, distance count, %{public}lu",  buf,  0x3Au);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    unint64_t v18 = *(unsigned __int16 *)(a1 + 2144) + (unint64_t)*(unsigned __int16 *)(a1 + 2146) - 1;
    unint64_t v19 = *(unsigned int *)(a1 + 2148);
    if (v18 < v19) {
      unint64_t v19 = 0LL;
    }
    uint64_t v20 = *(void *)(a1 + 2144 + 8 * (v18 - v19) + 8);
    LODWORD(Current) = 67110400;
    HIDWORD(Current) = v12;
    __int16 v26 = 2048;
    uint64_t v27 = v20;
    __int16 v28 = 2048;
    uint64_t v29 = qword_101995BB8;
    __int16 v30 = 2050;
    uint64_t v31 = qword_101995BC8;
    __int16 v32 = 2050;
    double v33 = v9;
    __int16 v34 = 2050;
    uint64_t v35 = v10;
    __int128 v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "Tier2Smoother, GPS check, current fsm state, %d, tier2, %lu, requested threshold, %{float}f, request ed duration, %{public}f, distance traveled, %{public}f, distance count, %{public}lu",  &Current,  58);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "std::pair<BOOL, double> CLWorkoutPredictorTier2Smoother::isAccruingOdometerDistance() const",  "%s\n",  v21);
  }

  return v11 < v9;
}

void sub_100481B38(_Unwind_Exception *a1)
{
}

void sub_100481B9C(uint64_t a1, double a2, double a3)
{
  int v12 = 0;
  unint64_t v11 = 0LL;
  int v5 = (void *)(*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 72LL))(**(void **)(a1 + 8432));
  int v6 = (double *)operator new(0x28uLL);
  *(void *)int v6 = &off_10183BAC8;
  v6[1] = a2;
  _DWORD v6[2] = a3;
  *((void *)v6 + 3) = &v12;
  *((void *)v6 + 4) = &v11;
  __int16 v26 = v6;
  sub_100481E6C(v5, (uint64_t)v25);
  double v7 = v26;
  if (v26 == (double *)v25)
  {
    uint64_t v8 = 4LL;
    double v7 = (double *)v25;
  }

  else
  {
    if (!v26) {
      goto LABEL_6;
    }
    uint64_t v8 = 5LL;
  }

  (*(void (**)(void))(*(void *)v7 + 8 * v8))();
LABEL_6:
  if (v11 <= 9)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    double v9 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134349568;
      double v20 = a2;
      __int16 v21 = 2050;
      double v22 = a3;
      __int16 v23 = 2048;
      unint64_t v24 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother swimcheck, insufficient samples in range start %{public}f, end %{public}f, num %zu",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183BA18);
      }
      int v13 = 134349568;
      double v14 = a2;
      __int16 v15 = 2050;
      double v16 = a3;
      __int16 v17 = 2048;
      unint64_t v18 = v11;
      uint64_t v10 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother swimcheck, insufficient samples in range start %{public}f, end %{public}f, num %zu",  &v13,  32);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "float CLWorkoutPredictorTier2Smoother::calculateAveragePressure(CFAbsoluteTime, CFAbsoluteTime) const",  "%s\n",  v10);
    }
  }

void sub_100481E2C(_Unwind_Exception *exception_object)
{
}

void *sub_100481E6C(void *result, uint64_t a2)
{
  uint64_t v2 = result[7];
  if (!v2) {
    return result;
  }
  unint64_t v3 = result[6];
  unsigned __int8 v4 = v3 + v2;
  unint64_t v5 = (v3 + v2) >> 8;
  uint64_t v6 = result[3];
  double v7 = (void *)(v6 + 8 * v5);
  if (result[4] == v6)
  {
    uint64_t v10 = 0LL;
    __int16 v15 = v7;
    uint64_t v16 = 0LL;
    __int16 v17 = v7;
    uint64_t v18 = 0LL;
    double v9 = (void *)(v6 + 8 * (v3 >> 8));
  }

  else
  {
    uint64_t v8 = *v7 + 16LL * v4;
    __int16 v15 = v7;
    uint64_t v16 = v8;
    __int16 v17 = v7;
    uint64_t v18 = v8;
    double v9 = (void *)(v6 + 8 * (v3 >> 8));
    uint64_t v10 = *v9 + 16LL * v3;
  }

  v14[0] = v9;
  v14[1] = v10;
  void v14[2] = v9;
  void v14[3] = v10;
  sub_10001A504((uint64_t)v19, a2);
  sub_100484B74((uint64_t)&v15, (uint64_t)v14, (uint64_t)v19, (uint64_t)v21);
  unint64_t v11 = v22;
  if (v22 == v21)
  {
    uint64_t v12 = 4LL;
    unint64_t v11 = v21;
    goto LABEL_9;
  }

  if (v22)
  {
    uint64_t v12 = 5LL;
LABEL_9:
    (*(void (**)(void))(*v11 + 8 * v12))();
  }

  uint64_t result = v20;
  if (v20 == v19)
  {
    uint64_t v13 = 4LL;
    uint64_t result = v19;
  }

  else
  {
    if (!v20) {
      return result;
    }
    uint64_t v13 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v13))();
}

void sub_100481F98( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, char *a21)
{
  double v22 = a21;
  if (a21 == &a18)
  {
    uint64_t v23 = 4LL;
    double v22 = &a18;
  }

  else
  {
    if (!a21) {
      goto LABEL_6;
    }
    uint64_t v23 = 5LL;
  }

  (*(void (**)(void))(*(void *)v22 + 8 * v23))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

BOOL sub_100481FDC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8442)) {
    return 1LL;
  }
  double v2 = CFAbsoluteTimeGetCurrent() + -300.0 + 10.0;
  uint64_t v3 = (*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 72LL))(**(void **)(a1 + 8432));
  if (!sub_10045DF68(v3, &v19, v2))
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    uint64_t v16 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother swimcheck, failed to get first entry",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183BA18);
      }
      LOWORD(v20[0]) = 0;
      uint64_t v18 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother swimcheck, failed to get first entry",  v20,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWorkoutPredictorTier2Smoother::isWaterOccludedOrPressureDeltaPresent(const ESwimDetected *) const",  "%s\n",  v18);
    }

    return 1LL;
  }

  __int16 v4 = WORD4(v19);
  double Current = CFAbsoluteTimeGetCurrent();
  double v6 = Current + -30.0;
  double v7 = Current + -300.0;
  sub_100481B9C(a1, Current + -30.0, Current);
  float v9 = v8;
  sub_100481B9C(a1, v7, v7 + 30.0);
  float v11 = v10;
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183BA18);
  }
  unsigned int v12 = v4 & 0x1000;
  uint64_t v13 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67240960;
    unsigned int v28 = v12 >> 12;
    __int16 v29 = 2050;
    double v30 = v6;
    __int16 v31 = 2050;
    double v32 = v9;
    __int16 v33 = 2050;
    double v34 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother swimcheck,waterOccluded,%{public}d,startTime,%{public}f,averageNow,%{public}f,,averageHistorical,%{public}f",  buf,  0x26u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    v20[0] = 67240960;
    v20[1] = v12 >> 12;
    __int16 v21 = 2050;
    double v22 = v6;
    __int16 v23 = 2050;
    double v24 = v9;
    __int16 v25 = 2050;
    double v26 = v11;
    __int16 v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother swimcheck,waterOccluded,%{public}d,startTime,%{public}f,averageNow,%{public}f,,average Historical,%{public}f",  v20,  38);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWorkoutPredictorTier2Smoother::isWaterOccludedOrPressureDeltaPresent(const ESwimDetected *) const",  "%s\n",  v17);
  }

  BOOL result = 1LL;
  if (v9 != 0.0 && v11 != 0.0) {
    return (float)(v9 - v11) > 500.0 || v12 != 0;
  }
  return result;
}

uint64_t sub_1004823D8(uint64_t a1, int a2)
{
  if (sub_100482964(a1) > 720.0)
  {
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    __int16 v4 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother, bypassing exercise minute requirements for sustained walking",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183BA18);
      }
      LOWORD(v19) = 0;
      LODWORD(v18) = 2;
      uint64_t v16 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother, bypassing exercise minute requirements for sustained walking",  &v19,  v18);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWorkoutPredictorTier2Smoother::areEnoughExerciseMinutesPresent(const int) const",  "%s\n",  v16);
    }

    return 1LL;
  }

  double Current = CFAbsoluteTimeGetCurrent();
  if (a2 == 4)
  {
    double v7 = -420.0;
LABEL_12:
    double v8 = Current + v7;
    HIDWORD(v18) = 0;
    float v9 = (void *)(*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 80LL))(**(void **)(a1 + 8432));
    float v10 = (double *)operator new(0x20uLL);
    *(void *)float v10 = &off_10183BB58;
    v10[1] = v8;
    void v10[2] = Current;
    *((void *)v10 + 3) = (char *)&v18 + 4;
    unsigned int v28 = v10;
    sub_100482C44(v9, (uint64_t)v27);
    float v11 = v28;
    if (v28 == (double *)v27)
    {
      uint64_t v12 = 4LL;
      float v11 = (double *)v27;
    }

    else
    {
      if (!v28)
      {
LABEL_27:
        if (qword_101934680 != -1) {
          dispatch_once(&qword_101934680, &stru_10183BA18);
        }
        __int16 v15 = (os_log_s *)qword_101934688;
        if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)std::stringbuf::string_type buf = 134349824;
          double v30 = v8;
          __int16 v31 = 2050;
          double v32 = Current;
          __int16 v33 = 1026;
          int v34 = HIDWORD(v18);
          __int16 v35 = 1026;
          int v36 = a2;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "Tier2Smoother,briskCheck,startTime,%{public}f,endTime,%{public}f,numExerciseMinutes,%{public}u,threshold,%{public}d",  buf,  0x22u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934680 != -1) {
            dispatch_once(&qword_101934680, &stru_10183BA18);
          }
          int v19 = 134349824;
          double v20 = v8;
          __int16 v21 = 2050;
          double v22 = Current;
          __int16 v23 = 1026;
          int v24 = HIDWORD(v18);
          __int16 v25 = 1026;
          int v26 = a2;
          LODWORD(v18) = 34;
          __int16 v17 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  1LL,  "Tier2Smoother,briskCheck,startTime,%{public}f,endTime,%{public}f,numExerciseMinutes,%{public}u ,threshold,%{public}d",  &v19,  v18);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWorkoutPredictorTier2Smoother::areEnoughExerciseMinutesPresent(const int) const",  "%s\n",  v17);
        }

        return SHIDWORD(v18) >= a2;
      }

      uint64_t v12 = 5LL;
    }

    (*(void (**)(void))(*(void *)v11 + 8 * v12))();
    goto LABEL_27;
  }

  if (a2 == 7)
  {
    double v7 = -600.0;
    goto LABEL_12;
  }

  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183BA18);
  }
  uint64_t v13 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 67109120;
    LODWORD(v3sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_FAULT,  "Tier2Smoother,passed unknown threshold of %d",  buf,  8u);
  }

  uint64_t result = sub_1002921D0(115, 0);
  if ((_DWORD)result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    int v19 = 67109120;
    LODWORD(v2sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a2;
    double v14 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  17LL,  "Tier2Smoother,passed unknown threshold of %d",  &v19);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "BOOL CLWorkoutPredictorTier2Smoother::areEnoughExerciseMinutesPresent(const int) const",  "%s\n",  v14);
    return 0LL;
  }

  return result;
}

void sub_100482924( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char *a20)
{
  double v22 = a20;
  if (a20 == v20)
  {
    uint64_t v23 = 4LL;
    double v22 = &a17;
  }

  else
  {
    if (!a20) {
      goto LABEL_6;
    }
    uint64_t v23 = 5LL;
  }

  (*(void (**)(void))(*(void *)v22 + 8 * v23))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

double sub_100482964(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_101995C48);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_101995C48))
  {
    LODWORD(v6[0]) = 0;
    sub_1002C72A8(qword_101995C30, v6, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101995C30, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101995C48);
  }

  __int16 v7 = 0;
  *(_OWORD *)double v6 = xmmword_1012E1E90;
  memset(&v6[2], 0, 135);
  __int128 v8 = xmmword_1012E1E90;
  uint64_t v9 = 0LL;
  int v10 = 0;
  uint64_t v11 = 0LL;
  v12[0] = 0LL;
  *(void *)((char *)v12 + 5) = 0LL;
  *(void *)((char *)&v12[1] + 6) = 0LL;
  char v13 = 0;
  memset(&v12[3], 0, 24);
  __int128 v14 = xmmword_1012E1E90;
  uint64_t v15 = 0LL;
  int v16 = 0;
  unint64_t v17 = 0xFFEFFFFFFFFFFFFFLL;
  int v28 = 0;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  int v23 = 0;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  memset(v27, 0, sizeof(v27));
  uint64_t v29 = 0LL;
  uint64_t v30 = 0LL;
  unint64_t v31 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v32 = 0LL;
  int v33 = 0;
  uint64_t v39 = 0LL;
  __int16 v40 = 0;
  int v45 = 0;
  int v38 = 0;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v42 = 0u;
  __int128 v41 = 0u;
  char v43 = 0;
  memset(v44, 0, sizeof(v44));
  unint64_t v46 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v65 = 0u;
  __int128 v64 = 0u;
  __int128 v63 = 0u;
  __int128 v62 = 0u;
  __int128 v61 = 0u;
  __int128 v60 = 0u;
  __int128 v59 = 0u;
  __int128 v58 = 0u;
  __int128 v57 = 0u;
  __int128 v56 = 0u;
  __int128 v55 = 0u;
  __int128 v54 = 0u;
  __int128 v53 = 0u;
  __int128 v52 = 0u;
  __int128 v51 = 0u;
  __int128 v50 = 0u;
  __int128 v49 = 0u;
  __int128 v48 = 0u;
  __int128 v47 = 0u;
  uint64_t v66 = 0LL;
  unint64_t v67 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v68 = 0u;
  __int128 v69 = 0u;
  __int128 v70 = 0u;
  __int128 v71 = 0u;
  unint64_t v72 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v73 = 0LL;
  int v74 = 0;
  uint64_t v75 = 0LL;
  char v76 = 0;
  unint64_t v77 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v79 = 0LL;
  uint64_t v78 = 0LL;
  uint64_t v80 = 0x80000000800000LL;
  uint64_t v82 = 0LL;
  uint64_t v81 = 0LL;
  __int128 v83 = xmmword_1012E1EA0;
  uint64_t v84 = 0x80000000800000LL;
  __int128 v85 = 0u;
  __int128 v86 = 0u;
  uint64_t v87 = 0LL;
  unint64_t v88 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v89 = 0u;
  __int128 v90 = 0u;
  __int128 v91 = 0u;
  __int128 v92 = 0u;
  __int128 v93 = 0u;
  __int128 v94 = 0u;
  int v95 = 0;
  unint64_t v96 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v97 = 0;
  int v98 = 0;
  unint64_t v99 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v100 = 7LL;
  unint64_t v101 = 0xFFEFFFFFFFFFFFFFLL;
  char v102 = 0;
  uint64_t v104 = 0LL;
  uint64_t v103 = 0LL;
  uint64_t v105 = 0LL;
  int v3 = sub_100CDB578(*(double **)(a1 + 8432), qword_101995C30, (uint64_t)v6);
  double result = 0.0;
  if (v3)
  {
    double v5 = *(double *)(a1 + 2736);
  }

  return result;
}

void sub_100482C24(_Unwind_Exception *a1)
{
}

void *sub_100482C44(void *result, uint64_t a2)
{
  uint64_t v2 = result[7];
  if (!v2) {
    return result;
  }
  unint64_t v3 = result[6];
  uint64_t v4 = v3 + v2;
  unint64_t v5 = (v3 + v2) / 0xAA;
  uint64_t v6 = result[3];
  if (result[4] == v6)
  {
    unint64_t v9 = 0LL;
    uint64_t v14 = v6 + 8 * v5;
    uint64_t v15 = 0LL;
    uint64_t v16 = v14;
    uint64_t v17 = 0LL;
    __int128 v8 = (void *)(v6 + 8 * (v3 / 0xAA));
  }

  else
  {
    uint64_t v7 = *(void *)(v6 + 8 * v5);
    uint64_t v14 = v6 + 8 * v5;
    uint64_t v15 = v7 + 24 * (v4 - 170 * v5);
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    __int128 v8 = (void *)(v6 + 8 * (v3 / 0xAA));
    unint64_t v9 = *v8 + 24 * (v3 % 0xAA);
  }

  v13[0] = v8;
  v13[1] = v9;
  v13[2] = v8;
  void v13[3] = v9;
  sub_10001A504((uint64_t)v18, a2);
  sub_100484D7C((uint64_t)&v14, (uint64_t)v13, (uint64_t)v18, (uint64_t)v20);
  int v10 = v21;
  if (v21 == v20)
  {
    uint64_t v11 = 4LL;
    int v10 = v20;
    goto LABEL_9;
  }

  if (v21)
  {
    uint64_t v11 = 5LL;
LABEL_9:
    (*(void (**)(void))(*v10 + 8 * v11))();
  }

  double result = v19;
  if (v19 == v18)
  {
    uint64_t v12 = 4LL;
    double result = v18;
  }

  else
  {
    if (!v19) {
      return result;
    }
    uint64_t v12 = 5LL;
  }

  return (void *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_100482D94( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, char *a21)
{
  __int128 v22 = a21;
  if (a21 == &a18)
  {
    uint64_t v23 = 4LL;
    __int128 v22 = &a18;
  }

  else
  {
    if (!a21) {
      goto LABEL_6;
    }
    uint64_t v23 = 5LL;
  }

  (*(void (**)(void))(*(void *)v22 + 8 * v23))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

void sub_100482DD8(uint64_t a1, uint64_t *a2)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183BA18);
  }
  unint64_t v3 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *a2;
    *(_DWORD *)std::stringbuf::string_type buf = 134217984;
    uint64_t v10 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother, deescalating from distance accumulation, distance, %f",  buf,  0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    uint64_t v5 = *a2;
    int v7 = 134217984;
    uint64_t v8 = v5;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother, deescalating from distance accumulation, distance, %f",  COERCE_DOUBLE(&v7));
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutPredictorTier2Smoother::doGpsDistanceDeescalation(const EGpsDistanceDeescalation *)",  "%s\n",  v6);
  }

uint64_t sub_100482F88(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_101995BF0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_101995BF0))
  {
    LODWORD(v4) = 0;
    sub_1002C72A8(qword_101995BD8, &v4, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101995BD8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101995BF0);
  }

  __int16 v13 = 0;
  __int128 v4 = xmmword_1012E1E90;
  __int128 v5 = 0u;
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  memset(v12, 0, sizeof(v12));
  __int128 v14 = xmmword_1012E1E90;
  uint64_t v15 = 0LL;
  int v16 = 0;
  uint64_t v17 = 0LL;
  v18[0] = 0LL;
  *(void *)((char *)v18 + 5) = 0LL;
  *(void *)((char *)&v18[1] + 6) = 0LL;
  char v19 = 0;
  memset(&v18[3], 0, 24);
  __int128 v20 = xmmword_1012E1E90;
  uint64_t v21 = 0LL;
  int v22 = 0;
  unint64_t v23 = 0xFFEFFFFFFFFFFFFFLL;
  int v34 = 0;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  int v29 = 0;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  memset(v33, 0, sizeof(v33));
  uint64_t v35 = 0LL;
  uint64_t v36 = 0LL;
  unint64_t v37 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v38 = 0LL;
  int v39 = 0;
  uint64_t v45 = 0LL;
  __int16 v46 = 0;
  int v51 = 0;
  int v44 = 0;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  __int128 v48 = 0u;
  __int128 v47 = 0u;
  char v49 = 0;
  memset(v50, 0, sizeof(v50));
  unint64_t v52 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v71 = 0u;
  __int128 v70 = 0u;
  __int128 v69 = 0u;
  __int128 v68 = 0u;
  __int128 v67 = 0u;
  __int128 v66 = 0u;
  __int128 v65 = 0u;
  __int128 v64 = 0u;
  __int128 v63 = 0u;
  __int128 v62 = 0u;
  __int128 v61 = 0u;
  __int128 v60 = 0u;
  __int128 v59 = 0u;
  __int128 v58 = 0u;
  __int128 v57 = 0u;
  __int128 v56 = 0u;
  __int128 v55 = 0u;
  __int128 v54 = 0u;
  __int128 v53 = 0u;
  uint64_t v72 = 0LL;
  unint64_t v73 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v74 = 0u;
  __int128 v75 = 0u;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  unint64_t v78 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v79 = 0LL;
  int v80 = 0;
  uint64_t v81 = 0LL;
  char v82 = 0;
  unint64_t v83 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v85 = 0LL;
  uint64_t v84 = 0LL;
  uint64_t v86 = 0x80000000800000LL;
  uint64_t v88 = 0LL;
  uint64_t v87 = 0LL;
  __int128 v89 = xmmword_1012E1EA0;
  uint64_t v90 = 0x80000000800000LL;
  __int128 v91 = 0u;
  __int128 v92 = 0u;
  uint64_t v93 = 0LL;
  unint64_t v94 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v95 = 0u;
  __int128 v96 = 0u;
  __int128 v97 = 0u;
  __int128 v98 = 0u;
  __int128 v99 = 0u;
  __int128 v100 = 0u;
  int v101 = 0;
  unint64_t v102 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v103 = 0;
  int v104 = 0;
  unint64_t v105 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v106 = 7LL;
  unint64_t v107 = 0xFFEFFFFFFFFFFFFFLL;
  char v108 = 0;
  uint64_t v110 = 0LL;
  uint64_t v109 = 0LL;
  uint64_t v111 = 0LL;
  uint64_t result = sub_100CDB578(*(double **)(a1 + 8432), qword_101995BD8, (uint64_t)&v4);
  return result;
}

void sub_100483248(_Unwind_Exception *a1)
{
}

unsigned __int16 *sub_100483268(unsigned __int16 *result, _OWORD *a2)
{
  unint64_t v2 = *((unsigned int *)result + 1);
  unint64_t v3 = *result + (unint64_t)result[1];
  if (v3 < v2) {
    unint64_t v2 = 0LL;
  }
  *(_OWORD *)&result[8 * (v3 - v2) + 4] = *a2;
  unsigned int v4 = result[1];
  unint64_t v5 = *((unsigned int *)result + 1);
  if (v5 <= v4)
  {
    unint64_t v6 = *result + 1LL;
    if (v6 < v5) {
      LOWORD(v5) = 0;
    }
    void *result = v6 - v5;
  }

  else
  {
    result[1] = v4 + 1;
  }

  return result;
}

BOOL sub_1004832C8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 2148) == *(unsigned __int16 *)(a1 + 2146)
    && *(_DWORD *)(a1 + 28) == *(unsigned __int16 *)(a1 + 26))
  {
    if (*(void *)sub_100483628((unsigned __int16 *)(a1 + 2144), 0x13uLL))
    {
      BOOL v2 = 0;
    }

    else
    {
      uint64_t v4 = 19LL;
      do
      {
        unint64_t v5 = v4;
        if (v4 == 23) {
          break;
        }
        ++v4;
      }

      while (!*(void *)sub_100483628((unsigned __int16 *)(a1 + 2144), v5 + 1));
      BOOL v2 = v5 > 0x16;
    }

    if (*(_DWORD *)sub_100483820((unsigned __int16 *)(a1 + 24), 0x13uLL) == 0x200000)
    {
      BOOL v6 = 0;
    }

    else
    {
      BOOL v6 = 0;
      unint64_t v13 = 20LL;
      do
      {
        BOOL v6 = v13 - 1 > 0x16;
        if (v13 == 24) {
          break;
        }
        __int128 v14 = (_DWORD *)sub_100483820((unsigned __int16 *)(a1 + 24), v13++);
      }

      while (*v14 != 0x200000);
    }

    BOOL v7 = 0;
    for (unint64_t i = 19LL; i != 24; ++i)
    {
      __int128 v9 = (void *)sub_100483628((unsigned __int16 *)(a1 + 2144), i);
      else {
        uint64_t v10 = qword_1012ED8D8[(char)(*(_BYTE *)(a1 + 16) - 1)];
      }
      if (*v9 == v10) {
        break;
      }
      BOOL v7 = i > 0x16;
    }

    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    BOOL v3 = !v2 && !v6 && !v7;
    __int128 v11 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 67109632;
      BOOL v23 = v2;
      __int16 v24 = 1024;
      int v25 = v6;
      __int16 v26 = 1024;
      int v27 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Tier2Smoother,WorkoutPauseFlags,flagLastEpochsUnknown,%d,flagNoPatternInTier1,%d,flagNoCurrentStateInLastEpochs,%d",  buf,  0x14u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183BA18);
      }
      __int16 v18 = 1024;
      int v19 = v6;
      __int16 v20 = 1024;
      int v21 = v7;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  2LL,  "Tier2Smoother,WorkoutPauseFlags,flagLastEpochsUnknown,%d,flagNoPatternInTier1,%d,flagNoCurrentStateInLastEpochs,%d",  &v17,  20,  67109632);
      int v16 = (uint8_t *)v15;
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWorkoutClassifier_Type::Confidence CLWorkoutPredictorTier2Smoother::getWorkoutConfidenceForPatternedMotion() const",  "%s\n",  v15);
      if (v16 != buf) {
        free(v16);
      }
    }
  }

  else
  {
    return 0;
  }

  return v3;
}

uint64_t sub_100483628(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183BBD8);
    }
    BOOL v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      unint64_t v17 = a2;
      __int16 v18 = 1024;
      int v19 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183BBD8);
      }
      int v9 = *((_DWORD *)a1 + 1);
      int v12 = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 1024;
      int v15 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  (size_t)&v12,  18);
      __int128 v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const T &CMQueue<CMWorkoutType>::operator[](const size_t) const [T = CMWorkoutType]",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0LL;
  }
  return (uint64_t)&a1[4 * (v4 - v5) + 4];
}

uint64_t sub_100483820(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183BBD8);
    }
    BOOL v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      unint64_t v17 = a2;
      __int16 v18 = 1024;
      int v19 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183BBD8);
      }
      int v9 = *((_DWORD *)a1 + 1);
      int v12 = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 1024;
      int v15 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  (size_t)&v12,  18);
      __int128 v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const T &CMQueue<CMMotionContext::MotionState>::operator[](const size_t) const [T = CMMotionContext::MotionState]",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0LL;
  }
  return (uint64_t)&a1[44 * (v4 - v5) + 4];
}

uint64_t sub_100483A1C(uint64_t a1)
{
  BOOL v2 = sub_1004832C8(a1);
  if (*(_BYTE *)(a1 + 8440)) {
    LODWORD(result) = 1;
  }
  else {
    LODWORD(result) = sub_1004823D8(a1, 7);
  }
  if (v2) {
    return result;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_100483A68(uint64_t a1)
{
  unsigned __int8 v1 = (unsigned __int16 *)(a1 + 2344);
  unint64_t v2 = 19LL;
  while (*(_DWORD *)sub_100483AC8(v1, v2) != 6)
  {
    if (++v2 == 24) {
      return 0LL;
    }
  }

  return 1LL;
}

uint64_t sub_100483AC8(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183BBD8);
    }
    BOOL v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      unint64_t v17 = a2;
      __int16 v18 = 1024;
      int v19 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_FAULT,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  buf,  0x12u);
    }

    if (sub_1002921D0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183BBD8);
      }
      int v9 = *((_DWORD *)a1 + 1);
      int v12 = 134218240;
      unint64_t v13 = a2;
      __int16 v14 = 1024;
      int v15 = v9;
      _os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  17LL,  "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 2 33,i,%zu,capacity,%u.",  (size_t)&v12,  18);
      __int128 v11 = (uint8_t *)v10;
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "const T &CMQueue<CLWorkoutPredictorTier2Smoother::CyclingDescalationEntry>::operator[](const size_t) const [T = CLWorkoutPredictorTier2Smoother::CyclingDescalationEntry]",  "%s\n",  v10);
      if (v11 != buf) {
        free(v11);
      }
    }
  }

  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0LL;
  }
  return (uint64_t)&a1[8 * (v4 - v5) + 4];
}

void sub_100483CC0(id a1)
{
  qword_101934688 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

__n128 sub_100483CF4(uint64_t a1)
{
  unint64_t v2 = (char *)operator new(0x28uLL);
  *(void *)unint64_t v2 = &off_10183BA48;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_100483D34(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_10183BA48;
  __n128 result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

double sub_100483D5C(uint64_t a1, double *a2)
{
  double result = *a2;
  if (*a2 >= **(double **)(a1 + 8) && result <= **(double **)(a1 + 16))
  {
    BOOL v3 = *(double **)(a1 + 24);
    unint64_t v4 = *(void **)(a1 + 32);
    double result = a2[1] + *v3;
    *BOOL v3 = result;
    ++*v4;
  }

  return result;
}

uint64_t sub_100483DA4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100483DE0()
{
}

BOOL sub_100483DEC(uint64_t a1)
{
  BOOL v3 = sub_100481740(a1);
  if (v3)
  {
    uint64_t v4 = v2;
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    unint64_t v5 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v6 = *(unsigned __int16 *)(a1 + 2144) + (unint64_t)*(unsigned __int16 *)(a1 + 2146) - 1;
      unint64_t v7 = *(unsigned int *)(a1 + 2148);
      if (v6 < v7) {
        unint64_t v7 = 0LL;
      }
      uint64_t v8 = *(void *)(a1 + 2144 + 8 * (v6 - v7) + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      uint64_t v20 = v8;
      __int16 v21 = 2048;
      uint64_t v22 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother, prevent escalation from distance accumulation, workout, %lu, distance, %f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183BA18);
      }
      unint64_t v10 = *(unsigned __int16 *)(a1 + 2144) + (unint64_t)*(unsigned __int16 *)(a1 + 2146) - 1;
      unint64_t v11 = *(unsigned int *)(a1 + 2148);
      if (v10 < v11) {
        unint64_t v11 = 0LL;
      }
      uint64_t v12 = *(void *)(a1 + 2144 + 8 * (v10 - v11) + 8);
      int v15 = 134218240;
      uint64_t v16 = v12;
      __int16 v17 = 2048;
      uint64_t v18 = v4;
      LODWORD(v14) = 22;
      unint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother, prevent escalation from distance accumulation, workout, %lu, distance, %f",  &v15,  v14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWorkoutPredictorTier2Smoother::isMachineWorkoutStationary(const T *) const [T = CLWorkoutPredictorTier2Sm oother::ERowDetected]",  "%s\n",  v13);
    }
  }

  return !v3;
}

BOOL sub_100484024(uint64_t a1)
{
  BOOL v3 = sub_100481740(a1);
  if (v3)
  {
    uint64_t v4 = v2;
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    unint64_t v5 = (os_log_s *)qword_101934688;
    if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v6 = *(unsigned __int16 *)(a1 + 2144) + (unint64_t)*(unsigned __int16 *)(a1 + 2146) - 1;
      unint64_t v7 = *(unsigned int *)(a1 + 2148);
      if (v6 < v7) {
        unint64_t v7 = 0LL;
      }
      uint64_t v8 = *(void *)(a1 + 2144 + 8 * (v6 - v7) + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 134218240;
      uint64_t v20 = v8;
      __int16 v21 = 2048;
      uint64_t v22 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother, prevent escalation from distance accumulation, workout, %lu, distance, %f",  buf,  0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934680 != -1) {
        dispatch_once(&qword_101934680, &stru_10183BA18);
      }
      unint64_t v10 = *(unsigned __int16 *)(a1 + 2144) + (unint64_t)*(unsigned __int16 *)(a1 + 2146) - 1;
      unint64_t v11 = *(unsigned int *)(a1 + 2148);
      if (v10 < v11) {
        unint64_t v11 = 0LL;
      }
      uint64_t v12 = *(void *)(a1 + 2144 + 8 * (v10 - v11) + 8);
      int v15 = 134218240;
      uint64_t v16 = v12;
      __int16 v17 = 2048;
      uint64_t v18 = v4;
      LODWORD(v14) = 22;
      unint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother, prevent escalation from distance accumulation, workout, %lu, distance, %f",  &v15,  v14);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "BOOL CLWorkoutPredictorTier2Smoother::isMachineWorkoutStationary(const T *) const [T = CLWorkoutPredictorTier2Sm oother::EEllipticalDetected]",  "%s\n",  v13);
    }
  }

  return !v3;
}

uint64_t sub_10048425C(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_101938268);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_101938268))
  {
    LODWORD(v4) = 0;
    sub_1002C72A8(qword_101938250, &v4, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101938250, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101938268);
  }

  __int16 v13 = 0;
  __int128 v4 = xmmword_1012E1E90;
  __int128 v5 = 0u;
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  memset(v12, 0, sizeof(v12));
  __int128 v14 = xmmword_1012E1E90;
  uint64_t v15 = 0LL;
  int v16 = 0;
  uint64_t v17 = 0LL;
  v18[0] = 0LL;
  *(void *)((char *)v18 + 5) = 0LL;
  *(void *)((char *)&v18[1] + 6) = 0LL;
  char v19 = 0;
  memset(&v18[3], 0, 24);
  __int128 v20 = xmmword_1012E1E90;
  uint64_t v21 = 0LL;
  int v22 = 0;
  unint64_t v23 = 0xFFEFFFFFFFFFFFFFLL;
  int v34 = 0;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  int v29 = 0;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  memset(v33, 0, sizeof(v33));
  uint64_t v35 = 0LL;
  uint64_t v36 = 0LL;
  unint64_t v37 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v38 = 0LL;
  int v39 = 0;
  uint64_t v45 = 0LL;
  __int16 v46 = 0;
  int v51 = 0;
  int v44 = 0;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  __int128 v48 = 0u;
  __int128 v47 = 0u;
  char v49 = 0;
  memset(v50, 0, sizeof(v50));
  unint64_t v52 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v71 = 0u;
  __int128 v70 = 0u;
  __int128 v69 = 0u;
  __int128 v68 = 0u;
  __int128 v67 = 0u;
  __int128 v66 = 0u;
  __int128 v65 = 0u;
  __int128 v64 = 0u;
  __int128 v63 = 0u;
  __int128 v62 = 0u;
  __int128 v61 = 0u;
  __int128 v60 = 0u;
  __int128 v59 = 0u;
  __int128 v58 = 0u;
  __int128 v57 = 0u;
  __int128 v56 = 0u;
  __int128 v55 = 0u;
  __int128 v54 = 0u;
  __int128 v53 = 0u;
  uint64_t v72 = 0LL;
  unint64_t v73 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v74 = 0u;
  __int128 v75 = 0u;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  unint64_t v78 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v79 = 0LL;
  int v80 = 0;
  uint64_t v81 = 0LL;
  char v82 = 0;
  unint64_t v83 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v85 = 0LL;
  uint64_t v84 = 0LL;
  uint64_t v86 = 0x80000000800000LL;
  uint64_t v88 = 0LL;
  uint64_t v87 = 0LL;
  __int128 v89 = xmmword_1012E1EA0;
  uint64_t v90 = 0x80000000800000LL;
  __int128 v91 = 0u;
  __int128 v92 = 0u;
  uint64_t v93 = 0LL;
  unint64_t v94 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v95 = 0u;
  __int128 v96 = 0u;
  __int128 v97 = 0u;
  __int128 v98 = 0u;
  __int128 v99 = 0u;
  __int128 v100 = 0u;
  int v101 = 0;
  unint64_t v102 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v103 = 0;
  int v104 = 0;
  unint64_t v105 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v106 = 7LL;
  unint64_t v107 = 0xFFEFFFFFFFFFFFFFLL;
  char v108 = 0;
  uint64_t v110 = 0LL;
  uint64_t v109 = 0LL;
  uint64_t v111 = 0LL;
  sub_100CDB578(*(double **)(a1 + 8432), qword_101938250, (uint64_t)&v4);
  return sub_10048454C(a1);
}

void sub_10048452C(_Unwind_Exception *a1)
{
}

uint64_t sub_10048454C(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183BA18);
  }
  unsigned __int8 v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother, resetting pedestrian stop detector FSM",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    v5[0] = 0;
    __int128 v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother, resetting pedestrian stop detector FSM",  v5,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutPredictorTier2Smoother::resetPedestrianStopDetector(const T *) [T = CLWorkoutPredictorTier2Smoother: :EWalkEscalation]",  "%s\n",  v4);
  }

  return sub_1009941B0(a1 + 2760, 2u);
}

uint64_t sub_1004846E8(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_101938288);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_101938288))
  {
    LODWORD(v4) = 0;
    sub_1002C72A8(qword_101938270, &v4, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1002C7328, qword_101938270, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_101938288);
  }

  __int16 v13 = 0;
  __int128 v4 = xmmword_1012E1E90;
  __int128 v5 = 0u;
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  memset(v12, 0, sizeof(v12));
  __int128 v14 = xmmword_1012E1E90;
  uint64_t v15 = 0LL;
  int v16 = 0;
  uint64_t v17 = 0LL;
  v18[0] = 0LL;
  *(void *)((char *)v18 + 5) = 0LL;
  *(void *)((char *)&v18[1] + 6) = 0LL;
  char v19 = 0;
  memset(&v18[3], 0, 24);
  __int128 v20 = xmmword_1012E1E90;
  uint64_t v21 = 0LL;
  int v22 = 0;
  unint64_t v23 = 0xFFEFFFFFFFFFFFFFLL;
  int v34 = 0;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  int v29 = 0;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  memset(v33, 0, sizeof(v33));
  uint64_t v35 = 0LL;
  uint64_t v36 = 0LL;
  unint64_t v37 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v38 = 0LL;
  int v39 = 0;
  uint64_t v45 = 0LL;
  __int16 v46 = 0;
  int v51 = 0;
  int v44 = 0;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  __int128 v48 = 0u;
  __int128 v47 = 0u;
  char v49 = 0;
  memset(v50, 0, sizeof(v50));
  unint64_t v52 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v71 = 0u;
  __int128 v70 = 0u;
  __int128 v69 = 0u;
  __int128 v68 = 0u;
  __int128 v67 = 0u;
  __int128 v66 = 0u;
  __int128 v65 = 0u;
  __int128 v64 = 0u;
  __int128 v63 = 0u;
  __int128 v62 = 0u;
  __int128 v61 = 0u;
  __int128 v60 = 0u;
  __int128 v59 = 0u;
  __int128 v58 = 0u;
  __int128 v57 = 0u;
  __int128 v56 = 0u;
  __int128 v55 = 0u;
  __int128 v54 = 0u;
  __int128 v53 = 0u;
  uint64_t v72 = 0LL;
  unint64_t v73 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v74 = 0u;
  __int128 v75 = 0u;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  unint64_t v78 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v79 = 0LL;
  int v80 = 0;
  uint64_t v81 = 0LL;
  char v82 = 0;
  unint64_t v83 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v85 = 0LL;
  uint64_t v84 = 0LL;
  uint64_t v86 = 0x80000000800000LL;
  uint64_t v88 = 0LL;
  uint64_t v87 = 0LL;
  __int128 v89 = xmmword_1012E1EA0;
  uint64_t v90 = 0x80000000800000LL;
  __int128 v91 = 0u;
  __int128 v92 = 0u;
  uint64_t v93 = 0LL;
  unint64_t v94 = 0xFFEFFFFFFFFFFFFFLL;
  __int128 v95 = 0u;
  __int128 v96 = 0u;
  __int128 v97 = 0u;
  __int128 v98 = 0u;
  __int128 v99 = 0u;
  __int128 v100 = 0u;
  int v101 = 0;
  unint64_t v102 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v103 = 0;
  int v104 = 0;
  unint64_t v105 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v106 = 7LL;
  unint64_t v107 = 0xFFEFFFFFFFFFFFFFLL;
  char v108 = 0;
  uint64_t v110 = 0LL;
  uint64_t v109 = 0LL;
  uint64_t v111 = 0LL;
  sub_100CDB578(*(double **)(a1 + 8432), qword_101938270, (uint64_t)&v4);
  return sub_1004849D8(a1);
}

void sub_1004849B8(_Unwind_Exception *a1)
{
}

uint64_t sub_1004849D8(uint64_t a1)
{
  if (qword_101934680 != -1) {
    dispatch_once(&qword_101934680, &stru_10183BA18);
  }
  unsigned __int8 v2 = (os_log_s *)qword_101934688;
  if (os_log_type_enabled((os_log_t)qword_101934688, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::stringbuf::string_type buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Tier2Smoother, resetting pedestrian stop detector FSM",  buf,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934680 != -1) {
      dispatch_once(&qword_101934680, &stru_10183BA18);
    }
    v5[0] = 0;
    __int128 v4 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934688,  0LL,  "Tier2Smoother, resetting pedestrian stop detector FSM",  v5,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWorkoutPredictorTier2Smoother::resetPedestrianStopDetector(const T *) [T = CLWorkoutPredictorTier2Smoother: :EAltWalkEscalation]",  "%s\n",  v4);
  }

  return sub_1009941B0(a1 + 2760, 2u);
}

uint64_t sub_100484B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 24);
  if (v6 != *(void *)(a2 + 24))
  {
    __int128 v9 = *(void **)(a1 + 16);
    do
    {
      if (v6 == *v9) {
        uint64_t v6 = *(v9 - 1) + 4096LL;
      }
      uint64_t v10 = *(void *)(a3 + 24);
      if (!v10) {
        sub_100008BDC();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v10 + 48LL))(v10, v6 - 16);
      __int128 v9 = *(void **)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      if (v11 == *v9)
      {
        *(void *)(a1 + 16) = v9 - 1;
        uint64_t v11 = *--v9 + 4096LL;
      }

      uint64_t v6 = v11 - 16;
      *(void *)(a1 + 24) = v6;
    }

    while (v6 != *(void *)(a2 + 24));
  }

  return sub_100484C28(a4, a3);
}

uint64_t sub_100484C28(uint64_t a1, uint64_t a2)
{
  BOOL v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24LL))(*v3, a1);
      return a1;
    }

    *(void *)(a1 + 24) = v4;
  }

  else
  {
    BOOL v3 = (void *)(a1 + 24);
  }

  *BOOL v3 = 0LL;
  return a1;
}

__n128 sub_100484C94(uint64_t a1)
{
  unsigned __int8 v2 = (char *)operator new(0x28uLL);
  *(void *)unsigned __int8 v2 = &off_10183BAC8;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_100484CD4(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_10183BAC8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

float sub_100484CFC(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a2;
  if (*(double *)a2 >= *(double *)(a1 + 8) && v2 <= *(double *)(a1 + 16))
  {
    uint64_t v4 = *(float **)(a1 + 24);
    __int128 v5 = *(void **)(a1 + 32);
    *(float *)&double v2 = *(float *)(a2 + 12) + *v4;
    float *v4 = *(float *)&v2;
    ++*v5;
  }

  return *(float *)&v2;
}

uint64_t sub_100484D34(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100484D70()
{
}

uint64_t sub_100484D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 24);
  if (v6 != *(void *)(a2 + 24))
  {
    __int128 v9 = *(void **)(a1 + 16);
    do
    {
      if (v6 == *v9) {
        uint64_t v6 = *(v9 - 1) + 4080LL;
      }
      uint64_t v10 = *(void *)(a3 + 24);
      if (!v10) {
        sub_100008BDC();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v10 + 48LL))(v10, v6 - 24);
      __int128 v9 = *(void **)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      if (v11 == *v9)
      {
        *(void *)(a1 + 16) = v9 - 1;
        uint64_t v11 = *--v9 + 4080LL;
      }

      uint64_t v6 = v11 - 24;
      *(void *)(a1 + 24) = v6;
    }

    while (v6 != *(void *)(a2 + 24));
  }

  return sub_100484E30(a4, a3);
}

uint64_t sub_100484E30(uint64_t a1, uint64_t a2)
{
  BOOL v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24LL))(*v3, a1);
      return a1;
    }

    *(void *)(a1 + 24) = v4;
  }

  else
  {
    BOOL v3 = (void *)(a1 + 24);
  }

  *BOOL v3 = 0LL;
  return a1;
}

__n128 sub_100484E9C(uint64_t a1)
{
  double v2 = (char *)operator new(0x20uLL);
  *(void *)double v2 = &off_10183BB58;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_100484EDC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &off_10183BB58;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_100484F04(uint64_t result, uint64_t a2)
{
  double v2 = *(double *)(a2 + 8);
  return result;
}

uint64_t sub_100484F2C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }

  else
  {
    return 0LL;
  }

_UNKNOWN **sub_100484F68()
{
}

void sub_100484F74(id a1)
{
  qword_101934A78 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1004852C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  operator delete(v20);
  _Unwind_Resume(a1);
}

void sub_100488EE0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35)
{
}

LABEL_240:
    __int128 v214 = v335;
    -[CLMeanSeaLevelPressureData meanSeaLevelPressure](self->_queriedMeanSeaLevelPressureData, "meanSeaLevelPressure");
    __int128 v215 = v214;
    __int128 v217 = v216;
    __int128 v218 = sub_100FADFE8(v215, v217);
    -[CLMeanSeaLevelPressureData meanSeaLevelPressure](self->_queriedMeanSeaLevelPressureData, "meanSeaLevelPressure");
    self->_estimatedMeanSeaLevelPressure = v219;
    __int128 v220 = v335;
    __int128 v221 = v219;
    sub_100FAE09C(v220, v221);
    __int128 v223 = v222;
    -[CLMeanSeaLevelPressureData uncertainty](self->_queriedMeanSeaLevelPressureData, "uncertainty");
    self->_estimatedAbsoluteAltitudeUncertainty = v224 * v223;
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183BC80);
    }
    __int128 v225 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      -[CLMeanSeaLevelPressureData uncertainty](self->_queriedMeanSeaLevelPressureData, "uncertainty");
      estimatedAbsoluteAltitudeUncertainty = self->_estimatedAbsoluteAltitudeUncertainty;
      *(_DWORD *)std::stringbuf::string_type buf = 136315906;
      *(void *)v372 = "estimatedMslpUncertainty";
      *(_WORD *)&v372[8] = 2048;
      *(void *)&v372[10] = v227;
      *(_WORD *)&v372[18] = 2080;
      *(void *)&v372[20] = "estimatedAbsoluteAltitudeUncertainty";
      *(_WORD *)&v372[28] = 2048;
      *(double *)&v372[30] = estimatedAbsoluteAltitudeUncertainty;
      _os_log_impl( (void *)&_mh_execute_header,  v225,  OS_LOG_TYPE_DEFAULT,  "mslp uncertainty to altitude uncertainty,%s,%f,%s,%f",  buf,  0x2Au);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183BC80);
      }
      __int128 v270 = qword_1019346A8;
      -[CLMeanSeaLevelPressureData uncertainty](self->_queriedMeanSeaLevelPressureData, "uncertainty");
      __int128 v271 = self->_estimatedAbsoluteAltitudeUncertainty;
      v351 = 136315906;
      *(void *)v352 = "estimatedMslpUncertainty";
      *(_WORD *)&v352[8] = 2048;
      *(void *)&v352[10] = v272;
      *(_WORD *)&v352[18] = 2080;
      *(void *)&v352[20] = "estimatedAbsoluteAltitudeUncertainty";
      *(_WORD *)&v352[28] = 2048;
      *(double *)&v352[30] = v271;
      LODWORD(v303) = 42;
      __int128 v273 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v270,  0LL,  "mslp uncertainty to altitude uncertainty,%s,%f,%s,%f",  (const char *)&v351,  v303,  (const char *)v304,  *((double *)&v304 + 1));
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLBarometerCalibrationBiasEstimator updateElevationBiasBetweenStartTime:andEndTime:andNextTrackStartTime:]",  "%s\n",  v273);
      uint64_t v6 = *(double *)&v308;
      __int128 v5 = v309;
    }

    __int128 v228 = -[CLBarometerCalibrationBiasEstimator selectReferenceWithReference:withBaroElevation:betweenStartTime:andEndTime:]( self,  "selectReferenceWithReference:withBaroElevation:betweenStartTime:andEndTime:",  &v325,  v218,  v6,  v5);
    __int128 v229 = objc_opt_new(&OBJC_CLASS___CLMeanSeaLevelPressureData);
    -[CLMeanSeaLevelPressureData setTimestamp:](v229, "setTimestamp:", v5);
    -[CLBarometerCalibrationBiasEstimator computeMeanSeaLevelPressureWithRebasingLocationData:referenceMap:andLocationType:]( self,  "computeMeanSeaLevelPressureWithRebasingLocationData:referenceMap:andLocationType:",  v229,  &v325,  v228);
    if ((_DWORD)v228) {
      -[CLBarometerCalibrationBiasEstimator updateHistoricalMslpArray:](self, "updateHistoricalMslpArray:", v229);
    }
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183BC80);
    }
    __int128 v230 = (os_log_s *)qword_1019346A8;
    if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
    {
      -[CLMeanSeaLevelPressureData meanSeaLevelPressure](v229, "meanSeaLevelPressure");
      __int128 v232 = v231;
      -[CLMeanSeaLevelPressureData uncertainty](v229, "uncertainty");
      v234 = v233;
      -[CLMeanSeaLevelPressureData timestamp](v229, "timestamp");
      *(_DWORD *)std::stringbuf::string_type buf = 136317954;
      *(void *)v372 = "type";
      *(_WORD *)&v372[8] = 1024;
      *(_DWORD *)&v372[10] = v228;
      *(_WORD *)&v372[14] = 2080;
      *(void *)&v372[16] = "meanSeaLevelPressure";
      *(_WORD *)&v372[24] = 2048;
      *(void *)&v372[26] = v232;
      *(_WORD *)&v372[34] = 2080;
      *(void *)&v372[36] = "uncertainty";
      *(_WORD *)&v372[44] = 2048;
      *(void *)&v372[46] = v234;
      *(_WORD *)&v372[54] = 2080;
      *(void *)&v372[56] = "timestamp";
      v373 = 2048;
      uint64_t v374 = v235;
      uint64_t v375 = 2080;
      *(void *)uint64_t v376 = "startAt";
      *(_WORD *)&v376[8] = 2048;
      *(double *)&v376[10] = v6;
      *(_WORD *)&v376[18] = 2080;
      *(void *)&v376[20] = "endAt";
      uint64_t v377 = 2048;
      v378 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v230,  OS_LOG_TYPE_DEFAULT,  "update mean sea level pressure array with location data after rebasing,%s,%d,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f",  buf,  0x76u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019346A0 != -1) {
        dispatch_once(&qword_1019346A0, &stru_10183BC80);
      }
      __int128 v274 = qword_1019346A8;
      -[CLMeanSeaLevelPressureData meanSeaLevelPressure](v229, "meanSeaLevelPressure");
      __int128 v276 = v275;
      -[CLMeanSeaLevelPressureData uncertainty](v229, "uncertainty");
      int v278 = v277;
      -[CLMeanSeaLevelPressureData timestamp](v229, "timestamp");
      v351 = 136317954;
      *(void *)v352 = "type";
      *(_WORD *)&v352[8] = 1024;
      *(_DWORD *)&v352[10] = v228;
      *(_WORD *)&v352[14] = 2080;
      *(void *)&v352[16] = "meanSeaLevelPressure";
      *(_WORD *)&v352[24] = 2048;
      *(void *)&v352[26] = v276;
      *(_WORD *)&v352[34] = 2080;
      *(void *)&v352[36] = "uncertainty";
      *(_WORD *)&v352[44] = 2048;
      *(void *)&v352[46] = v278;
      *(_WORD *)&v352[54] = 2080;
      *(void *)&v352[56] = "timestamp";
      uint64_t v353 = 2048;
      v354 = v279;
      v355 = 2080;
      *(void *)v356 = "startAt";
      *(_WORD *)&v356[8] = 2048;
      *(void *)&v356[10] = v308;
      *(_WORD *)&v356[18] = 2080;
      *(void *)&v356[20] = "endAt";
      uint64_t v357 = 2048;
      v358 = v309;
      __int128 v280 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v274,  0LL,  "update mean sea level pressure array with location data after rebasing,%s,%d,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f",  (const char *)&v351,  118,  (const char *)v304,  *((double *)&v304 + 1),  (const char *)v305,  *((double *)&v305 + 1),  v306,  v307,  v308,  v309,  v310,  v311);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLBarometerCalibrationBiasEstimator updateElevationBiasBetweenStartTime:andEndTime:andNextTrackStartTime:]",  "%s\n",  v280);
    }

    sub_100008390((uint64_t)&v325, v326[0]);
    sub_100008390((uint64_t)&v327, v328);
    goto LABEL_253;
  }

  if (qword_1019346A0 != -1) {
    dispatch_once(&qword_1019346A0, &stru_10183BC80);
  }
  __int128 v7 = (os_log_s *)qword_1019346A8;
  if (os_log_type_enabled((os_log_t)qword_1019346A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 134218240;
    *(double *)v372 = v6;
    *(_WORD *)&v372[8] = 2048;
    *(double *)&v372[10] = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "track is too old, don't rebase,startTime,%f,endTime,%f",  buf,  0x16u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019346A0 != -1) {
      dispatch_once(&qword_1019346A0, &stru_10183BC80);
    }
    v351 = 134218240;
    *(double *)v352 = v6;
    *(_WORD *)&v352[8] = 2048;
    *(double *)&v352[10] = v5;
    LODWORD(v303) = 22;
    __int128 v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019346A8,  0LL,  "track is too old, don't rebase,startTime,%f,endTime,%f",  COERCE_DOUBLE(&v351),  v303);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "-[CLBarometerCalibrationBiasEstimator updateElevationBiasBetweenStartTime:andEndTime:andNextTrackStartTime:]",  "%s\n",  v8);
  }

          *(_DWORD *)(a1 + 136) = v102;
          goto LABEL_267;
        case 0x1Cu:
          *(_DWORD *)(a1 + 164) |= 0x10000000u;
          unint64_t v105 = *((void *)this + 1);
          if (v105 >= *((void *)this + 2))
          {
            char v108 = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            uint64_t v106 = v105 + 1;
            unint64_t v107 = *(unsigned __int8 *)(*(void *)this + v105);
            *((void *)this + 1) = v106;
            char v108 = v107 != 0;
          }

          *(_BYTE *)(a1 + 158) = v108;
          goto LABEL_267;
        case 0x1Du:
          *(_DWORD *)(a1 + 164) |= 0x4000000u;
          uint64_t v109 = *((void *)this + 1);
          if (v109 >= *((void *)this + 2))
          {
            __int128 v112 = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            uint64_t v110 = v109 + 1;
            uint64_t v111 = *(unsigned __int8 *)(*(void *)this + v109);
            *((void *)this + 1) = v110;
            __int128 v112 = v111 != 0;
          }

          *(_BYTE *)(a1 + 156) = v112;
          goto LABEL_267;
        case 0x1Eu:
          *(_DWORD *)(a1 + 164) |= 0x40000000u;
          __int128 v113 = *((void *)this + 1);
          if (v113 >= *((void *)this + 2))
          {
            __int16 v116 = 0;
            *((_BYTE *)this + 24) = 1;
          }

          else
          {
            int v114 = v113 + 1;
            unint64_t v115 = *(unsigned __int8 *)(*(void *)this + v113);
            *((void *)this + 1) = v114;
            __int16 v116 = v115 != 0;
          }

          *(_BYTE *)(a1 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v116;
          goto LABEL_267;
        case 0x1Fu:
          *(_DWORD *)(a1 + 164) |= 1u;
          int v117 = *((void *)this + 1);
          if (v117 > 0xFFFFFFFFFFFFFFF7LL || v117 + 8 > *((void *)this + 2)) {
            goto LABEL_263;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v117);
LABEL_153:
          unint64_t v118 = *((void *)this + 1) + 8LL;
          goto LABEL_266;
        case 0x20u:
          *(_DWORD *)(a1 + 164) |= 0x40u;
          uint64_t v119 = *((void *)this + 1);
          unint64_t v120 = *((void *)this + 2);
          char v121 = *(void *)this;
          if (v119 <= 0xFFFFFFFFFFFFFFF5LL && v119 + 10 <= v120)
          {
            uint64_t v122 = 0;
            uint64_t v123 = 0;
            uint64_t v124 = 0LL;
            do
            {
              __int128 v125 = v119 + 1;
              *((void *)this + 1) = v119 + 1;
              uint64_t v126 = *(_BYTE *)(v121 + v119);
              v124 |= (unint64_t)(v126 & 0x7F) << v122;
              if ((v126 & 0x80) == 0) {
                goto LABEL_243;
              }
              v122 += 7;
              uint64_t v119 = v125;
              __int128 v20 = v123++ > 8;
            }

            while (!v20);
LABEL_207:
            LODWORD(v124) = 0;
            goto LABEL_243;
          }

          __int128 v148 = 0;
          uint64_t v149 = 0;
          uint64_t v124 = 0LL;
          if (v120 <= v119) {
            unint64_t v120 = *((void *)this + 1);
          }
          while (2)
          {
            if (v120 == v119)
            {
              LODWORD(v124) = 0;
              *((_BYTE *)this + 24) = 1;
            }

            else
            {
              __int128 v150 = v119 + 1;
              uint64_t v151 = *(_BYTE *)(v121 + v119);
              *((void *)this + 1) = v150;
              v124 |= (unint64_t)(v151 & 0x7F) << v148;
              if (v151 < 0)
              {
                v148 += 7;
                uint64_t v119 = v150;
                __int128 v20 = v149++ > 8;
                if (v20) {
                  goto LABEL_207;
                }
                continue;
              }

              if (*((_BYTE *)this + 24)) {
                LODWORD(v124) = 0;
              }
            }

            break;
          }

void sub_10048BB54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37, uint64_t a38, char a39, void *a40, uint64_t a41, char a42, void *a43, uint64_t a44, char a45, uint64_t a46, void *__p, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (__p)
  {
    a48 = (uint64_t)__p;
    operator delete(__p);
  }

  sub_10049108C(&a51);
  sub_10049108C(&a57);
  sub_10049108C(&a63);
  _Unwind_Resume(a1);
}

void sub_10048CFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_10000AE14((uint64_t)va);
  sub_10049108C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

NSDictionary *sub_10048D8F0(double *a1)
{
  v3[0] = @"visitDuration";
  v4[0] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a1[4]);
  v3[1] = @"arrivalUncertainty";
  v4[1] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a1[5]);
  v3[2] = @"exitUncertainty";
  v4[2] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a1[6]);
  void v3[3] = @"timeDiffBtwArrivalAndLastRebase";
  void v4[3] = +[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", a1[7]);
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  4LL);
}

void sub_10048E95C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, void *a45, uint64_t a46, int a47, __int16 a48, char a49, char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  if (a76 < 0) {
    operator delete(__p);
  }
  if (a74 < 0) {
    operator delete(a73);
  }
  if (a72 < 0) {
    operator delete(a69);
  }
  if (a68 < 0) {
    operator delete(a63);
  }
  if (a62 < 0) {
    operator delete(a57);
  }
  if (a56 < 0) {
    operator delete(a51);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  if (SLOBYTE(STACK[0x20F]) < 0) {
    operator delete(a77);
  }
  if (SLOBYTE(STACK[0x23F]) < 0) {
    operator delete((void *)STACK[0x228]);
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete((void *)STACK[0x258]);
  }
  if (SLOBYTE(STACK[0x29F]) < 0) {
    operator delete((void *)STACK[0x288]);
  }
  if (SLOBYTE(STACK[0x2CF]) < 0) {
    operator delete((void *)STACK[0x2B8]);
  }
  _Unwind_Resume(a1);
}

id sub_10048EB94(uint64_t a1)
{
  id v2 = +[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary");
  v14[0] = @"inVisit";
  v15[0] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 48));
  v14[1] = @"demAvailableInTrack";
  v15[1] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 49));
  void v14[2] = @"rebaseSource";
  _DWORD v15[2] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 52));
  void v14[3] = @"firstRebaseSinceLocationdStart";
  void v15[3] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 57));
  void v14[4] = @"forcedGPSRecently";
  _OWORD v15[4] = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 50));
  void v14[5] = @"altitudeError_binned";
  BOOL v3 = (void *)(a1 + 64);
  v15[5] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  v14[6] = @"timeToFirstRebase_binned";
  uint64_t v4 = (void *)(a1 + 88);
  v15[6] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v4);
  v14[7] = @"referenceUncertainty_binned";
  __int128 v5 = (void *)(a1 + 112);
  v15[7] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
  _WORD v14[8] = @"uncertainty_binned";
  uint64_t v6 = (void *)(a1 + 136);
  _WORD v15[8] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v6);
  v14[9] = @"timeSinceVisitEntry_binned";
  __int128 v7 = (void *)(a1 + 160);
  _OWORD v15[9] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7);
  v14[10] = @"correction_binned";
  __int128 v8 = (void *)(a1 + 208);
  _OWORD v15[10] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v8);
  v14[11] = @"distanceSinceLastRebase_binned";
  __int128 v9 = (void *)(a1 + 232);
  v15[11] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v9);
  v14[12] = @"timeSinceLastRebase_binned";
  uint64_t v10 = (void *)(a1 + 184);
  v15[12] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v10);
  objc_msgSend( v2,  "setDictionary:",  +[NSDictionary dictionaryWithObjects:forKeys:count:]( NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v15,  v14,  13));
  LODWORD(v11) = *(_DWORD *)(a1 + 40);
  if (*(float *)&v11 != 3.4028e38 && *(float *)(a1 + 44) != 3.4028e38)
  {
    *(float *)&double v11 = (float)(int)(float)(*(float *)&v11 * 100.0) / 100.0;
    objc_msgSend( v2,  "setObject:forKeyedSubscript:",  +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v11),  @"latitude");
    *(float *)&double v12 = (float)(int)(float)(*(float *)(a1 + 44) * 100.0) / 100.0;
    objc_msgSend( v2,  "setObject:forKeyedSubscript:",  +[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v12),  @"longitude");
  }

  if ([*(id *)(a1 + 32) isIHAAuthorized]) {
    objc_msgSend( v2,  "setObject:forKeyedSubscript:",  +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 56)),  @"inOutdoorWorkout");
  }
  return v2;
}

uint64_t sub_10048EEBC(uint64_t a1, uint64_t a2)
{
  return sub_10049006C(a1 + 40, (__int128 *)(a2 + 40));
}

uint64_t sub_10048EEC8(uint64_t a1)
{
  return sub_1004902E8(a1 + 40);
}

void sub_10048F2EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20, uint64_t a21, void *a22, uint64_t a23, uint64_t a24, void *a25, uint64_t a26, uint64_t a27, void *a28, uint64_t a29, uint64_t a30, void *a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (SLOBYTE(STACK[0x247]) < 0) {
    operator delete((void *)STACK[0x230]);
  }
  if (SLOBYTE(STACK[0x22F]) < 0) {
    operator delete((void *)STACK[0x218]);
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete((void *)STACK[0x200]);
  }
  if (a74 < 0) {
    operator delete(a73);
  }
  if (a72 < 0) {
    operator delete(a70);
  }
  if (a69 < 0) {
    operator delete(a64);
  }
  _Unwind_Resume(a1);
}

void sub_10048F46C()
{
}

void sub_10048F474()
{
  uint64_t v1 = *(void *)(v0 - 144);
  if (v1)
  {
    *(void *)(v0 - 136) = v1;
    JUMPOUT(0x10048F450LL);
  }

  JUMPOUT(0x10048F454LL);
}

void sub_10048F488()
{
}

void sub_10048F490()
{
  uint64_t v1 = *(void *)(v0 - 96);
  if (v1)
  {
    *(void *)(v0 - 88) = v1;
    JUMPOUT(0x10048F460LL);
  }

  JUMPOUT(0x10048F464LL);
}

NSDictionary *sub_10048F4A4(uint64_t a1)
{
  v10[0] = @"duration_binned";
  id v2 = (void *)(a1 + 88);
  v11[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v2);
  v10[1] = @"uncertaintyAtEntry_binned";
  BOOL v3 = (void *)(a1 + 40);
  v11[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  void v10[2] = @"uncertaintyAtRebase_binned";
  uint64_t v4 = (void *)(a1 + 64);
  _DWORD v11[2] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v4);
  void v10[3] = @"timeFromEnterToRebase_binned";
  __int128 v5 = (void *)(a1 + 112);
  v11[3] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
  _DWORD v10[4] = @"correctionAtRebase_binned";
  uint64_t v6 = (void *)(a1 + 184);
  _DWORD v11[4] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v6);
  v10[5] = @"altitudeErrorAtRebase_binned";
  __int128 v7 = (void *)(a1 + 136);
  v11[5] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7);
  v10[6] = @"referenceUncertaintyAtRebase_binned";
  __int128 v8 = (void *)(a1 + 160);
  void v11[6] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v8);
  v10[7] = @"rebaseSource";
  void v11[7] = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 32));
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v11,  v10,  8LL);
}

uint64_t sub_10048F648(uint64_t a1, uint64_t a2)
{
  return sub_100490388(a1 + 32, a2 + 32);
}

uint64_t sub_10048F654(uint64_t a1)
{
  return sub_1004905AC(a1 + 32);
}

uint64_t sub_10048F65C(uint64_t a1, __int128 *a2)
{
  __int128 v4 = *a2;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  uint64_t v5 = a1 + 24;
  uint64_t v6 = (__int128 *)((char *)a2 + 24);
  __int128 v7 = *v6;
  *(void *)(v5 + 16) = *((void *)v6 + 2);
  *(_OWORD *)uint64_t v5 = v7;
  *((_BYTE *)a2 + 47) = 0;
  *((_BYTE *)a2 + 24) = 0;
  __int128 v8 = (void **)(a1 + 48);
  __int128 v9 = a2[3];
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(_OWORD *)__int128 v8 = v9;
  *((_BYTE *)a2 + 71) = 0;
  *((_BYTE *)a2 + 48) = 0;
  uint64_t v10 = (void **)(a1 + 72);
  __int128 v11 = *(__int128 *)((char *)a2 + 72);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(_OWORD *)uint64_t v10 = v11;
  *((_BYTE *)a2 + 95) = 0;
  *((_BYTE *)a2 + 72) = 0;
  double v12 = (void **)(a1 + 96);
  __int128 v13 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)double v12 = v13;
  *((_BYTE *)a2 + 119) = 0;
  *((_BYTE *)a2 + 96) = 0;
  __int128 v14 = (void **)(a1 + 120);
  __int128 v15 = *(__int128 *)((char *)a2 + 120);
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  *(_OWORD *)__int128 v14 = v15;
  *((_BYTE *)a2 + 143) = 0;
  *((_BYTE *)a2 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  int v16 = (void **)(a1 + 144);
  __int128 v17 = a2[9];
  *(void *)(a1 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *((void *)a2 + 20);
  *(_OWORD *)int v16 = v17;
  *((_BYTE *)a2 + 167) = 0;
  *((_BYTE *)a2 + 144) = 0;
  uint64_t v18 = (void **)(a1 + 168);
  __int128 v19 = *(__int128 *)((char *)a2 + 168);
  *(void *)(a1 + 184) = *((void *)a2 + 23);
  *(_OWORD *)uint64_t v18 = v19;
  *((_BYTE *)a2 + 191) = 0;
  *((_BYTE *)a2 + 168) = 0;
  __int128 v20 = (void **)(a1 + 192);
  __int128 v21 = a2[12];
  *(void *)(a1 + 208) = *((void *)a2 + 26);
  *(_OWORD *)__int128 v20 = v21;
  *((_BYTE *)a2 + 215) = 0;
  *((_BYTE *)a2 + 192) = 0;
  return a1;
}

void sub_100490040(id a1)
{
  qword_1019346A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Altimeter");
}

uint64_t sub_10049006C(uint64_t a1, __int128 *a2)
{
  __int128 v4 = *a2;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  if (*((char *)a2 + 47) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 24), *((void **)a2 + 3), *((void *)a2 + 4));
  }

  else
  {
    __int128 v5 = *(__int128 *)((char *)a2 + 24);
    *(void *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *((void *)a2 + 5);
    *(_OWORD *)(a1 + 24) = v5;
  }

  if (*((char *)a2 + 71) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 48), *((void **)a2 + 6), *((void *)a2 + 7));
  }

  else
  {
    __int128 v6 = a2[3];
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    *(_OWORD *)(a1 + 48) = v6;
  }

  if (*((char *)a2 + 95) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 72), *((void **)a2 + 9), *((void *)a2 + 10));
  }

  else
  {
    __int128 v7 = *(__int128 *)((char *)a2 + 72);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(_OWORD *)(a1 + 72) = v7;
  }

  if (*((char *)a2 + 119) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 96), *((void **)a2 + 12), *((void *)a2 + 13));
  }

  else
  {
    __int128 v8 = a2[6];
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    *(_OWORD *)(a1 + 96) = v8;
  }

  if (*((char *)a2 + 143) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 120), *((void **)a2 + 15), *((void *)a2 + 16));
  }

  else
  {
    __int128 v9 = *(__int128 *)((char *)a2 + 120);
    *(void *)(a1 + 136) = *((void *)a2 + 17);
    *(_OWORD *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v9;
  }

  if (*((char *)a2 + 167) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 144), *((void **)a2 + 18), *((void *)a2 + 19));
  }

  else
  {
    __int128 v10 = a2[9];
    *(void *)(a1 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *((void *)a2 + 20);
    *(_OWORD *)(a1 + 144) = v10;
  }

  if (*((char *)a2 + 191) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 168), *((void **)a2 + 21), *((void *)a2 + 22));
  }

  else
  {
    __int128 v11 = *(__int128 *)((char *)a2 + 168);
    *(void *)(a1 + 184) = *((void *)a2 + 23);
    *(_OWORD *)(a1 + 168) = v11;
  }

  double v12 = (_BYTE *)(a1 + 192);
  if (*((char *)a2 + 215) < 0)
  {
    sub_1010DD48C(v12, *((void **)a2 + 24), *((void *)a2 + 25));
  }

  else
  {
    __int128 v13 = a2[12];
    *(void *)(a1 + 208) = *((void *)a2 + 26);
    *(_OWORD *)double v12 = v13;
  }

  return a1;
}

void sub_10049023C(_Unwind_Exception *exception_object)
{
  if (v1[191] < 0) {
    operator delete(*v8);
  }
  if (v1[167] < 0) {
    operator delete(*v7);
  }
  if (v1[143] < 0) {
    operator delete(*v6);
  }
  if (v1[119] < 0) {
    operator delete(*v5);
  }
  if (v1[95] < 0) {
    operator delete(*v4);
  }
  if (v1[71] < 0) {
    operator delete(*v3);
  }
  if (v1[47] < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004902E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100490388(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
  }

  else
  {
    __int128 v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }

  if (*(char *)(a2 + 55) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v5;
  }

  if (*(char *)(a2 + 79) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 56), *(void **)(a2 + 56), *(void *)(a2 + 64));
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = v6;
  }

  if (*(char *)(a2 + 103) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 80), *(void **)(a2 + 80), *(void *)(a2 + 88));
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v7;
  }

  if (*(char *)(a2 + 127) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 104), *(void **)(a2 + 104), *(void *)(a2 + 112));
  }

  else
  {
    __int128 v8 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(void *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = v8;
  }

  if (*(char *)(a2 + 151) < 0)
  {
    sub_1010DD48C((_BYTE *)(a1 + 128), *(void **)(a2 + 128), *(void *)(a2 + 136));
  }

  else
  {
    __int128 v9 = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = v9;
  }

  __int128 v10 = (_BYTE *)(a1 + 152);
  if (*(char *)(a2 + 175) < 0)
  {
    sub_1010DD48C(v10, *(void **)(a2 + 152), *(void *)(a2 + 160));
  }

  else
  {
    __int128 v11 = *(_OWORD *)(a2 + 152);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(_OWORD *)__int128 v10 = v11;
  }

  return a1;
}

void sub_100490518(_Unwind_Exception *exception_object)
{
  if (v1[151] < 0) {
    operator delete(*v7);
  }
  if (v1[127] < 0) {
    operator delete(*v6);
  }
  if (v1[103] < 0) {
    operator delete(*v5);
  }
  if (v1[79] < 0) {
    operator delete(*v4);
  }
  if (v1[55] < 0) {
    operator delete(*v3);
  }
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004905AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10049063C(uint64_t a1)
{
  *(_DWORD *)(a1 + 7) = 0;
  *(void *)a1 = 0LL;
  *(_DWORD *)(a1 + 12) = -10;
  *(_WORD *)(a1 + 16) = 0;
  sub_1010DDBC0((void *)(a1 + 24), "NULL");
  sub_1010DDBC0((void *)(a1 + 48), "NULL");
  sub_1010DDBC0((void *)(a1 + 72), "NULL");
  sub_1010DDBC0((void *)(a1 + 96), "NULL");
  sub_1010DDBC0((void *)(a1 + 120), "NULL");
  sub_1010DDBC0((void *)(a1 + 144), "NULL");
  sub_1010DDBC0((void *)(a1 + 168), "NULL");
  sub_1010DDBC0((void *)(a1 + 192), "NULL");
  return a1;
}

void sub_10049072C(_Unwind_Exception *exception_object)
{
  if (v1[191] < 0) {
    operator delete(*v8);
  }
  if (v1[167] < 0) {
    operator delete(*v7);
  }
  if (v1[143] < 0) {
    operator delete(*v6);
  }
  if (v1[119] < 0) {
    operator delete(*v5);
  }
  if (v1[95] < 0) {
    operator delete(*v4);
  }
  if (v1[71] < 0) {
    operator delete(*v3);
  }
  if (v1[47] < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004907D8(int a1, void **__p)
{
  if (__p)
  {
    operator delete(__p);
  }

uint64_t **sub_100490810(uint64_t **a1, int *a2, _DWORD *a3, uint64_t a4)
{
  __int128 v8 = a1 + 1;
  __int128 v7 = a1[1];
  if (v7)
  {
    int v9 = *a2;
    while (1)
    {
      while (1)
      {
        __int128 v10 = (uint64_t **)v7;
        int v11 = *((_DWORD *)v7 + 8);
        if (v9 >= v11) {
          break;
        }
        __int128 v7 = *v10;
        __int128 v8 = v10;
        if (!*v10) {
          goto LABEL_10;
        }
      }

      if (v11 >= v9) {
        break;
      }
      __int128 v7 = v10[1];
      if (!v7)
      {
        __int128 v8 = v10 + 1;
        goto LABEL_10;
      }
    }
  }

  else
  {
    __int128 v10 = a1 + 1;
LABEL_10:
    double v12 = (char *)operator new(0x50uLL);
    *((_DWORD *)v12 + 8) = *a3;
    __int128 v13 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)(v12 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *(_OWORD *)a4;
    *(_OWORD *)(v12 + 56) = v13;
    *((void *)v12 + 9) = *(void *)(a4 + 32);
    sub_1000085FC(a1, (uint64_t)v10, v8, (uint64_t *)v12);
    return (uint64_t **)v12;
  }

  return v10;
}

uint64_t sub_1004908E0(uint64_t a1, void *a2)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  unint64_t v4 = a2[4];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  __int128 v7 = (char *)(v5 + 8 * (v4 >> 8));
  if (v6 == v5)
  {
    __int128 v8 = 0LL;
    int v11 = 0LL;
    __int128 v10 = (char *)(v5 + 8 * ((a2[5] + v4) >> 8));
  }

  else
  {
    __int128 v8 = (void *)(*(void *)v7 + 16LL * v4);
    unint64_t v9 = a2[5] + v4;
    __int128 v10 = (char *)(v5 + 8 * (v9 >> 8));
    int v11 = (void *)(*(void *)v10 + 16LL * v9);
  }

  sub_100490980((void *)a1, v7, v8, v10, v11);
  return a1;
}

void sub_10049096C(_Unwind_Exception *a1)
{
}

void *sub_100490980(void *a1, char *a2, void *a3, char *a4, void *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0LL;
  }
  else {
    unint64_t v5 = (((uint64_t)a5 - *(void *)a4) >> 4) + 32 * (a4 - a2) - (((uint64_t)a3 - *(void *)a2) >> 4);
  }
  return sub_1004909B4(a1, a2, a3, v5);
}

void *sub_1004909B4(void *a1, void *a2, void *a3, unint64_t a4)
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  if (v9 == v8) {
    uint64_t v10 = 0LL;
  }
  else {
    uint64_t v10 = 32 * (v9 - v8) - 1;
  }
  unint64_t v11 = a1[5] + a1[4];
  unint64_t v12 = v10 - v11;
  if (a4 > v12)
  {
    sub_100490B04(a1, a4 - v12);
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2];
    unint64_t v11 = a1[4] + a1[5];
  }

  __int128 v13 = (void *)(v8 + 8 * (v11 >> 8));
  if (v9 == v8) {
    uint64_t v14 = 0LL;
  }
  else {
    uint64_t v14 = *v13 + 16LL * v11;
  }
  v24[0] = v8 + 8 * (v11 >> 8);
  v24[1] = v14;
  __n128 result = sub_10025C760((uint64_t)v24, a4);
  while (v14 != v16)
  {
    __int128 v17 = (void *)(v13 == result ? v16 : *v13 + 4096LL);
    if ((void *)v14 == v17)
    {
      __int128 v17 = (void *)v14;
    }

    else
    {
      uint64_t v18 = (void *)v14;
      do
      {
        void *v18 = *a3;
        uint64_t v19 = a3[1];
        v18[1] = v19;
        if (v19)
        {
          __int128 v20 = (unint64_t *)(v19 + 8);
          do
            unint64_t v21 = __ldxr(v20);
          while (__stxr(v21 + 1, v20));
        }

        a3 += 2;
        if ((void *)((char *)a3 - *a2) == (void *)4096)
        {
          int v22 = (void *)a2[1];
          ++a2;
          a3 = v22;
        }

        v18 += 2;
      }

      while (v18 != v17);
    }

    a1[5] += ((uint64_t)v17 - v14) >> 4;
    if (v13 == result) {
      break;
    }
    uint64_t v23 = v13[1];
    ++v13;
    uint64_t v14 = v23;
  }

  return result;
}

void sub_100490B04(void *a1, unint64_t a2)
{
  BOOL v3 = (char *)a1[2];
  uint64_t v4 = (uint64_t)&v3[-a1[1]];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if ((_BYTE)v5) {
    unint64_t v6 = (v5 >> 8) + 1;
  }
  else {
    unint64_t v6 = v5 >> 8;
  }
  unint64_t v7 = a1[4];
  if (v6 >= v7 >> 8) {
    unint64_t v8 = v7 >> 8;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 >> 8)
  {
    for (a1[4] = v7 - (v8 << 8); v8; --v8)
    {
      uint64_t v16 = (void *)a1[1];
      uint64_t v19 = *v16;
      __int128 v17 = (char *)(v16 + 1);
      uint64_t v18 = v19;
      a1[1] = v17;
      if (v3 == (char *)a1[3])
      {
        uint64_t v20 = (uint64_t)&v17[-*a1];
        if ((unint64_t)v17 <= *a1)
        {
          else {
            unint64_t v28 = (uint64_t)&v3[-*a1] >> 2;
          }
          int v29 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v28);
          __int128 v31 = &v29[8 * (v28 >> 2)];
          __int128 v32 = (uint64_t *)a1[1];
          BOOL v3 = v31;
          uint64_t v33 = a1[2] - (void)v32;
          if (v33)
          {
            BOOL v3 = &v31[v33 & 0xFFFFFFFFFFFFFFF8LL];
            uint64_t v34 = 8 * (v33 >> 3);
            uint64_t v35 = &v29[8 * (v28 >> 2)];
            do
            {
              uint64_t v36 = *v32++;
              *(void *)uint64_t v35 = v36;
              v35 += 8;
              v34 -= 8LL;
            }

            while (v34);
          }

          unint64_t v37 = (char *)*a1;
          *a1 = v29;
          a1[1] = v31;
          a1[2] = v3;
          a1[3] = &v29[8 * v30];
          if (v37)
          {
            operator delete(v37);
            BOOL v3 = (char *)a1[2];
          }
        }

        else
        {
          uint64_t v21 = v20 >> 3;
          BOOL v22 = v20 >> 3 < -1;
          uint64_t v23 = (v20 >> 3) + 2;
          if (v22) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = v21 + 1;
          }
          __int128 v25 = &v17[-8 * (v24 >> 1)];
          int64_t v26 = v3 - v17;
          if (v3 != v17)
          {
            memmove(&v17[-8 * (v24 >> 1)], v17, v3 - v17);
            BOOL v3 = (char *)a1[1];
          }

          __int128 v27 = &v3[-8 * (v24 >> 1)];
          BOOL v3 = &v25[v26];
          a1[1] = v27;
          a1[2] = &v25[v26];
        }
      }

      *(void *)BOOL v3 = v18;
      BOOL v3 = (char *)(a1[2] + 8LL);
      a1[2] = v3;
    }
  }

  else
  {
    unint64_t v9 = v6 - v8;
    uint64_t v10 = a1[3] - *a1;
    if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
    {
      if (v9)
      {
        while (a1[3] != a1[2])
        {
          __p[0] = operator new(0x1000uLL);
          sub_1000EC960(a1, __p);
          --v6;
          if (!--v9) {
            goto LABEL_75;
          }
        }

        for (uint64_t i = 0LL; i != v9; ++i)
        {
          __p[0] = operator new(0x1000uLL);
          sub_1000ECA74((uint64_t)a1, __p);
          if (a1[2] - a1[1] == 8LL) {
            uint64_t v64 = 255LL;
          }
          else {
            uint64_t v64 = 256LL;
          }
          uint64_t v65 = v64 + a1[4];
          a1[4] = v65;
        }

        unint64_t v8 = v6;
      }

      else
      {
LABEL_75:
        uint64_t v65 = a1[4];
      }

      a1[4] = v65 - (v8 << 8);
      if (v8)
      {
        __int128 v66 = (char *)a1[2];
        do
        {
          __int128 v67 = (void *)a1[1];
          uint64_t v70 = *v67;
          __int128 v68 = (char *)(v67 + 1);
          uint64_t v69 = v70;
          a1[1] = v68;
          if (v66 == (char *)a1[3])
          {
            uint64_t v71 = (uint64_t)&v68[-*a1];
            if ((unint64_t)v68 <= *a1)
            {
              else {
                unint64_t v78 = (uint64_t)&v66[-*a1] >> 2;
              }
              uint64_t v79 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v78);
              uint64_t v81 = &v79[8 * (v78 >> 2)];
              char v82 = (uint64_t *)a1[1];
              __int128 v66 = v81;
              uint64_t v83 = a1[2] - (void)v82;
              if (v83)
              {
                __int128 v66 = &v81[v83 & 0xFFFFFFFFFFFFFFF8LL];
                uint64_t v84 = 8 * (v83 >> 3);
                uint64_t v85 = &v79[8 * (v78 >> 2)];
                do
                {
                  uint64_t v86 = *v82++;
                  *(void *)uint64_t v85 = v86;
                  v85 += 8;
                  v84 -= 8LL;
                }

                while (v84);
              }

              uint64_t v87 = (char *)*a1;
              *a1 = v79;
              a1[1] = v81;
              a1[2] = v66;
              a1[3] = &v79[8 * v80];
              if (v87)
              {
                operator delete(v87);
                __int128 v66 = (char *)a1[2];
              }
            }

            else
            {
              uint64_t v72 = v71 >> 3;
              BOOL v22 = v71 >> 3 < -1;
              uint64_t v73 = (v71 >> 3) + 2;
              if (v22) {
                uint64_t v74 = v73;
              }
              else {
                uint64_t v74 = v72 + 1;
              }
              __int128 v75 = &v68[-8 * (v74 >> 1)];
              int64_t v76 = v66 - v68;
              if (v66 != v68)
              {
                memmove(&v68[-8 * (v74 >> 1)], v68, v66 - v68);
                __int128 v66 = (char *)a1[1];
              }

              uint64_t v77 = &v66[-8 * (v74 >> 1)];
              __int128 v66 = &v75[v76];
              a1[1] = v77;
              a1[2] = &v75[v76];
            }
          }

          *(void *)__int128 v66 = v69;
          __int128 v66 = (char *)(a1[2] + 8LL);
          a1[2] = v66;
          --v8;
        }

        while (v8);
      }
    }

    else
    {
      uint64_t v11 = v4 >> 3;
      unint64_t v12 = v10 >> 2;
      if (v12 <= v9 + v11) {
        unint64_t v13 = v9 + v11;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v11 - v8;
      __int128 v91 = a1 + 3;
      if (v13) {
        __int128 v15 = (char *)sub_1000071BC((uint64_t)(a1 + 3), v13);
      }
      else {
        __int128 v15 = 0LL;
      }
      uint64_t v38 = v8 << 8;
      __p[0] = v15;
      __p[1] = &v15[8 * v14];
      *(void **)&__int128 v90 = __p[1];
      *((void *)&v90 + 1) = &v15[8 * v13];
      do
      {
        uint64_t v88 = operator new(0x1000uLL);
        sub_1000ECB90(__p, &v88);
        --v9;
      }

      while (v9);
      if (v8)
      {
        int v39 = (void *)a1[1];
        __int128 v40 = (char *)v90;
        do
        {
          if (v40 == *((char **)&v90 + 1))
          {
            int64_t v41 = (char *)__p[1] - (char *)__p[0];
            if (__p[1] <= __p[0])
            {
              if (v40 == __p[0]) {
                unint64_t v48 = 1LL;
              }
              else {
                unint64_t v48 = (v40 - (char *)__p[0]) >> 2;
              }
              char v49 = (char *)sub_1000071BC((uint64_t)v91, v48);
              int v51 = (uint64_t *)__p[1];
              __int128 v40 = &v49[8 * (v48 >> 2)];
              uint64_t v52 = v90 - (unint64_t)__p[1];
              if ((void *)v90 != __p[1])
              {
                __int128 v40 = &v49[8 * (v48 >> 2) + (v52 & 0xFFFFFFFFFFFFFFF8LL)];
                uint64_t v53 = 8 * (v52 >> 3);
                __int128 v54 = &v49[8 * (v48 >> 2)];
                do
                {
                  uint64_t v55 = *v51++;
                  *(void *)__int128 v54 = v55;
                  v54 += 8;
                  v53 -= 8LL;
                }

                while (v53);
              }

              __int128 v56 = __p[0];
              __p[0] = v49;
              __p[1] = &v49[8 * (v48 >> 2)];
              *(void *)&__int128 v90 = v40;
              *((void *)&v90 + 1) = &v49[8 * v50];
              if (v56)
              {
                operator delete(v56);
                __int128 v40 = (char *)v90;
              }
            }

            else
            {
              uint64_t v42 = v41 >> 3;
              BOOL v22 = v41 >> 3 < -1;
              uint64_t v43 = (v41 >> 3) + 2;
              if (v22) {
                uint64_t v44 = v43;
              }
              else {
                uint64_t v44 = v42 + 1;
              }
              uint64_t v45 = (char *)__p[1] - 8 * (v44 >> 1);
              int64_t v46 = v40 - (char *)__p[1];
              if (v40 != __p[1])
              {
                memmove((char *)__p[1] - 8 * (v44 >> 1), __p[1], v40 - (char *)__p[1]);
                __int128 v40 = (char *)__p[1];
              }

              __int128 v47 = &v40[-8 * (v44 >> 1)];
              __int128 v40 = &v45[v46];
              __p[1] = v47;
              *(void *)&__int128 v90 = &v45[v46];
            }
          }

          *(void *)__int128 v40 = *v39;
          __int128 v40 = (char *)(v90 + 8);
          *(void *)&__int128 v90 = v90 + 8;
          int v39 = (void *)(a1[1] + 8LL);
          a1[1] = v39;
          --v8;
        }

        while (v8);
      }

      __int128 v57 = (void *)a1[2];
      uint64_t v58 = -7LL - (void)v57;
      while (v57 != (void *)a1[1])
      {
        --v57;
        v58 += 8LL;
        sub_1000ECCA4((uint64_t)__p, v57);
      }

      __int128 v59 = (char *)*a1;
      __int128 v60 = *(_OWORD *)__p;
      __int128 v61 = v90;
      __p[0] = *(void **)a1;
      __p[1] = v57;
      __int128 v62 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v60;
      *((_OWORD *)a1 + 1) = v61;
      __int128 v90 = v62;
      a1[4] -= v38;
      if (v57 != (void *)v62) {
        *(void *)&__int128 v90 = v62 + (-(v62 + v58) & 0xFFFFFFFFFFFFFFF8LL);
      }
      if (v59) {
        operator delete(v59);
      }
    }
  }

void sub_100491018( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10049108C(void *a1)
{
  id v2 = (void **)a1[1];
  BOOL v3 = (void **)a1[2];
  if (v3 == v2)
  {
    uint64_t v4 = a1 + 5;
    BOOL v3 = (void **)a1[1];
  }

  else
  {
    uint64_t v4 = a1 + 5;
    unint64_t v5 = a1[4];
    unint64_t v6 = &v2[v5 >> 8];
    uint64_t v7 = (uint64_t)*v6 + 16 * v5;
    if (v7 != v8)
    {
      do
      {
        uint64_t v7 = sub_10000AE14(v7) + 16;
        if (v7 - (void)*v6 == 4096)
        {
          uint64_t v9 = (uint64_t)v6[1];
          ++v6;
          uint64_t v7 = v9;
        }
      }

      while (v7 != v8);
      id v2 = (void **)a1[1];
      BOOL v3 = (void **)a1[2];
    }
  }

  void *v4 = 0LL;
  unint64_t v10 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      BOOL v3 = (void **)a1[2];
      id v2 = (void **)(a1[1] + 8LL);
      a1[1] = v2;
      unint64_t v10 = (char *)v3 - (char *)v2;
    }

    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }

  unint64_t v11 = v10 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 128LL;
  }

  else
  {
    if (v11 != 2) {
      goto LABEL_16;
    }
    uint64_t v12 = 256LL;
  }

  a1[4] = v12;
LABEL_16:
  while (v2 != v3)
  {
    unint64_t v13 = *v2++;
    operator delete(v13);
  }

  return sub_1000EA11C((uint64_t)a1);
}

uint64_t sub_10049119C()
{
  qword_101995C68 = 0x4039000000000000LL;
  qword_101995C78 = 0LL;
  unk_101995C80 = 0LL;
  qword_101995C70 = 0LL;
  uint64_t v0 = operator new(0x30uLL);
  qword_101995C78 = (uint64_t)(v0 + 3);
  unk_101995C80 = v0 + 3;
  *uint64_t v0 = xmmword_1012ED9FC;
  v0[1] = unk_1012EDA0C;
  v0[2] = xmmword_1012EDA1C;
  qword_101995C70 = (uint64_t)v0;
  __cxa_atexit((void (*)(void *))sub_1001B4198, &qword_101995C70, (void *)&_mh_execute_header);
  qword_101995C90 = 0LL;
  unk_101995C98 = 0LL;
  qword_101995C88 = 0LL;
  sub_10001B72C( &qword_101995C88,  (const void *)qword_101995C70,  qword_101995C78,  (qword_101995C78 - qword_101995C70) >> 2);
  __cxa_atexit((void (*)(void *))sub_1001B4198, &qword_101995C88, (void *)&_mh_execute_header);
  qword_101995CA8 = 0LL;
  unk_101995CB0 = 0LL;
  qword_101995CA0 = 0LL;
  uint64_t v1 = operator new(0x24uLL);
  qword_101995CA8 = (uint64_t)(v1 + 9);
  unk_101995CB0 = v1 + 9;
  v1[8] = 1150681088;
  *(_OWORD *)uint64_t v1 = xmmword_1012EDA2C;
  *((_OWORD *)v1 + 1) = unk_1012EDA3C;
  qword_101995CA0 = (uint64_t)v1;
  __cxa_atexit((void (*)(void *))sub_1001B4198, &qword_101995CA0, (void *)&_mh_execute_header);
  qword_101995CC0 = 0LL;
  unk_101995CC8 = 0LL;
  qword_101995CB8 = 0LL;
  id v2 = operator new(0x1CuLL);
  qword_101995CC0 = (uint64_t)v2 + 28;
  unk_101995CC8 = (char *)v2 + 28;
  *id v2 = xmmword_1012EDA50;
  *(_OWORD *)((char *)v2 + 12) = *(__int128 *)((char *)&xmmword_1012EDA50 + 12);
  qword_101995CB8 = (uint64_t)v2;
  __cxa_atexit((void (*)(void *))sub_1001B4198, &qword_101995CB8, (void *)&_mh_execute_header);
  qword_101995CD8 = 0LL;
  unk_101995CE0 = 0LL;
  qword_101995CD0 = 0LL;
  BOOL v3 = operator new(0x4CuLL);
  qword_101995CD8 = (uint64_t)v3 + 76;
  unk_101995CE0 = (char *)v3 + 76;
  v3[2] = xmmword_1012EDA8C;
  void v3[3] = unk_1012EDA9C;
  *(_OWORD *)((char *)v3 + 6sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = unk_1012EDAA8;
  *BOOL v3 = xmmword_1012EDA6C;
  v3[1] = unk_1012EDA7C;
  qword_101995CD0 = (uint64_t)v3;
  __cxa_atexit((void (*)(void *))sub_1001B4198, &qword_101995CD0, (void *)&_mh_execute_header);
  qword_101995CF0 = 0LL;
  unk_101995CF8 = 0LL;
  qword_101995CE8 = 0LL;
  uint64_t v4 = operator new(0x38uLL);
  qword_101995CF0 = (uint64_t)v4 + 56;
  unk_101995CF8 = (char *)v4 + 56;
  _OWORD *v4 = xmmword_1012EDAB8;
  v4[1] = unk_1012EDAC8;
  v4[2] = xmmword_1012EDAD8;
  *((void *)v4 + 6) = 0x48F4240048435000LL;
  qword_101995CE8 = (uint64_t)v4;
  __cxa_atexit((void (*)(void *))sub_1001B4198, &qword_101995CE8, (void *)&_mh_execute_header);
  qword_101995D08 = 0LL;
  unk_101995D10 = 0LL;
  qword_101995D00 = 0LL;
  unint64_t v5 = operator new(0x30uLL);
  qword_101995D08 = (uint64_t)(v5 + 3);
  unk_101995D10 = v5 + 3;
  _OWORD *v5 = xmmword_1012EDAF0;
  v5[1] = unk_1012EDB00;
  void v5[2] = xmmword_1012EDB10;
  qword_101995D00 = (uint64_t)v5;
  return __cxa_atexit((void (*)(void *))sub_1001B4198, &qword_101995D00, (void *)&_mh_execute_header);
}

uint64_t sub_10049140C(uint64_t a1, void *a2)
{
  BOOL v3 = sub_1007BE1BC(a1, a2);
  *BOOL v3 = off_10183BCB0;
  v3[14] = 0LL;
  uint64_t v4 = v3 + 14;
  v3[15] = 0LL;
  unint64_t v5 = v3 + 15;
  sub_1006DE3E4((uint64_t)(v3 + 16));
  *(void *)(a1 + 16sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  *(void *)(a1 + 152) = 0xBFF0000000000000LL;
  *(void *)(a1 + 168) = 0xBFF0000000000000LL;
  *(_BYTE *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0LL;
  uint64_t v6 = a1 + 184;
  *(void *)(a1 + 192) = 0LL;
  *(void *)(a1 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  sub_1002F0B04(&__p);
  int v7 = sub_1002A6F64((uint64_t)__p, "CLTSPEnableDeviceMotionVDRNotifications", v29);
  if (v29[0]) {
    int v8 = v7;
  }
  else {
    int v8 = 0;
  }
  uint64_t v9 = v31;
  if (!v31) {
    goto LABEL_8;
  }
  p_shared_owners = (unint64_t *)&v31->__shared_owners_;
  do
    unint64_t v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (!v8) {
      return a1;
    }
  }

  else
  {
LABEL_8:
    if (!v8) {
      return a1;
    }
  }

  uint64_t v12 = operator new(0x38uLL);
  sub_1010DDBC0(&__p, "PowerAssertionVdrTimer");
  sub_1006B5FBC(v12, &__p, sub_100491964, a1, *(void *)(a1 + 40), 1LL, 1.79769313e308, 1.79769313e308, 0.9);
  if (v32 < 0) {
    operator delete(__p);
  }
  sub_100416D9C(v5, (uint64_t)v12);
  unint64_t v13 = operator new(0x30uLL);
  sub_100AD558C((uint64_t)v13, (uint64_t)"CLVDR", a1, 60.0);
  uint64_t v14 = *(void *)(a1 + 200);
  *(void *)(a1 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v13;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8LL))(v14);
  }
  __int128 v15 =  -[CLDeviceMotionProperties initWithMode:]( objc_alloc(&OBJC_CLASS___CLDeviceMotionProperties),  "initWithMode:",  3LL);
  uint64_t v16 = operator new(0x38uLL);
  sub_1011C06A0(v16, *(void **)(a1 + 40), (uint64_t)sub_100491B34, a1, v15);
  uint64_t v17 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = v16;
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8LL))(v17);
  }
  sub_10036B3B4((uint64_t)sub_100491B44, a1, *(void **)(a1 + 32), &__p);
  uint64_t v18 = __p;
  std::string __p = 0LL;
  uint64_t v19 = *v4;
  void *v4 = v18;
  if (v19)
  {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
    uint64_t v20 = __p;
    std::string __p = 0LL;
    if (v20) {
      (*(void (**)(void *))(*(void *)v20 + 8LL))(v20);
    }
  }

  sub_10043AC3C((uint64_t)sub_100491D14, a1, *(void **)(a1 + 32), &__p);
  uint64_t v21 = __p;
  std::string __p = 0LL;
  uint64_t v22 = *(void *)v6;
  *(void *)uint64_t v6 = v21;
  if (v22)
  {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
    uint64_t v23 = __p;
    std::string __p = 0LL;
    if (v23) {
      (*(void (**)(void *))(*(void *)v23 + 8LL))(v23);
    }
  }

  [*(id *)(*(void *)v6 + 16) register:*(void *)(*(void *)v6 + 8) forNotification:5 registrationInfo:0];
  if (qword_101934950 != -1) {
    dispatch_once(&qword_101934950, &stru_10183BDC8);
  }
  uint64_t v24 = (os_log_s *)qword_101934958;
  if (os_log_type_enabled((os_log_t)qword_101934958, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(__p) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "#VDR, CLVDR2DofNotifierFromDM enabled: (CLTSPEnableDeviceMotionVDRNotifications == true)",  (uint8_t *)&__p,  2u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(&__p, 0x65CuLL);
    if (qword_101934950 != -1) {
      dispatch_once(&qword_101934950, &stru_10183BDC8);
    }
    *(_WORD *)int v29 = 0;
    unint64_t v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  &__p,  1628LL,  &_mh_execute_header,  qword_101934958,  2LL,  "#VDR, CLVDR2DofNotifierFromDM enabled: (CLTSPEnableDeviceMotionVDRNotifications == true)",  v29,  2);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLVDR2DofNotifierFromDM::CLVDR2DofNotifierFromDM(id<CLIntersiloUniverse>)",  "%s\n",  v28);
  }

  if (*v4) {
    [*(id *)(*v4 + 16) register:*(void *)(*v4 + 8) forNotification:1 registrationInfo:0];
  }
  uint64_t v25 = *v5;
  if (*v5)
  {
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    sub_1006B6014(v25, Current + 0.1);
  }

  return a1;
}

void sub_10049185C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  uint64_t v25 = *(void *)(v18 + 200);
  *(void *)(v18 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8LL))(v25);
  }
  uint64_t v26 = *(void *)(v18 + 192);
  *(void *)(v18 + 192) = 0LL;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8LL))(v26);
  }
  uint64_t v27 = *v23;
  *uint64_t v23 = 0LL;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
  }
  sub_100491E84(v21, 0LL);
  nullsub_10(v20);
  sub_100416D9C(v19, 0LL);
  uint64_t v28 = *v22;
  *uint64_t v22 = 0LL;
  if (v28) {
    (*(void (**)(uint64_t))(*(void *)v28 + 8LL))(v28);
  }
  sub_1007BE284(v18);
  _Unwind_Resume(a1);
}

void sub_100491964(uint64_t a1, uint64_t a2)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183BDA8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v4 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLVDR2DofNotifierFromDM::maintainEstimatorState",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183BDA8);
    }
    unint64_t v5 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      unint64_t v11 = "";
      __int16 v12 = 2082;
      unint64_t v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLVDR2DofNotifierFromDM::maintainEstimatorState, event:%{public, location:escape_on ly}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v7 = 0;
  }

  sub_100491F10(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100491B14( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100491B34(uint64_t a1, uint64_t a2)
{
}

void sub_100491B44(uint64_t a1, uint64_t a2, CLMotionActivity *a3, uint64_t a4)
{
  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183BDA8);
  }
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    int v8 = _os_activity_create( (void *)&_mh_execute_header,  "CL: CLVDR2DofNotifierFromDM::onMotionActivityNotification",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183BDA8);
    }
    int v9 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:CLVDR2DofNotifierFromDM::onMotionActivityNotification, event:%{public, location:esc ape_only}s, this:%{public}p}",  buf,  0x26u);
    }
  }

  else
  {
    char v11 = 0;
  }

  sub_100492940(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100491CF4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100491D14(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (*a2 == 5 && (*(_DWORD *)(a3 + 96) & 0xFFFFFFF7) == 1) {
    sub_1006DE3F4(a4 + 128, *(double *)(a3 + 184), *(double *)(a3 + 504));
  }
}

uint64_t sub_100491D48(uint64_t a1)
{
  *(void *)a1 = off_10183BCB0;
  id v2 = (void **)(a1 + 160);
  if (*(void *)(a1 + 160)) {
    sub_100491E84((void **)(a1 + 160), 0LL);
  }
  if (*(void *)(a1 + 120)) {
    sub_100416D9C((uint64_t *)(a1 + 120), 0LL);
  }
  uint64_t v3 = sub_100DDA4D4();
  sub_1006DD2A0(v3, 1, *(void *)(a1 + 192));
  uint64_t v4 = *(void *)(a1 + 112);
  if (v4)
  {
    [*(id *)(v4 + 16) unregister:*(void *)(v4 + 8) forNotification:1];
    uint64_t v5 = *(void *)(a1 + 112);
    *(void *)(a1 + 112) = 0LL;
    if (v5)
    {
      (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
      if (*(void *)(a1 + 112)) {
        [*(id *)(*(void *)(a1 + 184) + 16) unregister:*(void *)(*(void *)(a1 + 184) + 8) forNotification:5];
      }
    }
  }

  uint64_t v6 = *(void *)(a1 + 200);
  *(void *)(a1 + 20sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0LL;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = 0LL;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  sub_100491E84(v2, 0LL);
  nullsub_10(a1 + 128);
  sub_100416D9C((uint64_t *)(a1 + 120), 0LL);
  uint64_t v9 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0LL;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
  }
  return sub_1007BE284(a1);
}

void sub_100491E84(void **a1, void *a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    uint64_t v4 = sub_1006F3E58(v3);
    operator delete(v4);
  }

void sub_100491EB4(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100491D48(a1);
  operator delete(v1);
}

uint64_t sub_100491EC8(int a1, CLMotionActivity *this)
{
  if ((CLMotionActivity::isDriving(this) & 1) != 0 || (CLMotionActivity::isInVehicle(this) & 1) != 0) {
    return 1LL;
  }
  else {
    return CLMotionActivity::isVehicularHighConfidence(this);
  }
}

void sub_100491F10(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 176);
  uint64_t v5 = *(void *)(a1 + 200);
  if (v4)
  {
    if (*(int *)(v5 + 8) >= 1)
    {
      sub_100AD5D38(v5);
      uint64_t v6 = *(void *)(a1 + 200);
      sub_1010DDBC0(__p, "none");
      sub_100AD5668(v6, (uint64_t *)__p);
      if (v29 < 0) {
        operator delete(__p[0]);
      }
      goto LABEL_37;
    }

    if (qword_101934950 != -1) {
      dispatch_once(&qword_101934950, &stru_10183BDC8);
    }
    char v11 = (os_log_s *)qword_101934958;
    if (os_log_type_enabled((os_log_t)qword_101934958, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "#VDR, CLVDR2DofNotifierFromDM::onPowerAssertionTimerEvent establishing power assertion",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934950 != -1) {
        dispatch_once(&qword_101934950, &stru_10183BDC8);
      }
      __int16 v27 = 0;
      uint64_t v20 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934958,  2LL,  "#VDR, CLVDR2DofNotifierFromDM::onPowerAssertionTimerEvent establishing power assertion",  &v27,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLVDR2DofNotifierFromDM::maintainEstimatorState(CLPersistentTimer *)",  "%s\n",  v20);
    }

    uint64_t v12 = *(void *)(a1 + 200);
    sub_1010DDBC0(v25, "none");
    sub_100AD5668(v12, (uint64_t *)v25);
    if (v26 < 0) {
      operator delete(v25[0]);
    }
    if (qword_101934950 != -1) {
      dispatch_once(&qword_101934950, &stru_10183BDC8);
    }
    int v13 = (os_log_s *)qword_101934958;
    if (os_log_type_enabled((os_log_t)qword_101934958, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "#VDR,allocating CLVDR2DofNotifierFromDM estimator",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934950 != -1) {
        dispatch_once(&qword_101934950, &stru_10183BDC8);
      }
      __int16 v27 = 0;
      LODWORD(v24) = 2;
      uint64_t v21 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934958,  2LL,  "#VDR,allocating CLVDR2DofNotifierFromDM estimator",  &v27,  v24);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLVDR2DofNotifierFromDM::maintainEstimatorState(CLPersistentTimer *)",  "%s\n",  v21);
    }

    __int16 v14 = operator new(0x130uLL);
    sub_1006F3DF4((uint64_t)v14);
    sub_100491E84((void **)(a1 + 160), v14);
    uint64_t v15 = *(void **)(a1 + 160);
    *(void *)std::stringbuf::string_type buf = &off_10183BDF8;
    __int128 v31 = sub_100492628;
    char v32 = buf;
    sub_1006F3EA4(v15, (uint64_t)buf, a1);
    __int16 v16 = v32;
    if (v32 == buf)
    {
      uint64_t v17 = 4LL;
      __int16 v16 = buf;
    }

    else
    {
      if (!v32)
      {
LABEL_36:
        uint64_t v18 = sub_100DDA4D4();
        sub_1006DCB40(v18, 1, *(void *)(a1 + 192), 0.01);
        goto LABEL_37;
      }

      uint64_t v17 = 5LL;
    }

    (*(void (**)(void))(*(void *)v16 + 8 * v17))();
    goto LABEL_36;
  }

  if (v5)
  {
    if (*(int *)(v5 + 8) >= 1)
    {
      double v7 = *(double *)(a1 + 168);
      if (v7 < sub_101171D4C() + -300.0)
      {
        if (qword_101934950 != -1) {
          dispatch_once(&qword_101934950, &stru_10183BDC8);
        }
        uint64_t v8 = (os_log_s *)qword_101934958;
        if (os_log_type_enabled((os_log_t)qword_101934958, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "#VDR, CLVDR2DofNotifierFromDM::onPowerAssertionTimerEvent releasing power assertion",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934950 != -1) {
            dispatch_once(&qword_101934950, &stru_10183BDC8);
          }
          __int16 v27 = 0;
          uint64_t v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934958,  2LL,  "#VDR, CLVDR2DofNotifierFromDM::onPowerAssertionTimerEvent releasing power assertion",  &v27,  2);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLVDR2DofNotifierFromDM::maintainEstimatorState(CLPersistentTimer *)",  "%s\n",  v22);
        }

        sub_100AD5D38(*(void *)(a1 + 200));
        if (qword_101934950 != -1) {
          dispatch_once(&qword_101934950, &stru_10183BDC8);
        }
        uint64_t v9 = (os_log_s *)qword_101934958;
        if (os_log_type_enabled((os_log_t)qword_101934958, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::stringbuf::string_type buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "#VDR,deallocating CLVDR2DofNotifierFromDM estimator",  buf,  2u);
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_101934950 != -1) {
            dispatch_once(&qword_101934950, &stru_10183BDC8);
          }
          __int16 v27 = 0;
          LODWORD(v24) = 2;
          uint64_t v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934958,  2LL,  "#VDR,deallocating CLVDR2DofNotifierFromDM estimator",  &v27,  v24);
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLVDR2DofNotifierFromDM::maintainEstimatorState(CLPersistentTimer *)",  "%s\n",  v23);
        }

        sub_100491E84((void **)(a1 + 160), 0LL);
        uint64_t v10 = sub_100DDA4D4();
        sub_1006DD2A0(v10, 1, *(void *)(a1 + 192));
      }
    }
  }

void sub_1004925B0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, int a21, __int16 a22, char a23, char a24, char a25, uint64_t a26, uint64_t a27, char *a28)
{
  uint64_t v30 = a28;
  if (a28 == v28)
  {
    uint64_t v31 = 4LL;
    uint64_t v30 = &a25;
  }

  else
  {
    if (!a28) {
      goto LABEL_6;
    }
    uint64_t v31 = 5LL;
  }

  (*(void (**)(void))(*(void *)v30 + 8 * v31))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

void sub_10049262C(uint64_t a1, uint64_t a2)
{
  if (!a2 || !*(void *)(a1 + 160))
  {
    if (qword_101934950 != -1) {
      dispatch_once(&qword_101934950, &stru_10183BDC8);
    }
    uint64_t v9 = (os_log_s *)qword_101934958;
    if (os_log_type_enabled((os_log_t)qword_101934958, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "#VDR, CLVDR2DofNotifierFromDM::handleDeviceMotionData: Warning - received CLDeviceMotion while no estimator is instantiated.",  buf,  2u);
    }

    if (!sub_1002921D0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934950 != -1) {
      dispatch_once(&qword_101934950, &stru_10183BDC8);
    }
    LOWORD(v15) = 0;
    uint64_t v10 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934958,  2LL,  "#VDR, CLVDR2DofNotifierFromDM::handleDeviceMotionData: Warning - received CLDeviceMotion while no estimator is instantiated.",  &v15,  2);
LABEL_23:
    uint64_t v12 = (uint8_t *)v10;
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLVDR2DofNotifierFromDM::handleDeviceMotionData(const CLDeviceMotion::Sample *)",  "%s\n",  v10);
    if (v12 != buf) {
      free(v12);
    }
    return;
  }

  double v17 = -1.0;
  if (sub_1006DE5F4(a1 + 128, &v17, *(double *)a2))
  {
    int v4 = *(_DWORD *)(a2 + 48);
    int v5 = *(_DWORD *)(a2 + 60);
    int8x16_t v6 = (int8x16_t)vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a2 + 8)), *(float64x2_t *)(a2 + 24));
    *(int8x16_t *)std::stringbuf::string_type buf = vextq_s8(v6, v6, 4uLL);
    uint64_t v7 = *(void *)(a2 + 52);
    uint64_t v8 = *(void *)(a2 + 40);
    sub_100833700((float32x4_t *)buf, *(float32x4_t *)buf);
    uint64_t v15 = v7;
    int v16 = v5;
    uint64_t v13 = v8;
    int v14 = v4;
    sub_1006F4174(*(void *)(a1 + 160), (float *)buf, (float *)&v15, v17, (uint64_t)&v13, (float *)&v13);
    return;
  }

  if (*(double *)a2 - *(double *)(a1 + 152) > 1.0)
  {
    *(void *)(a1 + 152) = *(void *)a2;
    if (qword_101934950 != -1) {
      dispatch_once(&qword_101934950, &stru_10183BDC8);
    }
    char v11 = (os_log_s *)qword_101934958;
    if (os_log_type_enabled((os_log_t)qword_101934958, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "#VDR, CLVDR2DofNotifierFromDM::handleDeviceMotionData: Warning - received CLDeviceMotion while no Mach to GPS co nversion is available.",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934950 != -1) {
        dispatch_once(&qword_101934950, &stru_10183BDC8);
      }
      LOWORD(v15) = 0;
      uint64_t v10 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934958,  2LL,  "#VDR, CLVDR2DofNotifierFromDM::handleDeviceMotionData: Warning - received CLDeviceMotion whi le no Mach to GPS conversion is available.",  &v15,  2);
      goto LABEL_23;
    }
  }

void sub_100492940(uint64_t a1, int a2, int a3, CLMotionActivity *this)
{
  int v5 = sub_100491EC8(a1, this);
  int v6 = *(unsigned __int8 *)(a1 + 176);
  *(_BYTE *)(a1 + 176) = v5;
  if (v6 != v5)
  {
    *(double *)(a1 + 168) = sub_101171D4C();
    uint64_t v7 = *(void *)(a1 + 120);
    if (v7) {
      sub_100491F10(a1, v7);
    }
  }

void sub_100492994(uint64_t a1, __int128 *a2)
{
  if (sub_100492DF0(a1, (double *)a2))
  {
    __int128 v4 = a2[1];
    __int128 v37 = *a2;
    __int128 v38 = v4;
    __int128 v39 = a2[2];
    uint64_t v40 = *((void *)a2 + 6);
    if (qword_101934950 != -1) {
      dispatch_once(&qword_101934950, &stru_10183BDC8);
    }
    int v5 = (os_log_s *)qword_101934958;
    if (os_log_type_enabled((os_log_t)qword_101934958, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(void *)a2;
      uint64_t v7 = *((void *)a2 + 1);
      uint64_t v8 = *((void *)a2 + 2);
      uint64_t v9 = *((void *)a2 + 3);
      uint64_t v10 = *((void *)a2 + 4);
      uint64_t v11 = *((void *)a2 + 5);
      uint64_t v12 = *((void *)a2 + 6);
      *(_DWORD *)std::stringbuf::string_type buf = 134350592;
      uint64_t v56 = v6;
      __int16 v57 = 2050;
      uint64_t v58 = v7;
      __int16 v59 = 2050;
      uint64_t v60 = v8;
      __int16 v61 = 2050;
      uint64_t v62 = v9;
      __int16 v63 = 2050;
      uint64_t v64 = v10;
      __int16 v65 = 2050;
      uint64_t v66 = v11;
      __int16 v67 = 2050;
      uint64_t v68 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "#VDR,CLVDR2DofNotifier,DM,measurement,timestamp_s,%{public}.3f,dataPeriod_s,%{public}.3f,deltaCourse_rad,%{publi c}.6f,deltaSpeed_mps,%{public}.6f,deltaCourseVar_rad2,%{public}.6f,deltaSpeedVar_mps2,%{public}.6f,deltaCourseSp eedCov_radmps,%{public}.6f",  buf,  0x48u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934950 != -1) {
        dispatch_once(&qword_101934950, &stru_10183BDC8);
      }
      uint64_t v21 = *(void *)a2;
      uint64_t v22 = *((void *)a2 + 1);
      uint64_t v23 = *((void *)a2 + 2);
      uint64_t v24 = *((void *)a2 + 3);
      uint64_t v25 = *((void *)a2 + 4);
      uint64_t v26 = *((void *)a2 + 5);
      uint64_t v27 = *((void *)a2 + 6);
      int v41 = 134350592;
      uint64_t v42 = v21;
      __int16 v43 = 2050;
      uint64_t v44 = v22;
      __int16 v45 = 2050;
      uint64_t v46 = v23;
      __int16 v47 = 2050;
      uint64_t v48 = v24;
      __int16 v49 = 2050;
      uint64_t v50 = v25;
      __int16 v51 = 2050;
      uint64_t v52 = v26;
      __int16 v53 = 2050;
      uint64_t v54 = v27;
      uint64_t v28 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934958,  2LL,  "#VDR,CLVDR2DofNotifier,DM,measurement,timestamp_s,%{public}.3f,dataPeriod_s,%{public}.3f,deltaCour se_rad,%{public}.6f,deltaSpeed_mps,%{public}.6f,deltaCourseVar_rad2,%{public}.6f,deltaSpeedVar_mps 2,%{public}.6f,deltaCourseSpeedCov_radmps,%{public}.6f",  &v41,  72,  v37,  v38,  v39,  v40);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLVDR2DofNotifierFromDM::onVDR2DoFMeasurement(const CLVDR2DofMeasurement &)",  "%s\n",  v28);
    }

    *(_DWORD *)std::stringbuf::string_type buf = 0;
    (*(void (**)(uint64_t, uint8_t *, __int128 *, void, uint64_t, void))(*(void *)a1 + 152LL))( a1,  buf,  &v37,  0LL,  0xFFFFFFFFLL,  0LL);
  }

  else
  {
    if (qword_101934950 != -1) {
      dispatch_once(&qword_101934950, &stru_10183BDC8);
    }
    uint64_t v13 = (os_log_s *)qword_101934958;
    if (os_log_type_enabled((os_log_t)qword_101934958, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v14 = *(void *)a2;
      uint64_t v15 = *((void *)a2 + 1);
      uint64_t v16 = *((void *)a2 + 2);
      uint64_t v17 = *((void *)a2 + 3);
      uint64_t v18 = *((void *)a2 + 4);
      uint64_t v19 = *((void *)a2 + 5);
      uint64_t v20 = *((void *)a2 + 6);
      *(_DWORD *)std::stringbuf::string_type buf = 134350592;
      uint64_t v56 = v14;
      __int16 v57 = 2050;
      uint64_t v58 = v15;
      __int16 v59 = 2050;
      uint64_t v60 = v16;
      __int16 v61 = 2050;
      uint64_t v62 = v17;
      __int16 v63 = 2050;
      uint64_t v64 = v18;
      __int16 v65 = 2050;
      uint64_t v66 = v19;
      __int16 v67 = 2050;
      uint64_t v68 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "#VDR,CLVDR2DofNotifierFromDM, Warning, invalid measurement,timestamp,%{public}.3f,dataPeriod,%{public}.3f,deltaC ourse,%{public}.6f,deltaSpeed,%{public}.6f,courseVar,%{public}.6f,speedVar,%{public}.6f,deltaCourseSpeedCovar,%{public}.6f",  buf,  0x48u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934950 != -1) {
        dispatch_once(&qword_101934950, &stru_10183BDC8);
      }
      uint64_t v29 = *(void *)a2;
      uint64_t v30 = *((void *)a2 + 1);
      uint64_t v31 = *((void *)a2 + 2);
      uint64_t v32 = *((void *)a2 + 3);
      uint64_t v33 = *((void *)a2 + 4);
      uint64_t v34 = *((void *)a2 + 5);
      uint64_t v35 = *((void *)a2 + 6);
      int v41 = 134350592;
      uint64_t v42 = v29;
      __int16 v43 = 2050;
      uint64_t v44 = v30;
      __int16 v45 = 2050;
      uint64_t v46 = v31;
      __int16 v47 = 2050;
      uint64_t v48 = v32;
      __int16 v49 = 2050;
      uint64_t v50 = v33;
      __int16 v51 = 2050;
      uint64_t v52 = v34;
      __int16 v53 = 2050;
      uint64_t v54 = v35;
      uint64_t v36 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934958,  2LL,  "#VDR,CLVDR2DofNotifierFromDM, Warning, invalid measurement,timestamp,%{public}.3f,dataPeriod,%{pub lic}.3f,deltaCourse,%{public}.6f,deltaSpeed,%{public}.6f,courseVar,%{public}.6f,speedVar,%{public} .6f,deltaCourseSpeedCovar,%{public}.6f",  &v41,  72);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLVDR2DofNotifierFromDM::onVDR2DoFMeasurement(const CLVDR2DofMeasurement &)",  "%s\n",  v36);
    }
  }

BOOL sub_100492DF0(uint64_t a1, double *a2)
{
  double v2 = a2[1];
  if (v2 == 0.0) {
    return 0LL;
  }
  BOOL v4 = v2 > 0.001;
  if (v2 >= 60.0) {
    BOOL v4 = 0;
  }
  if (fabs(a2[2]) > 3.14159265) {
    BOOL v4 = 0;
  }
  if (fabs(a2[3] / v2) > 20.0) {
    BOOL v4 = 0;
  }
  double v5 = a2[4];
  double v6 = a2[5];
  if (v5 <= 0.0) {
    BOOL v4 = 0;
  }
  if (v6 <= 0.0) {
    BOOL v4 = 0;
  }
  return a2[6] * a2[6] <= v5 * 1.05 * v6 && v4;
}

void sub_100492E88(uint64_t a1, uint64_t a2)
{
  HIDWORD(v14) = a2;
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      else {
        uint64_t v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }

    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::stringbuf::string_type buf = *(_DWORD *)(*(void *)(v6 + 40) + 28LL);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112LL))(a1, a2, buf);
      }

      sub_100233254(v5, (int *)&v14 + 1);
    }

    else
    {
LABEL_12:
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183BDA8);
      }
      uint64_t v10 = (os_log_s *)qword_1019349D8;
      if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
      {
        uint64_t v11 = (void *)(a1 + 8);
        *(_DWORD *)std::stringbuf::string_type buf = 136446466;
        uint64_t v20 = v11;
        __int16 v21 = 1026;
        int v22 = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }

      if (sub_1002921D0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10183BDA8);
        }
        uint64_t v12 = (void *)(a1 + 8);
        int v15 = 136446466;
        uint64_t v16 = v12;
        __int16 v17 = 1026;
        int v18 = a2;
        LODWORD(v14) = 18;
        uint64_t v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                        &v15,
                        v14);
        sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::removeClient( int) [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::Notification Data, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v13);
      }
    }
  }

uint64_t sub_1004930FC(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(_BYTE *)(a1 + 108)) {
    return 0LL;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        uint64_t v13 = (uint64_t *)v7;
      }
      else {
        uint64_t v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }

    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)uint64_t v42 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          uint64_t v24 = (uint64_t *)v18;
        }
        else {
          uint64_t v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }

      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          uint64_t v29 = (uint64_t *)v25;
        }
        else {
          uint64_t v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }

      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v40 = v26;
        uint64_t v34 = *(void *)(v26 + 56);
        char v35 = *a4;
        *(void *)&buf[0] = &v41;
        *((_BYTE *)sub_1004EF3D4((uint64_t **)(v26 + 40), &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v35;
        uint64_t v46 = 0LL;
        memset(buf, 0, sizeof(buf));
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 128LL))(a1, a3, buf))
        {
          uint64_t v36 = sub_1004954B8((uint64_t)buf);
          sub_100494B40((_BYTE *)a1, (uint64_t)v42, (uint64_t)&v40, v36);
        }

        if (v34) {
          goto LABEL_44;
        }
      }

      else
      {
LABEL_42:
        uint64_t v40 = a1 + 64;
        char v30 = byte_101938290;
        HIDWORD(v39) = v17;
        *(void *)&buf[0] = (char *)&v39 + 4;
        *((_BYTE *)sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v30;
        HIDWORD(v39) = *a3;
        *(void *)&buf[0] = (char *)&v39 + 4;
        uint64_t v31 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        sub_1000F0D38(v31 + 8);
        char v32 = *a4;
        HIDWORD(v39) = *a3;
        *(void *)&buf[0] = (char *)&v39 + 4;
        uint64_t v33 = sub_10023347C((uint64_t **)(a1 + 56), (int *)&v39 + 1, (uint64_t)&unk_1012CF090, (_DWORD **)buf);
        *(void *)&buf[0] = &v41;
        *((_BYTE *)sub_1004EF3D4(v33 + 5, &v41, (uint64_t)&unk_1012CF090, (_DWORD **)buf) + 32) = v32;
      }

      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168LL))(a1, a3);
LABEL_44:
      if (v21 == v19)
      {
        LODWORD(buf[0]) = *a3;
        sub_10004A8FC((uint64_t **)(*(void *)v42 + 40LL), (int *)buf, buf);
      }

      return 1LL;
    }
  }

  if (qword_1019349D0 != -1) {
    dispatch_once(&qword_1019349D0, &stru_10183BDA8);
  }
  uint64_t v14 = (os_log_s *)qword_1019349D8;
  if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
  {
    int v15 = (void *)(a1 + 8);
    LODWORD(buf[0]) = 136446466;
    *(void *)((char *)buf + 4) = v15;
    WORD6(buf[0]) = 1026;
    *(_DWORD *)((char *)buf + 14) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
      (uint8_t *)buf,
      0x12u);
  }

  BOOL v16 = sub_1002921D0(115, 0);
  uint64_t result = 0LL;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183BDA8);
    }
    __int128 v37 = (void *)(a1 + 8);
    *(_DWORD *)uint64_t v42 = 136446466;
    *(void *)&v42[4] = v37;
    __int16 v43 = 1026;
    int v44 = a2;
    LODWORD(v39) = 18;
    __int128 v38 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                    v42,
                    v39);
    sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::registerForNotifi cation(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLVDRNotifier_Type::Notification , NotificationData_T = CLVDRNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v38);
    return 0LL;
  }

  return result;
}

BOOL sub_100493564(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      uint64_t v9 = (uint64_t *)v5;
    }
    else {
      uint64_t v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }

  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }

    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }

  else
  {
LABEL_11:
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183BDA8);
    }
    uint64_t v10 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136446466;
      uint64_t v29 = v11;
      __int16 v30 = 1026;
      int v31 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }

    BOOL v12 = sub_1002921D0(115, 0);
    BOOL result = 0LL;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183BDA8);
      }
      int v22 = (void *)(a1 + 8);
      int v24 = 136446466;
      uint64_t v25 = v22;
      __int16 v26 = 1026;
      int v27 = a2;
      BOOL v23 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; client %{public}d does not exist",
                      &v24,
                      18);
      sub_10029211C( "Generic",  1LL,  0,  0LL,  "virtual BOOL CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::clientRegistere d(int, const Notification_T &) [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNot ifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v23);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1004937E4(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0LL;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      uint64_t v10 = (uint64_t *)v4;
    }
    else {
      uint64_t v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }

  while (*v10);
  if (v7 == v3) {
    return 0LL;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0LL;
  }
  int v11 = *(__int128 **)(v7 + 64);
  if (!v11) {
    return 0LL;
  }
  __int128 v12 = *v11;
  __int128 v13 = v11[1];
  __int128 v14 = v11[2];
  *(void *)(a3 + 48) = *((void *)v11 + 6);
  *(_OWORD *)(a3 + 16) = v13;
  *(_OWORD *)(a3 + 32) = v14;
  *(_OWORD *)a3 = v12;
  return 1LL;
}

uint64_t sub_100493854(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = (char *)operator new(0x50uLL);
  __int128 v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v6 + 24) = *(_OWORD *)a3;
  *((void *)v6 + 2) = 0LL;
  *(void *)int v6 = off_10183BEA8;
  *((void *)v6 + 1) = 0LL;
  *(_OWORD *)(v6 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v7;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a3 + 32);
  *((void *)v6 + 9) = *(void *)(a3 + 48);
  *(void *)&__int128 v14 = v6 + 24;
  *((void *)&v14 + 1) = v6;
  int v13 = *a2;
  uint64_t v15 = &v13;
  int v8 = sub_10023347C((uint64_t **)(a1 + 56), &v13, (uint64_t)&unk_1012CF090, &v15);
  sub_10005F550((uint64_t)(v8 + 8), &v14);
  BOOL v9 = (std::__shared_weak_count *)*((void *)&v14 + 1);
  if (*((void *)&v14 + 1))
  {
    uint64_t v10 = (unint64_t *)(*((void *)&v14 + 1) + 8LL);
    do
      unint64_t v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }

  return 1LL;
}

void sub_10049393C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100493950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = 0LL;
  memset(v5, 0, sizeof(v5));
  return (*(uint64_t (**)(uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152LL))( a1,  a2,  v5,  a3,  a4,  0LL);
}

void sub_100493994(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, int a5)
{
  if (!*(_BYTE *)(a1 + 108))
  {
    uint64_t v10 = _os_activity_create( (void *)&_mh_execute_header,  "CL: notifyClientsWithData (Fallback)",  (os_activity_t)&_os_activity_current,  OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
    os_activity_scope_enter(v10, &state);

    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183BDA8);
    }
    unint64_t v11 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v12 = (void *)(a1 + 8);
      int v13 = (std::__shared_weak_count *)*a2;
      *(_DWORD *)std::stringbuf::string_type buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      __int16 v67 = 2082;
      uint64_t v68 = v12;
      __int16 v69 = 2050;
      uint64_t v70 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:notifyClientsWithData, event:%{public, location:escape_only}s, name:%{public, l ocation:escape_only}s, notification:%{public}lld}",  buf,  0x30u);
    }

    uint64_t v15 = (__n128 *)(a1 + 64);
    __int128 v14 = *(__n128 **)(a1 + 64);
    if (!v14) {
      goto LABEL_18;
    }
    signed __int32 v16 = *a2;
    int v17 = (__n128 *)(a1 + 64);
    do
    {
      signed __int32 v18 = v14[2].n128_i32[0];
      BOOL v19 = v18 < v16;
      if (v18 >= v16) {
        BOOL v20 = (__n128 **)v14;
      }
      else {
        BOOL v20 = (__n128 **)&v14->n128_u64[1];
      }
      if (!v19) {
        int v17 = v14;
      }
      __int128 v14 = *v20;
    }

    while (*v20);
    if (v17 == v15 || v16 < (signed __int32)v17[2].n128_u32[0])
    {
LABEL_18:
      *(void *)uint64_t v71 = &v71[8];
      memset(&v71[8], 0, 24);
      uint64_t v72 = 0LL;
      sub_1002343E4((uint64_t)buf, a2, (uint64_t)v71);
      int v17 = sub_1002342A4((uint64_t **)(a1 + 56), (__n128 *)buf);
      uint64_t v21 = v70;
      if (v70)
      {
        p_shared_owners = (unint64_t *)&v70->__shared_owners_;
        do
          unint64_t v23 = __ldaxr(p_shared_owners);
        while (__stlxr(v23 - 1, p_shared_owners));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }

      sub_100008390((uint64_t)&buf[8], *(void **)&buf[16]);
      int v24 = v72;
      if (v72)
      {
        uint64_t v25 = (unint64_t *)&v72->__shared_owners_;
        do
          unint64_t v26 = __ldaxr(v25);
        while (__stlxr(v26 - 1, v25));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }

      sub_100008390((uint64_t)v71, *(void **)&v71[8]);
    }

    if (a4)
    {
      int v27 = (char *)operator new(0x50uLL);
      __int128 v28 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(v27 + 24) = *(_OWORD *)a3;
      *((void *)v27 + 2) = 0LL;
      *(void *)int v27 = off_10183BEA8;
      *((void *)v27 + 1) = 0LL;
      *(_OWORD *)(v27 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = v28;
      *(_OWORD *)(v27 + 56) = *(_OWORD *)(a3 + 32);
      *((void *)v27 + 9) = *(void *)(a3 + 48);
      *(void *)std::stringbuf::string_type buf = v27 + 24;
      *(void *)&uint8_t buf[8] = v27;
      sub_10005F550((uint64_t)&v17[4], (__int128 *)buf);
      uint64_t v29 = *(std::__shared_weak_count **)&buf[8];
      if (*(void *)&buf[8])
      {
        __int16 v30 = (unint64_t *)(*(void *)&buf[8] + 8LL);
        do
          unint64_t v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
    }

    else
    {
      sub_1000F0D38((__n128 *)v17[4].n128_u64);
    }

    if (!v17[3].n128_u64[1]) {
      goto LABEL_83;
    }
    char v32 = sub_1004946DC(a3);
    if (a5 == -1)
    {
      sub_10049476C((void *)a1, (int *)a2, v32);
    }

    else
    {
      uint64_t v33 = a1 + 88;
      uint64_t v34 = *(void *)(a1 + 88);
      if (!v34) {
        goto LABEL_48;
      }
      uint64_t v35 = a1 + 88;
      do
      {
        int v36 = *(_DWORD *)(v34 + 32);
        BOOL v37 = v36 < a5;
        if (v36 >= a5) {
          __int128 v38 = (uint64_t *)v34;
        }
        else {
          __int128 v38 = (uint64_t *)(v34 + 8);
        }
        if (!v37) {
          uint64_t v35 = v34;
        }
        uint64_t v34 = *v38;
      }

      while (*v38);
      if (v35 == v33 || *(_DWORD *)(v35 + 32) > a5) {
LABEL_48:
      }
        uint64_t v35 = a1 + 88;
      uint64_t v64 = v35;
      unint64_t v39 = v15->n128_u64[0];
      if (!v15->n128_u64[0]) {
        goto LABEL_59;
      }
      int v40 = *a2;
      int v41 = (__n128 *)(a1 + 64);
      do
      {
        int v42 = *(_DWORD *)(v39 + 32);
        BOOL v43 = v42 < v40;
        if (v42 >= v40) {
          int v44 = (unint64_t *)v39;
        }
        else {
          int v44 = (unint64_t *)(v39 + 8);
        }
        if (!v43) {
          int v41 = (__n128 *)v39;
        }
        unint64_t v39 = *v44;
      }

      while (*v44);
      if (v41 == v15 || v40 < (signed __int32)v41[2].n128_u32[0])
      {
LABEL_59:
        __int16 v63 = (__n128 *)(a1 + 64);
LABEL_60:
        if (qword_1019349D0 != -1) {
          dispatch_once(&qword_1019349D0, &stru_10183BDA8);
        }
        __int16 v45 = (os_log_s *)qword_1019349D8;
        if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v46 = (void *)(a1 + 8);
          (*(void (**)(_BYTE *__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(v71, a1, a2);
          if (v71[23] >= 0) {
            __int16 v47 = v71;
          }
          else {
            __int16 v47 = *(_BYTE **)v71;
          }
          *(_DWORD *)std::stringbuf::string_type buf = 136315650;
          *(void *)&uint8_t buf[4] = v46;
          *(_WORD *)&_BYTE buf[12] = 1024;
          *(_DWORD *)&_BYTE buf[14] = a5;
          *(_WORD *)&buf[18] = 2080;
          *(void *)&buf[20] = v47;
          _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEBUG,  "%s; client %d has deregistered, not notifying %s",
            buf,
            0x1Cu);
          if ((v71[23] & 0x80000000) != 0) {
            operator delete(*(void **)v71);
          }
        }

        if (sub_1002921D0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1019349D0 != -1) {
            dispatch_once(&qword_1019349D0, &stru_10183BDA8);
          }
          uint64_t v48 = (void *)(a1 + 8);
          uint64_t v49 = qword_1019349D8;
          (*(void (**)(void **__return_ptr, uint64_t, unsigned int *))(*(void *)a1 + 160LL))(__p, a1, a2);
          if (v62 >= 0) {
            uint64_t v50 = __p;
          }
          else {
            uint64_t v50 = (void **)__p[0];
          }
          *(_DWORD *)uint64_t v71 = 136315650;
          *(void *)&v71[4] = v48;
          *(_WORD *)&v71[12] = 1024;
          *(_DWORD *)&v71[14] = a5;
          *(_WORD *)&v71[18] = 2080;
          *(void *)&v71[20] = v50;
          __int16 v51 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v49,  2LL,  "%s; client %d has deregistered, not notifying %s",
                          v71,
                          28,
                          v60);
          if (v62 < 0) {
            operator delete(__p[0]);
          }
          sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::notifyClien tsWithData(const Notification_T &, const NotificationData_T &, BOOL, int, BOOL) [Notification_T = CLVDRNotif ier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, NotificationInfo_T = char , RegistrationInfo_T = char]",  "%s\n",  v51);
          if (v51 != buf) {
            free(v51);
          }
        }

        goto LABEL_83;
      }

      __int16 v63 = v41;
      if (v35 == v33) {
        goto LABEL_60;
      }
      uint64_t v54 = v41[3].n128_i64[0];
      uint64_t v52 = v41 + 3;
      __int16 v53 = (__n128 *)v54;
      if (!v54) {
        goto LABEL_60;
      }
      int v55 = *(_DWORD *)(v35 + 32);
      uint64_t v56 = v52;
      do
      {
        int v57 = v53[1].n128_i32[3];
        BOOL v58 = v57 < v55;
        if (v57 >= v55) {
          __int16 v59 = v53;
        }
        else {
          __int16 v59 = (__n128 *)&v53->n128_i8[8];
        }
        if (!v58) {
          uint64_t v56 = v53;
        }
        __int16 v53 = (__n128 *)v59->n128_u64[0];
      }

      while (v59->n128_u64[0]);
      sub_100494B40((_BYTE *)a1, (uint64_t)&v64, (uint64_t)&v63, v32);
    }

void sub_100493FE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_10049402C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 108))
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183BDA8);
    }
    double v2 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      uint64_t v34 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183BDA8);
      }
      uint64_t v4 = (void *)(a1 + 8);
      int v29 = 136315138;
      __int16 v30 = v4;
      uint64_t v5 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; already shutdown; not listing clients",
                     (const char *)&v29);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::listClients() [ Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, No tificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v5);
    }
  }

  else
  {
    if (qword_1019349D0 != -1) {
      dispatch_once(&qword_1019349D0, &stru_10183BDA8);
    }
    uint64_t v6 = (os_log_s *)qword_1019349D8;
    if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
    {
      __int128 v7 = (void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 96);
      *(_DWORD *)std::stringbuf::string_type buf = 136315394;
      uint64_t v34 = v7;
      __int16 v35 = 2048;
      v36[0] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1019349D0 != -1) {
        dispatch_once(&qword_1019349D0, &stru_10183BDA8);
      }
      uint64_t v25 = (void *)(a1 + 8);
      uint64_t v26 = *(void *)(a1 + 96);
      int v29 = 136315394;
      __int16 v30 = v25;
      __int16 v31 = 2048;
      v32[0] = v26;
      int v27 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; listing clients, num clients: %zu",
                      (const char *)&v29,
                      22);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::listClients() [ Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, No tificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v27);
    }

    BOOL v9 = *(void **)(a1 + 80);
    if (v9 != (void *)(a1 + 88))
    {
      uint64_t v10 = (void *)(a1 + 8);
      do
      {
        unint64_t v11 = (void *)v9[5];
        if (v11 != v9 + 6)
        {
          do
          {
            if (qword_1019349D0 != -1) {
              dispatch_once(&qword_1019349D0, &stru_10183BDA8);
            }
            __int128 v12 = (os_log_s *)qword_1019349D8;
            if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_DEBUG))
            {
              int v13 = (void *)(a1 + 8);
              int v14 = *((_DWORD *)v9 + 8);
              int v15 = *((_DWORD *)v11 + 7);
              *(_DWORD *)std::stringbuf::string_type buf = 136315650;
              uint64_t v34 = v13;
              __int16 v35 = 1024;
              LODWORD(v36[0]) = v14;
              WORD2(v36[0]) = 1024;
              *(_DWORD *)((char *)v36 + 6) = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }

            if (sub_1002921D0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10183BDA8);
              }
              BOOL v19 = (void *)(a1 + 8);
              int v20 = *((_DWORD *)v9 + 8);
              int v21 = *((_DWORD *)v11 + 7);
              int v29 = 136315650;
              __int16 v30 = v19;
              __int16 v31 = 1024;
              LODWORD(v32[0]) = v20;
              WORD2(v32[0]) = 1024;
              *(_DWORD *)((char *)v32 + 6) = v21;
              int v22 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  2LL,  "%s; clients, id: %d, notification: %d",
                              (const char *)&v29,
                              24,
                              v28);
              sub_10029211C( "Generic",  1LL,  0,  2LL,  "virtual void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::listCli ents() [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::Noti ficationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v22);
            }

            signed __int32 v16 = (void *)v11[1];
            if (v16)
            {
              do
              {
                int v17 = v16;
                signed __int32 v16 = (void *)*v16;
              }

              while (v16);
            }

            else
            {
              do
              {
                int v17 = (void *)v11[2];
                BOOL v18 = *v17 == (void)v11;
                unint64_t v11 = v17;
              }

              while (!v18);
            }

            unint64_t v11 = v17;
          }

          while (v17 != v9 + 6);
        }

        unint64_t v23 = (void *)v9[1];
        if (v23)
        {
          do
          {
            int v24 = v23;
            unint64_t v23 = (void *)*v23;
          }

          while (v23);
        }

        else
        {
          do
          {
            int v24 = (void *)v9[2];
            BOOL v18 = *v24 == (void)v9;
            BOOL v9 = v24;
          }

          while (!v18);
        }

        BOOL v9 = v24;
      }

      while (v24 != (void *)(a1 + 88));
    }
  }

void sub_1004945D4(id a1)
{
  qword_1019349D8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100494600(id a1)
{
  qword_101934958 = (uint64_t)os_log_create("com.apple.locationd.Position", "VDR");
}

void *sub_10049462C(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &off_10183BDF8;
  result[1] = v3;
  return result;
}

uint64_t sub_100494664(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &off_10183BDF8;
  a2[1] = v2;
  return result;
}

uint64_t sub_100494684(uint64_t a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t))(a1 + 8))(*a2, a3);
}

uint64_t sub_100494694(uint64_t a1, uint64_t a2)
{
  else {
    return 0LL;
  }
}

_UNKNOWN **sub_1004946D0()
{
  return &off_10183BE78;
}

CLCppContainer *sub_1004946DC(uint64_t a1)
{
  uint64_t v2 = operator new(0x38uLL);
  __int128 v3 = *(_OWORD *)(a1 + 16);
  *uint64_t v2 = *(_OWORD *)a1;
  v2[1] = v3;
  v2[2] = *(_OWORD *)(a1 + 32);
  *((void *)v2 + 6) = *(void *)(a1 + 48);
  uint64_t v5 = _NSConcreteStackBlock;
  uint64_t v6 = 3221225472LL;
  __int128 v7 = sub_100494C5C;
  uint64_t v8 = &unk_10181D3D0;
  BOOL v9 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_10049476C(void *a1, int *a2, void *a3)
{
  if (!*((_BYTE *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      BOOL v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          __int128 v12 = (uint64_t *)v4;
        }
        else {
          __int128 v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          BOOL v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }

      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        uint64_t v50 = v9;
        id v13 = sub_100494C6C(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184LL))(a1, a2, v13, v9 + 10);
        int v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          signed __int32 v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            BOOL v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                BOOL v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }

            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v49 = v19;
              sub_100494B40(a1, (uint64_t)&v49, (uint64_t)&v50, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              int v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  char v32 = (uint64_t *)v27;
                }
                else {
                  char v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  int v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }

              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              uint64_t v50 = v29;
              uint64_t v34 = v29[6];
              int v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                __int16 v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    unint64_t v39 = (uint64_t *)v36;
                  }
                  else {
                    unint64_t v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    __int16 v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }

                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      int v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      int v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      int v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }

                  while (*v42);
                }

                else
                {
                  BOOL v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      int v14 = v43;
                      BOOL v43 = (void *)*v43;
                    }

                    while (v43);
                  }

                  else
                  {
                    do
                    {
                      int v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      __int16 v35 = v14;
                    }

                    while (!v44);
                  }
                }
              }
            }

            else
            {
LABEL_25:
              uint64_t v49 = a1 + 11;
              if (qword_1019349D0 != -1) {
                dispatch_once(&qword_1019349D0, &stru_10183BDA8);
              }
              int v24 = (os_log_s *)qword_1019349D8;
              if (os_log_type_enabled((os_log_t)qword_1019349D8, OS_LOG_TYPE_FAULT))
              {
                uint64_t v25 = a1 + 1;
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::stringbuf::string_type buf = 136446466;
                uint64_t v56 = v25;
                __int16 v57 = 1026;
                int v58 = v26;
                _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_FAULT,  "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }

              if (sub_1002921D0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1019349D0 != -1) {
                  dispatch_once(&qword_1019349D0, &stru_10183BDA8);
                }
                __int16 v45 = a1 + 1;
                int v46 = *((_DWORD *)v14 + 7);
                int v51 = 136446466;
                uint64_t v52 = v45;
                __int16 v53 = 1026;
                int v54 = v46;
                LODWORD(v48) = 18;
                __int16 v47 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_1019349D8,  17LL,  "%{public}s; unknown client %{public}d",
                                &v51,
                                v48);
                sub_10029211C( "Generic",  1LL,  0,  0LL,  "void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::invokeClients WithData(const Notification_T &, CLCppContainer *) [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]",  "%s\n",  v47);
              }
            }
          }

          while (v14 != v50 + 6);
        }
      }
    }
  }

_BYTE *sub_100494B40(_BYTE *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    __int128 v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32LL);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32LL);
    id v9 = sub_100494C6C(a4);
    uint64_t v10 = *(void *)a3 + 80LL;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40LL);
    int v14 = (int *)(*(void *)a2 + 32LL);
    __int128 v12 = sub_1004EF3D4(v11, v14, (uint64_t)&unk_1012CF090, &v14);
    BOOL result = (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192LL))( v7,  v8,  &v13,  v9,  v10,  v12 + 4);
    if ((_DWORD)result) {
      return objc_msgSend( *(id *)(*(void *)a2 + 64),  "onNotification:withData:",  *(unsigned int *)(*(void *)a3 + 32),  a4,  v13);
    }
  }

  return result;
}

void sub_100494C1C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10183BEA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100494C30(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10183BEA8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_100494C5C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

id sub_100494C6C(void *a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___CLCppEncodableDataContainer);
  if ((objc_opt_isKindOfClass(a1, v2) & 1) != 0) {
    return sub_100494CE4(a1);
  }
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___CLCppContainer);
  if ((objc_opt_isKindOfClass(a1, v4) & 1) != 0) {
    return sub_10049506C(a1);
  }
  else {
    return 0LL;
  }
}

id sub_100494CE4(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_100495418((uint64_t)&v8 + 7, a1);
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183BEE8);
    }
    __int128 v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x80000001012EDCB4LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183BEE8);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183BEE8);
    }
    uint64_t v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v11 = v2;
      __int16 v12 = 2048;
      uint64_t v13 = 0LL;
      __int16 v14 = 2080;
      unint64_t v15 = 0x80000001012EDCB4LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183BEE8);
    }
    LODWORD(v9) = 134218498;
    HIDWORD(v9) = (_DWORD)v2;
    LODWORD(v8) = 32;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v9,  v8,  v9);
  }

  __int128 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLVDRNotifier_Type::NotificationData, Callbacuint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_10049506C(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return [a1 cppObjectPtr];
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183BEE8);
    }
    __int128 v3 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012EDCB4LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183BEE8);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  16LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  else
  {
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183BEE8);
    }
    uint64_t v6 = (os_log_s *)qword_101934478;
    if (os_log_type_enabled((os_log_t)qword_101934478, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 134218498;
      id v10 = v2;
      __int16 v11 = 2048;
      uint64_t v12 = 0LL;
      __int16 v13 = 2080;
      unint64_t v14 = 0x80000001012EDCB4LL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_FAULT,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  buf,  0x20u);
    }

    if (!sub_1002921D0(115, 0)) {
      return 0LL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_101934470 != -1) {
      dispatch_once(&qword_101934470, &stru_10183BEE8);
    }
    LODWORD(v8) = 134218498;
    HIDWORD(v8) = (_DWORD)v2;
    uint64_t v4 = (const char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934478,  17LL,  "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly becaus e the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly",  &v8,  32,  v8);
  }

  __int128 v7 = (uint8_t *)v4;
  sub_10029211C( "Generic",  1LL,  0,  0LL,  "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLVDRNotifier_Type::NotificationData, Callbacuint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]",  "%s\n",  v4);
  if (v7 != buf) {
    free(v7);
  }
  return 0LL;
}

id sub_100495418(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1018D3488))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)56) {
      sub_10123A930();
    }
    objc_msgSend(a2, "setCppObjectPtr:", objc_msgSend(objc_msgSend(a2, "serialized"), "bytes"));
  }

  return [a2 cppObjectPtr];
}

void sub_10049548C(id a1)
{
  qword_101934478 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

CLCppContainer *sub_1004954B8(uint64_t a1)
{
  id v2 = operator new(0x38uLL);
  __int128 v3 = *(_OWORD *)(a1 + 16);
  *id v2 = *(_OWORD *)a1;
  v2[1] = v3;
  v2[2] = *(_OWORD *)(a1 + 32);
  *((void *)v2 + 6) = *(void *)(a1 + 48);
  uint64_t v5 = _NSConcreteStackBlock;
  uint64_t v6 = 3221225472LL;
  __int128 v7 = sub_100495548;
  uint64_t v8 = &unk_10181D3D0;
  uint64_t v9 = v2;
  return +[CLCppContainer containerWithObject:destructor:binaryVersion:typeSize:]( &OBJC_CLASS___CLCppContainer,  "containerWithObject:destructor:binaryVersion:typeSize:");
}

void sub_100495548(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1) {
    operator delete(v1);
  }
}

void sub_100495558()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_101936138);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_101936138))
    {
      uint64_t v2 = 0x7FFFFFFF00000000LL;
      v1[2] = xmmword_1012EDB58;
      v1[3] = unk_1012EDB68;
      v1[4] = xmmword_1012EDB78;
      v1[0] = xmmword_1012EDB38;
      v1[1] = unk_1012EDB48;
      sub_1001BB3C4((uint64_t)&unk_101936120, (int *)v1, 11LL);
      __cxa_atexit((void (*)(void *))sub_1001BA444, &unk_101936120, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_101936138);
    }
  }

void sub_10049562C(_Unwind_Exception *a1)
{
}

uint64_t sub_100495644(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 0LL;
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  uint64_t v4 = 0x3FF99999A0000000LL;
  sub_101204164((unsigned __int8 *)(a1 + 40), "FallUserMaxMets", &v4, 0);
  return a1;
}

void sub_1004956A8(_Unwind_Exception *exception_object)
{
  __int128 v3 = v2;
  uint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 24) = v5;
    operator delete(v5);
  }

  _Unwind_Resume(exception_object);
}

uint64_t sub_1004956CC(uint64_t a1, double *a2, double a3)
{
  if (*(_BYTE *)(a1 + 40))
  {
    *a2 = *(double *)(a1 + 48);
    return 1LL;
  }

  else
  {
    std::string __p = 0LL;
    signed __int32 v16 = 0LL;
    uint64_t v17 = 0LL;
    sub_10023C4BC(a1 + 8, &__p);
    uint64_t v6 = (float *)__p;
    if (__p == v16) {
      goto LABEL_13;
    }
    double v7 = 0.0;
    uint64_t v8 = (int *)__p;
    do
    {
      double v7 = (double)(v8[1] + (uint64_t)v7);
      v8 += 2;
    }

    while (v8 != v16);
    uint64_t v9 = (uint64_t)v7;
    if ((uint64_t)v7 < 1 || __p == v16)
    {
LABEL_13:
      uint64_t v4 = 0LL;
      *a2 = NAN;
    }

    else
    {
      uint64_t v11 = 0LL;
      while (1)
      {
        v11 += *((int *)v6 + 1);
        v6 += 2;
      }

      *a2 = *v6;
      if (qword_1019345D0 != -1) {
        dispatch_once(&qword_1019345D0, &stru_10183BF28);
      }
      __int16 v13 = (os_log_s *)qword_1019345D8;
      uint64_t v4 = 1LL;
      if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_INFO))
      {
        double v14 = *a2;
        *(_DWORD *)std::stringbuf::string_type buf = 68289539;
        int v19 = 0;
        __int16 v20 = 2082;
        BOOL v21 = "";
        __int16 v22 = 2049;
        uint64_t v23 = v9;
        __int16 v24 = 2049;
        double v25 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "{msg%{public}.0s:MaxMETs,MET Minutes, total count:%{private}ld, Max. METs:%{private}f}",  buf,  0x26u);
      }
    }

    if (__p)
    {
      signed __int32 v16 = (int *)__p;
      operator delete(__p);
    }
  }

  return v4;
}

void sub_10049589C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1004958B8(uint64_t a1)
{
  uint64_t v5 = 0LL;
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  sub_10023C4BC(a1 + 8, &v5);
  if (v5 == v6)
  {
    uint64_t v3 = 0LL;
    if (!v5) {
      return v3;
    }
    goto LABEL_5;
  }

  double v1 = 0.0;
  uint64_t v2 = v5;
  do
  {
    uint64_t v3 = (v2[1] + (int)v1);
    double v1 = (double)(int)v3;
    v2 += 2;
  }

  while (v2 != v6);
  if (v5)
  {
LABEL_5:
    uint64_t v6 = v5;
    operator delete(v5);
  }

  return v3;
}

void sub_100495938( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100495954(uint64_t a1, double a2, double a3)
{
  double Current = CFAbsoluteTimeGetCurrent();
  double v7 = *(double *)(a1 + 8);
  double v8 = Current + -28800.0;
  if (v7 <= Current + -28800.0)
  {
    double v9 = Current + -86400.0;
    if (v7 >= v9) {
      double v10 = *(double *)(a1 + 8);
    }
    else {
      double v10 = v9;
    }
    double v11 = v9 + 28800.0;
    if (v7 + 28800.0 >= v11) {
      double v12 = v7 + 28800.0;
    }
    else {
      double v12 = v11;
    }
    if (qword_1019345D0 != -1) {
      dispatch_once(&qword_1019345D0, &stru_10183BF28);
    }
    __int16 v13 = (os_log_s *)qword_1019345D8;
    if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 68289539;
      int v18 = 0;
      __int16 v19 = 2082;
      __int16 v20 = "";
      __int16 v21 = 2049;
      double v22 = v10;
      __int16 v23 = 2049;
      double v24 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "{msg%{public}.0s:MaxMETs,Setting query range, start_s:%{private}.09f, end_s:%{private}.09f}",  buf,  0x26u);
    }

    double v14 = *(void **)a1;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    void v16[2] = sub_100495AFC;
    void v16[3] = &unk_10183BF08;
    v16[4] = a1;
    *(double *)&v16[5] = v10;
    *(double *)&v16[6] = v12;
    *(double *)&v16[7] = a2;
    *(double *)&_WORD v16[8] = a3;
    objc_msgSend(v14, "queryMetMinutesInTimeRange:withReply:", v16, v10, v12);
  }

  return v7 <= v8;
}

void sub_100495AFC(uint64_t a1, void *a2, int a3)
{
  if (a3 == 100)
  {
    sub_10023CA3C( *(void *)(a1 + 32) + 8LL,  a2,  *(double *)(a1 + 40),  *(double *)(a1 + 48),  *(double *)(a1 + 56),  *(double *)(a1 + 64));
  }

  else
  {
    if (qword_1019345D0 != -1) {
      dispatch_once(&qword_1019345D0, &stru_10183BF28);
    }
    uint64_t v4 = (os_log_s *)qword_1019345D8;
    if (os_log_type_enabled((os_log_t)qword_1019345D8, OS_LOG_TYPE_ERROR))
    {
      int v6 = 68289282;
      int v7 = 0;
      __int16 v8 = 2082;
      double v9 = "";
      __int16 v10 = 1026;
      int v11 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "{msg%{public}.0s:MaxMETs,query,, error:%{public}d}",  (uint8_t *)&v6,  0x18u);
      if (qword_1019345D0 != -1) {
        dispatch_once(&qword_1019345D0, &stru_10183BF28);
      }
    }

    uint64_t v5 = (os_log_s *)qword_1019345D8;
    if (os_signpost_enabled((os_log_t)qword_1019345D8))
    {
      int v6 = 68289282;
      int v7 = 0;
      __int16 v8 = 2082;
      double v9 = "";
      __int16 v10 = 1026;
      int v11 = a3;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v5,  OS_SIGNPOST_EVENT,  0xEEEEB0B5B2B2EEEELL,  "MaxMETs,query,",  "{msg%{public}.0s:MaxMETs,query,, error:%{public}d}",  (uint8_t *)&v6,  0x18u);
    }
  }

void sub_100495CC8(id a1)
{
  qword_1019345D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Fall");
}

uint64_t sub_100495CF4()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_101995D18, (void *)&_mh_execute_header);
}

uint64_t sub_100495D38(uint64_t a1, int a2, char a3, __int128 *a4, double a5)
{
  *(_DWORD *)a1 = a2;
  *(_DWORD *)(a1 + 4) = 0;
  *(_BYTE *)(a1 + 8) = a3;
  uint64_t v7 = a1 + 16;
  if (*((char *)a4 + 23) < 0)
  {
    sub_1010DD48C((_BYTE *)v7, *(void **)a4, *((void *)a4 + 1));
  }

  else
  {
    __int128 v8 = *a4;
    *(void *)(v7 + 16) = *((void *)a4 + 2);
    *(_OWORD *)uint64_t v7 = v8;
  }

  *(double *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a5;
  *(_DWORD *)(a1 + 48) = 0;
  *(_WORD *)(a1 + 52) = 0;
  *(void *)(a1 + 56) = 0xFFFFFFFF00000000LL;
  __asm { FMOV            V0.2D, #-1.0 }

  *(_OWORD *)(a1 + 64) = _Q0;
  *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = _Q0;
  *(void *)(a1 + 96) = 0xBFF0000000000000LL;
  *(_DWORD *)(a1 + 104) = 0;
  *(_WORD *)(a1 + 108) = 1;
  *(_BYTE *)(a1 + 11sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 128) = 0LL;
  *(void *)(a1 + 136) = 0LL;
  *(void *)(a1 + 12sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = 0LL;
  return a1;
}

uint64_t sub_100495DD4(uint64_t a1)
{
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_100495E34( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100495E54(_DWORD *a1)
{
  return *a1 == 1;
}

BOOL sub_100495E64(_DWORD *a1)
{
  return *a1 == 6;
}

BOOL sub_100495E74(_DWORD *a1)
{
  return *a1 == 1 || *a1 == 6;
}

BOOL sub_100495E88(_DWORD *a1)
{
  return *a1 == 2;
}

BOOL sub_100495E98(_DWORD *a1)
{
  return *a1 != 0;
}

BOOL sub_100495EA8(_DWORD *a1)
{
  return !*a1 && a1[1] == 1;
}

std::string *sub_100495EC8(int *a1)
{
  if (qword_101934850 != -1) {
    dispatch_once(&qword_101934850, &stru_10183BF68);
  }
  uint64_t v2 = (os_log_s *)qword_101934858;
  if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *a1;
    *(_DWORD *)std::stringbuf::string_type buf = 67240192;
    int v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "WifiFlow, reset, last, %{public}d", buf, 8u);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183BF68);
    }
    int v6 = *a1;
    v8[0] = 67240192;
    v8[1] = v6;
    uint64_t v7 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  0LL,  "WifiFlow, reset, last, %{public}d",  v8,  8);
    sub_10029211C("Generic", 1LL, 0, 2LL, "void CLWifiLocationUpdateRequest::reset()", "%s\n", v7);
  }

  int v4 = *a1;
  *a1 = 0;
  a1[1] = v4;
  a1[12] = 0;
  *((void *)a1 + 5) = 0xBFF0000000000000LL;
  return std::string::assign((std::string *)(a1 + 4), "default");
}

void sub_10049609C(uint64_t a1, int a2, unsigned int a3, double a4)
{
  if (*(_DWORD *)(a1 + 56) == a2)
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183BF68);
    }
    uint64_t v5 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEBUG))
    {
      else {
        int v6 = off_10183BFA8[a2 - 1];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136446210;
      *(void *)&uint8_t buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "WifiStep, same, %{public}s", buf, 0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10183BF68);
      }
      else {
        double v12 = off_10183BFA8[a2 - 1];
      }
      int v62 = 136446210;
      __int16 v63 = v12;
      __int16 v45 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934858,  2LL,  "WifiStep, same, %{public}s",  &v62,  12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationUpdateRequest::updateStep(Step, CFAbsoluteTime, DoneReason)",  "%s\n",  v45);
      if (v45 != buf) {
        free(v45);
      }
    }
  }

  else
  {
    if (qword_101934850 != -1) {
      dispatch_once(&qword_101934850, &stru_10183BF68);
    }
    int v10 = (os_log_s *)qword_101934858;
    if (os_log_type_enabled((os_log_t)qword_101934858, OS_LOG_TYPE_DEFAULT))
    {
      else {
        int v11 = off_10183BFA8[a2 - 1];
      }
      unsigned int v13 = *(_DWORD *)(a1 + 56) - 1;
      if (v13 > 4) {
        double v14 = "none";
      }
      else {
        double v14 = off_10183BFA8[v13];
      }
      *(_DWORD *)std::stringbuf::string_type buf = 136446722;
      *(void *)&uint8_t buf[4] = v11;
      *(_WORD *)&_BYTE buf[12] = 2082;
      *(void *)&_BYTE buf[14] = v14;
      *(_WORD *)&_BYTE buf[22] = 2082;
      uint64_t v81 = sub_100496B14(a3);
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "WifiFlow, step, %{public}s, from, %{public}s, donereason, %{public}s",  buf,  0x20u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934850 != -1) {
        dispatch_once(&qword_101934850, &stru_10183BF68);
      }
      uint64_t v43 = qword_101934858;
      else {
        BOOL v44 = off_10183BFA8[a2 - 1];
      }
      unsigned int v46 = *(_DWORD *)(a1 + 56) - 1;
      if (v46 > 4) {
        __int16 v47 = "none";
      }
      else {
        __int16 v47 = off_10183BFA8[v46];
      }
      int v62 = 136446722;
      __int16 v63 = v44;
      __int16 v64 = 2082;
      __int16 v65 = v47;
      __int16 v66 = 2082;
      __int16 v67 = sub_100496B14(a3);
      uint64_t v48 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v43,  0LL,  "WifiFlow, step, %{public}s, from, %{public}s, donereason, %{public}s",  &v62,  32);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationUpdateRequest::updateStep(Step, CFAbsoluteTime, DoneReason)",  "%s\n",  v48);
      if (v48 != buf) {
        free(v48);
      }
    }

    *(_DWORD *)(a1 + 56) = a2;
    if (a2 == 5)
    {
      *(_DWORD *)(a1 + 6sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = a3;
      double v21 = *(double *)(a1 + 64);
      double v20 = *(double *)(a1 + 72);
      double v22 = a4 - v21;
      *(double *)(a1 + 96) = a4 - v21;
      if (v20 <= 0.0) {
        double v23 = -1.0;
      }
      else {
        double v23 = v21 - v20;
      }
      *(double *)(a1 + 72) = v21;
      double v24 = *(double *)(a1 + 80);
      double v25 = ">5s";
      if (v24 == -1.0)
      {
        int v26 = "na";
      }

      else if (v24 <= 0.5)
      {
        int v26 = "0.5s";
      }

      else if (v24 <= 1.0)
      {
        int v26 = "1s";
      }

      else if (v24 <= 2.0)
      {
        int v26 = "2s";
      }

      else if (v24 > 5.0)
      {
        int v26 = ">5s";
      }

      else
      {
        int v26 = "5s";
      }

      double v28 = *(double *)(a1 + 88);
      if (v28 == -1.0)
      {
        int v29 = "na";
      }

      else if (v28 <= 0.5)
      {
        int v29 = "0.5s";
      }

      else if (v28 <= 1.0)
      {
        int v29 = "1s";
      }

      else if (v28 <= 2.0)
      {
        int v29 = "2s";
      }

      else if (v28 > 5.0)
      {
        int v29 = ">5s";
      }

      else
      {
        int v29 = "5s";
      }

      if (v22 <= 5.0) {
        double v25 = "5s";
      }
      if (v22 <= 2.0) {
        double v25 = "2s";
      }
      if (v22 <= 1.0) {
        double v25 = "1s";
      }
      if (v22 <= 0.5) {
        double v25 = "0.5s";
      }
      if (v22 == -1.0) {
        int v30 = "na";
      }
      else {
        int v30 = v25;
      }
      if (v23 == -1.0)
      {
        BOOL v31 = "na";
      }

      else if (v23 <= 4.0)
      {
        BOOL v31 = "4s";
      }

      else if (v23 <= 7.0)
      {
        BOOL v31 = "7s";
      }

      else if (v23 <= 60.0)
      {
        BOOL v31 = "1m";
      }

      else if (v23 <= 840.0)
      {
        BOOL v31 = "14m";
      }

      else if (v23 <= 960.0)
      {
        BOOL v31 = "16m";
      }

      else if (v23 <= 1800.0)
      {
        BOOL v31 = "30m";
      }

      else if (v23 > 3600.0)
      {
        BOOL v31 = ">1h";
      }

      else
      {
        BOOL v31 = "1h";
      }

      if (qword_101934860 != -1) {
        dispatch_once(&qword_101934860, &stru_10183BF88);
      }
      char v32 = (os_log_s *)qword_101934868;
      if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v33 = v30;
        uint64_t v34 = (void *)(a1 + 120);
        __int16 v35 = v29;
        uint64_t v36 = v26;
        unsigned int v37 = *(_DWORD *)(a1 + 112) - 1;
        if (v37 > 6) {
          BOOL v38 = "none";
        }
        else {
          BOOL v38 = off_10183C030[v37];
        }
        unint64_t v39 = sub_100496B14(a3);
        int v40 = *(_DWORD *)(a1 + 104);
        if (v40 == 2)
        {
          BOOL v41 = "strong";
        }

        else if (v40)
        {
          BOOL v41 = "weak";
        }

        else if (*(_BYTE *)(a1 + 108))
        {
          BOOL v41 = "empty";
        }

        else
        {
          BOOL v41 = "unknown";
        }

        int v42 = *(unsigned __int8 *)(a1 + 109);
        *(_DWORD *)std::stringbuf::string_type buf = 136448258;
        *(void *)&uint8_t buf[4] = v34;
        *(_WORD *)&_BYTE buf[12] = 2082;
        *(void *)&_BYTE buf[14] = v38;
        *(_WORD *)&_BYTE buf[22] = 2082;
        uint64_t v81 = v39;
        __int16 v82 = 2082;
        uint64_t v83 = v41;
        __int16 v84 = 2082;
        int v26 = v36;
        uint64_t v85 = v36;
        __int16 v86 = 2082;
        int v29 = v35;
        uint64_t v87 = v35;
        __int16 v88 = 2082;
        int v30 = v33;
        __int128 v89 = v33;
        __int16 v90 = 2082;
        __int128 v91 = v31;
        __int16 v92 = 1026;
        int v93 = v42;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "WlpMetric, request, %{public}s, %{public}s, done, %{public}s, fix, %{public}s, tt, %{public}s, %{public}s, dur int, %{public}s, %{public}s, als, %{public}d",  buf,  0x58u);
      }

      if (sub_1002921D0(115, 2))
      {
        uint64_t v49 = v31;
        bzero(buf, 0x65CuLL);
        if (qword_101934860 != -1) {
          dispatch_once(&qword_101934860, &stru_10183BF88);
        }
        uint64_t v50 = (const char *)(a1 + 120);
        uint64_t v51 = qword_101934868;
        unsigned int v52 = *(_DWORD *)(a1 + 112) - 1;
        if (v52 > 6) {
          __int16 v53 = "none";
        }
        else {
          __int16 v53 = off_10183C030[v52];
        }
        int v54 = sub_100496B14(a3);
        int v55 = *(_DWORD *)(a1 + 104);
        if (v55 == 2)
        {
          uint64_t v56 = "strong";
        }

        else if (v55)
        {
          uint64_t v56 = "weak";
        }

        else if (*(_BYTE *)(a1 + 108))
        {
          uint64_t v56 = "empty";
        }

        else
        {
          uint64_t v56 = "unknown";
        }

        int v57 = *(unsigned __int8 *)(a1 + 109);
        int v62 = 136448258;
        __int16 v63 = v50;
        __int16 v64 = 2082;
        __int16 v65 = v53;
        __int16 v66 = 2082;
        __int16 v67 = v54;
        __int16 v68 = 2082;
        __int16 v69 = v56;
        __int16 v70 = 2082;
        uint64_t v71 = v26;
        __int16 v72 = 2082;
        uint64_t v73 = v29;
        __int16 v74 = 2082;
        __int128 v75 = v30;
        __int16 v76 = 2082;
        BOOL v31 = v49;
        uint64_t v77 = v49;
        __int16 v78 = 1026;
        int v79 = v57;
        LODWORD(v59) = 88;
        int v58 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  v51,  2LL,  "WlpMetric, request, %{public}s, %{public}s, done, %{public}s, fix, %{public}s, tt, %{public}s, % {public}s, durint, %{public}s, %{public}s, als, %{public}d",  &v62,  v59);
        sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationUpdateRequest::updateStep(Step, CFAbsoluteTime, DoneReason)",  "%s\n",  v58);
        if (v58 != buf) {
          free(v58);
        }
      }

      if (*(_BYTE *)(a1 + 110))
      {
        v60[0] = _NSConcreteStackBlock;
        v60[1] = 3221225472LL;
        _OWORD v60[2] = sub_100496B8C;
        v60[3] = &unk_10183BF48;
        unsigned int v61 = a3;
        v60[4] = a1;
        v60[5] = v26;
        v60[6] = v29;
        v60[7] = v30;
        v60[8] = v31;
        AnalyticsSendEventLazy(@"com.apple.clx.wifiloc.request", v60);
      }
    }

    else if (a2 == 1)
    {
      *(double *)(a1 + 64) = a4;
      __asm { FMOV            V0.2D, #-1.0 }

      *(_OWORD *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = _Q0;
      *(_DWORD *)(a1 + 104) = 0;
      *(_DWORD *)(a1 + 6sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = -1;
      *(void *)(a1 + 96) = 0xBFF0000000000000LL;
      *(_WORD *)(a1 + 108) = 1;
      *(_DWORD *)(a1 + 112) = *(_DWORD *)a1;
      if (*(char *)(a1 + 39) < 0)
      {
        sub_1010DD48C(buf, *(void **)(a1 + 16), *(void *)(a1 + 24));
      }

      else
      {
        *(_OWORD *)std::stringbuf::string_type buf = *(_OWORD *)(a1 + 16);
        *(void *)&uint8_t buf[16] = *(void *)(a1 + 32);
      }

      uint64_t v27 = (void **)(a1 + 120);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)buf;
      *(void *)(a1 + 136) = *(void *)&buf[16];
    }
  }

const char *sub_100496B14(unsigned int a1)
{
  if (a1 > 0xB) {
    return "na";
  }
  else {
    return off_10183BFD0[a1];
  }
}

char *sub_100496B38@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[39] < 0) {
    return (char *)sub_1010DD48C((_BYTE *)a2, *((void **)result + 2), *((void *)result + 3));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 1);
  *(void *)(a2 + 16) = *((void *)result + 4);
  return result;
}

const char *sub_100496B64(int a1)
{
  else {
    return off_10183C030[a1 - 1];
  }
}

NSDictionary *sub_100496B8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v10[0] = @"requester";
  int v3 = (void *)(v2 + 120);
  v11[0] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3);
  v10[1] = @"type";
  unsigned int v4 = *(_DWORD *)(v2 + 112) - 1;
  if (v4 > 6) {
    uint64_t v5 = "none";
  }
  else {
    uint64_t v5 = off_10183C030[v4];
  }
  v11[1] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v5);
  void v10[2] = @"result";
  _DWORD v11[2] = +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  sub_100496B14(*(_DWORD *)(a1 + 72)));
  void v10[3] = @"fix";
  int v6 = *(_DWORD *)(v2 + 104);
  if (v6 == 2)
  {
    uint64_t v7 = "strong";
  }

  else if (v6)
  {
    uint64_t v7 = "weak";
  }

  else if (*(_BYTE *)(v2 + 108))
  {
    uint64_t v7 = "empty";
  }

  else
  {
    uint64_t v7 = "unknown";
  }

  v11[3] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7);
  _DWORD v10[4] = @"ttff";
  _DWORD v11[4] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", *(void *)(a1 + 40));
  v10[5] = @"ttsf";
  v11[5] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", *(void *)(a1 + 48));
  v10[6] = @"duration";
  void v11[6] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", *(void *)(a1 + 56));
  v10[7] = @"interval";
  void v11[7] = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", *(void *)(a1 + 64));
  void v10[8] = @"als";
  __int128 v8 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(v2 + 109));
  v10[9] = @"daily";
  void v11[8] = v8;
  v11[9] = &off_1018D34A0;
  return +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v11,  v10,  10LL);
}

double sub_100496D94(uint64_t a1, int a2, double result)
{
  if (a2 >= 1)
  {
    double v3 = *(double *)(a1 + 64);
    if (v3 != -1.0)
    {
      if (*(double *)(a1 + 80) == -1.0)
      {
        *(double *)(a1 + 8sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = result - v3;
        *(_DWORD *)(a1 + 104) = a2;
      }

      if (a2 == 2 && *(double *)(a1 + 88) == -1.0)
      {
        BOOL result = result - v3;
        *(double *)(a1 + 88) = result;
        *(_DWORD *)(a1 + 104) = 2;
      }
    }
  }

  return result;
}

BOOL sub_100496DF0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 56);
  return v1 && v1 < 5;
}

_DWORD *sub_100496E04(_DWORD *result, _DWORD *a2)
{
  void *result = *a2;
  return result;
}

uint64_t sub_100496E10(unsigned int *a1)
{
  return *a1;
}

uint64_t sub_100496E18(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 8) = *a2;
  return result;
}

uint64_t sub_100496E24(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

double sub_100496E2C(uint64_t a1, double *a2)
{
  double result = *a2;
  *(double *)(a1 + 4sub_100222B94(v13, (uint64_t)"wifi1Event", 0) = *a2;
  return result;
}

double sub_100496E38(uint64_t a1)
{
  return *(double *)(a1 + 40);
}

uint64_t sub_100496E40(uint64_t result, _DWORD *a2)
{
  *(_DWORD *)(result + 48) = *a2;
  return result;
}

uint64_t sub_100496E4C(uint64_t result)
{
  return result;
}

uint64_t sub_100496E5C@<X0>(uint64_t a1@<X0>, std::stringbuf::string_type *a2@<X8>)
{
  unsigned int v4 = sub_10000CF44(&v29, (uint64_t)"Request, type, ", 15LL);
  unsigned int v5 = *(_DWORD *)a1 - 1;
  if (v5 > 6) {
    int v6 = "none";
  }
  else {
    int v6 = off_10183C030[v5];
  }
  size_t v7 = strlen(v6);
  __int128 v8 = sub_10000CF44(v4, (uint64_t)v6, v7);
  double v9 = sub_10000CF44(v8, (uint64_t)", lowPriority, ", 15LL);
  if (*(_BYTE *)(a1 + 8)) {
    int v10 = "yes";
  }
  else {
    int v10 = "no";
  }
  if (*(_BYTE *)(a1 + 8)) {
    uint64_t v11 = 3LL;
  }
  else {
    uint64_t v11 = 2LL;
  }
  double v12 = sub_10000CF44(v9, (uint64_t)v10, v11);
  unsigned int v13 = sub_10000CF44(v12, (uint64_t)", requester, ", 13LL);
  int v14 = *(char *)(a1 + 39);
  if (v14 >= 0) {
    uint64_t v15 = a1 + 16;
  }
  else {
    uint64_t v15 = *(void *)(a1 + 16);
  }
  if (v14 >= 0) {
    uint64_t v16 = *(unsigned __int8 *)(a1 + 39);
  }
  else {
    uint64_t v16 = *(void *)(a1 + 24);
  }
  uint64_t v17 = sub_10000CF44(v13, v15, v16);
  int v18 = sub_10000CF44(v17, (uint64_t)", numOfRequestedScans, ", 23LL);
  __int16 v19 = (void *)std::ostream::operator<<(v18, *(unsigned int *)(a1 + 48));
  double v20 = sub_10000CF44(v19, (uint64_t)", timestamp, ", 13LL);
  uint64_t v21 = *v20;
  *(_DWORD *)((char *)v20 + *(void *)(*v20 - 24) + 8) = *(_DWORD *)((_BYTE *)v20 + *(void *)(*v20 - 24) + 8) & 0xFFFFFEFB | 4;
  *(uint64_t *)((char *)v20 + *(void *)(v21 - 24) + 16) = 1LL;
  double v22 = (void *)std::ostream::operator<<(*(double *)(a1 + 40));
  double v23 = sub_10000CF44(v22, (uint64_t)", age, ", 7LL);
  uint64_t v24 = *v23;
  *(_DWORD *)((char *)v23 + *(void *)(*v23 - 24) + 8) = *(_DWORD *)((_BYTE *)v23 + *(void *)(*v23 - 24) + 8) & 0xFFFFFEFB | 4;
  *(uint64_t *)((char *)v23 + *(void *)(v24 - 24) + 16) = 1LL;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  std::ostream::operator<<(Current - *(double *)(a1 + 40));
  std::stringbuf::str(a2, &v30);
  *(void *)((char *)v28
  uint64_t v29 = v26;
  std::streambuf::~streambuf(&v30);
  return std::ios::~ios(&v31);
}

void sub_100497084(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

const char *sub_1004970A0(_DWORD *a1)
{
  unsigned int v1 = *a1 - 1;
  if (v1 > 6) {
    return "none";
  }
  else {
    return off_10183C030[v1];
  }
}

void sub_1004970CC(unsigned int a1)
{
  if (a1 > 5) {
    unsigned int v1 = "";
  }
  else {
    unsigned int v1 = off_10183C068[a1];
  }
  if (qword_101934860 != -1) {
    dispatch_once(&qword_101934860, &stru_10183BF88);
  }
  uint64_t v2 = (os_log_s *)qword_101934868;
  if (os_log_type_enabled((os_log_t)qword_101934868, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::stringbuf::string_type buf = 136446210;
    size_t v7 = v1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "@WifiFlow, outcome, %{public}s", buf, 0xCu);
  }

  if (sub_1002921D0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_101934860 != -1) {
      dispatch_once(&qword_101934860, &stru_10183BF88);
    }
    int v4 = 136446210;
    unsigned int v5 = v1;
    double v3 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934868,  0LL,  "@WifiFlow, outcome, %{public}s",  &v4,  12);
    sub_10029211C( "Generic",  1LL,  0,  2LL,  "static void CLWifiLocationUpdateRequest::logLocationRequestOutcome(CLWifiLocationUpdateRequest::Outcome)",  "%s\n",  v3);
  }

void sub_100497290(id a1)
{
  qword_101934858 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1004972BC(id a1)
{
  qword_101934868 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

uint64_t sub_1004972E8(uint64_t a1, char *a2, uint64_t a3, double a4)
{
  double v14 = a4;
  sub_100400554(a1, (uint64_t *)a3, &v14);
  *(void *)a1 = off_10183C0A8;
  sub_100D2D9A4(a1 + 232);
  sub_1010DDBC0((void *)(a1 + 272), a2);
  if (*(_BYTE *)(a3 + 8))
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C0E8);
    }
    size_t v7 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      *(void *)&uint8_t buf[4] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "read only database - not creating bounding boxes, tableName, %s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C0E8);
      }
      int v15 = 136315138;
      uint64_t v16 = a2;
      __int128 v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "read only database - not creating bounding boxes, tableName, %s",  (const char *)&v15);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationDatabase::CLWifiLocationDatabase(const char *, const CLSqliteDatabase::SqliteProperties &, double)",  "%s\n",  v8);
LABEL_32:
    }
  }

  else
  {
    if (qword_101934A70 != -1) {
      dispatch_once(&qword_101934A70, &stru_10183C0E8);
    }
    double v9 = (os_log_s *)qword_101934A78;
    if (os_log_type_enabled((os_log_t)qword_101934A78, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136315138;
      *(void *)&uint8_t buf[4] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "platform does not support WiFi location monitoring - not creating bounding boxes, tableName, %s",  buf,  0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A70 != -1) {
        dispatch_once(&qword_101934A70, &stru_10183C0E8);
      }
      int v15 = 136315138;
      uint64_t v16 = a2;
      __int128 v8 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  qword_101934A78,  2LL,  "platform does not support WiFi location monitoring - not creating bounding boxes, tableName, %s",  (const char *)&v15);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationDatabase::CLWifiLocationDatabase(const char *, const CLSqliteDatabase::SqliteProperties &, double)",  "%s\n",  v8);
      goto LABEL_32;
    }
  }

  if (sub_1003C1048(a1 + 64))
  {
    *(_OWORD *)std::stringbuf::string_type buf = off_10183C0C0;
    int v10 = (char *)(a1 + 272);
    sub_1003B59A0(a1 + 64, v10, (const char **)&qword_101995D30, (const std::string::value_type **)buf, 0);
    sub_100400684(a1);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_10183C108);
    }
    uint64_t v11 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::stringbuf::string_type buf = 136380675;
      *(void *)&uint8_t buf[4] = "CLWifiLocationDatabase";
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "#Warning Database is not valid; not initializing in %{private}s",
        buf,
        0xCu);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_10183C108);
      }
      int v15 = 136380675;
      uint64_t v16 = "CLWifiLocationDatabase";
      unsigned int v13 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  0LL,  "#Warning Database is not valid; not initializing in %{private}s",
                      &v15,
                      12);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "CLWifiLocationDatabase::CLWifiLocationDatabase(const char *, const CLSqliteDatabase::SqliteProperties &, double)",  "%s\n",  v13);
    }
  }

  return a1;
}

void sub_1004977B4(_Unwind_Exception *a1)
{
}

char *sub_1004977FC@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[295] < 0) {
    return (char *)sub_1010DD48C((_BYTE *)a2, *((void **)result + 34), *((void *)result + 35));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 17);
  *(void *)(a2 + 16) = *((void *)result + 36);
  return result;
}

void sub_100497828(uint64_t a1, uint64_t a2)
{
  if (sub_100400B64(a1))
  {
    sub_10000CE18((uint64_t)buf);
    int v4 = sub_10000CF44(&v75, (uint64_t)"INSERT OR REPLACE INTO ", 23LL);
    unsigned int v5 = (const char *)(a1 + 272);
    size_t v6 = strlen(v5);
    size_t v7 = sub_10000CF44(v4, (uint64_t)v5, v6);
    __int128 v8 = sub_10000CF44(v7, (uint64_t)"(", 3LL);
    double v9 = sub_10000CF44(v8, (uint64_t)"MAC", 3LL);
    int v10 = sub_10000CF44(v9, (uint64_t)",", 1LL);
    size_t v11 = strlen("Timestamp");
    double v12 = sub_10000CF44(v10, (uint64_t)"Timestamp", v11);
    unsigned int v13 = sub_10000CF44(v12, (uint64_t)",", 1LL);
    size_t v14 = strlen("Latitude");
    int v15 = sub_10000CF44(v13, (uint64_t)"Latitude", v14);
    uint64_t v16 = sub_10000CF44(v15, (uint64_t)",", 1LL);
    size_t v17 = strlen("Longitude");
    int v18 = sub_10000CF44(v16, (uint64_t)"Longitude", v17);
    __int16 v19 = sub_10000CF44(v18, (uint64_t)",", 1LL);
    size_t v20 = strlen("HorizontalAccuracy");
    uint64_t v21 = sub_10000CF44(v19, (uint64_t)"HorizontalAccuracy", v20);
    double v22 = sub_10000CF44(v21, (uint64_t)",", 1LL);
    size_t v23 = strlen("Altitude");
    uint64_t v24 = sub_10000CF44(v22, (uint64_t)"Altitude", v23);
    double v25 = sub_10000CF44(v24, (uint64_t)",", 1LL);
    size_t v26 = strlen("VerticalAccuracy");
    uint64_t v27 = sub_10000CF44(v25, (uint64_t)"VerticalAccuracy", v26);
    double v28 = sub_10000CF44(v27, (uint64_t)",", 1LL);
    size_t v29 = strlen("Speed");
    std::stringbuf v30 = sub_10000CF44(v28, (uint64_t)"Speed", v29);
    uint64_t v31 = sub_10000CF44(v30, (uint64_t)",", 1LL);
    size_t v32 = strlen("Course");
    uint64_t v33 = sub_10000CF44(v31, (uint64_t)"Course", v32);
    uint64_t v34 = sub_10000CF44(v33, (uint64_t)",", 1LL);
    size_t v35 = strlen("Confidence");
    uint64_t v36 = sub_10000CF44(v34, (uint64_t)"Confidence", v35);
    unsigned int v37 = sub_10000CF44(v36, (uint64_t)",", 1LL);
    size_t v38 = strlen("Score");
    unint64_t v39 = sub_10000CF44(v37, (uint64_t)"Score", v38);
    int v40 = sub_10000CF44(v39, (uint64_t)",", 1LL);
    size_t v41 = strlen("Reach");
    int v42 = sub_10000CF44(v40, (uint64_t)"Reach", v41);
    uint64_t v43 = sub_10000CF44(v42, (uint64_t)",", 1LL);
    BOOL v44 = sub_10000CF44(v43, (uint64_t)"Channel", 7LL);
    __int16 v45 = sub_10000CF44(v44, (uint64_t)",", 1LL);
    unsigned int v46 = sub_10000CF44(v45, (uint64_t)"FenceForeignKey", 15LL);
    __int16 v47 = sub_10000CF44(v46, (uint64_t)",", 1LL);
    uint64_t v48 = sub_10000CF44(v47, (uint64_t)"InfoMask", 8LL);
    uint64_t v49 = sub_10000CF44(v48, (uint64_t)",", 1LL);
    size_t v50 = strlen("ZaxisHarvestTraces");
    uint64_t v51 = sub_10000CF44(v49, (uint64_t)"ZaxisHarvestTraces", v50);
    unsigned int v52 = sub_10000CF44(v51, (uint64_t)") ", 3LL);
    __int16 v53 = sub_10000CF44(v52, (uint64_t)" VALUES ", 8LL);
    sub_10000CF44(v53, (uint64_t)"(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);", 34LL);
    std::stringbuf::str(&v72, &v76);
    uint64_t v54 = a1 + 64;
    if ((v72.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v55 = &v72;
    }
    else {
      int v55 = (std::stringbuf::string_type *)v72.__r_.__value_.__r.__words[0];
    }
    sub_1003C0D54(v54, (char *)v55, &v73);
    uint64_t v56 = (sqlite3_stmt *)sub_100019240(v73);
    double v57 = *(double *)(a2 + 12);
    double v58 = *(double *)(a2 + 20);
    double v59 = *(double *)(a2 + 28);
    double v60 = *(double *)(a2 + 36);
    double v61 = *(double *)(a2 + 44);
    double v62 = *(double *)(a2 + 52);
    double v63 = *(double *)(a2 + 68);
    double v64 = *(double *)(a2 + 84);
    int v65 = *(_DWORD *)(a2 + 92);
    v72.__r_.__value_.__r.__words[0] = *(void *)a2;
    sqlite3_int64 v66 = sub_1005B46E8((uint64_t)&v72);
    if (!sub_1003C2D24(v56, 1, v66)
      || !sub_1003B7480(v56, 2, v64)
      || !sub_1003B7480(v56, 3, v57)
      || !sub_1003B7480(v56, 4, v58)
      || !sub_1003B7480(v56, 5, v59)
      || !sub_1003B7480(v56, 6, v60)
      || !sub_1003B7480(v56, 7, v61)
      || !sub_1003B7480(v56, 8, v62)
      || !sub_1003B7480(v56, 9, v63)
      || !sub_1003C28BC(v56, 10, v65)
      || !sub_1003C28BC(v56, 11, *(_DWORD *)(a2 + 164))
      || !sub_1003C28BC(v56, 12, *(_DWORD *)(a2 + 172))
      || !sub_1003C28BC(v56, 13, *(_DWORD *)(a2 + 168))
      || !sub_1003C28BC(v56, 14, *(_DWORD *)(a2 + 176))
      || !sub_1003C2AF0(v56, 15, *(_DWORD *)(a2 + 180))
      || !sub_1003C28BC(v56, 16, *(_DWORD *)(a2 + 184))
      || (sub_1003BB2BC(v54, v56), sub_1003C10E4(v54) <= 0))
    {
      exception = __cxa_allocate_exception(0x48uLL);
      sub_1003C1058(v54, (uint64_t)exception);
    }

    uint64_t v67 = v73;
    uint64_t v73 = 0LL;
    if (v67) {
      (*(void (**)(uint64_t))(*(void *)v67 + 8LL))(v67);
    }
    uint64_t v75 = v68;
    std::streambuf::~streambuf(&v76);
    std::ios::~ios(&v77);
  }

  else
  {
    if (qword_101934A20 != -1) {
      dispatch_once(&qword_101934A20, &stru_10183C108);
    }
    __int16 v69 = (os_log_s *)off_101934A28;
    if (os_log_type_enabled((os_log_t)off_101934A28, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::stringbuf::string_type buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEBUG,  "#Warning Attempt to call save() without a backing database in CLWifiLocationDatabase!",  buf,  2u);
    }

    if (sub_1002921D0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_101934A20 != -1) {
        dispatch_once(&qword_101934A20, &stru_10183C108);
      }
      LOWORD(v72.__r_.__value_.__l.__data_) = 0;
      __int16 v70 = (char *)_os_log_send_and_compose_impl( 2LL,  0LL,  buf,  1628LL,  &_mh_execute_header,  off_101934A28,  2LL,  "#Warning Attempt to call save() without a backing database in CLWifiLocationDatabase!",  &v72,  2);
      sub_10029211C( "Generic",  1LL,  0,  2LL,  "void CLWifiLocationDatabase::save(const CLWifiLocationDatabaseEntry &)",  "%s\n",  v70);
    }
  }